tiny	2	0	left	right
c	a	net/minecraft/util/math/Matrix3f
	f	F	a	a00
	f	F	b	a01
	f	F	c	a02
	f	F	d	a10
	f	F	e	a11
	f	F	f	a12
	f	F	g	a20
	f	F	h	a21
	f	F	i	a22
	f	F	j	THREE_PLUS_TWO_SQRT_TWO
	f	F	k	COS_PI_OVER_EIGHT
	f	F	l	SIN_PI_OVER_EIGHT
	f	F	m	SQRT_HALF
	m	(Ld;)V	<init>	<init>
		p	1	source	source
	m	(La;)V	<init>	<init>
		p	1	source	source
	m	(Lb;)V	<init>	<init>
		p	1	source	source
	m	(FFF)Lcom/mojang/datafixers/util/Pair;	a	getSinAndCosOfRotation
		p	0	upperLeft	upperLeft
		p	1	diagonalAverage	diagonalAverage
		p	2	lowerRight	lowerRight
	m	(Ld;)V	a	multiply
	m	(F)V	a	multiply
		p	1	scalar	scalar
	m	(La;)V	a	load
		p	1	source	source
	m	()V	a	transpose
	m	(IIF)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	value	value
	m	(La;)V	b	multiply
		p	1	other	other
	m	()Lorg/apache/commons/lang3/tuple/Triple;	b	decomposeLinearTransformation
	m	(FFF)La;	b	scale
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	()V	c	loadIdentity
	m	()La;	d	copy
	m	()F	e	determinantAndAdjugate
	m	()Z	f	invert
c	aa	net/minecraft/advancement/criterion/Criteria
	f	Lax;	A	EFFECTS_CHANGED
	f	Lcr;	B	USED_TOTEM
	f	Lca;	C	NETHER_TRAVEL
	f	Lbi;	D	FISHING_ROD_HOOKED
	f	Lap;	E	CHANNELED_LIGHTNING
	f	Lch;	F	SHOT_CROSSBOW
	f	Lbq;	G	KILLED_BY_CROSSBOW
	f	Lbv;	H	HERO_OF_THE_VILLAGE
	f	Lbv;	I	VOLUNTARY_EXILE
	f	Lcj;	J	SLIDE_DOWN_BLOCK
	f	Lak;	K	BEE_NEST_DESTROYED
	f	Lcn;	L	TARGET_HIT
	f	Lbp;	M	ITEM_USED_ON_BLOCK
	f	Lbw;	N	PLAYER_GENERATES_CONTAINER_LOOT
	f	Lbn;	O	THROWN_ITEM_PICKED_UP_BY_ENTITY
	f	Lcd;	P	PLAYER_INTERACTED_WITH_ENTITY
	f	Ljava/util/Map;	Q	VALUES
	f	Lbk;	a	IMPOSSIBLE
	f	Lbr;	b	PLAYER_KILLED_ENTITY
	f	Lbr;	c	ENTITY_KILLED_PLAYER
	f	Lba;	d	ENTER_BLOCK
	f	Lbl;	e	INVENTORY_CHANGED
	f	Lcf;	f	RECIPE_UNLOCKED
	f	Lcc;	g	PLAYER_HURT_ENTITY
	f	Lbd;	h	ENTITY_HURT_PLAYER
	f	Lay;	i	ENCHANTED_ITEM
	f	Lbg;	j	FILLED_BUCKET
	f	Lan;	k	BREWED_POTION
	f	Laq;	l	CONSTRUCT_BEACON
	f	Lcq;	m	USED_ENDER_EYE
	f	Lcl;	n	SUMMONED_ENTITY
	f	Lam;	o	BRED_ANIMALS
	f	Lbv;	p	LOCATION
	f	Lbv;	q	SLEPT_IN_BED
	f	Las;	r	CURED_ZOMBIE_VILLAGER
	f	Lcp;	s	VILLAGER_TRADE
	f	Lbm;	t	ITEM_DURABILITY_CHANGED
	f	Lbs;	u	LEVITATION
	f	Lao;	v	CHANGED_DIMENSION
	f	Lco;	w	TICK
	f	Lcm;	x	TAME_ANIMAL
	f	Lcb;	y	PLACED_BLOCK
	f	Lar;	z	CONSUME_ITEM
	m	(Lad;)Lad;	a	register
		p	0	object	object
	m	(Luh;)Lad;	a	getById
		p	0	id	id
	m	()Ljava/lang/Iterable;	a	getCriteria
c	aab	net/minecraft/resource/AbstractFileResourcePack
	f	Ljava/io/File;	a	base
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/io/File;)V	<init>	<init>
		p	1	base	base
	m	(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;	a	relativize
		p	0	base	base
		p	1	target	target
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	openFile
		p	1	name	name
	m	(Laai;Ljava/io/InputStream;)Ljava/lang/Object;	a	parseMetadata
		p	0	metaReader	metaReader
		p	1	inputStream	inputStream
	m	(Ljava/lang/String;)Z	c	containsFile
		p	1	name	name
	m	(Laaf;Luh;)Ljava/lang/String;	c	getFilename
		p	0	type	type
		p	1	id	id
	m	(Ljava/lang/String;)V	d	warnNonLowerCaseNamespace
		p	1	namespace	namespace
c	aac	net/minecraft/resource/ZipResourcePack
	f	Lcom/google/common/base/Splitter;	b	TYPE_NAMESPACE_SPLITTER
	f	Ljava/util/zip/ZipFile;	c	file
	m	()Ljava/util/zip/ZipFile;	b	getZipFile
c	aad	net/minecraft/resource/DirectoryResourcePack
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Z	c	IS_WINDOWS
	f	Lcom/google/common/base/CharMatcher;	d	BACKSLASH_MATCHER
	m	(Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	findFiles
		p	1	file	file
		p	2	maxDepth	maxDepth
		p	3	namespace	namespace
		p	4	found	found
		p	5	prefix	prefix
		p	6	pathFilter	pathFilter
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	isValidPath
		p	0	file	file
		p	1	filename	filename
	m	(Ljava/lang/String;)Ljava/io/File;	e	getFile
		p	1	name	name
c	aae	net/minecraft/resource/ResourcePack
	m	(Laaf;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	findResources
		p	1	type	type
		p	2	namespace	namespace
		p	3	prefix	prefix
		p	4	maxDepth	maxDepth
		p	5	pathFilter	pathFilter
	m	(Laai;)Ljava/lang/Object;	a	parseMetadata
		p	1	metaReader	metaReader
	m	()Ljava/lang/String;	a	getName
	m	(Laaf;)Ljava/util/Set;	a	getNamespaces
		p	1	type	type
	m	(Laaf;Luh;)Ljava/io/InputStream;	a	open
		p	1	type	type
		p	2	id	id
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	openRoot
		p	1	fileName	fileName
	m	(Laaf;Luh;)Z	b	contains
		p	1	type	type
		p	2	id	id
c	aaf	net/minecraft/resource/ResourceType
	f	Ljava/lang/String;	c	directory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getDirectory
c	aag	net/minecraft/resource/ResourceNotFoundException
	m	(Ljava/io/File;Ljava/lang/String;)V	<init>	<init>
		p	1	packSource	packSource
		p	2	resource	resource
c	aah	net/minecraft/resource/DefaultResourcePack
	f	Ljava/nio/file/Path;	a	resourcePath
	f	Ljava/lang/Class;	b	resourceClass
	f	Ljava/util/Set;	c	namespaces
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Ljava/util/Map;	e	typeToFileSystem
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1	namespaces	namespaces
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getInputStream
		p	1	path	path
	m	(Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	getIdentifiers
		p	1	maxDepth	maxDepth
		p	2	namespace	namespace
		p	4	searchLocation	searchLocation
	m	(Ljava/lang/String;Ljava/net/URL;)Z	a	isValidUrl
		p	0	fileName	fileName
		p	1	url	url
	m	(Laaf;Luh;)Ljava/io/InputStream;	c	findInputStream
		p	1	type	type
		p	2	id	id
	m	(Laaf;Luh;)Ljava/lang/String;	d	getPath
		p	0	type	type
		p	1	id	id
c	aai	net/minecraft/resource/metadata/ResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1	json	json
	m	()Ljava/lang/String;	a	getKey
c	aaj	net/minecraft/resource/metadata/PackResourceMetadata
	f	Laak;	a	READER
	f	Lmr;	b	description
	f	I	c	packFormat
	m	(Lmr;I)V	<init>	<init>
		p	1	description	description
		p	2	format	format
	m	()Lmr;	a	getDescription
	m	()I	b	getPackFormat
c	aak	net/minecraft/resource/metadata/PackResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Laaj;	b	fromJson
c	aao	net/minecraft/resource/FileResourcePackProvider
	f	Ljava/io/FileFilter;	a	POSSIBLE_PACK
	f	Ljava/io/File;	b	packsFolder
	m	(Ljava/io/File;Laas;)V	<init>	<init>
		p	1	packsFolder	packsFolder
	m	(Ljava/io/File;)Ljava/util/function/Supplier;	a	createResourcePack
		p	1	file	file
c	aap	net/minecraft/resource/ResourcePackProfile
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Laaj;	b	BROKEN_PACK_META
	f	Ljava/lang/String;	c	name
	f	Ljava/util/function/Supplier;	d	packGetter
	f	Lmr;	e	displayName
	f	Lmr;	f	description
	f	Laaq;	g	compatibility
	f	Laap$b;	h	position
	f	Z	i	alwaysEnabled
	f	Z	j	pinned
	f	Laas;	k	source
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lmr;Lmr;Laaq;Laap$b;ZLaas;)V	<init>	<init>
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	displayName	displayName
		p	5	description	description
		p	6	compatibility	compatibility
		p	7	direction	direction
		p	8	pinned	pinned
		p	9	source	source
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Laae;Laaj;Laap$b;Laas;)V	<init>	<init>
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	pack	pack
		p	5	metadata	metadata
		p	6	direction	direction
		p	7	source	source
	m	(Z)Lmr;	a	getInformationText
		p	1	enabled	enabled
	m	()Lmr;	a	getDisplayName
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Laap$a;Laap$b;Laas;)Laap;	a	of
		p	0	name	name
		p	1	alwaysEnabled	alwaysEnabled
		p	2	packFactory	packFactory
		p	3	containerFactory	containerFactory
		p	4	insertionPosition	insertionPosition
	m	()Lmr;	b	getDescription
	m	()Laaq;	c	getCompatibility
	m	()Laae;	d	createResourcePack
	m	()Ljava/lang/String;	e	getName
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Z	f	isAlwaysEnabled
	m	()Z	g	isPinned
	m	()Laap$b;	h	getInitialPosition
	m	()Laas;	i	getSource
c	aap$a	net/minecraft/resource/ResourcePackProfile$Factory
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Laae;Laaj;Laap$b;Laas;)Laap;	create	create
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	pack	pack
		p	5	metadata	metadata
		p	6	initialPosition	initialPosition
		p	7	source	source
c	aap$b	net/minecraft/resource/ResourcePackProfile$InsertionPosition
	m	()Laap$b;	a	inverse
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
		p	1	items	items
		p	2	item	item
		p	3	profileGetter	profileGetter
		p	4	listInverted	listInverted
c	aaq	net/minecraft/resource/ResourcePackCompatibility
	f	Lmr;	d	notification
	f	Lmr;	e	confirmMessage
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	translationSuffix	translationSuffix
	m	(I)Laaq;	a	from
		p	0	packVersion	packVersion
	m	()Z	a	isCompatible
	m	()Lmr;	b	getNotification
	m	()Lmr;	c	getConfirmMessage
c	aar	net/minecraft/resource/ResourcePackManager
	f	Ljava/util/Set;	a	providers
	f	Ljava/util/Map;	b	profiles
	f	Ljava/util/List;	c	enabled
	f	Laap$a;	d	profileFactory
	m	(Laap$a;[Laat;)V	<init>	<init>
		p	1	profileFactory	profileFactory
		p	2	providers	providers
	m	()V	a	scanPacks
	m	(Ljava/util/Collection;)V	a	setEnabledProfiles
		p	1	enabled	enabled
	m	(Ljava/lang/String;)Laap;	a	getProfile
		p	1	name	name
	m	()Ljava/util/Collection;	b	getNames
	m	(Ljava/util/Collection;)Ljava/util/List;	b	buildEnabledProfiles
		p	1	enabledNames	enabledNames
	m	(Ljava/lang/String;)Z	b	hasProfile
		p	1	name	name
	m	()Ljava/util/Collection;	c	getProfiles
	m	(Ljava/util/Collection;)Ljava/util/stream/Stream;	c	streamProfilesByName
		p	1	names	names
	m	()Ljava/util/Collection;	d	getEnabledNames
	m	()Ljava/util/Collection;	e	getEnabledProfiles
	m	()Ljava/util/List;	f	createResourcePacks
	m	()Ljava/util/Map;	g	providePackProfiles
c	aas	net/minecraft/resource/ResourcePackSource
c	aat	net/minecraft/resource/ResourcePackProvider
	m	(Ljava/util/function/Consumer;Laap$a;)V	a	register
		p	2	factory	factory
c	aau	net/minecraft/resource/VanillaDataPackProvider
	f	Laah;	a	pack
c	aaw	net/minecraft/resource/NamespaceResourceManager
	f	Ljava/util/List;	a	packList
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Laaf;	c	type
	f	Ljava/lang/String;	d	namespace
	m	(Laaf;Ljava/lang/String;)V	<init>	<init>
		p	1	type	type
		p	2	namespace	namespace
	m	(Laae;)V	a	addPack
		p	1	pack	pack
	m	(Luh;Laae;)Ljava/io/InputStream;	a	open
		p	1	id	id
		p	2	pack	pack
	m	(Luh;)Luh;	d	getMetadataPath
		p	0	id	id
	m	(Luh;)V	e	validate
		p	1	id	id
	m	(Luh;)Z	f	isPathAbsolute
		p	1	id	id
c	aaw$a	net/minecraft/resource/NamespaceResourceManager$DebugInputStream
	f	Ljava/lang/String;	a	leakMessage
	f	Z	b	closed
	m	(Ljava/io/InputStream;Luh;Ljava/lang/String;)V	<init>	<init>
		p	1	parent	parent
		p	2	id	id
		p	3	packName	packName
c	aax	net/minecraft/resource/ResourceReloadListener
	m	(Laax$a;Labc;Lami;Lami;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1	synchronizer	synchronizer
		p	2	manager	manager
		p	3	prepareProfiler	prepareProfiler
		p	4	applyProfiler	applyProfiler
		p	5	prepareExecutor	prepareExecutor
		p	6	applyExecutor	applyExecutor
	m	()Ljava/lang/String;	c	getName
c	aax$a	net/minecraft/resource/ResourceReloadListener$Synchronizer
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	whenPrepared
		p	1	preparedObject	preparedObject
c	aay	net/minecraft/resource/ProfilingResourceReloader
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lcom/google/common/base/Stopwatch;	e	reloadTimer
	m	(Labc;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1	manager	manager
		p	2	listeners	listeners
		p	3	prepareExecutor	prepareExecutor
		p	4	applyExecutor	applyExecutor
	m	(Ljava/util/concurrent/Executor;Laax$a;Labc;Laax;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	method_18355
		p	4	prepareExecutor	prepareExecutor
		p	5	applyExecutor	applyExecutor
	m	(Ljava/util/List;)V	a	finish
		p	1	summaries	summaries
c	aay$a	net/minecraft/resource/ProfilingResourceReloader$Summary
	f	Ljava/lang/String;	a	name
	f	Lamh;	b	prepareProfile
	f	Lamh;	c	applyProfile
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	prepareTimeMs
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	applyTimeMs
	m	(Ljava/lang/String;Lamh;Lamh;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	<init>	<init>
		p	1	name	name
		p	2	prepareProfile	prepareProfile
		p	3	applyProfile	applyProfile
		p	4	prepareTimeMs	prepareTimeMs
		p	5	applyTimeMs	applyTimeMs
c	aaz	net/minecraft/resource/ResourceReloadMonitor
	m	()Ljava/util/concurrent/CompletableFuture;	a	whenComplete
	m	()F	b	getProgress
	m	()Z	c	isPrepareStageComplete
	m	()Z	d	isApplyStageComplete
	m	()V	e	throwExceptions
c	ab	net/minecraft/advancement/AdvancementCriterion
	f	Lae;	a	conditions
	m	(Lae;)V	<init>	<init>
		p	1	conditions	conditions
	m	(Lcom/google/gson/JsonObject;Lav;)Lab;	a	fromJson
		p	0	obj	obj
		p	1	predicateDeserializer	predicateDeserializer
	m	(Ljava/util/Map;Lmg;)V	a	criteriaToPacket
		p	0	criteria	criteria
		p	1	buf	buf
	m	()Lae;	a	getConditions
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	(Lcom/google/gson/JsonObject;Lav;)Ljava/util/Map;	b	criteriaFromJson
		p	0	obj	obj
		p	1	predicateDeserializer	predicateDeserializer
	m	()Lcom/google/gson/JsonElement;	b	toJson
	m	(Lmg;)Lab;	b	fromPacket
		p	0	buf	buf
	m	(Lmg;)Ljava/util/Map;	c	criteriaFromPacket
		p	0	buf	buf
c	aba	net/minecraft/resource/ReloadableResourceManager
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;	a	beginReload
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	packs	packs
		p	4	initialStage	initialStage
	m	(Laax;)V	a	registerListener
		p	1	listener	listener
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Laaz;	a	beginMonitoredReload
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	initialStage	initialStage
		p	4	packs	packs
c	abb	net/minecraft/resource/Resource
	m	(Laai;)Ljava/lang/Object;	a	getMetadata
		p	1	metaReader	metaReader
	m	()Luh;	a	getId
	m	()Ljava/io/InputStream;	b	getInputStream
	m	()Ljava/lang/String;	d	getResourcePackName
c	abc	net/minecraft/resource/ResourceManager
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	findResources
		p	1	resourceType	resourceType
		p	2	pathPredicate	pathPredicate
	m	(Luh;)Labb;	a	getResource
		p	1	id	id
	m	(Luh;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	findResources
		p	1	resourceType	resourceType
	m	()Ljava/util/Set;	a	getAllNamespaces
	m	()Ljava/util/stream/Stream;	b	streamResourcePacks
	m	(Luh;)Z	b	containsResource
		p	1	id	id
	m	(Luh;)Ljava/util/List;	c	getAllResources
		p	1	id	id
c	abc$a	net/minecraft/resource/ResourceManager$Empty
c	abd	net/minecraft/resource/SynchronousResourceReloadListener
	m	(Labc;)V	a	apply
		p	1	manager	manager
c	abe	net/minecraft/resource/JsonDataLoader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	FILE_SUFFIX_LENGTH
	f	Lcom/google/gson/Gson;	c	gson
	f	Ljava/lang/String;	d	dataType
	m	(Lcom/google/gson/Gson;Ljava/lang/String;)V	<init>	<init>
		p	1	gson	gson
		p	2	dataType	dataType
	m	(Labc;Lami;)Ljava/util/Map;	a	prepare
c	abf	net/minecraft/resource/SinglePreparationResourceReloadListener
	m	(Ljava/lang/Object;Labc;Lami;)V	a	apply
		p	1	loader	loader
		p	2	manager	manager
		p	3	profiler	profiler
	m	(Labc;Lami;)Ljava/lang/Object;	b	prepare
		p	1	manager	manager
		p	2	profiler	profiler
c	abg	net/minecraft/resource/ResourceReloader
	f	Labc;	a	manager
	f	Ljava/util/concurrent/CompletableFuture;	b	prepareStageFuture
	f	Ljava/util/concurrent/CompletableFuture;	c	applyStageFuture
	f	Ljava/util/Set;	d	waitingListeners
	f	I	e	listenerCount
	f	I	f	applyingCount
	f	I	g	appliedCount
	f	Ljava/util/concurrent/atomic/AtomicInteger;	h	preparingCount
	f	Ljava/util/concurrent/atomic/AtomicInteger;	i	preparedCount
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Labc;Ljava/util/List;Labg$a;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	manager	manager
		p	4	listeners	listeners
		p	5	creator	creator
		p	6	initialStage	initialStage
	m	(Labc;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Labg;	a	create
		p	0	manager	manager
		p	1	listeners	listeners
		p	2	prepareExecutor	prepareExecutor
		p	3	applyExecutor	applyExecutor
		p	4	initialStage	initialStage
c	abg$a	net/minecraft/resource/ResourceReloader$Factory
	m	(Laax$a;Labc;Laax;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	create	create
		p	1	helper	helper
		p	2	manager	manager
		p	3	listener	listener
		p	4	prepareExecutor	prepareExecutor
		p	5	applyExecutor	applyExecutor
c	abh	net/minecraft/resource/ReloadableResourceManagerImpl
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	namespaceManagers
	f	Ljava/util/List;	c	listeners
	f	Ljava/util/List;	d	initialListeners
	f	Ljava/util/Set;	e	namespaces
	f	Laaf;	g	type
	m	(Laaf;)V	<init>	<init>
		p	1	type	type
	m	(Laae;)V	a	addPack
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Laaz;	b	beginReloadInner
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	listeners	listeners
		p	4	initialStage	initialStage
	m	()V	c	clear
c	abh$a	net/minecraft/resource/ReloadableResourceManagerImpl$FailedResourceReloadMonitor
	f	Labh$b;	a	exception
	f	Ljava/util/concurrent/CompletableFuture;	b	future
	m	(Labh$b;)V	<init>	<init>
		p	1	exception	exception
c	abh$b	net/minecraft/resource/ReloadableResourceManagerImpl$PackAdditionFailedException
	f	Laae;	a	pack
	m	(Laae;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	pack	pack
		p	2	cause	cause
	m	()Laae;	a	getPack
c	abi	net/minecraft/resource/ResourceImpl
	f	Ljava/lang/String;	a	packName
	f	Luh;	b	id
	f	Ljava/io/InputStream;	c	inputStream
	f	Ljava/io/InputStream;	d	metaInputStream
	f	Z	e	readMetadata
	f	Lcom/google/gson/JsonObject;	f	metadata
	m	(Ljava/lang/String;Luh;Ljava/io/InputStream;Ljava/io/InputStream;)V	<init>	<init>
		p	1	packName	packName
		p	2	id	id
		p	3	inputStream	inputStream
		p	4	metaInputStream	metaInputStream
	m	()Z	c	hasMetadata
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	abk	net/minecraft/server/BanEntry
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/util/Date;	b	creationDate
	f	Ljava/lang/String;	c	source
	f	Ljava/util/Date;	d	expiryDate
	f	Ljava/lang/String;	e	reason
	m	(Ljava/lang/Object;Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1	key	key
		p	2	json	json
	m	(Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
		p	2	creationDate	creationDate
		p	3	source	source
		p	4	expiryDate	expiryDate
		p	5	reason	reason
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpiryDate
	m	()Ljava/lang/String;	d	getReason
	m	()Lmr;	e	toText
c	abl	net/minecraft/util/UserCache
	f	Ljava/text/SimpleDateFormat;	a	EXPIRATION_DATE_FORMAT
	f	Lcom/google/gson/Gson;	b	gson
	f	Z	c	useRemote
	f	Ljava/util/Map;	d	byName
	f	Ljava/util/Map;	e	byUuid
	f	Ljava/util/Deque;	f	byAccessTime
	f	Lcom/mojang/authlib/GameProfileRepository;	g	profileRepository
	f	Ljava/io/File;	h	cacheFile
	f	Lcom/google/gson/reflect/TypeToken;	i	ENTRY_LIST_TYPE
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V	<init>	<init>
		p	1	profileRepository	profileRepository
		p	2	cacheFile	cacheFile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	a	add
		p	1	profile	profile
	m	(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	a	findByName
	m	(Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile;	a	getByUuid
	m	(I)Ljava/util/List;	a	getLastAccessedEntries
	m	(Z)V	a	setUseRemote
		p	0	value	value
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	a	findProfileByName
		p	0	repository	repository
		p	1	name	name
	m	()V	b	load
	m	(Ljava/util/UUID;)Labl$a;	b	getEntry
	m	()V	c	save
	m	()Z	d	shouldUseRemote
c	abl$1	net/minecraft/util/UserCache$1
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	abl$a	net/minecraft/util/UserCache$Entry
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Ljava/util/Date;	c	expirationDate
	m	(Labl;Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	<init>	<init>
		p	2	profile	profile
		p	3	expiryDate	expiryDate
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	()Ljava/util/Date;	b	getExpirationDate
c	abl$b	net/minecraft/util/UserCache$JsonConverter
	m	(Labl$a;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Labl$a;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	abm	net/minecraft/server/BannedIpList
	m	(Ljava/lang/String;)Z	a	isBanned
		p	1	ip	ip
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
		p	1	ip	ip
	m	(Ljava/net/SocketAddress;)Labn;	b	get
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	stringifyAddress
c	abn	net/minecraft/server/BannedIpEntry
	m	(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1	ip	ip
		p	2	created	created
		p	3	source	source
		p	4	expiry	expiry
		p	5	reason	reason
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	ip	ip
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1	json	json
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	getIp
		p	0	json	json
c	abo	net/minecraft/server/ServerConfigHandler
	f	Ljava/io/File;	a	BANNED_IPS_FILE
	f	Ljava/io/File;	b	BANNED_PLAYERS_FILE
	f	Ljava/io/File;	c	OPERATORS_FILE
	f	Ljava/io/File;	d	WHITE_LIST_FILE
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	processSimpleListFile
		p	0	file	file
		p	1	valueMap	valueMap
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertBannedPlayers
		p	0	server	server
	m	(Lyd;)Z	a	convertPlayerFiles
		p	0	minecraftServer	minecraftServer
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupProfile
		p	0	server	server
		p	1	bannedPlayers	bannedPlayers
		p	2	callback	callback
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID;	a	getPlayerUuidByName
		p	0	server	server
		p	1	name	name
	m	()Z	b	checkListConversionSuccess
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertBannedIps
		p	0	server	server
	m	(Ljava/io/File;)V	b	createDirectory
		p	0	directory	directory
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	b	parseDate
		p	0	dateString	dateString
		p	1	fallback	fallback
	m	(Ljava/io/File;)V	c	markFileConverted
		p	0	file	file
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOperators
		p	0	server	server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhitelist
		p	0	server	server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	checkSuccess
		p	0	server	server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	checkPlayerConversionSuccess
		p	0	server	server
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getLevelPlayersFolder
		p	0	server	server
c	abo$1	net/minecraft/server/ServerConfigHandler$1
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	abo$2	net/minecraft/server/ServerConfigHandler$2
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	abo$3	net/minecraft/server/ServerConfigHandler$3
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	abo$4	net/minecraft/server/ServerConfigHandler$4
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	abo$5	net/minecraft/server/ServerConfigHandler$5
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	a	getPlayerFileName
		p	1	profile	profile
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	convertPlayerFile
		p	1	playerDataFolder	playerDataFolder
		p	2	fileName	fileName
		p	3	uuid	uuid
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	abo$a	net/minecraft/server/ServerConfigHandler$ServerConfigException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	title	title
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	title	title
		p	2	other	other
c	abp	net/minecraft/server/PlayerManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	BANNED_PLAYERS_FILE
	f	Ljava/io/File;	c	BANNED_IPS_FILE
	f	Ljava/io/File;	d	OPERATORS_FILE
	f	Ljava/io/File;	e	WHITELIST_FILE
	f	I	f	maxPlayers
	f	Ljava/text/SimpleDateFormat;	g	DATE_FORMATTER
	f	Lnet/minecraft/server/MinecraftServer;	h	server
	f	Ljava/util/List;	i	players
	f	Ljava/util/Map;	j	playerMap
	f	Labu;	k	bannedProfiles
	f	Labm;	l	bannedIps
	f	Labq;	m	ops
	f	Labw;	n	whitelist
	f	Ljava/util/Map;	o	statisticsMap
	f	Ljava/util/Map;	p	advancementTrackers
	f	Ldai;	q	saveHandler
	f	Z	r	whitelistEnabled
	f	Lgm$a;	s	registryTracker
	f	I	t	viewDistance
	f	Lbpy;	u	gameMode
	f	Z	v	cheatsAllowed
	f	I	w	latencyUpdateTimer
	m	(Lnet/minecraft/server/MinecraftServer;Lgm$a;Ldai;I)V	<init>	<init>
		p	1	server	server
		p	2	tracker	tracker
		p	3	saveHandler	saveHandler
		p	4	maxPlayers	maxPlayers
	m	(Lbec;)Lacq;	a	createStatHandler
		p	1	player	player
	m	(Lni;)V	a	sendToAll
		p	1	packet	packet
	m	(Lbpy;)V	a	setGameMode
		p	1	gameMode	gameMode
	m	(Lze;I)V	a	sendCommandTree
		p	1	player	player
		p	2	permissionLevel	permissionLevel
	m	(Lni;Lug;)V	a	sendToDimension
		p	1	packet	packet
		p	2	dimension	dimension
	m	(Lcom/mojang/authlib/GameProfile;)V	a	addToOperators
		p	1	profile	profile
	m	(Lzd;)V	a	setMainWorld
		p	1	world	world
	m	(Ljava/util/UUID;)Lze;	a	getPlayer
		p	1	uuid	uuid
	m	(Lmr;Lmo;Ljava/util/UUID;)V	a	broadcastChatMessage
		p	1	message	message
		p	2	type	type
		p	3	senderUuid	senderUuid
	m	(I)V	a	setViewDistance
		p	1	viewDistance	viewDistance
	m	(Lze;Lze;Lzd;)V	a	setGameMode
		p	1	player	player
		p	2	oldPlayer	oldPlayer
		p	3	world	world
	m	(Lux;Lze;)V	a	sendScoreboard
		p	1	scoreboard	scoreboard
		p	2	player	player
	m	(Lbec;DDDDLug;Lni;)V	a	sendToAround
		p	1	player	player
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	distance	distance
		p	10	worldKey	worldKey
		p	11	packet	packet
	m	(Ljava/lang/String;)Lze;	a	getPlayer
		p	1	name	name
	m	(Z)V	a	setWhitelistEnabled
		p	1	whitelistEnabled	whitelistEnabled
	m	(Lzd;Laom;)Laom;	a	method_18241
		p	1	vehicle	vehicle
	m	(Lze;Lzd;)V	a	sendWorldInfo
		p	1	player	player
		p	2	world	world
	m	(Lme;Lze;)V	a	onPlayerConnect
		p	1	connection	connection
		p	2	player	player
	m	(Lze;)Lle;	a	loadPlayerData
		p	1	player	player
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lmr;	a	checkCanJoin
		p	1	address	address
		p	2	profile	profile
	m	()V	a	reloadWhitelist
	m	(Lze;Z)Lze;	a	respawnPlayer
		p	1	player	player
		p	2	alive	alive
	m	(Lbec;Lmr;)V	a	sendToTeam
		p	1	source	source
		p	2	message	message
	m	(Lcom/mojang/authlib/GameProfile;)V	b	removeFromOperators
		p	1	profile	profile
	m	(Lze;)V	b	savePlayerData
		p	1	player	player
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersByIp
		p	1	ip	ip
	m	(Z)V	b	setCheatsAllowed
		p	1	cheatsAllowed	cheatsAllowed
	m	(Lbec;Lmr;)V	b	sendToOtherTeams
		p	1	source	source
		p	2	message	message
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lze;)V	c	remove
		p	1	player	player
	m	()V	d	updatePlayerLatency
	m	(Lze;)V	d	sendCommandTree
		p	1	player	player
	m	(Lcom/mojang/authlib/GameProfile;)Z	e	isWhitelisted
		p	1	profile	profile
	m	()[Ljava/lang/String;	e	getPlayerNames
	m	(Lze;)V	e	sendPlayerStatus
		p	1	player	player
	m	(Lcom/mojang/authlib/GameProfile;)Z	f	canBypassPlayerLimit
		p	1	profile	profile
	m	(Lze;)Luq;	f	getAdvancementTracker
		p	1	player	player
	m	()Labu;	f	getUserBanList
	m	(Lcom/mojang/authlib/GameProfile;)Lze;	g	createPlayer
		p	1	profile	profile
	m	()Labm;	g	getIpBanList
	m	()V	h	saveAllPlayerData
	m	(Lcom/mojang/authlib/GameProfile;)Z	h	isOperator
		p	1	profile	profile
	m	()Labw;	i	getWhitelist
	m	()[Ljava/lang/String;	j	getWhitelistedNames
	m	()Labq;	k	getOpList
	m	()[Ljava/lang/String;	l	getOpNames
	m	()I	m	getCurrentPlayerCount
	m	()I	n	getMaxPlayerCount
	m	()Z	o	isWhitelistEnabled
	m	()I	p	getViewDistance
	m	()Lle;	q	getUserData
	m	()V	r	disconnectAllPlayers
	m	()Ljava/util/List;	s	getPlayerList
	m	()V	t	onDataPacksReloaded
	m	()Z	u	areCheatsAllowed
c	abq	net/minecraft/server/OperatorList
	m	(Lcom/mojang/authlib/GameProfile;)Z	b	isOp
		p	1	profile	profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	c	toString
c	abr	net/minecraft/server/OperatorEntry
	f	I	a	permissionLevel
	f	Z	b	bypassPlayerLimit
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1	json	json
	m	(Lcom/mojang/authlib/GameProfile;IZ)V	<init>	<init>
		p	1	profile	profile
		p	2	permissionLevel	permissionLevel
		p	3	bypassPlayerLimit	bypassPlayerLimit
	m	()I	a	getPermissionLevel
	m	()Z	b	canBypassPlayerLimit
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	getProfileFromJson
		p	0	json	json
c	abs	net/minecraft/server/ServerConfigEntry
	f	Ljava/lang/Object;	a	key
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1	key	key
	m	(Lcom/google/gson/JsonObject;)V	a	fromJson
		p	1	json	json
	m	()Z	f	isInvalid
	m	()Ljava/lang/Object;	g	getKey
c	abt	net/minecraft/server/ServerConfigList
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
	m	(Ljava/io/File;)V	<init>	<init>
		p	1	file	file
	m	(Lcom/google/gson/JsonObject;)Labs;	a	fromJson
		p	1	json	json
	m	()[Ljava/lang/String;	a	getNames
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	toString
		p	1	profile	profile
	m	(Labs;)V	a	add
		p	1	entry	entry
	m	()Ljava/io/File;	b	getFile
	m	(Ljava/lang/Object;)Labs;	b	get
		p	1	key	key
	m	(Labs;)V	b	remove
		p	1	entry	entry
	m	(Ljava/lang/Object;)V	c	remove
		p	1	key	key
	m	()Z	c	isEmpty
	m	(Ljava/lang/Object;)Z	d	contains
	m	()Ljava/util/Collection;	d	values
	m	()V	e	save
	m	()V	f	load
	m	()V	g	removeInvalidEntries
c	abu	net/minecraft/server/BannedPlayerList
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	contains
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	toString
c	abv	net/minecraft/server/BannedPlayerEntry
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1	profile	profile
		p	2	created	created
		p	3	source	source
		p	4	expiry	expiry
		p	5	reason	reason
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1	json	json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	profile	profile
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	profileFromJson
		p	0	json	json
c	abw	net/minecraft/server/Whitelist
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isAllowed
		p	1	profile	profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	toString
c	abx	net/minecraft/server/WhitelistEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1	json	json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	profile	profile
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	profileFromJson
		p	0	json	json
c	abz	net/minecraft/server/rcon/DataStreamHelper
	f	Ljava/io/ByteArrayOutputStream;	a	byteArrayOutputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
	m	(S)V	a	writeShort
	m	(I)V	a	write
	m	()[B	a	bytes
	m	(Ljava/lang/String;)V	a	writeBytes
	m	([B)V	a	write
	m	()V	b	reset
c	ac	net/minecraft/advancement/criterion/CriterionProgress
	f	Ljava/text/SimpleDateFormat;	a	FORMAT
	f	Ljava/util/Date;	b	obtained
	m	()Z	a	isObtained
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	(Ljava/lang/String;)Lac;	a	obtainedAt
		p	0	datetime	datetime
	m	(Lmg;)Lac;	b	fromPacket
		p	0	buf	buf
	m	()V	b	obtain
	m	()V	c	reset
	m	()Ljava/util/Date;	d	getObtainedDate
	m	()Lcom/google/gson/JsonElement;	e	toJson
c	aca	net/minecraft/server/rcon/BufferHelper
	f	[C	a	HEX_CHARS_LOOKUP
	m	([BII)Ljava/lang/String;	a	getString
		p	0	buf	buf
	m	([BI)I	a	getIntLE
		p	0	buf	buf
		p	1	start	start
	m	(B)Ljava/lang/String;	a	toHex
		p	0	b	b
	m	([BII)I	b	getIntLE
		p	0	buf	buf
		p	1	start	start
		p	2	limit	limit
	m	([BII)I	c	getIntBE
		p	0	buf	buf
		p	1	start	start
		p	2	limit	limit
c	acb	net/minecraft/server/rcon/RconCommandOutput
	f	Lnd;	b	RCON_NAME
	f	Ljava/lang/StringBuffer;	c	buffer
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	()V	d	clear
	m	()Ljava/lang/String;	e	asString
	m	()Lcz;	f	createRconCommandSource
c	acd	net/minecraft/server/rcon/RconBase
	f	Z	a	running
	f	Ljava/lang/String;	b	description
	f	Ljava/lang/Thread;	c	thread
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	THREAD_COUNTER
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	description	description
	m	()V	a	start
	m	()V	b	stop
	m	()Z	c	isRunning
c	ace	net/minecraft/server/rcon/QueryResponseHandler
	f	J	e	lastQueryTime
	f	I	f	queryPort
	f	I	g	port
	f	I	h	maxPlayerCount
	f	Ljava/lang/String;	i	motd
	f	Ljava/lang/String;	j	levelName
	f	Ljava/net/DatagramSocket;	k	socket
	f	[B	l	packetBuffer
	f	Ljava/lang/String;	m	ip
	f	Ljava/lang/String;	n	hostname
	f	Ljava/util/Map;	o	queries
	f	Labz;	p	data
	f	J	q	lastResponseTime
	m	(Luv;)V	<init>	<init>
		p	1	server	server
	m	(Ljava/net/DatagramPacket;)Z	a	handle
		p	1	packet	packet
	m	([BLjava/net/DatagramPacket;)V	a	reply
		p	1	buf	buf
	m	(Ljava/lang/Exception;)V	a	handleIoException
		p	1	e	e
	m	(Ljava/net/SocketAddress;)[B	a	getMessageBytes
	m	(Ljava/net/DatagramPacket;)[B	b	createRulesReply
		p	1	packet	packet
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	isValidQuery
	m	(Ljava/net/DatagramPacket;)V	d	createQuery
	m	()V	d	cleanUp
	m	()Z	e	initialize
c	ace$a	net/minecraft/server/rcon/QueryResponseHandler$Query
	f	J	a	startTime
	f	I	b	id
	f	[B	c	messageBytes
	f	[B	d	replyBuf
	f	Ljava/lang/String;	e	message
	m	()I	a	getId
	m	(J)Ljava/lang/Boolean;	a	startedBefore
		p	1	lastQueryTime	lastQueryTime
	m	()[B	b	getReplyBuf
	m	()[B	c	getMessageBytes
c	acf	net/minecraft/server/rcon/RconClient
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Z	e	authenticated
	f	Ljava/net/Socket;	f	socket
	f	[B	g	packetBuffer
	f	Ljava/lang/String;	h	password
	f	Luv;	i	server
	m	(Luv;Ljava/lang/String;Ljava/net/Socket;)V	<init>	<init>
		p	1	server	server
		p	2	password	password
		p	3	socket	socket
	m	(IILjava/lang/String;)V	a	respond
		p	1	sessionToken	sessionToken
		p	2	responseType	responseType
		p	3	message	message
	m	(ILjava/lang/String;)V	a	respond
		p	1	sessionToken	sessionToken
		p	2	message	message
	m	()V	d	fail
	m	()V	e	close
c	acg	net/minecraft/server/rcon/RconListener
	f	Lorg/apache/logging/log4j/Logger;	d	SERVER_LOGGER
	f	I	e	port
	f	Ljava/lang/String;	f	hostname
	f	Ljava/net/ServerSocket;	g	listener
	f	Ljava/lang/String;	h	password
	f	Ljava/util/List;	i	clients
	f	Luv;	j	server
	m	(Luv;)V	<init>	<init>
		p	1	server	server
	m	(Ljava/net/ServerSocket;)V	a	closeSocket
		p	1	socket	socket
	m	()V	d	removeStoppedClients
c	aci	net/minecraft/sound/MusicSound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lack;	b	event
	m	(Lack;IIZ)V	<init>	<init>
		p	1	event	event
	m	()Lack;	a	getEvent
c	acj	net/minecraft/client/sound/MusicType
	f	Laci;	a	MENU
	f	Laci;	b	CREATIVE
	f	Laci;	c	CREDITS
	f	Laci;	d	DRAGON
	f	Laci;	e	END
	f	Laci;	f	UNDERWATER
	f	Laci;	g	GAME
c	ack	net/minecraft/sound/SoundEvent
	f	Luh;	b	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
	m	()Luh;	a	getId
c	acl	net/minecraft/sound/SoundEvents
	m	(Ljava/lang/String;)Lack;	a	register
		p	0	id	id
c	acm	net/minecraft/sound/SoundCategory
	f	Ljava/util/Map;	k	NAME_MAP
	f	Ljava/lang/String;	l	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	aco	net/minecraft/recipe/book/RecipeBook
	f	Ljava/util/Set;	a	recipes
	f	Ljava/util/Set;	b	toBeDisplayed
	f	Z	c	guiOpen
	f	Z	d	filteringCraftable
	f	Z	e	furnaceGuiOpen
	f	Z	f	furnaceFilteringCraftable
	f	Z	g	blastFurnaceGuiOpen
	f	Z	h	blastFurnaceFilteringCraftable
	f	Z	i	smokerGuiOpen
	f	Z	j	smokerFilteringCraftable
	m	(Lbhp;)Z	a	isFilteringCraftable
		p	1	handler	handler
	m	(Lbmu;)V	a	add
		p	1	recipe	recipe
	m	(Luh;)V	a	add
		p	1	id	id
	m	(Laco;)V	a	copyFrom
		p	1	book	book
	m	(Z)V	a	setGuiOpen
		p	1	guiOpen	guiOpen
	m	()Z	a	isGuiOpen
	m	(Luh;)Z	b	contains
		p	1	id	id
	m	()Z	b	isFilteringCraftable
	m	(Z)V	b	setFilteringCraftable
		p	1	filteringCraftable	filteringCraftable
	m	(Lbmu;)Z	b	contains
		p	1	recipe	recipe
	m	(Lbmu;)V	c	remove
		p	1	recipe	recipe
	m	()Z	c	isFurnaceGuiOpen
	m	(Luh;)V	c	remove
		p	1	id	id
	m	(Z)V	c	setFurnaceGuiOpen
		p	1	furnaceGuiOpen	furnaceGuiOpen
	m	(Luh;)V	d	display
		p	1	id	id
	m	(Z)V	d	setFurnaceFilteringCraftable
		p	1	furnaceFilteringCraftable	furnaceFilteringCraftable
	m	(Lbmu;)Z	d	shouldDisplay
		p	1	recipe	recipe
	m	()Z	d	isFurnaceFilteringCraftable
	m	(Z)V	e	setBlastFurnaceGuiOpen
		p	1	blastFurnaceGuiOpen	blastFurnaceGuiOpen
	m	()Z	e	isBlastFurnaceGuiOpen
	m	(Lbmu;)V	e	onRecipeDisplayed
		p	1	recipe	recipe
	m	()Z	f	isBlastFurnaceFilteringCraftable
	m	(Z)V	f	setBlastFurnaceFilteringCraftable
		p	1	blastFurnaceFilteringCraftable	blastFurnaceFilteringCraftable
	m	(Lbmu;)V	f	display
		p	1	recipe	recipe
	m	()Z	g	isSmokerGuiOpen
	m	(Z)V	g	setSmokerGuiOpen
		p	1	smokerGuiOpen	smokerGuiOpen
	m	(Z)V	h	setSmokerFilteringCraftable
		p	1	smokerFilteringCraftable	smokerFilteringCraftable
	m	()Z	h	isSmokerFilteringCraftable
c	acp	net/minecraft/server/network/ServerRecipeBook
	f	Lorg/apache/logging/log4j/Logger;	k	LOGGER
	m	(Lze;)V	a	sendInitRecipesPacket
		p	1	player	player
	m	(Lpl$a;Lze;Ljava/util/List;)V	a	sendUnlockRecipesPacket
		p	1	action	action
		p	2	player	player
		p	3	recipeIds	recipeIds
	m	(Ljava/util/Collection;Lze;)I	a	unlockRecipes
		p	1	recipes	recipes
		p	2	player	player
	m	(Llk;Ljava/util/function/Consumer;Lbmv;)V	a	handleList
		p	1	list	list
		p	2	handler	handler
	m	(Lle;Lbmv;)V	a	fromTag
		p	1	tag	tag
	m	(Ljava/util/Collection;Lze;)I	b	lockRecipes
		p	1	recipes	recipes
		p	2	player	player
	m	()Lle;	i	toTag
c	acq	net/minecraft/stat/ServerStatHandler
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/io/File;	d	file
	f	Ljava/util/Set;	e	pendingStats
	f	I	f	lastStatsUpdate
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V	<init>	<init>
		p	1	server	server
	m	(Lact;Ljava/lang/String;)Ljava/util/Optional;	a	createStat
		p	1	type	type
		p	2	id	id
	m	(Lze;)V	a	sendStats
		p	1	player	player
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parse
		p	1	dataFixer	dataFixer
		p	2	json	json
	m	()V	a	save
	m	(Lcom/google/gson/JsonObject;)Lle;	a	jsonToCompound
	m	(Lacr;)Luh;	b	getStatId
	m	()Ljava/lang/String;	b	asString
	m	()V	c	updateStatSet
	m	()Ljava/util/Set;	d	takePendingStats
c	acr	net/minecraft/stat/Stat
	f	Lacs;	o	formatter
	f	Ljava/lang/Object;	p	value
	f	Lact;	q	type
	m	(Lact;Ljava/lang/Object;Lacs;)V	<init>	<init>
		p	1	type	type
		p	2	value	value
		p	3	formatter	formatter
	m	(Luh;)Ljava/lang/String;	a	getName
		p	0	id	id
	m	(I)Ljava/lang/String;	a	format
	m	()Lact;	a	getType
	m	(Lact;Ljava/lang/Object;)Ljava/lang/String;	a	getName
		p	0	type	type
		p	1	value	value
	m	()Ljava/lang/Object;	b	getValue
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	acs	net/minecraft/stat/StatFormatter
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Lacs;	b	DEFAULT
	f	Lacs;	c	DIVIDE_BY_TEN
	f	Lacs;	d	DISTANCE
	f	Lacs;	e	TIME
c	act	net/minecraft/stat/StatType
	f	Lgl;	a	registry
	f	Ljava/util/Map;	b	stats
	m	(Ljava/lang/Object;)Z	a	hasStat
		p	1	key	key
	m	()Lgl;	a	getRegistry
	m	(Ljava/lang/Object;Lacs;)Lacr;	a	getOrCreateStat
		p	1	key	key
		p	2	formatter	formatter
	m	(Ljava/lang/Object;)Lacr;	b	getOrCreateStat
		p	1	key	key
	m	()Ljava/lang/String;	c	getTranslationKey
c	acu	net/minecraft/stat/Stats
	m	(Ljava/lang/String;Lacs;)Luh;	a	register
	m	(Ljava/lang/String;Lgl;)Lact;	a	registerType
c	acv	net/minecraft/stat/StatHandler
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	statMap
	m	(Lbec;Lacr;I)V	a	setStat
		p	1	player	player
		p	2	stat	stat
		p	3	value	value
	m	(Lact;Ljava/lang/Object;)I	a	getStat
		p	1	type	type
		p	2	stat	stat
	m	(Lacr;)I	a	getStat
		p	1	stat	stat
	m	(Lbec;Lacr;I)V	b	increaseStat
		p	1	player	player
		p	2	stat	stat
		p	3	value	value
c	acx	net/minecraft/tag/BlockTags
	f	Ladd;	aF	ACCESSOR
	m	()V	a	markReady
	m	(Ljava/lang/String;)Ladf$e;	a	register
		p	0	id	id
	m	(Ladg;)V	a	setContainer
		p	0	container	container
	m	()Ladg;	b	getContainer
c	acy	net/minecraft/tag/EntityTypeTags
	f	Ladd;	f	ACCESSOR
	m	()V	a	markReady
	m	(Ljava/lang/String;)Ladf$e;	a	register
		p	0	id	id
	m	(Ladg;)V	a	setContainer
		p	0	container	container
	m	()Ladg;	b	getContainer
c	acz	net/minecraft/tag/FluidTags
	f	Ladd;	c	ACCESSOR
	m	()V	a	markReady
	m	(Ljava/lang/String;)Ladf$e;	a	register
		p	0	id	id
	m	(Ladg;)V	a	setContainer
		p	0	container	container
	m	()Ladg;	b	getContainer
c	ad	net/minecraft/advancement/criterion/Criterion
	m	(Luq;Lad$a;)V	a	beginTrackingCondition
		p	1	manager	manager
	m	(Luq;)V	a	endTracking
		p	1	tracker	tracker
	m	(Lcom/google/gson/JsonObject;Lav;)Lae;	a	conditionsFromJson
		p	1	obj	obj
		p	2	predicateDeserializer	predicateDeserializer
	m	()Luh;	a	getId
	m	(Luq;Lad$a;)V	b	endTrackingCondition
		p	1	manager	manager
c	ad$a	net/minecraft/advancement/criterion/Criterion$ConditionsContainer
	f	Lae;	a	conditions
	f	Lw;	b	advancement
	f	Ljava/lang/String;	c	id
	m	(Lae;Lw;Ljava/lang/String;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	advancement	advancement
		p	3	id	id
	m	(Luq;)V	a	grant
		p	1	tracker	tracker
	m	()Lae;	a	getConditions
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ada	net/minecraft/tag/ItemTags
	f	Ladd;	ac	ACCESSOR
	m	()V	a	markReady
	m	(Ljava/lang/String;)Ladf$e;	a	register
		p	0	id	id
	m	(Ladg;)V	a	setContainer
		p	0	container	container
	m	()Ladg;	b	getContainer
c	adb	net/minecraft/tag/TagContainers
	f	Ladb;	a	instance
	f	Ladg;	b	blocks
	f	Ladg;	c	items
	f	Ladg;	d	fluids
	f	Ladg;	e	entityTypes
	m	(Ladg;Ladg;Ladg;Ladg;)V	<init>	<init>
		p	1	blocks	blocks
		p	2	items	items
		p	3	fluids	fluids
		p	4	entityTypes	entityTypes
	m	()Ladg;	a	blocks
	m	()Ladg;	b	items
	m	()Ladg;	c	fluids
	m	()Ladg;	d	entityTypes
	m	()Ladb;	e	instance
c	adc	net/minecraft/tag/SetTag
	f	Ladc;	EMPTY	EMPTY
	f	Lcom/google/common/collect/ImmutableList;	b	values
	m	(Ljava/util/Set;Ljava/lang/Class;)V	<init>	<init>
		p	1	set	set
	m	(Ljava/util/Set;)Ladc;	a	method_29900
		p	0	set	set
	m	()Ladc;	a	empty
c	add	net/minecraft/tag/GlobalTagAccessor
	c	Allows access to tags from either client or server threads and propagates\ntag changes through reloads/server tag sends.
	f	Ladg;	a	emptyContainer
	f	Ladg;	b	currentContainer
	f	Ljava/util/List;	c	tags
	m	()V	a	markReady
	m	(Ljava/lang/String;)Ladf$e;	a	get
		p	1	id	id
	m	(Ladg;)V	a	setContainer
		p	1	container	container
	m	()Ladg;	b	getContainer
c	add$a	net/minecraft/tag/GlobalTagAccessor$CachedTag
	f	Luh;	a	id
	f	Ladf;	b	currentTag
	m	(Luh;)V	<init>	<init>
		p	1	id	id
	m	(Ljava/util/function/Function;)V	a	updateContainer
		p	1	tagFactory	tagFactory
	m	()Ladf;	c	get
c	ade	net/minecraft/tag/RegistryTagContainer
	f	Lgl;	a	registry
	m	(Lgl;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	registry	registry
		p	2	path	path
		p	3	type	type
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	(Lmg;)V	b	fromPacket
		p	1	buf	buf
c	adf	net/minecraft/tag/Tag
	c	A tag is a set of objects.\n\n<p>Tags simplifies reference to multiple objects, especially for\npredicate (testing against) purposes.\n\n<p>A tag is immutable by design. It has a builder, which is a mutable\nequivalent.\n\n<p>Its entries' iteration may be ordered\nor unordered, depending on the configuration from the tag builder.
	m	(Ljava/util/Random;)Ljava/lang/Object;	a	getRandom
		p	1	random	random
	m	(Ljava/lang/Object;)Z	a	contains
		p	1	entry	entry
	m	(Ljava/util/Set;)Ladf;	b	of
		p	0	set	set
	m	()Ljava/util/List;	b	values
c	adf$a	net/minecraft/tag/Tag$Builder
	c	A builder class to ease the creation of tags. It can also be used as a\nmutable form of a tag.
	f	Ljava/util/List;	a	entries
	m	()Ladf$a;	a	create
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ladf$a;	a	read
		p	1	json	json
		p	2	source	source
	m	(Ladf$d;Ljava/lang/String;)Ladf$a;	a	add
		p	1	entry	entry
		p	2	source	source
	m	(Luh;Ljava/lang/String;)Ladf$a;	a	add
		p	1	id	id
		p	2	source	source
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;	a	build
		p	1	tagGetter	tagGetter
		p	2	objectGetter	objectGetter
	m	(Ladf$b;)Ladf$a;	a	add
		p	1	trackedEntry	trackedEntry
	m	(Luh;Ljava/lang/String;)Ladf$a;	b	addTag
		p	1	id	id
		p	2	source	source
	m	()Ljava/util/stream/Stream;	b	streamEntries
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;	b	streamUnresolvedEntries
		p	1	tagGetter	tagGetter
		p	2	objectGetter	objectGetter
	m	()Lcom/google/gson/JsonObject;	c	toJson
c	adf$b	net/minecraft/tag/Tag$TrackedEntry
	f	Ladf$d;	a	entry
	f	Ljava/lang/String;	b	source
	m	(Ladf$d;Ljava/lang/String;)V	<init>	<init>
		p	1	entry	entry
		p	2	source	source
	m	()Ladf$d;	a	getEntry
c	adf$c	net/minecraft/tag/Tag$ObjectEntry
	f	Luh;	a	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
c	adf$d	net/minecraft/tag/Tag$Entry
	m	(Lcom/google/gson/JsonArray;)V	a	addToJson
		p	1	json	json
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z	a	resolve
		p	1	tagGetter	tagGetter
		p	2	objectGetter	objectGetter
		p	3	collector	collector
c	adf$e	net/minecraft/tag/Tag$Identified
	m	()Luh;	a	getId
c	adf$f	net/minecraft/tag/Tag$TagEntry
	f	Luh;	a	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
c	adg	net/minecraft/tag/TagContainer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	I	c	JSON_EXTENSION_LENGTH
	f	Ladf;	d	empty
	f	Lcom/google/common/collect/BiMap;	e	entries
	f	Ljava/util/function/Function;	f	getter
	f	Ljava/lang/String;	g	dataType
	f	Ljava/lang/String;	h	entryType
	m	(Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	getter	getter
		p	2	dataType	dataType
	m	(Luh;)Ladf;	a	get
		p	1	id	id
	m	(Ljava/util/Map;)V	a	applyReload
	m	(Ladf;)Luh;	a	getId
		p	1	tag	tag
	m	()Ljava/util/Collection;	a	getKeys
	m	(Labc;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	prepareReload
		p	1	manager	manager
		p	2	executor	executor
	m	(Ljava/lang/Object;)Ljava/util/Collection;	a	getTagsFor
		p	1	object	object
	m	()Ljava/util/Map;	b	getEntries
	m	(Ladf;)Luh;	b	checkId
		p	1	tag	tag
	m	(Ljava/util/Map;)V	b	setEntries
		p	1	entries	entries
	m	(Luh;)Ladf;	b	getOrCreate
		p	1	id	id
c	adh	net/minecraft/tag/RegistryTagManager
	f	Lade;	a	blocks
	f	Lade;	b	items
	f	Lade;	c	fluids
	f	Lade;	d	entityTypes
	m	()Lade;	a	blocks
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	(Lmg;)Ladh;	b	fromPacket
		p	0	buf	buf
	m	()Lade;	b	items
	m	()Lade;	d	fluids
	m	()Lade;	e	entityTypes
	m	()V	f	apply
c	adj	net/minecraft/util/collection/PackedIntegerArray
	f	[J	b	storage
	f	I	c	elementBits
	f	J	d	maxValue
	f	I	e	size
	m	(II)V	<init>	<init>
		p	1	elementBits	elementBits
		p	2	size	size
	m	(II[J)V	<init>	<init>
		p	1	elementBits	elementBits
		p	2	size	size
		p	3	storage	storage
	m	(Ljava/util/function/IntConsumer;)V	a	forEach
		p	1	consumer	consumer
	m	(I)I	a	get
		p	1	index	index
	m	(II)I	a	setAndGetOldValue
		p	1	index	index
		p	2	value	value
	m	()[J	a	getStorage
	m	(II)V	b	set
		p	1	index	index
		p	2	value	value
	m	()I	b	getSize
c	adk	net/minecraft/util/collection/TypeFilterableList
	f	Ljava/util/Map;	a	elementsByType
	f	Ljava/lang/Class;	b	elementType
	f	Ljava/util/List;	c	allElements
	m	(Ljava/lang/Class;)V	<init>	<init>
		p	1	elementType	elementType
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	getAllOfType
		p	1	type	type
	m	(Ljava/lang/Object;)Z	add	add
		p	1	e	e
	m	(Ljava/lang/Object;)Z	contains	contains
		p	1	o	o
	m	(Ljava/lang/Object;)Z	remove	remove
		p	1	o	o
c	adl	net/minecraft/util/dynamic/NumberCodecs
	m	(II)Lcom/mojang/serialization/Codec;	a	rangedInt
		p	0	min	min
		p	1	max	max
	m	(DD)Lcom/mojang/serialization/Codec;	a	rangedDouble
		p	0	min	min
		p	2	max	max
	m	(II)Ljava/util/function/Function;	b	createRangedDataResultFactory
		p	0	min	min
		p	1	max	max
	m	(DD)Ljava/util/function/Function;	b	createRangedDataResultFactory
		p	0	min	min
		p	2	max	max
c	adm	net/minecraft/util/collection/Int2ObjectBiMap
	f	Ljava/lang/Object;	a	empty
	f	[Ljava/lang/Object;	b	values
	f	[I	c	ids
	f	[Ljava/lang/Object;	d	idToValues
	f	I	e	nextId
	f	I	f	size
	m	(I)V	<init>	<init>
		p	1	size	size
	m	(Ljava/lang/Object;I)V	a	put
		p	1	value	value
		p	2	id	id
	m	()V	a	clear
	m	(Ljava/lang/Object;)I	a	getId
		p	1	value	value
	m	(I)Z	b	containsId
		p	1	id	id
	m	()I	b	size
	m	(Ljava/lang/Object;I)I	b	findIndex
		p	1	value	value
		p	2	id	id
	m	(I)I	c	getIdFromIndex
		p	1	index	index
	m	(Ljava/lang/Object;)I	c	add
		p	1	value	value
	m	()I	c	nextId
	m	(I)V	d	resize
		p	1	newSize	newSize
	m	(Ljava/lang/Object;)I	d	getIdealIndex
		p	1	value	value
	m	(I)I	e	findFree
		p	1	size	size
c	adn	net/minecraft/network/NetworkEncryptionUtils
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljava/lang/String;[[B)[B	a	hash
		p	0	algorithm	algorithm
		p	1	data	data
	m	(Ljava/security/Key;[B)[B	a	encrypt
		p	0	key	key
		p	1	data	data
	m	([B)Ljava/security/PublicKey;	a	readEncodedPublicKey
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	cipherFromKey
		p	0	opMode	opMode
		p	1	key	key
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptSecretKey
		p	0	privateKey	privateKey
		p	1	encryptedSecretKey	encryptedSecretKey
	m	()Ljavax/crypto/SecretKey;	a	generateKey
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	crypt
		p	0	opMode	opMode
		p	1	algorithm	algorithm
		p	2	key	key
	m	(ILjava/security/Key;[B)[B	a	crypt
		p	0	opMode	opMode
		p	1	key	key
		p	2	data	data
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	generateServerId
		p	0	baseServerId	baseServerId
		p	1	publicKey	publicKey
		p	2	secretKey	secretKey
	m	()Ljava/security/KeyPair;	b	generateServerKeyPair
	m	(Ljava/security/Key;[B)[B	b	decrypt
		p	0	key	key
		p	1	data	data
c	ado	net/minecraft/util/profiler/CsvWriter
	f	Ljava/io/Writer;	a	writer
	f	I	b	column
	m	(Ljava/io/Writer;Ljava/util/List;)V	<init>	<init>
		p	1	writer	writer
		p	2	headers	headers
	m	(Ljava/util/stream/Stream;)V	a	printRow
		p	1	columns	columns
	m	()Lado$a;	a	makeHeader
	m	([Ljava/lang/Object;)V	a	printRow
		p	1	columns	columns
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	print
		p	0	o	o
c	ado$a	net/minecraft/util/profiler/CsvWriter$Header
	f	Ljava/util/List;	a	columns
	m	(Ljava/io/Writer;)Lado;	a	startBody
		p	1	writer	writer
	m	(Ljava/lang/String;)Lado$a;	a	addColumn
		p	1	name	name
c	adp	net/minecraft/world/level/storage/SessionLock
	f	Ljava/nio/channels/FileChannel;	a	channel
	f	Ljava/nio/channels/FileLock;	b	lock
	m	(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V	<init>	<init>
		p	1	channel	channel
		p	2	lock	lock
	m	(Ljava/nio/file/Path;)Ladp;	a	create
		p	0	path	path
	m	()Z	a	isValid
	m	(Ljava/nio/file/Path;)Z	b	isLocked
		p	0	path	path
c	adp$a	net/minecraft/world/level/storage/SessionLock$AlreadyLockedException
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1	path	path
		p	2	message	message
	m	(Ljava/nio/file/Path;)Ladp$a;	a	create
		p	0	path	path
c	adq	net/minecraft/util/ThrowableDeliverer
	f	Ljava/lang/Throwable;	a	throwable
	m	()V	a	deliver
	m	(Ljava/lang/Throwable;)V	a	add
		p	1	throwable	throwable
c	adr	net/minecraft/client/gui/hud/BackgroundHelper
c	adr$a	net/minecraft/client/gui/hud/BackgroundHelper$ColorMixer
	m	(II)I	a	mixColor
		p	0	first	first
		p	1	second	second
	m	(IIII)I	a	getArgb
		p	0	alpha	alpha
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
	m	(I)I	a	getAlpha
		p	0	argb	argb
	m	(I)I	b	getRed
		p	0	argb	argb
	m	(I)I	c	getGreen
		p	0	argb	argb
	m	(I)I	d	getBlue
		p	0	argb	argb
c	ads	net/minecraft/util/MetricsData
	f	[J	a	samples
	f	I	b	startIndex
	f	I	c	sampleCount
	f	I	d	writeIndex
	m	()I	a	getStartIndex
	m	(J)V	a	pushSample
		p	1	time	time
	m	(I)I	b	wrapIndex
		p	1	index	index
	m	()I	b	getCurrentIndex
	m	()[J	c	getSamples
c	adt	net/minecraft/util/JsonHelper
	f	Lcom/google/gson/Gson;	a	GSON
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	deserialize
		p	3	lenient	lenient
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	0	element	element
		p	1	name	name
		p	2	context	context
		p	3	type	type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	0	object	object
		p	1	element	element
		p	2	defaultValue	defaultValue
		p	3	context	context
		p	4	type	type
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	a	deserialize
		p	2	type	type
		p	3	lenient	lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	deserialize
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	deserialize
		p	0	content	content
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getArray
		p	0	object	object
		p	1	name	name
		p	2	defaultArray	defaultArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getLong
		p	0	object	object
		p	1	element	element
		p	2	defaultLong	defaultLong
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	deserialize
		p	1	content	content
	m	(Ljava/io/Reader;Z)Lcom/google/gson/JsonObject;	a	deserialize
		p	1	lenient	lenient
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getString
		p	0	object	object
		p	1	element	element
		p	2	defaultStr	defaultStr
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	a	deserialize
		p	1	content	content
		p	3	lenient	lenient
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getByte
		p	0	object	object
		p	1	element	element
		p	2	defaultByte	defaultByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getFloat
		p	0	object	object
		p	1	element	element
		p	2	defaultFloat	defaultFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getObject
		p	0	object	object
		p	1	element	element
		p	2	defaultObject	defaultObject
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonElement;)Z	a	isString
		p	0	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	0	object	object
		p	1	element	element
		p	2	context	context
		p	3	type	type
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	deserialize
		p	1	content	content
		p	3	lenient	lenient
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	hasString
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	1	content	content
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getInt
		p	0	object	object
		p	1	element	element
		p	2	defaultInt	defaultInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getBoolean
		p	0	object	object
		p	1	element	element
		p	2	defaultBoolean	defaultBoolean
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	asString
		p	0	element	element
		p	1	name	name
	m	(Ljava/lang/String;Z)Lcom/google/gson/JsonObject;	a	deserialize
		p	0	content	content
		p	1	lenient	lenient
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumber
		p	0	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lbke;	b	asItem
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	hasBoolean
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	asBoolean
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	hasArray
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
		p	0	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	asFloat
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	asLong
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	hasPrimitive
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	hasElement
		p	0	object	object
		p	1	lement	lement
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	asInt
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	h	getString
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	asByte
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lbke;	i	getItem
		p	0	object	object
		p	1	key	key
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	j	getBoolean
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	l	getFloat
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	asObject
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	m	getLong
		p	0	object	object
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	asArray
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	n	getInt
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	t	getObject
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	u	getArray
		p	0	object	object
		p	1	element	element
c	adv	net/minecraft/client/util/NetworkUtils
	f	Lcom/google/common/util/concurrent/ListeningExecutorService;	a	downloadExecutor
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILaed;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture;	a	download
	m	()I	a	findLocalPort
c	adx	net/minecraft/util/math/IntRange
	c	An integer range, inclusive on both ends. Used to choose a random\nduration of memory.
	f	I	a	min
	f	I	b	max
	m	(II)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Ljava/util/Random;)I	a	choose
		p	1	random	random
	m	()I	a	getMin
	m	(II)Ladx;	a	between
		p	0	min	min
		p	1	max	max
	m	()I	b	getMax
c	ady	net/minecraft/util/Lazy
	f	Ljava/util/function/Supplier;	a	supplier
	f	Ljava/lang/Object;	b	value
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	delegate	delegate
	m	()Ljava/lang/Object;	a	get
c	ae	net/minecraft/advancement/criterion/CriterionConditions
	m	(Lcg;)Lcom/google/gson/JsonObject;	a	toJson
		p	1	predicateSerializer	predicateSerializer
	m	()Luh;	a	getId
c	aea	net/minecraft/world/biome/source/SeedMixer
	m	(JJ)J	a	mixSeed
		p	0	seed	seed
		p	2	salt	salt
c	aeb	net/minecraft/util/LowercaseEnumTypeAdapterFactory
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKey
		p	1	o	o
c	aec	net/minecraft/util/math/MathHelper
	f	F	a	SQUARE_ROOT_OF_TWO
	f	[F	b	SINE_TABLE
	f	Ljava/util/Random;	c	RANDOM
	f	[I	d	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	e	SMALLEST_FRACTION_FREE_DOUBLE
	f	[D	f	ARCSINE_TABLE
	f	[D	g	COSINE_TABLE
	m	(DD)D	a	absMax
	m	(F)F	a	sin
	m	(Ljava/util/Random;DD)D	a	nextDouble
		p	0	random	random
		p	1	min	min
		p	3	max	max
	m	(Ljava/util/Random;FF)F	a	nextFloat
		p	0	random	random
		p	1	min	min
		p	2	max	max
	m	(Ljava/lang/String;I)I	a	parseInt
		p	0	string	string
		p	1	fallback	fallback
	m	(FF)Z	a	approximatelyEquals
		p	0	a	a
		p	1	b	b
	m	(III)I	a	clamp
		p	0	value	value
		p	1	min	min
		p	2	max	max
	m	(FFF)F	a	clamp
		p	0	value	value
		p	1	min	min
		p	2	max	max
	m	(Ljava/util/Random;II)I	a	nextInt
		p	0	random	random
		p	1	min	min
		p	2	max	max
	m	([J)D	a	average
		p	0	array	array
	m	(Lgr;)J	a	hashCode
		p	0	vec	vec
	m	(D)F	a	sqrt
	m	(Ljava/util/Random;)Ljava/util/UUID;	a	randomUuid
		p	0	random	random
	m	(DDD)D	a	clamp
		p	0	value	value
		p	2	min	min
		p	4	max	max
	m	(I)I	a	abs
	m	(II)I	a	floorDiv
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
		p	0	start	start
		p	1	end	end
		p	2	leftPredicate	leftPredicate
	m	()Ljava/util/UUID;	a	randomUuid
	m	(JJJ)J	a	clamp
		p	0	value	value
		p	2	min	min
		p	4	max	max
	m	(DDDDDDDDDDD)D	a	lerp3
		c	A three-dimensional lerp between values on the 8 corners of the unit cube. Arbitrary values are specified for the corners and the output is interpolated between them.
		p	0	deltaX	deltaX
			c	The x-coordinate on the unit cube
		p	2	deltaY	deltaY
			c	The y-coordinate on the unit cube
		p	4	deltaZ	deltaZ
			c	The z-coordinate on the unit cube
		p	6	val000	val000
			c	The output if {@code deltaX} is 0, {@code deltaY} is 0 and {@code deltaZ} is 0
		p	8	val100	val100
			c	The output if {@code deltaX} is 1, {@code deltaY} is 0 and {@code deltaZ} is 0
		p	10	val010	val010
			c	The output if {@code deltaX} is 0, {@code deltaY} is 1 and {@code deltaZ} is 0
		p	12	val110	val110
			c	The output if {@code deltaX} is 1, {@code deltaY} is 1 and {@code deltaZ} is 0
		p	14	val001	val001
			c	The output if {@code deltaX} is 0, {@code deltaY} is 0 and {@code deltaZ} is 1
		p	16	val101	val101
			c	The output if {@code deltaX} is 1, {@code deltaY} is 0 and {@code deltaZ} is 1
		p	18	val011	val011
			c	The output if {@code deltaX} is 0, {@code deltaY} is 1 and {@code deltaZ} is 1
		p	20	val111	val111
			c	The output if {@code deltaX} is 1, {@code deltaY} is 1 and {@code deltaZ} is 1
	m	(DDDDDD)D	a	lerp2
		c	A two-dimensional lerp between values on the 4 corners of the unit square. Arbitrary values are specified for the corners and the output is interpolated between them.
		p	0	deltaX	deltaX
			c	The x-coordinate on the unit square
		p	2	deltaY	deltaY
			c	The y-coordinate on the unit square
		p	4	val00	val00
			c	The output if {@code deltaX} is 0 and {@code deltaY} is 0
		p	6	val10	val10
			c	The output if {@code deltaX} is 1 and {@code deltaY} is 0
		p	8	val01	val01
			c	The output if {@code deltaX} is 0 and {@code deltaY} is 1
		p	10	val11	val11
			c	The output if {@code deltaX} is 1 and {@code deltaY} is 1
	m	(FFF)F	b	stepAngleTowards
		c	Steps from {@code from} degrees towards {@code to} degrees, changing the value by at most {@code step} degrees.
		p	0	from	from
		p	1	to	to
		p	2	step	step
	m	(I)I	b	wrapDegrees
	m	(III)I	b	packRgb
		p	0	r	r
		p	1	g	g
		p	2	b	b
	m	(FF)F	b	floorMod
	m	(DDD)D	b	clampedLerp
		p	0	start	start
		p	2	end	end
		p	4	delta	delta
	m	(F)F	b	cos
	m	(D)I	b	fastFloor
	m	(II)I	b	floorMod
	m	(DD)Z	b	approximatelyEquals
		p	0	a	a
		p	2	b	b
	m	(II)I	c	roundUpToMultiple
		c	Returns a value farther than or as far as {@code value} from zero that\nis a multiple of {@code divisor}.
		p	0	value	value
		p	1	divisor	divisor
	m	(D)I	c	floor
	m	(FF)F	c	subtractAngles
		p	0	start	start
		p	1	end	end
	m	(F)F	c	sqrt
	m	(FFF)F	c	stepTowards
		c	Steps from {@code from} towards {@code to}, changing the value by at most {@code step}.
		p	0	from	from
		p	1	to	to
		p	2	step	step
	m	(III)J	c	hashCode
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(I)I	c	smallestEncompassingPowerOfTwo
		p	0	value	value
	m	(DD)D	c	floorMod
	m	(DDD)D	c	getLerpProgress
		c	Gets the fraction of the way that {@code value} is between {@code start} and {@code end}.\nThis is the delta value needed to lerp between {@code start} and {@code end} to get {@code value}.\nIn other words, {@code getLerpProgress(lerp(delta, start, end), start, end) == delta}.
		p	0	value	value
			c	The result of the lerp function
		p	2	start	start
			c	The value interpolated from
		p	4	end	end
			c	The value interpolated to
	m	(FFF)F	d	stepUnwrappedAngleTowards
		c	Steps from {@code from} degrees towards {@code to} degrees, changing the value by at most {@code step} degrees.\n\n<p>This method does not wrap the resulting angle, so {@link #stepAngleTowards(float, float, float)} should be used in preference.</p>
		p	0	from	from
		p	1	to	to
		p	2	step	step
	m	(DDD)D	d	lerp
		p	0	delta	delta
		p	2	start	start
		p	4	end	end
	m	(DD)D	d	atan2
		p	0	y	y
		p	2	x	x
	m	(D)J	d	lfloor
	m	(F)I	d	floor
	m	(I)Z	d	isPowerOfTwo
	m	(FF)F	d	angleBetween
		p	0	first	first
		p	1	second	second
	m	(F)F	e	abs
	m	(I)I	e	log2DeBruijn
	m	(FFF)I	e	packRgb
		p	0	r	r
		p	1	g	g
		p	2	b	b
	m	(FFF)I	f	hsvToRgb
		p	0	hue	hue
		p	1	saturation	saturation
		p	2	value	value
	m	(I)I	f	log2
	m	(F)I	f	ceil
	m	(D)I	f	ceil
	m	(I)I	g	idealHash
	m	(F)F	g	wrapDegrees
	m	(D)D	g	wrapDegrees
	m	(FFF)F	g	lerp
		p	0	delta	delta
		p	1	start	start
		p	2	end	end
	m	(FFF)F	h	lerpAngleDegrees
		p	0	delta	delta
		p	1	start	start
		p	2	end	end
	m	(F)F	h	fractionalPart
		p	0	value	value
	m	(D)D	h	fractionalPart
		p	0	value	value
	m	(F)F	i	fastInverseSqrt
		p	0	x	x
	m	(D)D	i	fastInverseSqrt
		p	0	x	x
	m	(D)D	j	perlinFade
	m	(F)F	j	fastInverseCbrt
		p	0	x	x
	m	(FFF)F	j	lerpAngle
		p	0	start	start
		p	1	end	end
		p	2	delta	delta
	m	(D)I	k	sign
	m	(F)F	k	square
		p	0	n	n
	m	(D)F	l	fwrapDegrees
		p	0	degrees	degrees
c	aed	net/minecraft/util/ProgressListener
	m	()V	a	setDone
	m	(I)V	a	progressStagePercentage
c	aee	net/minecraft/util/collection/ReusableStream
	c	A wrapper that automatically flattens the original stream and provides duplicates iterating a copy of that stream's output.
	f	Ljava/util/List;	a	collectedElements
	f	Ljava/util/Spliterator;	b	source
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1	stream	stream
	m	()Ljava/util/stream/Stream;	a	stream
c	aee$1	net/minecraft/util/collection/ReusableStream$1
	f	I	b	pos
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
		p	1	consumer	consumer
c	aef	net/minecraft/client/util/SmoothUtil
	f	D	a	actualSum
	f	D	b	smoothedSum
	f	D	c	movementLatency
	m	()V	a	clear
	m	(DD)D	a	smooth
		p	1	original	original
		p	3	smoother	smoother
c	aeg	net/minecraft/util/collection/SortedArraySet
	f	Ljava/util/Comparator;	a	comparator
	f	[Ljava/lang/Object;	b	elements
	f	I	c	size
	m	(ILjava/util/Comparator;)V	<init>	<init>
		p	1	initialCapacity	initialCapacity
		p	2	comparator	comparator
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addAndGet
		p	1	object	object
	m	(Ljava/lang/Object;I)V	a	add
		p	1	object	object
		p	2	index	index
	m	(I)Laeg;	a	create
		p	0	initialCapacity	initialCapacity
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	cast
		p	0	array	array
	m	(I)I	b	insertionPoint
		p	0	binarySearchResult	binarySearchResult
	m	()Ljava/lang/Object;	b	first
	m	(I)V	c	ensureCapacity
		p	1	minCapacity	minCapacity
	m	(Ljava/lang/Object;)I	c	binarySearch
		p	1	object	object
	m	(I)V	d	remove
		p	1	index	index
	m	(I)Ljava/lang/Object;	e	get
		p	1	index	index
c	aeg$a	net/minecraft/util/collection/SortedArraySet$SetIterator
	f	I	b	nextIndex
	f	I	c	lastIndex
c	aeh	net/minecraft/util/StringIdentifiable
	m	()Ljava/lang/String;	a	asString
c	aeh$1	net/minecraft/util/StringIdentifiable$1
	m	(Laeh;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
c	aei	net/minecraft/util/ChatUtil
	f	Ljava/util/regex/Pattern;	a	PATTERN
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripTextFormat
		p	0	text	text
	m	(I)Ljava/lang/String;	a	ticksToString
		p	0	ticks	ticks
	m	(Ljava/lang/String;)Z	b	isEmpty
c	aej	net/minecraft/entity/ai/Durations
	m	(II)Ladx;	a	betweenSeconds
		p	0	min	min
		p	1	max	max
c	aek	net/minecraft/util/Pair
	f	Ljava/lang/Object;	a	left
	f	Ljava/lang/Object;	b	right
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1	left	left
		p	2	right	right
	m	()Ljava/lang/Object;	a	getLeft
	m	()Ljava/lang/Object;	b	getRight
c	ael	net/minecraft/util/Unit
c	aen	net/minecraft/util/collection/WeightedPicker
	m	(Ljava/util/List;I)Laen$a;	a	getAt
		p	0	list	list
		p	1	weightMark	weightMark
	m	(Ljava/util/Random;Ljava/util/List;I)Laen$a;	a	getRandom
		p	0	random	random
		p	1	list	list
		p	2	weightSum	weightSum
	m	(Ljava/util/List;)I	a	getWeightSum
		p	0	list	list
	m	(Ljava/util/Random;Ljava/util/List;)Laen$a;	a	getRandom
		p	0	random	random
		p	1	list	list
c	aen$a	net/minecraft/util/collection/WeightedPicker$Entry
	f	I	a	weight
c	aeo	net/minecraft/datafixer/DataFixTypes
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	typeReference
	m	()Lcom/mojang/datafixers/DSL$TypeReference;	a	getTypeReference
c	aep	net/minecraft/datafixer/Schemas
	f	Ljava/util/function/BiFunction;	a	EMPTY
	f	Ljava/util/function/BiFunction;	b	EMPTY_IDENTIFIER_NORMALIZE
	f	Lcom/mojang/datafixers/DataFixer;	c	fixer
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	build
		p	0	builder	builder
	m	()Lcom/mojang/datafixers/DataFixer;	a	getFixer
	m	()Lcom/mojang/datafixers/DataFixer;	b	create
c	aeq	net/minecraft/util/math/WordPackedArray
	c	A packed array of integers. Introduced in 20w17a to represent the old\nblock state storage format.
	f	[J	a	array
	f	I	b	unitSize
	f	J	c	maxValue
	f	I	d	length
	m	(II)V	<init>	<init>
		p	1	unitSize	unitSize
			c	the max number of bits a value can use
		p	2	length	length
			c	the length of values
	m	(II[J)V	<init>	<init>
		p	1	unitSize	unitSize
		p	2	length	length
		p	3	array	array
	m	()[J	a	getAlignedArray
	m	(I)I	a	get
		p	1	index	index
	m	(II)V	a	set
		p	1	index	index
		p	2	value	value
	m	()I	b	getUnitSize
c	aer	net/minecraft/datafixer/fix/AbstractUuidFix
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	typeReference
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	typeReference	typeReference
	m	(Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional;	a	createArray
		p	1	mostBits	mostBits
		p	3	leastBits	leastBits
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	updateStringUuid
		p	1	oldKey	oldKey
		p	2	newKey	newKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateTyped
		p	1	typed	typed
		p	2	name	name
		p	3	updater	updater
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	createArrayFromCompoundUuid
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	createArrayFromStringUuid
		p	1	key	key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	b	updateCompoundUuid
		p	1	oldKey	oldKey
		p	2	newKey	newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	c	updateRegularMostLeast
		p	1	oldKey	oldKey
		p	2	newKey	newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	d	createArrayFromMostLeastTags
		p	1	mostBitsKey	mostBitsKey
		p	2	leastBitsKey	leastBitsKey
c	aes	net/minecraft/datafixer/fix/ChoiceTypesFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	types
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	name	name
		p	3	types	types
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	fixChoiceTypes
		p	1	name	name
		p	2	inputChoiceType	inputChoiceType
		p	3	outputChoiceType	outputChoiceType
c	aet	net/minecraft/datafixer/fix/AdvancementsFix
	f	Ljava/util/Map;	a	RENAMED_ADVANCEMENTS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aeu	net/minecraft/datafixer/fix/AdvancementRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
		p	3	name	name
		p	4	renamer	renamer
c	aev	net/minecraft/datafixer/fix/RenameItemStackAttributesFix
	f	Ljava/util/Map;	a	RENAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateAttributeName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateAttributeModifiers
		p	0	typed	typed
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	updatePlayerAttributes
		p	0	typed	typed
c	aew	net/minecraft/datafixer/fix/BedBlockEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aex	net/minecraft/datafixer/fix/BedItemColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aey	net/minecraft/datafixer/fix/BeehiveRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
c	aez	net/minecraft/datafixer/fix/BiomesFix
	f	Ljava/util/Map;	a	RENAMED_BIOMES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	af	net/minecraft/advancement/AdvancementDisplay
	f	Lmr;	a	title
	f	Lmr;	b	description
	f	Lbki;	c	icon
	f	Luh;	d	background
	f	Lag;	e	frame
	f	Z	f	showToast
	f	Z	g	announceToChat
	f	Z	h	hidden
	f	F	i	xPos
	f	F	j	yPos
	m	(Lbki;Lmr;Lmr;Luh;Lag;ZZZ)V	<init>	<init>
		p	1	icon	icon
		p	2	title	title
		p	3	description	description
		p	4	background	background
		p	5	frame	frame
		p	6	showToast	showToast
		p	7	announceToChat	announceToChat
		p	8	hidden	hidden
	m	(FF)V	a	setPosition
		p	1	xPos	xPos
		p	2	yPos	yPos
	m	(Lcom/google/gson/JsonObject;)Laf;	a	fromJson
		p	0	obj	obj
	m	()Lmr;	a	getTitle
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	()Lmr;	b	getDescription
	m	(Lmg;)Laf;	b	fromPacket
		p	0	buf	buf
	m	(Lcom/google/gson/JsonObject;)Lbki;	b	iconFromJson
		p	0	json	json
	m	()Lbki;	c	getIcon
	m	()Luh;	d	getBackground
	m	()Lag;	e	getFrame
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceToChat
	m	()Z	j	isHidden
	m	()Lcom/google/gson/JsonElement;	k	toJson
	m	()Lcom/google/gson/JsonObject;	l	iconToJson
c	afa	net/minecraft/datafixer/fix/BitStorageAlignFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
c	afb	net/minecraft/datafixer/fix/BlockEntityBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBannerColor
c	afc	net/minecraft/datafixer/fix/BlockEntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afd	net/minecraft/datafixer/fix/BlockEntityCustomNameToTextFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afe	net/minecraft/datafixer/fix/BlockEntityIdFix
	f	Ljava/util/Map;	a	RENAMED_BLOCK_ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aff	net/minecraft/datafixer/fix/BlockEntityJukeboxFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afg	net/minecraft/datafixer/fix/BlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	keepPacked
c	afh	net/minecraft/datafixer/fix/BlockEntityShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afi	net/minecraft/datafixer/fix/BlockEntitySignTextStrictJsonFix
	f	Lcom/google/gson/Gson;	a	GSON
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	2	lineName	lineName
c	afi$1	net/minecraft/datafixer/fix/BlockEntitySignTextStrictJsonFix$1
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lmx;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	afj	net/minecraft/datafixer/fix/BlockEntityUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSkull
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateConduit
c	afk	net/minecraft/datafixer/fix/BlockNameFlatteningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afl	net/minecraft/datafixer/fix/BlockNameFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	oldSchema	oldSchema
		p	2	name	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0	oldSchema	oldSchema
		p	1	name	name
		p	2	rename	rename
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1	oldName	oldName
c	afn	net/minecraft/datafixer/fix/BlockStateFlattening
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	OLD_STATE_TO_ID
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	OLD_BLOCK_TO_ID
	m	(ILjava/lang/String;[Ljava/lang/String;)V	a	putStates
		p	0	oldId	oldId
		p	1	newStateStr	newStateStr
		p	2	oldStateStrings	oldStateStrings
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lookupBlock
		p	0	oldBlockName	oldBlockName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lookupState
	m	()V	a	fillEmptyStates
	m	(I)Ljava/lang/String;	a	lookupStateBlock
		p	0	stateId	stateId
	m	(I)Lcom/mojang/serialization/Dynamic;	b	lookupState
		p	0	stateId	stateId
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	parseState
		p	0	stateStr	stateStr
c	afo	net/minecraft/datafixer/fix/BlockStateStructureTemplateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afp	net/minecraft/datafixer/fix/CatTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixCatTypeData
c	afq	net/minecraft/datafixer/fix/BiomeFormatFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afr	net/minecraft/datafixer/fix/ChunkLightRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afs	net/minecraft/datafixer/fix/ChunkPalettedStorageFix
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/BitSet;	b	blocksNeedingSideUpdate
	f	Ljava/util/BitSet;	c	blocksNeedingInPlaceUpdate
	f	Lcom/mojang/serialization/Dynamic;	d	pumpkin
	f	Lcom/mojang/serialization/Dynamic;	e	podzol
	f	Lcom/mojang/serialization/Dynamic;	f	snowyGrass
	f	Lcom/mojang/serialization/Dynamic;	g	snowyMycelium
	f	Lcom/mojang/serialization/Dynamic;	h	sunflowerUpper
	f	Lcom/mojang/serialization/Dynamic;	i	lilacUpper
	f	Lcom/mojang/serialization/Dynamic;	j	grassUpper
	f	Lcom/mojang/serialization/Dynamic;	k	fernUpper
	f	Lcom/mojang/serialization/Dynamic;	l	roseUpper
	f	Lcom/mojang/serialization/Dynamic;	m	peonyUpper
	f	Ljava/util/Map;	n	flowerPot
	f	Ljava/util/Map;	o	skull
	f	Ljava/util/Map;	p	door
	f	Ljava/util/Map;	q	noteBlock
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	r	colors
	f	Ljava/util/Map;	s	bed
	f	Ljava/util/Map;	t	banner
	f	Lcom/mojang/serialization/Dynamic;	u	air
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ladm;Lcom/mojang/serialization/Dynamic;)I	a	addTo
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	buildSkull
		p	0	out	out
		p	2	mob	mob
		p	3	block	block
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	buildBed
		p	0	out	out
	m	(Ljava/util/Map;Ljava/lang/String;I)V	a	buildDoor
		p	0	out	out
		p	1	name	name
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getName
	m	(ZZZZ)I	a	getSideToUpgradeFlag
		p	0	west	west
		p	1	east	east
		p	2	north	north
		p	3	south	south
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	buildBanner
		p	0	out	out
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixChunk
c	afs$a	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$ChunkNibbleArray
	f	[B	a	contents
	m	(I)Z	a	usesLowNibble
		p	1	index	index
	m	(III)I	a	get
		p	1	x	x
		p	2	y	y
	m	(I)I	b	getRawIndex
		p	1	index	index
c	afs$b	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Facing
	f	Lafs$b$a;	g	axis
	f	Lafs$b$b;	h	direction
	m	(Ljava/lang/String;ILafs$b$b;Lafs$b$a;)V	<init>	<init>
		p	3	direction	direction
	m	()Lafs$b$b;	a	getDirection
	m	()Lafs$b$a;	b	getAxis
c	afs$b$a	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Facing$Axis
c	afs$b$b	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Facing$Direction
	f	I	c	offset
	m	()I	a	getOffset
c	afs$c	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Section
	f	I	a	y
	f	Ladm;	b	paletteMap
	f	Ljava/util/List;	c	paletteData
	f	Lcom/mojang/serialization/Dynamic;	d	section
	f	Z	e	hasBlocks
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	inPlaceUpdates
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	innerPositions
	f	Ljava/util/Set;	h	seenStates
	f	[I	i	states
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
		p	1	pos	pos
	m	(II)V	a	addInPlaceUpdate
		p	1	section	section
		p	2	index	index
	m	()Lcom/mojang/serialization/Dynamic;	a	transform
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
		p	1	index	index
	m	(I)I	b	visit
		p	1	sidesToUpgrade	sidesToUpgrade
c	afs$d	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Level
	f	I	a	sidesToUpgrade
	f	[Lafs$c;	b	sections
	f	Lcom/mojang/serialization/Dynamic;	c	level
	f	I	d	xPos
	f	I	e	yPos
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
	m	(ILafs$b;)I	a	adjacentTo
		p	1	direction	direction
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
	m	()Lcom/mojang/serialization/Dynamic;	a	transform
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getBlockEntity
	m	(I)Lcom/mojang/serialization/Dynamic;	c	removeBlockEntity
	m	(I)Lafs$c;	d	getSection
c	aft	net/minecraft/datafixer/fix/ChunkStatusFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afu	net/minecraft/datafixer/fix/ChunkStatusFix2
	f	Ljava/util/Map;	a	statusMap
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afv	net/minecraft/datafixer/fix/ChunkStructuresTemplateRenameFix
	f	Lcom/google/common/collect/ImmutableMap;	a	structures
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afw	net/minecraft/datafixer/fix/ChunkToProtoChunkFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afx	net/minecraft/datafixer/fix/ColorlessShulkerEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afy	net/minecraft/datafixer/mapping/LegacyDyeItemMapping
	f	Ljava/util/Map;	a	MAP
c	afz	net/minecraft/datafixer/fix/EntityArmorStandSilentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixSilent
c	ag	net/minecraft/advancement/AdvancementFrame
	f	Ljava/lang/String;	d	id
	f	I	e	texV
	f	Li;	f	titleFormat
	m	(Ljava/lang/String;ILjava/lang/String;ILi;)V	<init>	<init>
		p	3	id	id
		p	4	texV	texV
		p	5	titleFormat	titleFormat
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Lag;	a	forName
		p	0	name	name
	m	()I	b	texV
	m	()Li;	c	getTitleFormat
c	aga	net/minecraft/datafixer/fix/EntityBlockStateFix
	f	Ljava/util/Map;	a	BLOCK_NAME_TO_ID
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	useFunction
		p	2	entityId	entityId
		p	3	function	function
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	mergeIdAndData
		p	2	oldIdKey	oldIdKey
		p	3	oldDataKey	oldDataKey
		p	4	newStateKey	newStateKey
	m	(Ljava/lang/String;)I	a	getNumericalBlockId
		p	0	blockId	blockId
c	agb	net/minecraft/datafixer/fix/EntityCatSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agc	net/minecraft/datafixer/fix/EntityCodSalmonFix
	f	Ljava/util/Map;	a	ENTITIES
	f	Ljava/util/Map;	b	SPAWN_EGGS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agd	net/minecraft/datafixer/fix/EntityCustomNameToTextFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixCustomName
c	age	net/minecraft/datafixer/fix/EntityElderGuardianSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agf	net/minecraft/datafixer/fix/EntityEquipmentToArmorAndHandFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	fixEquipment
c	agg	net/minecraft/datafixer/fix/EntityHealthFix
	f	Ljava/util/Set;	a	ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixHealth
c	agh	net/minecraft/datafixer/fix/EntityHorseSaddleFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agi	net/minecraft/datafixer/fix/EntityHorseSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agj	net/minecraft/datafixer/fix/EntityIdFix
	f	Ljava/util/Map;	a	RENAMED_ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agk	net/minecraft/datafixer/fix/EntityItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixDirection
	m	(B)B	a	updateDirection
c	agl	net/minecraft/datafixer/fix/EntityMinecartIdentifiersFix
	f	Ljava/util/List;	a	MINECARTS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agm	net/minecraft/datafixer/fix/HangingEntityFix
	f	[[I	a	OFFSETS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic;	a	fixDecorationPosition
		p	2	isPainting	isPainting
		p	3	isItemFrame	isItemFrame
c	agn	net/minecraft/datafixer/fix/EntityPaintingMotiveFix
	f	Ljava/util/Map;	a	RENAMED_MOTIVES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	renameMotive
c	ago	net/minecraft/datafixer/fix/EntityProjectileOwnerFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixEntities
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	update
	m	(Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic;	a	insertOwnerUuidArray
		p	2	most	most
		p	4	least	least
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	moveFlatOwnerMostLeastToArray
	m	(JJ)[I	a	makeUuidArray
		p	0	most	most
		p	2	least	least
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	moveNestedOwnerMostLeastToArray
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	renamePotionToItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	moveOwnerToArray
c	agp	net/minecraft/datafixer/fix/EntityPufferfishRenameFix
	f	Ljava/util/Map;	a	RENAMED_FISH
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agq	net/minecraft/datafixer/fix/EntityRavagerRenameFix
	f	Ljava/util/Map;	a	ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agr	net/minecraft/datafixer/fix/EntityRedundantChanceTagsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ags	net/minecraft/datafixer/fix/EntityTransformFix
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	name	name
		p	2	outputSchema	outputSchema
		p	3	changesType	changesType
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	transform
		p	1	choice	choice
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	makeTyped
c	agt	net/minecraft/datafixer/fix/EntityRidingToPassengerFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	fixEntityTree
		p	1	inputSchema	inputSchema
		p	2	outputSchema	outputSchema
		p	3	inputEntityTreeType	inputEntityTreeType
		p	4	outputEntityTreeType	outputEntityTreeType
		p	5	inputEntityType	inputEntityType
c	agu	net/minecraft/datafixer/fix/EntityShulkerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixShulkerColor
c	agv	net/minecraft/datafixer/fix/EntityShulkerRotationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixRotation
c	agw	net/minecraft/datafixer/fix/EntitySkeletonSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agx	net/minecraft/datafixer/fix/EntityStringUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agy	net/minecraft/datafixer/fix/EntityTheRenameningBlock
	f	Ljava/util/Map;	a	ENTITIES
	f	Ljava/util/Map;	b	BLOCKS
	f	Ljava/util/Map;	c	ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agz	net/minecraft/datafixer/fix/EntityTippedArrowFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ah	net/minecraft/advancement/CriterionMerger
	f	Lah;	a	AND
	f	Lah;	b	OR
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	createRequirements	createRequirements
		p	1	criteriaNames	criteriaNames
c	aha	net/minecraft/datafixer/fix/EntityUuidFix
	f	Ljava/util/Set;	c	RIDEABLE_TAMEABLES
	f	Ljava/util/Set;	d	TAMEABLE_PETS
	f	Ljava/util/Set;	e	BREEDABLES
	f	Ljava/util/Set;	f	LEASHABLES
	f	Ljava/util/Set;	g	OTHER_LIVINGS
	f	Ljava/util/Set;	h	PROJECTILES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateLiving
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSelfUuid
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateAngryAtMemory
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	updateEvokerFangs
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateZombieVillager
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	updateAreaEffectCloud
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	updateShulkerBullet
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	updateItemEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	updateFox
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	updateZombifiedPiglin
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	updateTameable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	m	updateBreedable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	updateLeashable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	updateProjectile
c	ahb	net/minecraft/datafixer/fix/EntityWolfColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixCollarColor
c	ahc	net/minecraft/datafixer/fix/EntityZombieSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahd	net/minecraft/datafixer/fix/EntityZombieVillagerTypeFix
	f	Ljava/util/Random;	a	RANDOM
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixZombieType
	m	(I)I	a	clampType
		p	1	type	type
c	ahe	net/minecraft/datafixer/fix/EntityZombifiedPiglinRenameFix
	f	Ljava/util/Map;	a	RENAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
c	ahf	net/minecraft/datafixer/fix/RemovePoiValidTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	removeValidTag
c	ahg	net/minecraft/datafixer/fix/FurnaceRecipesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateBlockEntityData
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	updateBlockEntities
c	ahh	net/minecraft/datafixer/fix/VillagerGossipFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	choiceType	choiceType
c	ahi	net/minecraft/datafixer/fix/HeightmapRenamingFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	renameHeightmapTags
c	ahj	net/minecraft/datafixer/fix/IglooMetadataRemovalFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	removeMetadata
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	removeIgloos
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isIgloo
c	ahk	net/minecraft/datafixer/fix/ItemBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahl	net/minecraft/datafixer/fix/ItemCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixCustomName
c	ahm	net/minecraft/datafixer/fix/ItemIdFix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	NUMERICAL_ID_TO_STRING_ID_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(I)Ljava/lang/String;	a	fromId
		p	0	id	id
c	ahn	net/minecraft/datafixer/fix/ItemLoreToTextFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	componentize
		p	0	string	string
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixLoreTags
		p	0	tags	tags
c	aho	net/minecraft/datafixer/fix/ItemPotionFix
	f	[Ljava/lang/String;	a	ID_TO_POTIONS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahp	net/minecraft/datafixer/fix/ItemNameFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	name	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0	outputSchema	outputSchema
		p	1	name	name
		p	2	rename	rename
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1	input	input
c	ahq	net/minecraft/datafixer/fix/ItemShulkerBoxColorFix
	f	[Ljava/lang/String;	a	COLORED_SHULKER_BOX_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahr	net/minecraft/datafixer/fix/ItemSpawnEggFix
	f	[Ljava/lang/String;	a	DAMAGE_TO_ENTITY_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahs	net/minecraft/datafixer/fix/ItemStackEnchantmentFix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ID_TO_ENCHANTMENTS_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixEnchantments
c	aht	net/minecraft/datafixer/fix/ItemInstanceMapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahu	net/minecraft/datafixer/fix/ItemInstanceSpawnEggFix
	f	Ljava/util/Map;	a	ENTITY_SPAWN_EGGS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahv	net/minecraft/datafixer/fix/ItemInstanceTheFlatteningFix
	f	Ljava/util/Map;	a	FLATTENING_MAP
	f	Ljava/util/Set;	b	ORIGINAL_ITEM_NAMES
	f	Ljava/util/Set;	c	DAMAGEABLE_ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	getItem
		p	0	originalName	originalName
		p	1	damage	damage
c	ahw	net/minecraft/datafixer/fix/ItemStackUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
c	ahx	net/minecraft/datafixer/fix/ItemWaterPotionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ahy	net/minecraft/datafixer/fix/ItemWrittenBookPagesStrictJsonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBookPages
c	ahz	net/minecraft/datafixer/fix/JigsawPropertiesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	renameProperties
c	ai	net/minecraft/advancement/AdvancementPositioner
	f	Lw;	a	advancement
	f	Lai;	b	parent
	f	Lai;	c	previousSibling
	f	I	d	childrenSize
	f	Ljava/util/List;	e	children
	f	Lai;	f	optionalLast
	f	Lai;	g	substituteChild
	f	I	h	depth
	f	F	i	row
	f	F	j	relativeRowInSiblings
	m	(Lw;Lai;Lai;II)V	<init>	<init>
		p	1	advancement	advancement
		p	2	parent	parent
		p	3	previousSibling	previousSibling
		p	4	childrenSize	childrenSize
		p	5	depth	depth
	m	(Lai;Lai;)Lai;	a	getLast
	m	(F)V	a	increaseRowRecursively
		p	1	deltaRow	deltaRow
	m	(Lai;)Lai;	a	onFinishCalculation
		p	1	last	last
	m	(FIF)F	a	findMinRowRecursively
		p	1	deltaRow	deltaRow
		p	2	depth	depth
		p	3	minRow	minRow
	m	()V	a	calculateRecursively
	m	(Lai;F)V	a	pushDown
		p	2	extraRowDistance	extraRowDistance
	m	(Lw;Lai;)Lai;	a	findChildrenRecursively
		p	2	lastChild	lastChild
	m	(Lw;)V	a	arrangeForTree
		p	0	root	root
	m	()V	b	onFinishChildrenCalculation
	m	()Lai;	c	getFirstChild
	m	()Lai;	d	getLastChild
	m	()V	e	apply
c	aia	net/minecraft/datafixer/fix/JigsawRotationFix
	f	Ljava/util/Map;	a	ORIENTATION_UPDATES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateBlockState
c	aib	net/minecraft/datafixer/fix/LeavesFix
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	LEAVES_MAP
	f	Ljava/util/Set;	c	LOGS_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aib$a	net/minecraft/datafixer/fix/LeavesFix$LeavesLogFixer
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	e	leafIndices
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	f	logIndices
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	g	leafStates
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;	a	createLeafProperties
	m	(I)Z	a	isLog
	m	(III)V	a	computeLeafStates
	m	(I)Z	b	isLeaf
	m	(I)I	d	getDistanceToLog
c	aib$b	net/minecraft/datafixer/fix/LeavesFix$ListFixer
	f	Ljava/util/List;	b	properties
	f	Laeq;	d	blockStateMap
	m	(Ljava/lang/String;ZI)I	a	computeFlags
		p	1	leafBlockName	leafBlockName
		p	2	persistent	persistent
	m	()Z	a	needsFix
	m	(Lcom/mojang/serialization/Dynamic;)V	a	computeFixableBlockStates
	m	()Z	b	isFixed
	m	(I)I	c	needsFix
c	aic	net/minecraft/datafixer/fix/LevelDataGeneratorOptionsFix
	f	Ljava/util/Map;	a	NUMERICAL_IDS_TO_BIOME_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	parseFlatLayer
		p	0	layer	layer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	fixGeneratorOptions
		p	0	generatorOptions	generatorOptions
	m	(Ljava/lang/String;)Ljava/util/List;	b	parseFlatLayers
		p	0	layers	layers
c	aid	net/minecraft/datafixer/fix/LevelFlatGeneratorInfoFix
	f	Lcom/google/common/base/Splitter;	a	SPLIT_ON_SEMICOLON
	f	Lcom/google/common/base/Splitter;	b	SPLIT_ON_COMMA
	f	Lcom/google/common/base/Splitter;	c	SPLIT_ON_LOWER_X
	f	Lcom/google/common/base/Splitter;	d	SPLIT_ON_ASTERISK
	f	Lcom/google/common/base/Splitter;	e	SPLIT_ON_COLON
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixFlatGeneratorOptions
		p	1	generatorOptions	generatorOptions
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixGeneratorOptions
c	aie	net/minecraft/datafixer/fix/WorldUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
c	aif	net/minecraft/datafixer/fix/MapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aig	net/minecraft/datafixer/fix/MemoryExpiryDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	choiceName	choiceName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateBrain
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	updateMemoryMapValues
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateMemories
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateMemoryMap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateMemoryMapValueEntry
c	aih	net/minecraft/datafixer/fix/MissingDimensionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aii	net/minecraft/datafixer/fix/MobSpawnerEntityIdentifiersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixSpawner
c	aij	net/minecraft/datafixer/fix/ChoiceFix
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	choiceName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
		p	3	name	name
		p	4	type	type
		p	5	choiceName	choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	transform
		p	1	inputType	inputType
c	aik	net/minecraft/datafixer/fix/NewVillageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ail	net/minecraft/datafixer/fix/ObjectiveDisplayNameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aim	net/minecraft/datafixer/fix/ObjectiveRenderTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ldfp$a;	a	parseLegacyRenderType
		p	0	oldName	oldName
c	ain	net/minecraft/datafixer/fix/OminousBannerBlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBannerName
c	aio	net/minecraft/datafixer/fix/OminousBannerItemRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBannerName
c	aip	net/minecraft/datafixer/fix/OptionsAddTextBackgroundFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)D	a	convertToTextBackgroundOpacity
		p	1	chatOpacity	chatOpacity
c	aiq	net/minecraft/datafixer/fix/OptionsForceVBOFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	air	net/minecraft/datafixer/fix/OptionsKeyLwjgl3Fix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	NUMERICAL_KEY_IDS_TO_KEY_NAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ais	net/minecraft/datafixer/fix/OptionsKeyTranslationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ait	net/minecraft/datafixer/fix/OptionsLowerCaseLanguageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aiv	net/minecraft/datafixer/fix/PlayerUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
c	aiw	net/minecraft/datafixer/fix/PointOfInterestRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1	input	input
c	aix	net/minecraft/datafixer/fix/RecipeFix
	f	Ljava/util/Map;	a	recipes
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aiy	net/minecraft/datafixer/fix/RecipeRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
		p	3	name	name
		p	4	renamer	renamer
c	aiz	net/minecraft/datafixer/fix/RecipeRenamingFix
	f	Ljava/util/Map;	a	recipes
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aj	net/minecraft/advancement/criterion/AbstractCriterionConditions
	f	Luh;	a	id
	f	Lbe$b;	b	playerPredicate
	m	(Luh;Lbe$b;)V	<init>	<init>
		p	1	id	id
		p	2	playerPredicate	playerPredicate
	m	()Lbe$b;	b	getPlayerPredicate
c	aja	net/minecraft/datafixer/fix/RedstoneConnectionsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateBlockState
	m	(Ljava/lang/String;)Z	a	hasObsoleteValue
c	ajb	net/minecraft/datafixer/TypeReferences
	c	Represents all the type references Minecraft's datafixer can fix.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	PLAYER
		c	A type reference which refers to a player.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	CHUNK
		c	A type reference which refers to a chunk.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	HOTBAR
		c	A type reference which refers to the saved creative hotbars.\n\n<p>This type reference is only used on the client.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	OPTIONS
		c	A type reference which refers to client game options.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	SAVED_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	POI_CHUNK
		c	A type reference which refers to the point of interest data in a chunk.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	BLOCK_ENTITY
		c	A type reference which refers to a block entity.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	ITEM_STACK
		c	A type reference which refers to an item stack.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	BLOCK_STATE
		c	A type reference which refers to a block state.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	ENTITY_NAME
		c	A type reference which refers to an entity's identifier.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	ENTITY_TREE
		c	A type reference which refers to an entity tree.\n\n<p>An entity tree contains the passengers of an entity and their passengers.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	ENTITY
		c	A type reference which refers to a type of entity.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	BLOCK_NAME
		c	A type reference which refers to a block's identifier.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	ITEM_NAME
		c	A type reference which refers to an item's identifier.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	BIOME
		c	A type reference which refers to a biome.
	f	Lcom/mojang/datafixers/DSL$TypeReference;	y	CHUNK_GENERATOR_SETTINGS
		c	A type reference which refers to chunk generator settings.
c	ajc	net/minecraft/datafixer/fix/BiomeRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
		p	3	name	name
		p	4	changes	changes
c	ajd	net/minecraft/datafixer/mapping/LegacyCoralFanBlockMapping
	f	Ljava/util/Map;	a	MAP
c	aje	net/minecraft/datafixer/mapping/LegacyCoralBlockMapping
	f	Ljava/util/Map;	a	MAP
c	ajf	net/minecraft/datafixer/fix/PointOfInterestReorganizationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	reorganize
c	ajg	net/minecraft/datafixer/fix/PersistentStateUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	outputSchema	outputSchema
c	ajh	net/minecraft/datafixer/fix/SavedDataVillageCropFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixCropId
		p	1	cropId	cropId
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixVillageChildren
		p	0	villageChildren	villageChildren
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixSmallPlotCropIds
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	fixLargePlotCropIds
c	aji	net/minecraft/datafixer/fix/EntitySimpleTransformFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	transform
		p	1	choice	choice
c	ajj	net/minecraft/datafixer/fix/EntityRenameFix
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	name	name
		p	2	outputSchema	outputSchema
		p	3	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1	oldName	oldName
c	ajk	net/minecraft/datafixer/fix/StatsCounterFix
	f	Ljava/util/Set;	a	SKIP
	f	Ljava/util/Map;	b	RENAMED_GENERAL_STATS
	f	Ljava/util/Map;	c	RENAMED_ITEM_STATS
	f	Ljava/util/Map;	d	RENAMED_ENTITY_STATS
	f	Ljava/util/Map;	e	RENAMED_ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getItem
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getBlock
c	ajl	net/minecraft/datafixer/fix/StriderGravityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateNoGravityTag
c	ajm	net/minecraft/datafixer/fix/StructureReferenceFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateReferences
c	ajn	net/minecraft/datafixer/fix/SwimStatsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ajo	net/minecraft/datafixer/fix/TeamDisplayNameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ajp	net/minecraft/datafixer/fix/AddTrappedChestFix
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ajp$a	net/minecraft/datafixer/fix/AddTrappedChestFix$ListFixer
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	e	targets
	m	(I)Z	a	isTarget
		p	1	index	index
c	ajq	net/minecraft/datafixer/fix/VillagerProfessionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	entity	entity
	m	(II)Ljava/lang/String;	a	convertProfessionId
		p	0	professionId	professionId
		p	1	careerId	careerId
c	ajr	net/minecraft/datafixer/fix/VillagerFollowRangeFix
c	ajs	net/minecraft/datafixer/fix/VillagerXpRebuildFix
	f	[I	a	LEVEL_TO_XP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(I)I	a	levelToXp
		p	0	level	level
c	ajt	net/minecraft/datafixer/fix/VillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixPumpkinTrade
c	aju	net/minecraft/datafixer/fix/WallPropertyFix
	f	Ljava/util/Set;	a	TARGET_BLOCK_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	booleanToWallType
		p	0	value	value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateWallProperties
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateWallValueReference
c	ajv	net/minecraft/datafixer/fix/StructureSeparationDataFix
	f	Lcom/google/common/collect/ImmutableMap;	a	STRUCTURE_SPACING
c	ajv$a	net/minecraft/datafixer/fix/StructureSeparationDataFix$Information
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
	m	(III)V	<init>	<init>
		p	1	spacing	spacing
		p	2	separation	separation
		p	3	salt	salt
c	ajw	net/minecraft/datafixer/fix/WriteAndReadFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	name	name
		p	3	type	type
c	ajx	net/minecraft/datafixer/fix/ZombieVillagerXpRebuildFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ak	net/minecraft/advancement/criterion/BeeNestDestroyedCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbvr;	a	getBlock
		p	0	root	root
	m	(Lze;Lbvr;Lbki;I)V	a	test
		p	1	player	player
		p	2	block	block
		p	3	stack	stack
		p	4	beeCount	beeCount
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lak$a;	a	conditionsFromJson
	m	(Lbvr;Lbki;ILak$a;)Z	a	method_23872
		p	3	conditions	conditions
c	ak$a	net/minecraft/advancement/criterion/BeeNestDestroyedCriterion$Conditions
	f	Lbvr;	a	block
	f	Lbo;	b	item
	f	Lbx$d;	c	beeCount
	m	(Lbe$b;Lbvr;Lbo;Lbx$d;)V	<init>	<init>
		p	1	player	player
		p	2	block	block
		p	3	item	item
		p	4	beeCount	beeCount
	m	(Lbvr;Lbki;I)Z	a	test
		p	1	block	block
		p	2	stack	stack
		p	3	count	count
	m	(Lbvr;Lbo$a;Lbx$d;)Lak$a;	a	create
		p	0	block	block
		p	1	itemPredicateBuilder	itemPredicateBuilder
		p	2	beeCountRange	beeCountRange
c	aka	net/minecraft/datafixer/schema/IdentifierNormalizingSchema
	f	Lcom/mojang/serialization/codecs/PrimitiveCodec;	a	CODEC
	f	Lcom/mojang/datafixers/types/Type;	b	IDENTIFIER_TYPE
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	()Lcom/mojang/datafixers/types/Type;	a	getIdentifierType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	normalize
		p	0	id	id
c	aka$1	net/minecraft/datafixer/schema/IdentifierNormalizingSchema$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object;	a	write
c	akb	net/minecraft/datafixer/schema/Schema100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	targetItems
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	targetEntity
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akc	net/minecraft/datafixer/schema/Schema102
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akd	net/minecraft/datafixer/schema/Schema1022
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	ake	net/minecraft/datafixer/schema/Schema106
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akf	net/minecraft/datafixer/schema/Schema107
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
c	akg	net/minecraft/datafixer/schema/Schema1125
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akh	net/minecraft/datafixer/schema/Schema135
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	aki	net/minecraft/datafixer/schema/Schema143
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
c	akj	net/minecraft/datafixer/schema/Schema1451
c	akk	net/minecraft/datafixer/schema/Schema1451v1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akl	net/minecraft/datafixer/schema/Schema1451v2
c	akm	net/minecraft/datafixer/schema/Schema1451v3
c	akn	net/minecraft/datafixer/schema/Schema1451v4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	ako	net/minecraft/datafixer/schema/Schema1451v5
c	akp	net/minecraft/datafixer/schema/Schema1451v6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akq	net/minecraft/datafixer/schema/Schema1451v7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akr	net/minecraft/datafixer/schema/Schema1460
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	aks	net/minecraft/datafixer/schema/Schema1466
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	akt	net/minecraft/datafixer/schema/Schema1470
c	aku	net/minecraft/datafixer/schema/Schema1481
c	akv	net/minecraft/datafixer/schema/Schema1483
c	akw	net/minecraft/datafixer/schema/Schema1486
c	akx	net/minecraft/datafixer/schema/Schema1510
c	aky	net/minecraft/datafixer/schema/Schema1800
c	akz	net/minecraft/datafixer/schema/Schema1801
c	al	net/minecraft/predicate/BlockPredicate
	f	Lal;	a	ANY
	f	Ladf;	b	tag
	f	Lbvr;	c	block
	f	Lck;	d	state
	f	Lbz;	e	nbt
	m	(Ladf;Lbvr;Lck;Lbz;)V	<init>	<init>
		p	1	tag	tag
		p	2	block	block
		p	3	state	state
		p	4	nbt	nbt
	m	(Lcom/google/gson/JsonElement;)Lal;	a	fromJson
		p	0	json	json
	m	(Lzd;Lfu;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	al$a	net/minecraft/predicate/BlockPredicate$Builder
	f	Lbvr;	a	block
	f	Ladf;	b	tag
	f	Lck;	c	state
	f	Lbz;	d	nbt
	m	(Lck;)Lal$a;	a	state
		p	1	state	state
	m	()Lal$a;	a	create
	m	(Lbvr;)Lal$a;	a	block
		p	1	block	block
	m	()Lal;	b	build
c	ala	net/minecraft/datafixer/schema/Schema1904
c	alb	net/minecraft/datafixer/schema/Schema1906
c	alc	net/minecraft/datafixer/schema/Schema1909
c	ald	net/minecraft/datafixer/schema/Schema1920
c	ale	net/minecraft/datafixer/schema/Schema1928
c	alf	net/minecraft/datafixer/schema/Schema1929
c	alg	net/minecraft/datafixer/schema/Schema1931
c	alh	net/minecraft/datafixer/schema/Schema2100
c	ali	net/minecraft/datafixer/schema/Schema2501
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	targetRecipeUsedField
		p	0	schema	schema
		p	1	map	map
		p	2	name	name
c	alj	net/minecraft/datafixer/schema/Schema2502
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	targetEntity
		p	0	schema	schema
		p	1	map	map
		p	2	name	name
c	alk	net/minecraft/datafixer/schema/Schema2505
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	updatePiglinItems
c	all	net/minecraft/datafixer/schema/Schema2509
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	renameZombifiedPiglin
c	alm	net/minecraft/datafixer/schema/Schema2519
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	updateStriderItems
		p	0	schema	schema
		p	1	entityTypes	entityTypes
		p	2	name	name
c	aln	net/minecraft/datafixer/schema/Schema2522
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	updateZoglinItems
		p	0	schema	schema
		p	1	entityTypes	entityTypes
		p	2	name	name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
		p	1	schema	schema
c	alo	net/minecraft/datafixer/schema/Schema2551
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	1	schema	schema
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	alp	net/minecraft/datafixer/schema/Schema501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
c	alq	net/minecraft/datafixer/schema/Schema700
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
c	alr	net/minecraft/datafixer/schema/Schema701
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
c	als	net/minecraft/datafixer/schema/Schema702
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
c	alt	net/minecraft/datafixer/schema/Schema703
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
c	alu	net/minecraft/datafixer/schema/Schema704
	f	Ljava/util/Map;	a	BLOCK_RENAMES
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	alv	net/minecraft/datafixer/schema/Schema705
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	alw	net/minecraft/datafixer/schema/Schema808
c	alx	net/minecraft/datafixer/schema/Schema99
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1	versionKey	versionKey
		p	2	parent	parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	targetEquipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
		p	2	entityTypes	entityTypes
		p	3	blockEntityTypes	blockEntityTypes
c	alz	net/minecraft/server/dedicated/ServerMBean
	c	A dynamic management object for a Minecraft Server.\n\n<p>It exposes the average tick time and the historical tick times of the\nMinecraft Server.</p>\n\n@see javax.management.DynamicMBean
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljavax/management/MBeanInfo;	c	beanInfo
	f	Ljava/util/Map;	d	entries
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	()F	a	getAverageTickTime
		c	Returns the server's current average tick time, in milliseconds.
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	register
		c	Registers a dynamic MBean for a Minecraft Server.
		p	0	server	server
			c	the server to have the MBean
	m	()[J	b	getTickTimes
		c	Returns the server's historical tick times, in milliseconds.
	m	(Ljava/lang/String;)Ljava/lang/Object;	getAttribute	getAttribute
		p	1	attribute	attribute
	m	([Ljava/lang/String;)Ljavax/management/AttributeList;	getAttributes	getAttributes
		p	1	attributes	attributes
	m	(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;	invoke	invoke
		p	1	actionName	actionName
		p	2	params	params
		p	3	signature	signature
	m	(Ljavax/management/Attribute;)V	setAttribute	setAttribute
		p	1	attribute	attribute
	m	(Ljavax/management/AttributeList;)Ljavax/management/AttributeList;	setAttributes	setAttributes
		p	1	attributes	attributes
c	alz$a	net/minecraft/server/dedicated/ServerMBean$Entry
	c	Represents a read-only attribute of the server MBean.
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Supplier;	b	getter
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Class;	d	type
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1	name	name
		p	2	getter	getter
		p	3	description	description
		p	4	type	type
	m	()Ljavax/management/MBeanAttributeInfo;	a	createInfo
c	am	net/minecraft/advancement/criterion/BredAnimalsCriterion
	f	Luh;	a	ID
	m	(Lze;Layk;Layk;Laok;)V	a	trigger
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lam$a;	a	conditionsFromJson
c	am$a	net/minecraft/advancement/criterion/BredAnimalsCriterion$Conditions
	f	Lbe$b;	a	parent
	f	Lbe$b;	b	partner
	f	Lbe$b;	c	child
	m	(Lbe$a;)Lam$a;	a	create
	m	(Ldat;Ldat;Ldat;)Z	a	matches
	m	()Lam$a;	c	any
c	amb	net/minecraft/util/profiler/ProfilerSystem
	f	J	a	TIMEOUT_NANOSECONDS
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/List;	c	path
	f	Lit/unimi/dsi/fastutil/longs/LongList;	d	timeList
	f	Ljava/util/Map;	e	locationInfos
	f	Ljava/util/function/IntSupplier;	f	endTickGetter
	f	Ljava/util/function/LongSupplier;	g	timeGetter
	f	J	h	startTime
	f	I	i	startTick
	f	Ljava/lang/String;	j	location
	f	Z	k	tickStarted
	f	Lamb$a;	l	currentInfo
	f	Z	m	checkTimeout
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Z)V	<init>	<init>
		p	1	timeGetter	timeGetter
		p	2	tickGetter	tickGetter
		p	3	checkTimeout	checkTimeout
	m	()Lamb$a;	e	getCurrentInfo
c	amb$a	net/minecraft/util/profiler/ProfilerSystem$LocatedInfo
	f	J	a	time
	f	J	b	visits
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	c	counts
c	amc	net/minecraft/util/profiler/TickTimeTracker
	f	Ljava/util/function/LongSupplier;	a	timeGetter
	f	Ljava/util/function/IntSupplier;	b	tickGetter
	f	Lamg;	c	profiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;)V	<init>	<init>
		p	1	timeGetter	timeGetter
		p	2	tickGetter	tickGetter
	m	()Z	a	isActive
	m	()V	b	disable
	m	()V	c	enable
	m	()Lami;	d	getProfiler
	m	()Lamh;	e	getResult
c	amd	net/minecraft/util/profiler/EmptyProfileResult
	f	Lamd;	a	INSTANCE
c	ame	net/minecraft/util/profiler/ProfileResultImpl
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lamj;	b	EMPTY_INFO
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	d	COMPARATOR
	f	Ljava/util/Map;	e	locationInfos
	f	J	f	startTime
	f	I	g	startTick
	f	J	h	endTime
	f	I	i	endTick
	f	I	j	tickDuration
	m	(Ljava/util/Map;JIJI)V	<init>	<init>
		p	1	locationInfos	locationInfos
		p	2	startTime	startTime
		p	4	startTick	startTick
		p	5	endTime	endTime
		p	7	endTick	endTick
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounterDump
		p	1	counters	counters
		p	2	sb	sb
		p	3	tickSpan	tickSpan
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indent
		p	0	sb	sb
		p	1	size	size
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isSubpath
		p	0	parent	parent
		p	1	path	path
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendTiming
		p	1	level	level
		p	2	name	name
		p	3	sb	sb
	m	(ILjava/lang/String;Lame$a;ILjava/lang/StringBuilder;)V	a	appendCounter
		p	1	depth	depth
		p	2	name	name
		p	3	info	info
		p	4	tickSpan	tickSpan
		p	5	sb	sb
	m	(JI)Ljava/lang/String;	a	asString
		p	1	timeSpan	timeSpan
		p	3	tickSpan	tickSpan
	m	(Ljava/lang/String;)Lamj;	c	getInfo
		p	1	path	path
	m	()Ljava/util/Map;	h	setupCounters
	m	()Ljava/lang/String;	i	generateWittyComment
c	ame$a	net/minecraft/util/profiler/ProfileResultImpl$CounterInfo
	f	J	a	selfTime
	f	J	b	totalTime
	f	Ljava/util/Map;	c	subCounters
	m	(Ljava/util/Iterator;J)V	a	add
		p	1	pathIterator	pathIterator
		p	2	time	time
c	amf	net/minecraft/util/profiler/DummyProfiler
	f	Lamf;	a	INSTANCE
c	amg	net/minecraft/util/profiler/ReadableProfiler
	m	()Lamh;	d	getResult
c	amh	net/minecraft/util/profiler/ProfileResult
	m	(Ljava/io/File;)Z	a	save
		p	1	file	file
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimings
		p	1	parentPath	parentPath
	m	()J	a	getStartTime
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getHumanReadableName
		p	0	path	path
	m	()I	b	getStartTick
	m	()J	c	getEndTime
	m	()I	d	getEndTick
	m	()I	f	getTickSpan
	m	()J	g	getTimeSpan
c	ami	net/minecraft/util/profiler/Profiler
	m	(Ljava/lang/String;)V	a	push
		p	1	location	location
	m	(Lami;Lami;)Lami;	a	union
	m	()V	a	startTick
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1	locationGetter	locationGetter
	m	(Ljava/lang/String;)V	b	swap
		p	1	location	location
	m	(Ljava/util/function/Supplier;)V	b	swap
		p	1	locationGetter	locationGetter
	m	()V	b	endTick
	m	(Ljava/util/function/Supplier;)V	c	visit
		c	Increment the visit count for a marker.\n\n<p>This is useful to keep track of number of calls made to performance-\nwise expensive methods.\n\n<p>This method is preferred if getting the marker is costly; the\nsupplier won't be called if the profiler is disabled.
		p	1	markerGetter	markerGetter
			c	the getter for a unique marker
	m	(Ljava/lang/String;)V	c	visit
		c	Increment the visit count for a marker.\n\n<p>This is useful to keep track of number of calls made to performance-\nwise expensive methods.
		p	1	marker	marker
			c	a unique marker
	m	()V	c	pop
c	amj	net/minecraft/util/profiler/ProfileLocationInfo
	c	Profiling information on a specific profiler location.
	m	()J	a	getTotalTime
		c	Returns the total time spent visiting the profiler location.
	m	()J	b	getVisitCount
		c	Returns the number of times the profiler location has been visited.
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	c	getCounts
		c	Returns a marker to count map indicating the times each marker has been\nvisited in the profiler location.
c	amk	net/minecraft/util/profiler/ProfilerTiming
	f	D	a	parentSectionUsagePercentage
	f	D	b	totalUsagePercentage
	f	J	c	visitCount
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;DDJ)V	<init>	<init>
		p	1	name	name
		p	2	parentUsagePercentage	parentUsagePercentage
		p	4	totalUsagePercentage	totalUsagePercentage
		p	6	visitCount	visitCount
	m	()I	a	getColor
	m	(Lamk;)I	a	compareTo
c	aml	net/minecraft/util/TickDurationMonitor
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/function/LongSupplier;	b	timeGetter
	f	J	c	overtime
	f	I	d	tickCount
	f	Ljava/io/File;	e	tickResultsDirectory
	f	Lamg;	f	profiler
	m	(Ljava/lang/String;)Laml;	a	create
		p	0	name	name
	m	(Lami;Laml;)Lami;	a	tickProfiler
		p	0	profiler	profiler
		p	1	monitor	monitor
	m	()Lami;	a	nextProfiler
	m	()V	b	endTick
c	amn	net/minecraft/util/thread/ThreadExecutor
	f	Ljava/lang/String;	b	name
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	tasks
	f	I	e	executionsInProgress
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	submitAsync
		p	1	runnable	runnable
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
		p	1	task	task
	m	()Z	at	shouldExecuteAsync
	m	()Ljava/lang/Thread;	au	getThread
	m	()Z	bf	isOnThread
	m	()I	bg	getTaskCount
	m	()V	bi	cancelTasks
	m	()V	bj	runTasks
	m	()V	bk	waitForTasks
	m	(Ljava/util/function/BooleanSupplier;)V	c	runTasks
		p	1	stopCondition	stopCondition
	m	(Ljava/lang/Runnable;)V	c	executeTask
		p	1	task	task
	m	(Ljava/lang/Runnable;)Z	d	canExecute
		p	1	task	task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	e	createTask
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;)V	execute	execute
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	f	submit
		p	1	task	task
	m	(Ljava/lang/Runnable;)V	g	submitAndJoin
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;)V	h	send
	m	()Z	x	runTask
c	amp	net/minecraft/util/thread/MessageListener
	m	(Ljava/lang/Object;)V	a	send
		p	1	message	message
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Lamp;	a	create
		p	0	name	name
		p	1	action	action
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	ask
		p	1	messageProvider	messageProvider
	m	()Ljava/lang/String;	bh	getName
c	amq	net/minecraft/util/thread/TaskExecutor
	f	Lams;	a	queue
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	stateFlags
	f	Ljava/util/concurrent/Executor;	d	executor
	f	Ljava/lang/String;	e	name
	m	(Lams;Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
		p	1	queue	queue
		p	2	executor	executor
		p	3	name	name
	m	(Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I	a	runWhile
		p	1	condition	condition
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)Lamq;	a	create
		p	0	executor	executor
		p	1	name	name
	m	()Z	a	unpause
	m	()V	b	pause
	m	()Z	c	hasMessages
	m	()Z	d	isUnpaused
	m	()Z	e	runNext
	m	()V	f	execute
c	amr	net/minecraft/util/thread/ReentrantThreadExecutor
	f	I	b	runningTasks
	m	()Z	bl	hasRunningTasks
c	ams	net/minecraft/util/thread/TaskQueue
	m	(Ljava/lang/Object;)Z	a	add
		p	1	message	message
	m	()Ljava/lang/Object;	a	poll
	m	()Z	b	isEmpty
c	ams$a	net/minecraft/util/thread/TaskQueue$Prioritized
	f	Ljava/util/List;	a	queues
	m	(I)V	<init>	<init>
		p	1	priorityCount	priorityCount
	m	(Lams$b;)Z	a	add
	m	()Ljava/lang/Runnable;	c	poll
c	ams$b	net/minecraft/util/thread/TaskQueue$PrioritizedTask
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	runnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1	priority	priority
		p	2	runnable	runnable
	m	()I	a	getPriority
c	ams$c	net/minecraft/util/thread/TaskQueue$Simple
	f	Ljava/util/Queue;	a	queue
	m	(Ljava/util/Queue;)V	<init>	<init>
		p	1	queue	queue
c	amu	net/minecraft/world/updater/WorldUpdater
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	UPDATE_THREAD_FACTORY
	f	Lcom/google/common/collect/ImmutableSet;	c	worlds
	f	Z	d	eraseCache
	f	Ldae$a;	e	session
	f	Ljava/lang/Thread;	f	updateThread
	f	Lcom/mojang/datafixers/DataFixer;	g	dataFixer
	f	Z	h	keepUpgradingChunks
	f	Z	i	isDone
	f	F	j	progress
	f	I	k	totalChunkCount
	f	I	l	upgradedChunkCount
	f	I	m	skippedChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	n	dimensionProgress
	f	Lmr;	o	status
	f	Ljava/util/regex/Pattern;	p	REGION_FILE_PATTERN
	f	Ldaa;	q	persistentStateManager
	m	(Ldae$a;Lcom/mojang/datafixers/DataFixer;Lcom/google/common/collect/ImmutableSet;Z)V	<init>	<init>
		p	1	session	session
		p	2	dataFixer	dataFixer
		p	3	worlds	worlds
		p	4	eraseCache	eraseCache
	m	(Lug;)F	a	getProgress
	m	()V	a	cancel
	m	(Lug;)Ljava/util/List;	b	getChunkPositions
	m	()Z	b	isDone
	m	()F	d	getProgress
	m	()I	e	getTotalChunkCount
	m	()I	f	getUpgradedChunkCount
	m	()I	g	getSkippedChunkCount
	m	()Lmr;	h	getStatus
	m	()V	i	updateWorld
c	amw	net/minecraft/entity/boss/BossBar
	f	Lmr;	a	name
	f	F	b	percent
	f	Lamw$a;	c	color
	f	Lamw$b;	d	style
	f	Z	e	darkenSky
	f	Z	f	dragonMusic
	f	Z	g	thickenFog
	f	Ljava/util/UUID;	h	uuid
	m	(Ljava/util/UUID;Lmr;Lamw$a;Lamw$b;)V	<init>	<init>
		p	1	uuid	uuid
		p	2	name	name
		p	3	color	color
		p	4	style	style
	m	(Lamw$a;)V	a	setColor
		p	1	color	color
	m	(Z)Lamw;	a	setDarkenSky
		p	1	darkenSky	darkenSky
	m	(Lamw$b;)V	a	setOverlay
		p	1	style	style
	m	(Lmr;)V	a	setName
		p	1	name	name
	m	(F)V	a	setPercent
		p	1	percentage	percentage
	m	(Z)Lamw;	b	setDragonMusic
		p	1	dragonMusic	dragonMusic
	m	(Z)Lamw;	c	setThickenFog
		p	1	thickenFog	thickenFog
	m	()Ljava/util/UUID;	i	getUuid
	m	()Lmr;	j	getName
	m	()F	k	getPercent
	m	()Lamw$a;	l	getColor
	m	()Lamw$b;	m	getOverlay
	m	()Z	n	getDarkenSky
	m	()Z	o	hasDragonMusic
	m	()Z	p	getThickenFog
c	amw$a	net/minecraft/entity/boss/BossBar$Color
	f	Ljava/lang/String;	h	name
	f	Li;	i	format
	m	(Ljava/lang/String;ILjava/lang/String;Li;)V	<init>	<init>
		p	3	name	name
		p	4	format	format
	m	(Ljava/lang/String;)Lamw$a;	a	byName
		p	0	name	name
	m	()Li;	a	getTextFormat
	m	()Ljava/lang/String;	b	getName
c	amw$b	net/minecraft/entity/boss/BossBar$Style
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lamw$b;	a	byName
		p	0	name	name
c	amx	net/minecraft/util/Clearable
	c	Represents an object which can be cleared.
	m	(Ljava/lang/Object;)V	a	clear
		p	0	o	o
	m	()V	aa_	clear
c	amy	net/minecraft/inventory/DoubleInventory
	f	Lamz;	a	first
	f	Lamz;	b	second
	m	(Lamz;Lamz;)V	<init>	<init>
		p	1	first	first
		p	2	second	second
	m	(Lamz;)Z	a	isPart
		p	1	inventory	inventory
c	amz	net/minecraft/inventory/Inventory
	m	()I	X_	getMaxCountPerStack
		c	Returns the maximum number of items a stack can contain when placed inside this inventory.\nNo slots may have more than this number of items. It is effectively the\nstacking limit for this inventory's slots.\n\n@return the max {@link ItemStack#getCount() count} of item stacks in this inventory
	m	()V	Z_	markDirty
	m	(Ljava/util/Set;)Z	a	containsAny
		c	Determines whether this inventory contains any of the given candidate items.
		p	1	items	items
	m	(Lbec;)Z	a	canPlayerUse
		p	1	player	player
	m	(Lbke;)I	a	count
		c	Returns the number of times the specified item occurs in this inventory across all stored stacks.
		p	1	item	item
	m	(I)Lbki;	a	getStack
		c	Fetches the stack currently stored at the given slot. If the slot is empty,\nor is outside the bounds of this inventory, returns see {@link ItemStack#EMPTY}.
		p	1	slot	slot
	m	(ILbki;)V	a	setStack
		p	1	slot	slot
		p	2	stack	stack
	m	(II)Lbki;	a	removeStack
		c	Removes a specific number of items from the given slot.\n\n@return the removed items as a stack
		p	1	slot	slot
		p	2	amount	amount
	m	()I	ab_	size
	m	(I)Lbki;	b	removeStack
		c	Removes the stack currently stored at the indicated slot.\n\n@return the stack previously stored at the indicated slot.
		p	1	slot	slot
	m	(ILbki;)Z	b	isValid
		c	Returns whether the given stack is a valid for the indicated slot position.
		p	1	slot	slot
		p	2	stack	stack
	m	(Lbec;)V	b_	onClose
		p	1	player	player
	m	()Z	c	isEmpty
	m	(Lbec;)V	c_	onOpen
		p	1	player	player
c	an	net/minecraft/advancement/criterion/BrewedPotionCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lan$a;	a	conditionsFromJson
	m	(Lze;Lbmb;)V	a	trigger
		p	1	player	player
		p	2	potion	potion
c	an$a	net/minecraft/advancement/criterion/BrewedPotionCriterion$Conditions
	f	Lbmb;	a	potion
	m	(Lbe$b;Lbmb;)V	<init>	<init>
		p	1	player	player
		p	2	potion	potion
	m	(Lbmb;)Z	a	matches
		p	1	potion	potion
	m	()Lan$a;	c	any
c	ana	net/minecraft/inventory/Inventories
	m	(Lle;Lgi;Z)Lle;	a	toTag
		p	0	tag	tag
		p	1	stacks	stacks
		p	2	setIfEmpty	setIfEmpty
	m	(Ljava/util/List;II)Lbki;	a	splitStack
		p	0	stacks	stacks
		p	1	slot	slot
		p	2	amount	amount
	m	(Lle;Lgi;)Lle;	a	toTag
		p	0	tag	tag
		p	1	stacks	stacks
	m	(Ljava/util/List;I)Lbki;	a	removeStack
		p	0	stacks	stacks
		p	1	slot	slot
	m	(Lle;Lgi;)V	b	fromTag
		p	0	tag	tag
		p	1	stacks	stacks
c	anb	net/minecraft/inventory/InventoryChangedListener
	m	(Lamz;)V	a	onInventoryChanged
		p	1	sender	sender
c	anc	net/minecraft/util/ItemScatterer
	f	Ljava/util/Random;	a	RANDOM
	m	(Lbqb;Laom;Lamz;)V	a	spawn
	m	(Lbqb;DDDLamz;)V	a	spawn
		p	0	world	world
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	inventory	inventory
	m	(Lbqb;Lfu;Lgi;)V	a	spawn
		p	0	world	world
		p	1	pos	pos
		p	2	items	items
	m	(Lbqb;DDDLbki;)V	a	spawn
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	item	item
	m	(Lbqb;Lfu;Lamz;)V	a	spawn
c	and	net/minecraft/world/Difficulty
	f	[Land;	e	BY_NAME
	f	I	f	id
	f	Ljava/lang/String;	g	name
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getId
	m	(Ljava/lang/String;)Land;	a	byName
		p	0	name	name
	m	(I)Land;	a	byOrdinal
		p	0	ordinal	ordinal
	m	()Lmr;	b	getTranslatableName
	m	()Ljava/lang/String;	c	getName
	m	()Land;	d	cycle
c	ane	net/minecraft/world/LocalDifficulty
	f	Land;	a	globalDifficulty
	f	F	b	localDifficulty
	m	(Land;JJF)V	<init>	<init>
		p	1	difficulty	difficulty
		p	2	timeOfDay	timeOfDay
		p	4	inhabitedTime	inhabitedTime
		p	6	moonSize	moonSize
	m	()Land;	a	getGlobalDifficulty
	m	(F)Z	a	isHarderThan
		p	1	difficulty	difficulty
	m	(Land;JJF)F	a	setLocalDifficulty
		p	1	difficulty	difficulty
		p	2	timeOfDay	timeOfDay
		p	4	inhabitedTime	inhabitedTime
		p	6	moonSize	moonSize
	m	()F	b	getLocalDifficulty
	m	()F	d	getClampedLocalDifficulty
c	anf	net/minecraft/util/Hand
c	ang	net/minecraft/util/ActionResult
	f	Lang;	a	SUCCESS
		c	Indicates an action is performed and the actor's hand should swing to\nindicate the performance.
	f	Lang;	b	CONSUME
		c	Indicates an action is performed but no animation should accompany the\nperformance.
	f	Lang;	c	PASS
		c	Indicates an action is not performed but allows other actions to\nperform.
	f	Lang;	d	FAIL
		c	Indicates that an action is not performed and prevents other actions\nfrom performing.
	m	()Z	a	isAccepted
		c	Returns whether an action is performed.
	m	(Z)Lang;	a	success
		p	0	swingHand	swingHand
	m	()Z	b	shouldSwingHand
		c	Returns whether an actor should have a hand-swinging animation on\naction performance.
c	anh	net/minecraft/util/TypedActionResult
	f	Lang;	a	result
	f	Ljava/lang/Object;	b	value
	m	(Lang;Ljava/lang/Object;)V	<init>	<init>
		p	1	result	result
		p	2	value	value
	m	(Ljava/lang/Object;)Lanh;	a	success
		p	0	data	data
	m	()Lang;	a	getResult
	m	()Ljava/lang/Object;	b	getValue
	m	(Ljava/lang/Object;)Lanh;	b	consume
		p	0	data	data
	m	(Ljava/lang/Object;)Lanh;	c	pass
		p	0	data	data
	m	(Ljava/lang/Object;)Lanh;	d	fail
		p	0	data	data
c	ani	net/minecraft/inventory/ContainerLock
	f	Lani;	a	EMPTY
		c	An empty container lock that can always be opened.
	f	Ljava/lang/String;	b	key
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Lbki;)Z	a	canOpen
		c	Returns true if this lock can be opened with the key item stack.\n<p>\nAn item stack is a valid key if the stack name matches the key string of this lock,\nor if the key string is empty.
		p	1	stack	stack
			c	the key item stack
	m	(Lle;)V	a	toTag
		c	Inserts the key string of this lock into the {@code Lock} key of the compound tag.
		p	1	tag	tag
	m	(Lle;)Lani;	b	fromTag
		c	Creates a new {@code ContainerLock} from the {@code Lock} key of the compound tag.\n<p>\nIf the {@code Lock} key is not present, returns an empty lock.
		p	0	tag	tag
c	anj	net/minecraft/screen/NamedScreenHandlerFactory
	m	()Lmr;	d	getDisplayName
		c	Returns the title of this screen handler; will be a part of the open\nscreen packet sent to the client.
c	ank	net/minecraft/util/Nameable
	m	()Lmr;	P	getName
	m	()Z	Q	hasCustomName
	m	()Lmr;	R	getCustomName
	m	()Lmr;	d	getDisplayName
c	anl	net/minecraft/entity/mob/ShulkerLidCollisions
	m	(Lfu;Lfz;)Ldeg;	a	getLidCollisionBox
		p	0	pos	pos
		p	1	direction	direction
c	anm	net/minecraft/inventory/SimpleInventory
	f	I	a	size
	f	Lgi;	b	stacks
	f	Ljava/util/List;	c	listeners
	m	(I)V	<init>	<init>
		p	1	size	size
	m	([Lbki;)V	<init>	<init>
		p	1	items	items
	m	(Llk;)V	a	readTags
		p	1	tags	tags
	m	(Lanb;)V	a	addListener
		p	1	listener	listener
	m	(Lbke;I)Lbki;	a	removeItem
		c	Searches this inventory for the specified item and removes the given amount from this inventory.\n\n@return the stack of removed items
		p	1	item	item
		p	2	count	count
	m	(Lbki;Lbki;)Z	a	canCombine
		p	1	one	one
		p	2	two	two
	m	(Lbki;)Lbki;	a	addStack
		p	1	stack	stack
	m	(Lbki;)Z	b	canInsert
		p	1	stack	stack
	m	(Lbki;Lbki;)V	b	transfer
		p	1	source	source
		p	2	target	target
	m	(Lanb;)V	b	removeListener
		p	1	listener	listener
	m	(Lbki;)V	c	addToNewSlot
		p	1	stack	stack
	m	(Lbki;)V	d	addToExistingSlot
		p	1	stack	stack
	m	()Ljava/util/List;	f	clearToList
		c	Clears this inventory and return all the non-empty stacks in a list.
	m	()Llk;	g	getTags
c	ann	net/minecraft/screen/SimpleNamedScreenHandlerFactory
	f	Lmr;	a	name
	f	Lbhj;	b	baseFactory
	m	(Lbhj;Lmr;)V	<init>	<init>
		p	1	baseFactory	baseFactory
		p	2	name	name
c	ano	net/minecraft/util/snooper/Snooper
	f	Ljava/util/Map;	a	initialInfo
	f	Ljava/util/Map;	b	info
	f	Ljava/lang/String;	c	token
	f	Ljava/net/URL;	d	snooperUrl
	f	Lanp;	e	listener
	f	Ljava/util/Timer;	f	timer
	f	Ljava/lang/Object;	g	syncObject
	f	J	h	startTime
	f	Z	i	active
	m	(Ljava/lang/String;Lanp;J)V	<init>	<init>
		p	1	urlPath	urlPath
		p	2	listener	listener
		p	3	startTime	startTime
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	addInfo
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Ljava/lang/Object;)V	b	addInitialInfo
		p	1	key	key
		p	2	value	value
	m	()V	b	update
	m	()Z	d	isActive
	m	()V	e	cancel
	m	()Ljava/lang/String;	f	getToken
	m	()J	g	getStartTime
c	anp	net/minecraft/util/snooper/SnooperListener
	m	(Lano;)V	a	addSnooperInfo
		p	1	snooper	snooper
c	anq	net/minecraft/inventory/SidedInventory
	c	A special inventory interface for inventories that expose different slots for different sides, such as hoppers.
	m	(ILbki;Lfz;)Z	a	canInsert
		c	Determines whether the given stack can be inserted into this inventory at the specified slot position from the given direction.
		p	1	slot	slot
		p	2	stack	stack
		p	3	dir	dir
	m	(Lfz;)[I	a	getAvailableSlots
		c	Gets the available slot positions that are reachable from a given side.
		p	1	side	side
	m	(ILbki;Lfz;)Z	b	canExtract
		c	Determines whether the given stack can be removed from this inventory at the specified slot position from the given direction.
		p	1	slot	slot
		p	2	stack	stack
		p	3	dir	dir
c	anr	net/minecraft/block/InventoryProvider
	m	(Lcfj;Lbqc;Lfu;)Lanq;	a	getInventory
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	ans	net/minecraft/entity/damage/BadRespawnPointDamageSource
c	ant	net/minecraft/entity/damage/DamageRecord
	f	Lanw;	a	damageSource
	f	I	b	entityAge
	f	F	c	damage
	f	F	d	entityHealth
	f	Ljava/lang/String;	e	fallDeathSuffix
	f	F	f	fallDistance
	m	(Lanw;IFFLjava/lang/String;F)V	<init>	<init>
		p	1	damageSource	damageSource
		p	2	entityAge	entityAge
		p	3	entityOriginalHealth	entityOriginalHealth
		p	4	damage	damage
		p	5	fallDeathSuffix	fallDeathSuffix
		p	6	fallDistance	fallDistance
	m	()Lanw;	a	getDamageSource
	m	()F	c	getDamage
	m	()Z	f	isAttackerLiving
	m	()Ljava/lang/String;	g	getFallDeathSuffix
	m	()Lmr;	h	getAttackerName
	m	()F	j	getFallDistance
c	anu	net/minecraft/entity/DamageUtil
	m	(FFF)F	a	getDamageLeft
		p	0	damage	damage
		p	1	armor	armor
		p	2	armorToughness	armorToughness
	m	(FF)F	a	getInflictedDamage
		p	0	damageDealt	damageDealt
		p	1	protection	protection
c	anv	net/minecraft/entity/damage/DamageTracker
	f	Ljava/util/List;	a	recentDamage
	f	Laoy;	b	entity
	f	I	c	ageOnLastDamage
	f	I	d	ageOnLastAttacked
	f	I	e	ageOnLastUpdate
	f	Z	f	recentlyAttacked
	f	Z	g	hasDamage
	f	Ljava/lang/String;	h	fallDeathSuffix
	m	(Laoy;)V	<init>	<init>
		p	1	entity	entity
	m	(Lant;)Ljava/lang/String;	a	getFallDeathSuffix
	m	(Lanw;FF)V	a	onDamage
		p	1	damageSource	damageSource
		p	2	originalHealth	originalHealth
	m	()V	a	setFallDeathSuffix
	m	()Lmr;	b	getDeathMessage
	m	()Laoy;	c	getBiggestAttacker
	m	()I	f	getTimeSinceLastAttack
	m	()V	g	update
	m	()Laoy;	h	getEntity
	m	()Lant;	j	getBiggestFall
	m	()V	k	clearFallDeathSuffix
c	anw	net/minecraft/entity/damage/DamageSource
	f	Z	A	fire
	f	Z	B	projectile
	f	Z	C	scaleWithDifficulty
	f	Z	D	magic
	f	Z	E	explosive
	f	Lanw;	a	IN_FIRE
	f	Lanw;	b	LIGHTNING_BOLT
	f	Lanw;	c	ON_FIRE
	f	Lanw;	d	LAVA
	f	Lanw;	e	HOT_FLOOR
	f	Lanw;	f	IN_WALL
	f	Lanw;	g	CRAMMING
	f	Lanw;	h	DROWN
	f	Lanw;	i	STARVE
	f	Lanw;	j	CACTUS
	f	Lanw;	k	FALL
	f	Lanw;	l	FLY_INTO_WALL
	f	Lanw;	m	OUT_OF_WORLD
	f	Lanw;	n	GENERIC
	f	Lanw;	o	MAGIC
	f	Lanw;	p	WITHER
	f	Lanw;	q	ANVIL
	f	Lanw;	r	FALLING_BLOCK
	f	Lanw;	s	DRAGON_BREATH
	f	Lanw;	t	DRYOUT
	f	Lanw;	u	SWEET_BERRY_BUSH
	f	Ljava/lang/String;	v	name
	f	Z	w	bypassesArmor
	f	Z	x	outOfWorld
	f	Z	y	unblockable
	f	F	z	exhaustion
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	()Lanw;	a	badRespawnPoint
	m	(Laom;Laom;)Lanw;	a	trident
		p	0	trident	trident
		p	1	attacker	attacker
	m	(Lbeg;Laom;)Lanw;	a	arrow
		p	0	projectile	projectile
		p	1	attacker	attacker
	m	(Lbff;Laom;)Lanw;	a	witherSkull
		p	0	witherSkull	witherSkull
		p	1	attacker	attacker
	m	(Lbem;Laom;)Lanw;	a	fireball
		p	0	fireball	fireball
		p	1	attacker	attacker
	m	(Lbec;)Lanw;	a	player
		p	0	attacker	attacker
	m	(Laom;Laoy;)Lanw;	a	mobProjectile
		p	0	projectile	projectile
		p	1	attacker	attacker
	m	(Laoy;)Lmr;	a	getDeathMessage
		p	1	entity	entity
	m	(Lben;Laom;)Lanw;	a	firework
		p	0	firework	firework
		p	1	attacker	attacker
	m	(Lbpt;)Lanw;	a	explosion
		p	0	explosion	explosion
	m	(Laom;)Lanw;	a	thorns
		p	0	attacker	attacker
	m	()Z	b	isProjectile
	m	(Laom;Laom;)Lanw;	b	thrownProjectile
		p	0	projectile	projectile
		p	1	attacker	attacker
	m	(Laoy;)Lanw;	b	sting
		p	0	attacker	attacker
	m	(Laoy;)Lanw;	c	mob
		p	0	attacker	attacker
	m	()Lanw;	c	setProjectile
	m	(Laom;Laom;)Lanw;	c	magic
		p	0	magic	magic
		p	1	attacker	attacker
	m	(Laoy;)Lanw;	d	explosion
		p	0	attacker	attacker
	m	()Z	d	isExplosive
	m	()Lanw;	e	setExplosive
	m	()Z	f	bypassesArmor
	m	()F	g	getExhaustion
	m	()Z	h	isOutOfWorld
	m	()Z	i	isUnblockable
	m	()Laom;	j	getSource
	m	()Laom;	k	getAttacker
	m	()Lanw;	l	setBypassesArmor
	m	()Lanw;	m	setOutOfWorld
	m	()Lanw;	n	setUnblockable
	m	()Lanw;	o	setFire
	m	()Z	p	isFire
	m	()Ljava/lang/String;	q	getName
	m	()Lanw;	r	setScaledWithDifficulty
	m	()Z	s	isScaledWithDifficulty
	m	()Z	t	getMagic
	m	()Lanw;	u	setUsesMagic
	m	()Z	v	isSourceCreativePlayer
	m	()Ldem;	w	getPosition
c	anx	net/minecraft/entity/damage/EntityDamageSource
	f	Laom;	w	source
	f	Z	x	thorns
	m	(Ljava/lang/String;Laom;)V	<init>	<init>
		p	1	name	name
		p	2	source	source
	m	()Lanx;	x	setThorns
	m	()Z	y	isThorns
c	any	net/minecraft/entity/damage/ProjectileDamageSource
	f	Laom;	x	attacker
	m	(Ljava/lang/String;Laom;Laom;)V	<init>	<init>
		p	1	name	name
		p	2	projectile	projectile
		p	3	attacker	attacker
c	ao	net/minecraft/advancement/criterion/ChangedDimensionCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lao$a;	a	conditionsFromJson
	m	(Lze;Lug;Lug;)V	a	trigger
		p	1	player	player
		p	2	from	from
		p	3	to	to
c	ao$a	net/minecraft/advancement/criterion/ChangedDimensionCriterion$Conditions
	f	Lug;	a	from
	f	Lug;	b	to
	m	(Lbe$b;Lug;Lug;)V	<init>	<init>
		p	1	player	player
		p	2	from	from
		p	3	to	to
	m	(Lug;)Lao$a;	a	to
		p	0	to	to
	m	(Lug;Lug;)Z	b	matches
		p	1	from	from
		p	2	to	to
c	aoa	net/minecraft/entity/effect/AbsorptionStatusEffect
c	aob	net/minecraft/entity/effect/DamageModifierStatusEffect
	f	D	a	modifier
	m	(Laof;ID)V	<init>	<init>
		p	1	type	type
		p	2	color	color
		p	3	modifier	modifier
c	aoc	net/minecraft/entity/effect/HealthBoostStatusEffect
c	aod	net/minecraft/entity/effect/InstantStatusEffect
c	aoe	net/minecraft/entity/effect/StatusEffect
	f	Ljava/util/Map;	a	attributeModifiers
	f	Laof;	b	type
	f	I	c	color
	f	Ljava/lang/String;	d	translationKey
	m	(Laof;I)V	<init>	<init>
		p	1	type	type
		p	2	color	color
	m	(Laom;Laom;Laoy;ID)V	a	applyInstantEffect
		p	1	source	source
		p	2	attacker	attacker
		p	3	target	target
		p	4	amplifier	amplifier
		p	5	proximity	proximity
	m	(Laoe;)I	a	getRawId
		p	0	type	type
	m	(Laoy;I)V	a	applyUpdateEffect
		p	1	entity	entity
		p	2	amplifier	amplifier
	m	(I)Laoe;	a	byRawId
		p	0	rawId	rawId
	m	(Laoy;Lapu;I)V	a	onRemoved
		p	1	entity	entity
		p	2	attributes	attributes
		p	3	amplifier	amplifier
	m	(Laps;Ljava/lang/String;DLapv$a;)Laoe;	a	addAttributeModifier
		p	1	attribute	attribute
		p	2	uuid	uuid
		p	3	amount	amount
		p	5	operation	operation
	m	(ILapv;)D	a	adjustModifierAmount
		p	1	amplifier	amplifier
		p	2	modifier	modifier
	m	(II)Z	a	canApplyUpdateEffect
		p	1	duration	duration
		p	2	amplifier	amplifier
	m	()Z	a	isInstant
	m	(Laoy;Lapu;I)V	b	onApplied
		p	1	entity	entity
		p	2	attributes	attributes
		p	3	amplifier	amplifier
	m	()Ljava/lang/String;	b	loadTranslationKey
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()Lmr;	d	getName
	m	()Laof;	e	getType
	m	()I	f	getColor
	m	()Ljava/util/Map;	g	getAttributeModifiers
	m	()Z	h	isBeneficial
c	aof	net/minecraft/entity/effect/StatusEffectType
	f	Li;	d	formatting
	m	(Ljava/lang/String;ILi;)V	<init>	<init>
		p	3	format	format
	m	()Li;	a	getFormatting
c	aog	net/minecraft/entity/effect/StatusEffectInstance
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Laoe;	b	type
	f	I	c	duration
	f	I	d	amplifier
	f	Z	e	splash
	f	Z	f	ambient
	f	Z	g	permanent
	f	Z	h	showParticles
	f	Z	i	showIcon
	f	Laog;	j	hiddenEffect
		c	The effect hidden when upgrading effects. Duration decreases with this\neffect.\n\n<p>This exists so that long-duration low-amplifier effects reappears\nafter short-duration high-amplifier effects run out.
	m	(Laoe;I)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
	m	(Laoe;IIZZZ)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
		p	4	ambient	ambient
		p	5	showParticles	showParticles
		p	6	showIcon	showIcon
	m	(Laoe;IIZZ)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
		p	4	ambient	ambient
		p	5	visible	visible
	m	(Laoe;IIZZZLaog;)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
		p	4	ambient	ambient
		p	5	showParticles	showParticles
		p	6	showIcon	showIcon
		p	7	hiddenEffect	hiddenEffect
	m	(Laoe;II)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
	m	(Laoy;Ljava/lang/Runnable;)Z	a	update
		p	1	entity	entity
		p	2	overwriteCallback	overwriteCallback
	m	(Laoy;)V	a	applyUpdateEffect
		p	1	entity	entity
	m	(Laog;)V	a	copyFrom
		p	1	that	that
	m	(Laoe;Lle;)Laog;	a	fromTag
		p	0	type	type
		p	1	tag	tag
	m	(Lle;)Lle;	a	toTag
		p	1	tag	tag
	m	()Laoe;	a	getEffectType
	m	(Z)V	b	setPermanent
		p	1	permanent	permanent
	m	()I	b	getDuration
	m	(Lle;)Laog;	b	fromTag
		p	0	tag	tag
	m	(Laog;)Z	b	upgrade
		p	1	that	that
	m	(Laog;)I	c	compareTo
	m	(Lle;)V	c	typelessToTag
		p	1	tag	tag
	m	()I	c	getAmplifier
	m	(Ljava/lang/Object;)I	compareTo	compareTo
		p	1	that	that
	m	()Z	d	isAmbient
	m	()Z	e	shouldShowParticles
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Z	f	shouldShowIcon
	m	()Ljava/lang/String;	g	getTranslationKey
	m	()Z	h	isPermanent
	m	()I	i	updateDuration
c	aoh	net/minecraft/entity/effect/StatusEffectUtil
	m	(Laoy;)Z	a	hasHaste
		p	0	entity	entity
	m	(Laog;F)Ljava/lang/String;	a	durationToString
		p	0	effect	effect
		p	1	multiplier	multiplier
	m	(Laoy;)I	b	getHasteAmplifier
		p	0	entity	entity
	m	(Laoy;)Z	c	hasWaterBreathing
		p	0	entity	entity
c	aoi	net/minecraft/entity/effect/StatusEffects
	m	(ILjava/lang/String;Laoe;)Laoe;	a	register
		p	0	rawId	rawId
		p	1	id	id
		p	2	entry	entry
c	aok	net/minecraft/entity/passive/PassiveEntity
	f	I	b	breedingAge
	f	Ltq;	bv	CHILD
	f	I	c	forcedAge
	f	I	d	happyTicksRemaining
	m	(Laok;)Laok;	a	createChild
		p	1	mate	mate
	m	(I)V	a	growUp
		p	1	age	age
	m	(IZ)V	a	growUp
		p	1	age	age
		p	2	overGrow	overGrow
	m	(I)V	c_	setBreedingAge
		p	1	age	age
	m	()Z	f	isReadyToBreed
	m	()I	i	getBreedingAge
	m	()V	m	onGrowUp
c	aok$a	net/minecraft/entity/passive/PassiveEntity$PassiveData
	f	I	a	spawnCount
	f	Z	b	babyAllowed
	f	F	c	babyChance
	m	()I	a	getSpawnedCount
	m	(F)V	a	setBabyChance
		p	1	babyChance	babyChance
	m	(Z)V	a	setBabyAllowed
		p	1	babyAllowed	babyAllowed
	m	()V	b	countSpawned
	m	()Z	c	canSpawnBaby
	m	()F	d	getBabyChance
c	aol	net/minecraft/entity/AreaEffectCloudEntity
	f	Ljava/util/List;	an	effects
	f	Ljava/util/Map;	ao	affectedEntities
	f	I	ap	duration
	f	I	aq	waitTime
	f	I	ar	reapplicationDelay
	f	Z	as	customColor
	f	I	at	durationOnUse
	f	F	au	radiusOnUse
	f	F	av	radiusGrowth
	f	Laoy;	aw	owner
	f	Ljava/util/UUID;	ax	ownerUuid
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ltq;	c	RADIUS
	f	Ltq;	d	COLOR
	f	Ltq;	e	WAITING
	f	Ltq;	f	PARTICLE_ID
	f	Lbmb;	g	potion
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(F)V	a	setRadius
		p	1	radius	radius
	m	(Laog;)V	a	addEffect
		p	1	effect	effect
	m	(I)V	a	setColor
		p	1	rgb	rgb
	m	(Z)V	a	setWaiting
		p	1	waiting	waiting
	m	(Lhf;)V	a	setParticleType
		p	1	particle	particle
	m	(Laoy;)V	a	setOwner
		p	1	owner	owner
	m	(Lbmb;)V	a	setPotion
		p	1	potion	potion
	m	(F)V	b	setRadiusOnUse
		p	1	radius	radius
	m	(I)V	b	setDuration
		p	1	duration	duration
	m	(F)V	c	setRadiusGrowth
		p	1	growth	growth
	m	(I)V	d	setWaitTime
		p	1	ticks	ticks
	m	()F	g	getRadius
	m	()I	h	getColor
	m	()Lhf;	i	getParticleType
	m	()Z	k	isWaiting
	m	()I	m	getDuration
	m	()Laoy;	t	getOwner
	m	()V	x	updateColor
c	aom	net/minecraft/entity/Entity
	f	F	A	horizontalSpeed
	f	F	B	distanceTraveled
	f	F	C	fallDistance
	f	D	D	lastRenderX
	f	D	E	lastRenderY
	f	D	F	lastRenderZ
	f	F	G	stepHeight
	f	Z	H	noClip
	f	F	I	pushSpeedReduction
	f	Ljava/util/Random;	J	random
	f	I	K	age
	f	Z	L	touchingWater
	f	Lit/unimi/dsi/fastutil/objects/Object2DoubleMap;	M	fluidHeight
	f	Z	N	submergedInWater
	f	Z	P	inLava
	f	I	Q	timeUntilRegen
	f	Z	R	firstUpdate
	f	Ltt;	S	dataTracker
	f	Ltq;	T	FLAGS
	f	Ltq;	U	POSE
	f	Z	V	updateNeeded
	f	I	W	chunkX
	f	I	X	chunkY
	f	I	Y	chunkZ
	f	J	Z	trackedX
	f	Ltq;	aA	NO_GRAVITY
	f	Z	aC	invulnerable
	f	Ljava/util/Set;	aD	scoreboardTags
	f	Z	aE	teleportRequested
	f	[D	aF	pistonMovementDelta
	f	J	aG	pistonMovementTick
	f	Laon;	aH	dimensions
	f	F	aI	standingEyeHeight
	f	J	aa	trackedY
	f	J	ab	trackedZ
	f	Z	ac	ignoreCameraFrustum
	f	Z	ad	velocityDirty
	f	I	ae	netherPortalCooldown
	f	Z	af	inNetherPortal
	f	I	ag	netherPortalTime
	f	Lfu;	ah	lastNetherPortalPosition
	f	Ldem;	ai	lastNetherPortalDirectionVector
	f	Lfz;	aj	lastNetherPortalDirection
	f	Ljava/util/UUID;	ak	uuid
	f	Ljava/lang/String;	al	uuidString
	f	Z	am	glowing
	f	Ljava/util/List;	an	passengerList
	f	Laom;	ao	vehicle
	f	Ldem;	ap	pos
	f	Lfu;	aq	blockPos
	f	Ldem;	ar	velocity
	f	Ldeg;	as	entityBounds
	f	F	at	nextStepSoundDistance
	f	F	au	nextFlySoundDistance
	f	I	av	fireTicks
	f	Ltq;	aw	AIR
	f	Ltq;	ax	CUSTOM_NAME
	f	Ltq;	ay	NAME_VISIBLE
	f	Ltq;	az	SILENT
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	MAX_ENTITY_ID
	f	Ljava/util/List;	c	EMPTY_STACK_LIST
	f	Ldeg;	d	NULL_BOX
	f	D	e	renderDistanceMultiplier
	f	Laoq;	f	type
	f	I	g	entityId
	f	Lorg/apache/logging/log4j/Logger;	h	LOGGER
	f	Z	i	inanimate
	f	I	j	ridingCooldown
	f	Z	k	teleporting
	f	Lbqb;	l	world
	f	D	m	prevX
	f	D	n	prevY
	f	D	o	prevZ
	f	F	p	yaw
	f	F	q	pitch
	f	F	r	prevYaw
	f	F	s	prevPitch
	f	Z	t	onGround
	f	Z	u	horizontalCollision
	f	Z	v	verticalCollision
	f	Z	w	velocityModified
	f	Ldem;	x	movementMultiplier
	f	Z	y	removed
	f	F	z	prevHorizontalSpeed
	m	(Laoq;Lbqb;)V	<init>	<init>
		p	1	type	type
		p	2	world	world
	m	()V	E	tickNetherPortalCooldown
	m	()Lni;	O	createSpawnPacket
	m	()I	S	getTeamColorValue
	m	()V	T	detach
		c	Removes all the passengers and removes this entity from any vehicles it is riding.
	m	()Laoq;	U	getType
	m	()I	V	getEntityId
	m	()Ljava/util/Set;	W	getScoreboardTags
	m	()V	X	kill
	m	()Ltt;	Y	getDataTracker
	m	()V	Z	afterSpawn
	m	(Ltq;)V	a	onTrackedDataSet
		p	1	data	data
	m	(Laom;Z)Z	a	startRiding
		p	1	entity	entity
		p	2	force	force
	m	(DD)V	a	changeLookDirection
		p	1	cursorDeltaX	cursorDeltaX
		p	3	cursorDeltaY	cursorDeltaY
	m	(Lfu;FF)V	a	refreshPositionAndAngles
		p	1	pos	pos
		p	2	yaw	yaw
		p	3	pitch	pitch
	m	(Lcfj;Ldem;)V	a	slowMovement
		p	1	state	state
		p	2	multiplier	multiplier
	m	(Lze;)Z	a	canBeSpectated
		p	1	spectator	spectator
	m	(Ldeg;)V	a	setBoundingBox
		p	1	boundingBox	boundingBox
	m	(Ljava/lang/String;)Z	a	addScoreboardTag
		p	1	tag	tag
	m	(Ldem;Ldeg;Lbqd;Lder;Laee;)Ldem;	a	adjustSingleAxisMovementForCollisions
		p	0	movement	movement
		p	1	entityBoundingBox	entityBoundingBox
		p	2	world	world
		p	3	context	context
		p	4	collisions	collisions
	m	(Ladf;)Z	a	isSubmergedIn
	m	(DDDFF)V	a	updatePositionAndAngles
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(FF)V	a	setRotation
		p	1	yaw	yaw
		p	2	pitch	pitch
	m	(Lfu;Lcfj;)V	a	playStepSound
		p	1	pos	pos
		p	2	state	state
	m	(Laom;Ldem;Ldeg;Lbqb;Lder;Laee;)Ldem;	a	adjustMovementForCollisions
		p	0	entity	entity
		p	1	movement	movement
		p	2	entityBoundingBox	entityBoundingBox
		p	3	world	world
		p	4	context	context
		p	5	collisions	collisions
	m	(Lle;)V	a	readCustomDataFromTag
		p	1	tag	tag
	m	(Lbqa;I)Lbbg;	a	dropItem
		p	1	item	item
		p	2	yOffset	yOffset
	m	(Lbpt;Lbpg;Lfu;Lcfj;F)Z	a	canExplosionDestroyBlock
		p	1	explosion	explosion
		p	2	world	world
		p	3	pos	pos
		p	4	state	state
		p	5	explosionPower	explosionPower
	m	(Ldem;FF)Ldem;	a	movementInputToVelocity
		p	0	movementInput	movementInput
		p	1	speed	speed
		p	2	yaw	yaw
	m	(Lmr;)V	a	setCustomName
		p	1	name	name
	m	(Laoy;Laom;)V	a	dealDamage
		p	1	attacker	attacker
		p	2	target	target
	m	(DDD)V	a	requestTeleport
		p	1	destX	destX
		p	3	destY	destY
		p	5	destZ	destZ
	m	(Lbec;Ldem;Lanf;)Lang;	a	interactAt
		p	1	player	player
		p	2	hitPos	hitPos
		p	3	hand	hand
	m	(Lapd;Ldem;)V	a	move
		p	1	type	type
		p	2	movement	movement
	m	(Lzd;)Laom;	a	changeDimension
		p	1	destination	destination
	m	(Lbqa;)Lbbg;	a	dropItem
		p	1	item	item
	m	(Lcap;)F	a	applyRotation
		p	1	rotation	rotation
	m	(D)Z	a	shouldRender
		p	1	distance	distance
	m	(Lbzj;)F	a	applyMirror
		p	1	mirror	mirror
	m	(Lcfj;)V	a	onBlockCollision
		p	1	state	state
	m	(Laom;D)Z	a	isInRange
		p	1	other	other
		p	2	radius	radius
	m	(Ldfo;)Z	a	isTeamPlayer
		p	1	team	team
	m	(DFZ)Ldej;	a	rayTrace
		p	1	maxDistance	maxDistance
		p	3	tickDelta	tickDelta
		p	4	includeFluids	includeFluids
	m	(Lk;)V	a	populateCrashReport
		p	1	section	section
	m	(DZLcfj;Lfu;)V	a	fall
		p	1	heightDifference	heightDifference
		p	3	onGround	onGround
		p	4	landedState	landedState
		p	5	landedPosition	landedPosition
	m	(Ljava/lang/Class;)Z	a	hasPassengerType
		p	1	clazz	clazz
	m	(Laox;)V	a	onStruckByLightning
		p	1	lightning	lightning
	m	(Ldem;)Ldem;	a	adjustMovementForPiston
		p	1	movement	movement
	m	(Lbec;Lanf;)Lang;	a	interact
		c	Called when a player interacts with this entity.
		p	1	player	player
			c	the player
		p	2	hand	hand
			c	the hand the player used to interact with this entity
	m	(DDF)Ldem;	a	getPassengerDismountOffset
		p	0	vehicleWidth	vehicleWidth
		p	2	passengerWidth	passengerWidth
		p	4	passengerYaw	passengerYaw
	m	(FI)V	a	updateTrackedHeadRotation
		p	1	yaw	yaw
		p	2	interpolationSteps	interpolationSteps
	m	(Laom;ILanw;)V	a	updateKilledAdvancementCriterion
		p	1	killer	killer
		p	2	score	score
		p	3	damageSource	damageSource
	m	(Lack;FF)V	a	playSound
		p	1	sound	sound
		p	2	volume	volume
		p	3	pitch	pitch
	m	([D)Llk;	a	toListTag
		p	1	values	values
	m	(Ladf;D)Z	a	updateMovementInFluid
		p	1	tag	tag
	m	(Ldg$a;Ldem;)V	a	lookAt
		p	1	anchorPoint	anchorPoint
		p	2	target	target
	m	(Ldem;Ldeg;Laee;)Ldem;	a	adjustMovementForCollisions
		p	0	movement	movement
		p	1	entityBoundingBox	entityBoundingBox
		p	2	collisions	collisions
	m	(Lbpt;Lbpg;Lfu;Lcfj;Lcxa;F)F	a	getEffectiveExplosionResistance
		p	1	explosion	explosion
		p	2	world	world
		p	3	pos	pos
		p	4	blockState	blockState
		p	5	fluidState	fluidState
		p	6	max	max
	m	(DDDFFIZ)V	a	updateTrackedPositionAndAngles
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
		p	9	interpolationSteps	interpolationSteps
		p	10	interpolate	interpolate
	m	(Laor;Lbki;)V	a	equipStack
		p	1	slot	slot
		p	2	stack	stack
	m	(ZLjava/util/Set;)V	a	collectPassengers
		p	1	playersOnly	playersOnly
		p	2	output	output
	m	(Lbki;F)Lbbg;	a	dropStack
		p	1	stack	stack
		p	2	yOffset	yOffset
	m	(Lbki;)Lbbg;	a	dropStack
		p	1	stack	stack
	m	(B)V	a	handleStatus
		p	1	status	status
	m	(Lfz$a;D)D	a	calculatePistonMovementFactor
		p	1	axis	axis
		p	2	offsetFactor	offsetFactor
	m	(Lanw;F)Z	a	damage
		p	1	source	source
		p	2	amount	amount
	m	([F)Llk;	a	toListTag
		p	1	values	values
	m	(Lapj;Laon;)F	a	getEyeHeight
		p	1	pose	pose
		p	2	dimensions	dimensions
	m	(Laom;Laom$a;)V	a	updatePassengerPosition
		p	1	passenger	passenger
	m	(Lapj;)Laon;	a	getDimensions
		p	1	pose	pose
	m	(FLdem;)V	a	updateVelocity
		p	1	speed	speed
		p	2	movementInput	movementInput
	m	(Ldem;Lapd;)Ldem;	a	adjustMovementForSneaking
		p	1	movement	movement
		p	2	type	type
	m	()Z	aA	isTouchingWater
		c	Returns whether this entity's hitbox is touching water fluid.
	m	()Z	aB	isTouchingWaterOrRain
	m	()Z	aC	isWet
		c	Returns whether this entity is touching water, or is being rained on, or is inside a bubble column...\n\n@see net.minecraft.entity.Entity#isTouchingWater()\n@see net.minecraft.entity.Entity#isBeingRainedOn()\n@see net.minecraft.entity.Entity#isInsideBubbleColumn()
	m	()Z	aD	isInsideWaterOrBubbleColumn
	m	()Z	aE	isSubmergedInWater
		c	Returns whether this entity's hitbox is fully submerged in water.
	m	()V	aF	updateSwimming
	m	()Z	aG	updateWaterState
	m	()V	aH	checkWaterState
	m	()V	aI	onSwimmingStart
	m	()Lcfj;	aJ	getLandingBlockState
	m	()Z	aK	shouldSpawnSprintingParticles
	m	()V	aL	spawnSprintingParticles
	m	()V	aM	setInLava
	m	()Z	aN	isInLava
	m	()F	aO	getBrightnessAtEyes
	m	()V	aP	scheduleVelocityUpdate
	m	()Z	aQ	collides
	m	()Z	aR	isPushable
	m	()Z	aS	shouldSetPositionOnLoad
	m	()Ljava/lang/String;	aT	getSavedEntityId
	m	()Z	aU	isAlive
	m	()Z	aV	isInsideWall
	m	()V	aW	tickRiding
	m	()D	aX	getHeightOffset
	m	()D	aY	getMountedHeightOffset
	m	()Z	aZ	isLiving
	m	()Z	a_	isSpectator
	m	(Ljava/util/UUID;)V	a_	setUuid
		p	1	uuid	uuid
	m	(Lbqb;)V	a_	setWorld
		p	1	world	world
	m	(ILbki;)Z	a_	equip
		p	1	slot	slot
		p	2	item	item
	m	(Lle;)Z	a_	saveSelfToTag
		p	1	tag	tag
	m	(Laoy;)V	a_	onKilledOther
		p	1	other	other
	m	(Lbec;)V	a_	onPlayerCollision
		p	1	player	player
	m	()V	aa	remove
	m	()Lapj;	ab	getPose
	m	()V	ac	refreshPosition
	m	()V	ad	baseTick
	m	()I	ae	getMaxNetherPortalTime
	m	()V	af	setOnFireFromLava
	m	()I	ag	getFireTicks
	m	()V	ah	extinguish
	m	()V	ai	destroy
	m	()Z	aj	isOnGround
	m	()Lfu;	ak	getLandingPos
	m	()F	al	getJumpVelocityMultiplier
	m	()F	am	getVelocityMultiplier
	m	()Lfu;	an	getVelocityAffectingPos
	m	()F	ao	calculateNextStepSoundDistance
	m	()V	ap	moveToBoundingBoxCenter
	m	()Lack;	aq	getSwimSound
	m	()Lack;	ar	getSplashSound
	m	()Lack;	as	getHighSpeedSplashSound
	m	()V	at	checkBlockCollision
	m	()Z	au	hasWings
	m	()Z	av	isSilent
	m	()Z	aw	hasNoGravity
	m	()Z	ax	canClimb
	m	()Ldeg;	ay	getCollisionBox
	m	()Z	az	isFireImmune
	m	(Lapj;)V	b	setPose
		p	1	pose	pose
	m	(D)V	b	setRenderDistanceMultiplier
		p	0	value	value
	m	(Ljava/lang/String;)Z	b	removeScoreboardTag
		p	1	tag	tag
	m	(Ldeg;)Z	b	doesNotCollide
		p	1	box	box
	m	(Lle;)V	b	writeCustomDataToTag
		p	1	tag	tag
	m	(DDDFF)V	b	refreshPositionAndAngles
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(Lmr;)Lmr;	b	removeClickEvents
		p	0	textComponent	textComponent
	m	(Lanw;)Z	b	isInvulnerableTo
		p	1	damageSource	damageSource
	m	(Ladf;)D	b	getFluidHeight
		p	1	fluid	fluid
	m	(FF)Z	b	handleFallDamage
		p	1	fallDistance	fallDistance
		p	2	damageMultiplier	damageMultiplier
	m	(Lze;)V	b	onStartedTrackingBy
		p	1	player	player
	m	(Ldem;)D	b	squaredHorizontalLength
		p	0	vector	vector
	m	(IZ)V	b	setFlag
		p	1	index	index
		p	2	value	value
	m	(DDD)V	b	refreshPositionAfterTeleport
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Z	bA	isGlowing
	m	()Z	bB	isInvisible
	m	()Ldfo;	bC	getScoreboardTeam
	m	()I	bD	getMaxAir
	m	()I	bE	getAir
	m	()Lmr;	bF	getDefaultName
	m	()F	bG	getHeadYaw
	m	()Z	bH	isAttackable
	m	()Z	bI	isInvulnerable
	m	()Z	bK	canUsePortals
	m	()I	bL	getSafeFallDistance
	m	()Ldem;	bN	getLastNetherPortalDirectionVector
	m	()Lfz;	bO	getLastNetherPortalDirection
	m	()Z	bP	canAvoidTraps
	m	()Z	bQ	doesRenderOnFire
	m	()Ljava/util/UUID;	bR	getUuid
	m	()Ljava/lang/String;	bS	getUuidAsString
	m	()Ljava/lang/String;	bT	getEntityName
	m	()Z	bU	canFly
	m	()D	bV	getRenderDistanceMultiplier
	m	()Z	bW	isCustomNameVisible
	m	()Z	bX	shouldRenderName
	m	()Lfz;	bY	getHorizontalFacing
	m	()Lfz;	bZ	getMovementDirection
	m	()V	ba	removeAllPassengers
	m	()F	bc	getTargetingMargin
	m	()Ldem;	bd	getRotationVector
	m	()Ldel;	be	getRotationClient
	m	()Ldem;	bf	getRotationVecClient
	m	()V	bg	tickNetherPortal
	m	()I	bh	getDefaultNetherPortalCooldown
	m	()V	bi	animateDamage
	m	()Ljava/lang/Iterable;	bj	getItemsHand
	m	()Ljava/lang/Iterable;	bk	getArmorItems
	m	()Ljava/lang/Iterable;	bl	getItemsEquipped
	m	()Z	bm	isOnFire
	m	()Z	bn	hasVehicle
	m	()Z	bo	hasPassengers
	m	()Z	bp	canBeRiddenInWater
	m	()Z	bq	isSneaking
	m	()Z	br	bypassesSteppingEffects
	m	()Z	bs	bypassesLandingEffects
	m	()Z	bt	isSneaky
	m	()Z	bu	isDescending
	m	()Z	bv	isInSneakingPose
	m	()Z	bw	isSprinting
	m	()Z	bx	isSwimming
	m	()Z	by	isInSwimmingPose
	m	()Z	bz	shouldLeaveSwimmingPose
	m	(Lze;)V	c	onStoppedTrackingBy
		p	1	player	player
	m	(FF)Ldem;	c	getRotationVector
		p	1	pitch	pitch
		p	2	yaw	yaw
	m	(DDD)V	c	updateTrackedPosition
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lapj;)Z	c	wouldPoseNotCollide
		p	1	pose	pose
	m	(Lbec;)Z	c	isInvisibleTo
		p	1	player	player
	m	(Laoy;)Ldem;	c	updatePassengerForDismount
		p	1	passenger	passenger
	m	(Z)V	c	setOnGround
		p	1	onGround	onGround
	m	(D)D	c	offsetX
		p	1	widthScale	widthScale
	m	()Lfu;	cA	getBlockPos
	m	()Ldem;	cB	getVelocity
	m	()D	cC	getX
	m	()D	cD	getY
	m	()D	cE	getRandomBodyY
	m	()D	cF	getEyeY
	m	()D	cG	getZ
	m	()V	cH	checkDespawn
	m	()Lmv;	ca	getHoverEvent
	m	()Ldeg;	cb	getBoundingBox
	m	()Ldeg;	cc	getVisibilityBoundingBox
	m	()F	cd	getStandingEyeHeight
	m	()Lbqb;	cf	getEntityWorld
	m	()Lnet/minecraft/server/MinecraftServer;	cg	getServer
	m	()Z	ch	isImmuneToExplosion
	m	()Z	ci	entityDataRequiresOperator
	m	()Z	cj	teleportRequested
	m	()Laom;	cl	getPrimaryPassenger
	m	()Ljava/util/List;	cm	getPassengerList
	m	()Ljava/util/Collection;	cn	getPassengersDeep
	m	()Ljava/util/stream/Stream;	co	streamPassengersRecursively
	m	()Z	cp	hasPlayerRider
	m	()Laom;	cq	getRootVehicle
		c	Gets the lowest entity this entity is riding.
	m	()Z	cr	isLogicalSideForUpdatingMovement
	m	()Laom;	cs	getVehicle
	m	()Lacm;	ct	getSoundCategory
	m	()I	cu	getBurningDuration
	m	()Lcz;	cv	getCommandSource
	m	()F	cx	getWidth
	m	()F	cy	getHeight
	m	()Ldem;	cz	getPos
	m	(DDD)V	d	updatePosition
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfu;)V	d	setInNetherPortal
		p	1	pos	pos
	m	(Z)V	d	setSilent
		p	1	silent	silent
	m	(Ldem;)D	d	squaredDistanceTo
		p	1	vector	vector
	m	(Lapj;)Ldeg;	d	calculateBoundsForPose
		p	1	pos	pos
	m	(Lle;)Z	d	saveToTag
		p	1	tag	tag
	m	(D)D	d	getParticleX
		p	1	widthScale	widthScale
	m	(FF)Ldem;	d	getOppositeRotationVector
		p	1	pitch	pitch
		p	2	yaw	yaw
	m	(F)V	d	playSwimSound
		p	1	volume	volume
	m	(Z)V	e	setNoGravity
		p	1	noGravity	noGravity
	m	()V	e	initDataTracker
	m	(Lapj;)F	e	getEyeHeight
		p	1	pose	pose
	m	(F)F	e	playFlySound
		p	1	distance	distance
	m	(DDD)Z	e	doesNotCollide
		p	1	offsetX	offsetX
		p	3	offsetY	offsetY
		p	5	offsetZ	offsetZ
	m	(Lle;)Lle;	e	toTag
		p	1	tag	tag
	m	(Ldem;)V	e	setVelocity
		p	1	velocity	velocity
	m	(D)D	e	getBodyY
		p	1	heightScale	heightScale
	m	(I)V	e	setEntityId
		p	1	id	id
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	(D)D	f	offsetZ
		p	1	widthScale	widthScale
	m	(Lle;)V	f	fromTag
		p	1	tag	tag
	m	(Z)V	f	setSneaking
		p	1	sneaking	sneaking
	m	(F)Ldem;	f	getRotationVec
		p	1	tickDelta	tickDelta
	m	(Ldem;)Ldem;	f	adjustMovementForCollisions
		p	1	movement	movement
	m	(I)V	f	setOnFireFor
		p	1	seconds	seconds
	m	(DDD)V	f	resetPosition
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(I)V	g	setFireTicks
		p	1	ticks	ticks
	m	(Z)V	g	setSprinting
		p	1	sprinting	sprinting
	m	(F)F	g	getPitch
		p	1	tickDelta	tickDelta
	m	(D)D	g	getParticleZ
		p	1	widthScale	widthScale
	m	(Laom;)F	g	distanceTo
		p	1	entity	entity
	m	(DDD)D	g	squaredDistanceTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Laom;)D	h	squaredDistanceTo
		p	1	entity	entity
	m	(F)F	h	getYaw
		p	1	tickDelta	tickDelta
	m	(Z)V	h	setSwimming
		p	1	swimming	swimming
	m	(DDD)V	h	addVelocity
		p	1	deltaX	deltaX
		p	3	deltaY	deltaY
		p	5	deltaZ	deltaZ
	m	(F)Ldem;	i	getOppositeRotationVector
		p	1	tickDelta	tickDelta
	m	(Z)V	i	setGlowing
		p	1	glowing	glowing
	m	(I)Z	i	getFlag
		p	1	index	index
	m	(Laom;)V	i	pushAwayFrom
		p	1	entity	entity
	m	()Z	i	isBeingRainedOn
	m	(DDD)Z	i	shouldRender
		p	1	cameraX	cameraX
		p	3	cameraY	cameraY
		p	5	cameraZ	cameraZ
	m	(Z)V	j	setInvisible
		p	1	invisible	invisible
	m	(DDD)V	j	setVelocityClient
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Laom;)Ldeg;	j	getHardCollisionBox
		p	1	collidingEntity	collidingEntity
	m	(F)Ldem;	j	getCameraPosVec
		p	1	tickDelta	tickDelta
	m	()V	j	tick
	m	(I)V	j	setAir
		p	1	air	air
	m	(Z)V	k	onBubbleColumnSurfaceCollision
		p	1	drag	drag
	m	(F)V	k	setHeadYaw
		p	1	headYaw	headYaw
	m	(I)Z	k	hasPermissionLevel
		p	1	permissionLevel	permissionLevel
	m	(Laom;)V	k	updatePassengerPosition
		p	1	passenger	passenger
	m	(DDD)V	k	pushOutOfBlocks
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Z	k	isInsideBubbleColumn
	m	(DDD)V	l	teleport
		p	1	destX	destX
		p	3	destY	destY
		p	5	destZ	destZ
	m	()V	l	stopRiding
	m	(Z)V	l	onBubbleColumnCollision
		p	1	drag	drag
	m	(F)V	l	setYaw
		p	1	yaw	yaw
	m	(Laom;)V	l	onPassengerLookAround
		p	1	passenger	passenger
	m	(Laom;)Z	m	startRiding
		p	1	entity	entity
	m	(Z)V	m	setInvulnerable
		p	1	invulnerable	invulnerable
	m	(DDD)V	m	setVelocity
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(DDD)V	n	setPos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Z)V	n	setCustomNameVisible
		p	1	visible	visible
	m	(Laom;)Z	n	canStartRiding
		p	1	entity	entity
	m	()V	n	updateSubmergedInWaterState
	m	(Laom;)V	o	addPassenger
		p	1	passenger	passenger
	m	(Laom;)V	p	removePassenger
		p	1	passenger	passenger
	m	(Laom;)Z	q	canAddPassenger
		p	1	passenger	passenger
	m	(Laom;)Z	r	isTeammate
		p	1	other	other
	m	(Laom;)Z	s	isPartOf
		p	1	entity	entity
	m	(Laom;)Z	t	handleAttack
		p	1	attacker	attacker
	m	(Laom;)V	u	copyPositionAndRotation
		p	1	entity	entity
	m	(Laom;)V	v	copyFrom
		p	1	original	original
	m	(Laom;)Z	w	hasPassenger
		p	1	passenger	passenger
	m	(Laom;)Z	x	isConnectedThroughVehicle
		c	Checks if this entity and another entity share the same root vehicle.
		p	1	entity	entity
			c	the other entity
	m	(Laom;)Z	y	hasPassengerDeep
		p	1	passenger	passenger
	m	()I	y	getPermissionLevel
	m	()V	y_	calculateDimensions
	m	()Lcxf;	z_	getPistonBehavior
c	aom$a	net/minecraft/entity/Entity$PositionUpdater
	m	(Laom;DDD)V	accept	accept
		p	1	entity	entity
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	aon	net/minecraft/entity/EntityDimensions
	f	F	a	width
	f	F	b	height
	f	Z	c	fixed
	m	(FFZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	fixed	fixed
	m	(F)Laon;	a	scaled
		p	1	ratio	ratio
	m	(FF)Laon;	a	scaled
		p	1	widthRatio	widthRatio
		p	2	heightRatio	heightRatio
	m	(FF)Laon;	b	changing
		p	0	width	width
		p	1	height	height
	m	(FF)Laon;	c	fixed
		p	0	width	width
		p	1	height	height
c	aop	net/minecraft/predicate/entity/EntityPredicates
	f	Ljava/util/function/Predicate;	a	VALID_ENTITY
		c	Tests if an entity is valid.\n\n<p>An entity is valid when the entity is alive.\n\n@see net.minecraft.entity.Entity#isAlive()
	f	Ljava/util/function/Predicate;	b	VALID_LIVING_ENTITY
		c	Tests if a living entity is valid.\n\n<p>A living entity is valid when the entity is alive.\n\n@see net.minecraft.entity.LivingEntity#isAlive()
	f	Ljava/util/function/Predicate;	c	NOT_MOUNTED
		c	Tests if an entity is not mounted.\n\n<p>An entity is not mounted when:\n\n<ul><li>The entity is alive\n<li>The entity has no passengers\n<li>The entity is not in a vehicle\n</ul>
	f	Ljava/util/function/Predicate;	d	VALID_INVENTORIES
		c	Tests if an entity has a valid inventory.\n\n<p>An entity has a valid inventory when:\n\n<ul><li>The entity is alive\n<li>The entity implements {@link net.minecraft.inventory.Inventory}\n</ul>\n\n@see net.minecraft.entity.vehicle.StorageMinecartEntity
	f	Ljava/util/function/Predicate;	e	EXCEPT_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	EXCEPT_CREATIVE_SPECTATOR_OR_PEACEFUL
	f	Ljava/util/function/Predicate;	g	EXCEPT_SPECTATOR
	m	(Laom;)Ljava/util/function/Predicate;	a	canBePushedBy
		p	0	entity	entity
	m	(DDDD)Ljava/util/function/Predicate;	a	maxDistance
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(Laom;)Ljava/util/function/Predicate;	b	rides
		p	0	entity	entity
c	aop$a	net/minecraft/predicate/entity/EntityPredicates$CanPickup
	f	Lbki;	a	stack
	m	(Lbki;)V	<init>	<init>
		p	1	stack	stack
	m	(Laom;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	aoq	net/minecraft/entity/EntityType
	f	Lorg/apache/logging/log4j/Logger;	bd	LOGGER
	f	Laoq$b;	be	factory
	f	Lapa;	bf	spawnGroup
	f	Z	bh	saveable
	f	Z	bi	summonable
	f	Z	bj	fireImmune
	f	Z	bk	spawnableFarFromPlayer
	f	I	bl	maxTrackDistance
	f	I	bm	trackTickInterval
	f	Ljava/lang/String;	bn	translationKey
	f	Lmr;	bo	name
	f	Luh;	bp	lootTableId
	f	Laon;	bq	dimensions
	m	(Laoq$b;Lapa;ZZZZLcom/google/common/collect/ImmutableSet;Laon;II)V	<init>	<init>
		p	1	factory	factory
		p	2	spawnGroup	spawnGroup
		p	3	saveable	saveable
		p	4	summonable	summonable
		p	5	fireImmune	fireImmune
		p	6	spawnableFarFromPlayer	spawnableFarFromPlayer
	m	(Lle;Lbqb;)Ljava/util/Optional;	a	getEntityFromTag
		p	0	tag	tag
		p	1	world	world
	m	(Lbqb;Lbec;Laom;Lle;)V	a	loadFromEntityTag
		p	0	world	world
		p	1	player	player
		p	2	entity	entity
		p	3	itemTag	itemTag
	m	(Lbqb;)Laom;	a	create
		p	1	world	world
	m	()Z	a	isSaveable
	m	(Laoq;)Luh;	a	getId
		p	0	type	type
	m	(Lbqb;Laoq;)Laom;	a	newInstance
		p	0	world	world
		p	1	type	type
	m	(Lle;Lbqb;Ljava/util/function/Function;)Laom;	a	loadEntityWithPassengers
		p	0	compoundTag	compoundTag
		p	1	world	world
		p	2	entityProcessor	entityProcessor
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
		p	0	id	id
	m	(Lbqb;Lbki;Lbec;Lfu;Lapb;ZZ)Laom;	a	spawnFromItemStack
		p	1	world	world
		p	2	stack	stack
		p	3	player	player
		p	4	pos	pos
		p	5	spawnReason	spawnReason
		p	6	alignPosition	alignPosition
		p	7	invertY	invertY
	m	(ILbqb;)Laom;	a	createInstanceFromId
		p	0	type	type
		p	1	world	world
	m	(Lbqd;Lfu;ZLdeg;)D	a	getOriginY
		p	0	world	world
		p	1	pos	pos
		p	2	invertY	invertY
		p	3	boundingBox	boundingBox
	m	(Ljava/lang/String;Laoq$a;)Laoq;	a	register
		p	0	id	id
		p	1	type	type
	m	(DDD)Ldeg;	a	createSimpleBoundingBox
		p	1	feetX	feetX
		p	3	feetY	feetY
		p	5	feetZ	feetZ
	m	(Lbqb;Lle;Lmr;Lbec;Lfu;Lapb;ZZ)Laom;	a	spawn
		p	1	world	world
		p	2	itemTag	itemTag
		p	3	name	name
		p	4	player	player
		p	5	pos	pos
		p	6	spawnReason	spawnReason
		p	7	alignPosition	alignPosition
		p	8	invertY	invertY
	m	(Ladf;)Z	a	isIn
		p	1	tag	tag
	m	(Lle;)Ljava/util/Optional;	a	fromTag
		p	0	compoundTag	compoundTag
	m	(Lle;Lbqb;)Ljava/util/Optional;	b	loadEntityFromTag
		p	0	compoundTag	compoundTag
		p	1	world	world
	m	()Z	b	isSummonable
	m	(Lbqb;Lle;Lmr;Lbec;Lfu;Lapb;ZZ)Laom;	b	create
		p	1	world	world
		p	2	itemTag	itemTag
		p	3	name	name
		p	4	player	player
		p	5	pos	pos
		p	6	spawnReason	spawnReason
		p	7	alignPosition	alignPosition
		p	8	invertY	invertY
	m	()Z	c	isFireImmune
	m	()Z	d	isSpawnableFarFromPlayer
	m	()Lapa;	e	getSpawnGroup
	m	()Ljava/lang/String;	f	getTranslationKey
	m	()Lmr;	g	getName
	m	()Luh;	i	getLootTableId
	m	()F	j	getWidth
	m	()F	k	getHeight
	m	()Laon;	l	getDimensions
	m	()I	m	getMaxTrackDistance
		c	Returns the tracking distance, <b>in chunks</b>, of this type of entity\nfor clients. This will be then modified by the server's tracking\ndistance multiplier.
	m	()I	n	getTrackTickInterval
	m	()Z	o	alwaysUpdateVelocity
c	aoq$a	net/minecraft/entity/EntityType$Builder
	f	Laoq$b;	a	factory
	f	Lapa;	b	spawnGroup
	f	Z	d	saveable
	f	Z	e	summonable
	f	Z	f	fireImmune
	f	Z	g	spawnableFarFromPlayer
	f	I	h	maxTrackingRange
	f	I	i	trackingTickInterval
	f	Laon;	j	dimensions
	m	(Laoq$b;Lapa;)V	<init>	<init>
		p	1	factory	factory
		p	2	spawnGroup	spawnGroup
	m	(FF)Laoq$a;	a	setDimensions
		p	1	width	width
		p	2	height	height
	m	(Laoq$b;Lapa;)Laoq$a;	a	create
		p	0	factory	factory
		p	1	spawnGroup	spawnGroup
	m	(Ljava/lang/String;)Laoq;	a	build
		p	1	id	id
	m	()Laoq$a;	a	disableSummon
	m	(I)Laoq$a;	a	maxTrackingRange
		p	1	maxTrackingRange	maxTrackingRange
	m	(Lapa;)Laoq$a;	a	create
		p	0	spawnGroup	spawnGroup
	m	()Laoq$a;	b	disableSaving
	m	(I)Laoq$a;	b	trackingTickInterval
		p	1	trackingTickInterval	trackingTickInterval
	m	()Laoq$a;	c	makeFireImmune
	m	()Laoq$a;	d	spawnableFarFromPlayer
c	aoq$b	net/minecraft/entity/EntityType$EntityFactory
	m	(Laoq;Lbqb;)Laom;	create	create
		p	1	type	type
		p	2	world	world
c	aor	net/minecraft/entity/EquipmentSlot
	f	Laor$a;	g	type
	f	I	h	entityId
	f	I	i	armorStandId
	f	Ljava/lang/String;	j	name
	m	(Ljava/lang/String;ILaor$a;IILjava/lang/String;)V	<init>	<init>
		p	3	type	type
		p	4	entityId	entityId
		p	5	armorStandId	armorStandId
		p	6	name	name
	m	(Ljava/lang/String;)Laor;	a	byName
		p	0	name	name
	m	()Laor$a;	a	getType
	m	(Laor$a;I)Laor;	a	fromTypeIndex
		p	0	type	type
		p	1	index	index
	m	()I	b	getEntitySlotId
	m	()I	c	getArmorStandSlotId
	m	()Ljava/lang/String;	d	getName
c	aor$a	net/minecraft/entity/EquipmentSlot$Type
c	aos	net/minecraft/entity/ExperienceOrbEntity
	f	I	an	lastTargetUpdateTick
	f	I	b	renderTicks
	f	I	c	orbAge
	f	I	d	pickupDelay
	f	I	e	health
	f	I	f	amount
	f	Lbec;	g	target
	m	(Lbqb;DDDI)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	amount	amount
	m	(I)I	a	roundToOrbSize
		p	0	value	value
	m	(I)I	b	getMendingRepairCost
		p	1	repairAmount	repairAmount
	m	(I)I	c	getMendingRepairAmount
		p	1	experienceAmount	experienceAmount
	m	()I	g	getExperienceAmount
	m	()I	h	getOrbSize
	m	()V	i	applyWaterMovement
c	aot	net/minecraft/entity/mob/FlyingEntity
c	aou	net/minecraft/util/Arm
	f	Lmr;	c	optionName
	m	(Ljava/lang/String;ILmr;)V	<init>	<init>
		p	3	optionName	optionName
	m	()Laou;	a	getOpposite
c	aov	net/minecraft/entity/SaddledComponent
	f	Z	a	boosted
	f	I	c	currentBoostTime
	f	Ltt;	d	dataTracker
	f	Ltq;	e	boostTime
	f	Ltq;	f	saddled
	m	(Ltt;Ltq;Ltq;)V	<init>	<init>
		p	1	dataTracker	dataTracker
		p	2	boostTime	boostTime
		p	3	saddled	saddled
	m	(Z)V	a	setSaddled
		p	1	saddled	saddled
	m	()V	a	boost
	m	(Lle;)V	a	toTag
		p	1	tag	tag
	m	(Ljava/util/Random;)Z	a	boost
	m	()Z	b	isSaddled
	m	(Lle;)V	b	fromTag
		p	1	tag	tag
c	aow	net/minecraft/entity/ItemSteerable
	m	()F	O_	getSaddledSpeed
	m	()Z	P_	consumeOnAStickItem
	m	(Laoz;Laov;Ldem;)Z	a	travel
		p	1	entity	entity
		p	2	saddledEntity	saddledEntity
		p	3	movementInput	movementInput
	m	(Ldem;)V	a_	setMovementInput
		p	1	movementInput	movementInput
c	aox	net/minecraft/entity/LightningEntity
	f	J	b	seed
	f	I	c	ambientTick
	f	I	d	remainingActions
	f	Z	e	cosmetic
	f	Lze;	f	channeler
	m	(I)V	a	spawnFire
		p	1	spreadAttempts	spreadAttempts
	m	(Lze;)V	d	setChanneler
		p	1	channeler	channeler
c	aoy	net/minecraft/entity/LivingEntity
	c	Represents an entity which has a health value and can receive damage.
	f	I	aA	lastAttackedTicks
	f	F	aB	lastLimbDistance
	f	F	aC	limbDistance
	f	F	aD	limbAngle
	f	I	aE	defaultMaxHealth
	f	F	aF	randomLargeSeed
	f	F	aG	randomSmallSeed
	f	F	aH	bodyYaw
	f	F	aI	prevBodyYaw
	f	F	aJ	headYaw
	f	F	aK	prevHeadYaw
	f	F	aL	flyingSpeed
	f	Lbec;	aM	attackingPlayer
	f	I	aN	playerHitTimer
	f	Z	aO	dead
	f	I	aP	despawnCounter
	f	F	aQ	prevStepBobbingAmount
	f	F	aR	stepBobbingAmount
	f	F	aS	lookDirection
	f	F	aT	prevLookDirection
	f	I	aV	scoreAmount
	f	F	aW	lastDamageTaken
	f	Z	aX	jumping
	f	F	aY	sidewaysSpeed
	f	F	aZ	upwardSpeed
	f	Ltq;	an	LIVING_FLAGS
	f	Laon;	ao	SLEEPING_DIMENSIONS
	f	Z	ap	handSwinging
	f	Lanf;	aq	preferredHand
	f	I	ar	handSwingTicks
	f	I	as	stuckArrowTimer
	f	I	at	stuckStingerTimer
	f	I	au	hurtTime
	f	I	av	maxHurtTime
	f	F	aw	knockbackVelocity
	f	I	ax	deathTime
	f	F	ay	lastHandSwingProgress
	f	F	az	handSwingProgress
	f	Ljava/util/UUID;	b	SPRINTING_SPEED_BOOST_ID
	f	I	bA	lastAttackTime
	f	F	bB	movementSpeed
	f	I	bC	jumpingCooldown
	f	F	bD	absorptionAmount
	f	Lfu;	bE	lastBlockPos
	f	Ljava/util/Optional;	bF	climbingPos
	f	Lanw;	bG	lastDamageSource
	f	J	bH	lastDamageTime
	f	F	bI	leaningPitch
	f	F	bJ	lastLeaningPitch
	f	F	ba	forwardSpeed
	f	I	bb	bodyTrackingIncrements
	f	D	bc	serverX
	f	D	bd	serverY
	f	D	be	serverZ
	f	D	bf	serverYaw
	f	D	bg	serverPitch
	f	D	bh	serverHeadYaw
	f	I	bi	headTrackingIncrements
	f	Lbki;	bj	activeItemStack
	f	I	bk	itemUseTimeLeft
	f	I	bl	roll
	f	I	bm	riptideTicks
	f	Lapr;	bn	brain
	f	Ltq;	bo	STUCK_ARROW_COUNT
	f	Ltq;	bp	STINGER_COUNT
	f	Ltq;	bq	SLEEPING_POSITION
	f	Lapu;	br	attributes
	f	Lanv;	bs	damageTracker
	f	Ljava/util/Map;	bt	activeStatusEffects
	f	Lgi;	bu	equippedHand
	f	Lgi;	bv	equippedArmor
	f	Z	bw	effectsChanged
	f	Laoy;	bx	attacker
	f	I	by	lastAttackedTime
	f	Laoy;	bz	attacking
	f	Ljava/util/UUID;	c	SOUL_SPEED_BOOST_ID
	f	Lapv;	d	SPRINTING_SPEED_BOOST
	f	Ltq;	e	HEALTH
	f	Ltq;	f	POTION_SWIRLS_COLOR
	f	Ltq;	g	POTION_SWIRLS_AMBIENT
	m	(Laom;)D	A	getAttackDistanceScalingFactor
		p	1	entity	entity
	m	(Laom;)Z	B	tryAttack
		p	1	target	target
	m	()V	C	updatePotionVisibility
	m	(Laom;)V	C	pushAway
		p	1	entity	entity
	m	(Laom;)Z	D	canSee
		p	1	entity	entity
	m	(Laom;)V	a	onDismounted
		p	1	vehicle	vehicle
	m	(Lbki;I)V	a	spawnItemParticles
		p	1	stack	stack
		p	2	count	count
	m	(Laoy;Laxs;)Z	a	isTarget
		p	1	entity	entity
		p	2	predicate	predicate
	m	(Lcwz;)Z	a	canWalkOnFluid
		p	1	fluid	fluid
	m	(Laor;)Z	a	hasStackEquipped
		p	1	slot	slot
	m	(Lanf;)V	a	swingHand
		p	1	hand	hand
	m	(Lfu;Z)V	a	setNearbySongPlaying
		p	1	songPosition	songPosition
		p	2	playing	playing
	m	(Lbqb;Lbki;)Lbki;	a	eatFood
		p	1	world	world
		p	2	stack	stack
	m	(FDD)V	a	takeKnockback
	m	(Lanw;IZ)V	a	dropEquipment
		p	1	source	source
		p	2	lootingMultiplier	lootingMultiplier
		p	3	allowDrops	allowDrops
	m	(Lbki;Lbqb;Laoy;)V	a	applyFoodEffects
		p	1	stack	stack
		p	2	world	world
		p	3	targetEntity	targetEntity
	m	(Lfu;)V	a	setPositionInBed
		p	1	pos	pos
	m	(Lanw;Z)V	a	dropLoot
		p	1	source	source
		p	2	causedByPlayer	causedByPlayer
	m	(Lcom/mojang/serialization/Dynamic;)Lapr;	a	deserializeBrain
	m	(Lbke;)Z	a	isHolding
		c	Checks if this entity is holding a certain item.\n\n<p>This checks both the entity's main and off hand.
		p	1	item	item
	m	(Laog;)V	a	onStatusEffectApplied
		p	1	effect	effect
	m	(Ldeg;Ldeg;)V	a	tickRiptide
		p	1	a	a
		p	2	b	b
	m	(Laog;Z)V	a	onStatusEffectUpgraded
		p	1	effect	effect
		p	2	reapplyEffect	reapplyEffect
	m	(Laps;)Lapt;	a	getAttributeInstance
		p	1	attribute	attribute
	m	(Lanw;)V	a	onDeath
		p	1	source	source
	m	(DDDZ)Z	a	teleport
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	particleEffects	particleEffects
	m	(Laoy;)V	a	setAttacker
		p	1	attacker	attacker
	m	(Laoq;)Z	a	canTarget
		p	1	type	type
	m	(Lanf;Z)V	a	swingHand
		p	1	hand	hand
	m	(ZLanw;)Ldat$a;	a	getLootContextBuilder
		p	1	causedByPlayer	causedByPlayer
		p	2	source	source
	m	(Ljava/util/function/Predicate;)Z	a	isHolding
		c	Checks if this entity is holding a certain item.\n\n<p>This checks both the entity's main and off hand.
	m	(Laom;I)V	a	sendPickup
		p	1	item	item
		p	2	count	count
	m	(Laoe;)Z	a	hasStatusEffect
		p	1	effect	effect
	m	(Lanf;Lbki;)V	a	setStackInHand
		p	1	hand	hand
		p	2	stack	stack
	m	(F)F	a	getLeaningPitch
		p	1	tickDelta	tickDelta
	m	(Lanw;F)V	b	damageArmor
		p	1	source	source
		p	2	amount	amount
	m	(Laoe;)Laog;	b	getStatusEffect
		p	1	effect	effect
	m	(Lbki;)V	b	onEquipStack
		p	1	stack	stack
	m	(Laog;)V	b	onStatusEffectRemoved
		p	1	effect	effect
	m	(Laps;)D	b	getAttributeValue
		p	1	attribute	attribute
	m	(Lbki;I)V	b	spawnConsumptionEffects
		p	1	stack	stack
		p	2	particleCount	particleCount
	m	(Laor;)Lbki;	b	getEquippedStack
		p	1	slot	slot
	m	(F)V	b	heal
		p	1	amount	amount
	m	(Lanf;)Lbki;	b	getStackInHand
		p	1	hand	hand
	m	(Lfu;)V	b	sleep
		p	1	pos	pos
	m	(Lapj;Laon;)F	b	getActiveEyeHeight
		p	1	pose	pose
		p	2	dimensions	dimensions
	m	(Lfu;Lcfj;)Z	b	canEnterTrapdoor
		p	1	pos	pos
		p	2	state	state
	m	(Lbki;)Lack;	c	getDrinkSound
		p	1	stack	stack
	m	(Laoe;)Laog;	c	removeStatusEffectInternal
		c	Removes a status effect from this entity without calling any listener.\n\n<p> This method does not perform any cleanup or synchronization operation.\nUnder most circumstances, calling {@link net.minecraft.entity.LivingEntity#removeStatusEffect(net.minecraft.entity.effect.StatusEffect)} is highly preferable.
		p	1	type	type
	m	(Ladf;)V	c	swimUpward
		p	1	fluid	fluid
	m	(Lanw;F)F	c	applyArmorToDamage
		p	1	source	source
		p	2	amount	amount
	m	(Laog;)Z	c	addStatusEffect
		p	1	effect	effect
	m	(Lfu;)V	c	applyMovementEffects
		p	1	pos	pos
	m	(Laps;)D	c	getAttributeBaseValue
		p	1	attribute	attribute
	m	(Lanf;)V	c	setCurrentHand
		p	1	hand	hand
	m	(F)V	c	setHealth
		p	1	health	health
	m	(Laor;)V	c	sendEquipmentBreakStatus
		p	1	slot	slot
	m	(Lanw;)V	c	playHurtSound
		p	1	source	source
	m	(Ljava/util/Collection;)Z	c	containsOnlyAmbientEffects
		p	0	effects	effects
	m	(IZ)V	c	setLivingFlag
		p	1	mask	mask
		p	2	value	value
	m	()Lapr;	cI	getBrain
	m	()Lapr$b;	cJ	createBrainProfile
	m	()Lapw$a;	cK	createLivingAttributes
	m	()Z	cL	canBreatheInWater
	m	()Z	cM	shouldDisplaySoulSpeedEffects
	m	()V	cN	displaySoulSpeedEffects
	m	()Z	cO	isOnSoulSpeedBlock
	m	()V	cP	removeSoulSpeedBoost
	m	()V	cQ	addSoulSpeedBoostIfNeeded
	m	()F	cR	getScaleFactor
	m	()V	cT	updatePostDeath
	m	()Z	cU	canDropLootAndXp
	m	()Z	cV	shouldDropLoot
	m	()Z	cW	shouldAlwaysDropXp
	m	()Ljava/util/Random;	cX	getRandom
	m	()Laoy;	cY	getAttacker
	m	()I	cZ	getLastAttackedTime
	m	()Z	c_	isClimbing
	m	(Lbec;)I	d	getCurrentExperience
		p	1	player	player
	m	(Lanf;)V	d	sendToolBreakStatus
		p	1	hand	hand
	m	(Lbki;)Lack;	d	getEatSound
		p	1	stack	stack
	m	(Laog;)Z	d	canHaveStatusEffect
		p	1	effect	effect
	m	(Laoy;)Z	d	canTarget
		p	1	target	target
	m	(Lanw;F)F	d	applyEnchantmentsToDamage
		p	1	source	source
		p	2	amount	amount
	m	(Lanw;)V	d	drop
		p	1	source	source
	m	(Laoe;)Z	d	removeStatusEffect
		c	Removes a status effect from this entity.\n\n<p> Calling this method will call cleanup methods on the status effect and trigger synchronization of effect particles with watching clients. If this entity is a player,\nthe change in the list of effects will also be synchronized with the corresponding client.\n\n@return {@code true} if a {@link net.minecraft.entity.effect.StatusEffectInstance} with the given type was in effect before the removal.
		p	1	type	type
	m	()Lapu;	dA	getAttributes
	m	()Lapc;	dB	getGroup
	m	()Lbki;	dC	getMainHandStack
	m	()Lbki;	dD	getOffHandStack
	m	()F	dE	getArmorVisibility
	m	()F	dF	getSoundVolume
	m	()F	dG	getSoundPitch
	m	()Z	dH	isImmobile
	m	()F	dI	getJumpVelocity
	m	()V	dJ	jump
	m	()V	dK	knockDownwards
	m	()F	dL	getBaseMovementSpeedMultiplier
	m	()F	dM	getMovementSpeed
	m	()Z	dN	hurtByWater
	m	()V	dO	tickNewAi
	m	()V	dP	tickCramming
	m	()Z	dQ	isUsingRiptide
	m	()Z	dR	canMoveVoluntarily
	m	()F	dS	getAbsorptionAmount
	m	()V	dT	markEffectsDirty
	m	()Laou;	dU	getMainArm
	m	()Z	dV	isUsingItem
	m	()Lanf;	dW	getActiveHand
	m	()Lbki;	dX	getActiveItem
	m	()I	dY	getItemUseTimeLeft
	m	()I	dZ	getItemUseTime
	m	()Laoy;	da	getAttacking
	m	()I	db	getLastAttackTime
	m	()I	dc	getDespawnCounter
	m	()V	dd	tickStatusEffects
	m	()V	de	clearPotionSwirls
	m	()Z	df	clearStatusEffects
	m	()Ljava/util/Collection;	dg	getStatusEffects
	m	()Ljava/util/Map;	dh	getActiveStatusEffects
	m	()Z	di	isUndead
	m	()F	dj	getHealth
	m	()Z	dk	isDead
	m	()Lanw;	dl	getRecentDamageSource
	m	()V	dm	dropInventory
	m	()V	dn	dropXp
	m	()Luh;	do	getLootTable
	m	()Lack;	dp	getDeathSound
	m	()Ljava/util/Optional;	dq	getClimbingPos
	m	()Lcfj;	dr	getBlockState
	m	()V	ds	playBlockFallSound
	m	()I	dt	getArmor
	m	()Lanv;	du	getDamageTracker
	m	()Laoy;	dv	getPrimeAdversary
	m	()F	dw	getMaxHealth
	m	()I	dx	getStuckArrowCount
	m	()I	dy	getStingerCount
	m	()V	dz	tickHandSwing
	m	(Lbec;)V	e	setAttacking
		p	1	attacking	attacking
	m	(Lanw;F)V	e	applyDamage
		p	1	source	source
		p	2	amount	amount
	m	(Laoy;)V	e	takeShieldHit
		p	1	attacker	attacker
	m	(Lbki;)Z	e	canPickUp
		p	1	stack	stack
	m	(Lfu;)V	e	setSleepingPosition
		p	1	pos	pos
	m	(FF)I	e	computeFallDamage
		p	1	fallDistance	fallDistance
		p	2	damageMultiplier	damageMultiplier
	m	(Lanw;)Lack;	e	getHurtSound
		p	1	source	source
	m	(Laog;)V	e	applyStatusEffect
		p	1	effect	effect
	m	()V	ea	stopUsingItem
	m	()V	eb	clearActiveItem
	m	()Z	ec	isBlocking
	m	()Z	ed	isHoldingOntoLadder
		c	@return {@code true} if this entity should not lose height while in a climbing state\n@see net.minecraft.entity.LivingEntity
	m	()Z	ee	isFallFlying
	m	()I	ef	getRoll
	m	()Z	eg	isAffectedBySplashPotions
	m	()Z	eh	isMobOrPlayer
	m	()Lcom/google/common/collect/ImmutableList;	ei	getPoses
	m	()Ljava/util/Optional;	ej	getSleepingPosition
	m	()V	ek	clearSleepingPosition
	m	()Z	el	isSleeping
	m	()V	em	wakeUp
	m	()Lfz;	en	getSleepingDirection
	m	(FF)F	f	turnHead
		p	1	bodyRotation	bodyRotation
		p	2	headRotation	headRotation
	m	(Ldem;)V	f	travel
		p	1	movementInput	movementInput
	m	(Laoy;)V	f	knockback
		p	1	target	target
	m	(Lbki;)Lbki;	f	getArrowType
		p	1	stack	stack
	m	(Lanw;)Z	f	tryUseTotem
		p	1	source	source
	m	(Lapj;)Ldeg;	f	getBoundingBox
		p	1	pose	pose
	m	(Laor;)B	f	getEquipmentBreakStatus
		p	0	slot	slot
	m	(Lanw;)Z	g	blockedByShield
		p	1	source	source
	m	(Laoy;)V	g	onKilledBy
		c	Performs secondary effects after this mob has been killed.\n\n<p> The default behavior spawns a wither rose if {@code adversary} is a {@code WitherEntity}.
		p	1	adversary	adversary
			c	the main adversary responsible for this entity's death
	m	(Lbki;)V	g	playEquipmentBreakEffects
		p	1	stack	stack
	m	()V	g	enterCombat
	m	(Ldem;)Ldem;	g	applyClimbingSpeed
		p	1	motion	motion
	m	()V	h	endCombat
	m	(Laoy;)V	h	attackLivingEntity
		p	1	target	target
	m	()V	k	tickMovement
	m	(I)I	l	getNextAirUnderwater
		p	1	air	air
	m	(F)V	m	damageShield
		p	1	amount	amount
	m	(I)I	m	getNextAirOnLand
		p	1	air	air
	m	(I)V	n	setDespawnCounter
		p	1	despawnCounter	despawnCounter
	m	(F)V	n	setMovementSpeed
		p	1	movementSpeed	movementSpeed
	m	(Z)V	o	setJumping
		p	1	jumping	jumping
	m	()I	o	getHandSwingDuration
	m	(I)Lack;	o	getFallSound
		p	1	distance	distance
	m	(F)F	o	getHandSwingProgress
		p	1	tickDelta	tickDelta
	m	(F)V	p	setAbsorptionAmount
		p	1	amount	amount
	m	(I)V	p	setStuckArrowCount
		p	1	stuckArrowCount	stuckArrowCount
	m	(I)V	q	setStingerCount
		p	1	stingerCount	stingerCount
	m	(F)F	q	getMovementSpeed
		p	1	slipperiness	slipperiness
	m	(I)V	r	setRiptideTicks
	m	()V	s	consumeItem
	m	()V	t	initAi
	m	()V	u	tickActiveItemStack
	m	()Z	v	shouldSpawnConsumptionEffects
	m	()V	x	updateLeaningPitch
	m	()Z	x_	isBaby
	m	()Z	z	isSleepingInBed
	m	(Laom;)V	z	onAttacking
		p	1	target	target
c	aoz	net/minecraft/entity/mob/MobEntity
	f	Ltq;	b	MOB_FLAGS
	f	Ljava/util/Map;	bA	pathfindingPenalties
	f	Luh;	bB	lootTable
	f	J	bC	lootTableSeed
	f	Laom;	bD	holdingEntity
	f	I	bE	holdingEntityId
	f	Lle;	bF	leashTag
	f	Lfu;	bG	positionTarget
	f	F	bH	positionTargetRange
	f	Latm;	bo	moveControl
	f	Latk;	bp	jumpControl
	f	Lawv;	bq	navigation
	f	Lauh;	br	goalSelector
	f	Lauh;	bs	targetSelector
	f	[F	bt	handDropChances
	f	[F	bu	armorDropChances
	f	Laxm;	bv	visibilityCache
	f	Lgi;	bw	handItems
	f	Lgi;	bx	armorItems
	f	Z	by	pickUpLoot
	f	Z	bz	persistent
	f	Latg;	c	bodyControl
	f	Laoy;	d	target
	f	I	e	ambientSoundChance
	f	I	f	experiencePoints
	f	Latl;	g	lookControl
	m	()Laoy;	A	getTarget
	m	()V	B	onEatingGrass
	m	()I	D	getMinAmbientSoundDelay
	m	()V	F	playAmbientSound
	m	()V	G	playSpawnEffects
	m	()V	H	updateGoalControls
	m	()Lack;	I	getAmbientSound
	m	()Luh;	J	getLootTableId
	m	()Z	K	cannotDespawn
	m	()Z	L	isDisallowedInPeaceful
	m	()V	M	sendAiDebugData
	m	()V	N	mobTick
	m	(Lbec;Laoz;)V	a	onPlayerSpawnedChild
		p	1	player	player
		p	2	child	child
	m	(Lfu;)Z	a	isInWalkTargetRange
		p	1	pos	pos
	m	(Lbki;Lbki;)Z	a	prefersNewEquipment
		p	1	newStack	newStack
		p	2	oldStack	oldStack
	m	(Lczb;)F	a	getPathfindingPenalty
		p	1	nodeType	nodeType
	m	(Lbqc;Lapb;)Z	a	canSpawn
		p	1	world	world
		p	2	spawnReason	spawnReason
	m	(Z)V	a	setBaby
		p	1	baby	baby
	m	(Lbqd;)Z	a	canSpawn
		p	1	world	world
	m	(FFF)F	a	changeAngle
		p	1	oldAngle	oldAngle
		p	2	newAngle	newAngle
		p	3	maxChangeInAngle	maxChangeInAngle
	m	(Lbec;Lbki;Lbki;)V	a	disablePlayerShield
		p	1	player	player
		p	2	mobStack	mobStack
		p	3	playerStack	playerStack
	m	(Lbec;)Z	a	canBeLeashedBy
		p	1	player	player
	m	(Laom;FF)V	a	lookAtEntity
		p	1	targetEntity	targetEntity
		p	2	maxYawChange	maxYawChange
		p	3	maxPitchChange	maxPitchChange
	m	(Lfu;I)V	a	setPositionTarget
		p	1	target	target
		p	2	range	range
	m	(ZZ)V	a	detachLeash
		p	1	sendPacket	sendPacket
		p	2	dropItem	dropItem
	m	(Lbkv;)Z	a	canUseRangedWeapon
		p	1	weapon	weapon
	m	(Laor;F)V	a	setEquipmentDropChance
		p	1	slot	slot
		p	2	chance	chance
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	a	canMobSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	(Lane;)V	a	initEquipment
		p	1	difficulty	difficulty
	m	(Lbqc;Lane;Lapb;Lapo;Lle;)Lapo;	a	initialize
		p	1	world	world
		p	2	difficulty	difficulty
		p	3	spawnReason	spawnReason
		p	4	entityData	entityData
		p	5	entityTag	entityTag
	m	(Lczb;F)V	a	setPathfindingPenalty
		p	1	nodeType	nodeType
		p	2	penalty	penalty
	m	(Laor;I)Lbke;	a	getEquipmentForSlot
		p	0	equipmentSlot	equipmentSlot
		p	1	equipmentLevel	equipmentLevel
	m	(Lbec;Lanf;)Lang;	b	interactMob
		p	1	player	player
		p	2	hand	hand
	m	(Laor;Lbki;)V	b	equipLootStack
		p	1	slot	slot
		p	2	stack	stack
	m	(Lbqb;)Lawv;	b	createNavigation
		p	1	world	world
	m	(Lbbg;)V	b	loot
		p	1	item	item
	m	(Lbki;Lbki;)Z	b	prefersNewDamageableItem
		p	1	newStack	newStack
		p	2	oldStack	oldStack
	m	(Laom;Z)V	b	attachLeash
		p	1	entity	entity
		p	2	sendPacket	sendPacket
	m	(Lane;)V	b	updateEnchantments
		p	1	difficulty	difficulty
	m	(I)Z	c	spawnsTooManyForEachTry
		p	1	count	count
	m	(Laor;Lbki;)Z	c	canEquipmentSlotContain
		p	0	slot	slot
		p	1	item	item
	m	(I)V	d	setHoldingEntityId
		p	1	id	id
	m	(Laor;)V	d	updateDropChances
		p	1	slot	slot
	m	(Laor;)F	e	getDropChance
		p	1	slot	slot
	m	()Z	eA	hasPositionTarget
	m	()V	eB	updateLeash
	m	()Z	eC	isLeashed
	m	()Laom;	eD	getHoldingEntity
	m	()Z	eE	isAiDisabled
	m	()Z	eF	isLeftHanded
	m	()Z	eG	isAttacking
	m	()Z	eH	isInDaylight
	m	()V	eJ	resetSoundDelay
	m	()V	eK	deserializeLeashTag
	m	()I	eo	getLookPitchSpeed
	m	()I	ep	getBodyYawSpeed
	m	()I	eq	getLookYawSpeed
	m	()I	er	getLimitPerChunk
	m	()Z	es	canBeControlledByRider
	m	()V	et	setPersistent
	m	()Z	eu	canPickUpLoot
	m	()Z	ev	isPersistent
	m	()Z	ew	isInWalkTargetRange
	m	()Lfu;	ex	getPositionTarget
	m	()F	ey	getPositionTargetRange
	m	(Lbki;)Z	g	tryEquip
		p	1	equipment	equipment
	m	(Lbki;)Z	h	canPickupItem
		p	1	stack	stack
	m	(D)Z	h	canImmediatelyDespawn
		p	1	distanceSquared	distanceSquared
	m	(Laoy;)V	i	setTarget
		p	1	target	target
	m	(Lbki;)Z	i	canGather
		p	1	stack	stack
	m	(Lbki;)Laor;	j	getPreferredEquipmentSlot
		p	0	stack	stack
	m	()V	o	initGoals
	m	(Z)V	p	setCanPickUpLoot
		p	1	pickUpLoot	pickUpLoot
	m	()Lapw$a;	p	createMobAttributes
	m	(Z)V	q	setAiDisabled
		p	1	aiDisabled	aiDisabled
	m	()Z	q	movesIndependently
		c	When true, causes this entity to take over pathfinding for its controlling passenger.
	m	(F)V	q	setForwardSpeed
		p	1	forwardSpeed	forwardSpeed
	m	(F)V	r	setUpwardSpeed
		p	1	upwardSpeed	upwardSpeed
	m	(Z)V	r	setLeftHanded
		p	1	leftHanded	leftHanded
	m	()Latg;	r	createBodyControl
	m	(Z)V	s	setAttacking
		p	1	attacking	attacking
	m	(F)V	s	setSidewaysSpeed
		p	1	sidewaysMovement	sidewaysMovement
	m	()Latl;	t	getLookControl
	m	()Latm;	u	getMoveControl
	m	()Latk;	v	getJumpControl
	m	()Lawv;	x	getNavigation
	m	()Laxm;	z	getVisibilityCache
c	ap	net/minecraft/advancement/criterion/ChanneledLightningCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lap$a;	a	conditionsFromJson
	m	(Lze;Ljava/util/Collection;)V	a	trigger
		p	1	player	player
		p	2	victims	victims
c	ap$a	net/minecraft/advancement/criterion/ChanneledLightningCriterion$Conditions
	f	[Lbe$b;	a	victims
	m	(Lbe$b;[Lbe$b;)V	<init>	<init>
		p	1	player	player
		p	2	victims	victims
	m	([Lbe;)Lap$a;	a	create
		p	0	victims	victims
	m	(Ljava/util/Collection;)Z	a	matches
		p	1	victims	victims
c	apa	net/minecraft/entity/SpawnGroup
	f	Ljava/util/Map;	h	BY_NAME
	f	I	i	capacity
	f	Z	j	peaceful
	f	Z	k	animal
	f	Ljava/lang/String;	l	name
	f	I	m	despawnStartRange
	f	I	n	immediateDespawnRange
	m	(Ljava/lang/String;ILjava/lang/String;IZZI)V	<init>	<init>
		p	3	name	name
		p	4	spawnCap	spawnCap
		p	5	peaceful	peaceful
	m	()Ljava/lang/String;	b	getName
	m	()I	c	getCapacity
	m	()Z	d	isPeaceful
	m	()Z	e	isAnimal
	m	()I	f	getImmediateDespawnRange
	m	()I	g	getDespawnStartRange
c	apb	net/minecraft/entity/SpawnReason
c	apc	net/minecraft/entity/EntityGroup
	f	Lapc;	a	DEFAULT
	f	Lapc;	b	UNDEAD
	f	Lapc;	c	ARTHROPOD
	f	Lapc;	d	ILLAGER
	f	Lapc;	e	AQUATIC
c	apd	net/minecraft/entity/MovementType
c	ape	net/minecraft/entity/mob/Angerable
	m	()Laoy;	A	getTarget
	m	()I	F_	getAngerTime
	m	()Ljava/util/UUID;	G_	getAngryAt
	m	()V	H_	chooseRandomAngerTime
	m	()Z	I_	hasAngerTime
	m	()V	J_	universallyAnger
	m	()V	K_	stopAnger
	m	(Lzd;Lle;)V	a	angerFromTag
		p	1	world	world
		p	2	tag	tag
	m	(Lbqb;)Z	a	isUniversallyAngry
		p	1	world	world
	m	(Lzd;Z)V	a	tickAngerLogic
		p	1	world	world
	m	(Laoy;)V	a	setAttacker
		p	1	attacker	attacker
	m	(Ljava/util/UUID;)V	a	setAngryAt
		p	1	uuid	uuid
	m	(I)V	a_	setAngerTime
		p	1	ticks	ticks
	m	(Lbec;)V	b	forgive
		p	1	player	player
	m	(Laoy;)Z	b	shouldAngerAt
		p	1	entity	entity
	m	(Lle;)V	c	angerToTag
		p	1	tag	tag
	m	(Lbec;)V	e	setAttacking
		p	1	attacking	attacking
	m	(Laoy;)V	i	setTarget
		p	1	target	target
c	apg	net/minecraft/entity/mob/PathAwareEntity
	m	(Lfu;Lbqd;)F	a	getPathfindingFavor
		p	1	pos	pos
		p	2	world	world
	m	()Z	eJ	isNavigating
	m	()D	eK	getRunFromLeashSpeed
	m	(Lfu;)F	f	getPathfindingFavor
		p	1	pos	pos
	m	(F)V	t	updateForLeashLength
		p	1	leashLength	leashLength
c	api	net/minecraft/entity/JumpingMount
	m	()Z	Q_	canJump
	m	(I)V	b	startJumping
		p	1	height	height
	m	(I)V	b_	setJumpStrength
		p	1	strength	strength
	m	()V	c	stopJumping
c	apj	net/minecraft/entity/EntityPose
c	apk	net/minecraft/client/render/entity/feature/SkinOverlayOwner
	m	()Z	T_	shouldRenderOverlay
c	apl	net/minecraft/entity/InteractionObserver
	m	(Laxw;Laom;)V	a	onInteractionWith
		p	1	interaction	interaction
		p	2	entity	entity
c	apm	net/minecraft/entity/Saddleable
	c	Represents an entity that can be saddled, either by a player or a\ndispenser.
	m	()Z	M_	canBeSaddled
	m	()Z	N_	isSaddled
	m	(Lacm;)V	a	saddle
		p	1	sound	sound
c	apn	net/minecraft/entity/Shearable
	c	Represents an entity that can be sheared, either by a player or a\ndispenser.
	m	()Z	L_	isShearable
	m	(Lacm;)V	a	sheared
		p	1	shearedSoundCategory	shearedSoundCategory
c	apo	net/minecraft/entity/EntityData
c	app	net/minecraft/entity/SpawnRestriction
	f	Ljava/util/Map;	a	RESTRICTIONS
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	a	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	(Laoq;Lapp$c;Lcio$a;Lapp$b;)V	a	register
		p	0	type	type
		p	1	location	location
		p	2	heightmapType	heightmapType
		p	3	predicate	predicate
	m	(Laoq;)Lapp$c;	a	getLocation
		p	0	type	type
	m	(Laoq;)Lcio$a;	b	getHeightmapType
		p	0	type	type
c	app$a	net/minecraft/entity/SpawnRestriction$Entry
	f	Lcio$a;	a	heightmapType
	f	Lapp$c;	b	location
	f	Lapp$b;	c	predicate
	m	(Lcio$a;Lapp$c;Lapp$b;)V	<init>	<init>
		p	1	heightmapType	heightmapType
		p	2	location	location
		p	3	predicate	predicate
c	app$b	net/minecraft/entity/SpawnRestriction$SpawnPredicate
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	test	test
		p	1	type	type
		p	2	world	world
		p	3	spawnReason	spawnReason
		p	4	pos	pos
		p	5	random	random
c	app$c	net/minecraft/entity/SpawnRestriction$Location
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	name	name
		p	2	id	id
c	apq	net/minecraft/entity/passive/TameableEntity
	f	Ltq;	bv	TAMEABLE_FLAGS
	f	Ltq;	bw	OWNER_UUID
	f	Z	bx	sitting
	m	()Ljava/util/UUID;	B_	getOwnerUuid
	m	(Laoy;Laoy;)Z	a	canAttackWithOwner
		p	1	target	target
		p	2	owner	owner
	m	(Ljava/util/UUID;)V	b	setOwnerUuid
		p	1	uuid	uuid
	m	()Z	eL	isTamed
	m	()V	eM	onTamedChanged
	m	()Z	eN	isInSittingPose
	m	()Laoy;	eO	getOwner
	m	()Z	eP	isSitting
	m	(Lbec;)V	f	setOwner
		p	1	player	player
	m	(Laoy;)Z	j	isOwner
		p	1	entity	entity
	m	(Z)V	t	showEmoteParticle
		p	1	positive	positive
	m	(Z)V	u	setTamed
		p	1	tamed	tamed
	m	(Z)V	v	setInSittingPose
		p	1	inSittingPose	inSittingPose
	m	(Z)V	w	setSitting
		p	1	sitting	sitting
c	apr	net/minecraft/entity/ai/brain/Brain
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/function/Supplier;	b	codecSupplier
	f	Ljava/util/Map;	c	memories
	f	Ljava/util/Map;	d	sensors
	f	Ljava/util/Map;	e	tasks
	f	Lbfn;	f	schedule
	f	Ljava/util/Map;	g	requiredActivityMemories
	f	Ljava/util/Map;	h	forgettingActivityMemories
		c	The map from activities to the memories to forget after the activity is\ncompleted.
	f	Ljava/util/Set;	i	coreActivities
	f	Ljava/util/Set;	j	possibleActivities
	f	Lbfl;	k	defaultActivity
	f	J	l	activityStartTime
	m	(Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	memories	memories
		p	2	sensors	sensors
		p	3	memoryEntries	memoryEntries
		p	4	codecSupplier	codecSupplier
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lapr$b;	a	createProfile
		p	0	memoryModules	memoryModules
		p	1	sensors	sensors
	m	(Lbfl;ILcom/google/common/collect/ImmutableList;Lawp;)V	a	setTaskList
		p	1	activity	activity
		p	2	begin	begin
		p	3	tasks	tasks
		p	4	memoryType	memoryType
	m	(Ljava/util/List;)V	a	resetPossibleActivities
	m	(Lbfl;)V	a	doExclusively
		p	1	activity	activity
	m	(Lbfl;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V	a	setTaskList
		p	1	activity	activity
		p	2	indexedTasks	indexedTasks
		p	3	requiredMemories	requiredMemories
		p	4	forgettingMemories	forgettingMemories
	m	(Lawp;Lawq;)Z	a	isMemoryInState
		p	1	type	type
		p	2	state	state
	m	(Lbfl;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	setTaskList
		p	1	activity	activity
		p	2	indexedTasks	indexedTasks
		p	3	requiredMemories	requiredMemories
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
		p	1	value	value
	m	(Lawp;Ljava/util/Optional;)V	a	remember
		p	1	type	type
		p	2	value	value
	m	(Lbfl;Lcom/google/common/collect/ImmutableList;)V	a	setTaskList
		p	1	activity	activity
		p	2	indexedTasks	indexedTasks
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	encode
		p	1	ops	ops
	m	(JJ)V	a	refreshActivities
		p	1	timeOfDay	timeOfDay
		p	3	time	time
	m	(Lawp;)Z	a	hasMemoryModule
		p	1	type	type
	m	(Lawp;Ljava/lang/Object;J)V	a	remember
		p	1	type	type
		p	2	value	value
		p	3	startTime	startTime
	m	(Lzd;Laoy;)V	a	tick
		p	1	world	world
		p	2	entity	entity
	m	(Lbfn;)V	a	setSchedule
		p	1	schedule	schedule
	m	(Ljava/util/Set;)V	a	setCoreActivities
		p	1	coreActivities	coreActivities
	m	(Lbfl;ILcom/google/common/collect/ImmutableList;)V	a	setTaskList
		p	1	activity	activity
		p	2	begin	begin
		p	3	list	list
	m	(ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;	a	indexTaskList
		p	1	begin	begin
			c	The beginning of the index of tasks, exclusive
		p	2	tasks	tasks
	m	(Lawp;Ljava/lang/Object;)V	a	remember
		p	1	type	type
		p	2	value	value
	m	(Lawp;Ljava/util/Optional;)V	b	setMemory
		p	1	type	type
		p	2	memory	memory
	m	()Lbfn;	b	getSchedule
	m	(Lawp;)V	b	forget
		p	1	type	type
	m	(Lzd;Laoy;)V	b	stopAllTasks
		p	1	world	world
		p	2	entity	entity
	m	(Lbfl;)V	b	setDefaultActivity
		p	1	activity	activity
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec;	b	createBrainCodec
		p	0	memoryModules	memoryModules
		p	1	sensors	sensors
	m	(Lzd;Laoy;)V	c	tickSensors
		p	1	world	world
		p	2	entity	entity
	m	(Lawp;)Ljava/util/Optional;	c	getOptionalMemory
		p	1	type	type
	m	(Lbfl;)Z	c	hasActivity
		p	1	activity	activity
	m	()Ljava/util/List;	d	getRunningTasks
	m	(Lbfl;)V	d	resetPossibleActivities
		p	1	except	except
	m	(Lzd;Laoy;)V	d	startTasks
		p	1	world	world
		p	2	entity	entity
	m	(Lzd;Laoy;)V	e	updateTasks
		p	1	world	world
		p	2	entity	entity
	m	()V	e	resetPossibleActivities
	m	(Lbfl;)V	e	forgetIrrelevantMemories
		p	1	except	except
	m	(Lbfl;)Z	f	canDoActivity
		p	1	activity	activity
	m	()Ljava/util/Optional;	f	getFirstPossibleNonCoreActivity
	m	()Lapr;	h	copy
	m	()Ljava/util/stream/Stream;	j	streamMemories
	m	()V	k	tickMemories
c	apr$1	net/minecraft/entity/ai/brain/Brain$1
	m	(Lapr;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
c	apr$a	net/minecraft/entity/ai/brain/Brain$MemoryEntry
	f	Lawp;	a	type
	f	Ljava/util/Optional;	b	data
	m	(Lawp;Ljava/util/Optional;)V	<init>	<init>
		p	1	type	type
		p	2	data	data
	m	(Lapr;)V	a	apply
		p	1	brain	brain
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V	a	serialize
		p	1	ops	ops
		p	2	builder	builder
	m	(Lawp;Ljava/util/Optional;)Lapr$a;	b	of
		p	0	type	type
		p	1	data	data
c	apr$b	net/minecraft/entity/ai/brain/Brain$Profile
	c	A simple profile of a brain. Indicates what types of memory modules and\nsensors a brain can have.
	f	Ljava/util/Collection;	a	memoryModules
	f	Ljava/util/Collection;	b	sensors
	f	Lcom/mojang/serialization/Codec;	c	codec
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	<init>	<init>
		p	1	memoryModules	memoryModules
		p	2	sensors	sensors
	m	(Lcom/mojang/serialization/Dynamic;)Lapr;	a	deserialize
		p	1	data	data
c	aps	net/minecraft/entity/attribute/EntityAttribute
	f	D	a	fallback
	f	Z	b	tracked
	f	Ljava/lang/String;	c	translationKey
	m	(Ljava/lang/String;D)V	<init>	<init>
		p	1	translationKey	translationKey
		p	2	fallback	fallback
	m	()D	a	getDefaultValue
	m	(D)D	a	clamp
		p	1	value	value
	m	(Z)Laps;	a	setTracked
		p	1	tracked	tracked
	m	()Z	b	isTracked
	m	()Ljava/lang/String;	c	getTranslationKey
c	apt	net/minecraft/entity/attribute/EntityAttributeInstance
	f	Laps;	a	type
	f	Ljava/util/Map;	b	operationToModifiers
	f	Ljava/util/Map;	c	byId
	f	Ljava/util/Set;	d	persistentModifiers
	f	D	e	baseValue
	f	Z	f	dirty
	f	D	g	value
	f	Ljava/util/function/Consumer;	h	updateCallback
	m	(Laps;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	type	type
		p	2	updateCallback	updateCallback
	m	(Lapv$a;)Ljava/util/Set;	a	getModifiers
		p	1	operation	operation
	m	()Laps;	a	getAttribute
	m	(Lle;)V	a	fromTag
		p	1	tag	tag
	m	(Ljava/util/UUID;)Lapv;	a	getModifier
		p	1	uuid	uuid
	m	(D)V	a	setBaseValue
		p	1	baseValue	baseValue
	m	(Lapt;)V	a	setFrom
		p	1	other	other
	m	(Lapv;)Z	a	hasModifier
		p	1	modifier	modifier
	m	(Lapv$a;)Ljava/util/Collection;	b	getModifiersByOperation
	m	(Lapv;)V	b	addTemporaryModifier
		p	1	modifier	modifier
	m	(Ljava/util/UUID;)V	b	removeModifier
		p	1	uuid	uuid
	m	()D	b	getBaseValue
	m	()Ljava/util/Set;	c	getModifiers
	m	(Ljava/util/UUID;)Z	c	tryRemoveModifier
		p	1	uuid	uuid
	m	(Lapv;)V	c	addPersistentModifier
		p	1	modifier	modifier
	m	()V	d	onUpdate
	m	(Lapv;)V	d	removeModifier
		p	1	modifier	modifier
	m	()V	e	clearModifiers
	m	(Lapv;)V	e	addModifier
		p	1	modifier	modifier
	m	()D	f	getValue
	m	()Lle;	g	toTag
	m	()D	h	computeValue
c	apu	net/minecraft/entity/attribute/AttributeContainer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	custom
	f	Ljava/util/Set;	c	tracked
	f	Lapw;	d	fallback
	m	(Lapw;)V	<init>	<init>
		p	1	defaultAttributes	defaultAttributes
	m	(Laps;)Lapt;	a	getCustomInstance
		p	1	attribute	attribute
	m	()Ljava/util/Set;	a	getTracked
	m	(Lapt;)V	a	updateTrackedStatus
		p	1	instance	instance
	m	(Laps;Ljava/util/UUID;)Z	a	hasModifierForAttribute
		p	1	attribute	attribute
		p	2	uuid	uuid
	m	(Lapu;)V	a	setFrom
		p	1	other	other
	m	(Lcom/google/common/collect/Multimap;)V	a	removeModifiers
		p	1	attributeModifiers	attributeModifiers
	m	(Llk;)V	a	fromTag
		p	1	tag	tag
	m	()Ljava/util/Collection;	b	getAttributesToSend
	m	(Laps;Ljava/util/UUID;)D	b	getModifierValue
		p	1	attribute	attribute
		p	2	uuid	uuid
	m	(Lcom/google/common/collect/Multimap;)V	b	addTemporaryModifiers
		p	1	attributeModifiers	attributeModifiers
	m	(Laps;)Z	b	hasAttribute
		p	1	attribute	attribute
	m	()Llk;	c	toTag
	m	(Laps;)D	c	getValue
		p	1	attribute	attribute
	m	(Laps;)D	d	getBaseValue
		p	1	attribute	attribute
c	apv	net/minecraft/entity/attribute/EntityAttributeModifier
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	D	b	value
	f	Lapv$a;	c	operation
	f	Ljava/util/function/Supplier;	d	nameGetter
	f	Ljava/util/UUID;	e	uuid
	m	(Ljava/util/UUID;Ljava/lang/String;DLapv$a;)V	<init>	<init>
		p	1	uuid	uuid
		p	2	name	name
		p	3	value	value
		p	5	operation	operation
	m	(Ljava/lang/String;DLapv$a;)V	<init>	<init>
		p	1	name	name
		p	2	value	value
		p	4	operation	operation
	m	(Ljava/util/UUID;Ljava/util/function/Supplier;DLapv$a;)V	<init>	<init>
		p	1	uuid	uuid
		p	2	nameGetter	nameGetter
		p	3	value	value
		p	5	operation	operation
	m	()Ljava/util/UUID;	a	getId
	m	(Lle;)Lapv;	a	fromTag
		p	0	tag	tag
	m	()Ljava/lang/String;	b	getName
	m	()Lapv$a;	c	getOperation
	m	()D	d	getValue
	m	()Lle;	e	toTag
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	apv$a	net/minecraft/entity/attribute/EntityAttributeModifier$Operation
	f	[Lapv$a;	d	VALUES
	f	I	e	id
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	id	id
	m	()I	a	getId
	m	(I)Lapv$a;	a	fromId
		p	0	id	id
c	apw	net/minecraft/entity/attribute/DefaultAttributeContainer
	f	Ljava/util/Map;	a	instances
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	instances	instances
	m	()Lapw$a;	a	builder
	m	(Ljava/util/function/Consumer;Laps;)Lapt;	a	createOverride
		p	1	updateCallback	updateCallback
		p	2	attribute	attribute
	m	(Laps;Ljava/util/UUID;)D	a	getModifierValue
		p	1	attribute	attribute
		p	2	uuid	uuid
	m	(Laps;)D	a	getValue
		p	1	attribute	attribute
	m	(Laps;)D	b	getBaseValue
		p	1	attribute	attribute
	m	(Laps;)Lapt;	d	require
		p	1	attribute	attribute
c	apw$a	net/minecraft/entity/attribute/DefaultAttributeContainer$Builder
	f	Ljava/util/Map;	a	instances
	f	Z	b	unmodifiable
	m	(Laps;D)Lapw$a;	a	add
		p	1	attribute	attribute
		p	2	baseValue	baseValue
	m	()Lapw;	a	build
	m	(Laps;)Lapw$a;	a	add
		p	1	attribute	attribute
	m	(Laps;)Lapt;	b	checkedAdd
		p	1	attribute	attribute
c	apx	net/minecraft/entity/attribute/EntityAttributes
	m	(Ljava/lang/String;Laps;)Laps;	a	register
		p	0	id	id
		p	1	attribute	attribute
c	apy	net/minecraft/entity/attribute/DefaultAttributeRegistry
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	DEFAULT_ATTRIBUTE_REGISTRY
	m	()V	a	checkMissing
	m	(Laoq;)Lapw;	a	get
		p	0	type	type
	m	(Laoq;)Z	b	hasDefinitionFor
		p	0	type	type
c	apz	net/minecraft/entity/attribute/ClampedEntityAttribute
	f	D	a	minValue
	f	D	b	maxValue
	m	(Ljava/lang/String;DDD)V	<init>	<init>
		p	1	translationKey	translationKey
		p	2	fallback	fallback
		p	4	min	min
		p	6	max	max
c	aq	net/minecraft/advancement/criterion/ConstructBeaconCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Laq$a;	a	conditionsFromJson
	m	(Lze;Lcdg;)V	a	trigger
		p	1	player	player
		p	2	beacon	beacon
c	aq$a	net/minecraft/advancement/criterion/ConstructBeaconCriterion$Conditions
	f	Lbx$d;	a	level
	m	(Lbe$b;Lbx$d;)V	<init>	<init>
		p	1	player	player
		p	2	level	level
	m	(Lbx$d;)Laq$a;	a	level
		p	0	level	level
	m	(Lcdg;)Z	a	matches
		p	1	beacon	beacon
c	aqb	net/minecraft/entity/ai/brain/task/FindPointOfInterestTask
	f	Layc;	b	poiType
	f	Lawp;	c	targetMemoryModuleType
	f	Z	d	onlyRunIfChild
	f	J	e	positionExpireTimeLimit
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	f	foundPositionsToExpiry
	m	(Layc;Lawp;Lawp;Z)V	<init>	<init>
		p	1	poiType	poiType
	m	(Lzd;Lapg;J)V	a	run
	m	(Lzd;Lapg;)Z	a	shouldRun
c	aqb$a	net/minecraft/entity/ai/brain/task/FindPointOfInterestTask$RetryMarker
	f	Ljava/util/Random;	a	random
	f	J	b	previousAttemptAt
	f	J	c	nextScheduledAttemptAt
	f	I	d	currentDelay
	m	(Ljava/util/Random;J)V	<init>	<init>
		p	2	time	time
	m	(J)V	a	method_29926
		p	1	time	time
	m	(J)Z	b	method_29927
		p	1	time	time
	m	(J)Z	c	method_29928
		p	1	time	time
c	aqc	net/minecraft/entity/ai/brain/task/BreedTask
	f	Laoq;	b	targetType
	f	J	d	breedTime
	m	(Laoq;F)V	<init>	<init>
		p	1	targetType	targetType
	m	(Lzd;Layk;J)V	a	run
	m	(Layk;)Layk;	a	getBreedTarget
		p	1	animal	animal
	m	(Lzd;Layk;)Z	a	shouldRun
	m	(Layk;)Z	b	hasBreedTarget
		p	1	animal	animal
	m	(Lzd;Layk;J)Z	b	shouldKeepRunning
	m	(Layk;)Ljava/util/Optional;	c	findBreedTarget
		p	1	animal	animal
	m	(Lzd;Layk;J)V	c	keepRunning
	m	(Lzd;Layk;J)V	d	finishRunning
c	aqd	net/minecraft/entity/ai/brain/task/GoToWorkTask
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lzd;Lbdp;)Z	a	shouldRun
c	aqe	net/minecraft/entity/ai/brain/task/WalkTowardClosestAdultTask
	f	Ladx;	b	executionRange
	f	F	c	speed
	m	(Ladx;F)V	<init>	<init>
		p	1	executionRange	executionRange
		p	2	speed	speed
	m	(Lzd;Laok;J)V	a	run
	m	(Lzd;Laok;)Z	a	shouldRun
	m	(Laok;)Laok;	a	getNearestVisibleAdult
		p	1	entity	entity
c	aqf	net/minecraft/entity/ai/brain/task/AttackTask
	f	I	b	distance
	f	F	c	forwardMovement
	m	(IF)V	<init>	<init>
		p	1	distance	distance
		p	2	forwardMovement	forwardMovement
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Laoz;)Z	a	isAttackTargetVisible
		p	1	entity	entity
	m	(Lzd;Laoz;J)V	a	run
	m	(Laoz;)Z	b	isNearAttackTarget
		p	1	entity	entity
	m	(Laoz;)Laoy;	c	getAttackTarget
		p	1	entity	entity
c	aqg	net/minecraft/entity/ai/brain/task/PacifyTask
	f	I	b	duration
	m	(Lawp;I)V	<init>	<init>
		p	1	requiredMemoryModuleType	requiredMemoryModuleType
		p	2	duration	duration
c	aqh	net/minecraft/entity/ai/brain/task/Task
	f	Ljava/util/Map;	a	requiredMemoryStates
	f	Laqh$a;	b	status
	f	J	c	endTime
	f	I	d	minRunTime
	f	I	e	maxRunTime
	m	(Ljava/util/Map;II)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	minRunTime	minRunTime
		p	3	maxRunTime	maxRunTime
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
	m	(Ljava/util/Map;I)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	runTime	runTime
	m	(J)Z	a	isTimeLimitExceeded
		p	1	time	time
	m	(Lzd;Laoy;)Z	a	shouldRun
		p	1	world	world
		p	2	entity	entity
	m	(Laoy;)Z	a	hasRequiredMemoryState
	m	(Lzd;Laoy;J)V	a	run
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	()Laqh$a;	a	getStatus
	m	(Lzd;Laoy;J)Z	b	shouldKeepRunning
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lzd;Laoy;J)V	c	finishRunning
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lzd;Laoy;J)V	d	keepRunning
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lzd;Laoy;J)Z	e	tryStarting
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lzd;Laoy;J)V	f	tick
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lzd;Laoy;J)V	g	stop
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
c	aqh$a	net/minecraft/entity/ai/brain/task/Task$Status
c	aqi	net/minecraft/entity/ai/brain/task/LookTargetUtil
	m	(Laoy;Ljava/util/Optional;Laoy;)Laoy;	a	getCloserEntity
		p	0	source	source
		p	1	first	first
		p	2	second	second
	m	(Laoy;Laom;FI)V	a	walkTowards
		p	0	entity	entity
		p	1	target	target
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	(Laoy;Lawp;)Ljava/util/Optional;	a	getEntity
		p	0	entity	entity
		p	1	uuidMemoryModule	uuidMemoryModule
	m	(Laoy;Lbki;Ldem;)V	a	give
		p	0	entity	entity
		p	1	stack	stack
		p	2	targetLocation	targetLocation
	m	(Laoy;Laoy;)V	a	lookAt
		p	0	entity	entity
		p	1	target	target
	m	(Lbdp;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	a	streamSeenVillagers
		p	0	villager	villager
		p	1	filter	filter
	m	(Laoy;Laoy;F)V	a	lookAtAndWalkTowardsEachOther
		p	0	first	first
		p	1	second	second
		p	2	speed	speed
	m	(Lapr;Lawp;Ljava/util/function/Predicate;)Z	a	canSee
		p	0	brain	brain
		p	1	memoryType	memoryType
		p	2	filter	filter
	m	(Lapr;Laoy;)Z	a	canSee
		p	0	brain	brain
		p	1	target	target
	m	(Laoy;Lfu;FI)V	a	walkTowards
		p	0	entity	entity
		p	1	target	target
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	(Laoy;Laoy;Laoy;)Laoy;	a	getCloserEntity
		p	0	source	source
		p	1	first	first
		p	2	second	second
	m	(Lapr;Lawp;Laoq;)Z	a	canSee
		p	0	brain	brain
		p	1	memoryModuleType	memoryModuleType
		p	2	entityType	entityType
	m	(Laoy;Laoy;D)Z	a	isNewTargetTooFar
		c	Checks if an entity can be a new attack target for the source entity.
		p	0	source	source
			c	the source entity
		p	1	target	target
			c	the attack target candidate
		p	2	extraDistance	extraDistance
			c	the max distance this new target can be farther compared to the existing target
	m	(Lzd;Lgo;I)Lgo;	a	getPosClosestToOccupiedPointOfInterest
		p	0	world	world
		p	1	center	center
		p	2	radius	radius
	m	(Laoy;Laoy;F)V	b	walkTowardsEachOther
		p	0	first	first
		p	1	second	second
		p	2	speed	speed
	m	(Laoy;Laoy;)Z	c	isVisibleInMemory
		p	0	source	source
		p	1	target	target
	m	(Laoy;Laoy;)V	d	lookAtEachOther
		p	0	first	first
		p	1	second	second
c	aqj	net/minecraft/entity/ai/brain/BlockPosLookTarget
	f	Lfu;	a	blockPos
	f	Ldem;	b	pos
	m	(Lfu;)V	<init>	<init>
		p	1	blockPos	blockPos
c	aqk	net/minecraft/entity/ai/brain/task/CelebrateRaidWinTask
	f	Lbfh;	b	raid
	m	(II)V	<init>	<init>
		p	1	minRunTime	minRunTime
		p	2	maxRunTime	maxRunTime
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lbje;I)Lbki;	a	createFirework
		p	1	color	color
		p	2	flight	flight
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lzd;Lbdp;J)V	b	finishRunning
	m	(Lzd;Lbdp;J)V	c	keepRunning
c	aql	net/minecraft/entity/ai/brain/task/MemoryTransferTask
	f	Ljava/util/function/Predicate;	b	runPredicate
	f	Lawp;	c	sourceType
	f	Lawp;	d	targetType
	f	Ladx;	e	duration
	m	(Ljava/util/function/Predicate;Lawp;Lawp;Ladx;)V	<init>	<init>
		p	1	runPredicate	runPredicate
		p	4	duration	duration
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Lzd;Laoz;J)V	a	run
c	aqm	net/minecraft/entity/ai/brain/task/CrossbowAttackTask
	f	I	b	chargingCooldown
	f	Laqm$a;	c	state
	m	(Laoz;Laoy;)V	a	tickState
		p	1	entity	entity
		p	2	target	target
	m	(Laoy;)Laoy;	a	getAttackTarget
		p	0	entity	entity
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Lzd;Laoz;J)Z	a	shouldKeepRunning
	m	(Lzd;Laoz;J)V	b	keepRunning
	m	(Laoz;Laoy;)V	b	setLookTarget
		p	1	entity	entity
		p	2	target	target
	m	(Lzd;Laoz;J)V	c	finishRunning
c	aqm$a	net/minecraft/entity/ai/brain/task/CrossbowAttackTask$CrossbowState
c	aqn	net/minecraft/entity/ai/brain/task/RidingTask
	f	I	b	range
	f	Ljava/util/function/BiPredicate;	c	alternativeRideCondition
	m	(ILjava/util/function/BiPredicate;)V	<init>	<init>
		p	1	range	range
		p	2	alternativeRideCondition	alternativeRideCondition
	m	(Laoy;Laom;)Z	a	canRideTarget
		p	1	entity	entity
		p	2	target	target
c	aqo	net/minecraft/entity/ai/brain/task/WaitTask
	m	(II)V	<init>	<init>
		p	1	minRunTime	minRunTime
		p	2	maxRunTime	maxRunTime
c	aqp	net/minecraft/entity/ai/brain/EntityLookTarget
	f	Laom;	a	entity
	m	(Laom;Z)V	<init>	<init>
		p	1	entity	entity
c	aqq	net/minecraft/entity/ai/brain/task/ForgetTask
	f	Ljava/util/function/Predicate;	b	condition
	f	Lawp;	c	memory
	m	(Ljava/util/function/Predicate;Lawp;)V	<init>	<init>
		p	1	condition	condition
		p	2	memory	memory
c	aqr	net/minecraft/entity/ai/brain/task/CompositeTask
	f	Ljava/util/Set;	b	memoriesToForgetWhenStopped
	f	Laqr$a;	c	order
	f	Laqr$b;	d	runMode
	f	Latb;	e	tasks
	m	(Ljava/util/Map;Ljava/util/Set;Laqr$a;Laqr$b;Ljava/util/List;)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	memoriesToForgetWhenStopped	memoriesToForgetWhenStopped
		p	3	order	order
		p	4	runMode	runMode
		p	5	tasks	tasks
c	aqr$a	net/minecraft/entity/ai/brain/task/CompositeTask$Order
	f	Ljava/util/function/Consumer;	c	listModifier
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
		p	3	listModifier	listModifier
	m	(Latb;)V	a	apply
		p	1	list	list
c	aqr$b	net/minecraft/entity/ai/brain/task/CompositeTask$RunMode
	m	(Latb;Lzd;Laoy;J)V	a	run
		p	1	tasks	tasks
		p	2	world	world
		p	3	entity	entity
		p	4	time	time
c	aqs	net/minecraft/entity/ai/brain/task/GiveGiftsToHeroTask
	f	Ljava/util/Map;	b	GIFTS
	f	I	c	ticksLeft
	f	Z	d	done
	f	J	e	startTime
	m	(I)V	<init>	<init>
		p	1	delay	delay
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lbdp;Lbec;)Z	a	isCloseEnough
		p	1	villager	villager
		p	2	player	player
	m	(Lbdp;)Ljava/util/List;	a	getGifts
		p	1	villager	villager
	m	(Lzd;)I	a	getNextGiftDelay
		p	0	world	world
	m	(Lbdp;Laoy;)V	a	giveGifts
		p	1	villager	villager
		p	2	recipient	recipient
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lbec;)Z	a	isHero
		p	1	player	player
	m	(Lzd;Lbdp;J)Z	b	shouldKeepRunning
	m	(Lbdp;)Z	b	isNearestPlayerHero
		p	1	villager	villager
	m	(Lbdp;)Ljava/util/Optional;	c	getNearestPlayerIfHero
		p	1	villager	villager
	m	(Lzd;Lbdp;J)V	c	keepRunning
	m	(Lzd;Lbdp;J)V	d	finishRunning
c	aqt	net/minecraft/entity/ai/brain/task/SeekSkyAfterRaidWinTask
c	aqu	net/minecraft/entity/ai/brain/task/GoToCelebrateTask
	f	I	b	completionRange
	m	(IF)V	<init>	<init>
		p	1	completionRange	completionRange
	m	(Laoz;Lfu;)Lfu;	a	fuzz
		p	0	mob	mob
		p	1	pos	pos
	m	(Ljava/util/Random;)I	a	fuzz
		p	0	random	random
	m	(Lzd;Laoz;J)V	a	run
	m	(Laoz;)Lfu;	a	getCelebrateLocation
		p	0	entity	entity
c	aqv	net/minecraft/entity/ai/brain/task/GoToPointOfInterestTask
	f	F	b	speed
	f	I	c	completionRange
	m	(FI)V	<init>	<init>
		p	1	speed	speed
		p	2	completionRange	completionRange
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lzd;Lbdp;)Z	a	shouldRun
c	aqw	net/minecraft/entity/ai/brain/task/WalkTowardJobSiteTask
	f	F	b	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lzd;Lbdp;J)V	b	keepRunning
	m	(Lzd;Lbdp;J)V	c	finishRunning
c	aqx	net/minecraft/entity/ai/brain/task/WalkToNearestVisibleWantedItemTask
	f	Ljava/util/function/Predicate;	b	startCondition
	f	I	c	radius
	m	(Ljava/util/function/Predicate;FZI)V	<init>	<init>
		p	1	startCondition	startCondition
		p	3	requiresWalkTarget	requiresWalkTarget
	m	(Laoy;)Lbbg;	a	getNearestVisibleWantedItem
		p	1	entity	entity
c	aqy	net/minecraft/entity/ai/brain/task/FarmerVillagerTask
	f	Lfu;	b	currentTarget
	f	J	c	nextResponseTime
	f	I	d	ticksRan
	f	Ljava/util/List;	e	targetPositions
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lfu;Lzd;)Z	a	isSuitableTarget
		p	1	pos	pos
		p	2	world	world
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lzd;)Lfu;	a	chooseRandomTarget
		p	1	world	world
	m	(Lzd;Lbdp;J)V	b	finishRunning
	m	(Lzd;Lbdp;J)V	c	keepRunning
	m	(Lzd;Lbdp;J)Z	d	shouldKeepRunning
c	aqz	net/minecraft/entity/ai/brain/task/WanderIndoorsTask
	f	F	b	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lzd;Lapg;J)V	a	run
	m	(Lzd;Lapg;)Z	a	shouldRun
c	ar	net/minecraft/advancement/criterion/ConsumeItemCriterion
	f	Luh;	a	ID
	m	(Lze;Lbki;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lar$a;	a	conditionsFromJson
c	ar$a	net/minecraft/advancement/criterion/ConsumeItemCriterion$Conditions
	f	Lbo;	a	item
	m	(Lbe$b;Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	item	item
	m	(Lbki;)Z	a	matches
		p	1	stack	stack
	m	(Lbqa;)Lar$a;	a	item
		p	0	item	item
	m	()Lar$a;	c	any
c	ara	net/minecraft/entity/ai/brain/task/FindEntityTask
	f	I	b	completionRange
	f	F	c	speed
	f	Laoq;	d	entityType
	f	I	e	maxSquaredDistance
	f	Ljava/util/function/Predicate;	f	predicate
	f	Ljava/util/function/Predicate;	g	shouldRunPredicate
	f	Lawp;	h	targetModule
	m	(Laoq;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lawp;FI)V	<init>	<init>
		p	1	entityType	entityType
		p	2	maxDistance	maxDistance
		p	3	shouldRunPredicate	shouldRunPredicate
		p	4	predicate	predicate
		p	5	targetModule	targetModule
		p	6	speed	speed
		p	7	completionRange	completionRange
	m	(Laoq;ILawp;FI)Lara;	a	create
		p	0	entityType	entityType
		p	1	maxDistance	maxDistance
		p	2	targetModule	targetModule
		p	3	speed	speed
		p	4	completionRange	completionRange
c	arb	net/minecraft/entity/ai/brain/task/OpenDoorsTask
	m	(Lzd;Ljava/util/List;Ljava/util/Set;ILaoy;Lapr;)V	a	findAndCloseOpenedDoors
		p	1	world	world
		p	2	path	path
		p	3	doors	doors
		p	4	lastNodeIndex	lastNodeIndex
		p	5	entity	entity
		p	6	brain	brain
	m	(Lzd;Ljava/util/List;ILaoy;Lapr;)V	a	closeOpenedDoors
		p	0	world	world
		p	1	path	path
		p	2	currentPathIndex	currentPathIndex
		p	3	entity	entity
		p	4	brain	brain
	m	(Lzd;Ljava/util/List;Ljava/util/List;)Ljava/util/Set;	a	getDoorsOnPath
		p	1	world	world
		p	2	doors	doors
		p	3	path	path
c	arc	net/minecraft/entity/ai/brain/task/JumpInBedTask
	f	F	b	walkSpeed
	f	Lfu;	c	bedPos
	f	I	d	ticksOutOfBedUntilStopped
	f	I	e	jumpsRemaining
	f	I	f	ticksToNextJump
	m	(F)V	<init>	<init>
		p	1	walkSpeed	walkSpeed
	m	(Laoz;)Ljava/util/Optional;	a	getNearestBed
		p	1	mob	mob
	m	(Lzd;Laoz;J)V	a	run
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Lzd;Lfu;)Z	a	isBedAt
		p	1	world	world
		p	2	pos	pos
	m	(Laoz;Lfu;)V	a	setWalkTarget
		p	1	mob	mob
		p	2	pos	pos
	m	(Lzd;Laoz;)Z	b	shouldStartJumping
		p	1	world	world
		p	2	mob	mob
	m	(Lzd;Laoz;J)V	b	finishRunning
	m	(Lzd;Laoz;)Z	c	isAboveBed
		p	1	world	world
		p	2	mob	mob
	m	(Lzd;Laoz;J)Z	c	shouldKeepRunning
	m	(Lzd;Laoz;)Z	d	isOnBed
		p	1	world	world
		p	2	mob	mob
	m	(Lzd;Laoz;J)V	d	keepRunning
	m	(Lzd;Laoz;)Z	e	isBedGoneTooLong
		p	1	world	world
		p	2	mob	mob
	m	(Lzd;Laoz;)Z	f	isDoneJumping
		p	1	world	world
		p	2	mob	mob
c	ard	net/minecraft/entity/ai/brain/task/HideInHomeTask
	f	F	b	walkSpeed
	f	I	c	maxDistance
	f	I	d	preferredDistance
	f	Ljava/util/Optional;	e	homePosition
	m	(IFI)V	<init>	<init>
		p	1	maxDistance	maxDistance
		p	2	walkSpeed	walkSpeed
		p	3	preferredDistance	preferredDistance
c	are	net/minecraft/entity/ai/brain/task/HideInHomeDuringRaidTask
	m	(IF)V	<init>	<init>
		p	1	maxDistance	maxDistance
		p	2	walkSpeed	walkSpeed
c	arf	net/minecraft/entity/ai/brain/task/FollowCustomerTask
	f	F	b	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lbdp;)V	a	update
		p	1	villager	villager
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lzd;Lbdp;J)V	b	run
	m	(Lzd;Lbdp;J)V	c	finishRunning
	m	(Lzd;Lbdp;J)V	d	keepRunning
c	arg	net/minecraft/entity/ai/brain/task/LookAroundTask
	m	(II)V	<init>	<init>
		p	1	minRunTime	minRunTime
		p	2	maxRunTime	maxRunTime
	m	(Lzd;Laoz;J)Z	a	shouldKeepRunning
	m	(Lzd;Laoz;J)V	b	finishRunning
	m	(Lzd;Laoz;J)V	c	keepRunning
c	arh	net/minecraft/entity/ai/brain/task/MeleeAttackTask
	f	I	b	interval
	m	(I)V	<init>	<init>
		p	1	interval	interval
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Lzd;Laoz;J)V	a	run
c	ari	net/minecraft/entity/ai/brain/task/StartRidingTask
	m	(Laoy;)Z	a	isRideTargetClose
		p	1	entity	entity
	m	(Laoy;)Laom;	b	getRideTarget
		p	1	entity	entity
c	arj	net/minecraft/entity/ai/brain/task/SeekSkyTask
	f	F	b	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lzd;Laoy;Lfu;)Z	a	isSkyVisible
		p	0	world	world
		p	1	entity	entity
		p	2	pos	pos
	m	(Lzd;Laoy;)Ldem;	b	findNearbySky
		p	1	world	world
		p	2	entity	entity
c	ark	net/minecraft/entity/ai/brain/task/WanderAroundTask
	f	Lczf;	b	path
	f	Lfu;	c	lookTargetPos
	f	F	d	speed
	f	I	e	pathUpdateCountdownTicks
	m	(I)V	<init>	<init>
		p	1	runTime	runTime
	m	(Laoz;Lawr;J)Z	a	hasFinishedPath
		p	3	time	time
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Laoz;Lawr;)Z	a	hasReached
		p	1	entity	entity
		p	2	walkTarget	walkTarget
	m	(Lzd;Laoz;J)Z	a	shouldKeepRunning
	m	(Lzd;Laoz;J)V	b	finishRunning
	m	(Lzd;Laoz;J)V	c	run
	m	(Lzd;Laoz;J)V	d	keepRunning
c	arl	net/minecraft/entity/ai/brain/task/PlayWithVillagerBabiesTask
	m	(Lzd;Lapg;J)V	a	run
	m	(Lzd;Lapg;)Z	a	shouldRun
	m	(Laoy;)Laoy;	a	getInteractionTarget
		p	1	entity	entity
	m	(Lapg;Laoy;)V	a	setPlayTarget
		p	0	entity	entity
		p	1	target	target
	m	(Laoy;Laoy;)Z	a	isInteractionTargetOf
		p	1	entity	entity
		p	2	other	other
	m	(Lzd;Lapg;Laoy;)V	a	setGroundTarget
		p	1	world	world
		p	2	entity	entity
		p	3	unusedBaby	unusedBaby
	m	(Lapg;)Ljava/util/Optional;	a	getVisibleMob
		p	1	entity	entity
	m	(Laoy;)Laoy;	b	findVisibleVillagerBaby
		p	1	entity	entity
	m	(Lapg;)Ljava/util/Optional;	b	getLeastPopularBabyInteractionTarget
		p	1	entity	entity
	m	(Laoy;)Z	c	hasInteractionTarget
		p	1	entity	entity
	m	(Lapg;)Ljava/util/Map;	c	getBabyInteractionTargetCounts
		p	1	entity	entity
	m	(Lapg;)Ljava/util/List;	d	getVisibleVillagerBabies
		p	1	entity	entity
	m	(Lapg;)Z	e	hasVisibleVillagerBabies
		p	1	entity	entity
c	arm	net/minecraft/entity/ai/brain/task/WorkStationCompetitionTask
	f	Lbds;	b	profession
	m	(Lbds;)V	<init>	<init>
		p	1	profession	profession
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lgc;Layc;Lbdp;)Z	a	isUsingWorkStationAt
		p	1	pos	pos
		p	2	poiType	poiType
		p	3	villager	villager
	m	(Lbdp;)Z	a	hasJobSite
		p	1	villager	villager
	m	(Lbdp;Lbdp;)Lbdp;	a	keepJobSiteForMoreExperiencedVillager
		p	0	first	first
		p	1	second	second
	m	(Layc;Lbds;)Z	a	isCompletedWorkStation
		p	1	poiType	poiType
		p	2	profession	profession
c	arn	net/minecraft/entity/ai/brain/LookTarget
	m	()Ldem;	a	getPos
	m	(Laoy;)Z	a	isSeenBy
		p	1	entity	entity
	m	()Lfu;	b	getBlockPos
c	aro	net/minecraft/entity/ai/brain/task/StrollTask
	f	F	b	speed
	f	I	c	horizontalRadius
	f	I	d	verticalRadius
	m	(FII)V	<init>	<init>
		p	1	speed	speed
		p	2	horizontalRadius	horizontalRadius
		p	3	verticalRadius	verticalRadius
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lzd;Lapg;J)V	a	run
c	arp	net/minecraft/entity/ai/brain/task/HideWhenBellRingsTask
c	arq	net/minecraft/entity/ai/brain/task/LoseJobOnSiteLossTask
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lzd;Lbdp;)Z	a	shouldRun
c	arr	net/minecraft/entity/ai/brain/task/EndRaidTask
c	ars	net/minecraft/entity/ai/brain/task/RingBellTask
c	art	net/minecraft/entity/ai/brain/task/ConditionalTask
	f	Ljava/util/function/Predicate;	b	condition
	f	Laqh;	c	delegate
	f	Z	d	allowsContinuation
	m	(Ljava/util/function/Predicate;Laqh;)V	<init>	<init>
		p	1	condition	condition
		p	2	delegate	delegate
	m	(Ljava/util/Map;Ljava/util/function/Predicate;Laqh;Z)V	<init>	<init>
		p	1	requiredMemoryStates	requiredMemoryStates
		p	2	condition	condition
		p	3	delegate	delegate
		p	4	allowsContinuation	allowsContinuation
	m	(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;	a	merge
		p	0	first	first
		p	1	second	second
c	aru	net/minecraft/entity/ai/brain/task/RandomTask
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	tasks	tasks
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	tasks	tasks
c	arv	net/minecraft/entity/ai/brain/task/TimeLimitedTask
	f	Z	b	needsTimeReset
	f	Z	c	delegateRunning
	f	Ladx;	d	timeRange
	f	Laqh;	e	delegate
	f	I	f	timeLeft
	m	(Laqh;ZLadx;)V	<init>	<init>
		p	1	delegate	delegate
		p	2	skipFirstRun	skipFirstRun
		p	3	timeRange	timeRange
	m	(Laqh;Ladx;)V	<init>	<init>
		p	1	delegate	delegate
		p	2	timeRange	timeRange
	m	(Lzd;)V	a	resetTimeLeft
		p	1	world	world
c	arw	net/minecraft/entity/ai/brain/task/WalkHomeTask
	f	F	b	speed
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	c	positionToExpiry
	f	I	d	tries
	f	J	e	expiryTimeLimit
	m	(F)V	<init>	<init>
		p	1	speed	speed
c	arx	net/minecraft/entity/ai/brain/task/FollowMobTask
	f	Ljava/util/function/Predicate;	b	predicate
	f	F	c	maxDistanceSquared
	m	(Ljava/util/function/Predicate;F)V	<init>	<init>
		p	1	predicate	predicate
		p	2	maxDistance	maxDistance
	m	(F)V	<init>	<init>
		p	1	maxDistance	maxDistance
	m	(Lapa;F)V	<init>	<init>
		p	1	group	group
		p	2	maxDistance	maxDistance
	m	(Laoq;F)V	<init>	<init>
		p	1	type	type
		p	2	maxDistance	maxDistance
c	ary	net/minecraft/entity/ai/brain/task/ForgetBellRingTask
	f	I	b	distance
	f	I	c	maxHiddenTicks
	f	I	d	hiddenTicks
	m	(II)V	<init>	<init>
		p	1	maxHiddenSeconds	maxHiddenSeconds
		p	2	distance	distance
c	arz	net/minecraft/entity/ai/brain/task/FindInteractionTargetTask
	f	Laoq;	b	entityType
	f	I	c	maxSquaredDistance
	f	Ljava/util/function/Predicate;	d	predicate
	f	Ljava/util/function/Predicate;	e	shouldRunPredicate
	m	(Laoq;I)V	<init>	<init>
		p	1	entityType	entityType
		p	2	maxDistance	maxDistance
	m	(Laoq;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	entityType	entityType
		p	2	maxDistance	maxDistance
		p	3	shouldRunPredicate	shouldRunPredicate
		p	4	predicate	predicate
	m	(Laoy;)Z	a	test
		p	1	entity	entity
	m	(Laoy;)Ljava/util/List;	b	getVisibleMobs
		p	1	entity	entity
c	as	net/minecraft/advancement/criterion/CuredZombieVillagerCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Las$a;	a	conditionsFromJson
	m	(Lze;Lbcu;Lbdp;)V	a	trigger
		p	1	player	player
		p	2	zombie	zombie
		p	3	villager	villager
c	as$a	net/minecraft/advancement/criterion/CuredZombieVillagerCriterion$Conditions
	f	Lbe$b;	a	zombie
	f	Lbe$b;	b	villager
	m	(Lbe$b;Lbe$b;Lbe$b;)V	<init>	<init>
		p	1	player	player
		p	2	zombie	zombie
		p	3	villager	villager
	m	(Ldat;Ldat;)Z	a	matches
		p	1	zombieContext	zombieContext
		p	2	villagerContext	villagerContext
	m	()Las$a;	c	any
c	asa	net/minecraft/entity/ai/brain/task/StartRaidTask
c	asb	net/minecraft/entity/ai/brain/task/GoToRememberedPositionTask
	f	Lawp;	b	entityMemory
	f	F	c	speed
	f	I	d	range
	f	Ljava/util/function/Function;	e	posRetriever
	m	(Lawp;FIZLjava/util/function/Function;)V	<init>	<init>
		p	1	memoryType	memoryType
		p	2	speed	speed
		p	3	range	range
		p	4	requiresWalkTarget	requiresWalkTarget
		p	5	posRetriever	posRetriever
	m	(Lzd;Lapg;J)V	a	run
	m	(Lzd;Lapg;)Z	a	shouldRun
	m	(Lawp;FIZ)Lasb;	a	toBlock
		p	0	memoryType	memoryType
		p	1	speed	speed
		p	2	range	range
		p	3	requiresWalkTarget	requiresWalkTarget
	m	(Lapg;Ldem;F)V	a	setWalkTarget
		p	0	entity	entity
		p	1	pos	pos
		p	2	speed	speed
	m	(Lapg;)Ldem;	a	getPos
		p	1	entity	entity
	m	(Lawp;FIZ)Lasb;	b	toEntity
		p	0	memoryType	memoryType
		p	1	speed	speed
		p	2	range	range
		p	3	requiresWalkTarget	requiresWalkTarget
	m	(Lapg;)Z	b	isWalkTargetPresentAndFar
c	asc	net/minecraft/entity/ai/brain/task/RangedApproachTask
	f	F	b	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Laoy;)V	a	forgetWalkTarget
		p	1	entity	entity
	m	(Laoy;Laoy;)V	a	rememberWalkTarget
		p	1	entity	entity
		p	2	target	target
	m	(Lzd;Laoz;J)V	a	run
c	asd	net/minecraft/entity/ai/brain/task/VillagerWalkTowardsTask
	f	Lawp;	b	destination
	f	F	c	speed
	f	I	d	completionRange
	f	I	e	maxRange
	f	I	f	maxRunTime
	m	(Lawp;FIII)V	<init>	<init>
		p	1	destination	destination
		p	2	speed	speed
		p	3	completionRange	completionRange
		p	4	maxRange	maxRange
		p	5	maxRunTime	maxRunTime
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lbdp;J)V	a	giveUp
		p	1	villager	villager
		p	2	time	time
	m	(Lzd;Lbdp;)Z	a	shouldGiveUp
		p	1	world	world
		p	2	villager	villager
	m	(Lzd;Lbdp;Lgc;)Z	a	exceedsMaxRange
		p	1	world	world
		p	2	villager	villager
		p	3	pos	pos
	m	(Lzd;Lbdp;Lgc;)Z	b	reachedDestination
		p	1	world	world
		p	2	villager	villager
		p	3	pos	pos
c	ase	net/minecraft/entity/ai/brain/task/GoTowardsLookTarget
	f	F	b	speed
	f	I	c	completionRange
	m	(FI)V	<init>	<init>
		p	1	speed	speed
		p	2	completionRange	completionRange
c	asf	net/minecraft/entity/ai/brain/task/HoldTradeOffersTask
	f	Lbki;	b	customerHeldStack
	f	Ljava/util/List;	c	offers
	f	I	d	offerShownTicks
	f	I	e	offerIndex
	f	I	f	ticksLeft
	m	(II)V	<init>	<init>
		p	1	minRunTime	minRunTime
		p	2	maxRunTime	maxRunTime
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lboz;)Z	a	isPossible
		p	1	offer	offer
	m	(Laoy;Lbdp;)V	a	setupOffers
		p	1	customer	customer
		p	2	villager	villager
	m	(Lbdp;)V	a	holdOffer
		p	1	villager	villager
	m	(Lzd;Lbdp;J)V	b	run
	m	(Lbdp;)V	b	loadPossibleOffers
		p	1	villager	villager
	m	(Lbdp;)Laoy;	c	findPotentialCustomer
		p	1	villager	villager
	m	(Lzd;Lbdp;J)V	c	keepRunning
	m	(Lbdp;)V	d	refreshShownOffer
		p	1	villager	villager
	m	(Lzd;Lbdp;J)V	d	finishRunning
c	asg	net/minecraft/entity/ai/brain/task/SleepTask
	f	J	b	startTime
c	ash	net/minecraft/entity/ai/brain/task/MeetVillagerTask
c	asi	net/minecraft/entity/ai/brain/task/UpdateAttackTargetTask
	f	Ljava/util/function/Predicate;	b	startCondition
	f	Ljava/util/function/Function;	c	targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;)V	<init>	<init>
		p	1	startCondition	startCondition
		p	2	targetGetter	targetGetter
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	targetGetter	targetGetter
	m	(Laoz;Laoy;)V	a	updateAttackTarget
		p	1	entity	entity
		p	2	target	target
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Lzd;Laoz;J)V	a	run
c	asj	net/minecraft/entity/ai/brain/task/DefeatTargetTask
	f	I	b	duration
	m	(ILjava/util/function/BiPredicate;)V	<init>	<init>
		p	1	duration	duration
	m	(Laoy;)Laoy;	a	getAttackTarget
		p	1	entity	entity
c	ask	net/minecraft/entity/ai/brain/task/ForgetAttackTargetTask
	f	Ljava/util/function/Predicate;	b	alternativeCondition
	m	(Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	alternativeCondition	alternativeCondition
	m	(Lzd;Laoz;J)V	a	run
	m	(Laoy;)Z	a	cannotReachTarget
		p	0	entity	entity
	m	(Laoz;)Z	a	isAttackTargetInAnotherWorld
		p	1	entity	entity
	m	(Laoz;)Laoy;	b	getAttackTarget
		p	1	entity	entity
	m	(Laoz;)Z	c	isAttackTargetDead
		p	1	entity	entity
	m	(Laoz;)V	d	forgetAttackTarget
		p	1	entity	entity
c	asl	net/minecraft/entity/ai/brain/task/ForgetAngryAtTargetTask
	m	(Lzd;Laoz;J)V	a	run
c	asm	net/minecraft/entity/ai/brain/task/GoToIfNearbyTask
	f	Lawp;	b	target
	f	J	c	nextUpdateTime
	f	I	d	maxDistance
	m	(Lawp;I)V	<init>	<init>
		p	1	target	target
		p	2	maxDistance	maxDistance
	m	(Lzd;Lapg;J)V	a	run
	m	(Lzd;Lapg;)Z	a	shouldRun
c	asn	net/minecraft/entity/ai/brain/task/GoToNearbyPositionTask
	f	Lawp;	b	memoryModuleType
	f	I	c	completionRange
	f	I	d	maxDistance
	f	J	e	nextRunTime
	m	(Lawp;II)V	<init>	<init>
		p	1	memoryModuleType	memoryModuleType
		p	2	completionRange	completionRange
		p	3	maxDistance	maxDistance
	m	(Lzd;Lapg;J)V	a	run
	m	(Lzd;Lapg;)Z	a	shouldRun
c	aso	net/minecraft/entity/ai/brain/task/GoToSecondaryPositionTask
	f	Lawp;	b	secondaryPositions
	f	Lawp;	c	primaryPosition
	f	F	d	speed
	f	I	e	completionRange
	f	I	f	primaryPositionActivationDistance
	f	J	g	nextRunTime
	f	Lgc;	h	chosenPosition
	m	(Lawp;FIILawp;)V	<init>	<init>
		p	1	secondaryPositions	secondaryPositions
		p	2	speed	speed
		p	3	completionRange	completionRange
		p	4	primaryPositionActivationDistance	primaryPositionActivationDistance
		p	5	primaryPosition	primaryPosition
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lzd;Lbdp;)Z	a	shouldRun
c	asp	net/minecraft/entity/ai/brain/task/StayAboveWaterTask
	f	F	b	chance
	m	(F)V	<init>	<init>
		p	1	minWaterHeight	minWaterHeight
	m	(Lzd;Laoz;)Z	a	shouldRun
	m	(Lzd;Laoz;J)Z	a	shouldKeepRunning
	m	(Lzd;Laoz;J)V	b	keepRunning
c	asq	net/minecraft/entity/ai/brain/task/GatherItemsVillagerTask
	f	Ljava/util/Set;	b	items
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lbdp;Lbdp;)Ljava/util/Set;	a	getGatherableItems
	m	(Lbdp;Ljava/util/Set;Laoy;)V	a	giveHalfOfStack
		p	0	villager	villager
		p	1	validItems	validItems
		p	2	target	target
	m	(Lzd;Lbdp;J)V	b	run
	m	(Lzd;Lbdp;J)V	c	keepRunning
	m	(Lzd;Lbdp;J)V	d	finishRunning
c	asr	net/minecraft/entity/ai/brain/task/ScheduleActivityTask
c	ass	net/minecraft/entity/ai/brain/task/BoneMealTask
	f	J	b	startTime
	f	J	c	lastEndEntityAge
	f	I	d	duration
	f	Ljava/util/Optional;	e	pos
	m	(Lbdp;)V	a	addLookWalkTargets
		p	1	villager	villager
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lfu;Lzd;)Z	a	canBoneMeal
		p	1	pos	pos
		p	2	world	world
	m	(Lzd;Lbdp;J)V	b	run
	m	(Lzd;Lbdp;)Ljava/util/Optional;	b	findBoneMealPos
		p	1	world	world
		p	2	entity	entity
	m	(Lzd;Lbdp;J)V	c	finishRunning
	m	(Lzd;Lbdp;J)V	d	keepRunning
c	ast	net/minecraft/entity/ai/brain/task/ForgetCompletedPointOfInterestTask
	f	Lawp;	b	memoryModule
	f	Ljava/util/function/Predicate;	c	condition
	m	(Layc;Lawp;)V	<init>	<init>
		p	1	poiType	poiType
		p	2	memoryModule	memoryModule
	m	(Lzd;Lfu;Laoy;)Z	a	isBedOccupiedByOthers
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	(Lzd;Lfu;)Z	a	hasCompletedPointOfInterest
		p	1	world	world
		p	2	pos	pos
c	asu	net/minecraft/entity/ai/brain/task/RunAroundAfterRaidTask
	m	(Lzd;Lapg;)Z	a	shouldRun
c	asv	net/minecraft/entity/ai/brain/task/FindWalkTargetTask
	f	F	b	walkSpeed
	f	I	c	maxHorizontalDistance
	f	I	d	maxVerticalDistance
	m	(FII)V	<init>	<init>
		p	1	walkSpeed	walkSpeed
		p	2	maxHorizontalDistance	maxHorizontalDistance
		p	3	maxVerticalDistance	maxVerticalDistance
	m	(F)V	<init>	<init>
		p	1	walkSpeed	walkSpeed
	m	(Lzd;Lapg;J)V	a	run
	m	(Lapg;Lgo;)V	a	updateWalkTarget
		p	1	entity	entity
		p	2	pos	pos
	m	(Lapg;)V	a	updateWalkTarget
		p	1	entity	entity
c	asw	net/minecraft/entity/ai/brain/task/StopPanickingTask
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lbdp;)Z	a	wasHurtByNearbyEntity
		p	0	entity	entity
c	asx	net/minecraft/entity/ai/brain/task/VillagerTaskListProvider
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	a	createCoreTasks
		p	0	profession	profession
	m	()Lcom/mojang/datafixers/util/Pair;	a	createFreeFollowTask
	m	(F)Lcom/google/common/collect/ImmutableList;	a	createPlayTasks
	m	()Lcom/mojang/datafixers/util/Pair;	b	createBusyFollowTask
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	b	createWorkTasks
		p	0	profession	profession
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	c	createRestTasks
		p	0	profession	profession
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	d	createMeetTasks
		p	0	profession	profession
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	e	createIdleTasks
		p	0	profession	profession
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	f	createPanicTasks
		p	0	profession	profession
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	g	createPreRaidTasks
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	h	createRaidTasks
	m	(Lbds;F)Lcom/google/common/collect/ImmutableList;	i	createHideTasks
c	asy	net/minecraft/entity/ai/brain/task/VillagerBreedTask
	f	J	b	breedEndTime
	m	(Lzd;Lbdp;Lfu;)V	a	setChildHome
		p	1	world	world
		p	2	child	child
		p	3	pos	pos
	m	(Lzd;Lbdp;Lbdp;)V	a	goHome
		p	1	world	world
		p	2	first	first
		p	3	second	second
	m	(Lzd;Lbdp;)Z	a	shouldRun
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lbdp;Lbdp;)Ljava/util/Optional;	a	createChild
		p	1	first	first
		p	2	second	second
	m	(Lbdp;Lfu;)Z	a	canReachHome
		p	1	villager	villager
		p	2	pos	pos
	m	(Lbdp;)Z	a	isReadyToBreed
		p	1	villager	villager
	m	(Lzd;Lbdp;J)V	b	run
	m	(Lzd;Lbdp;)Ljava/util/Optional;	b	getReachableHome
		p	1	world	world
		p	2	villager	villager
	m	(Lzd;Lbdp;J)V	c	keepRunning
	m	(Lzd;Lbdp;J)V	d	finishRunning
c	asz	net/minecraft/entity/ai/brain/task/PanicTask
	m	(Laoy;)Z	a	isHostileNearby
		p	0	entity	entity
	m	(Lzd;Lbdp;J)Z	a	shouldKeepRunning
	m	(Lzd;Lbdp;J)V	b	run
	m	(Laoy;)Z	b	wasHurt
		p	0	entity	entity
	m	(Lzd;Lbdp;J)V	c	keepRunning
c	at	net/minecraft/predicate/DamagePredicate
	f	Lat;	a	ANY
	f	Lbx$c;	b	dealt
	f	Lbx$c;	c	taken
	f	Lbe;	d	sourceEntity
	f	Ljava/lang/Boolean;	e	blocked
	f	Lau;	f	type
	m	(Lbx$c;Lbx$c;Lbe;Ljava/lang/Boolean;Lau;)V	<init>	<init>
		p	1	dealt	dealt
		p	2	taken	taken
		p	3	sourceEntity	sourceEntity
		p	4	blocked	blocked
		p	5	type	type
	m	(Lze;Lanw;FFZ)Z	a	test
		p	1	player	player
		p	2	source	source
		p	3	dealt	dealt
		p	4	taken	taken
		p	5	blocked	blocked
	m	(Lcom/google/gson/JsonElement;)Lat;	a	fromJson
		p	0	json	json
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	at$a	net/minecraft/predicate/DamagePredicate$Builder
	f	Lbx$c;	a	dealt
	f	Lbx$c;	b	taken
	f	Lbe;	c	sourceEntity
	f	Ljava/lang/Boolean;	d	blocked
	f	Lau;	e	type
	m	(Lau$a;)Lat$a;	a	type
		p	1	builder	builder
	m	()Lat$a;	a	create
	m	(Ljava/lang/Boolean;)Lat$a;	a	blocked
		p	1	blocked	blocked
	m	()Lat;	b	build
c	ata	net/minecraft/entity/ai/brain/task/WakeUpTask
c	atb	net/minecraft/util/collection/WeightedList
	f	Ljava/util/List;	a	entries
	f	Ljava/util/Random;	b	random
	m	(Ljava/lang/Object;I)Latb;	a	add
		p	1	item	item
		p	2	weight	weight
	m	(Ljava/util/Random;)Latb;	a	shuffle
		p	1	random	random
	m	()Latb;	a	shuffle
	m	(Ljava/util/Random;)Ljava/lang/Object;	b	pickRandom
		p	1	random	random
	m	()Ljava/util/stream/Stream;	c	stream
c	atb$a	net/minecraft/util/collection/WeightedList$Entry
	f	Ljava/lang/Object;	a	item
	f	I	b	weight
	f	D	c	shuffledOrder
	m	(F)V	a	setShuffledOrder
		p	1	random	random
	m	()Ljava/lang/Object;	a	getElement
	m	()D	c	getShuffledOrder
c	atb$a$1	net/minecraft/util/collection/WeightedList$Entry$1
	m	(Latb$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
c	atc	net/minecraft/entity/ai/brain/task/FarmerWorkTask
	f	Ljava/util/List;	b	COMPOSTABLES
	m	(Lzd;Lbdp;Lgc;Lcfj;)V	a	compostSeeds
		p	1	world	world
		p	2	entity	entity
		p	3	pos	pos
		p	4	composterState	composterState
	m	(Lbdp;)V	a	craftAndDropBread
		p	1	entity	entity
c	atd	net/minecraft/entity/ai/brain/task/VillagerWorkTask
	f	J	b	lastCheckedTime
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lzd;Lbdp;)V	a	performAdditionalWork
		p	1	world	world
		p	2	entity	entity
	m	(Lzd;Lbdp;)Z	b	shouldRun
	m	(Lzd;Lbdp;J)Z	b	shouldKeepRunning
c	ate	net/minecraft/entity/ai/brain/task/TakeJobSiteTask
	f	F	b	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lzd;Lbdp;J)V	a	run
	m	(Lzd;Lbdp;Lbdp;Lfu;Z)V	a	claimSite
		p	1	world	world
		p	2	previousOwner	previousOwner
		p	3	newOwner	newOwner
		p	4	pos	pos
		p	5	jobSitePresent	jobSitePresent
	m	(Layc;Lbdp;Lfu;)Z	a	canUseJobSite
		p	1	poiType	poiType
		p	2	villager	villager
		p	3	pos	pos
	m	(Lbdp;Lfu;Layc;)Z	a	canReachJobSite
		p	1	villager	villager
		p	2	pos	pos
		p	3	poiType	poiType
	m	(Lbdp;)V	a	forgetJobSiteAndWalkTarget
		p	1	villager	villager
	m	(Lzd;Lbdp;)Z	a	shouldRun
c	atg	net/minecraft/entity/ai/control/BodyControl
	f	Laoz;	a	entity
	f	I	b	activeTicks
	f	F	c	lastHeadYaw
	m	(Laoz;)V	<init>	<init>
		p	1	entity	entity
	m	()V	a	tick
	m	()V	b	rotateLook
	m	()V	c	rotateHead
	m	()V	d	rotateBody
	m	()Z	e	isIndependent
	m	()Z	f	isMoving
c	ati	net/minecraft/entity/ai/control/DolphinLookControl
	f	I	h	maxYawDifference
	m	(Laoz;I)V	<init>	<init>
		p	1	entity	entity
		p	2	maxYawDifference	maxYawDifference
c	atj	net/minecraft/entity/ai/control/FlightMoveControl
	f	I	i	maxPitchChange
	f	Z	j	noGravity
	m	(Laoz;IZ)V	<init>	<init>
		p	1	entity	entity
		p	2	maxPitchChange	maxPitchChange
		p	3	noGravity	noGravity
c	atk	net/minecraft/entity/ai/control/JumpControl
	f	Z	a	active
	f	Laoz;	b	entity
	m	(Laoz;)V	<init>	<init>
		p	1	entity	entity
	m	()V	a	setActive
	m	()V	b	tick
c	atl	net/minecraft/entity/ai/control/LookControl
	f	Laoz;	a	entity
	f	F	b	yawSpeed
	f	F	c	pitchSpeed
	f	Z	d	active
	f	D	e	lookX
	f	D	f	lookY
	f	D	g	lookZ
	m	(Laoz;)V	<init>	<init>
		p	1	entity	entity
	m	(Ldem;)V	a	lookAt
		p	1	direction	direction
	m	(Laom;FF)V	a	lookAt
		p	1	entity	entity
		p	2	yawSpeed	yawSpeed
		p	3	pitchSpeed	pitchSpeed
	m	(FFF)F	a	changeAngle
		p	1	from	from
		p	2	to	to
		p	3	max	max
	m	(DDD)V	a	lookAt
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()V	a	tick
	m	(DDDFF)V	a	lookAt
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yawSpeed	yawSpeed
		p	8	pitchSpeed	pitchSpeed
	m	(Laom;)D	b	getLookingHeightFor
		p	0	entity	entity
	m	()Z	b	shouldStayHorizontal
	m	()Z	c	isActive
	m	()D	d	getLookX
	m	()D	e	getLookY
	m	()D	f	getLookZ
	m	()F	g	getTargetPitch
	m	()F	h	getTargetYaw
c	atm	net/minecraft/entity/ai/control/MoveControl
	f	Laoz;	a	entity
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	speed
	f	F	f	forwardMovement
	f	F	g	sidewaysMovement
	f	Latm$a;	h	state
	m	(Laoz;)V	<init>	<init>
		p	1	entity	entity
	m	(FF)V	a	strafeTo
		p	1	forward	forward
		p	2	sideways	sideways
	m	(FFF)F	a	changeAngle
		p	1	from	from
		p	2	to	to
		p	3	max	max
	m	(DDDD)V	a	moveTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	speed	speed
	m	()V	a	tick
	m	()Z	b	isMoving
	m	()D	c	getSpeed
	m	()D	d	getTargetX
	m	()D	e	getTargetY
	m	()D	f	getTargetZ
c	atm$a	net/minecraft/entity/ai/control/MoveControl$State
c	ato	net/minecraft/entity/ai/goal/FleeEntityGoal
	f	Lapg;	a	mob
	f	Laoy;	b	targetEntity
	f	F	c	fleeDistance
	f	Lczf;	d	fleePath
	f	Lawv;	e	fleeingEntityNavigation
	f	Ljava/lang/Class;	f	classToFleeFrom
	f	Ljava/util/function/Predicate;	g	extraInclusionSelector
	f	Ljava/util/function/Predicate;	h	inclusionSelector
	f	D	i	slowSpeed
	f	D	j	fastSpeed
	f	Laxs;	k	withinRangePredicate
	m	(Lapg;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	mob	mob
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
	m	(Lapg;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1	fleeingEntity	fleeingEntity
		p	2	classToFleeFrom	classToFleeFrom
		p	3	fleeDistance	fleeDistance
		p	4	fleeSlowSpeed	fleeSlowSpeed
		p	6	fleeFastSpeed	fleeFastSpeed
		p	8	inclusionSelector	inclusionSelector
	m	(Lapg;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	fleeFromType	fleeFromType
		p	3	extraInclusionSelector	extraInclusionSelector
		p	4	distance	distance
		p	5	slowSpeed	slowSpeed
		p	7	fastSpeed	fastSpeed
		p	9	inclusionSelector	inclusionSelector
c	atp	net/minecraft/entity/ai/goal/WolfBegGoal
	f	Lazk;	a	wolf
	f	Lbec;	b	begFrom
	f	Lbqb;	c	world
	f	F	d	begDistance
	f	I	e	timer
	f	Laxs;	f	validPlayerPredicate
	m	(Lazk;F)V	<init>	<init>
		p	1	wolf	wolf
		p	2	begDistance	begDistance
	m	(Lbec;)Z	a	isAttractive
		p	1	player	player
c	atq	net/minecraft/entity/ai/goal/ChaseBoatState
c	atr	net/minecraft/entity/ai/goal/BreakDoorGoal
	f	I	a	breakProgress
	f	I	b	prevBreakProgress
	f	I	c	maxProgress
	f	Ljava/util/function/Predicate;	g	difficultySufficientPredicate
	m	(Laoz;ILjava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	maxProgress	maxProgress
		p	3	difficultySufficientPredicate	difficultySufficientPredicate
	m	(Laoz;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	difficultySufficientPredicate	difficultySufficientPredicate
	m	(Land;)Z	a	isDifficultySufficient
		p	1	difficulty	difficulty
	m	()I	f	getMaxProgress
c	ats	net/minecraft/entity/ai/goal/BreatheAirGoal
	f	Lapg;	a	mob
	m	(Lapg;)V	<init>	<init>
		p	1	mob	mob
	m	(Lbqd;Lfu;)Z	a	isAirPos
		p	1	world	world
		p	2	pos	pos
	m	()V	g	moveToAir
c	att	net/minecraft/entity/ai/goal/AnimalMateGoal
	f	Layk;	a	animal
	f	Lbqb;	b	world
	f	Layk;	c	mate
	f	Laxs;	d	VALID_MATE_PREDICATE
	f	Ljava/lang/Class;	e	entityClass
	f	I	f	timer
	f	D	g	chance
	m	(Layk;D)V	<init>	<init>
		p	1	animal	animal
		p	2	chance	chance
	m	(Layk;DLjava/lang/Class;)V	<init>	<init>
		p	1	animal	animal
		p	2	chance	chance
		p	4	entityClass	entityClass
	m	()V	g	breed
	m	()Layk;	h	findMate
c	atu	net/minecraft/entity/ai/goal/GoToOwnerAndPurrGoal
	f	Laym;	g	cat
	m	(Laym;DI)V	<init>	<init>
		p	1	cat	cat
		p	2	speed	speed
		p	4	range	range
c	atv	net/minecraft/entity/ai/goal/CatSitOnBlockGoal
	f	Laym;	g	cat
	m	(Laym;D)V	<init>	<init>
		p	1	cat	cat
		p	2	speed	speed
c	atw	net/minecraft/entity/ai/goal/DolphinJumpGoal
	f	[I	a	OFFSET_MULTIPLIERS
	f	Layq;	b	dolphin
	f	I	c	chance
	f	Z	d	inWater
	m	(Layq;I)V	<init>	<init>
		p	1	dolphin	dolphin
		p	2	chance	chance
	m	(Lfu;III)Z	a	isWater
		p	1	pos	pos
		p	2	xOffset	xOffset
		p	3	zOffset	zOffset
		p	4	multiplier	multiplier
	m	(Lfu;III)Z	b	isAirAbove
		p	1	pos	pos
		p	2	xOffset	xOffset
		p	3	zOffset	zOffset
		p	4	multiplier	multiplier
c	atx	net/minecraft/entity/ai/goal/DoorInteractGoal
	f	Z	a	shouldStop
	f	F	b	xOffset
	f	F	c	zOffset
	f	Laoz;	d	mob
	f	Lfu;	e	doorPos
	f	Z	f	doorValid
	m	(Laoz;)V	<init>	<init>
		p	1	mob	mob
	m	(Z)V	a	setDoorOpen
		p	1	open	open
	m	()Z	g	isDoorOpen
c	aty	net/minecraft/entity/ai/goal/EatGrassGoal
	f	Ljava/util/function/Predicate;	a	GRASS_PREDICATE
	f	Laoz;	b	mob
	f	Lbqb;	c	world
	f	I	d	timer
	m	(Laoz;)V	<init>	<init>
		p	1	mob	mob
	m	()I	g	getTimer
c	atz	net/minecraft/entity/ai/goal/EscapeSunlightGoal
	f	Lapg;	a	mob
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	speed
	f	Lbqb;	f	world
	m	(Lapg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	()Z	g	targetShadedPos
	m	()Ldem;	h	locateShadedPos
c	au	net/minecraft/predicate/entity/DamageSourcePredicate
	f	Lau;	a	EMPTY
	f	Ljava/lang/Boolean;	b	isProjectile
	f	Ljava/lang/Boolean;	c	isExplosion
	f	Ljava/lang/Boolean;	d	bypassesArmor
	f	Ljava/lang/Boolean;	e	bypassesInvulnerability
	f	Ljava/lang/Boolean;	f	bypassesMagic
	f	Ljava/lang/Boolean;	g	isFire
	f	Ljava/lang/Boolean;	h	isMagic
	f	Ljava/lang/Boolean;	i	isLightning
	f	Lbe;	j	directEntity
	f	Lbe;	k	sourceEntity
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lbe;Lbe;)V	<init>	<init>
		p	1	isProjectile	isProjectile
		p	2	isExplosion	isExplosion
		p	3	bypassesArmor	bypassesArmor
		p	4	bypassesInvulnerability	bypassesInvulnerability
		p	5	bypassesMagic	bypassesMagic
		p	6	isFire	isFire
		p	7	isMagic	isMagic
		p	8	isLightning	isLightning
		p	9	directEntity	directEntity
		p	10	sourceEntity	sourceEntity
	m	(Lze;Lanw;)Z	a	test
		p	1	player	player
		p	2	damageSource	damageSource
	m	(Lcom/google/gson/JsonElement;)Lau;	a	fromJson
		p	0	json	json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getBoolean
		p	0	obj	obj
		p	1	name	name
	m	(Lzd;Ldem;Lanw;)Z	a	test
		p	1	world	world
		p	2	pos	pos
		p	3	damageSource	damageSource
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	addProperty
		p	1	json	json
		p	2	key	key
		p	3	value	value
c	au$a	net/minecraft/predicate/entity/DamageSourcePredicate$Builder
	f	Ljava/lang/Boolean;	a	isProjectile
	f	Ljava/lang/Boolean;	b	isExplosion
	f	Ljava/lang/Boolean;	c	bypassesArmor
	f	Ljava/lang/Boolean;	d	bypassesInvulnerability
	f	Ljava/lang/Boolean;	e	bypassesMagic
	f	Ljava/lang/Boolean;	f	isFire
	f	Ljava/lang/Boolean;	g	isMagic
	f	Ljava/lang/Boolean;	h	isLightning
	f	Lbe;	i	directEntity
	f	Lbe;	j	sourceEntity
	m	(Ljava/lang/Boolean;)Lau$a;	a	projectile
		p	1	projectile	projectile
	m	(Lbe$a;)Lau$a;	a	directEntity
	m	()Lau$a;	a	create
	m	()Lau;	b	build
	m	(Ljava/lang/Boolean;)Lau$a;	h	lightning
		p	1	lightning	lightning
c	aua	net/minecraft/entity/ai/goal/SwimGoal
	f	Laoz;	a	mob
	m	(Laoz;)V	<init>	<init>
		p	1	mob	mob
c	aub	net/minecraft/entity/ai/goal/ChaseBoatGoal
	f	I	a	updateCountdownTicks
	f	Lapg;	b	mob
	f	Lbec;	c	passenger
	f	Latq;	d	state
	m	(Lapg;)V	<init>	<init>
		p	1	mob	mob
c	auc	net/minecraft/entity/ai/goal/FollowGroupLeaderGoal
	f	Layj;	a	fish
	f	I	b	moveDelay
	f	I	c	checkSurroundingDelay
	m	(Layj;)V	<init>	<init>
		p	1	fish	fish
	m	(Layj;)I	a	getSurroundingSearchDelay
		p	1	fish	fish
c	aud	net/minecraft/entity/ai/goal/FollowMobGoal
	f	Laoz;	a	mob
	f	Ljava/util/function/Predicate;	b	targetPredicate
	f	Laoz;	c	target
	f	D	d	speed
	f	Lawv;	e	navigation
	f	I	f	updateCountdownTicks
	f	F	g	minDistance
	f	F	h	oldWaterPathFindingPenalty
	f	F	i	maxDistance
	m	(Laoz;DFF)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	minDistance	minDistance
		p	5	maxDistance	maxDistance
c	aue	net/minecraft/entity/ai/goal/FollowOwnerGoal
	f	Lapq;	a	tameable
	f	Laoy;	b	owner
	f	Lbqd;	c	world
	f	D	d	speed
	f	Lawv;	e	navigation
	f	I	f	updateCountdownTicks
	f	F	g	maxDistance
	f	F	h	minDistance
	f	F	i	oldWaterPathfindingPenalty
	f	Z	j	leavesAllowed
	m	(Lapq;DFFZ)V	<init>	<init>
		p	1	tameable	tameable
		p	2	speed	speed
		p	4	minDistance	minDistance
		p	5	maxDistance	maxDistance
		p	6	leavesAllowed	leavesAllowed
	m	(II)I	a	getRandomInt
		p	1	min	min
		p	2	max	max
	m	(Lfu;)Z	a	canTeleportTo
		p	1	pos	pos
	m	(III)Z	a	tryTeleportTo
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()V	g	tryTeleport
c	auf	net/minecraft/entity/ai/goal/FollowParentGoal
	f	Layk;	a	animal
	f	Layk;	b	parent
	f	D	c	speed
	f	I	d	delay
	m	(Layk;D)V	<init>	<init>
		p	1	animal	animal
		p	2	speed	speed
c	aug	net/minecraft/entity/ai/goal/Goal
	f	Ljava/util/EnumSet;	a	controls
	m	()Z	D_	canStop
	m	()Z	a	canStart
	m	(Ljava/util/EnumSet;)V	a	setControls
		p	1	controls	controls
	m	()Z	b	shouldContinue
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/EnumSet;	i	getControls
c	aug$a	net/minecraft/entity/ai/goal/Goal$Control
c	auh	net/minecraft/entity/ai/goal/GoalSelector
	c	Manages a set of goals, which are competing for certain controls on the mob.\nMultiple goals can run at the same time, so long as they are all using different controls.\n\n<p>A running goal will always be replaced with a goal with a <i>lower</i> priority, if\nsuch a goal exists, it's competing for the same control and its\n{@link Goal#canStart() canStart()} method returns true. (Note that some goals randomize\nthis method.)</p>\n\n<p>If two goals have the same priority and are competing for the same control, then one\ngoal cannot replace the other if it's running. The goal selector tries to run goals in the order\nthey were added.</p>
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lavx;	b	REPLACEABLE_GOAL
	f	Ljava/util/Map;	c	goalsByControl
	f	Ljava/util/Set;	d	goals
	f	Ljava/util/function/Supplier;	e	profiler
	f	Ljava/util/EnumSet;	f	disabledControls
	f	I	g	timeInterval
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	profiler	profiler
	m	(Laug$a;)V	a	disableControl
		p	1	control	control
	m	(ILaug;)V	a	add
		c	Adds a goal with a certain priority. Goals with <i>lower</i> priorities will replace running goals\nwith a higher priority.
		p	1	priority	priority
		p	2	goal	goal
	m	(Laug$a;Z)V	a	setControlEnabled
		p	1	control	control
		p	2	enabled	enabled
	m	(Laug;)V	a	remove
		p	1	goal	goal
	m	(Laug$a;)V	b	enableControl
		p	1	control	control
	m	()V	b	tick
	m	()Ljava/util/stream/Stream;	d	getRunningGoals
c	aui	net/minecraft/entity/ai/goal/IronGolemWanderAroundGoal
c	auj	net/minecraft/entity/ai/goal/StopAndLookAtEntityGoal
c	auk	net/minecraft/entity/ai/goal/DiveJumpingGoal
c	aul	net/minecraft/entity/ai/goal/SitOnOwnerShoulderGoal
	f	Laze;	a	tameable
	f	Lze;	b	owner
	f	Z	c	mounted
	m	(Laze;)V	<init>	<init>
		p	1	tameable	tameable
c	aum	net/minecraft/entity/ai/goal/PounceAtTargetGoal
	f	Laoz;	a	mob
	f	Laoy;	b	target
	f	F	c	velocity
	m	(Laoz;F)V	<init>	<init>
		p	1	mob	mob
		p	2	velocity	velocity
c	aun	net/minecraft/entity/ai/goal/FormCaravanGoal
	f	Lazp;	a	llama
	f	D	b	speed
	f	I	c	counter
	m	(Lazp;D)V	<init>	<init>
		p	1	llama	llama
		p	2	speed	speed
	m	(Lazp;I)Z	a	canFollow
		p	1	llama	llama
		p	2	length	length
c	auo	net/minecraft/entity/ai/goal/LookAtEntityGoal
	f	Laoz;	a	mob
	f	Laom;	b	target
	f	F	c	range
	f	F	d	chance
	f	Ljava/lang/Class;	e	targetType
	f	Laxs;	f	targetPredicate
	f	I	g	lookTime
	m	(Laoz;Ljava/lang/Class;FF)V	<init>	<init>
		p	1	mob	mob
		p	2	targetType	targetType
		p	3	range	range
		p	4	chance	chance
	m	(Laoz;Ljava/lang/Class;F)V	<init>	<init>
		p	1	mob	mob
		p	2	targetType	targetType
		p	3	range	range
c	aup	net/minecraft/entity/ai/goal/LookAtCustomerGoal
	f	Lbdk;	g	trader
	m	(Lbdk;)V	<init>	<init>
		p	1	trader	trader
c	auq	net/minecraft/entity/ai/goal/MeleeAttackGoal
	f	Lapg;	a	mob
	f	D	b	speed
	f	Z	c	pauseWhenMobIdle
	f	Lczf;	d	path
	f	D	e	targetX
	f	D	f	targetY
	f	D	g	targetZ
	f	I	h	updateCountdownTicks
	f	I	j	attackIntervalTicks
	f	J	k	lastUpdateTime
	m	(Lapg;DZ)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	pauseWhenMobIdle	pauseWhenMobIdle
	m	(Laoy;D)V	a	attack
		p	1	target	target
		p	2	squaredDistance	squaredDistance
	m	(Laoy;)D	a	getSquaredMaxAttackDistance
		p	1	entity	entity
c	aur	net/minecraft/entity/ai/goal/WanderAroundPointOfInterestGoal
c	aut	net/minecraft/entity/ai/goal/MoveThroughVillageGoal
	f	Lapg;	a	mob
	f	D	b	speed
	f	Lczf;	c	targetPath
	f	Lfu;	d	target
	f	Z	e	requiresNighttime
	f	Ljava/util/List;	f	visitedTargets
	f	I	g	distance
	f	Ljava/util/function/BooleanSupplier;	h	doorPassingThroughGetter
	m	(Lapg;DZILjava/util/function/BooleanSupplier;)V	<init>	<init>
		p	2	speed	speed
		p	4	requiresNighttime	requiresNighttime
		p	5	distance	distance
		p	6	doorPassingThroughGetter	doorPassingThroughGetter
	m	(Lfu;)Z	a	shouldVisit
		p	1	pos	pos
	m	()V	g	forgetOldTarget
c	auu	net/minecraft/entity/ai/goal/MoveToTargetPosGoal
	f	Lapg;	a	mob
	f	D	b	speed
	f	I	c	cooldown
	f	I	d	tryingTime
	f	Lfu;	e	targetPos
	f	I	f	lowestY
	f	I	g	safeWaitingTime
	f	Z	h	reached
	f	I	i	range
	f	I	j	maxYDifference
	m	(Lapg;DI)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	range	range
	m	(Lapg;DII)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	range	range
		p	5	maxYDifference	maxYDifference
	m	(Lbqd;Lfu;)Z	a	isTargetPos
		p	1	world	world
		p	2	pos	pos
	m	(Lapg;)I	a	getInterval
		p	1	mob	mob
	m	()V	g	startMovingToTarget
	m	()D	h	getDesiredSquaredDistanceToTarget
	m	()Z	j	shouldResetPath
	m	()Z	k	hasReached
	m	()Z	l	findTargetPos
c	auv	net/minecraft/entity/ai/goal/GoToWalkTargetGoal
	f	Lapg;	a	mob
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	D	e	speed
	m	(Lapg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
c	auw	net/minecraft/entity/ai/goal/WanderNearTargetGoal
	f	Lapg;	a	mob
	f	Laoy;	b	target
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	D	f	speed
	f	F	g	maxDistance
	m	(Lapg;DF)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	maxDistance	maxDistance
c	auy	net/minecraft/entity/ai/goal/AttackGoal
	f	Lbpg;	a	world
	f	Laoz;	b	mob
	f	Laoy;	c	target
	f	I	d	cooldown
	m	(Laoz;)V	<init>	<init>
		p	1	mob	mob
c	auz	net/minecraft/entity/ai/goal/IronGolemLookGoal
	f	Laxs;	a	CLOSE_VILLAGER_PREDICATE
	f	Layt;	b	golem
	f	Lbdp;	c	targetVillager
	f	I	d	lookCountdown
	m	(Layt;)V	<init>	<init>
		p	1	golem	golem
c	av	net/minecraft/predicate/entity/AdvancementEntityPredicateDeserializer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	advancementId
	f	Lday;	c	conditionManager
	f	Lcom/google/gson/Gson;	d	gson
	m	(Luh;Lday;)V	<init>	<init>
		p	1	advancementId	advancementId
		p	2	conditionManager	conditionManager
	m	()Luh;	a	getAdvancementId
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ldcy;)[Lddm;	a	loadConditions
		p	1	array	array
		p	2	key	key
		p	3	contextType	contextType
c	ava	net/minecraft/entity/ai/goal/LongDoorInteractGoal
	f	Z	a	delayedClose
	f	I	b	ticksLeft
	m	(Laoz;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	delayedClose	delayedClose
c	avb	net/minecraft/entity/ai/goal/EscapeDangerGoal
	f	Lapg;	a	mob
	f	D	b	speed
	f	D	c	targetX
	f	D	d	targetY
	f	D	e	targetZ
	f	Z	f	active
	m	(Lapg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	(Lbpg;Laom;II)Lfu;	a	locateClosestWater
		p	1	blockView	blockView
		p	2	entity	entity
		p	3	rangeX	rangeX
		p	4	rangeY	rangeY
	m	()Z	g	findTarget
	m	()Z	h	isActive
c	avc	net/minecraft/entity/ai/goal/MoveToRaidCenterGoal
	f	Lbfi;	a	actor
	m	(Lbfi;)V	<init>	<init>
		p	1	actor	actor
	m	(Lbfh;)V	a	includeFreeRaiders
		p	1	raid	raid
c	ave	net/minecraft/entity/ai/goal/LookAroundGoal
	f	Laoz;	a	mob
	f	D	b	deltaX
	f	D	c	deltaZ
	f	I	d	lookTime
	m	(Laoz;)V	<init>	<init>
		p	1	mob	mob
c	avf	net/minecraft/entity/ai/goal/WanderAroundGoal
	f	Lapg;	a	mob
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	speed
	f	I	f	chance
	f	Z	g	ignoringChance
	m	(Lapg;DI)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	chance	chance
	m	(Lapg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	(I)V	a	setChance
		p	1	chance	chance
	m	()Ldem;	g	getWanderTarget
	m	()V	h	ignoreChanceOnce
c	avg	net/minecraft/entity/ai/goal/SwimAroundGoal
c	avh	net/minecraft/entity/ai/goal/ProjectileAttackGoal
	f	Laoz;	a	mob
	f	Lbcf;	b	owner
	f	Laoy;	c	target
	f	I	d	updateCountdownTicks
	f	D	e	mobSpeed
	f	I	f	seenTargetTicks
	f	I	g	minIntervalTicks
	f	I	h	maxIntervalTicks
	f	F	i	maxShootRange
	f	F	j	squaredMaxShootRange
	m	(Lbcf;DIIF)V	<init>	<init>
		p	1	mob	mob
		p	2	mobSpeed	mobSpeed
		p	4	minIntervalTicks	minIntervalTicks
		p	5	maxIntervalTicks	maxIntervalTicks
		p	6	maxShootRange	maxShootRange
	m	(Lbcf;DIF)V	<init>	<init>
		p	1	mob	mob
		p	2	mobSpeed	mobSpeed
		p	4	intervalTicks	intervalTicks
		p	5	maxShootRange	maxShootRange
c	avi	net/minecraft/entity/ai/goal/BowAttackGoal
	f	Lbcb;	a	actor
	f	D	b	speed
	f	I	c	attackInterval
	f	F	d	squaredRange
	f	I	e	cooldown
	f	I	f	targetSeeingTicker
	f	Z	g	movingToLeft
	f	Z	h	backward
	f	I	i	combatTicks
	m	(Lbcb;DIF)V	<init>	<init>
		p	1	actor	actor
		p	2	speed	speed
		p	4	attackInterval	attackInterval
		p	5	range	range
	m	(I)V	a	setAttackInterval
		p	1	attackInterval	attackInterval
	m	()Z	g	isHoldingBow
c	avj	net/minecraft/entity/ai/goal/CrossbowAttackGoal
	f	Lbcb;	b	actor
	f	Lavj$a;	c	stage
	f	D	d	speed
	f	F	e	squaredRange
	f	I	f	seeingTargetTicker
	f	I	g	chargedTicksLeft
	m	(Lbcb;DF)V	<init>	<init>
		p	1	actor	actor
		p	2	speed	speed
		p	4	range	range
	m	()Z	g	isEntityHoldingCrossbow
	m	()Z	h	hasAliveTarget
	m	()Z	j	isUncharged
c	avj$a	net/minecraft/entity/ai/goal/CrossbowAttackGoal$Stage
c	avk	net/minecraft/entity/ai/goal/StepAndDestroyBlockGoal
	f	Lbvr;	g	targetBlock
	f	Laoz;	h	stepAndDestroyMob
	f	I	i	counter
	m	(Lbvr;Lapg;DI)V	<init>	<init>
		p	1	targetBlock	targetBlock
		p	2	mob	mob
		p	3	speed	speed
		p	5	maxYDifference	maxYDifference
	m	(Lbqc;Lfu;)V	a	tickStepping
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lfu;)V	a	onDestroyBlock
		p	1	world	world
		p	2	pos	pos
	m	(Lfu;Lbpg;)Lfu;	a	tweakToProperPos
		p	1	pos	pos
		p	2	world	world
	m	()Z	m	hasAvailableTarget
c	avl	net/minecraft/entity/ai/goal/AvoidSunlightGoal
	f	Lapg;	a	mob
	m	(Lapg;)V	<init>	<init>
		p	1	mob	mob
c	avm	net/minecraft/entity/ai/goal/HorseBondWithPlayerGoal
	f	Lazm;	a	horse
	f	D	b	speed
	f	D	c	targetX
	f	D	d	targetY
	f	D	e	targetZ
	m	(Lazm;D)V	<init>	<init>
		p	1	horse	horse
		p	2	speed	speed
c	avn	net/minecraft/entity/ai/goal/SitGoal
	f	Lapq;	a	tameable
	m	(Lapq;)V	<init>	<init>
		p	1	tameable	tameable
c	avo	net/minecraft/entity/ai/goal/GoToVillageGoal
	f	Lapg;	a	mob
	f	I	b	searchRange
	f	Lfu;	c	targetPosition
	m	(Lapg;I)V	<init>	<init>
		p	1	mob	mob
		p	2	searchRange	searchRange
	m	()V	g	findOtherWaypoint
c	avp	net/minecraft/entity/ai/goal/CreeperIgniteGoal
	f	Lbbn;	a	creeper
	f	Laoy;	b	target
	m	(Lbbn;)V	<init>	<init>
		p	1	creeper	creeper
c	avr	net/minecraft/entity/ai/goal/TemptGoal
	f	Lapg;	a	mob
	f	Lbec;	b	closestPlayer
	f	Laxs;	c	TEMPTING_ENTITY_PREDICATE
	f	D	d	speed
	f	D	e	lastPlayerX
	f	D	f	lastPlayerY
	f	D	g	lastPlayerZ
	f	D	h	lastPlayerPitch
	f	D	i	lastPlayerYaw
	f	I	j	cooldown
	f	Z	k	active
	f	Lbmr;	l	food
	f	Z	m	canBeScared
	m	(Lapg;DLbmr;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	food	food
		p	5	canBeScared	canBeScared
	m	(Lapg;DZLbmr;)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	canBeScared	canBeScared
		p	5	food	food
	m	(Lbki;)Z	a	isTemptedBy
		p	1	stack	stack
	m	()Z	g	canBeScared
	m	()Z	h	isActive
c	avs	net/minecraft/entity/ai/goal/StopFollowingCustomerGoal
	f	Lbdk;	a	trader
	m	(Lbdk;)V	<init>	<init>
		p	1	trader	trader
c	avt	net/minecraft/entity/ai/goal/MoveIntoWaterGoal
	f	Lapg;	a	mob
	m	(Lapg;)V	<init>	<init>
		p	1	mob	mob
c	avu	net/minecraft/entity/ai/goal/HoldInHandsGoal
	f	Laoz;	a	actor
	f	Lbki;	b	item
	f	Ljava/util/function/Predicate;	c	condition
	f	Lack;	d	sound
	m	(Laoz;Lbki;Lack;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	actor	actor
		p	2	item	item
		p	3	sound	sound
		p	4	condition	condition
c	avv	net/minecraft/entity/ai/goal/FlyOntoTreeGoal
	m	()Ldem;	j	getTreeTarget
c	avw	net/minecraft/entity/ai/goal/WanderAroundFarGoal
	f	F	h	probability
	m	(Lapg;DF)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	probability	probability
c	avx	net/minecraft/entity/ai/goal/PrioritizedGoal
	f	Laug;	a	goal
	f	I	b	priority
	f	Z	c	running
	m	(ILaug;)V	<init>	<init>
		p	1	priority	priority
		p	2	goal	goal
	m	(Lavx;)Z	a	canBeReplacedBy
		p	1	goal	goal
	m	()Z	g	isRunning
	m	()I	h	getPriority
	m	()Laug;	j	getGoal
c	avy	net/minecraft/entity/ai/goal/ZombieAttackGoal
	f	Lbcu;	b	zombie
	f	I	c	ticks
	m	(Lbcu;DZ)V	<init>	<init>
		p	1	zombie	zombie
		p	2	speed	speed
		p	4	pauseWhenMobIdle	pauseWhenMobIdle
c	aw	net/minecraft/predicate/entity/DistancePredicate
	f	Law;	a	ANY
	f	Lbx$c;	b	x
	f	Lbx$c;	c	y
	f	Lbx$c;	d	z
	f	Lbx$c;	e	horizontal
	f	Lbx$c;	f	absolute
	m	(Lbx$c;Lbx$c;Lbx$c;Lbx$c;Lbx$c;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	horizontal	horizontal
		p	5	absolute	absolute
	m	(Lcom/google/gson/JsonElement;)Law;	a	fromJson
		p	0	json	json
	m	(Lbx$c;)Law;	a	horizontal
		p	0	horizontal	horizontal
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(DDDDDD)Z	a	test
		p	1	x0	x0
		p	3	y0	y0
		p	5	z0	z0
		p	7	x1	x1
		p	9	y1	y1
		p	11	z1	z1
	m	(Lbx$c;)Law;	b	y
		p	0	y	y
c	awa	net/minecraft/entity/ai/goal/TrackIronGolemTargetGoal
	f	Layt;	a	golem
	f	Laoy;	b	target
	f	Laxs;	c	targetPredicate
	m	(Layt;)V	<init>	<init>
		p	1	golem	golem
c	awb	net/minecraft/entity/ai/goal/RevengeGoal
	f	Laxs;	a	VALID_AVOIDABLES_PREDICATE
	f	Z	b	groupRevenge
	f	I	c	lastAttackedTime
	f	[Ljava/lang/Class;	d	noRevengeTypes
	f	[Ljava/lang/Class;	i	noHelpTypes
	m	(Lapg;[Ljava/lang/Class;)V	<init>	<init>
		p	1	mob	mob
		p	2	noRevengeTypes	noRevengeTypes
	m	([Ljava/lang/Class;)Lawb;	a	setGroupRevenge
		p	1	noHelpTypes	noHelpTypes
	m	(Laoz;Laoy;)V	a	setMobEntityTarget
		p	1	mob	mob
		p	2	target	target
	m	()V	g	callSameTypeForRevenge
c	awc	net/minecraft/entity/ai/goal/FollowTargetGoal
	f	Ljava/lang/Class;	a	targetClass
	f	I	b	reciprocalChance
	f	Laoy;	c	targetEntity
	f	Laxs;	d	targetPredicate
	m	(Laoz;Ljava/lang/Class;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	targetClass	targetClass
		p	3	checkVisibility	checkVisibility
	m	(Laoz;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	targetClass	targetClass
		p	3	reciprocalChance	reciprocalChance
		p	4	checkVisibility	checkVisibility
		p	5	checkCanNavigate	checkCanNavigate
		p	6	targetPredicate	targetPredicate
	m	(Laoz;Ljava/lang/Class;ZZ)V	<init>	<init>
		p	1	mob	mob
		p	2	targetClass	targetClass
		p	3	checkVisibility	checkVisibility
		p	4	checkCanNavigate	checkCanNavigate
	m	(Laoy;)V	a	setTargetEntity
		p	1	targetEntity	targetEntity
	m	(D)Ldeg;	a	getSearchBox
		p	1	distance	distance
	m	()V	g	findClosestTarget
c	awd	net/minecraft/entity/ai/goal/DisableableFollowTargetGoal
	f	Z	i	enabled
	m	(Lbfi;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	actor	actor
		p	2	targetEntityClass	targetEntityClass
		p	3	reciprocalChance	reciprocalChance
		p	4	checkVisibility	checkVisibility
		p	5	checkCanNavigate	checkCanNavigate
		p	6	targetPredicate	targetPredicate
	m	(Z)V	a	setEnabled
		p	1	enabled	enabled
c	awe	net/minecraft/entity/ai/goal/RaidGoal
	f	I	i	cooldown
	m	(Lbfi;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	raider	raider
		p	2	targetEntityClass	targetEntityClass
		p	3	checkVisibility	checkVisibility
		p	4	targetPredicate	targetPredicate
	m	()I	h	getCooldown
	m	()V	j	decreaseCooldown
c	awf	net/minecraft/entity/ai/goal/FollowTargetIfTamedGoal
	f	Lapq;	i	tameable
	m	(Lapq;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	tameable	tameable
		p	2	targetClass	targetClass
		p	3	checkVisibility	checkVisibility
		p	4	targetPredicate	targetPredicate
c	awg	net/minecraft/entity/ai/goal/TrackOwnerAttackerGoal
	f	Lapq;	a	tameable
	f	Laoy;	b	attacker
	f	I	c	lastAttackedTime
	m	(Lapq;)V	<init>	<init>
		p	1	tameable	tameable
c	awh	net/minecraft/entity/ai/goal/AttackWithOwnerGoal
	f	Lapq;	a	tameable
	f	Laoy;	b	attacking
	f	I	c	lastAttackTime
	m	(Lapq;)V	<init>	<init>
		p	1	tameable	tameable
c	awi	net/minecraft/entity/ai/goal/UniversalAngerGoal
	f	Laoz;	a	mob
	f	Z	b	triggerOthers
	m	(Laoz;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	triggerOthers	triggerOthers
	m	(Laoz;)Lape;	a	method_29930
		p	0	entity	entity
	m	(Laoz;)Z	b	method_29931
		p	1	entity	entity
	m	()Ljava/util/List;	h	getOthersInRange
c	awj	net/minecraft/entity/ai/goal/TrackTargetGoal
	f	Z	a	checkCanNavigate
	f	I	b	canNavigateFlag
	f	I	c	checkCanNavigateCooldown
	f	I	d	timeWithoutVisibility
	f	Laoz;	e	mob
	f	Z	f	checkVisibility
	f	Laoy;	g	target
	f	I	h	maxTimeWithoutVisibility
	m	(Laoz;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	checkVisibility	checkVisibility
	m	(Laoz;ZZ)V	<init>	<init>
		p	1	mob	mob
		p	2	checkVisibility	checkVisibility
		p	3	checkNavigable	checkNavigable
	m	(Laoy;)Z	a	canNavigateToEntity
		p	1	entity	entity
	m	(Laoy;Laxs;)Z	a	canTrack
		p	1	target	target
		p	2	targetPredicate	targetPredicate
	m	(I)Lawj;	a	setMaxTimeWithoutVisibility
		p	1	time	time
	m	()D	k	getFollowRange
c	awl	net/minecraft/village/VillagerGossips
	f	Ljava/util/Map;	a	entityReputation
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lawl;Ljava/util/Random;I)V	a	shareGossipFrom
		p	1	from	from
		p	3	count	count
	m	(Lcom/mojang/serialization/Dynamic;)V	a	deserialize
	m	(Ljava/util/UUID;Lawm;I)V	a	startGossip
		p	1	target	target
		p	2	type	type
		p	3	value	value
	m	(Ljava/util/Random;I)Ljava/util/Collection;	a	pickGossips
		p	2	count	count
	m	(Ljava/util/UUID;)Lawl$a;	a	getReputationFor
		p	1	target	target
	m	(II)I	a	max
		p	0	left	left
		p	1	right	right
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputationFor
		p	1	target	target
		p	2	gossipTypeFilter	gossipTypeFilter
	m	(Lawm;II)I	a	mergeReputation
		p	1	type	type
		p	2	left	left
		p	3	right	right
	m	()V	b	decay
	m	()Ljava/util/stream/Stream;	c	entries
c	awl$a	net/minecraft/village/VillagerGossips$Reputation
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	associatedGossip
	m	()V	a	decay
	m	(Ljava/util/function/Predicate;)I	a	getValueFor
		p	1	gossipTypeFilter	gossipTypeFilter
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	entriesFor
		p	1	target	target
	m	(Lawm;)V	a	clamp
		p	1	gossipType	gossipType
	m	()Z	b	isObsolete
	m	(Lawm;)V	b	remove
		p	1	gossipType	gossipType
c	awl$b	net/minecraft/village/VillagerGossips$GossipEntry
	f	Ljava/util/UUID;	a	target
	f	Lawm;	b	type
	f	I	c	value
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	()I	a	getValue
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	deserialize
c	awm	net/minecraft/village/VillageGossipType
	f	Ljava/lang/String;	f	key
	f	I	g	multiplier
	f	I	h	maxValue
	f	I	i	decay
	f	I	j	shareDecrement
	f	Ljava/util/Map;	k	BY_KEY
	m	(Ljava/lang/String;ILjava/lang/String;IIII)V	<init>	<init>
		p	3	key	key
		p	4	multiplier	multiplier
		p	5	maxReputation	maxReputation
		p	6	decay	decay
		p	7	shareDecrement	shareDecrement
	m	(Ljava/lang/String;)Lawm;	a	byKey
		p	0	key	key
c	awo	net/minecraft/entity/ai/brain/Memory
	f	Ljava/lang/Object;	a	value
	f	J	b	expiry
	m	(Ljava/lang/Object;J)Lawo;	a	timed
		c	Creates a memory that has an expiry time.
		p	0	value	value
		p	1	expiry	expiry
	m	()V	a	tick
	m	()Ljava/lang/Object;	c	getValue
	m	()Z	d	isExpired
c	awp	net/minecraft/entity/ai/brain/MemoryModuleType
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1	factory	factory
	m	(Ljava/lang/String;)Lawp;	a	register
		p	0	id	id
	m	()Ljava/util/Optional;	a	getFactory
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lawp;	a	register
		p	0	id	id
c	awq	net/minecraft/entity/ai/brain/MemoryModuleState
c	awr	net/minecraft/entity/ai/brain/WalkTarget
	f	Larn;	a	lookTarget
	f	F	b	speed
	f	I	c	completionRange
	m	(Lfu;FI)V	<init>	<init>
		p	1	pos	pos
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	(Larn;FI)V	<init>	<init>
		p	1	lookTarget	lookTarget
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	(Ldem;FI)V	<init>	<init>
		p	1	pos	pos
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	()Larn;	a	getLookTarget
	m	()F	b	getSpeed
	m	()I	c	getCompletionRange
c	awt	net/minecraft/entity/ai/pathing/BirdNavigation
	m	(Z)V	a	setCanPathThroughDoors
		p	1	canPathThroughDoors	canPathThroughDoors
	m	(Z)V	b	setCanEnterOpenDoors
		p	1	canEnterOpenDoors	canEnterOpenDoors
c	awu	net/minecraft/entity/ai/pathing/MobNavigation
	f	Z	p	avoidSunlight
	m	(Z)V	a	setCanPathThroughDoors
		p	1	canPathThroughDoors	canPathThroughDoors
	m	(Lczb;)Z	a	canWalkOnPath
		p	1	pathType	pathType
	m	(IIIIIILdem;DD)Z	a	allVisibleAreSafe
		p	1	centerX	centerX
		p	2	centerY	centerY
		p	3	centerZ	centerZ
		p	4	xSize	xSize
		p	5	ySize	ySize
		p	6	zSize	zSize
		p	7	entityPos	entityPos
		p	8	lookVecX	lookVecX
		p	10	lookVecZ	lookVecZ
	m	(IIIIIILdem;DD)Z	b	allVisibleArePassable
		c	Checks whether all blocks in the box which are visible (in front of) the mob can be pathed through
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	xSize	xSize
		p	5	ySize	ySize
		p	6	zSize	zSize
		p	7	entityPos	entityPos
		p	8	lookVecX	lookVecX
		p	10	lookVecZ	lookVecZ
	m	(Z)V	c	setAvoidSunlight
		p	1	avoidSunlight	avoidSunlight
	m	()Z	f	canEnterOpenDoors
	m	()I	t	getPathfindingY
		c	The y-position to act as if the entity is at for pathfinding purposes
c	awv	net/minecraft/entity/ai/pathing/EntityNavigation
	f	Laoz;	a	entity
	f	Lbqb;	b	world
	f	Lczf;	c	currentPath
	f	D	d	speed
	f	I	e	tickCount
	f	I	f	pathStartTime
	f	Ldem;	g	pathStartPos
	f	Lgr;	h	lastNodePosition
	f	J	i	currentNodeMs
	f	J	j	lastActiveTickMs
	f	D	k	currentNodeTimeout
	f	F	l	nodeReachProximity
		c	If the Chebyshev distance from the entity to the next node is less than\nor equal to this value, the entity is considered "reached" the node.
	f	Z	m	shouldRecalculate
	f	J	n	lastRecalculateTime
	f	Lcze;	o	nodeMaker
	f	Lfu;	p	currentTarget
	f	I	q	currentDistance
	f	F	r	rangeMultiplier
	f	Lczh;	s	pathNodeNavigator
	m	(Laoz;Lbqb;)V	<init>	<init>
		p	1	mob	mob
		p	2	world	world
	m	()V	E_	adjustPath
		c	Adjusts the current path according to various special obstacles that may be in the way, for example sunlight
	m	()Z	a	isAtValidPosition
	m	(DDDD)Z	a	startMovingTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	speed	speed
	m	(DDDI)Lczf;	a	findPathTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	distance	distance
	m	(Laom;I)Lczf;	a	findPathTo
		p	1	entity	entity
		p	2	distance	distance
	m	(I)Lczh;	a	createPathNodeNavigator
		p	1	range	range
	m	(Lczf;D)Z	a	startMovingAlong
		p	1	path	path
		p	2	speed	speed
	m	(Ldem;Ldem;III)Z	a	canPathDirectlyThrough
		p	1	origin	origin
		p	2	target	target
		p	3	sizeX	sizeX
		p	4	sizeY	sizeY
		p	5	sizeZ	sizeZ
	m	(Lfu;)Z	a	isValidPosition
		p	1	pos	pos
	m	(D)V	a	setSpeed
		p	1	speed	speed
	m	(Laom;D)Z	a	startMovingTo
		p	1	entity	entity
		p	2	speed	speed
	m	(Lfu;I)Lczf;	a	findPathTo
		p	1	target	target
		p	2	distance	distance
	m	(Ljava/util/stream/Stream;I)Lczf;	a	findPathToAny
		p	1	positions	positions
		p	2	distance	distance
	m	(F)V	a	setRangeMultiplier
		p	1	rangeMultiplier	rangeMultiplier
	m	(Ljava/util/Set;IZI)Lczf;	a	findPathToAny
		p	1	positions	positions
		p	2	range	range
		p	4	distance	distance
	m	(Ldem;)V	a	checkTimeouts
		p	1	currentPos	currentPos
	m	(Lfu;)V	b	onBlockChanged
		p	1	pos	pos
	m	()Ldem;	b	getPos
		c	The position to act as if the entity is at for pathfinding purposes
	m	()V	c	tick
	m	(Z)V	d	setCanSwim
		p	1	canSwim	canSwim
	m	()V	g	resetRangeMultiplier
	m	()Lfu;	h	getTargetPos
	m	()Z	i	shouldRecalculatePath
	m	()V	j	recalculatePath
	m	()Lczf;	k	getCurrentPath
	m	()V	l	continueFollowingPath
	m	()Z	m	isIdle
	m	()Z	n	isFollowingPath
	m	()V	o	stop
	m	()Z	p	isInLiquid
	m	()Lcze;	q	getNodeMaker
	m	()Z	r	canSwim
c	aww	net/minecraft/entity/ai/pathing/SpiderNavigation
	f	Lfu;	p	targetPos
c	awx	net/minecraft/entity/ai/pathing/SwimNavigation
	f	Z	p	canJumpOutOfWater
c	ax	net/minecraft/advancement/criterion/EffectsChangedCriterion
	f	Luh;	a	ID
	m	(Lze;)V	a	trigger
		p	1	player	player
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lax$a;	a	conditionsFromJson
c	ax$a	net/minecraft/advancement/criterion/EffectsChangedCriterion$Conditions
	f	Lby;	a	effects
	m	(Lbe$b;Lby;)V	<init>	<init>
		p	1	player	player
		p	2	effects	effects
	m	(Lby;)Lax$a;	a	create
		p	0	effects	effects
	m	(Lze;)Z	a	matches
		p	1	player	player
c	axa	net/minecraft/entity/ai/brain/sensor/NearestVisibleAdultSensor
	m	(Lzd;Laok;)V	a	sense
	m	(Laok;Ljava/util/List;)V	a	findNearestVisibleAdult
		p	1	entity	entity
		p	2	visibleMobs	visibleMobs
c	axb	net/minecraft/entity/ai/brain/sensor/DummySensor
c	axc	net/minecraft/entity/ai/brain/sensor/GolemLastSeenSensor
	m	(JLaoy;)V	a	senseIronGolem
		p	0	time	time
		p	2	entity	entity
c	axd	net/minecraft/entity/ai/brain/sensor/HoglinSpecificSensor
	m	(Lzd;Lbcx;)V	a	sense
	m	(Lzd;Lbcx;)Ljava/util/Optional;	b	findNearestWarpedFungus
		p	1	world	world
		p	2	hoglin	hoglin
c	axe	net/minecraft/entity/ai/brain/sensor/HurtBySensor
c	axf	net/minecraft/entity/ai/brain/sensor/InteractableDoorsSensor
c	axg	net/minecraft/entity/ai/brain/sensor/NearestBedSensor
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	a	positionToExpiryTime
	f	I	b	tries
	f	J	c	expiryTime
	m	(Lzd;Laoz;)V	a	sense
c	axh	net/minecraft/entity/ai/brain/sensor/NearestItemsSensor
	m	(Lzd;Laoz;)V	a	sense
c	axi	net/minecraft/entity/ai/brain/sensor/NearestLivingEntitiesSensor
	f	Laxs;	a	CLOSE_ENTITY_PREDICATE
c	axj	net/minecraft/entity/ai/brain/sensor/PiglinSpecificSensor
	m	(Lzd;Laoy;)Ljava/util/Optional;	c	findSoulFire
		p	0	world	world
		p	1	entity	entity
c	axk	net/minecraft/entity/ai/brain/sensor/NearestPlayersSensor
c	axl	net/minecraft/entity/ai/brain/sensor/SecondaryPointsOfInterestSensor
	m	(Lzd;Lbdp;)V	a	sense
c	axm	net/minecraft/entity/mob/MobVisibilityCache
	f	Laoz;	a	owner
	f	Ljava/util/List;	b	visibleEntities
	f	Ljava/util/List;	c	invisibleEntities
	m	(Laoz;)V	<init>	<init>
		p	1	owner	owner
	m	()V	a	clear
	m	(Laom;)Z	a	canSee
		p	1	entity	entity
c	axn	net/minecraft/entity/ai/brain/sensor/Sensor
	f	Ljava/util/Random;	a	RANDOM
	f	I	b	senseInterval
	f	J	c	lastSenseTime
	m	(I)V	<init>	<init>
		p	1	senseInterval	senseInterval
	m	()Ljava/util/Set;	a	getOutputMemoryModules
	m	(Lzd;Laoy;)V	a	sense
		p	1	world	world
		p	2	entity	entity
	m	(Lzd;Laoy;)V	b	tick
		p	2	entity	entity
c	axo	net/minecraft/entity/ai/brain/sensor/SensorType
	f	Ljava/util/function/Supplier;	o	factory
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Laxo;	a	register
		p	0	id	id
	m	()Laxn;	a	create
c	axp	net/minecraft/entity/ai/brain/sensor/VillagerBabiesSensor
	m	(Laoy;)Ljava/util/List;	a	getVisibleVillagerBabies
		p	1	entities	entities
	m	(Laoy;)Z	b	isVillagerBaby
		p	1	entity	entity
	m	(Laoy;)Ljava/util/List;	c	getVisibleMobs
		p	1	entity	entity
c	axq	net/minecraft/entity/ai/brain/sensor/VillagerHostilesSensor
	f	Lcom/google/common/collect/ImmutableMap;	a	SQUARED_DISTANCES_FOR_DANGER
	m	(Laoy;Laoy;)Z	a	isCloseEnoughForDanger
		p	1	entity	entity
		p	2	hostile	hostile
	m	(Laoy;Laoy;Laoy;)I	a	compareDistances
		p	1	entity	entity
		p	2	hostile1	hostile1
		p	3	hostile2	hostile2
	m	(Laoy;)Ljava/util/Optional;	a	getNearestHostile
		p	1	entity	entity
	m	(Laoy;)Ljava/util/Optional;	b	getVisibleMobs
		p	1	entity	entity
	m	(Laoy;)Z	c	isHostile
		p	1	entity	entity
c	axs	net/minecraft/entity/ai/TargetPredicate
	f	Laxs;	a	DEFAULT
	f	D	b	baseMaxDistance
	f	Z	c	includeInvulnerable
	f	Z	d	includeTeammates
	f	Z	e	includeHidden
	f	Z	f	ignoreEntityTargetRules
	f	Z	g	useDistanceScalingFactor
	f	Ljava/util/function/Predicate;	h	predicate
	m	(Laoy;Laoy;)Z	a	test
		p	1	baseEntity	baseEntity
		p	2	targetEntity	targetEntity
	m	(Ljava/util/function/Predicate;)Laxs;	a	setPredicate
		p	1	predicate	predicate
	m	()Laxs;	a	includeInvulnerable
	m	(D)Laxs;	a	setBaseMaxDistance
		p	1	baseMaxDistance	baseMaxDistance
	m	()Laxs;	b	includeTeammates
	m	()Laxs;	c	includeHidden
	m	()Laxs;	d	ignoreEntityTargetRules
	m	()Laxs;	e	ignoreDistanceScalingFactor
c	axu	net/minecraft/entity/ai/TargetFinder
	m	(Lapg;IILjava/util/function/ToDoubleFunction;)Ldem;	a	findGroundTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pathfindingFavor	pathfindingFavor
	m	(Lapg;IILdem;FII)Ldem;	a	findAirTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredAngle	preferredAngle
		p	4	maxAngleDifference	maxAngleDifference
		p	5	distanceAboveGroundRange	distanceAboveGroundRange
		p	6	minDistanceAboveGround	minDistanceAboveGround
	m	(Lapg;IILdem;D)Ldem;	a	findTargetTowards
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
		p	4	maxAngleDifference	maxAngleDifference
	m	(Lfu;IILjava/util/function/Predicate;)Lfu;	a	findValidPositionAbove
		p	0	pos	pos
		p	1	minDistanceAboveIllegal	minDistanceAboveIllegal
		p	2	maxOffset	maxOffset
		p	3	illegalPredicate	illegalPredicate
	m	(Lapg;IIILdem;ZDLjava/util/function/ToDoubleFunction;ZIIZ)Ldem;	a	findTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	preferredAngle	preferredAngle
		p	5	notInWater	notInWater
		p	6	maxAngleDifference	maxAngleDifference
		p	8	favorProvider	favorProvider
		p	9	aboveGround	aboveGround
		p	10	distanceAboveGroundRange	distanceAboveGroundRange
		p	11	minDistanceAboveGround	minDistanceAboveGround
		p	12	validPositionsOnly	validPositionsOnly
	m	(Ljava/util/Random;IIILdem;D)Lfu;	a	getRandomOffset
		p	0	random	random
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	preferredAngle	preferredAngle
		p	5	maxAngleDifference	maxAngleDifference
	m	(Lapg;IIILdem;D)Ldem;	a	findGroundTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	preferredAngle	preferredAngle
		p	5	maxAngleDifference	maxAngleDifference
	m	(Lapg;II)Ldem;	a	findTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
	m	(Lapg;II)Ldem;	b	findGroundTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
	m	(Lapg;IILdem;)Ldem;	b	findTargetTowards
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
	m	(Lapg;IIILdem;D)Ldem;	b	findGroundTargetTowards
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	pos	pos
		p	5	maxAngleDifference	maxAngleDifference
	m	(Lapg;IILdem;)Ldem;	c	findTargetAwayFrom
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
	m	(Lapg;IILdem;)Ldem;	d	findGroundTargetAwayFrom
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
c	axw	net/minecraft/entity/EntityInteraction
	m	(Ljava/lang/String;)Laxw;	a	create
		p	0	key	key
c	axx	net/minecraft/village/ZombieSiegeManager
	f	Z	a	spawned
	f	Laxx$a;	b	state
	f	I	c	remaining
	f	I	d	countdown
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	m	(Lzd;Lfu;)Ldem;	a	getSpawnVector
		p	1	world	world
		p	2	pos	pos
	m	(Lzd;)Z	a	spawn
		p	1	world	world
	m	(Lzd;)V	b	trySpawnZombie
		p	1	world	world
c	axx$a	net/minecraft/village/ZombieSiegeManager$State
c	axz	net/minecraft/world/poi/PointOfInterestStorage
	f	Laxz$a;	a	pointOfInterestDistanceTracker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	b	preloadedChunks
	m	(Ljava/util/function/Predicate;Lfu;ILaxz$b;)J	a	count
		p	1	typePredicate	typePredicate
		p	2	pos	pos
		p	3	radius	radius
		p	4	occupationStatus	occupationStatus
	m	(Lbqd;Lfu;I)V	a	preloadChunks
		c	Preloads chunks in a square area with the given radius. Loads the chunks with {@code ChunkStatus.EMPTY}.
		p	1	world	world
		p	2	pos	pos
		p	3	radius	radius
			c	The radius in blocks
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfu;I)Ljava/util/Optional;	a	getPosition
		p	1	typePredicate	typePredicate
		p	2	positionPredicate	positionPredicate
		p	3	pos	pos
		p	4	radius	radius
	m	(Lchk;Lgo;Ljava/util/function/BiConsumer;)V	a	scanAndPopulate
	m	(Lfu;Ljava/util/function/Predicate;)Z	a	test
		p	1	pos	pos
		p	2	predicate	predicate
	m	(Lgo;)I	a	getDistanceFromNearestOccupied
		p	1	pos	pos
	m	(Lfu;Layc;)V	a	add
		p	1	pos	pos
		p	2	type	type
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Laxz$b;Lfu;ILjava/util/Random;)Ljava/util/Optional;	a	getPosition
		p	1	typePredicate	typePredicate
		p	2	positionPredicate	positionPredicate
		p	3	occupationStatus	occupationStatus
		p	4	pos	pos
		p	5	radius	radius
		p	6	random	random
	m	(Ljava/util/function/Predicate;Lbph;Laxz$b;)Ljava/util/stream/Stream;	a	getInChunk
		p	3	occupationStatus	occupationStatus
	m	(Lfu;)V	a	remove
		p	1	pos	pos
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfu;ILaxz$b;)Ljava/util/stream/Stream;	a	getPositions
		p	1	typePredicate	typePredicate
		p	2	posPredicate	posPredicate
		p	3	pos	pos
		p	4	radius	radius
		p	5	occupationStatus	occupationStatus
	m	(Lchk;)Z	a	shouldScan
	m	(Lbph;Lchk;)V	a	initForPalette
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfu;ILaxz$b;)Ljava/util/Optional;	b	getPosition
		p	1	typePredicate	typePredicate
		p	2	posPredicate	posPredicate
		p	3	pos	pos
		p	4	radius	radius
		p	5	occupationStatus	occupationStatus
	m	(Ljava/util/function/Predicate;Lfu;ILaxz$b;)Ljava/util/stream/Stream;	b	getInSquare
		p	1	typePredicate	typePredicate
		p	2	pos	pos
		p	3	radius	radius
	m	(Lfu;)Z	b	releaseTicket
		p	1	pos	pos
	m	(Lfu;)Ljava/util/Optional;	c	getType
		p	1	pos	pos
	m	(Ljava/util/function/Predicate;Lfu;ILaxz$b;)Ljava/util/stream/Stream;	c	getInCircle
		p	1	typePredicate	typePredicate
		p	2	pos	pos
		p	3	radius	radius
		p	4	occupationStatus	occupationStatus
	m	(Ljava/util/function/Predicate;Lfu;ILaxz$b;)Ljava/util/Optional;	d	getNearestPosition
		p	1	typePredicate	typePredicate
	m	(J)Z	f	isOccupied
c	axz$a	net/minecraft/world/poi/PointOfInterestStorage$PointOfInterestDistanceTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	distances
	m	()V	a	update
c	axz$b	net/minecraft/world/poi/PointOfInterestStorage$OccupationStatus
	f	Ljava/util/function/Predicate;	d	predicate
	m	()Ljava/util/function/Predicate;	a	getPredicate
c	ay	net/minecraft/advancement/criterion/EnchantedItemCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lay$a;	a	conditionsFromJson
	m	(Lze;Lbki;I)V	a	trigger
		p	1	player	player
		p	2	stack	stack
		p	3	levels	levels
c	ay$a	net/minecraft/advancement/criterion/EnchantedItemCriterion$Conditions
	f	Lbo;	a	item
	f	Lbx$d;	b	levels
	m	(Lbe$b;Lbo;Lbx$d;)V	<init>	<init>
		p	1	player	player
		p	2	item	item
		p	3	levels	levels
	m	(Lbki;I)Z	a	matches
		p	1	stack	stack
		p	2	levels	levels
	m	()Lay$a;	c	any
c	aya	net/minecraft/world/poi/PointOfInterest
	f	Lfu;	a	pos
	f	Layc;	b	type
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	updateListener
	m	(Lfu;Layc;ILjava/lang/Runnable;)V	<init>	<init>
		p	1	pos	pos
		p	2	type	type
		p	3	freeTickets	freeTickets
		p	4	updateListener	updateListener
	m	(Lfu;Layc;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	pos	pos
		p	2	type	type
		p	3	updateListener	updateListener
	m	()Z	b	reserveTicket
	m	()Z	c	releaseTicket
	m	()Z	d	hasSpace
	m	()Z	e	isOccupied
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
	m	()Lfu;	f	getPos
	m	()Layc;	g	getType
c	ayb	net/minecraft/world/poi/PointOfInterestSet
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	pointsOfInterestByPos
	f	Ljava/util/Map;	c	pointsOfInterestByType
	f	Ljava/lang/Runnable;	d	updateListener
	f	Z	e	valid
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1	updateListener	updateListener
	m	(Lfu;Ljava/util/function/Predicate;)Z	a	test
		p	1	pos	pos
		p	2	predicate	predicate
	m	(Laya;)Z	a	add
		p	1	poi	poi
	m	()Z	a	isValid
	m	(Lfu;Layc;)V	a	add
		p	1	pos	pos
		p	2	type	type
	m	(Ljava/util/function/Predicate;Laxz$b;)Ljava/util/stream/Stream;	a	get
	m	(Lfu;)V	a	remove
		p	1	pos	pos
	m	(Ljava/util/function/Consumer;)V	a	updatePointsOfInterest
	m	()V	b	clear
	m	(Lfu;)Z	c	releaseTicket
		p	1	pos	pos
	m	(Lfu;)Ljava/util/Optional;	d	getType
		p	1	pos	pos
c	ayc	net/minecraft/world/poi/PointOfInterestType
	f	Ljava/util/Map;	A	BLOCK_STATE_TO_POINT_OF_INTEREST_TYPE
	f	Ljava/lang/String;	B	id
	f	Ljava/util/Set;	C	blockStates
	f	I	D	ticketCount
	f	Ljava/util/function/Predicate;	E	completionCondition
	f	I	F	searchDistance
	f	Ljava/util/function/Predicate;	a	IS_USED_BY_PROFESSION
	f	Ljava/util/function/Predicate;	b	ALWAYS_TRUE
	f	Ljava/util/Set;	z	BED_STATES
	m	(Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)V	<init>	<init>
		p	1	id	id
		p	2	blockStates	blockStates
		p	3	ticketCount	ticketCount
		p	4	completionCondition	completionCondition
		p	5	searchDistance	searchDistance
	m	(Ljava/lang/String;Ljava/util/Set;II)V	<init>	<init>
		p	1	id	id
		p	2	blockStates	blockStates
		p	3	ticketCount	ticketCount
		p	4	searchDistance	searchDistance
	m	(Layc;)Layc;	a	setup
	m	(Ljava/lang/String;Ljava/util/Set;II)Layc;	a	register
		p	0	id	id
		p	1	workStationStates	workStationStates
		p	2	ticketCount	ticketCount
		p	3	searchDistance	searchDistance
	m	(Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Layc;	a	register
		p	0	id	id
		p	1	workStationStates	workStationStates
		p	2	ticketCount	ticketCount
		p	3	completionCondition	completionCondition
		p	4	searchDistance	searchDistance
	m	(Lbvr;)Ljava/util/Set;	a	getAllStatesOf
		p	0	block	block
	m	(Lcfj;)Ljava/util/Optional;	b	from
		p	0	state	state
	m	()I	b	getTicketCount
	m	()Ljava/util/function/Predicate;	c	getCompletionCondition
	m	()I	d	getSearchDistance
c	aye	net/minecraft/entity/mob/AmbientEntity
c	ayf	net/minecraft/entity/passive/BatEntity
	f	Ltq;	b	BAT_FLAGS
	f	Laxs;	c	CLOSE_PLAYER_PREDICATE
	f	Lfu;	d	hangingPosition
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Z	eJ	isRoosting
	m	()Z	eK	isTodayAroundHalloween
	m	()Lapw$a;	m	createBatAttributes
	m	(Z)V	t	setRoosting
		p	1	roosting	roosting
c	ayh	net/minecraft/entity/passive/FishEntity
	f	Ltq;	b	FROM_BUCKET
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Lbki;	eL	getFishBucketItem
	m	()Z	eM	hasSelfControl
	m	()Lack;	eN	getFlopSound
	m	()Z	eO	isFromBucket
	m	(Lbki;)V	k	copyDataToStack
		p	1	stack	stack
	m	()Lapw$a;	m	createFishAttributes
	m	(Z)V	t	setFromBucket
		p	1	fromBucket	fromBucket
c	ayh$a	net/minecraft/entity/passive/FishEntity$FishMoveControl
	f	Layh;	i	fish
	m	(Layh;)V	<init>	<init>
		p	1	owner	owner
c	ayh$b	net/minecraft/entity/passive/FishEntity$SwimToRandomPlaceGoal
	f	Layh;	h	fish
	m	(Layh;)V	<init>	<init>
		p	1	fish	fish
c	ayi	net/minecraft/entity/passive/GolemEntity
c	ayj	net/minecraft/entity/passive/SchoolingFishEntity
	f	Layj;	b	leader
	f	I	c	groupSize
	m	(Layj;)Layj;	a	joinGroupOf
		p	1	groupLeader	groupLeader
	m	(Ljava/util/stream/Stream;)V	a	pullInOtherFish
		p	1	fish	fish
	m	()I	eO	getMaxGroupSize
	m	()Z	eP	hasLeader
	m	()V	eQ	leaveGroup
	m	()Z	eR	canHaveMoreFishInGroup
	m	()Z	eS	hasOtherFishInGroup
	m	()Z	eT	isCloseEnoughToLeader
	m	()V	eU	moveTowardLeader
	m	()V	eV	increaseGroupSize
	m	()V	eW	decreaseGroupSize
c	ayj$a	net/minecraft/entity/passive/SchoolingFishEntity$FishData
	f	Layj;	a	leader
	m	(Layj;)V	<init>	<init>
		p	1	leader	leader
c	ayk	net/minecraft/entity/passive/AnimalEntity
	f	I	bv	loveTicks
	f	Ljava/util/UUID;	bw	lovingPlayer
	m	(Lbec;Lbki;)V	a	eat
		p	1	player	player
		p	2	stack	stack
	m	(Lbqb;Layk;)V	a	breed
		p	1	world	world
		p	2	other	other
	m	(Layk;)Z	a	canBreedWith
		p	1	other	other
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	isValidNaturalSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Z	eQ	canEat
	m	()I	eR	getLoveTicks
	m	()Lze;	eS	getLovingPlayer
	m	()Z	eT	isInLove
	m	()V	eU	resetLoveTicks
	m	(Lbec;)V	g	lovePlayer
		p	1	player	player
	m	(Lbki;)Z	k	isBreedingItem
		p	1	stack	stack
	m	(I)V	s	setLoveTicks
		p	1	loveTicks	loveTicks
c	ayl	net/minecraft/entity/passive/BeeEntity
	f	F	bA	lastPitch
	f	I	bB	ticksSinceSting
	f	I	bC	ticksSincePollination
	f	I	bD	cannotEnterHiveTicks
	f	I	bE	cropsGrownSincePollination
	f	I	bF	ticksLeftToFindHive
	f	I	bG	ticksUntilCanPollinate
	f	Lfu;	bH	flowerPos
	f	Lfu;	bI	hivePos
	f	Layl$k;	bJ	pollinateGoal
	f	Layl$e;	bK	moveToHiveGoal
	f	Layl$f;	bL	moveToFlowerGoal
	f	I	bM	ticksInsideWater
	f	Ltq;	bv	multipleByteTracker
	f	Ltq;	bw	anger
	f	Ljava/util/UUID;	by	targetUuid
	f	F	bz	currentPitch
	m	(Lbqb;DDDDDLhf;)V	a	addParticle
		p	1	world	world
		p	2	lastX	lastX
		p	4	x	x
		p	6	lastZ	lastZ
		p	8	z	z
		p	10	y	y
		p	12	effect	effect
	m	(Laok;)Layl;	b	createChild
	m	(Lfu;I)Z	b	isWithinDistance
		p	1	pos	pos
		p	2	distance	distance
	m	(IZ)V	d	setBeeFlag
		p	1	bit	bit
		p	2	value	value
	m	()Lfu;	eL	getFlowerPos
	m	()Z	eM	hasFlower
	m	()V	eP	resetPollinationTicks
	m	()Z	eV	hasHive
	m	()Lfu;	eW	getHivePos
	m	()Z	eY	hasNectar
	m	()Z	eZ	hasStung
	m	()Lapw$a;	fa	createBeeAttributes
	m	()V	fc	onHoneyDelivered
	m	()Z	fd	failedPollinatingTooLong
	m	()Z	fe	canEnterHive
	m	()V	ff	updateBodyPitch
	m	()Z	fg	isHiveNearFire
	m	()I	fh	getCropsGrownSincePollination
	m	()V	fi	resetCropCounter
	m	()V	fj	addCropCounter
	m	()Z	fk	isHiveValid
	m	()Z	fl	isNearTarget
	m	(Lfu;)V	g	setFlowerPos
		p	1	pos	pos
	m	(Lfu;)V	h	startMovingTo
		p	1	pos	pos
	m	(Lfu;)Z	i	doesHiveHaveSpace
		p	1	pos	pos
	m	(Lfu;)Z	j	isTooFar
		p	1	pos	pos
	m	(Lfu;)Z	k	isFlowers
		p	1	pos	pos
	m	(Z)V	t	setHasNectar
		p	1	hasNectar	hasNectar
	m	(I)V	t	setCannotEnterHiveTicks
		p	1	ticks	ticks
	m	(Z)V	u	setHasStung
		p	1	hasStung	hasStung
	m	(F)F	u	getBodyPitch
		p	1	tickDelta	tickDelta
	m	(I)Z	u	getBeeFlag
		p	1	location	location
	m	(Z)V	v	setNearTarget
		p	1	nearTarget	nearTarget
c	ayl$a	net/minecraft/entity/passive/BeeEntity$NotAngryGoal
	m	()Z	canStart	canStart
	m	()Z	g	canBeeStart
	m	()Z	h	canBeeContinue
	m	()Z	shouldContinue	shouldContinue
c	ayl$b	net/minecraft/entity/passive/BeeEntity$StingGoal
	m	(Layl;Lapg;DZ)V	<init>	<init>
		p	2	mob	mob
		p	3	speed	speed
		p	5	pauseWhenMobIdle	pauseWhenMobIdle
c	ayl$c	net/minecraft/entity/passive/BeeEntity$BeeFollowTargetGoal
	m	(Layl;)V	<init>	<init>
		p	1	bee	bee
	m	()Z	h	canSting
c	ayl$d	net/minecraft/entity/passive/BeeEntity$EnterHiveGoal
c	ayl$e	net/minecraft/entity/passive/BeeEntity$MoveToHiveGoal
	f	I	c	ticks
	f	Ljava/util/List;	d	possibleHives
	f	Lczf;	e	path
	f	I	f	ticksUntilLost
	m	(Lfu;)Z	a	startMovingToFar
		p	1	pos	pos
	m	(Lfu;)Z	b	isPossibleHive
		p	1	pos	pos
	m	(Lfu;)V	c	addPossibleHive
		p	1	pos	pos
	m	(Lfu;)Z	d	isCloseEnough
		p	1	pos	pos
	m	()V	j	clearPossibleHives
	m	()V	k	makeChosenHivePossibleHive
	m	()V	l	setLost
c	ayl$f	net/minecraft/entity/passive/BeeEntity$MoveToFlowerGoal
	f	I	c	ticks
	m	()Z	j	shouldMoveToFlower
c	ayl$g	net/minecraft/entity/passive/BeeEntity$GrowCropsGoal
c	ayl$h	net/minecraft/entity/passive/BeeEntity$BeeRevengeGoal
	m	(Layl;Layl;)V	<init>	<init>
		p	2	bee	bee
c	ayl$i	net/minecraft/entity/passive/BeeEntity$FindHiveGoal
	m	()Ljava/util/List;	j	getNearbyFreeHives
c	ayl$j	net/minecraft/entity/passive/BeeEntity$BeeLookControl
	m	(Layl;Laoz;)V	<init>	<init>
		p	2	entity	entity
c	ayl$k	net/minecraft/entity/passive/BeeEntity$PollinateGoal
	f	Ljava/util/function/Predicate;	c	flowerPredicate
	f	I	d	pollinationTicks
	f	I	e	lastPollinationTick
	f	Z	f	running
	f	Ldem;	g	nextTarget
	f	I	h	ticks
	m	(Ljava/util/function/Predicate;D)Ljava/util/Optional;	a	findFlower
		p	1	predicate	predicate
		p	2	searchDistance	searchDistance
	m	()Z	j	completedPollination
	m	()Z	k	isRunning
	m	()V	l	cancel
	m	()V	m	moveToNextTarget
	m	()F	n	getRandomOffset
	m	()Ljava/util/Optional;	o	getFlower
c	ayl$l	net/minecraft/entity/passive/BeeEntity$BeeWanderAroundGoal
	m	()Ldem;	g	getRandomLocation
c	aym	net/minecraft/entity/passive/CatEntity
	f	Ltq;	bA	SLEEPING_WITH_OWNER
	f	Ltq;	bB	HEAD_DOWN
	f	Ltq;	bC	COLLAR_COLOR
	f	Laym$a;	bD	fleeGoal
	f	Lavr;	bE	temptGoal
	f	F	bF	sleepAnimation
	f	F	bG	prevSleepAnimation
	f	F	bH	tailCurlAnimation
	f	F	bI	prevTailCurlAnimation
	f	F	bJ	headDownAnimation
	f	F	bK	prevHeadDownAnimation
	f	Ljava/util/Map;	bx	TEXTURES
	f	Lbmr;	by	TAMING_INGREDIENT
	f	Ltq;	bz	CAT_TYPE
	m	(Lbje;)V	a	setCollarColor
		p	1	color	color
	m	(Laok;)Laym;	b	createChild
	m	()Luh;	eV	getTexture
	m	()I	eW	getCatType
	m	()Z	eX	isSleepingWithOwner
	m	()Z	eY	isHeadDown
	m	()Lbje;	eZ	getCollarColor
	m	()V	fa	hiss
	m	()Lapw$a;	fb	createCatAttributes
	m	()F	fc	getAttackDamage
	m	()V	fd	updateAnimations
	m	()V	fe	updateSleepAnimation
	m	()V	ff	updateHeadDownAnimation
	m	(I)V	t	setCatType
		p	1	type	type
	m	(F)F	u	getSleepAnimation
		p	1	tickDelta	tickDelta
	m	(F)F	v	getTailCurlAnimation
		p	1	tickDelta	tickDelta
	m	(F)F	w	getHeadDownAnimation
		p	1	tickDelta	tickDelta
	m	(Z)V	x	setSleepingWithOwner
		p	1	sleeping	sleeping
	m	(Z)V	y	setHeadDown
		p	1	headDown	headDown
c	aym$a	net/minecraft/entity/passive/CatEntity$CatFleeGoal
	f	Laym;	i	cat
	m	(Laym;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	cat	cat
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	aym$b	net/minecraft/entity/passive/CatEntity$SleepWithOwnerGoal
	f	Laym;	a	cat
	f	Lbec;	b	owner
	f	Lfu;	c	bedPos
	f	I	d	ticksOnBed
	m	(Laym;)V	<init>	<init>
		p	1	cat	cat
	m	()V	h	dropMorningGifts
c	aym$c	net/minecraft/entity/passive/CatEntity$TemptGoal
	f	Lbec;	c	player
	f	Laym;	d	cat
	m	(Laym;DLbmr;Z)V	<init>	<init>
		p	1	cat	cat
		p	2	speed	speed
		p	4	food	food
		p	5	canBeScared	canBeScared
c	ayn	net/minecraft/entity/passive/ChickenEntity
	f	I	bA	eggLayTime
	f	Z	bB	jockey
	f	Lbmr;	bC	BREEDING_INGREDIENT
	f	F	bv	flapProgress
	f	F	bw	maxWingDeviation
	f	F	bx	prevMaxWingDeviation
	f	F	by	prevFlapProgress
	f	F	bz	flapSpeed
	m	(Laok;)Layn;	b	createChild
	m	()Lapw$a;	eL	createChickenAttributes
	m	()Z	eM	hasJockey
	m	(Z)V	t	setHasJockey
		p	1	hasJockey	hasJockey
c	ayo	net/minecraft/entity/passive/CodEntity
c	ayp	net/minecraft/entity/passive/CowEntity
	m	(Laok;)Layp;	b	createChild
	m	()Lapw$a;	eL	createCowAttributes
c	ayq	net/minecraft/entity/passive/DolphinEntity
	f	Ljava/util/function/Predicate;	b	CAN_TAKE
	f	Ltq;	bv	MOISTNESS
	f	Laxs;	bw	CLOSE_PLAYER_PREDICATE
	f	Ltq;	c	TREASURE_POS
	f	Ltq;	d	HAS_FISH
	m	(Lhf;)V	a	spawnParticlesAround
		p	1	parameters	parameters
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	(I)V	b	setMoistness
		p	1	moistness	moistness
	m	()Z	eL	hasFish
	m	()I	eM	getMoistness
	m	()Lapw$a;	eN	createDolphinAttributes
	m	()Z	eO	isNearTarget
	m	(Lfu;)V	g	setTreasurePos
		p	1	treasurePos	treasurePos
	m	()Lfu;	m	getTreasurePos
	m	(Z)V	t	setHasFish
		p	1	hasFish	hasFish
c	ayq$a	net/minecraft/entity/passive/DolphinEntity$DolphinMoveControl
	f	Layq;	i	dolphin
	m	(Layq;)V	<init>	<init>
		p	1	dolphin	dolphin
c	ayq$b	net/minecraft/entity/passive/DolphinEntity$LeadToNearbyTreasureGoal
	f	Layq;	a	dolphin
	f	Z	b	noPathToStructure
	m	(Layq;)V	<init>	<init>
		p	1	dolphin	dolphin
c	ayq$c	net/minecraft/entity/passive/DolphinEntity$SwimWithPlayerGoal
	f	Layq;	a	dolphin
	f	D	b	speed
	f	Lbec;	c	closestPlayer
	m	(Layq;D)V	<init>	<init>
		p	1	dolphin	dolphin
		p	2	speed	speed
c	ayq$d	net/minecraft/entity/passive/DolphinEntity$PlayWithItemsGoal
	m	(Lbki;)V	a	spitOutItem
		p	1	stack	stack
c	ayr	net/minecraft/entity/Flutterer
c	ays	net/minecraft/entity/passive/FoxEntity
	f	Ljava/util/function/Predicate;	bA	JUST_ATTACKED_SOMETHING_FILTER
	f	Ljava/util/function/Predicate;	bB	CHICKEN_AND_RABBIT_FILTER
	f	Ljava/util/function/Predicate;	bC	NOTICEABLE_PLAYER_FILTER
	f	Laug;	bD	followChickenAndRabbitGoal
	f	Laug;	bE	followBabyTurtleGoal
	f	Laug;	bF	followFishGoal
	f	F	bG	headRollProgress
	f	F	bH	lastHeadRollProgress
	f	F	bI	extraRollingHeight
	f	F	bJ	lastExtraRollingHeight
	f	I	bK	eatingTime
	f	Ltq;	bv	TYPE
	f	Ltq;	bw	FOX_FLAGS
	f	Ltq;	bx	OWNER
	f	Ltq;	by	OTHER_TRUSTED
	f	Ljava/util/function/Predicate;	bz	PICKABLE_DROP_FILTER
	m	(Lays$v;)V	a	setType
		p	1	type	type
	m	(Lays;Laoy;)Z	a	canJumpChase
		p	0	fox	fox
		p	1	chasedEntity	chasedEntity
	m	(Laok;)Lays;	b	createChild
	m	(Ljava/util/UUID;)V	b	addTrustedUuid
		p	1	uuid	uuid
	m	(Ljava/util/UUID;)Z	c	canTrust
		p	1	uuid	uuid
	m	(IZ)V	d	setFoxFlag
		p	1	mask	mask
		p	2	value	value
	m	()Lapw$a;	eL	createFoxAttributes
	m	()Lays$v;	eM	getFoxType
	m	()Z	eN	isSitting
	m	()Z	eO	isWalking
	m	()Z	eP	isChasing
	m	()Z	eW	isFullyCrouched
	m	()Z	eX	isRollingHead
	m	()V	fa	addTypeSpecificGoals
	m	()Ljava/util/List;	fb	getTrustedUuids
	m	()Z	fc	isAggressive
	m	()V	fd	stopSleeping
	m	()V	fe	stopActions
	m	()Z	ff	wantsToPickupItem
	m	(Lbki;)Z	l	canEat
		p	1	stack	stack
	m	(Lbki;)V	m	spit
		p	1	stack	stack
	m	(Lbki;)V	n	dropItem
		p	1	stack	stack
	m	(Z)V	t	setSitting
		p	1	sitting	sitting
	m	(I)Z	t	getFoxFlag
		p	1	bitmask	bitmask
	m	(Z)V	u	setChasing
		p	1	chasing	chasing
	m	(F)F	u	getHeadRoll
		p	1	tickDelta	tickDelta
	m	(Z)V	v	setCrouching
		p	1	crouching	crouching
	m	(F)F	v	getBodyRotationHeightOffset
		p	1	tickDelta	tickDelta
	m	(Z)V	w	setRollingHead
		p	1	rollingHead	rollingHead
	m	(Z)V	x	setWalking
		p	1	walking	walking
	m	(Z)V	y	setAggressive
		p	1	aggressive	aggressive
	m	(Z)V	z	setSleeping
		p	1	sleeping	sleeping
c	ays$a	net/minecraft/entity/passive/FoxEntity$DefendFriendGoal
	f	Laoy;	j	offender
	f	Laoy;	k	friend
	f	I	l	lastAttackedTime
	m	(Lays;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V	<init>	<init>
		p	2	targetEntityClass	targetEntityClass
		p	3	checkVisibility	checkVisibility
		p	4	checkCanNavigate	checkCanNavigate
		p	5	targetPredicate	targetPredicate
c	ays$b	net/minecraft/entity/passive/FoxEntity$StopWanderingGoal
	f	I	a	timer
c	ays$c	net/minecraft/entity/passive/FoxEntity$WorriableEntityFilter
	m	(Laoy;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	entity	entity
c	ays$d	net/minecraft/entity/passive/FoxEntity$CalmDownGoal
	f	Laxs;	b	WORRIABLE_ENTITY_PREDICATE
	m	()Z	g	isAtFavoredLocation
	m	()Z	h	canCalmDown
c	ays$e	net/minecraft/entity/passive/FoxEntity$MateGoal
	m	(Lays;D)V	<init>	<init>
		p	2	chance	chance
c	ays$f	net/minecraft/entity/passive/FoxEntity$EatSweetBerriesGoal
	f	I	g	timer
	m	(Lays;DII)V	<init>	<init>
		p	2	speed	speed
		p	4	range	range
		p	5	maxYDifference	maxYDifference
	m	()V	m	eatSweetBerry
c	ays$g	net/minecraft/entity/passive/FoxEntity$FoxSwimGoal
c	ays$h	net/minecraft/entity/passive/FoxEntity$FollowParentGoal
	f	Lays;	b	fox
	m	(Lays;Lays;D)V	<init>	<init>
		p	2	fox	fox
		p	3	speed	speed
c	ays$i	net/minecraft/entity/passive/FoxEntity$FoxData
	f	Lays$v;	a	type
	m	(Lays$v;)V	<init>	<init>
		p	1	type	type
c	ays$j	net/minecraft/entity/passive/FoxEntity$LookAtEntityGoal
	m	(Lays;Laoz;Ljava/lang/Class;F)V	<init>	<init>
		p	2	fox	fox
		p	3	targetType	targetType
		p	4	range	range
c	ays$k	net/minecraft/entity/passive/FoxEntity$FoxLookControl
c	ays$l	net/minecraft/entity/passive/FoxEntity$AttackGoal
	m	(Lays;DZ)V	<init>	<init>
		p	2	speed	speed
		p	4	pauseWhenIdle	pauseWhenIdle
c	ays$m	net/minecraft/entity/passive/FoxEntity$FoxMoveControl
c	ays$n	net/minecraft/entity/passive/FoxEntity$EscapeWhenNotAggressiveGoal
	m	(Lays;D)V	<init>	<init>
		p	2	speed	speed
c	ays$o	net/minecraft/entity/passive/FoxEntity$JumpChasingGoal
c	ays$p	net/minecraft/entity/passive/FoxEntity$PickupItemGoal
c	ays$q	net/minecraft/entity/passive/FoxEntity$GoToVillageGoal
	m	(Lays;II)V	<init>	<init>
		p	2	unused	unused
		p	3	searchRange	searchRange
	m	()Z	g	canGoToVillage
c	ays$r	net/minecraft/entity/passive/FoxEntity$SitDownAndLookAroundGoal
	f	D	c	lookX
	f	D	d	lookZ
	f	I	e	timer
	f	I	f	counter
	m	()V	j	chooseNewAngle
c	ays$s	net/minecraft/entity/passive/FoxEntity$AvoidDaylightGoal
	f	I	c	timer
	m	(Lays;D)V	<init>	<init>
		p	2	speed	speed
c	ays$t	net/minecraft/entity/passive/FoxEntity$DelayedCalmDownGoal
	f	I	c	timer
	m	()Z	j	canNotCalmDown
c	ays$u	net/minecraft/entity/passive/FoxEntity$MoveToHuntGoal
c	ays$v	net/minecraft/entity/passive/FoxEntity$Type
	f	[Lays$v;	c	TYPES
	f	Ljava/util/Map;	d	NAME_TYPE_MAP
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	Ljava/util/List;	g	biomes
	m	(Ljava/lang/String;IILjava/lang/String;[Lbre;)V	<init>	<init>
		p	3	id	id
		p	4	key	key
		p	5	biomes	biomes
	m	(I)Lays$v;	a	fromId
		p	0	id	id
	m	(Lbre;)Lays$v;	a	fromBiome
		p	0	biome	biome
	m	(Ljava/lang/String;)Lays$v;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/util/List;	b	getBiomes
	m	()I	c	getId
c	ayt	net/minecraft/entity/passive/IronGolemEntity
	f	Ltq;	b	IRON_GOLEM_FLAGS
	f	I	c	attackTicksLeft
	f	I	d	lookingAtVillagerTicksLeft
	m	()Layt$a;	eL	getCrack
	m	()I	eM	getAttackTicksLeft
	m	()I	eN	getLookingAtVillagerTicks
	m	()Z	eO	isPlayerCreated
	m	()F	eP	getAttackDamage
	m	()Lapw$a;	m	createIronGolemAttributes
	m	(Z)V	t	setLookingAtVillager
		p	1	lookingAtVillager	lookingAtVillager
	m	(Z)V	u	setPlayerCreated
		p	1	playerCreated	playerCreated
c	ayt$a	net/minecraft/entity/passive/IronGolemEntity$Crack
	f	Ljava/util/List;	e	VALUES
	f	F	f	maxHealthFraction
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3	maxHealthFraction	maxHealthFraction
	m	(F)Layt$a;	a	from
		p	0	healthFraction	healthFraction
c	ayu	net/minecraft/entity/passive/MooshroomEntity
	f	Ltq;	bv	TYPE
	f	Laoe;	bw	stewEffect
	f	I	bx	stewEffectDuration
	f	Ljava/util/UUID;	by	lightningId
	m	(Layu;)Layu$a;	a	chooseBabyType
		p	1	mooshroom	mooshroom
	m	(Layu$a;)V	a	setType
		p	1	type	type
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	(Laok;)Layu;	c	createChild
	m	()Layu$a;	eM	getMooshroomType
	m	(Lbki;)Ljava/util/Optional;	l	getStewEffectFrom
		p	1	flower	flower
c	ayu$a	net/minecraft/entity/passive/MooshroomEntity$Type
	f	Ljava/lang/String;	c	name
	f	Lcfj;	d	mushroom
	m	(Ljava/lang/String;ILjava/lang/String;Lcfj;)V	<init>	<init>
		p	3	name	name
		p	4	mushroom	mushroom
	m	()Lcfj;	a	getMushroomState
	m	(Ljava/lang/String;)Layu$a;	b	fromName
		p	0	name	name
c	ayv	net/minecraft/entity/passive/OcelotEntity
	f	Lbmr;	bv	TAMING_INGREDIENT
	f	Ltq;	bw	TRUSTING
	f	Layv$a;	bx	fleeGoal
	f	Layv$b;	by	temptGoal
	m	(Laok;)Layv;	b	createChild
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Lapw$a;	eL	createOcelotAttributes
	m	()V	eM	updateFleeing
	m	()Z	eN	isTrusting
	m	()F	eO	getAttackDamage
	m	(Z)V	t	setTrusting
		p	1	trusting	trusting
	m	(Z)V	u	showEmoteParticle
		p	1	positive	positive
c	ayv$a	net/minecraft/entity/passive/OcelotEntity$FleeGoal
	f	Layv;	i	ocelot
	m	(Layv;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	ocelot	ocelot
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	ayv$b	net/minecraft/entity/passive/OcelotEntity$OcelotTemptGoal
	f	Layv;	c	ocelot
	m	(Layv;DLbmr;Z)V	<init>	<init>
		p	1	ocelot	ocelot
		p	2	speed	speed
		p	4	food	food
		p	5	canBeScared	canBeScared
c	ayw	net/minecraft/entity/passive/PandaEntity
	f	Ltq;	bA	HIDDEN_GENE
	f	Ltq;	bB	PANDA_FLAGS
	f	Laxs;	bC	ASK_FOR_BAMBOO_TARGET
	f	Z	bD	shouldGetRevenge
	f	Z	bE	shouldAttack
	f	Ldem;	bF	playingJump
	f	F	bG	scaredAnimationProgress
	f	F	bH	lastScaredAnimationProgress
	f	F	bI	lieOnBackAnimationProgress
	f	F	bJ	lastLieOnBackAnimationProgress
	f	F	bK	rollOverAnimationProgress
	f	F	bL	lastRollOverAnimationProgress
	f	Layw$g;	bM	lookAtPlayerGoal
	f	Ljava/util/function/Predicate;	bN	IS_FOOD
	f	I	bv	playingTicks
	f	Ltq;	bw	ASK_FOR_BAMBOO_TICKS
	f	Ltq;	bx	SNEEZE_PROGRESS
	f	Ltq;	by	EATING_TICKS
	f	Ltq;	bz	MAIN_GENE
	m	(Layw$a;)V	a	setMainGene
		p	1	gene	gene
	m	(Layw;Layw;)V	a	initGenes
		p	1	mother	mother
		p	2	father	father
	m	(Layw$a;)V	b	setHiddenGene
		p	1	gene	gene
	m	(IZ)V	d	setPandaFlag
		p	1	mask	mask
		p	2	value	value
	m	()I	eL	getAskForBambooTicks
	m	()Z	eM	isSneezing
	m	()Z	eN	isScared
	m	()Z	eO	isLyingOnBack
	m	()Z	eP	isEating
	m	()I	eV	getSneezeProgress
	m	()Layw$a;	eW	getMainGene
	m	()Layw$a;	eX	getHiddenGene
	m	()Z	eY	isPlaying
	m	()Lapw$a;	eZ	createPandaAttributes
	m	()Layw$a;	fa	getProductGene
	m	()Z	fb	isLazy
	m	()Z	fc	isWorried
	m	()Z	fd	isPlayful
	m	()Z	ff	isWeak
	m	()Z	fg	isScaredByThunderstorm
	m	()V	fh	resetAttributes
	m	()Z	fi	isIdle
	m	()I	fl	getEatingTicks
	m	()V	fm	updateEatingAnimation
	m	()V	fn	playEatingAnimation
	m	()V	fo	updateScaredAnimation
	m	()V	fp	updateLieOnBackAnimation
	m	()V	fq	updateRollOverAnimation
	m	()V	fr	updatePlaying
	m	()V	fs	sneeze
	m	()Layw$a;	ft	getRandomGene
	m	()V	fu	stop
	m	(Lbki;)Z	l	canEat
		p	1	stack	stack
	m	(Z)V	t	setScared
		p	1	scared	scared
	m	(I)V	t	setAskForBambooTicks
		p	1	askForBambooTicks	askForBambooTicks
	m	(Z)V	u	setLyingOnBack
		p	1	lyingOnBack	lyingOnBack
	m	(I)V	u	setSneezeProgress
		p	1	sneezeProgress	sneezeProgress
	m	(F)F	u	getScaredAnimationProgress
		p	1	tickDelta	tickDelta
	m	(I)V	v	setEatingTicks
		p	1	eatingTicks	eatingTicks
	m	(F)F	v	getLieOnBackAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	v	setEating
		p	1	eating	eating
	m	(F)F	w	getRollOverAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	w	setSneezing
		p	1	sneezing	sneezing
	m	(I)Z	w	hasPandaFlag
		p	1	bitmask	bitmask
	m	(Z)V	x	setPlaying
		p	1	playing	playing
c	ayw$a	net/minecraft/entity/passive/PandaEntity$Gene
	f	[Layw$a;	h	VALUES
	f	I	i	id
	f	Ljava/lang/String;	j	name
	f	Z	k	recessive
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3	id	id
		p	4	name	name
		p	5	recessive	recessive
	m	()I	a	getId
	m	(I)Layw$a;	a	byId
		p	0	id	id
	m	(Ljava/util/Random;)Layw$a;	a	createRandom
		p	0	random	random
	m	(Ljava/lang/String;)Layw$a;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	b	getName
	m	(Layw$a;Layw$a;)Layw$a;	b	getProductGene
		p	0	mainGene	mainGene
		p	1	hiddenGene	hiddenGene
	m	()Z	c	isRecessive
c	ayw$b	net/minecraft/entity/passive/PandaEntity$AttackGoal
	f	Layw;	b	panda
	m	(Layw;DZ)V	<init>	<init>
		p	1	panda	panda
		p	2	speed	speed
		p	4	pauseWhenMobIdle	pauseWhenMobIdle
c	ayw$c	net/minecraft/entity/passive/PandaEntity$PandaFleeGoal
	f	Layw;	i	panda
	m	(Layw;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	panda	panda
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	ayw$d	net/minecraft/entity/passive/PandaEntity$PandaMateGoal
	f	Layw;	e	panda
	f	I	f	nextAskPlayerForBambooAge
	m	(Layw;Layw;D)V	<init>	<init>
		p	2	panda	panda
		p	3	chance	chance
	m	()Z	h	isBambooClose
c	ayw$e	net/minecraft/entity/passive/PandaEntity$PandaRevengeGoal
	f	Layw;	a	panda
	m	(Layw;[Ljava/lang/Class;)V	<init>	<init>
		p	1	panda	panda
		p	2	noRevengeTypes	noRevengeTypes
c	ayw$f	net/minecraft/entity/passive/PandaEntity$LieOnBackGoal
	f	Layw;	a	panda
	f	I	b	nextLieOnBackAge
	m	(Layw;)V	<init>	<init>
		p	1	panda	panda
c	ayw$g	net/minecraft/entity/passive/PandaEntity$LookAtEntityGoal
	f	Layw;	g	panda
	m	(Layw;Ljava/lang/Class;F)V	<init>	<init>
		p	1	panda	panda
		p	2	targetType	targetType
		p	3	range	range
	m	(Laoy;)V	a	setTarget
		p	1	target	target
c	ayw$h	net/minecraft/entity/passive/PandaEntity$PandaMoveControl
	f	Layw;	i	panda
	m	(Layw;)V	<init>	<init>
		p	1	panda	panda
c	ayw$i	net/minecraft/entity/passive/PandaEntity$ExtinguishFireGoal
	f	Layw;	g	panda
	m	(Layw;D)V	<init>	<init>
		p	1	panda	panda
		p	2	speed	speed
c	ayw$j	net/minecraft/entity/passive/PandaEntity$PlayGoal
	f	Layw;	a	panda
	m	(Layw;)V	<init>	<init>
		p	1	panda	panda
c	ayw$k	net/minecraft/entity/passive/PandaEntity$PickUpFoodGoal
	f	I	b	startAge
c	ayw$l	net/minecraft/entity/passive/PandaEntity$SneezeGoal
	f	Layw;	a	panda
	m	(Layw;)V	<init>	<init>
		p	1	panda	panda
c	ayx	net/minecraft/entity/passive/ParrotEntity
	f	F	bA	prevFlapProgress
	f	Ltq;	bB	ATTR_VARIANT
	f	Ljava/util/function/Predicate;	bC	CAN_IMITATE
	f	Lbke;	bD	COOKIE
	f	Ljava/util/Set;	bE	TAMING_INGREDIENTS
	f	Ljava/util/Map;	bF	MOB_SOUNDS
	f	F	bG	flapSpeed
	f	Z	bH	songPlaying
	f	Lfu;	bI	songSource
	f	F	bx	flapProgress
	f	F	by	maxWingDeviation
	f	F	bz	prevMaxWingDeviation
	m	(Lbqb;Ljava/util/Random;)Lack;	a	getRandomSound
		p	0	world	world
	m	(Lbqb;Laom;)Z	a	imitateNearbyMob
		p	0	world	world
		p	1	parrot	parrot
	m	(Ljava/util/Random;)F	a	getSoundPitch
		p	0	random	random
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	(Laoq;)Lack;	c	getSound
		p	0	imitate	imitate
	m	()Lapw$a;	eV	createParrotAttributes
	m	()Z	eW	getSongPlaying
	m	()I	eX	getVariant
	m	()V	fa	flapWings
	m	()Z	fb	isInAir
	m	(I)V	t	setVariant
		p	1	variant	variant
c	ayx$1	net/minecraft/entity/passive/ParrotEntity$1
	m	(Laoz;)Z	a	test
c	ayy	net/minecraft/entity/passive/PigEntity
	f	Ltq;	bv	SADDLED
	f	Ltq;	bw	BOOST_TIME
	f	Lbmr;	bx	BREEDING_INGREDIENT
	f	Laov;	by	saddledComponent
	m	(Laok;)Layy;	b	createChild
	m	()Lapw$a;	eL	createPigAttributes
c	ayz	net/minecraft/entity/passive/PolarBearEntity
	f	I	bA	angerTime
	f	Ljava/util/UUID;	bB	targetUuid
	f	Ltq;	bv	WARNING
	f	F	bw	lastWarningAnimationProgress
	f	F	bx	warningAnimationProgress
	f	I	by	warningSoundCooldown
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Lapw$a;	eL	createPolarBearAttributes
	m	()V	eM	playWarningSound
	m	()Z	eN	isWarning
	m	(Z)V	t	setWarning
		p	1	warning	warning
	m	(F)F	u	getWarningAnimationProgress
		p	1	tickDelta	tickDelta
c	ayz$a	net/minecraft/entity/passive/PolarBearEntity$FollowPlayersGoal
c	ayz$b	net/minecraft/entity/passive/PolarBearEntity$PolarBearRevengeGoal
c	ayz$c	net/minecraft/entity/passive/PolarBearEntity$AttackGoal
c	ayz$d	net/minecraft/entity/passive/PolarBearEntity$PolarBearEscapeDangerGoal
c	az	net/minecraft/predicate/item/EnchantmentPredicate
	f	Laz;	a	ANY
	f	[Laz;	b	ARRAY_OF_ANY
	f	Lbnw;	c	enchantment
	f	Lbx$d;	d	levels
	m	(Lbnw;Lbx$d;)V	<init>	<init>
		p	1	enchantment	enchantment
		p	2	levels	levels
	m	(Lcom/google/gson/JsonElement;)Laz;	a	deserialize
		p	0	el	el
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/util/Map;)Z	a	test
	m	(Lcom/google/gson/JsonElement;)[Laz;	b	deserializeAll
		p	0	el	el
c	aza	net/minecraft/entity/passive/PufferfishEntity
	f	Ltq;	b	PUFF_STATE
	f	Ljava/util/function/Predicate;	bv	BLOW_UP_FILTER
	f	I	c	inflateTicks
	f	I	d	deflateTicks
	m	(Laoz;)V	a	sting
		p	1	mob	mob
	m	(I)V	b	setPuffState
		p	1	puffState	puffState
	m	()I	eO	getPuffState
	m	(I)F	s	getScaleForPuffState
		p	0	puffState	puffState
c	aza$a	net/minecraft/entity/passive/PufferfishEntity$InflateGoal
	f	Laza;	a	pufferfish
	m	(Laza;)V	<init>	<init>
		p	1	pufferfish	pufferfish
c	azb	net/minecraft/entity/passive/RabbitEntity
	f	I	bA	ticksUntilJump
	f	I	bB	moreCarrotTicks
	f	Ltq;	bv	RABBIT_TYPE
	f	Luh;	bw	KILLER_BUNNY
	f	I	bx	jumpTicks
	f	I	by	jumpDuration
	f	Z	bz	lastOnGround
	m	(Lbqc;)I	a	chooseType
		p	1	world	world
	m	(Laok;)Lazb;	b	createChild
	m	(Lbke;)Z	b	isBreedingItem
		p	1	item	item
	m	(DD)V	b	lookTowards
		p	1	x	x
		p	3	z	z
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	entity	entity
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
	m	()V	eL	startJump
	m	()Lapw$a;	eM	createRabbitAttributes
	m	()Lack;	eN	getJumpSound
	m	()I	eO	getRabbitType
	m	()V	eW	doScheduleJump
	m	()V	eX	scheduleJump
	m	()Z	eY	wantsCarrots
	m	(D)V	i	setSpeed
		p	1	speed	speed
	m	(I)V	t	setRabbitType
		p	1	rabbitType	rabbitType
	m	(F)F	u	getJumpProgress
		p	1	delta	delta
c	azb$a	net/minecraft/entity/passive/RabbitEntity$RabbitAttackGoal
	m	(Lazb;)V	<init>	<init>
		p	1	rabbit	rabbit
c	azb$b	net/minecraft/entity/passive/RabbitEntity$FleeGoal
	f	Lazb;	i	rabbit
	m	(Lazb;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	rabbit	rabbit
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	azb$c	net/minecraft/entity/passive/RabbitEntity$RabbitData
	f	I	a	type
	m	(I)V	<init>	<init>
		p	1	type	type
c	azb$d	net/minecraft/entity/passive/RabbitEntity$RabbitJumpControl
	f	Lazb;	c	rabbit
	m	(Lazb;Lazb;)V	<init>	<init>
		p	2	rabbit	rabbit
	m	()Z	c	isActive
c	azb$e	net/minecraft/entity/passive/RabbitEntity$RabbitMoveControl
	f	Lazb;	i	rabbit
	f	D	j	rabbitSpeed
	m	(Lazb;)V	<init>	<init>
		p	1	owner	owner
c	azb$f	net/minecraft/entity/passive/RabbitEntity$EscapeDangerGoal
	f	Lazb;	g	rabbit
	m	(Lazb;D)V	<init>	<init>
		p	1	rabbit	rabbit
		p	2	speed	speed
c	azb$g	net/minecraft/entity/passive/RabbitEntity$EatCarrotCropGoal
	f	Lazb;	g	rabbit
	f	Z	h	wantsCarrots
	f	Z	i	hasTarget
	m	(Lazb;)V	<init>	<init>
		p	1	rabbit	rabbit
c	azc	net/minecraft/entity/passive/SalmonEntity
c	azd	net/minecraft/entity/passive/SheepEntity
	f	Ltq;	bv	COLOR
	f	Ljava/util/Map;	bw	DROPS
	f	Ljava/util/Map;	bx	COLORS
	f	I	by	eatGrassTimer
	f	Laty;	bz	eatGrassGoal
	m	(Layk;Layk;)Lbje;	a	getChildColor
		p	1	firstParent	firstParent
		p	2	secondParent	secondParent
	m	(Lbje;)[F	a	getRgbColor
		p	0	dyeColor	dyeColor
	m	(Ljava/util/Random;)Lbje;	a	generateDefaultColor
	m	(Lbje;Lbje;)Lbgu;	a	createDyeMixingCraftingInventory
		p	0	firstColor	firstColor
		p	1	secondColor	secondColor
	m	(Lbje;)V	b	setColor
		p	1	color	color
	m	(Laok;)Lazd;	b	createChild
	m	(Lbje;)[F	c	getDyedColor
		p	0	color	color
	m	()Lapw$a;	eL	createSheepAttributes
	m	()Lbje;	eM	getColor
	m	()Z	eN	isSheared
	m	(Z)V	t	setSheared
		p	1	sheared	sheared
	m	(F)F	u	getNeckAngle
		p	1	delta	delta
	m	(F)F	v	getHeadAngle
		p	1	delta	delta
c	aze	net/minecraft/entity/passive/TameableShoulderEntity
	f	I	bx	ticks
	m	(Lze;)Z	d	mountOnto
		p	1	player	player
	m	()Z	eZ	isReadyToSitOnPlayer
c	azf	net/minecraft/entity/passive/SnowGolemEntity
	f	Ltq;	b	SNOW_GOLEM_FLAGS
	m	()Z	eL	hasPumpkin
	m	()Lapw$a;	m	createSnowGolemAttributes
	m	(Z)V	t	setHasPumpkin
		p	1	hasPumpkin	hasPumpkin
c	azg	net/minecraft/entity/passive/SquidEntity
	f	F	bA	constantVelocityRate
	f	F	bD	constantVelocityX
	f	F	bE	constantVelocityY
	f	F	bF	constantVelocityZ
	m	(FFF)V	a	setConstantVelocity
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Z	eL	hasConstantVelocity
	m	()V	eM	squirt
	m	()Lapw$a;	m	createSquidAttributes
c	azg$a	net/minecraft/entity/passive/SquidEntity$EscapeAttackerGoal
	f	I	b	timer
c	azg$b	net/minecraft/entity/passive/SquidEntity$SwimGoal
	f	Lazg;	b	squid
	m	(Lazg;Lazg;)V	<init>	<init>
		p	2	squid	squid
c	azh	net/minecraft/entity/passive/TropicalFishEntity
	f	[I	b	COMMON_VARIANTS
	f	[Luh;	bv	SMALL_FISH_VARIETY_IDS
	f	[Luh;	bw	LARGE_FISH_VARIETY_IDS
	f	Z	bx	commonSpawn
	f	Ltq;	c	VARIANT
	f	[Luh;	d	SHAPE_IDS
	m	(Lazh$a;Lbje;Lbje;)I	a	toVariant
		p	0	variety	variety
		p	1	baseColor	baseColor
		p	2	patternColor	patternColor
	m	(I)Ljava/lang/String;	b	getToolTipForVariant
		p	0	variant	variant
	m	()I	eV	getVariant
	m	()[F	eW	getBaseColorComponents
	m	()[F	eX	getPatternColorComponents
	m	()I	eY	getShape
	m	()Luh;	eZ	getVarietyId
	m	()Luh;	fa	getShapeId
	m	(I)Lbje;	s	getBaseDyeColor
		p	0	variant	variant
	m	(I)Lbje;	t	getPatternDyeColor
		p	0	variant	variant
	m	(I)Ljava/lang/String;	u	getTranslationKey
		p	0	variant	variant
	m	(I)V	v	setVariant
		p	1	variant	variant
	m	(I)I	w	getShape
		p	0	variant	variant
	m	(I)I	x	getBaseDyeColorIndex
		p	0	variant	variant
	m	(I)I	y	getPatternDyeColorIndex
		p	0	variant	variant
	m	(I)I	z	getPattern
		p	0	variant	variant
c	azh$a	net/minecraft/entity/passive/TropicalFishEntity$Variety
	f	I	m	shape
	f	I	n	pattern
	f	[Lazh$a;	o	VALUES
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3	shape	shape
		p	4	pattern	pattern
	m	(II)Ljava/lang/String;	a	getTranslateKey
		p	0	shape	shape
		p	1	pattern	pattern
	m	()I	a	getShape
	m	()I	b	getPattern
	m	()Ljava/lang/String;	c	getTranslationKey
c	azh$b	net/minecraft/entity/passive/TropicalFishEntity$TropicalFishData
	f	I	b	shape
	f	I	c	pattern
	f	I	d	baseColor
	f	I	e	patternColor
	m	(Lazh;IIII)V	<init>	<init>
		p	1	leader	leader
		p	2	shape	shape
		p	3	pattern	pattern
		p	4	baseColor	baseColor
		p	5	patternColor	patternColor
c	azi	net/minecraft/entity/passive/TurtleEntity
	f	Ltq;	bA	LAND_BOUND
	f	Ltq;	bB	ACTIVELY_TRAVELLING
	f	I	bC	sandDiggingCounter
	f	Ljava/util/function/Predicate;	bv	BABY_TURTLE_ON_LAND_FILTER
	f	Ltq;	bw	HOME_POS
	f	Ltq;	bx	HAS_EGG
	f	Ltq;	by	DIGGING_SAND
	f	Ltq;	bz	TRAVEL_POS
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Z	eL	hasEgg
	m	()Z	eM	isDiggingSand
	m	()Lapw$a;	eN	createTurtleAttributes
	m	()Lfu;	eO	getHomePos
	m	()Lfu;	eP	getTravelPos
	m	()Z	eV	isLandBound
	m	()Z	eW	isActivelyTravelling
	m	(Lfu;)V	g	setHomePos
		p	1	pos	pos
	m	(Lfu;)V	h	setTravelPos
		p	1	pos	pos
	m	(Z)V	t	setHasEgg
		p	1	hasEgg	hasEgg
	m	(Z)V	u	setDiggingSand
		p	1	diggingSand	diggingSand
	m	(Z)V	v	setLandBound
		p	1	landBound	landBound
	m	(Z)V	w	setActivelyTravelling
		p	1	travelling	travelling
c	azi$a	net/minecraft/entity/passive/TurtleEntity$MateGoal
	f	Lazi;	d	turtle
	m	(Lazi;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	azi$b	net/minecraft/entity/passive/TurtleEntity$GoHomeGoal
	f	Lazi;	a	turtle
	f	D	b	speed
	f	Z	c	noPath
	f	I	d	homeReachingTryTicks
	m	(Lazi;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	azi$c	net/minecraft/entity/passive/TurtleEntity$WanderInWaterGoal
	f	Lazi;	g	turtle
	m	(Lazi;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	azi$d	net/minecraft/entity/passive/TurtleEntity$LayEggGoal
	f	Lazi;	g	turtle
	m	(Lazi;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	azi$e	net/minecraft/entity/passive/TurtleEntity$TurtleMoveControl
	f	Lazi;	i	turtle
	m	(Lazi;)V	<init>	<init>
		p	1	turtle	turtle
	m	()V	g	updateVelocity
c	azi$f	net/minecraft/entity/passive/TurtleEntity$TurtleEscapeDangerGoal
	m	(Lazi;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	azi$g	net/minecraft/entity/passive/TurtleEntity$TurtleSwimNavigation
	m	(Lazi;Lbqb;)V	<init>	<init>
		p	1	owner	owner
		p	2	world	world
c	azi$h	net/minecraft/entity/passive/TurtleEntity$WanderOnLandGoal
	f	Lazi;	h	turtle
	m	(Lazi;DI)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
		p	4	chance	chance
c	azi$i	net/minecraft/entity/passive/TurtleEntity$ApproachFoodHoldingPlayerGoal
	f	Laxs;	a	CLOSE_ENTITY_PREDICATE
	f	Lazi;	b	turtle
	f	D	c	speed
	f	Lbec;	d	targetPlayer
	f	I	e	cooldown
	f	Ljava/util/Set;	f	attractiveItems
	m	(Lazi;DLbke;)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
		p	4	attractiveItem	attractiveItem
	m	(Lbki;)Z	a	isAttractive
		p	1	stack	stack
c	azi$j	net/minecraft/entity/passive/TurtleEntity$TravelGoal
	f	Lazi;	a	turtle
	f	D	b	speed
	f	Z	c	noPath
	m	(Lazi;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	azj	net/minecraft/entity/mob/WaterCreatureEntity
	m	(I)V	a	tickWaterBreathingAir
		p	1	air	air
c	azk	net/minecraft/entity/passive/WolfEntity
	f	Ltq;	bA	ANGER_TIME
	f	F	bB	begAnimationProgress
	f	F	bC	lastBegAnimationProgress
	f	Z	bD	furWet
	f	Z	bE	canShakeWaterOff
	f	F	bF	shakeProgress
	f	F	bG	lastShakeProgress
	f	Ladx;	bH	ANGER_TIME_RANGE
	f	Ljava/util/UUID;	bI	targetUuid
	f	Ljava/util/function/Predicate;	bx	FOLLOW_TAMED_PREDICATE
	f	Ltq;	by	BEGGING
	f	Ltq;	bz	COLLAR_COLOR
	m	(Lbje;)V	a	setCollarColor
		p	1	color	color
	m	(Laok;)Lazk;	b	createChild
	m	()Lapw$a;	eV	createWolfAttributes
	m	()Z	eW	isFurWet
		c	Returns whether this wolf's fur is wet.\n<p>\nThe wolf's fur will remain wet until the wolf shakes.
	m	()F	eX	getTailAngle
	m	()Lbje;	eY	getCollarColor
	m	()Z	eZ	isBegging
	m	(FF)F	g	getShakeAnimationProgress
		p	1	tickDelta	tickDelta
	m	(F)F	u	getFurWetBrightnessMultiplier
		c	Returns this wolf's brightness multiplier based on the fur wetness.\n<p>\nThe brightness multiplier represents how much darker the wolf gets while its fur is wet. The multiplier changes (from 0.75 to 1.0 incrementally) when a wolf shakes.\n\n@param tickDelta Progress for linearly interpolating between the previous and current game state.\n@return Brightness as a float value between 0.75 and 1.0.\n@see net.minecraft.client.render.entity.model.TintableAnimalModel#setColorMultiplier(float, float, float)
		p	1	tickDelta	tickDelta
	m	(F)F	v	getBegAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	x	setBegging
		p	1	begging	begging
c	azk$a	net/minecraft/entity/passive/WolfEntity$AvoidLlamaGoal
	f	Lazk;	j	wolf
	m	(Lazk;Lazk;Ljava/lang/Class;FDD)V	<init>	<init>
		p	2	wolf	wolf
		p	3	fleeFromType	fleeFromType
		p	4	distance	distance
		p	5	slowSpeed	slowSpeed
		p	7	fastSpeed	fastSpeed
	m	(Lazp;)Z	a	isScaredOf
		p	1	llama	llama
c	azl	net/minecraft/entity/passive/AbstractDonkeyEntity
	f	Ltq;	bD	CHEST
	m	()Lapw$a;	eM	createAbstractDonkeyAttributes
	m	()Z	eN	hasChest
	m	()V	eP	playAddChestSound
	m	()I	eV	getInventoryColumns
	m	(Z)V	t	setHasChest
		p	1	hasChest	hasChest
c	azm	net/minecraft/entity/passive/HorseBaseEntity
	f	F	bA	jumpStrength
	f	Z	bB	playExtraHorseSounds
	f	I	bC	soundTicks
	f	Ljava/util/function/Predicate;	bD	IS_BRED_HORSE
	f	Laxs;	bE	PARENT_HORSE_PREDICATE
	f	Ltq;	bG	HORSE_FLAGS
	f	Ltq;	bH	OWNER_UUID
	f	I	bI	eatingGrassTicks
	f	I	bJ	eatingTicks
	f	I	bK	angryTicks
	f	Z	bL	jumping
	f	F	bM	eatingGrassAnimationProgress
	f	F	bN	lastEatingGrassAnimationProgress
	f	F	bO	angryAnimationProgress
	f	F	bP	lastAngryAnimationProgress
	f	F	bQ	eatingAnimationProgress
	f	F	bR	lastEatingAnimationProgress
	f	I	bv	tailWagTicks
	f	Z	bx	inAir
	f	Lanm;	by	items
	f	I	bz	temper
	m	(Laok;Lazm;)V	a	setChildAttributes
		p	1	mate	mate
		p	2	child	child
	m	(Lcbh;)V	a	playWalkSound
		p	1	group	group
	m	(Ljava/util/UUID;)V	b	setOwnerUuid
		p	1	uuid	uuid
	m	(Lbec;Lbki;)Z	c	receiveFood
		p	1	player	player
		p	2	item	item
	m	(IZ)V	d	setHorseFlag
		p	1	bitmask	bitmask
		p	2	flag	flag
	m	()V	eL	initAttributes
	m	()V	eM	playEatingAnimation
	m	()V	eN	wagTail
	m	()I	eO	getInventorySize
	m	()V	eP	setEating
	m	()V	eV	updateAnger
	m	()V	eW	initCustomGoals
	m	()Z	eX	isTame
	m	()Ljava/util/UUID;	eY	getOwnerUuid
	m	()Z	eZ	isInAir
	m	(Lbec;)V	f	openInventory
		p	1	player	player
	m	()Z	fa	isEatingGrass
	m	()Z	fb	isAngry
	m	()Z	fc	isBred
	m	()I	fd	getTemper
	m	()V	fe	onChestedStatusChanged
	m	()V	ff	updateSaddle
	m	()D	fg	getJumpStrength
	m	()Lack;	fh	getEatSound
	m	()Lack;	fi	getAngrySound
	m	()Lapw$a;	fj	createBaseHorseAttributes
	m	()I	fk	getMaxTemper
	m	()V	fl	walkToParent
	m	()Z	fm	eatsGrass
	m	()V	fn	playAngrySound
	m	()V	fo	playJumpSound
	m	()Z	fp	canBreed
	m	()F	fq	getChildHealthBonus
	m	()D	fr	getChildJumpStrengthBonus
	m	()D	fs	getChildMovementSpeedBonus
	m	()Z	ft	canEquip
	m	()Z	fu	setSaddled
	m	(Lbec;)V	h	putPlayerOnBack
		p	1	player	player
	m	(Lbec;)Z	i	bondWithPlayer
		p	1	player	player
	m	(Lbki;)Z	l	canEquip
		p	1	item	item
	m	(I)Z	t	getHorseFlag
		p	1	bitmask	bitmask
	m	(F)F	u	getEatingGrassAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	u	setTame
		p	1	tame	tame
	m	(I)V	u	setTemper
		p	1	temper	temper
	m	(Z)V	v	setInAir
		p	1	inAir	inAir
	m	(I)I	v	addTemper
		p	1	difference	difference
	m	(F)F	v	getAngryAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	w	setBred
		p	1	bred	bred
	m	(F)F	w	getEatingAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	x	setEatingGrass
		p	1	eatingGrass	eatingGrass
	m	(Z)V	y	setAngry
		p	1	angry	angry
	m	(Z)V	z	spawnPlayerReactionParticles
		p	1	positive	positive
c	azn	net/minecraft/entity/passive/DonkeyEntity
c	azo	net/minecraft/entity/passive/HorseEntity
	f	Ljava/util/UUID;	bD	HORSE_ARMOR_BONUS_ID
	f	Ltq;	bE	VARIANT
	m	(Lazv;Lazq;)V	a	setVariant
		p	1	color	color
		p	2	marking	marking
	m	()Lbki;	eM	getArmorType
	m	()Lazv;	eN	getColor
	m	()Lazq;	eP	getMarking
	m	()I	eV	getVariant
	m	(Lbki;)V	m	equipArmor
		p	1	stack	stack
	m	(Lbki;)V	n	setArmorTypeFromStack
		p	1	stack	stack
	m	(I)V	w	setVariant
		p	1	variant	variant
c	azo$a	net/minecraft/entity/passive/HorseEntity$HorseData
	f	Lazv;	a	color
	m	(Lazv;)V	<init>	<init>
		p	1	color	color
c	azp	net/minecraft/entity/passive/LlamaEntity
	f	Ltq;	bE	ATTR_STRENGTH
	f	Ltq;	bF	CARPET_COLOR
	f	Ltq;	bG	ATTR_VARIANT
	f	Z	bH	spit
	f	Lazp;	bI	following
	f	Lazp;	bJ	follower
	m	(Z)V	A	setSpit
		p	1	spit	spit
	m	(Lazp;)V	a	follow
		p	1	llama	llama
	m	(Lbje;)V	a	setCarpetColor
		p	1	color	color
	m	(Laok;)Lazp;	b	createChild
	m	()Lazp;	fA	createChild
	m	()V	fB	stopFollowing
	m	()Z	fC	hasFollower
	m	()Z	fD	isFollowing
	m	()Lazp;	fE	getFollowing
	m	()V	fF	initializeStrength
	m	()Z	fv	isTrader
	m	()I	fw	getStrength
	m	()Lapw$a;	fx	createLlamaAttributes
	m	()I	fy	getVariant
	m	()Lbje;	fz	getCarpetColor
	m	(Laoy;)V	j	spitAt
		p	1	target	target
	m	(Lbki;)Lbje;	m	getColorFromCarpet
		p	0	color	color
	m	(I)V	w	setVariant
		p	1	variant	variant
	m	(I)V	x	setStrength
		p	1	strength	strength
c	azp$a	net/minecraft/entity/passive/LlamaEntity$ChaseWolvesGoal
	m	(Lazp;)V	<init>	<init>
		p	1	llama	llama
c	azp$b	net/minecraft/entity/passive/LlamaEntity$LlamaData
	f	I	a	variant
	m	(I)V	<init>	<init>
		p	1	variant	variant
c	azp$c	net/minecraft/entity/passive/LlamaEntity$SpitRevengeGoal
	m	(Lazp;)V	<init>	<init>
		p	1	llama	llama
c	azq	net/minecraft/entity/passive/HorseMarking
	f	[Lazq;	f	VALUES
	f	I	g	index
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	index	index
	m	()I	a	getIndex
	m	(I)Lazq;	a	byIndex
		p	0	index	index
c	azr	net/minecraft/entity/passive/MuleEntity
c	azs	net/minecraft/entity/mob/SkeletonHorseEntity
	f	Lazt;	bD	trapTriggerGoal
	f	Z	bE	trapped
	f	I	bF	trapTime
	m	()Lapw$a;	eM	createSkeletonHorseAttributes
	m	()Z	eN	isTrapped
	m	(Z)V	t	setTrapped
		p	1	trapped	trapped
c	azt	net/minecraft/entity/ai/goal/SkeletonHorseTrapTriggerGoal
	f	Lazs;	a	skeletonHorse
	m	(Lazs;)V	<init>	<init>
		p	1	skeletonHorse	skeletonHorse
	m	(Lane;)Lazm;	a	getHorse
		p	1	localDifficulty	localDifficulty
	m	(Lane;Lazm;)Lbcj;	a	getSkeleton
		p	1	localDifficulty	localDifficulty
		p	2	vehicle	vehicle
c	azu	net/minecraft/entity/passive/TraderLlamaEntity
	f	I	bD	despawnDelay
	m	()V	fF	tryDespawn
	m	()Z	fG	canDespawn
	m	()Z	fH	heldByTrader
	m	()Z	fI	leashedByPlayer
c	azu$a	net/minecraft/entity/passive/TraderLlamaEntity$DefendTraderGoal
	f	Lazp;	b	llama
	f	Laoy;	c	offender
	f	I	d	traderLastAttackedTime
	m	(Lazu;Lazp;)V	<init>	<init>
		p	2	llama	llama
c	azv	net/minecraft/entity/passive/HorseColor
	f	[Lazv;	h	VALUES
	f	I	i	index
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	index	index
	m	()I	a	getIndex
	m	(I)Lazv;	a	byIndex
		p	0	index	index
c	azw	net/minecraft/entity/mob/ZombieHorseEntity
	m	()Lapw$a;	eM	createZombieHorseAttributes
c	b	net/minecraft/util/math/Matrix4f
	f	F	a	a00
	f	F	b	a01
	f	F	c	a02
	f	F	d	a03
	f	F	e	a10
	f	F	f	a11
	f	F	g	a12
	f	F	h	a13
	f	F	i	a20
	f	F	j	a21
	f	F	k	a22
	f	F	l	a23
	f	F	m	a30
	f	F	n	a31
	f	F	o	a32
	f	F	p	a33
	m	(Ld;)V	<init>	<init>
		p	1	quaternion	quaternion
	m	(Lb;)V	<init>	<init>
		p	1	source	source
	m	(Ld;)V	a	multiply
		p	1	quaternion	quaternion
	m	(F)V	a	multiply
		p	1	scalar	scalar
	m	(Lg;)V	a	addToLastColumn
		p	1	vector	vector
	m	(FFFF)Lb;	a	projectionMatrix
		p	0	width	width
		p	1	height	height
		p	2	nearPlane	nearPlane
		p	3	farPlane	farPlane
	m	(Ljava/nio/FloatBuffer;)V	a	writeToBuffer
	m	(DFFF)Lb;	a	viewboxMatrix
		p	0	fov	fov
		p	2	aspectRatio	aspectRatio
		p	3	cameraDepth	cameraDepth
		p	4	viewDistance	viewDistance
	m	()V	a	loadIdentity
	m	(II)I	a	pack
		p	0	x	x
		p	1	y	y
	m	(FFF)Lb;	a	scale
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lb;)V	a	multiply
		p	1	matrix	matrix
	m	()F	b	determinantAndAdjugate
	m	(FFF)Lb;	b	translate
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	()Z	c	invert
	m	()Lb;	d	copy
	m	()V	e	transpose
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ba	net/minecraft/advancement/criterion/EnterBlockCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbvr;	a	getBlock
		p	0	obj	obj
	m	(Lbvr;Ljava/lang/String;)V	a	method_22464
		p	1	name	name
	m	(Lze;Lcfj;)V	a	trigger
		p	1	player	player
		p	2	state	state
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lba$a;	a	conditionsFromJson
c	ba$a	net/minecraft/advancement/criterion/EnterBlockCriterion$Conditions
	f	Lbvr;	a	block
	f	Lck;	b	state
	m	(Lbe$b;Lbvr;Lck;)V	<init>	<init>
		p	1	player	player
		p	2	block	block
		p	3	state	state
	m	(Lcfj;)Z	a	matches
		p	1	state	state
	m	(Lbvr;)Lba$a;	a	block
		p	0	block	block
c	baa	net/minecraft/entity/boss/dragon/EnderDragonPart
	f	Lbac;	b	owner
	f	Ljava/lang/String;	c	name
	f	Laon;	d	partDimensions
	m	(Lbac;Ljava/lang/String;FF)V	<init>	<init>
		p	1	owner	owner
		p	2	name	name
		p	3	width	width
		p	4	height	height
c	bab	net/minecraft/entity/decoration/EndCrystalEntity
	f	I	b	endCrystalAge
	f	Ltq;	c	BEAM_TARGET
	f	Ltq;	d	SHOW_BOTTOM
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lanw;)V	a	crystalDestroyed
		p	1	source	source
	m	(Lfu;)V	a	setBeamTarget
		p	1	beamTarget	beamTarget
	m	(Z)V	a	setShowBottom
		p	1	showBottom	showBottom
	m	()Lfu;	g	getBeamTarget
	m	()Z	h	getShowBottom
c	bac	net/minecraft/entity/boss/dragon/EnderDragonEntity
	f	Ltq;	b	PHASE_TYPE
	f	Lbab;	bB	connectedCrystal
	f	Lorg/apache/logging/log4j/Logger;	bC	LOGGER
	f	Laxs;	bD	CLOSE_PLAYER_PREDICATE
	f	[Lbaa;	bE	parts
	f	Lbaa;	bF	partNeck
	f	Lbaa;	bG	partBody
	f	Lbaa;	bH	partTail1
	f	Lbaa;	bI	partTail2
	f	Lbaa;	bJ	partTail3
	f	Lbaa;	bK	partWingRight
	f	Lbaa;	bL	partWingLeft
	f	Lcii;	bM	fight
	f	Lbat;	bN	phaseManager
	f	I	bO	ticksUntilNextGrowl
	f	[Lczd;	bQ	pathNodes
		c	The first 12 path nodes are used for end crystals; the others are not tied to them.
	f	[I	bR	pathNodeConnections
		c	An array of 24 bitflags, where node #i leads to #j if and only if\n{@code (pathNodeConnections[i] & (1 << j)) != 0}.
	f	Lcza;	bS	pathHeap
	f	Lbaa;	bv	partHead
	f	F	bw	prevWingPosition
	f	F	bx	wingPosition
	f	Z	by	slowedDownByBlock
	f	I	bz	ticksSinceDeath
	f	[[D	c	segmentCircularBuffer
		c	(yaw, y, ?)
	f	I	d	latestSegment
	m	(Ljava/util/List;)V	a	launchLivingEntities
		p	1	entities	entities
	m	(I[D[D)F	a	method_6823
		p	1	segmentOffset	segmentOffset
		p	2	segment1	segment1
		p	3	segment2	segment2
	m	(IF)[D	a	getSegmentProperties
		p	1	segmentNumber	segmentNumber
		p	2	tickDelta	tickDelta
	m	(Lbaa;Lanw;F)Z	a	damagePart
		p	1	part	part
		p	2	source	source
		p	3	amount	amount
	m	(Lbab;Lfu;Lanw;)V	a	crystalDestroyed
		p	1	crystal	crystal
		p	2	pos	pos
		p	3	source	source
	m	(IILczd;)Lczf;	a	findPath
		p	1	from	from
		p	2	to	to
	m	(I)V	a	awardExperience
		p	1	amount	amount
	m	(Lczd;Lczd;)Lczf;	a	getPathOfAllPredecessors
		p	1	unused	unused
		p	2	node	node
	m	(Lbaa;DDD)V	a	movePart
		p	2	dx	dx
		p	4	dy	dy
		p	6	dz	dz
	m	(Ldeg;)Z	b	destroyBlocks
	m	(Ljava/util/List;)V	b	damageLivingEntities
		p	1	entities	entities
	m	()I	eJ	getNearestPathNodeIndex
	m	()[Lbaa;	eK	getBodyParts
	m	()Lbat;	eL	getPhaseManager
	m	()Lcii;	eM	getFight
	m	()V	eO	tickWithEndCrystals
		c	Things to do every tick related to end crystals. The Ender Dragon:\n\n* Disconnects from its crystal if it is removed\n* If it is connected to a crystal, then heals every 10 ticks\n* With a 1 in 10 chance each tick, searches for the nearest crystal and connects to it if present
	m	(Lanw;F)Z	f	parentDamage
		p	1	source	source
		p	2	amount	amount
	m	(D)F	i	wrapYawChange
		p	1	yawDegrees	yawDegrees
	m	()Lapw$a;	m	createEnderDragonAttributes
	m	(DDD)I	o	getNearestPathNodeIndex
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(F)Ldem;	t	method_6834
		p	1	tickDelta	tickDelta
c	bae	net/minecraft/entity/boss/dragon/phase/AbstractPhase
	f	Lbac;	a	dragon
	m	(Lbac;)V	<init>	<init>
		p	1	dragon	dragon
c	baf	net/minecraft/entity/boss/dragon/phase/AbstractSittingPhase
c	bag	net/minecraft/entity/boss/dragon/phase/ChargingPlayerPhase
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ldem;	c	target
	m	(Ldem;)V	a	setTarget
		p	1	target	target
c	bah	net/minecraft/entity/boss/dragon/phase/DyingPhase
	f	Ldem;	b	target
	f	I	c	ticks
c	bai	net/minecraft/entity/boss/dragon/phase/HoldingPatternPhase
	f	Laxs;	b	PLAYERS_IN_RANGE_PREDICATE
	f	Ldem;	d	target
c	baj	net/minecraft/entity/boss/dragon/phase/HoverPhase
	f	Ldem;	b	target
c	bak	net/minecraft/entity/boss/dragon/phase/LandingApproachPhase
	f	Laxs;	b	PLAYERS_IN_RANGE_PREDICATE
	f	Ldem;	d	target
c	bal	net/minecraft/entity/boss/dragon/phase/LandingPhase
	f	Ldem;	b	target
c	bam	net/minecraft/entity/boss/dragon/phase/Phase
	m	()Z	a	isSittingOrHovering
	m	(Lbab;Lfu;Lanw;Lbec;)V	a	crystalDestroyed
		p	1	crystal	crystal
		p	2	pos	pos
		p	3	source	source
		p	4	player	player
	m	(Lanw;F)F	a	modifyDamageTaken
	m	()V	b	clientTick
	m	()V	c	serverTick
	m	()V	d	beginPhase
	m	()V	e	endPhase
	m	()F	f	getMaxYAcceleration
	m	()Ldem;	g	getTarget
	m	()Lbas;	i	getType
c	ban	net/minecraft/entity/boss/dragon/phase/SittingAttackingPhase
	f	I	b	ticks
c	bao	net/minecraft/entity/boss/dragon/phase/SittingFlamingPhase
	f	I	b	ticks
c	bap	net/minecraft/entity/boss/dragon/phase/SittingScanningPhase
	f	Laxs;	b	PLAYER_WITHIN_RANGE_PREDICATE
	f	Laxs;	c	CLOSE_PLAYER_PREDICATE
	f	I	d	ticks
c	baq	net/minecraft/entity/boss/dragon/phase/StrafePlayerPhase
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ldem;	e	target
c	bar	net/minecraft/entity/boss/dragon/phase/TakeoffPhase
	f	Ldem;	d	target
c	bas	net/minecraft/entity/boss/dragon/phase/PhaseType
	f	[Lbas;	l	types
	f	Ljava/lang/Class;	m	phaseClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
	m	(ILjava/lang/Class;Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	phaseClass	phaseClass
		p	3	name	name
	m	(I)Lbas;	a	getFromId
		p	0	id	id
	m	(Lbac;)Lbam;	a	create
		p	1	dragon	dragon
	m	(Ljava/lang/Class;Ljava/lang/String;)Lbas;	a	register
		p	0	phaseClass	phaseClass
		p	1	name	name
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	()I	b	getTypeId
	m	()I	c	count
c	bat	net/minecraft/entity/boss/dragon/phase/PhaseManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbac;	b	dragon
	f	[Lbam;	c	phases
	f	Lbam;	d	current
	m	(Lbac;)V	<init>	<init>
		p	1	dragon	dragon
	m	()Lbam;	a	getCurrent
	m	(Lbas;)V	a	setPhase
		p	1	type	type
	m	(Lbas;)Lbam;	b	create
		p	1	type	type
c	baw	net/minecraft/entity/boss/WitherEntity
	f	Ltq;	b	TRACKED_ENTITY_ID_1
	f	[F	bA	prevSideHeadYaws
	f	Lza;	bE	bossBar
	f	Ljava/util/function/Predicate;	bF	CAN_ATTACK_PREDICATE
	f	Laxs;	bG	HEAD_TARGET_PREDICATE
	f	Ljava/util/List;	bv	TRACKED_ENTITY_IDS
	f	Ltq;	bw	INVUL_TIMER
	f	[F	bx	sideHeadPitches
	f	[F	by	sideHeadYaws
	f	[F	bz	prevSideHeadPitches
	f	Ltq;	c	TRACKED_ENTITY_ID_2
	f	Ltq;	d	TRACKED_ENTITY_ID_3
	m	(II)V	a	setTrackedEntityId
		p	1	headIndex	headIndex
		p	2	id	id
	m	(FFF)F	a	getNextAngle
		p	1	prevAngle	prevAngle
		p	2	desiredAngle	desiredAngle
		p	3	maxDifference	maxDifference
	m	(IDDDZ)V	a	method_6877
		p	1	headIndex	headIndex
	m	(I)F	a	getHeadYaw
		p	1	headIndex	headIndex
	m	(I)F	b	getHeadPitch
		p	1	headIndex	headIndex
	m	(Lcfj;)Z	c	canDestroy
		p	0	block	block
	m	()Lapw$a;	eL	createWitherAttributes
	m	()I	eM	getInvulnerableTimer
	m	(I)V	s	setInvulTimer
		p	1	ticks	ticks
	m	(I)I	t	getTrackedEntityId
		p	1	headIndex	headIndex
	m	(I)D	u	getHeadX
		p	1	headIndex	headIndex
	m	(I)D	v	getHeadY
		p	1	headIndex	headIndex
	m	(I)D	w	getHeadZ
		p	1	headIndex	headIndex
c	baw$a	net/minecraft/entity/boss/WitherEntity$DescendAtHalfHealthGoal
c	bay	net/minecraft/entity/decoration/ArmorStandEntity
	f	Ltq;	b	ARMOR_STAND_FLAGS
	f	I	bA	disabledSlots
	f	Lgn;	bB	headRotation
	f	Lgn;	bC	bodyRotation
	f	Lgn;	bD	leftArmRotation
	f	Lgn;	bE	rightArmRotation
	f	Lgn;	bF	leftLegRotation
	f	Lgn;	bG	rightLegRotation
	f	Ltq;	bo	TRACKER_RIGHT_LEG_ROTATION
	f	J	bp	lastHitTime
	f	Lgn;	bq	DEFAULT_HEAD_ROTATION
	f	Lgn;	br	DEFAULT_BODY_ROTATION
	f	Lgn;	bs	DEFAULT_LEFT_ARM_ROTATION
	f	Lgn;	bt	DEFAULT_RIGHT_ARM_ROTATION
	f	Lgn;	bu	DEFAULT_LEFT_LEG_ROTATION
	f	Lgn;	bv	DEFAULT_RIGHT_LEG_ROTATION
	f	Ljava/util/function/Predicate;	bw	RIDEABLE_MINECART_PREDICATE
	f	Lgi;	bx	heldItems
	f	Lgi;	by	armorItems
	f	Z	bz	invisible
	f	Ltq;	c	TRACKER_HEAD_ROTATION
	f	Ltq;	d	TRACKER_BODY_ROTATION
	f	Ltq;	e	TRACKER_LEFT_ARM_ROTATION
	f	Ltq;	f	TRACKER_RIGHT_ARM_ROTATION
	f	Ltq;	g	TRACKER_LEFT_LEG_ROTATION
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()Z	A	canClip
	m	()Lle;	B	serializePose
	m	()V	D	spawnBreakParticles
	m	()V	F	playBreakSound
	m	(Lbec;Laor;Lbki;Lanf;)Z	a	equip
		p	1	player	player
		p	2	slot	slot
		p	3	stack	stack
		p	4	hand	hand
	m	(Lgn;)V	a	setHeadRotation
	m	(Z)V	a	setSmall
		p	1	small	small
	m	(BIZ)B	a	setBitField
		p	1	value	value
		p	2	bitField	bitField
		p	3	set	set
	m	(Lgn;)V	b	setBodyRotation
	m	(Lgn;)V	c	setLeftArmRotation
	m	(Laor;)Z	d	isSlotDisabled
		p	1	slot	slot
	m	(Lgn;)V	d	setRightArmRotation
	m	(Lgn;)V	e	setLeftLegRotation
	m	(Lanw;F)V	f	updateHealth
		p	1	damageSource	damageSource
		p	2	amount	amount
	m	(Lgn;)V	f	setRightLegRotation
	m	(Lanw;)V	f	breakAndDropItem
		p	1	damageSource	damageSource
	m	(Lanw;)V	g	onBreak
		p	1	damageSource	damageSource
	m	(Lle;)V	g	deserializePose
	m	(Ldem;)Laor;	g	slotFromPosition
	m	()Z	m	isSmall
	m	()Z	o	shouldShowArms
	m	()Z	p	shouldHideBasePlate
	m	(Z)V	p	setShowArms
		p	1	showArms	showArms
	m	()Z	q	isMarker
	m	(Z)V	q	setHideBasePlate
		p	1	hideBasePlate	hideBasePlate
	m	()Lgn;	r	getHeadRotation
	m	(Z)V	r	setMarker
		p	1	marker	marker
	m	()Lgn;	t	getBodyRotation
	m	()Lgn;	u	getLeftArmRotation
	m	()Lgn;	v	getRightArmRotation
	m	()Lgn;	x	getLeftLegRotation
	m	()Lgn;	z	getRightLegRotation
c	baz	net/minecraft/entity/decoration/AbstractDecorationEntity
	f	Ljava/util/function/Predicate;	b	PREDICATE
	f	Lfu;	c	attachmentPos
	f	Lfz;	d	facing
	f	I	e	obstructionCheckCounter
	m	(Laoq;Lbqb;Lfu;)V	<init>	<init>
		p	1	type	type
		p	2	world	world
		p	3	pos	pos
	m	(Lfz;)V	a	setFacing
		p	1	facing	facing
	m	(Laom;)V	a	onBreak
		p	1	entity	entity
	m	()V	g	updateAttachmentPosition
	m	()Z	h	canStayAttached
	m	()I	i	getWidthPixels
	m	()I	k	getHeightPixels
	m	()V	m	onPlace
	m	()Lfu;	n	getDecorationBlockPos
c	bb	net/minecraft/predicate/entity/EntityEquipmentPredicate
	f	Lbb;	a	ANY
	f	Lbb;	b	OMINOUS_BANNER_ON_HEAD
	f	Lbo;	c	head
	f	Lbo;	d	chest
	f	Lbo;	e	legs
	f	Lbo;	f	feet
	f	Lbo;	g	mainhand
	f	Lbo;	h	offhand
	m	(Lbo;Lbo;Lbo;Lbo;Lbo;Lbo;)V	<init>	<init>
		p	1	head	head
		p	2	chest	chest
		p	3	legs	legs
		p	4	feet	feet
		p	5	mainhand	mainhand
		p	6	offhand	offhand
	m	(Lcom/google/gson/JsonElement;)Lbb;	a	fromJson
		p	0	json	json
	m	(Laom;)Z	a	test
		p	1	entity	entity
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	bb$a	net/minecraft/predicate/entity/EntityEquipmentPredicate$Builder
	f	Lbo;	a	head
	f	Lbo;	b	chest
	f	Lbo;	c	legs
	f	Lbo;	d	feet
	f	Lbo;	e	mainhand
	f	Lbo;	f	offhand
	m	(Lbo;)Lbb$a;	a	head
		p	1	head	head
	m	()Lbb$a;	a	create
	m	(Lbo;)Lbb$a;	b	chest
		p	1	chest	chest
	m	()Lbb;	b	build
	m	(Lbo;)Lbb$a;	c	legs
		p	1	legs	legs
	m	(Lbo;)Lbb$a;	d	feet
		p	1	feet	feet
c	bba	net/minecraft/entity/decoration/ItemFrameEntity
	f	F	an	itemDropChance
	f	Z	ao	fixed
	f	Lorg/apache/logging/log4j/Logger;	e	ITEM_FRAME_LOGGER
	f	Ltq;	f	ITEM_STACK
	f	Ltq;	g	ROTATION
	m	(Lbqb;Lfu;Lfz;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
	m	(IZ)V	a	setRotation
		p	1	value	value
	m	(Lbki;Z)V	a	setHeldItemStack
		p	1	value	value
		p	2	update	update
	m	(I)V	a	setRotation
		p	1	value	value
	m	(Laom;Z)V	b	dropHeldStack
		p	1	entity	entity
		p	2	alwaysDrop	alwaysDrop
	m	(Lbki;)V	b	setHeldItemStack
		p	1	stack	stack
	m	(Lbki;)V	c	removeFromFrame
		p	1	map	map
	m	()Lbki;	o	getHeldItemStack
	m	()I	p	getRotation
	m	()I	q	getComparatorPower
c	bbb	net/minecraft/entity/decoration/LeashKnotEntity
	m	(Lbqb;Lfu;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lfu;)Lbbb;	a	getOrCreate
		p	0	world	world
		p	1	pos	pos
c	bbc	net/minecraft/entity/decoration/painting/PaintingMotive
	f	I	A	width
	f	I	B	height
	m	(II)V	<init>	<init>
		p	1	width	width
		p	2	height	height
	m	(Ljava/lang/String;II)Lbbc;	a	register
		p	0	name	name
		p	1	width	width
		p	2	height	height
	m	()I	a	getWidth
	m	()I	b	getHeight
c	bbd	net/minecraft/entity/decoration/painting/PaintingEntity
	f	Lbbc;	e	motive
	m	(Lbqb;Lfu;Lfz;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
	m	(Lbqb;Lfu;Lfz;Lbbc;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
		p	4	motive	motive
c	bbf	net/minecraft/entity/FallingBlockEntity
	f	Z	an	hurtEntities
	f	I	ao	fallHurtMax
	f	F	ap	fallHurtAmount
	f	I	b	timeFalling
	f	Z	c	dropItem
	f	Lle;	d	blockEntityData
	f	Ltq;	e	BLOCK_POS
	f	Lcfj;	f	block
	f	Z	g	destroyedOnLanding
	m	(Lbqb;DDDLcfj;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	block	block
	m	(Lfu;)V	a	setFallingBlockPos
		p	1	pos	pos
	m	(Z)V	a	setHurtEntities
		p	1	hurtEntities	hurtEntities
	m	()Lfu;	g	getFallingBlockPos
	m	()Lbqb;	h	getWorldClient
	m	()Lcfj;	i	getBlockState
c	bbg	net/minecraft/entity/ItemEntity
	f	Ljava/util/UUID;	an	owner
	f	F	b	hoverHeight
	f	Ltq;	c	STACK
	f	I	d	age
	f	I	e	pickupDelay
	f	I	f	health
	f	Ljava/util/UUID;	g	thrower
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;DDDLbki;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	stack	stack
	m	(Lbbg;)V	a	tryMerge
		p	1	other	other
	m	(Lbbg;Lbki;Lbbg;Lbki;)V	a	merge
		p	0	targetEntity	targetEntity
		p	1	targetStack	targetStack
		p	2	sourceEntity	sourceEntity
		p	3	sourceStack	sourceStack
	m	(Lbbg;Lbki;Lbki;)V	a	merge
		p	0	targetEntity	targetEntity
		p	1	stack1	stack1
		p	2	stack2	stack2
	m	(Lbki;Lbki;I)Lbki;	a	merge
		p	0	stack1	stack1
		p	1	stack2	stack2
		p	2	maxCount	maxCount
	m	(Lbki;Lbki;)Z	a	canMerge
		p	0	stack1	stack1
		p	1	stack2	stack2
	m	(I)V	a	setPickupDelay
		p	1	pickupDelay	pickupDelay
	m	(Lbki;)V	b	setStack
		p	1	stack	stack
	m	(Ljava/util/UUID;)V	b	setOwner
		p	1	uuid	uuid
	m	(Ljava/util/UUID;)V	c	setThrower
		p	1	uuid	uuid
	m	()Lbki;	g	getStack
	m	()Ljava/util/UUID;	h	getOwner
	m	()Ljava/util/UUID;	i	getThrower
	m	()I	k	getAge
	m	()V	m	setToDefaultPickupDelay
	m	()V	n	resetPickupDelay
	m	()V	o	setPickupDelayInfinite
	m	()Z	p	cannotPickup
	m	()V	r	setCovetedItem
	m	()V	s	setDespawnImmediately
	m	()V	u	applyBuoyancy
	m	()V	x	tryMerge
	m	()Z	z	canMerge
c	bbh	net/minecraft/entity/TntEntity
	f	Ltq;	b	FUSE
	f	Laoy;	c	causingEntity
	f	I	d	fuseTimer
	m	(Lbqb;DDDLaoy;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	igniter	igniter
	m	(I)V	a	setFuse
		p	1	fuse	fuse
	m	()Laoy;	g	getCausingEntity
	m	()I	h	getFuse
	m	()I	i	getFuseTimer
	m	()V	k	explode
c	bbj	net/minecraft/entity/mob/IllagerEntity
	m	()Lbbj$a;	m	getState
c	bbj$a	net/minecraft/entity/mob/IllagerEntity$State
c	bbj$b	net/minecraft/entity/mob/IllagerEntity$LongDoorInteractGoal
	m	(Lbbj;Lbfi;)V	<init>	<init>
		p	2	raider	raider
c	bbk	net/minecraft/entity/mob/AbstractSkeletonEntity
	f	Lavi;	b	bowAttackGoal
	f	Lauq;	c	meleeAttackGoal
	m	(Lbki;F)Lbeg;	b	createArrowProjectile
		p	1	arrow	arrow
		p	2	damageModifier	damageModifier
	m	()Lack;	eL	getStepSound
	m	()V	eM	updateAttackType
	m	()Lapw$a;	m	createAbstractSkeletonAttributes
c	bbl	net/minecraft/entity/mob/BlazeEntity
	f	F	b	eyeOffset
	f	I	c	eyeOffsetCooldown
	f	Ltq;	d	BLAZE_FLAGS
	m	()Z	eL	isFireActive
	m	()Lapw$a;	m	createBlazeAttributes
	m	(Z)V	t	setFireActive
		p	1	fireActive	fireActive
c	bbl$a	net/minecraft/entity/mob/BlazeEntity$ShootFireballGoal
	f	Lbbl;	a	blaze
	f	I	b	fireballsFired
	f	I	c	fireballCooldown
	f	I	d	targetNotVisibleTicks
	m	(Lbbl;)V	<init>	<init>
		p	1	blaze	blaze
	m	()D	g	getFollowRange
c	bbm	net/minecraft/entity/mob/CaveSpiderEntity
	m	()Lapw$a;	m	createCaveSpiderAttributes
c	bbn	net/minecraft/entity/mob/CreeperEntity
	f	Ltq;	b	FUSE_SPEED
	f	I	bv	lastFuseTime
	f	I	bw	currentFuseTime
	f	I	bx	fuseTime
	f	I	by	explosionRadius
	f	I	bz	headsDropped
	f	Ltq;	c	CHARGED
	f	Ltq;	d	IGNITED
	m	(I)V	a	setFuseSpeed
		p	1	fuseSpeed	fuseSpeed
	m	()I	eL	getFuseSpeed
	m	()Z	eM	getIgnited
	m	()V	eN	setIgnited
	m	()Z	eO	shouldDropHead
	m	()V	eP	onHeadDropped
	m	()V	eQ	explode
	m	()V	eT	spawnEffectsCloud
	m	()Lapw$a;	m	createCreeperAttributes
	m	(F)F	u	getClientFuseTime
		p	1	timeDelta	timeDelta
c	bbo	net/minecraft/entity/CrossbowUser
	m	()Laoy;	A	getTarget
	m	()V	V_	postShoot
	m	(Laoy;Laoy;Lbes;FF)V	a	shoot
		p	1	entity	entity
		p	2	target	target
		p	3	projectile	projectile
		p	4	multishotSpray	multishotSpray
		p	5	speed	speed
	m	(Laoy;Ldem;F)Lg;	a	getProjectileLaunchVelocity
		p	1	entity	entity
		p	2	positionDelta	positionDelta
		p	3	multishotSpray	multishotSpray
	m	(Laoy;Lbki;Lbes;F)V	a	shoot
		p	1	target	target
		p	2	crossbow	crossbow
		p	3	projectile	projectile
		p	4	multiShotSpray	multiShotSpray
	m	(Laoy;F)V	b	shoot
		p	1	entity	entity
		p	2	speed	speed
	m	(Z)V	b	setCharging
		p	1	charging	charging
c	bbp	net/minecraft/entity/mob/DrownedEntity
	f	Lawx;	b	waterNavigation
	f	Lawu;	c	landNavigation
	f	Z	d	targetingUnderwater
	m	(Lbqc;Lfu;)Z	a	isValidSpawnDepth
		p	0	world	world
		p	1	pos	pos
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Z	eP	hasFinishedCurrentPath
	m	()Z	eX	isTargetingUnderwater
	m	(Laoy;)Z	j	canDrownedAttackTarget
		p	1	target	target
	m	(Z)V	t	setTargetingUnderwater
		p	1	targetingUnderwater	targetingUnderwater
c	bbp$a	net/minecraft/entity/mob/DrownedEntity$DrownedAttackGoal
	f	Lbbp;	b	drowned
	m	(Lbbp;DZ)V	<init>	<init>
		p	1	drowned	drowned
		p	2	speed	speed
		p	4	pauseWhenMobIdle	pauseWhenMobIdle
c	bbp$b	net/minecraft/entity/mob/DrownedEntity$LeaveWaterGoal
	f	Lbbp;	g	drowned
	m	(Lbbp;D)V	<init>	<init>
		p	1	drowned	drowned
		p	2	speed	speed
c	bbp$c	net/minecraft/entity/mob/DrownedEntity$WanderAroundOnSurfaceGoal
	f	Lapg;	a	mob
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	D	e	speed
	f	Lbqb;	f	world
	m	(Lapg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	()Ldem;	g	getWanderTarget
c	bbp$d	net/minecraft/entity/mob/DrownedEntity$DrownedMoveControl
	f	Lbbp;	i	drowned
	m	(Lbbp;)V	<init>	<init>
		p	1	drowned	drowned
c	bbp$e	net/minecraft/entity/mob/DrownedEntity$TargetAboveWaterGoal
	f	Lbbp;	a	drowned
	f	D	b	speed
	f	I	c	minY
	f	Z	d	foundTarget
	m	(Lbbp;DI)V	<init>	<init>
		p	1	drowned	drowned
		p	2	speed	speed
		p	4	minY	minY
c	bbp$f	net/minecraft/entity/mob/DrownedEntity$TridentAttackGoal
	f	Lbbp;	a	drowned
c	bbq	net/minecraft/entity/mob/ElderGuardianEntity
	f	F	b	SCALE
	m	()Lapw$a;	m	createElderGuardianAttributes
c	bbr	net/minecraft/entity/mob/EndermanEntity
	f	Ljava/util/UUID;	b	ATTACKING_SPEED_BOOST_ID
	f	I	bB	angerTime
	f	Ljava/util/UUID;	bC	targetUuid
	f	Ltq;	bv	ANGRY
	f	Ltq;	bw	PROVOKED
	f	Ljava/util/function/Predicate;	bx	PLAYER_ENDERMITE_PREDICATE
	f	I	by	lastAngrySoundAge
	f	I	bz	ageWhenTargetSet
	f	Lapv;	c	ATTACKING_SPEED_BOOST
	f	Ltq;	d	CARRIED_BLOCK
	m	(Laom;)Z	a	teleportTo
		p	1	entity	entity
	m	(Lcfj;)V	c	setCarriedBlock
		p	1	state	state
	m	()V	eL	playAngrySound
	m	()Z	eM	teleportRandomly
	m	()Lcfj;	eN	getCarriedBlock
	m	()Z	eO	isAngry
	m	()Z	eP	isProvoked
	m	()V	eQ	setProvoked
	m	(Lbec;)Z	g	isPlayerStaring
		p	1	player	player
	m	()Lapw$a;	m	createEndermanAttributes
	m	(DDD)Z	o	teleportTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	bbr$a	net/minecraft/entity/mob/EndermanEntity$ChasePlayerGoal
	f	Lbbr;	a	enderman
	f	Laoy;	b	target
	m	(Lbbr;)V	<init>	<init>
		p	1	enderman	enderman
c	bbr$b	net/minecraft/entity/mob/EndermanEntity$PlaceBlockGoal
	f	Lbbr;	a	enderman
	m	(Lbbr;)V	<init>	<init>
		p	1	enderman	enderman
	m	(Lbqd;Lfu;Lcfj;Lcfj;Lcfj;Lfu;)Z	a	canPlaceOn
		p	1	world	world
		p	2	posAbove	posAbove
		p	3	carriedState	carriedState
		p	4	stateAbove	stateAbove
		p	5	state	state
		p	6	pos	pos
c	bbr$c	net/minecraft/entity/mob/EndermanEntity$TeleportTowardsPlayerGoal
	f	Lbbr;	i	enderman
	f	Lbec;	j	targetPlayer
	f	I	k	lookAtPlayerWarmup
	f	I	l	ticksSinceUnseenTeleport
	f	Laxs;	m	staringPlayerPredicate
	f	Laxs;	n	validTargetPredicate
	m	(Lbbr;)V	<init>	<init>
		p	1	enderman	enderman
	m	(Lbbr;Laoy;)Z	a	method_18449
		p	1	playerEntity	playerEntity
c	bbr$d	net/minecraft/entity/mob/EndermanEntity$PickUpBlockGoal
	f	Lbbr;	a	enderman
	m	(Lbbr;)V	<init>	<init>
		p	1	enderman	enderman
c	bbs	net/minecraft/entity/mob/EndermiteEntity
	f	I	b	lifeTime
	f	Z	c	playerSpawned
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Z	eL	isPlayerSpawned
	m	()Lapw$a;	m	createEndermiteAttributes
	m	(Z)V	t	setPlayerSpawned
		p	1	playerSpawned	playerSpawned
c	bbt	net/minecraft/entity/mob/Monster
c	bbu	net/minecraft/entity/mob/EvokerEntity
	f	Lazd;	bv	wololoTarget
	m	(Lazd;)V	a	setWololoTarget
		p	1	sheep	sheep
	m	()Lapw$a;	eL	createEvokerAttributes
	m	()Lazd;	fh	getWololoTarget
c	bbu$a	net/minecraft/entity/mob/EvokerEntity$ConjureFangsGoal
	m	(DDDDFI)V	a	conjureFangs
		p	1	x	x
		p	3	z	z
		p	5	maxY	maxY
		p	7	y	y
		p	9	yaw	yaw
		p	10	warmup	warmup
c	bbu$b	net/minecraft/entity/mob/EvokerEntity$LookAtTargetOrWololoTarget
c	bbu$c	net/minecraft/entity/mob/EvokerEntity$SummonVexGoal
	f	Laxs;	e	closeVexPredicate
c	bbu$d	net/minecraft/entity/mob/EvokerEntity$WololoGoal
	f	Laxs;	e	convertibleSheepPredicate
c	bbv	net/minecraft/entity/mob/GhastEntity
	f	Ltq;	b	SHOOTING
	f	I	c	fireballStrength
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()I	eJ	getFireballStrength
	m	()Lapw$a;	eK	createGhastAttributes
	m	()Z	m	isShooting
	m	(Z)V	t	setShooting
		p	1	shooting	shooting
c	bbv$a	net/minecraft/entity/mob/GhastEntity$LookAtTargetGoal
	f	Lbbv;	a	ghast
	m	(Lbbv;)V	<init>	<init>
		p	1	ghast	ghast
c	bbv$b	net/minecraft/entity/mob/GhastEntity$GhastMoveControl
	f	Lbbv;	i	ghast
	f	I	j	collisionCheckCooldown
	m	(Lbbv;)V	<init>	<init>
		p	1	ghast	ghast
	m	(Ldem;I)Z	a	willCollide
		p	1	direction	direction
		p	2	steps	steps
c	bbv$c	net/minecraft/entity/mob/GhastEntity$ShootFireballGoal
	f	I	a	cooldown
	f	Lbbv;	b	ghast
	m	(Lbbv;)V	<init>	<init>
		p	1	ghast	ghast
c	bbv$d	net/minecraft/entity/mob/GhastEntity$FlyRandomlyGoal
	f	Lbbv;	a	ghast
	m	(Lbbv;)V	<init>	<init>
		p	1	ghast	ghast
c	bbw	net/minecraft/entity/mob/GiantEntity
	m	()Lapw$a;	m	createGiantAttributes
c	bbx	net/minecraft/entity/mob/GuardianEntity
	f	Ltq;	b	SPIKES_RETRACTED
	f	Laoy;	bA	cachedBeamTarget
	f	I	bB	beamTicks
	f	Z	bC	flopping
	f	F	bv	spikesExtension
	f	F	bw	prevSpikesExtension
	f	F	bx	spikesExtensionRate
	f	F	by	tailAngle
	f	F	bz	prevTailAngle
	f	Lavf;	c	wanderGoal
	f	Ltq;	d	BEAM_TARGET_ID
	m	(I)V	a	setBeamTarget
		p	1	progress	progress
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()I	eL	getWarmupTime
	m	()Lack;	eM	getFlopSound
	m	()Lapw$a;	eN	createGuardianAttributes
	m	()Z	eO	areSpikesRetracted
	m	()Z	eP	hasBeamTarget
	m	()Laoy;	eQ	getBeamTarget
	m	(Z)V	t	setSpikesRetracted
		p	1	retracted	retracted
	m	(F)F	u	getSpikesExtension
		p	1	tickDelta	tickDelta
	m	(F)F	v	getTailAngle
		p	1	tickDelta	tickDelta
	m	(F)F	w	getBeamProgress
		p	1	tickDelta	tickDelta
c	bbx$a	net/minecraft/entity/mob/GuardianEntity$FireBeamGoal
	f	Lbbx;	a	guardian
	f	I	b	beamTicks
	f	Z	c	elder
	m	(Lbbx;)V	<init>	<init>
		p	1	guardian	guardian
c	bbx$b	net/minecraft/entity/mob/GuardianEntity$GuardianTargetPredicate
	f	Lbbx;	a	owner
	m	(Lbbx;)V	<init>	<init>
		p	1	owner	owner
	m	(Laoy;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	bbx$c	net/minecraft/entity/mob/GuardianEntity$GuardianMoveControl
	f	Lbbx;	i	guardian
	m	(Lbbx;)V	<init>	<init>
		p	1	guardian	guardian
c	bby	net/minecraft/entity/mob/HuskEntity
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
c	bbz	net/minecraft/entity/mob/IllusionerEntity
	m	()Lapw$a;	eL	createIllusionerAttributes
c	bbz$a	net/minecraft/entity/mob/IllusionerEntity$BlindTargetGoal
	f	I	e	targetId
c	bbz$b	net/minecraft/entity/mob/IllusionerEntity$GiveInvisibilityGoal
c	bc	net/minecraft/predicate/entity/EntityFlagsPredicate
	f	Lbc;	a	ANY
	f	Ljava/lang/Boolean;	b	isOnFire
	f	Ljava/lang/Boolean;	c	isSneaking
	f	Ljava/lang/Boolean;	d	isSprinting
	f	Ljava/lang/Boolean;	e	isSwimming
	f	Ljava/lang/Boolean;	f	isBaby
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1	isOnFire	isOnFire
		p	2	isSneaking	isSneaking
		p	3	isSprinting	isSprinting
		p	4	isSwimming	isSwimming
		p	5	isBaby	isBaby
	m	(Laom;)Z	a	test
		p	1	entity	entity
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	nullableBooleanFromJson
		p	0	json	json
		p	1	key	key
	m	(Lcom/google/gson/JsonElement;)Lbc;	a	fromJson
		p	0	json	json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	nullableBooleanToJson
		p	1	json	json
		p	2	key	key
		p	3	value	value
c	bc$a	net/minecraft/predicate/entity/EntityFlagsPredicate$Builder
	f	Ljava/lang/Boolean;	a	isOnFire
	f	Ljava/lang/Boolean;	b	isSneaking
	f	Ljava/lang/Boolean;	c	isSprinting
	f	Ljava/lang/Boolean;	d	isSwimming
	f	Ljava/lang/Boolean;	e	isBaby
	m	(Ljava/lang/Boolean;)Lbc$a;	a	onFire
		p	1	onFire	onFire
	m	()Lbc$a;	a	create
	m	()Lbc;	b	build
c	bca	net/minecraft/entity/mob/MagmaCubeEntity
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canMagmaCubeSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Lapw$a;	m	createMagmaCubeAttributes
c	bcb	net/minecraft/entity/mob/HostileEntity
	m	(Lbqc;Lfu;Ljava/util/Random;)Z	a	isSpawnDark
		p	0	world	world
		p	1	pos	pos
		p	2	random	random
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawnInDark
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	d	canSpawnIgnoreLightLevel
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()V	eR	updateDespawnCounter
	m	()Lapw$a;	eS	createHostileAttributes
	m	(Lbec;)Z	f	isAngryAt
		p	1	player	player
c	bcc	net/minecraft/entity/mob/PatrolEntity
	f	Lfu;	b	patrolTarget
	f	Z	c	patrolLeader
	f	Z	d	patrolling
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Z	eO	canLead
	m	()Lfu;	eP	getPatrolTarget
	m	()Z	eQ	hasPatrolTarget
	m	()Z	eT	isPatrolLeader
	m	()Z	eU	hasNoRaid
	m	()V	eV	setRandomPatrolTarget
	m	()Z	eW	isRaidCenterSet
	m	(Lfu;)V	g	setPatrolTarget
		p	1	targetPos	targetPos
	m	(Z)V	t	setPatrolLeader
		p	1	patrolLeader	patrolLeader
	m	(Z)V	u	setPatrolling
		p	1	patrolling	patrolling
c	bcc$a	net/minecraft/entity/mob/PatrolEntity$PatrolGoal
	f	Lbcc;	a	entity
	f	D	b	leaderSpeed
	f	D	c	followSpeed
	f	J	d	nextPatrolSearchTime
	m	(Lbcc;DD)V	<init>	<init>
		p	1	entity	entity
		p	2	leaderSpeed	leaderSpeed
		p	4	followSpeed	followSpeed
	m	()Ljava/util/List;	g	findPatrolTargets
	m	()Z	h	wander
c	bcd	net/minecraft/entity/mob/PhantomEntity
	f	Ltq;	b	SIZE
	f	Lbcd$a;	bv	movementType
	f	Ldem;	c	targetPosition
	f	Lfu;	d	circlingCenter
	m	(I)V	a	setPhantomSize
		p	1	size	size
	m	()V	eK	onSizeChanged
	m	()I	m	getPhantomSize
c	bcd$a	net/minecraft/entity/mob/PhantomEntity$PhantomMovementType
c	bcd$b	net/minecraft/entity/mob/PhantomEntity$FindTargetGoal
	f	Laxs;	b	PLAYERS_IN_RANGE_PREDICATE
	f	I	c	delay
c	bcd$c	net/minecraft/entity/mob/PhantomEntity$StartAttackGoal
	f	I	b	cooldown
	m	()V	g	startSwoop
c	bcd$d	net/minecraft/entity/mob/PhantomEntity$PhantomBodyControl
	m	(Lbcd;Laoz;)V	<init>	<init>
		p	2	entity	entity
c	bcd$e	net/minecraft/entity/mob/PhantomEntity$CircleMovementGoal
	f	F	c	angle
	f	F	d	radius
	f	F	e	yOffset
	f	F	f	circlingDirection
	m	()V	h	adjustDirection
c	bcd$f	net/minecraft/entity/mob/PhantomEntity$PhantomLookControl
	m	(Lbcd;Laoz;)V	<init>	<init>
		p	2	entity	entity
c	bcd$g	net/minecraft/entity/mob/PhantomEntity$PhantomMoveControl
	f	F	j	targetSpeed
		c	The movement speed that the phantom tends towards
	m	(Lbcd;Laoz;)V	<init>	<init>
		p	2	owner	owner
c	bcd$h	net/minecraft/entity/mob/PhantomEntity$MovementGoal
	m	()Z	g	isNearTarget
c	bcd$i	net/minecraft/entity/mob/PhantomEntity$SwoopMovementGoal
c	bce	net/minecraft/entity/mob/PillagerEntity
	f	Ltq;	b	CHARGING
	f	Lanm;	bv	inventory
	m	()Lapw$a;	eL	createPillagerAttributes
	m	()Z	eN	isCharging
c	bcf	net/minecraft/entity/ai/RangedAttackMob
	m	(Laoy;F)V	a	attack
		p	1	target	target
		p	2	pullProgress	pullProgress
c	bcg	net/minecraft/entity/mob/RavagerEntity
	f	Ljava/util/function/Predicate;	b	IS_NOT_RAVAGER
	f	I	bv	attackTick
	f	I	bw	stunTick
	f	I	bx	roarTick
	m	(Laom;)V	a	knockBack
		p	1	entity	entity
	m	()I	eL	getAttackTick
	m	()I	eN	getStunTick
	m	()I	eX	getRoarTick
	m	()V	eY	spawnStunnedParticles
	m	()V	eZ	roar
	m	()Lapw$a;	m	createRavagerAttributes
c	bcg$a	net/minecraft/entity/mob/RavagerEntity$AttackGoal
c	bcg$b	net/minecraft/entity/mob/RavagerEntity$Navigation
c	bcg$c	net/minecraft/entity/mob/RavagerEntity$PathNodeMaker
c	bch	net/minecraft/entity/mob/ShulkerEntity
	f	Ltq;	b	ATTACHED_FACE
	f	Lfu;	bA	prevAttachedBlock
	f	I	bB	teleportLerpTimer
	f	Ltq;	bv	COLOR
	f	Ljava/util/UUID;	bw	COVERED_ARMOR_BONUS_ID
	f	Lapv;	bx	COVERED_ARMOR_BONUS
	f	F	by	prevOpenProgress
	f	F	bz	openProgress
	f	Ltq;	c	ATTACHED_BLOCK
	f	Ltq;	d	PEEK_AMOUNT
	m	(I)V	a	setPeekAmount
		p	1	peekAmount	peekAmount
	m	(Lfu;Lfz;)Z	a	canStay
		p	1	pos	pos
		p	2	attachSide	attachSide
	m	()Z	eL	tryTeleport
	m	()Lfz;	eM	getAttachedFace
	m	()Lfu;	eN	getAttachedBlock
	m	()I	eO	getPeekAmount
	m	()I	eP	getTeleportLerpTimer
	m	()Lfu;	eQ	getPrevAttachedBlock
	m	()Z	eR	hasAttachedBlock
	m	()Lbje;	eT	getColor
	m	()Z	eU	isClosed
	m	(Lfu;)Lfz;	g	findAttachSide
		p	1	pos	pos
	m	(Lfu;)V	h	setAttachedBlock
		p	1	pos	pos
	m	()Lapw$a;	m	createShulkerAttributes
	m	(F)F	u	getOpenProgress
		p	1	delta	delta
c	bch$a	net/minecraft/entity/mob/ShulkerEntity$ShootBulletGoal
	f	I	b	counter
c	bch$b	net/minecraft/entity/mob/ShulkerEntity$ShulkerBodyControl
	m	(Lbch;Laoz;)V	<init>	<init>
		p	2	entity	entity
c	bch$c	net/minecraft/entity/mob/ShulkerEntity$SearchForTargetGoal
	m	(Lbch;)V	<init>	<init>
		p	1	shulker	shulker
	m	(Laoy;)Z	b	method_7129
		p	0	entity	entity
c	bch$d	net/minecraft/entity/mob/ShulkerEntity$SearchForPlayerGoal
	m	(Lbch;Lbch;)V	<init>	<init>
		p	2	shulker	shulker
c	bch$e	net/minecraft/entity/mob/ShulkerEntity$PeekGoal
	f	I	b	counter
c	bci	net/minecraft/entity/mob/SilverfishEntity
	f	Lbci$b;	b	callForHelpGoal
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Lapw$a;	m	createSilverfishAttributes
c	bci$a	net/minecraft/entity/mob/SilverfishEntity$WanderAndInfestGoal
	f	Lfz;	h	direction
	f	Z	i	canInfest
	m	(Lbci;)V	<init>	<init>
		p	1	silverfish	silverfish
c	bci$b	net/minecraft/entity/mob/SilverfishEntity$CallForHelpGoal
	f	Lbci;	a	silverfish
	f	I	b	delay
	m	(Lbci;)V	<init>	<init>
		p	1	silverfish	silverfish
	m	()V	g	onHurt
c	bcj	net/minecraft/entity/mob/SkeletonEntity
c	bck	net/minecraft/entity/mob/SlimeEntity
	f	F	b	targetStretch
	f	Ltq;	bv	SLIME_SIZE
	f	Z	bw	onGroundLastTick
	f	F	c	stretch
	f	F	d	lastStretch
	m	(IZ)V	a	setSize
		p	1	size	size
		p	2	heal	heal
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Lhf;	eJ	getParticles
	m	()I	eK	getTicksUntilNextJump
	m	()V	eL	updateStretch
	m	()Z	eM	canAttack
	m	()F	eN	getDamageAmount
	m	()Lack;	eO	getSquishSound
	m	()Lack;	eP	getJumpSound
	m	()I	eQ	getSize
	m	()Z	eR	isSmall
	m	()Z	eS	makesJumpSound
	m	(Laoy;)V	j	damage
		p	1	target	target
	m	()F	m	getJumpSoundPitch
c	bck$a	net/minecraft/entity/mob/SlimeEntity$FaceTowardTargetGoal
	f	Lbck;	a	slime
	f	I	b	ticksLeft
	m	(Lbck;)V	<init>	<init>
		p	1	slime	slime
c	bck$b	net/minecraft/entity/mob/SlimeEntity$SwimmingGoal
	f	Lbck;	a	slime
	m	(Lbck;)V	<init>	<init>
		p	1	slime	slime
c	bck$c	net/minecraft/entity/mob/SlimeEntity$MoveGoal
	f	Lbck;	a	slime
	m	(Lbck;)V	<init>	<init>
		p	1	slime	slime
c	bck$d	net/minecraft/entity/mob/SlimeEntity$SlimeMoveControl
	f	F	i	targetYaw
	f	I	j	ticksUntilJump
	f	Lbck;	k	slime
	f	Z	l	jumpOften
	m	(Lbck;)V	<init>	<init>
		p	1	slime	slime
	m	(D)V	a	move
		p	1	speed	speed
	m	(FZ)V	a	look
		p	1	targetYaw	targetYaw
		p	2	jumpOften	jumpOften
c	bck$e	net/minecraft/entity/mob/SlimeEntity$RandomLookGoal
	f	Lbck;	a	slime
	f	F	b	targetYaw
	f	I	c	timer
	m	(Lbck;)V	<init>	<init>
		p	1	slime	slime
c	bcl	net/minecraft/entity/mob/SpellcastingIllagerEntity
	f	I	b	spellTicks
	f	Ltq;	bv	SPELL
	f	Lbcl$a;	bw	spell
	m	(Lbcl$a;)V	a	setSpell
		p	1	spell	spell
	m	()Lack;	eN	getCastSpellSound
	m	()Z	eX	isSpellcasting
	m	()Lbcl$a;	eY	getSpell
	m	()I	eZ	getSpellTicks
c	bcl$a	net/minecraft/entity/mob/SpellcastingIllagerEntity$Spell
	f	I	g	id
	f	[D	h	particleVelocity
	m	(Ljava/lang/String;IIDDD)V	<init>	<init>
		p	3	id	id
		p	4	particleVelocityX	particleVelocityX
		p	6	particleVelocityY	particleVelocityY
		p	8	particleVelocityZ	particleVelocityZ
	m	(I)Lbcl$a;	a	byId
		p	0	id	id
c	bcl$b	net/minecraft/entity/mob/SpellcastingIllagerEntity$LookAtTargetGoal
c	bcl$c	net/minecraft/entity/mob/SpellcastingIllagerEntity$CastSpellGoal
	f	I	b	spellCooldown
	f	I	c	startTime
	m	()I	g	getSpellTicks
	m	()I	h	startTimeDelay
	m	()V	j	castSpell
	m	()Lack;	k	getSoundPrepare
	m	()Lbcl$a;	l	getSpell
	m	()I	m	getInitialCooldown
	m	()V	start	start
	m	()V	tick	tick
c	bcm	net/minecraft/entity/mob/SpiderEntity
	f	Ltq;	b	SPIDER_FLAGS
	m	()Lapw$a;	eL	createSpiderAttributes
	m	()Z	eM	isClimbingWall
	m	(Z)V	t	setClimbingWall
		p	1	climbing	climbing
c	bcm$a	net/minecraft/entity/mob/SpiderEntity$AttackGoal
	m	(Lbcm;)V	<init>	<init>
		p	1	spider	spider
c	bcm$b	net/minecraft/entity/mob/SpiderEntity$SpiderData
	f	Laoe;	a	effect
	m	(Ljava/util/Random;)V	a	setEffect
		p	1	random	random
c	bcm$c	net/minecraft/entity/mob/SpiderEntity$FollowTargetGoal
	m	(Lbcm;Ljava/lang/Class;)V	<init>	<init>
		p	1	spider	spider
		p	2	targetEntityClass	targetEntityClass
c	bcn	net/minecraft/entity/mob/StrayEntity
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
c	bco	net/minecraft/entity/passive/StriderEntity
	f	Laov;	bA	saddledComponent
	f	Lavr;	bB	temptGoal
	f	Lavb;	bC	escapeDangerGoal
	f	Lbmr;	bv	BREEDING_INGREDIENT
	f	Lbmr;	bw	ATTRACTING_INGREDIENT
	f	Ltq;	bx	BOOST_TIME
	f	Ltq;	by	COLD
	f	Ltq;	bz	SADDLED
	m	(Laok;)Lbco;	b	createChild
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	2	spawnReason	spawnReason
		p	4	random	random
	m	()Z	eL	isCold
	m	()F	eM	getSpeed
	m	()Lapw$a;	eN	createStriderAttributes
	m	()V	eV	updateFloating
	m	(Z)V	t	setCold
		p	1	cold	cold
c	bco$a	net/minecraft/entity/passive/StriderEntity$StriderData
	f	Lbco$a$a;	a	type
	m	(Lbco$a$a;)V	<init>	<init>
		p	1	type	type
c	bco$a$a	net/minecraft/entity/passive/StriderEntity$StriderData$RiderType
c	bco$b	net/minecraft/entity/passive/StriderEntity$Navigation
	m	(Lbco;Lbqb;)V	<init>	<init>
		p	1	entity	entity
		p	2	world	world
c	bcp	net/minecraft/entity/mob/VexEntity
	f	Ltq;	b	VEX_FLAGS
	f	Z	bv	alive
	f	I	bw	lifeTicks
	f	Laoz;	c	owner
	f	Lfu;	d	bounds
	m	(IZ)V	a	setVexFlag
		p	1	mask	mask
		p	2	value	value
	m	(Laoz;)V	a	setOwner
		p	1	owner	owner
	m	(I)V	a	setLifeTicks
		p	1	lifeTicks	lifeTicks
	m	(I)Z	b	areFlagsSet
		p	1	mask	mask
	m	()Laoz;	eL	getOwner
	m	()Lfu;	eM	getBounds
	m	()Z	eN	isCharging
	m	(Lfu;)V	g	setBounds
		p	1	pos	pos
	m	()Lapw$a;	m	createVexAttributes
	m	(Z)V	t	setCharging
		p	1	charging	charging
c	bcp$a	net/minecraft/entity/mob/VexEntity$ChargeTargetGoal
c	bcp$b	net/minecraft/entity/mob/VexEntity$TrackOwnerTargetGoal
	f	Laxs;	b	TRACK_OWNER_PREDICATE
	m	(Lbcp;Lapg;)V	<init>	<init>
		p	2	mob	mob
c	bcp$c	net/minecraft/entity/mob/VexEntity$VexMoveControl
	m	(Lbcp;Lbcp;)V	<init>	<init>
		p	2	owner	owner
c	bcp$d	net/minecraft/entity/mob/VexEntity$LookAtTargetGoal
c	bcq	net/minecraft/entity/mob/VindicatorEntity
	f	Ljava/util/function/Predicate;	b	DIFFICULTY_ALLOWS_DOOR_BREAKING_PREDICATE
	f	Z	bv	johnny
	m	()Lapw$a;	eL	createVindicatorAttributes
c	bcq$a	net/minecraft/entity/mob/VindicatorEntity$BreakDoorGoal
c	bcq$b	net/minecraft/entity/mob/VindicatorEntity$FollowEntityGoal
	m	(Lbcq;)V	<init>	<init>
		p	1	vindicator	vindicator
c	bcq$c	net/minecraft/entity/mob/VindicatorEntity$AttackGoal
	m	(Lbcq;Lbcq;)V	<init>	<init>
		p	2	vindicator	vindicator
c	bcr	net/minecraft/entity/mob/WitchEntity
	f	Ljava/util/UUID;	b	DRINKING_SPEED_PENALTY_MODIFIER_ID
	f	Lapv;	bv	DRINKING_SPEED_PENALTY_MODIFIER
	f	Ltq;	bw	DRINKING
	f	I	bx	drinkTimeLeft
	f	Lawe;	by	raidGoal
	f	Lawd;	bz	attackPlayerGoal
	m	()Lapw$a;	eL	createWitchAttributes
	m	()Z	m	isDrinking
	m	(Z)V	v	setDrinking
		p	1	drinking	drinking
c	bcs	net/minecraft/entity/mob/WitherSkeletonEntity
c	bct	net/minecraft/entity/mob/ZoglinEntity
	f	Lcom/google/common/collect/ImmutableList;	b	USED_SENSORS
	f	I	bv	movementCooldownTicks
	f	Lcom/google/common/collect/ImmutableList;	c	USED_MEMORY_MODULES
	f	Ltq;	d	BABY
	m	()Z	eL	isAdult
	m	()V	eO	playAngrySound
	m	()Lapw$a;	m	createZoglinAttributes
c	bcu	net/minecraft/entity/mob/ZombieEntity
	f	Ljava/util/UUID;	b	BABY_SPEED_ID
	f	I	bA	inWaterTime
	f	I	bB	ticksUntilWaterConversion
	f	Ltq;	bv	ZOMBIE_TYPE
		c	Unused tracked data, left over from 1.10 when zombies, zombie villagers and husks were all the same type of entity.
	f	Ltq;	bw	CONVERTING_IN_WATER
	f	Ljava/util/function/Predicate;	bx	DOOR_BREAK_DIFFICULTY_CHECKER
	f	Latr;	by	breakDoorsGoal
	f	Z	bz	canBreakDoors
	f	Lapv;	c	BABY_SPEED_BONUS
	f	Ltq;	d	BABY
	m	(Lbqb;)V	<init>	<init>
		p	1	world	world
	m	()Z	U_	burnsInDaylight
	m	(Land;)Z	a	method_20009
		p	0	difficulty	difficulty
	m	(I)V	a	setTicksUntilWaterConversion
		p	1	ticksUntilWaterConversion	ticksUntilWaterConversion
	m	(Laoq;)V	c	convertTo
		p	1	entityType	entityType
	m	()Z	eL	shouldBreakDoors
	m	()Lack;	eM	getStepSound
	m	()Lbki;	eN	getSkull
	m	()Z	eO	canConvertInWater
	m	()V	eQ	convertInWater
	m	()Lapw$a;	eT	createZombieAttributes
	m	()Z	eU	isConvertingInWater
	m	()Z	eV	canBreakDoors
	m	()V	eW	initAttributes
	m	()V	m	initCustomGoals
	m	(Z)V	u	setCanBreakDoors
		p	1	canBreakDoors	canBreakDoors
	m	(F)V	u	applyAttributeModifiers
		p	1	chanceMultiplier	chanceMultiplier
c	bcu$a	net/minecraft/entity/mob/ZombieEntity$DestroyEggGoal
	m	(Lbcu;Lapg;DI)V	<init>	<init>
		p	2	mob	mob
		p	3	speed	speed
		p	5	maxYDifference	maxYDifference
c	bcu$b	net/minecraft/entity/mob/ZombieEntity$ZombieData
	f	Z	a	baby
	m	(ZZ)V	<init>	<init>
		p	1	baby	baby
c	bcv	net/minecraft/entity/mob/ZombieVillagerEntity
	f	Ltq;	b	CONVERTING
	f	Ljava/util/UUID;	bv	converter
	f	Llu;	bw	gossipData
	f	Lle;	bx	offerData
	f	I	by	xp
	f	Ltq;	c	VILLAGER_DATA
	f	I	d	conversionTimer
	m	(Llu;)V	a	setGossipData
		p	1	gossipTag	gossipTag
	m	(I)V	a	setXp
		p	1	xp	xp
	m	(Ljava/util/UUID;I)V	a	setConverting
		p	1	uuid	uuid
		p	2	delay	delay
	m	(Lbdq;)V	a	setVillagerData
		p	1	data	data
	m	(Lzd;)V	b	finishConversion
		p	1	world	world
	m	()Z	eX	isConverting
	m	()I	fa	getConversionRate
	m	(Lle;)V	g	setOfferData
		p	1	offerTag	offerTag
c	bcw	net/minecraft/entity/mob/ZombifiedPiglinEntity
	f	Ljava/util/UUID;	b	ATTACKING_SPEED_BOOST_ID
	f	I	bv	angrySoundDelay
	f	I	bx	angerTime
	f	Ljava/util/UUID;	by	targetUuid
	f	Lapv;	c	ATTACKING_SPEED_BOOST
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	()Lapw$a;	eX	createZombifiedPiglinAttributes
c	bcx	net/minecraft/entity/mob/HoglinEntity
	f	Z	bA	cannotBeHunted
	f	Lcom/google/common/collect/ImmutableList;	bv	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bw	MEMORY_MODULE_TYPES
	f	Ltq;	bx	BABY
	f	I	by	movementCooldownTicks
	f	I	bz	timeInOverworld
	m	(Lzd;)V	b	zombify
		p	1	word	word
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
	m	()Lapw$a;	eL	createHoglinAttributes
	m	()Z	eM	isAdult
	m	()Z	eO	canConvert
	m	()Z	eP	canBeHunted
	m	()Z	eW	isImmuneToZombification
	m	(Z)V	t	setImmuneToZombification
		p	1	immuneToZombification	immuneToZombification
	m	(Z)V	u	setCannotBeHunted
		p	1	cannotBeHunted	cannotBeHunted
c	bcy	net/minecraft/entity/mob/HoglinBrain
	f	Ladx;	a	AVOID_MEMORY_DURATION
	f	Ladx;	b	WALK_TOWARD_CLOSEST_ADULT_RANGE
	m	(Laoy;Lbcx;)V	a	method_24663
		p	1	hoglin	hoglin
	m	(Lbcx;)V	a	refreshActivities
		p	0	hoglin	hoglin
	m	(Lbcx;Lfu;)Z	a	isWarpedFungusAround
		p	0	hoglin	hoglin
		p	1	pos	pos
	m	(Lbcx;Laoy;)V	a	onAttacking
		p	0	hoglin	hoglin
		p	1	target	target
	m	(Lapr;)Lapr;	a	create
		p	0	brain	brain
	m	()Laru;	a	makeRandomWalkTask
	m	(Lapr;)V	b	addCoreTasks
		p	0	brain	brain
	m	(Laoy;Lbcx;)V	b	method_24670
		p	1	hoglin	hoglin
	m	(Lbcx;Laoy;)V	b	onAttacked
		p	0	hoglin	hoglin
		p	1	attacker	attacker
	m	(Lbcx;Laoy;)V	c	askAdultsToAvoid
		p	0	hoglin	hoglin
		p	1	target	target
	m	(Lapr;)V	c	addIdleTasks
		p	0	brain	brain
	m	(Lbcx;)Z	c	isNearPlayer
		p	0	hoglin	hoglin
	m	(Lbcx;)Ljava/util/Optional;	d	getNearestVisibleTargetablePlayer
		p	0	hoglin	hoglin
	m	(Lapr;)V	d	addFightTasks
		p	0	brain	brain
	m	(Lbcx;Laoy;)V	d	avoidEnemy
		p	0	hoglin	hoglin
		p	1	target	target
	m	(Lbcx;Laoy;)V	e	avoid
		p	0	hoglin	hoglin
		p	1	target	target
	m	(Lapr;)V	e	addAvoidTasks
		p	0	brain	brain
	m	(Lbcx;)Z	f	hasMoreHoglinsAround
		p	0	hoglin	hoglin
	m	(Lbcx;Laoy;)V	f	targetEnemy
		p	0	hoglin	hoglin
		p	1	target	target
	m	(Lbcx;)Ljava/util/List;	g	getAdultHoglinsAround
		p	0	hoglin	hoglin
	m	(Lbcx;Laoy;)V	g	setAttackTarget
		p	0	hoglin	hoglin
		p	1	target	target
	m	(Lbcx;Laoy;)V	h	askAdultsForHelp
		p	0	hoglin	hoglin
		p	1	target	target
	m	(Lbcx;)Z	i	hasBreedTarget
		p	0	hoglin	hoglin
	m	(Lbcx;Laoy;)V	i	setAttackTargetIfCloser
		p	0	hoglin	hoglin
		p	1	targetCandidate	targetCandidate
c	bcz	net/minecraft/entity/mob/Hoglin
	m	(Laoy;Laoy;)Z	a	tryAttack
		p	0	attacker	attacker
		p	1	target	target
	m	(Laoy;Laoy;)V	b	knockback
		p	0	attacker	attacker
		p	1	target	target
	m	()I	eN	getMovementCooldownTicks
c	bd	net/minecraft/advancement/criterion/EntityHurtPlayerCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbd$a;	a	conditionsFromJson
	m	(Lze;Lanw;FFZ)V	a	trigger
		p	1	player	player
		p	2	source	source
		p	3	dealt	dealt
		p	4	taken	taken
		p	5	blocked	blocked
c	bd$a	net/minecraft/advancement/criterion/EntityHurtPlayerCriterion$Conditions
	f	Lat;	a	damage
	m	(Lbe$b;Lat;)V	<init>	<init>
		p	1	player	player
		p	2	damage	damage
	m	(Lze;Lanw;FFZ)Z	a	matches
		p	1	player	player
		p	2	source	source
		p	3	dealt	dealt
		p	4	taken	taken
		p	5	blocked	blocked
	m	(Lat$a;)Lbd$a;	a	create
		p	0	damageBuilder	damageBuilder
c	bdc	net/minecraft/entity/mob/PiglinEntity
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	I	bA	conversionTicks
	f	Lanm;	bB	inventory
	f	Z	bC	cannotHunt
	f	Ltq;	bv	IMMUNE_TO_ZOMBIFICATION
	f	Ltq;	bw	CHARGING
	f	Ltq;	bx	dancing
	f	Ljava/util/UUID;	by	BABY_SPEED_BOOST_ID
	f	Lapv;	bz	BABY_SPEED_BOOST
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_MODULE_TYPES
	f	Ltq;	d	BABY
	m	(Laoq;Lbqc;Lapb;Lfu;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnReason	spawnReason
		p	3	pos	pos
		p	4	random	random
	m	(Lzd;)V	b	zombify
	m	(Laor;Lbki;)V	d	equipAtChance
		p	1	slot	slot
		p	2	stack	stack
	m	()Lapw$a;	eL	createPiglinAttributes
	m	()Z	eM	isAdult
	m	()Z	eN	canHunt
	m	()Z	eO	canConvert
	m	()Lbdc$a;	eP	getActivity
	m	()Z	eQ	isDancing
	m	()Z	eT	isImmuneToZombification
	m	()Lbki;	eU	makeInitialWeapon
	m	()Z	eV	isCharging
	m	()Z	eW	isHoldingTool
	m	(Lbki;)Lbki;	k	addItem
		p	1	stack	stack
	m	(Lbki;)Z	l	canInsertIntoInventory
		p	1	stack	stack
	m	(Lbki;)V	m	equipToMainHand
		p	1	stack	stack
	m	(Lbki;)V	n	equipToOffHand
		p	1	stack	stack
	m	(Lbki;)Z	o	method_24846
		p	1	stack	stack
	m	(Z)V	t	setImmuneToZombification
		p	1	immuneToZombification	immuneToZombification
	m	(Z)V	u	setDancing
		p	1	dancing	dancing
	m	(Z)V	v	setCannotHunt
		p	1	cannotHunt	cannotHunt
c	bdc$a	net/minecraft/entity/mob/PiglinEntity$Activity
c	bdd	net/minecraft/entity/mob/PiglinBrain
	f	Lbke;	a	BARTERING_ITEM
	f	Ladx;	b	HUNT_MEMORY_DURATION
	f	Ladx;	c	MEMORY_TRANSFER_TASK_DURATION
	f	Ladx;	d	RIDE_TARGET_MEMORY_DURATION
	f	Ladx;	e	AVOID_MEMORY_DURATION
	f	Ljava/util/Set;	h	FOOD
	m	(Lbdc;)Z	A	hasAteRecently
		p	0	piglin	piglin
	m	(Lbdc;)Z	B	isAdmiringItem
		p	0	entity	entity
	m	(Lbdc;)Z	C	hasSoulFireNearby
		p	0	piglin	piglin
	m	(Lbdc;)Z	D	hasBeenHitByPlayer
		p	0	piglin	piglin
	m	(Lbdc;)Z	E	hasItemInOffHand
		p	0	piglin	piglin
	m	(Lbdc;)Z	F	doesNotHaveGoldInOffHand
		p	0	piglin	piglin
	m	(Lbdc;Z)V	a	consumeOffHandItem
		p	0	piglin	piglin
	m	(Lapr;)V	a	addCoreActivities
		p	0	piglin	piglin
	m	(Lbbg;)Lbki;	a	getItemFromStack
		p	0	stack	stack
	m	(Lbdc;Lbec;Ljava/util/List;)V	a	dropBarteredItem
		p	0	piglin	piglin
		p	1	player	player
	m	(Lbec;Z)V	a	onGuardedBlockBroken
		p	0	player	player
	m	(Lbdc;Lbbg;)V	a	loot
		p	0	piglin	piglin
		p	1	drop	drop
	m	(Lbdc;Lapr;)Lapr;	a	create
		p	0	piglin	piglin
	m	(Lbec;Lbdc;)V	a	method_24734
		p	1	piglin	piglin
	m	(Laoy;Lbdc;)V	a	method_24721
		p	1	piglin	piglin
	m	(Lbdc;Lbec;Lanf;)Lang;	a	playerInteract
		p	0	piglin	piglin
		p	1	player	player
		p	2	hand	hand
	m	(Lbdc;Laom;)Z	a	canRide
		p	0	piglin	piglin
		p	1	ridden	ridden
	m	()Laru;	a	makeRandomFollowTask
	m	(Laoy;)Z	a	wearsGoldArmor
		p	0	entity	entity
	m	(Laoq;)Z	a	isZombified
		p	0	entityType	entityType
	m	(Lbdc;)V	a	setHuntedRecently
		p	0	piglin	piglin
	m	(Lbdc;Lbfl;)Lack;	a	method_30087
		p	0	piglin	piglin
	m	(Lbdc;Lbki;)Z	a	canGather
		p	0	piglin	piglin
		p	1	stack	stack
	m	(Lbdc;Laoy;)V	a	onAttacked
		p	0	piglin	piglin
		p	1	attacker	attacker
	m	(Lbdc;Ljava/util/List;)V	a	doBarter
		p	0	piglin	piglin
	m	(Lbke;)Z	a	isGoldenItem
		p	0	item	item
	m	(Lbdc;Ljava/util/List;Ldem;)V	a	drop
		p	0	piglin	piglin
	m	(Lbdc;Ljava/util/List;)V	b	dropBarteredItem
		p	0	piglin	piglin
	m	(Lapr;)V	b	addIdleActivities
		p	0	piglin	piglin
	m	(Lbdc;Laoy;)V	b	angerAtCloserTargets
		p	0	piglin	piglin
		p	1	target	target
	m	(Lbke;)Z	b	acceptsForBarter
		p	0	item	item
	m	(Lbdc;Lapr;)V	b	addFightActivities
		p	0	piglin	piglin
		p	1	brain	brain
	m	(Lbdc;Lbki;)Z	b	isWillingToTrade
		p	0	piglin	piglin
		p	1	nearbyItems	nearbyItems
	m	(Laoy;)Z	b	isGoldHoldingPlayer
		p	0	target	target
	m	(Lbdc;)V	b	tickActivities
		p	0	piglin	piglin
	m	()Laru;	b	makeRandomWanderTask
	m	(Lbdc;)V	c	pickupItemWithOffHand
		p	0	piglin	piglin
	m	(Lapr;)V	c	addCelebrateActivities
	m	()Lasb;	c	makeGoToSoulFireTask
	m	(Lbdc;Lbki;)V	c	swapItemWithOffHand
		p	0	piglin	piglin
		p	1	stack	stack
	m	(Lbdc;Laoy;)V	c	becomeAngryWith
		p	0	piglin	piglin
		p	1	target	target
	m	(Laoy;)Z	c	isHoldingCrossbow
		p	0	piglin	piglin
	m	(Lbke;)Z	c	isFood
		p	0	item	item
	m	(Lapr;)V	d	addAdmireItemActivities
	m	(Lbdc;Laoy;)Z	d	isPreferredAttackTarget
		p	0	piglin	piglin
		p	1	target	target
	m	(Laoy;)V	d	setAdmiringItem
		p	0	entity	entity
	m	(Lbdc;Lbki;)V	d	barterItem
		p	0	piglin	piglin
		p	1	stack	stack
	m	(Lbdc;)Ljava/util/Optional;	d	method_30091
		p	0	piglin	piglin
	m	(Lapr;)V	e	addAvoidActivities
	m	(Lbdc;)Z	e	haveHuntedHoglinsRecently
		p	0	piglin	piglin
	m	(Laoy;)Z	e	shouldAttack
		p	0	target	target
	m	(Lbdc;Laoy;)V	e	tryRevenge
	m	()Laql;	e	makeGoToZombifiedPiglinTask
	m	(Lbdc;Laoy;)V	f	becomeAngryWithPlayer
		p	0	piglin	piglin
		p	1	player	player
	m	(Laoy;)Z	f	hasPlayerHoldingWantedItemNearby
		p	0	entity	entity
	m	()Larv;	f	makeRememberRideableHoglinTask
	m	(Lapr;)V	f	addRideActivities
	m	(Lbdc;)V	f	angerNearbyPiglins
		p	0	piglin	piglin
	m	(Laoy;)Z	g	canWander
		p	0	piglin	piglin
	m	(Lbdc;)V	g	rememberGroupHunting
		p	0	piglin	piglin
	m	(Lbdc;Laoy;)V	g	angerAtIfCloser
		p	0	piglin	piglin
		p	1	target	target
	m	(Laoy;)Z	h	hasBeenHurt
		p	0	piglin	piglin
	m	(Lbdc;Laoy;)V	h	groupRunAwayFrom
		p	0	piglin	piglin
		p	1	target	target
	m	(Lbdc;)Ljava/util/Optional;	i	getNearestDetectedPlayer
		p	0	piglin	piglin
	m	(Lbdc;Laoy;)V	i	runAwayFromClosestTarget
		p	0	piglin	piglin
		p	1	target	target
	m	(Lbdc;)V	j	rememberHunting
		p	0	piglin	piglin
	m	(Lbdc;Laoy;)V	j	runAwayFrom
		p	0	piglin	piglin
		p	1	target	target
	m	(Lbdc;)Z	k	hasIdleActivity
		p	0	piglin	piglin
	m	(Lbdc;)Z	l	canRideHoglin
		p	0	piglin	piglin
	m	(Lbdc;)Ljava/util/List;	m	getBarteredItem
		p	0	piglin	piglin
	m	(Lbdc;)Z	n	getNearestZombifiedPiglin
		p	0	piglin	piglin
	m	(Lbdc;)Ljava/util/Optional;	o	getPreferredTarget
		p	0	piglin	piglin
	m	(Lbdc;)Z	p	hasTargetToAvoid
		p	0	piglin	piglin
	m	(Lbdc;)Ljava/util/List;	q	getNearbyVisiblePiglins
		p	0	piglin	piglin
	m	(Lbdc;)Ljava/util/List;	r	getNearbyPiglins
		p	0	piglin	piglin
	m	(Lbdc;)V	s	stopWalking
		p	0	piglin	piglin
	m	(Lbdc;)Ljava/util/Optional;	t	getAngryAt
		p	0	piglin	piglin
	m	(Lbdc;)Z	u	shouldRunAwayFromHoglins
		p	0	piglin	piglin
	m	(Lbdc;)Z	v	hasNoAdvantageAgainstHoglins
		p	0	piglin	piglin
	m	(Lbdc;)Z	w	hasOutnumberedHoglins
		p	0	piglins	piglins
	m	(Lbdc;)V	y	setEatenRecently
		p	0	piglin	piglin
	m	(Lbdc;)Ldem;	z	findGround
		p	0	piglin	piglin
c	bde	net/minecraft/entity/ai/brain/task/HuntFinishTask
	m	(Lzd;Lbdc;J)V	a	run
	m	(Lbdc;)Z	a	hasKilledHoglin
		p	1	piglin	piglin
c	bdf	net/minecraft/entity/ai/brain/task/AdmireItemTask
	f	I	b	duration
	m	(I)V	<init>	<init>
		p	1	duration	duration
	m	(Lzd;Lbdc;J)V	a	run
	m	(Lzd;Lbdc;)Z	a	shouldRun
c	bdg	net/minecraft/entity/ai/brain/task/HuntHoglinTask
	m	(Lzd;Lbdc;J)V	a	run
	m	(Lzd;Lbdc;)Z	a	shouldRun
c	bdh	net/minecraft/entity/ai/brain/task/WantNewItemTask
	f	I	b	range
	m	(I)V	<init>	<init>
		p	1	range	range
	m	(Lzd;Lbdc;J)V	a	run
	m	(Lzd;Lbdc;)Z	a	shouldRun
c	bdi	net/minecraft/entity/ai/brain/task/RemoveOffHandItemTask
	m	(Lzd;Lbdc;J)V	a	run
	m	(Lzd;Lbdc;)Z	a	shouldRun
c	bdk	net/minecraft/entity/passive/AbstractTraderEntity
	f	Lbpa;	bv	offers
	f	Ltq;	bw	HEAD_ROLLING_TIME_LEFT
	f	Lbec;	bx	customer
	f	Lanm;	by	inventory
	m	(Lbpa;[Lbdt$f;I)V	a	fillRecipesFromPool
		p	1	recipeList	recipeList
		p	2	pool	pool
		p	3	count	count
	m	(Lhf;)V	a	produceParticles
		p	1	parameters	parameters
	m	(Lboz;)V	b	afterUsing
		p	1	offer	offer
	m	()I	eL	getHeadRollingTimeLeft
	m	()Z	eO	hasCustomer
	m	()V	eS	playCelebrateSound
	m	()V	eT	resetCustomer
	m	()Lanm;	eU	getInventory
	m	()V	eW	fillRecipes
	m	(I)V	s	setHeadRollingTimeLeft
		p	1	ticks	ticks
	m	(Z)Lack;	t	getTradingSound
		p	1	sold	sold
c	bdl	net/minecraft/world/gen/CatSpawner
	f	I	a	ticksUntilNextSpawn
	m	(Lbqb;Lfu;)I	a	spawnInSwampHut
		p	1	world	world
		p	2	pos	pos
	m	(Lzd;Lfu;)I	a	spawnInHouse
		p	1	world	world
		p	2	pos	pos
	m	(Lfu;Lbqb;)I	a	spawn
		p	1	pos	pos
		p	2	world	world
c	bdm	net/minecraft/village/SimpleTrader
	f	Lbhl;	a	traderInventory
	f	Lbec;	b	player
	f	Lbpa;	c	recipeList
	f	I	d	experience
c	bdo	net/minecraft/entity/Npc
c	bdp	net/minecraft/entity/passive/VillagerEntity
	f	I	bA	levelUpTimer
	f	Z	bB	levelingUp
	f	Lbec;	bC	lastCustomer
	f	B	bE	foodLevel
	f	Lawl;	bF	gossip
	f	J	bG	gossipStartTime
	f	J	bH	lastGossipDecayTime
	f	I	bI	experience
	f	J	bJ	lastRestockTime
	f	I	bK	restocksToday
	f	J	bL	lastRestockCheckTime
	f	Z	bM	natural
	f	Lcom/google/common/collect/ImmutableList;	bN	MEMORY_MODULES
	f	Lcom/google/common/collect/ImmutableList;	bO	SENSORS
	f	Ljava/util/Map;	bw	ITEM_FOOD_VALUES
	f	Ljava/util/Map;	bx	POINTS_OF_INTEREST
	f	Ltq;	by	VILLAGER_DATA
	f	Ljava/util/Set;	bz	GATHERABLE_ITEMS
	m	(Laoq;Lbqb;Lbdu;)V	<init>	<init>
		p	1	entityType	entityType
		p	2	world	world
		p	3	type	type
	m	(J)Z	a	canSummonGolem
		p	1	time	time
	m	(JI)V	a	summonGolem
		p	1	time	time
		p	3	requiredVillagerCount	requiredVillagerCount
	m	(Laom;)V	a	notifyDeath
		p	1	killer	killer
	m	(Lbdq;)V	a	setVillagerData
		p	1	villagerData	villagerData
	m	(Lbdp;J)V	a	talkWithVillager
		p	1	villager	villager
		p	2	time	time
	m	(Lawp;)V	a	releaseTicketFor
	m	(Llu;)V	a	setGossipDataFromTag
	m	(Lapr;)V	a	initBrain
		p	1	brain	brain
	m	(Laok;)Lbdp;	b	createChild
	m	(J)V	b	setGolemLastSeenTime
		p	1	time	time
	m	(Lbpa;)V	b	setOffers
		p	1	offers	offers
	m	(Lzd;)V	b	reinitializeBrain
		p	1	world	world
	m	(J)Z	c	hasSeenGolemRecently
		p	1	currentTime	currentTime
	m	(J)Z	d	hasRecentlyWorkedAndSlept
		p	1	worldTime	worldTime
	m	()Lapw$a;	eX	createVillagerAttributes
	m	()Z	eZ	isNatural
	m	()V	fb	restock
	m	()Z	fc	shouldRestock
	m	()V	fd	playWorkSound
	m	()V	ff	eatForBreeding
	m	()Z	fg	wantsToStartBreeding
	m	()Z	fh	canBreed
	m	()Z	fi	hasSeedToPlant
	m	()Lawl;	fj	getGossip
	m	()V	fk	sayNo
	m	()V	fl	clearCurrentBonus
	m	()Z	fm	needRestock
	m	()Z	fn	canRestock
	m	()V	fp	updatePricesOnDemand
	m	()Z	fq	lacksFood
	m	()V	fr	consumeAvailableFood
	m	()Z	fs	canLevelUp
	m	()V	ft	levelUp
	m	()I	fu	getAvailableFood
	m	()V	fv	decayGossip
	m	()Layt;	fw	spawnIronGolem
	m	()V	fx	clearDailyRestockCount
	m	(Lbec;)I	g	getReputation
		p	1	player	player
	m	(Lbec;)V	h	beginTradeWith
		p	1	customer	customer
	m	(Lbec;)V	i	prepareRecipesFor
		p	1	player	player
	m	(I)V	u	setExperience
		p	1	amount	amount
	m	(I)V	v	depleteFood
		p	1	amount	amount
c	bdq	net/minecraft/village/VillagerData
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	[I	b	LEVEL_BASE_EXPERIENCE
	f	Lbdu;	c	type
	f	Lbds;	d	profession
	f	I	e	level
	m	(Lbds;)Lbdq;	a	withProfession
	m	()Lbdu;	a	getType
	m	(Lbdu;)Lbdq;	a	withType
	m	(I)Lbdq;	a	withLevel
		p	1	level	level
	m	()Lbds;	b	getProfession
	m	(I)I	b	getLowerLevelExperience
		p	0	level	level
	m	()I	c	getLevel
	m	(I)I	c	getUpperLevelExperience
		p	0	level	level
	m	(I)Z	d	canLevelUp
		p	0	level	level
c	bdr	net/minecraft/village/VillagerDataContainer
	m	()Lbdq;	eY	getVillagerData
c	bds	net/minecraft/village/VillagerProfession
	f	Ljava/lang/String;	p	id
	f	Layc;	q	workStation
	f	Lcom/google/common/collect/ImmutableSet;	r	gatherableItems
	f	Lcom/google/common/collect/ImmutableSet;	s	secondaryJobSites
	f	Lack;	t	workSound
	m	(Ljava/lang/String;Layc;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lack;)V	<init>	<init>
		p	1	id	id
		p	2	workStation	workStation
		p	3	gatherableItems	gatherableItems
		p	4	secondaryJobSites	secondaryJobSites
		p	5	workSound	workSound
	m	(Ljava/lang/String;Layc;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lack;)Lbds;	a	register
		p	0	id	id
		p	1	workStation	workStation
		p	2	gatherableItems	gatherableItems
		p	3	secondaryJobSites	secondaryJobSites
		p	4	workSound	workSound
	m	(Ljava/lang/String;Layc;Lack;)Lbds;	a	register
		p	0	id	id
		p	1	workStation	workStation
		p	2	workSound	workSound
	m	()Layc;	b	getWorkStation
	m	()Lcom/google/common/collect/ImmutableSet;	c	getGatherableItems
	m	()Lcom/google/common/collect/ImmutableSet;	d	getSecondaryJobSites
	m	()Lack;	e	getWorkSound
c	bdt	net/minecraft/village/TradeOffers
	f	Ljava/util/Map;	a	PROFESSION_TO_LEVELED_TRADE
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	WANDERING_TRADER_TRADES
	m	(Ljava/util/HashMap;)V	a	method_16929
		p	0	map	map
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	copyToFastUtilMap
		p	0	map	map
c	bdt$a	net/minecraft/village/TradeOffers$SellDyedArmorFactory
	f	Lbke;	a	sell
	f	I	b	price
	f	I	c	maxUses
	f	I	d	experience
	m	(Lbke;III)V	<init>	<init>
		p	1	item	item
		p	2	price	price
		p	3	maxUses	maxUses
		p	4	experience	experience
	m	(Lbke;I)V	<init>	<init>
		p	1	item	item
		p	2	price	price
	m	(Ljava/util/Random;)Lbjf;	a	getDye
c	bdt$b	net/minecraft/village/TradeOffers$BuyForOneEmeraldFactory
	f	Lbke;	a	buy
	f	I	b	price
	f	I	c	maxUses
	f	I	d	experience
	f	F	e	multiplier
	m	(Lbqa;III)V	<init>	<init>
		p	1	item	item
		p	2	price	price
		p	3	maxUses	maxUses
		p	4	experience	experience
c	bdt$c	net/minecraft/village/TradeOffers$TypeAwareBuyForOneEmeraldFactory
	f	Ljava/util/Map;	a	map
	f	I	b	count
	f	I	c	maxUses
	f	I	d	experience
	m	(IIILjava/util/Map;)V	<init>	<init>
		p	1	count	count
		p	2	maxUses	maxUses
		p	3	experience	experience
		p	4	map	map
c	bdt$d	net/minecraft/village/TradeOffers$EnchantBookFactory
	f	I	a	experience
	m	(I)V	<init>	<init>
		p	1	experience	experience
c	bdt$e	net/minecraft/village/TradeOffers$SellEnchantedToolFactory
	f	Lbki;	a	tool
	f	I	b	basePrice
	f	I	c	maxUses
	f	I	d	experience
	f	F	e	multiplier
	m	(Lbke;III)V	<init>	<init>
		p	1	item	item
		p	2	basePrice	basePrice
		p	3	maxUses	maxUses
		p	4	experience	experience
	m	(Lbke;IIIF)V	<init>	<init>
		p	1	item	item
		p	2	basePrice	basePrice
		p	3	maxUses	maxUses
		p	4	experience	experience
		p	5	multiplier	multiplier
c	bdt$f	net/minecraft/village/TradeOffers$Factory
	c	A factory to create trade offers.
	m	(Laom;Ljava/util/Random;)Lboz;	a	create
		c	Creates a trade offer.\n\n@return a new trade offer, or {@code null} if none should be created
		p	1	entity	entity
		p	2	random	random
c	bdt$g	net/minecraft/village/TradeOffers$ProcessItemFactory
	f	Lbki;	a	secondBuy
	f	I	b	secondCount
	f	I	c	price
	f	Lbki;	d	sell
	f	I	e	sellCount
	f	I	f	maxUses
	f	I	g	experience
	f	F	h	multiplier
	m	(Lbqa;IILbke;III)V	<init>	<init>
		p	1	item	item
		p	2	secondCount	secondCount
		p	3	price	price
		p	4	sellItem	sellItem
		p	5	sellCount	sellCount
		p	6	maxUses	maxUses
		p	7	experience	experience
	m	(Lbqa;ILbke;III)V	<init>	<init>
		p	1	item	item
		p	2	secondCount	secondCount
		p	3	sellItem	sellItem
		p	4	sellCount	sellCount
		p	5	maxUses	maxUses
		p	6	experience	experience
c	bdt$h	net/minecraft/village/TradeOffers$SellItemFactory
	f	Lbki;	a	sell
	f	I	b	price
	f	I	c	count
	f	I	d	maxUses
	f	I	e	experience
	f	F	f	multiplier
	m	(Lbvr;IIII)V	<init>	<init>
		p	1	block	block
		p	2	price	price
		p	3	count	count
		p	4	maxUses	maxUses
		p	5	experience	experience
	m	(Lbke;III)V	<init>	<init>
		p	1	item	item
		p	2	price	price
		p	3	count	count
		p	4	experience	experience
	m	(Lbki;IIIIF)V	<init>	<init>
		p	1	stack	stack
		p	2	price	price
		p	3	count	count
		p	4	maxUses	maxUses
		p	5	experience	experience
		p	6	multiplier	multiplier
	m	(Lbke;IIII)V	<init>	<init>
		p	1	item	item
		p	2	price	price
		p	3	count	count
		p	4	maxUses	maxUses
		p	5	experience	experience
	m	(Lbki;IIII)V	<init>	<init>
		p	1	stack	stack
		p	2	price	price
		p	3	count	count
		p	4	maxUses	maxUses
		p	5	experience	experience
c	bdt$i	net/minecraft/village/TradeOffers$SellSuspiciousStewFactory
	f	Laoe;	a	effect
	f	I	b	duration
	f	I	c	experience
	f	F	d	multiplier
	m	(Laoe;II)V	<init>	<init>
		p	1	effect	effect
		p	2	duration	duration
		p	3	experience	experience
c	bdt$j	net/minecraft/village/TradeOffers$SellPotionHoldingItemFactory
	f	Lbki;	a	sell
	f	I	b	sellCount
	f	I	c	price
	f	I	d	maxUses
	f	I	e	experience
	f	Lbke;	f	secondBuy
	f	I	g	secondCount
	f	F	h	priceMultiplier
	m	(Lbke;ILbke;IIII)V	<init>	<init>
		p	1	arrow	arrow
		p	2	secondCount	secondCount
		p	3	tippedArrow	tippedArrow
		p	4	sellCount	sellCount
		p	5	price	price
		p	6	maxUses	maxUses
		p	7	experience	experience
c	bdt$k	net/minecraft/village/TradeOffers$SellMapFactory
	f	I	a	price
	f	Lcml;	b	structure
	f	Lczs$a;	c	iconType
	f	I	d	maxUses
	f	I	e	experience
	m	(ILcml;Lczs$a;II)V	<init>	<init>
		p	1	price	price
		p	2	feature	feature
		p	3	iconType	iconType
		p	4	maxUses	maxUses
		p	5	experience	experience
c	bdu	net/minecraft/village/VillagerType
	f	Lbdu;	a	DESERT
	f	Lbdu;	b	JUNGLE
	f	Lbdu;	c	PLAINS
	f	Lbdu;	d	SAVANNA
	f	Lbdu;	e	SNOW
	f	Lbdu;	f	SWAMP
	f	Lbdu;	g	TAIGA
	f	Ljava/util/Map;	h	BIOME_TO_TYPE
	m	(Lbre;)Lbdu;	a	forBiome
		p	0	biome	biome
	m	(Ljava/lang/String;)Lbdu;	a	create
		p	0	id	id
c	bdv	net/minecraft/entity/passive/WanderingTraderEntity
	f	Lfu;	bw	wanderTarget
	f	I	bx	despawnDelay
	m	()I	eX	getDespawnDelay
	m	()V	eY	tickDespawnDelay
	m	()Lfu;	eZ	getWanderTarget
	m	(Lfu;)V	g	setWanderTarget
		p	1	pos	pos
	m	(I)V	u	setDespawnDelay
		p	1	delay	delay
c	bdv$a	net/minecraft/entity/passive/WanderingTraderEntity$WanderToTargetGoal
	f	Lbdv;	a	trader
	f	D	b	proximityDistance
	f	D	c	speed
	m	(Lbdv;Lbdv;DD)V	<init>	<init>
		p	2	trader	trader
		p	3	proximityDistance	proximityDistance
		p	5	speed	speed
	m	(Lfu;D)Z	a	isTooFarFrom
		p	1	pos	pos
		p	2	proximityDistance	proximityDistance
c	bdw	net/minecraft/world/WanderingTraderManager
	f	Ljava/util/Random;	a	random
	f	I	c	spawnTimer
	f	I	d	spawnDelay
	f	I	e	spawnChance
	m	(Lbdv;I)V	a	spawnLlama
		p	1	wanderingTrader	wanderingTrader
		p	2	range	range
	m	(Lbpg;Lfu;)Z	a	doesNotSuffocateAt
	m	(Lbqd;Lfu;I)Lfu;	a	getNearbySpawnPos
c	bdz	net/minecraft/entity/player/PlayerAbilities
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	allowFlying
	f	Z	d	creativeMode
	f	Z	e	allowModifyWorld
	f	F	f	flySpeed
	f	F	g	walkSpeed
	m	()F	a	getFlySpeed
	m	(Lle;)V	a	serialize
	m	(F)V	a	setFlySpeed
		p	1	flySpeed	flySpeed
	m	(Lle;)V	b	deserialize
	m	(F)V	b	setWalkSpeed
		p	1	walkSpeed	walkSpeed
	m	()F	b	getWalkSpeed
c	be	net/minecraft/predicate/entity/EntityPredicate
	f	Lbe;	a	ANY
	f	Lbf;	b	type
	f	Law;	c	distance
	f	Lbu;	d	location
	f	Lby;	e	effects
	f	Lbz;	f	nbt
	f	Lbc;	g	flags
	f	Lbb;	h	equipment
	f	Lce;	i	player
	f	Lbh;	j	fishingHook
	f	Lbe;	k	vehicle
	f	Lbe;	l	targetedEntity
	f	Ljava/lang/String;	m	team
	f	Luh;	n	catType
	m	(Lbf;Law;Lbu;Lby;Lbz;Lbc;Lbb;Lce;Lbh;Lbe;Lbe;Ljava/lang/String;Luh;)V	<init>	<init>
		p	1	type	type
		p	2	distance	distance
		p	3	location	location
		p	4	effects	effects
		p	5	nbt	nbt
		p	6	flags	flags
		p	7	equipment	equipment
		p	8	player	player
		p	9	fishingHook	fishingHook
		p	10	vehicle	vehicle
		p	11	targetedEntity	targetedEntity
		p	12	team	team
		p	13	catType	catType
	m	(Lze;Laom;)Z	a	test
		p	1	player	player
		p	2	entity	entity
	m	(Lzd;Ldem;Laom;)Z	a	test
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonElement;)Lbe;	a	fromJson
		p	0	json	json
	m	(Lze;Laom;)Ldat;	b	createAdvancementEntityLootContext
		p	0	player	player
		p	1	target	target
c	be$a	net/minecraft/predicate/entity/EntityPredicate$Builder
	f	Lbf;	a	type
	f	Law;	b	distance
	f	Lbu;	c	location
	f	Lby;	d	effects
	f	Lbz;	e	nbt
	f	Lbc;	f	flags
	f	Lbb;	g	equipment
	f	Lce;	h	player
	f	Lbh;	i	fishHook
	f	Lbe;	j	vehicle
	f	Lbe;	k	targetedEntity
	f	Ljava/lang/String;	l	team
	f	Luh;	m	catType
	m	(Law;)Lbe$a;	a	distance
		p	1	distance	distance
	m	(Lbc;)Lbe$a;	a	flags
		p	1	flags	flags
	m	()Lbe$a;	a	create
	m	(Lbu;)Lbe$a;	a	location
		p	1	location	location
	m	(Lbz;)Lbe$a;	a	nbt
		p	1	nbt	nbt
	m	(Lbh;)Lbe$a;	a	fishHook
		p	1	fishHook	fishHook
	m	(Laoq;)Lbe$a;	a	type
		p	1	type	type
	m	(Lce;)Lbe$a;	a	player
		p	1	player	player
	m	(Lbb;)Lbe$a;	a	equipment
		p	1	equipment	equipment
	m	(Lbe;)Lbe$a;	a	vehicle
		p	1	vehicle	vehicle
	m	(Lbf;)Lbe$a;	a	type
		p	1	type	type
	m	(Lby;)Lbe$a;	a	effects
		p	1	effects	effects
	m	(Ljava/lang/String;)Lbe$a;	a	team
		p	1	team	team
	m	(Ladf;)Lbe$a;	a	type
		p	1	tag	tag
	m	(Luh;)Lbe$a;	a	type
		p	1	catType	catType
	m	(Luh;)Lbe$a;	b	catType
		p	1	catType	catType
	m	()Lbe;	b	build
	m	(Lbe;)Lbe$a;	b	targetedEntity
		p	1	targetedEntity	targetedEntity
c	be$b	net/minecraft/predicate/entity/EntityPredicate$Extended
	f	Lbe$b;	a	EMPTY
	f	[Lddm;	b	conditions
	f	Ljava/util/function/Predicate;	c	combinedCondition
	m	([Lddm;)V	<init>	<init>
		p	1	conditions	conditions
	m	(Lcg;)Lcom/google/gson/JsonElement;	a	toJson
		p	1	predicateSerializer	predicateSerializer
	m	([Lddm;)Lbe$b;	a	create
		p	0	conditions	conditions
	m	(Lbe;)Lbe$b;	a	ofLegacy
		p	0	predicate	predicate
	m	(Ldat;)Z	a	test
		p	1	context	context
	m	([Lbe$b;Lcg;)Lcom/google/gson/JsonElement;	a	toPredicatesJsonArray
		p	0	predicates	predicates
		p	1	predicateSerializer	predicateSerializer
	m	(Ljava/lang/String;Lav;Lcom/google/gson/JsonElement;)Lbe$b;	a	fromJson
		p	0	key	key
		p	1	predicateDeserializer	predicateDeserializer
		p	2	json	json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lav;)Lbe$b;	a	getInJson
		c	Parses an extended entity check in a sub-value in JSON, accepting objects\nas simple entity predicates or array as list of loot conditions.\n\n@see <a href="https://www.minecraft.net/en-us/article/minecraft-snapshot-20w18a">\nMojang description</a>
		p	0	root	root
		p	1	key	key
		p	2	predicateDeserializer	predicateDeserializer
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lav;)[Lbe$b;	b	requireInJson
		c	Parses an extended entity check in a sub-value in JSON. The value must\nbe absent, JSON null, or an array, or the parser will error. In other\nwords, it does not accept object sub-values.
		p	0	root	root
		p	1	key	key
		p	2	predicateDeserializer	predicateDeserializer
c	bea	net/minecraft/client/options/ChatVisibility
	f	I	e	id
	f	Ljava/lang/String;	f	key
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	key	key
	m	()I	a	getId
	m	(I)Lbea;	a	byId
	m	()Ljava/lang/String;	b	getTranslationKey
c	beb	net/minecraft/entity/player/PlayerInventory
	f	Lgi;	a	main
	f	Lgi;	b	armor
	f	Lgi;	c	offHand
	f	I	d	selectedSlot
	f	Lbec;	e	player
	f	Ljava/util/List;	f	combinedInventory
	f	Lbki;	g	cursorStack
	f	I	h	changeCount
	m	(Lbec;)V	<init>	<init>
		p	1	player	player
	m	(Lanw;F)V	a	damageArmor
		p	1	damageSource	damageSource
	m	(Lbee;)V	a	populateRecipeFinder
		p	1	finder	finder
	m	(Lcfj;)F	a	getBlockBreakingSpeed
		p	1	block	block
	m	(Lbki;)V	a	addPickBlock
		p	1	stack	stack
	m	(Ladf;)Z	a	contains
		p	1	tag	tag
	m	(Lbki;Lbki;)Z	a	canStackAddMore
		p	1	existingStack	existingStack
		p	2	stack	stack
	m	(Lbeb;)V	a	clone
		p	1	other	other
	m	(Lbqb;Lbki;)V	a	offerOrDrop
		p	1	world	world
		p	2	stack	stack
	m	(D)V	a	scrollInHotbar
		p	1	scrollAmount	scrollAmount
	m	(Llk;)Llk;	a	serialize
		p	1	tag	tag
	m	(Lbki;)I	b	getSlotWithStack
		p	1	stack	stack
	m	(Lbki;Lbki;)Z	b	areItemsEqual
		p	1	stack1	stack1
		p	2	stack2	stack2
	m	(Llk;)V	b	deserialize
		p	1	tag	tag
	m	(I)V	c	swapSlotWithHotbar
		p	1	hotbarSlot	hotbarSlot
	m	(ILbki;)Z	c	insertStack
		p	1	slot	slot
		p	2	stack	stack
	m	(ILbki;)I	d	addStack
		p	1	slot	slot
		p	2	stack	stack
	m	(Lbki;)I	d	getOccupiedSlotWithRoomForStack
		p	1	stack	stack
	m	(I)Z	d	isValidHotbarIndex
		p	0	slot	slot
	m	(Lbki;)Z	e	insertStack
		p	1	stack	stack
	m	(I)Lbki;	e	getArmorStack
		p	1	slot	slot
	m	(Lbki;)V	f	removeOne
		p	1	stack	stack
	m	()Lbki;	f	getMainHandStack
	m	()I	g	getHotbarSize
	m	(Lbki;)V	g	setCursorStack
		p	1	stack	stack
	m	(Lbki;)Z	h	contains
		p	1	stack	stack
	m	()I	h	getEmptySlot
	m	()I	i	getSwappableHotbarSlot
	m	(Lbki;)I	i	addStack
		p	1	stack	stack
	m	()V	j	updateItems
	m	()V	k	dropAll
	m	()I	l	getChangeCount
	m	()Lbki;	m	getCursorStack
c	bec	net/minecraft/entity/player/PlayerEntity
	f	Ljava/util/Map;	b	POSE_DIMENSIONS
	f	F	bA	strideDistance
	f	I	bB	experiencePickUpDelay
	f	D	bC	prevCapeX
	f	D	bD	prevCapeY
	f	D	bE	prevCapeZ
	f	D	bF	capeX
	f	D	bG	capeY
	f	D	bH	capeZ
	f	Z	bI	isSubmergedInWater
	f	Lbdz;	bJ	abilities
	f	I	bK	experienceLevel
	f	I	bL	totalExperience
	f	F	bM	experienceProgress
	f	I	bN	enchantmentTableSeed
	f	Lbeo;	bP	fishHook
	f	Lcom/mojang/authlib/GameProfile;	bQ	gameProfile
	f	Z	bR	reducedDebugInfo
	f	Lbki;	bS	selectedItem
	f	Lbkf;	bT	itemCooldownManager
	f	Laon;	bo	STANDING_DIMENSIONS
	f	Ltq;	bp	PLAYER_MODEL_PARTS
	f	Ltq;	bq	MAIN_ARM
	f	Ltq;	br	LEFT_SHOULDER_ENTITY
	f	Ltq;	bs	RIGHT_SHOULDER_ENTITY
	f	Lbeb;	bt	inventory
	f	Lbho;	bu	enderChestInventory
	f	Lbhf;	bv	playerScreenHandler
	f	Lbgi;	bw	currentScreenHandler
	f	Lbge;	bx	hungerManager
	f	I	by	abilityResyncCountdown
	f	F	bz	prevStrideDistance
	f	Ltq;	c	ABSORPTION_AMOUNT
	f	Ltq;	d	SCORE
	f	J	e	shoulderEntityAddedTime
	f	I	f	sleepTimer
	f	I	g	lastPlayedLevelUpSoundTime
	m	([Luh;)V	a	unlockRecipes
		p	1	ids	ids
	m	(Lbpy;)V	a	setGameMode
		p	1	gameMode	gameMode
	m	(Lbki;Lanf;)V	a	openEditBookScreen
		p	1	book	book
		p	2	hand	hand
	m	(Lceb;)V	a	openJigsawScreen
		p	1	jigsaw	jigsaw
	m	(Lcdq;)V	a	openCommandBlockScreen
		p	1	commandBlock	commandBlock
	m	(Ljava/util/Collection;)I	a	unlockRecipes
		p	1	recipes	recipes
	m	(Lfu;)Lcom/mojang/datafixers/util/Either;	a	trySleep
		p	1	pos	pos
	m	(Lbpc;)V	a	openCommandBlockMinecartScreen
		p	1	commandBlockExecutor	commandBlockExecutor
	m	(Lbqb;Lfu;Lbpy;)Z	a	isBlockBreakingRestricted
		p	1	world	world
		p	2	pos	pos
		p	3	gameMode	gameMode
	m	(ZZ)V	a	wakeUp
		p	2	updateSleepingPlayers	updateSleepingPlayers
	m	(Lfu;Lfz;Lbki;)Z	a	canPlaceOn
		p	1	pos	pos
		p	2	facing	facing
		p	3	stack	stack
	m	(Lbki;I)V	a	applyEnchantmentCosts
		p	1	enchantedItem	enchantedItem
		p	2	experienceLevels	experienceLevels
	m	(Lacr;)V	a	resetStat
		p	1	stat	stat
	m	(Lanj;)Ljava/util/OptionalInt;	a	openHandledScreen
		p	1	factory	factory
	m	(Lceh;)V	a	openEditSignScreen
		p	1	sign	sign
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID;	a	getUuidFromProfile
		p	0	profile	profile
	m	(ILbpa;IIZZ)V	a	sendTradeOffers
		p	1	syncId	syncId
		p	2	offers	offers
		p	3	levelProgress	levelProgress
		p	4	experience	experience
		p	5	leveled	leveled
		p	6	refreshable	refreshable
	m	(Luh;)V	a	incrementStat
		p	1	stat	stat
	m	(Laom;)V	a	addCritParticles
		p	1	target	target
	m	(Lmx;)Lmx;	a	addTellClickEvent
		p	1	component	component
	m	(Luh;I)V	a	increaseStat
		p	1	stat	stat
		p	2	amount	amount
	m	(Lbki;ZZ)Lbbg;	a	dropItem
		p	1	stack	stack
		p	2	throwRandomly	throwRandomly
			c	If true, the item will be thrown in a random direction from the entity regardless of which direction the entity is facing
		p	3	retainOwnership	retainOwnership
	m	(Laou;)V	a	setMainArm
		p	1	arm	arm
	m	(Lacr;I)V	a	increaseStat
		p	1	stat	stat
		p	2	amount	amount
	m	(Lcel;)V	a	openStructureBlockScreen
		p	1	structureBlock	structureBlock
	m	(Lbed;)Z	a	isPartVisible
		p	1	modelPart	modelPart
	m	(Lack;Lacm;FF)V	a	playSound
		p	1	event	event
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
	m	(Z)Z	a	dropSelectedItem
		p	1	dropEntireStack	dropEntireStack
	m	(Lzd;Lfu;ZZ)Ljava/util/Optional;	a	findRespawnPosition
		p	0	world	world
		p	1	pos	pos
	m	(Lhf;)V	a	spawnParticles
		p	1	parameters	parameters
	m	(Lbki;Z)Lbbg;	a	dropItem
		p	1	stack	stack
		p	2	retainOwnership	retainOwnership
	m	(Lbec;)Z	a	shouldDamagePlayer
		p	1	player	player
	m	(Laom;Lanf;)Lang;	a	interact
		p	1	entity	entity
		p	2	hand	hand
	m	(Lmr;Z)V	a	sendMessage
		p	1	message	message
		p	2	actionBar	actionBar
	m	(Lazm;Lamz;)V	a	openHorseInventory
		p	1	horse	horse
		p	2	inventory	inventory
	m	(Lacr;)V	b	incrementStat
		p	1	stat	stat
	m	(Ljava/util/Collection;)I	b	lockRecipes
		p	1	recipes	recipes
	m	(Laom;)V	b	addEnchantedHitParticles
		p	1	target	target
	m	()Z	b_	isCreative
	m	(Lcfj;)F	c	getBlockBreakingSpeed
		p	1	block	block
	m	(Laom;)V	c	collideWithEntity
		p	1	entity	entity
	m	(I)V	c	addExperienceLevels
		p	1	levels	levels
	m	(Ljava/lang/String;)Ljava/util/UUID;	c	getOfflinePlayerUuid
		p	0	nickname	nickname
	m	(Lcfj;)Z	d	isUsingEffectiveTool
		p	1	block	block
	m	(I)V	d	addExperience
		p	1	experience	experience
	m	()Z	eA	isSleepingLongEnough
	m	()I	eB	getSleepTimer
	m	()Z	eC	checkFallFlying
	m	()V	eD	startFallFlying
	m	()V	eE	stopFallFlying
	m	()I	eF	getEnchantmentTableSeed
	m	()I	eG	getNextLevelExperience
	m	()Lbge;	eH	getHungerManager
	m	()Z	eI	canFoodHeal
	m	()Z	eJ	canModifyBlocks
	m	()Lbho;	eK	getEnderChestInventory
	m	()V	eL	dropShoulderEntities
	m	()Ldfm;	eM	getScoreboard
	m	()Lmr;	eN	getNameAndUuid
	m	()Z	eO	getReducedDebugInfo
	m	()Lle;	eP	getShoulderEntityLeft
	m	()Lle;	eQ	getShoulderEntityRight
	m	()F	eR	getAttackCooldownProgressPerTick
	m	()V	eS	resetLastAttackedTicks
	m	()Lbkf;	eT	getItemCooldownManager
	m	()F	eU	getLuck
	m	()Z	eV	isCreativeLevelTwoOp
	m	()Lapw$a;	eo	createPlayerAttributes
	m	()Z	ep	shouldCancelInteraction
	m	()Z	eq	shouldDismount
	m	()Z	er	clipAtLedge
	m	()Z	es	updateWaterSubmersionState
	m	()V	et	updateSize
	m	()I	eu	getScore
	m	()V	ev	vanishCursedItems
	m	()V	ew	spawnSweepAttackParticles
	m	()V	ex	requestRespawn
	m	()Z	ey	isMainPlayer
	m	()Lcom/mojang/authlib/GameProfile;	ez	getGameProfile
	m	(Laom;)V	f	attack
		p	1	target	target
	m	(Lfu;)Z	f	doesNotSuffocate
		p	1	pos	pos
	m	(Lbki;)Z	g	giveItemStack
		p	1	stack	stack
	m	(Lle;)Z	g	addShoulderEntity
		p	1	tag	tag
	m	(Lle;)V	h	setShoulderEntityLeft
		p	1	entityTag	entityTag
	m	()Lbkf;	i	createCooldownManager
	m	(Lle;)V	i	setShoulderEntityRight
		p	1	entityTag	entityTag
	m	(Lle;)V	j	updateShoulderEntity
	m	(Lle;)V	k	dropShoulderEntity
		p	1	entityNbt	entityNbt
	m	()V	m	closeHandledScreen
	m	(DDD)V	o	increaseTravelMotionStats
		p	1	dx	dx
		p	3	dy	dy
		p	5	dz	dz
	m	()V	o	updateTurtleHelmet
	m	(DDD)V	p	increaseRidingMotionStats
		p	1	dx	dx
		p	3	dy	dy
		p	5	dz	dz
	m	()V	p	updateCapeAngles
	m	(Z)V	p	disableShield
		p	1	sprinting	sprinting
	m	(Z)Z	q	canConsume
		p	1	ignoreHunger	ignoreHunger
	m	(F)V	q	addExhaustion
		p	1	exhaustion	exhaustion
	m	(Z)V	r	setReducedDebugInfo
		p	1	reducedDebugInfo	reducedDebugInfo
	m	(F)F	r	getAttackCooldownProgress
		p	1	baseTime	baseTime
	m	(I)V	s	setScore
		p	1	score	score
	m	(I)V	t	addScore
		p	1	score	score
	m	()V	t	sendAbilitiesUpdate
c	bec$a	net/minecraft/entity/player/PlayerEntity$SleepFailureReason
	f	Lmr;	g	text
	m	(Ljava/lang/String;ILmr;)V	<init>	<init>
		p	3	text	text
	m	()Lmr;	a	toText
c	bed	net/minecraft/client/render/entity/PlayerModelPart
	f	I	h	id
	f	I	i	bitFlag
	f	Ljava/lang/String;	j	name
	f	Lmr;	k	optionName
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getBitFlag
	m	()Ljava/lang/String;	c	getName
	m	()Lmr;	d	getOptionName
c	bee	net/minecraft/recipe/RecipeFinder
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	a	idToAmountMap
	m	()V	a	clear
	m	(Lbmu;ILit/unimi/dsi/fastutil/ints/IntList;)I	a	countRecipeCrafts
		p	2	limit	limit
		p	3	outMatchingInputIds	outMatchingInputIds
	m	(Lbmu;Lit/unimi/dsi/fastutil/ints/IntList;I)Z	a	findRecipe
		p	2	outMatchingInputIds	outMatchingInputIds
		p	3	amount	amount
	m	(Lbmu;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	findRecipe
		p	2	outMatchingInputIds	outMatchingInputIds
	m	(I)Lbki;	a	getStackFromId
	m	(Lbki;)V	a	addNormalItem
		p	1	stack	stack
	m	(II)I	a	take
		p	1	id	id
		p	2	amount	amount
	m	(Lbki;)V	b	addItem
	m	(I)Z	b	contains
	m	(II)V	b	addItem
		p	1	id	id
		p	2	amount	amount
	m	(Lbmu;Lit/unimi/dsi/fastutil/ints/IntList;)I	b	countRecipeCrafts
		p	2	outMatchingInputIds	outMatchingInputIds
	m	(Lbki;)I	c	getItemId
c	bee$a	net/minecraft/recipe/RecipeFinder$Filter
	f	Lbmu;	b	recipe
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	m	(Lbee;Lbmu;)V	<init>	<init>
		p	1	recipe	recipe
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)Z	a	find
		p	1	amount	amount
		p	2	outMatchingInputIds	outMatchingInputIds
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)I	b	countCrafts
		p	1	limit	limit
		p	2	outMatchingInputIds	outMatchingInputIds
c	beg	net/minecraft/entity/projectile/PersistentProjectileEntity
	f	Lcfj;	an	inBlockState
	f	I	ao	life
	f	D	ap	damage
	f	I	aq	punch
	f	Lack;	ar	sound
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	as	piercedEntities
	f	Ljava/util/List;	at	piercingKilledEntities
	f	Z	b	inGround
	f	I	c	inGroundTime
	f	Lbeg$a;	d	pickupType
	f	I	e	shake
	f	Ltq;	f	PROJECTILE_FLAGS
	f	Ltq;	g	PIERCE_LEVEL
	m	(Laoq;DDDLbqb;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	world	world
	m	(Laoq;Laoy;Lbqb;)V	<init>	<init>
		p	1	type	type
		p	2	owner	owner
		p	3	world	world
	m	()V	A	clearPiercingStatus
	m	(Laoy;)V	a	onHit
		p	1	target	target
	m	(Ldem;Ldem;)Ldei;	a	getEntityCollision
		p	1	currentPosition	currentPosition
		p	2	nextPosition	nextPosition
	m	(Z)V	a	setCritical
		p	1	critical	critical
	m	(Lack;)V	a	setSound
		p	1	sound	sound
	m	(IZ)V	a	setProjectileFlag
		p	1	index	index
		p	2	flag	flag
	m	(Laoy;F)V	a	applyEnchantmentEffects
		p	1	entity	entity
		p	2	damageModifier	damageModifier
	m	(I)V	a	setPunch
		p	1	punch	punch
	m	(B)V	b	setPierceLevel
		p	1	level	level
	m	()V	h	age
	m	(D)V	h	setDamage
		p	1	damage	damage
	m	()Lack;	i	getHitSound
	m	()Lack;	k	getSound
	m	()Lbki;	m	asItemStack
	m	()D	n	getDamage
	m	(Z)V	o	setNoClip
		p	1	noClip	noClip
	m	(Z)V	p	setShotFromCrossbow
		p	1	shotFromCrossbow	shotFromCrossbow
	m	()Z	p	isCritical
	m	()Z	q	isShotFromCrossbow
	m	()B	r	getPierceLevel
	m	()F	s	getDragInWater
	m	()Z	t	isNoClip
c	beg$a	net/minecraft/entity/projectile/PersistentProjectileEntity$PickupPermission
	m	(I)Lbeg$a;	a	fromOrdinal
		p	0	ordinal	ordinal
c	beh	net/minecraft/entity/projectile/ExplosiveProjectileEntity
	f	D	b	posX
	f	D	c	posY
	f	D	d	posZ
	m	(Laoq;Laoy;DDDLbqb;)V	<init>	<init>
		p	1	type	type
		p	2	owner	owner
		p	3	directionX	directionX
		p	5	directionY	directionY
		p	7	directionZ	directionZ
		p	9	world	world
	m	(Laoq;DDDDDDLbqb;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	directionX	directionX
		p	10	directionY	directionY
		p	12	directionZ	directionZ
		p	14	world	world
	m	()Z	Y_	isBurning
	m	()Lhf;	h	getParticleType
	m	()F	i	getDrag
c	bei	net/minecraft/entity/projectile/ArrowEntity
	f	Ljava/util/Set;	an	effects
	f	Z	ao	colorSet
	f	Ltq;	f	COLOR
	f	Lbmb;	g	potion
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
	m	(Laog;)V	a	addEffect
		p	1	effect	effect
	m	(Lbki;)V	b	initFromStack
		p	1	stack	stack
	m	(I)V	b	spawnParticles
	m	(I)V	c	setColor
		p	1	color	color
	m	(Lbki;)I	c	getCustomPotionColor
		p	0	stack	stack
	m	()I	u	getColor
	m	()V	z	initColor
c	bej	net/minecraft/entity/projectile/DragonFireballEntity
	m	(Lbqb;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	directionX	directionX
		p	10	directionY	directionY
		p	12	directionZ	directionZ
	m	(Lbqb;Laoy;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	directionX	directionX
		p	5	directionY	directionY
		p	7	directionZ	directionZ
c	bek	net/minecraft/entity/mob/EvokerFangsEntity
	f	I	b	warmup
	f	Z	c	startedAttack
	f	I	d	ticksLeft
	f	Z	e	playingAnimation
	f	Laoy;	f	owner
	f	Ljava/util/UUID;	g	ownerUuid
	m	(Lbqb;DDDFILaoy;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	yaw	yaw
		p	9	warmup	warmup
		p	10	owner	owner
	m	(F)F	a	getAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Laoy;)V	a	setOwner
		p	1	owner	owner
	m	(Laoy;)V	d	damage
		p	1	target	target
	m	()Laoy;	g	getOwner
c	bel	net/minecraft/entity/EyeOfEnderEntity
	f	Ltq;	b	ITEM
	f	D	c	velocityX
	f	D	d	velocityY
	f	D	e	velocityZ
	f	I	f	useCount
	f	Z	g	dropsItem
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lfu;)V	a	moveTowards
		p	1	pos	pos
	m	(Lbki;)V	b	setItem
		p	1	stack	stack
	m	(Lbki;)V	c	method_16934
		p	0	stack	stack
	m	()Lbki;	h	getTrackedItem
c	bem	net/minecraft/entity/projectile/AbstractFireballEntity
	f	Ltq;	e	ITEM
	m	(Lbki;)V	b	setItem
		p	1	stack	stack
	m	()Lbki;	k	getItem
c	ben	net/minecraft/entity/projectile/FireworkRocketEntity
	f	Ltq;	b	ITEM
	f	Ltq;	c	SHOOTER_ENTITY_ID
	f	Ltq;	d	SHOT_AT_ANGLE
	f	I	e	life
	f	I	f	lifeTime
	f	Laoy;	g	shooter
	m	(Lbqb;Lbki;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	stack	stack
		p	3	shooter	shooter
	m	(Lbqb;Lbki;Laom;DDDZ)V	<init>	<init>
		p	1	world	world
		p	2	stack	stack
		p	3	entity	entity
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	shotAtAngle	shotAtAngle
	m	(Lbqb;Lbki;DDDZ)V	<init>	<init>
		p	1	world	world
		p	2	stack	stack
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	shotAtAngle	shotAtAngle
	m	(Lbqb;Laom;DDDLbki;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	stack	stack
	m	(Lbqb;DDDLbki;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	stack	stack
	m	()Z	h	wasShotAtAngle
	m	()V	i	explodeAndRemove
	m	()Z	k	hasExplosionEffects
	m	()V	m	explode
	m	()Z	n	wasShotByEntity
c	beo	net/minecraft/entity/projectile/FishingBobberEntity
	f	I	an	hookCountdown
	f	I	ao	waitCountdown
	f	I	ap	fishTravelCountdown
	f	F	aq	fishAngle
	f	Z	ar	inOpenWater
	f	Laom;	as	hookedEntity
	f	Lbeo$a;	at	state
	f	I	au	luckOfTheSeaLevel
	f	I	av	lureLevel
	f	Ljava/util/Random;	b	velocityRandom
	f	Z	c	caughtFish
	f	I	d	outOfOpenWaterTicks
	f	Ltq;	e	HOOK_ENTITY_ID
	f	Ltq;	f	CAUGHT_FISH
	f	I	g	removalTimer
	m	(Lbqb;Lbec;DDD)V	<init>	<init>
		p	1	world	world
		p	2	thrower	thrower
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Lbec;Lbqb;II)V	<init>	<init>
		p	1	thrower	thrower
		p	2	world	world
		p	3	lureLevel	lureLevel
		p	4	luckOfTheSeaLevel	luckOfTheSeaLevel
	m	(Lbqb;Lbec;II)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	lureLevel	lureLevel
		p	4	luckOfTheSeaLevel	luckOfTheSeaLevel
	m	(Lfu;)V	a	tickFishingLogic
		p	1	pos	pos
	m	(Lfu;Lfu;)Lbeo$b;	a	getPositionType
		p	1	start	start
		p	2	end	end
	m	(Lbec;)Z	a	removeIfInvalid
	m	(Lbki;)I	b	use
		p	1	usedItem	usedItem
	m	(Lfu;)Z	b	isOpenOrWaterAround
		p	1	pos	pos
	m	(Lfu;)Lbeo$b;	c	getPositionType
		p	1	pos	pos
	m	()Z	g	isInOpenWater
	m	()V	h	pullHookedEntity
	m	()Lbec;	i	getOwner
	m	()Laom;	k	getHookedEntity
	m	()V	m	checkForCollision
	m	()V	n	updateHookedEntityId
c	beo$a	net/minecraft/entity/projectile/FishingBobberEntity$State
c	beo$b	net/minecraft/entity/projectile/FishingBobberEntity$PositionType
c	bep	net/minecraft/entity/FlyingItemEntity
	m	()Lbki;	g	getStack
c	beq	net/minecraft/entity/projectile/FireballEntity
	f	I	e	explosionPower
	m	(Lbqb;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lbqb;Laoy;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	velocityX	velocityX
		p	5	velocityY	velocityY
		p	7	velocityZ	velocityZ
c	ber	net/minecraft/entity/projectile/LlamaSpitEntity
	m	(Lbqb;Lazp;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
	m	(Lbqb;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	bes	net/minecraft/entity/projectile/ProjectileEntity
	f	Ljava/util/UUID;	b	ownerUuid
	f	I	c	ownerEntityId
	f	Z	d	leftOwner
	m	(Ldei;)V	a	onEntityHit
		p	1	entityHitResult	entityHitResult
	m	(Ldeh;)V	a	onBlockHit
		p	1	blockHitResult	blockHitResult
	m	(Ldej;)V	a	onCollision
		p	1	hitResult	hitResult
	m	(Laom;FFFFF)V	a	setProperties
		p	1	user	user
		p	2	pitch	pitch
		p	3	yaw	yaw
		p	4	roll	roll
		p	5	modifierZ	modifierZ
		p	6	modifierXYZ	modifierXYZ
	m	(Laom;)V	b	setOwner
		p	1	entity	entity
	m	(DDDFF)V	c	setVelocity
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	speed	speed
		p	8	divergence	divergence
	m	(FF)F	e	updateRotation
	m	()Laom;	v	getOwner
c	bet	net/minecraft/entity/projectile/ProjectileUtil
	m	(Laoy;Lbki;F)Lbeg;	a	createArrowProjectile
		p	0	entity	entity
		p	1	stack	stack
		p	2	damageModifier	damageModifier
	m	(Laoy;Lbke;)Lanf;	a	getHandPossiblyHolding
		p	0	entity	entity
		p	1	item	item
	m	(Lbqb;Laom;Ldem;Ldem;Ldeg;Ljava/util/function/Predicate;)Ldei;	a	getEntityCollision
	m	(Laom;Ldem;Ldem;Ldeg;Ljava/util/function/Predicate;D)Ldei;	a	rayTrace
	m	(Laom;Ljava/util/function/Predicate;Lbpj$a;)Ldej;	a	getCollision
c	beu	net/minecraft/entity/projectile/ShulkerBulletEntity
	f	Ljava/util/UUID;	an	targetUuid
	f	Laom;	b	target
	f	Lfz;	c	direction
	f	I	d	stepCount
	f	D	e	targetX
	f	D	f	targetY
	f	D	g	targetZ
	m	(Lbqb;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lbqb;Laoy;Laom;Lfz$a;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	target	target
	m	(Lfz;)V	a	setDirection
c	bev	net/minecraft/entity/projectile/SmallFireballEntity
	m	(Lbqb;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lbqb;Laoy;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	velocityX	velocityX
		p	5	velocityY	velocityY
		p	7	velocityZ	velocityZ
c	bew	net/minecraft/entity/projectile/thrown/SnowballEntity
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
	m	()Lhf;	m	getParticleParameters
c	bex	net/minecraft/entity/projectile/SpectralArrowEntity
	f	I	f	duration
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
c	bey	net/minecraft/entity/projectile/thrown/ThrownItemEntity
	f	Ltq;	b	ITEM
	m	(Lbki;)V	b	setItem
		p	1	item	item
	m	()Lbke;	h	getDefaultItem
	m	()Lbki;	i	getItem
c	bez	net/minecraft/entity/projectile/thrown/ThrownEntity
	m	(Laoq;DDDLbqb;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	world	world
	m	(Laoq;Laoy;Lbqb;)V	<init>	<init>
		p	1	type	type
		p	2	owner	owner
		p	3	world	world
	m	()F	k	getGravity
c	bf	net/minecraft/predicate/entity/EntityTypePredicate
	f	Lbf;	a	ANY
	f	Lcom/google/common/base/Joiner;	b	COMMA_JOINER
	m	(Ladf;)Lbf;	a	create
		p	0	tag	tag
	m	(Lcom/google/gson/JsonElement;)Lbf;	a	fromJson
		p	0	json	json
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Laoq;)Z	a	matches
		p	1	type	type
	m	(Laoq;)Lbf;	b	create
		p	0	type	type
c	bf$a	net/minecraft/predicate/entity/EntityTypePredicate$Tagged
	f	Ladf;	b	tag
	m	(Ladf;)V	<init>	<init>
		p	1	tag	tag
c	bf$b	net/minecraft/predicate/entity/EntityTypePredicate$Single
	f	Laoq;	b	type
	m	(Laoq;)V	<init>	<init>
		p	1	type	type
c	bfa	net/minecraft/entity/projectile/thrown/EggEntity
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
c	bfb	net/minecraft/entity/projectile/thrown/EnderPearlEntity
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
c	bfc	net/minecraft/entity/projectile/thrown/ExperienceBottleEntity
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
c	bfd	net/minecraft/entity/projectile/thrown/PotionEntity
	f	Ljava/util/function/Predicate;	b	WATER_HURTS
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
	m	(Ljava/util/List;Laom;)V	a	applySplashPotion
		p	1	statusEffects	statusEffects
		p	2	entity	entity
	m	(Lfu;Lfz;)V	a	extinguishFire
		p	1	pos	pos
		p	2	direction	direction
	m	(Lbki;Lbmb;)V	a	applyLingeringPotion
		p	1	stack	stack
		p	2	potion	potion
	m	()V	m	damageEntitiesHurtByWater
	m	()Z	n	isLingering
c	bfe	net/minecraft/entity/projectile/TridentEntity
	f	Ltq;	an	ENCHANTED
	f	Lbki;	ao	tridentStack
	f	Z	ap	dealtDamage
	f	I	f	returnTimer
	f	Ltq;	g	LOYALTY
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbqb;Laoy;Lbki;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	stack	stack
	m	()Z	u	isEnchanted
	m	()Z	z	isOwnerAlive
c	bff	net/minecraft/entity/projectile/WitherSkullEntity
	f	Ltq;	e	CHARGED
	m	(Lbqb;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	directionX	directionX
		p	10	directionY	directionY
		p	12	directionZ	directionZ
	m	(Lbqb;Laoy;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	directionX	directionX
		p	5	directionY	directionY
		p	7	directionZ	directionZ
	m	(Z)V	a	setCharged
		p	1	charged	charged
	m	()Z	k	isCharged
c	bfh	net/minecraft/village/raid/Raid
	f	Lne;	a	EVENT_TEXT
	f	Lne;	b	VICTORY_SUFFIX_TEXT
	f	Lne;	c	DEFEAT_SUFFIX_TEXT
	f	Lmr;	d	VICTORY_TITLE
	f	Lmr;	e	DEFEAT_TITLE
	f	Ljava/util/Map;	f	waveToCaptain
	f	Ljava/util/Map;	g	waveToRaiders
	f	Ljava/util/Set;	h	heroesOfTheVillage
	f	J	i	ticksActive
	f	Lfu;	j	center
	f	Lzd;	k	world
	f	Z	l	started
	f	I	m	id
	f	F	n	totalHealth
	f	I	o	badOmenLevel
	f	Z	p	active
	f	I	q	wavesSpawned
	f	Lza;	r	bar
	f	I	s	postRaidTicks
	f	I	t	preRaidTicks
	f	Ljava/util/Random;	u	random
	f	I	v	waveCount
	f	Lbfh$a;	w	status
	f	I	x	finishCooldown
	f	Ljava/util/Optional;	y	preCalculatedRavagerSpawnLocation
	m	(Lzd;Lle;)V	<init>	<init>
		p	1	world	world
		p	2	tag	tag
	m	(ILzd;Lfu;)V	<init>	<init>
		p	1	id	id
		p	2	world	world
		p	3	pos	pos
	m	()Z	A	shouldSpawnMoreGroups
	m	()Z	B	hasSpawnedFinalWave
	m	()Z	C	hasExtraWave
	m	()Z	D	hasSpawnedExtraWave
	m	()Z	E	isSpawningExtraWave
	m	()V	F	removeObsoleteRaiders
	m	()Z	G	canSpawnRaiders
	m	()V	H	markDirty
	m	(Lbfh$b;Ljava/util/Random;ILane;Z)I	a	getBonusCount
		p	1	member	member
		p	2	random	random
		p	3	wave	wave
		p	4	localDifficulty	localDifficulty
		p	5	extra	extra
	m	(Laom;)V	a	addHero
		p	1	entity	entity
	m	()Z	a	isFinished
	m	(II)Lfu;	a	getRavagerSpawnLocation
		p	1	proximity	proximity
		p	2	tries	tries
	m	(Lze;)Z	a	method_19208
		p	1	player	player
	m	(Lbfh$b;IZ)I	a	getCount
		p	1	member	member
		p	2	wave	wave
		p	3	extra	extra
	m	(Land;)I	a	getMaxWaves
		p	1	difficulty	difficulty
	m	(Lbfi;Z)V	a	removeFromWave
		p	1	entity	entity
		p	2	countHealth	countHealth
	m	(Lfu;)V	a	playRaidHorn
		p	1	pos	pos
	m	(ILbfi;)V	a	setWaveCaptain
		p	1	wave	wave
		p	2	entity	entity
	m	(ILbfi;Lfu;Z)V	a	addRaider
		p	1	wave	wave
		p	2	raider	raider
		p	3	pos	pos
		p	4	existing	existing
	m	(ILbfi;Z)Z	a	addToWave
		p	1	wave	wave
		p	2	entity	entity
		p	3	countHealth	countHealth
	m	(Lle;)Lle;	a	toTag
		p	1	tag	tag
	m	(Lbec;)V	a	start
		p	1	player	player
	m	(I)Lbfi;	b	getCaptain
		p	1	wave	wave
	m	()Z	b	isPreRaid
	m	(Lfu;)V	b	spawnNextWave
		p	1	pos	pos
	m	(ILbfi;)Z	b	addToWave
		p	1	wave	wave
		p	2	entity	entity
	m	(Lfu;)V	c	setCenter
		p	1	center	center
	m	()Z	c	hasSpawned
	m	(I)V	c	removeLeader
		p	1	wave	wave
	m	()Z	d	hasStopped
	m	(I)Ljava/util/Optional;	d	preCalculateRavagerSpawnLocation
		p	1	proximity	proximity
	m	()Z	e	hasWon
	m	()Z	f	hasLost
	m	()Lbqb;	i	getWorld
	m	()Z	j	hasStarted
	m	()I	k	getGroupsSpawned
	m	()I	l	getMaxAcceptableBadOmenLevel
	m	()I	m	getBadOmenLevel
	m	()V	n	invalidate
	m	()V	o	tick
	m	()V	p	updateBar
	m	()F	q	getCurrentRaiderHealth
	m	()I	r	getRaiderCount
	m	()Lbki;	s	getOminousBanner
	m	()Lfu;	t	getCenter
	m	()I	u	getRaidId
	m	()Z	v	isActive
	m	()F	w	getEnchantmentChance
	m	()Ljava/util/function/Predicate;	x	isInRaidDistance
	m	()V	y	updateBarToPlayers
	m	()V	z	moveRaidCenter
c	bfh$a	net/minecraft/village/raid/Raid$Status
	f	[Lbfh$a;	e	VALUES
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbfh$a;	b	fromName
c	bfh$b	net/minecraft/village/raid/Raid$Member
	f	[Lbfh$b;	f	VALUES
	f	Laoq;	g	type
	f	[I	h	countInWave
	m	(Ljava/lang/String;ILaoq;[I)V	<init>	<init>
		p	3	type	type
		p	4	countInWave	countInWave
c	bfi	net/minecraft/entity/raid/RaiderEntity
	f	Ljava/util/function/Predicate;	b	OBTAINABLE_OMINOUS_BANNER_PREDICATE
	f	I	bv	wave
	f	Z	bw	ableToJoinRaid
	f	I	bx	outOfRaidCounter
	f	Ltq;	c	CELEBRATING
	f	Lbfh;	d	raid
	m	(Lbfh;)V	a	setRaid
		p	1	raid	raid
	m	(I)V	a	setWave
		p	1	wave	wave
	m	(IZ)V	a	addBonusForWave
		p	1	wave	wave
		p	2	unused	unused
	m	(I)V	b	setOutOfRaidCounter
		p	1	counter	counter
	m	()Lack;	eM	getCelebratingSound
	m	()Z	fa	canJoinRaid
	m	()Lbfh;	fb	getRaid
	m	()Z	fc	hasActiveRaid
	m	()I	fd	getWave
	m	()Z	fe	isCelebrating
	m	()I	ff	getOutOfRaidCounter
	m	(Z)V	w	setAbleToJoinRaid
		p	1	ableToJoinRaid	ableToJoinRaid
	m	(Z)V	x	setCelebrating
		p	1	celebrating	celebrating
c	bfi$a	net/minecraft/entity/raid/RaiderEntity$PatrolApproachGoal
	f	Laxs;	a	closeRaiderPredicate
	f	Lbfi;	c	raider
	f	F	d	squaredDistance
	m	(Lbfi;Lbbj;F)V	<init>	<init>
		p	2	illager	illager
		p	3	distance	distance
c	bfi$b	net/minecraft/entity/raid/RaiderEntity$PickupBannerAsLeaderGoal
	f	Lbfi;	b	actor
	m	(Lbfi;Lbfi;)V	<init>	<init>
		p	2	actor	actor
c	bfi$c	net/minecraft/entity/raid/RaiderEntity$CelebrateGoal
	f	Lbfi;	b	raider
	m	(Lbfi;Lbfi;)V	<init>	<init>
		p	2	raider	raider
c	bfi$d	net/minecraft/entity/raid/RaiderEntity$AttackHomeGoal
	f	Lbfi;	a	raider
	f	D	b	speed
	f	Lfu;	c	home
	f	Ljava/util/List;	d	lastHomes
	f	I	e	distance
	f	Z	f	finished
	m	(Lbfi;DI)V	<init>	<init>
		p	1	raider	raider
		p	2	speed	speed
		p	4	distance	distance
	m	(Lfu;)Z	a	canLootHome
		p	1	pos	pos
	m	()Z	g	isRaiding
	m	()Z	h	tryFindHome
	m	()V	j	purgeMemory
c	bfj	net/minecraft/village/raid/RaidManager
	f	Ljava/util/Map;	a	raids
	f	Lzd;	b	world
	f	I	c	nextAvailableId
	f	I	d	currentTime
	m	(Lzd;)V	<init>	<init>
		p	1	world	world
	m	(Lfu;I)Lbfh;	a	getRaidAt
		p	1	pos	pos
	m	(Lzd;Lfu;)Lbfh;	a	getOrCreateRaid
		p	1	world	world
		p	2	pos	pos
	m	(Lze;)Lbfh;	a	startRaid
		p	1	player	player
	m	(Lcif;)Ljava/lang/String;	a	nameFor
	m	(I)Lbfh;	a	getRaid
		p	1	id	id
	m	()V	a	tick
	m	(Lbfi;Lbfh;)Z	a	isValidRaiderFor
		p	0	raider	raider
		p	1	raid	raid
	m	()I	e	nextId
c	bfl	net/minecraft/entity/ai/brain/Activity
	f	Ljava/lang/String;	p	id
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Lbfl;	a	register
		p	0	id	id
c	bfm	net/minecraft/entity/ai/brain/ScheduleRuleEntry
	f	I	a	startTime
	f	F	b	priority
	m	(IF)V	<init>	<init>
		p	1	startTime	startTime
		p	2	priority	priority
	m	()I	a	getStartTime
	m	()F	b	getPriority
c	bfn	net/minecraft/entity/ai/brain/Schedule
	f	Lbfn;	a	EMPTY
	f	Lbfn;	b	SIMPLE
	f	Lbfn;	c	VILLAGER_BABY
	f	Lbfn;	d	VILLAGER_DEFAULT
	f	Ljava/util/Map;	e	scheduleRules
	m	(Ljava/lang/String;)Lbfo;	a	register
		p	0	id	id
	m	(Lbfl;)V	a	addActivity
		p	1	activity	activity
	m	(I)Lbfl;	a	getActivityForTime
		p	1	time	time
	m	(Lbfl;)Lbfp;	b	getRule
		p	1	activity	activity
	m	(Lbfl;)Ljava/util/List;	c	getOtherRules
		p	1	activity	activity
c	bfo	net/minecraft/entity/ai/brain/ScheduleBuilder
	f	Lbfn;	a	schedule
	f	Ljava/util/List;	b	activities
	m	(Lbfn;)V	<init>	<init>
		p	1	schedule	schedule
	m	()Lbfn;	a	build
	m	(ILbfl;)Lbfo;	a	withActivity
		p	1	startTime	startTime
		p	2	activity	activity
c	bfo$a	net/minecraft/entity/ai/brain/ScheduleBuilder$ActivityEntry
	f	I	a	startTime
	f	Lbfl;	b	activity
	m	(ILbfl;)V	<init>	<init>
		p	1	startTime	startTime
		p	2	activity	activity
	m	()I	a	getStartTime
	m	()Lbfl;	b	getActivity
c	bfp	net/minecraft/entity/ai/brain/ScheduleRule
	f	Ljava/util/List;	a	entries
	f	I	b	prioritizedEntryIndex
	m	(I)F	a	getPriority
		p	1	time	time
	m	(IF)Lbfp;	a	add
		p	1	startTime	startTime
		p	2	priority	priority
	m	()V	b	sort
c	bfr	net/minecraft/entity/vehicle/AbstractMinecartEntity
	f	I	aq	clientInterpolationSteps
	f	D	ar	clientX
	f	D	as	clientY
	f	D	at	clientZ
	f	D	au	clientYaw
	f	D	av	clientPitch
	f	D	aw	clientXVelocity
	f	D	ax	clientYVelocity
	f	D	ay	clientZVelocity
	f	Ltq;	b	DAMAGE_WOBBLE_TICKS
	f	Ltq;	c	DAMAGE_WOBBLE_SIDE
	f	Ltq;	d	DAMAGE_WOBBLE_STRENGTH
	f	Ltq;	e	CUSTOM_BLOCK_ID
	f	Ltq;	f	CUSTOM_BLOCK_OFFSET
	f	Ltq;	g	CUSTOM_BLOCK_PRESENT
	m	(Laoq;Lbqb;DDD)V	<init>	<init>
		p	1	type	type
		p	2	world	world
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Lanw;)V	a	dropItems
		p	1	damageSource	damageSource
	m	(Z)V	a	setCustomBlockPresent
	m	(IIIZ)V	a	onActivatorRail
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	powered	powered
	m	(Lfu;)Z	a	willHitBlockAt
		p	1	pos	pos
	m	(F)V	a	setDamageWobbleStrength
	m	(Lbqb;DDDLbfr$a;)Lbfr;	a	create
		p	0	world	world
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	type	type
	m	(Lcfj;)V	b	setCustomBlock
	m	(Lfu;Lcfj;)V	b	moveOnRail
		p	1	pos	pos
		p	2	state	state
	m	(I)V	c	setDamageWobbleTicks
		p	1	wobbleTicks	wobbleTicks
	m	(I)V	d	setDamageWobbleSide
		p	1	wobbleSide	wobbleSide
	m	()D	g	getMaxOffRailSpeed
	m	()V	h	moveOffRail
	m	()V	i	applySlowdown
	m	()F	k	getDamageWobbleStrength
	m	(I)V	l	setCustomBlockOffset
	m	()I	m	getDamageWobbleTicks
	m	()I	n	getDamageWobbleSide
	m	()Lbfr$a;	o	getMinecartType
	m	()Lcfj;	p	getContainedBlock
	m	()Lcfj;	q	getDefaultContainedBlock
	m	()I	r	getBlockOffset
	m	()I	s	getDefaultBlockOffset
	m	()Z	t	hasCustomBlock
c	bfr$a	net/minecraft/entity/vehicle/AbstractMinecartEntity$Type
c	bfs	net/minecraft/entity/vehicle/StorageMinecartEntity
	f	Lgi;	b	inventory
	f	Luh;	d	lootTableId
	f	J	e	lootSeed
	m	(Laoq;DDDLbqb;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	world	world
	m	(ILbeb;)Lbgi;	a	getScreenHandler
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Luh;J)V	a	setLootTable
		p	1	id	id
		p	2	lootSeed	lootSeed
	m	(Lbec;)V	d	generateLoot
		p	1	player	player
c	bft	net/minecraft/entity/vehicle/BoatEntity
	f	Z	aA	pressingForward
	f	Z	aB	pressingBack
	f	D	aC	waterLevel
	f	Lbft$a;	aE	location
	f	Lbft$a;	aF	lastLocation
	f	D	aG	fallVelocity
	f	Z	aH	onBubbleColumnSurface
	f	Z	aI	bubbleColumnIsDrag
	f	F	aJ	bubbleWobbleStrength
	f	F	aK	bubbleWobble
	f	F	aL	lastBubbleWobble
	f	Ltq;	an	BUBBLE_WOBBLE_TICKS
	f	[F	ao	paddlePhases
	f	F	ap	velocityDecay
	f	F	aq	ticksUnderwater
	f	F	ar	yawVelocity
	f	D	at	x
	f	D	au	y
	f	D	av	z
	f	D	aw	boatYaw
	f	D	ax	boatPitch
	f	Z	ay	pressingLeft
	f	Z	az	pressingRight
	f	Ltq;	b	DAMAGE_WOBBLE_TICKS
	f	Ltq;	c	DAMAGE_WOBBLE_SIDE
	f	Ltq;	d	DAMAGE_WOBBLE_STRENGTH
	f	Ltq;	e	BOAT_TYPE
	f	Ltq;	f	LEFT_PADDLE_MOVING
	f	Ltq;	g	RIGHT_PADDLE_MOVING
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Laom;)V	a	copyEntityData
		p	1	entity	entity
	m	(ZZ)V	a	setPaddleMovings
		p	1	leftMoving	leftMoving
		p	2	rightMoving	rightMoving
	m	(ZZZZ)V	a	setInputs
		p	1	pressingLeft	pressingLeft
		p	2	pressingRight	pressingRight
		p	3	pressingForward	pressingForward
		p	4	pressingBack	pressingBack
	m	(Lbft$b;)V	a	setBoatType
		p	1	type	type
	m	(I)Z	a	isPaddleMoving
		p	1	paddle	paddle
	m	(F)V	a	setDamageWobbleStrength
		p	1	wobbleStrength	wobbleStrength
	m	(IF)F	a	interpolatePaddlePhase
		p	1	paddle	paddle
		p	2	tickDelta	tickDelta
	m	(I)V	b	setDamageWobbleTicks
		p	1	wobbleTicks	wobbleTicks
	m	(F)F	b	interpolateBubbleWobble
		p	1	tickDelta	tickDelta
	m	(I)V	c	setDamageWobbleSide
		p	1	side	side
	m	(I)V	d	setBubbleWobbleTicks
		p	1	wobbleTicks	wobbleTicks
	m	()Lbke;	g	asItem
	m	()Lack;	h	getPaddleSoundEvent
	m	()F	m	getDamageWobbleStrength
	m	()I	n	getDamageWobbleTicks
	m	()I	o	getDamageWobbleSide
	m	()Lbft$b;	p	getBoatType
	m	()V	q	handleBubbleColumn
	m	()Lbft$a;	s	checkLocation
	m	()Z	t	checkBoatInWater
	m	()Lbft$a;	u	getUnderWaterLocation
	m	()V	v	updateVelocity
	m	()V	x	updatePaddles
	m	()I	z	getBubbleWobbleTicks
c	bft$a	net/minecraft/entity/vehicle/BoatEntity$Location
c	bft$b	net/minecraft/entity/vehicle/BoatEntity$Type
	f	Ljava/lang/String;	g	name
	f	Lbvr;	h	baseBlock
	m	(Ljava/lang/String;ILbvr;Ljava/lang/String;)V	<init>	<init>
		p	3	baseBlock	baseBlock
		p	4	name	name
	m	(Ljava/lang/String;)Lbft$b;	a	getType
	m	()Ljava/lang/String;	a	getName
	m	(I)Lbft$b;	a	getType
	m	()Lbvr;	b	getBaseBlock
c	bfu	net/minecraft/entity/Dismounting
	m	(Lfz;)[[I	a	getDismountOffsets
		p	0	movementDirection	movementDirection
	m	(D)Z	a	canDismountInBlock
		p	0	height	height
	m	(Lbqb;Laoy;Ldeg;)Z	a	canPlaceEntityAt
		p	0	world	world
		p	1	entity	entity
		p	2	targetBox	targetBox
c	bfv	net/minecraft/entity/vehicle/MinecartEntity
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	bfw	net/minecraft/entity/vehicle/ChestMinecartEntity
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	bfx	net/minecraft/entity/vehicle/CommandBlockMinecartEntity
	f	Ltq;	b	COMMAND
	f	Ltq;	c	LAST_OUTPUT
	f	Lbpc;	d	commandExecutor
	f	I	e	lastExecuted
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()Lbpc;	u	getCommandExecutor
c	bfx$a	net/minecraft/entity/vehicle/CommandBlockMinecartEntity$CommandExecutor
	m	()Lbfx;	g	getMinecart
c	bfy	net/minecraft/entity/vehicle/FurnaceMinecartEntity
	f	D	b	pushX
	f	D	c	pushZ
	f	Ltq;	d	LIT
	f	I	e	fuel
	f	Lbmr;	f	ACCEPTABLE_FUEL
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Z)V	o	setLit
		p	1	lit	lit
	m	()Z	u	isLit
c	bfz	net/minecraft/entity/vehicle/HopperMinecartEntity
	f	Z	d	enabled
	f	I	e	transferCooldown
	f	Lfu;	f	currentBlockPos
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()Z	B	canOperate
	m	()Z	C	isCoolingDown
	m	(I)V	m	setTransferCooldown
		p	1	cooldown	cooldown
	m	(Z)V	o	setEnabled
		p	1	enabled	enabled
	m	()Z	u	isEnabled
c	bg	net/minecraft/advancement/criterion/FilledBucketCriterion
	f	Luh;	a	ID
	m	(Lze;Lbki;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbg$a;	a	conditionsFromJson
c	bg$a	net/minecraft/advancement/criterion/FilledBucketCriterion$Conditions
	f	Lbo;	a	item
	m	(Lbe$b;Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	item	item
	m	(Lbki;)Z	a	matches
		p	1	stack	stack
	m	(Lbo;)Lbg$a;	a	create
		p	0	item	item
c	bga	net/minecraft/entity/vehicle/SpawnerMinecartEntity
	f	Lbpd;	b	logic
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	bgb	net/minecraft/entity/vehicle/TntMinecartEntity
	f	I	b	fuseTicks
	m	(Lbqb;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(D)V	h	explode
	m	()V	u	prime
	m	()I	v	getFuseTicks
	m	()Z	x	isPrimed
c	bge	net/minecraft/entity/player/HungerManager
	f	I	a	foodLevel
	f	F	b	foodSaturationLevel
	f	F	c	exhaustion
	f	I	d	foodStarvationTimer
	f	I	e	prevFoodLevel
	m	(I)V	a	setFoodLevel
		p	1	foodLevel	foodLevel
	m	(Lle;)V	a	fromTag
		p	1	tag	tag
	m	(Lbec;)V	a	update
		p	1	player	player
	m	(F)V	a	addExhaustion
		p	1	exhaustion	exhaustion
	m	(IF)V	a	add
		p	1	food	food
	m	()I	a	getFoodLevel
	m	(Lbke;Lbki;)V	a	eat
		p	1	item	item
		p	2	stack	stack
	m	(F)V	b	setSaturationLevelClient
		p	1	saturationLevel	saturationLevel
	m	(Lle;)V	b	toTag
		p	1	tag	tag
	m	()Z	c	isNotFull
	m	()F	e	getSaturationLevel
c	bgf	net/minecraft/item/FoodComponent
	f	I	a	hunger
	f	F	b	saturationModifier
	f	Z	c	meat
	f	Z	d	alwaysEdible
	f	Z	e	snack
	f	Ljava/util/List;	f	statusEffects
	m	(IFZZZLjava/util/List;)V	<init>	<init>
		p	1	hunger	hunger
		p	2	saturationModifier	saturationModifier
		p	3	meat	meat
		p	4	alwaysEdible	alwaysEdible
		p	5	snack	snack
		p	6	statusEffects	statusEffects
	m	()I	a	getHunger
	m	()F	b	getSaturationModifier
	m	()Z	c	isMeat
	m	()Z	d	isAlwaysEdible
	m	()Z	e	isSnack
	m	()Ljava/util/List;	f	getStatusEffects
c	bgf$a	net/minecraft/item/FoodComponent$Builder
	f	I	a	hunger
	f	F	b	saturationModifier
	f	Z	c	meat
	f	Z	d	alwaysEdible
	f	Z	e	snack
	f	Ljava/util/List;	f	statusEffects
	m	(I)Lbgf$a;	a	hunger
		p	1	hunger	hunger
	m	()Lbgf$a;	a	meat
	m	(F)Lbgf$a;	a	saturationModifier
		p	1	saturationModifier	saturationModifier
	m	(Laog;F)Lbgf$a;	a	statusEffect
		p	1	effect	effect
		p	2	chance	chance
	m	()Lbgf$a;	b	alwaysEdible
	m	()Lbgf$a;	c	snack
	m	()Lbgf;	d	build
c	bgg	net/minecraft/item/FoodComponents
	f	Lbgf;	A	POISONOUS_POTATO
	f	Lbgf;	B	PORKCHOP
	f	Lbgf;	C	POTATO
	f	Lbgf;	D	PUFFERFISH
	f	Lbgf;	E	PUMPKIN_PIE
	f	Lbgf;	F	RABBIT
	f	Lbgf;	G	RABBIT_STEW
	f	Lbgf;	H	ROTTEN_FLESH
	f	Lbgf;	I	SALMON
	f	Lbgf;	J	SPIDER_EYE
	f	Lbgf;	K	SUSPICIOUS_STEW
	f	Lbgf;	L	SWEET_BERRIES
	f	Lbgf;	M	TROPICAL_FISH
	f	Lbgf;	a	APPLE
	f	Lbgf;	b	BAKED_POTATO
	f	Lbgf;	c	BEEF
	f	Lbgf;	d	BEETROOT
	f	Lbgf;	e	BEETROOT_SOUP
	f	Lbgf;	f	BREAD
	f	Lbgf;	g	CARROT
	f	Lbgf;	h	CHICKEN
	f	Lbgf;	i	CHORUS_FRUIT
	f	Lbgf;	j	COD
	f	Lbgf;	k	COOKED_BEEF
	f	Lbgf;	l	COOKED_CHICKEN
	f	Lbgf;	m	COOKED_COD
	f	Lbgf;	n	COOKED_MUTTON
	f	Lbgf;	o	COOKED_PORKCHOP
	f	Lbgf;	p	COOKED_RABBIT
	f	Lbgf;	q	COOKED_SALMON
	f	Lbgf;	r	COOKIE
	f	Lbgf;	s	DRIED_KELP
	f	Lbgf;	t	ENCHANTED_GOLDEN_APPLE
	f	Lbgf;	u	GOLDEN_APPLE
	f	Lbgf;	v	GOLDEN_CARROT
	f	Lbgf;	w	HONEY_BOTTLE
	f	Lbgf;	x	MELON_SLICE
	f	Lbgf;	y	MUSHROOM_STEW
	f	Lbgf;	z	MUTTON
	m	(I)Lbgf;	a	create
		p	0	hunger	hunger
c	bgi	net/minecraft/screen/ScreenHandler
	f	Ljava/util/List;	a	slots
	f	I	b	syncId
	f	Lgi;	c	trackedStacks
		c	A list of item stacks that is used for tracking changes in {@link #sendContentUpdates()}.
	f	Ljava/util/List;	d	properties
	f	Lbhk;	e	type
	f	S	f	actionId
	f	I	g	quickCraftStage
	f	I	h	quickCraftButton
	f	Ljava/util/Set;	i	quickCraftSlots
	f	Ljava/util/List;	j	listeners
	f	Ljava/util/Set;	k	restrictedPlayers
	m	(Lbhk;I)V	<init>	<init>
		p	1	type	type
		p	2	syncId	syncId
	m	(Lbec;I)Z	a	onButtonClick
		p	1	player	player
		p	2	id	id
	m	(Lbeb;)S	a	getNextActionId
		p	1	playerInventory	playerInventory
	m	(Lbec;Z)V	a	setPlayerRestriction
		p	1	player	player
		p	2	unrestricted	unrestricted
	m	(Lcdl;)I	a	calculateComparatorOutput
		p	0	entity	entity
	m	(Lbgr;I)V	a	checkDataCount
		c	Checks that the size of the {@code data} is at least as large as the {@code expectedCount}.\n\n@throws IllegalArgumentException if the {@code data} has a smaller size than {@code expectedCount}
		p	0	data	data
		p	1	expectedCount	expectedCount
	m	(II)V	a	setProperty
		p	1	id	id
		p	2	value	value
	m	(Lbgs;Lbec;Lbvr;)Z	a	canUse
		p	0	context	context
		p	1	player	player
		p	2	block	block
	m	(Lbec;Lbqb;Lamz;)V	a	dropInventory
		p	1	player	player
		p	2	world	world
		p	3	inventory	inventory
	m	(Lbki;Lbhw;)Z	a	canInsertIntoSlot
		p	1	stack	stack
		p	2	slot	slot
	m	(Lbhw;Lbki;Z)Z	a	canInsertItemIntoSlot
		p	0	slot	slot
		p	1	stack	stack
		p	2	allowOverflow	allowOverflow
	m	()Lbhk;	a	getType
	m	(Lbgt;)V	a	addListener
		p	1	listener	listener
	m	(Ljava/util/Set;ILbki;I)V	a	calculateStackSize
		p	0	slots	slots
		p	1	mode	mode
		p	2	stack	stack
		p	3	stackSize	stackSize
	m	(ILbec;)Z	a	shouldQuickCraftContinue
		p	0	stage	stage
		p	1	player	player
	m	(Lbgw;)Lbgw;	a	addProperty
	m	(I)Lbhw;	a	getSlot
		p	1	index	index
	m	(Lbki;IIZ)Z	a	insertItem
		p	1	stack	stack
		p	2	startIndex	startIndex
		p	3	endIndex	endIndex
		p	4	fromLast	fromLast
	m	(ILbki;)V	a	setStackInSlot
		p	1	slot	slot
		p	2	stack	stack
	m	(Ljava/util/List;)V	a	updateSlotStacks
		p	1	stacks	stacks
	m	(Lbec;)Z	a	canUse
		p	1	player	player
	m	(Lbki;Lbki;)Z	a	canStacksCombine
		p	0	first	first
		p	1	second	second
	m	(Lamz;I)V	a	checkSize
		c	Checks that the size of the provided inventory is at least as large as the {@code expectedSize}.\n\n@throws IllegalArgumentException if the inventory size is smaller than {@code expectedSize}
		p	0	inventory	inventory
		p	1	expectedSize	expectedSize
	m	(Lbgr;)V	a	addProperties
	m	(Lbhw;)Lbhw;	a	addSlot
		p	1	slot	slot
	m	(Lamz;)V	a	onContentChanged
		p	1	inventory	inventory
	m	(IILbgq;Lbec;)Lbki;	a	onSlotClick
		c	Performs a slot click. This can behave in many different ways depending mainly on the action type.\n@return The stack that was clicked on before anything changed, used mostly for verifying that the client and server are in sync
		p	3	actionType	actionType
			c	The type of slot click. Check the docs for each SlotActionType value for details
	m	(II)I	b	packQuickCraftData
		p	0	quickCraftStage	quickCraftStage
		p	1	buttonId	buttonId
	m	(Lbhw;)Z	b	canInsertIntoSlot
		p	1	slot	slot
	m	(Lbec;I)Lbki;	b	transferSlot
		p	1	player	player
		p	2	index	index
	m	(I)I	b	unpackQuickCraftButton
		p	0	quickCraftData	quickCraftData
	m	(Lbec;)V	b	close
		p	1	player	player
	m	(Lbgt;)V	b	removeListener
		p	1	listener	listener
	m	(Lamz;)I	b	calculateComparatorOutput
		p	0	inventory	inventory
	m	()Lgi;	b	getStacks
	m	(Lbec;)Z	c	isNotRestricted
		p	1	player	player
	m	(I)I	c	unpackQuickCraftStage
		p	0	quickCraftData	quickCraftData
	m	()V	c	sendContentUpdates
		c	Sends updates to listeners if any properties or slot stacks have changed.
	m	()V	d	endQuickCraft
c	bgj	net/minecraft/screen/AbstractFurnaceScreenHandler
	f	Lbqb;	c	world
	f	Lamz;	d	inventory
	f	Lbgr;	e	propertyDelegate
	f	Lbmx;	f	recipeType
	m	(Lbhk;Lbmx;ILbeb;Lamz;Lbgr;)V	<init>	<init>
		p	1	type	type
		p	2	recipeType	recipeType
		p	3	syncId	syncId
		p	4	playerInventory	playerInventory
		p	5	inventory	inventory
		p	6	propertyDelegate	propertyDelegate
	m	(Lbhk;Lbmx;ILbeb;)V	<init>	<init>
		p	1	type	type
		p	2	recipeType	recipeType
		p	3	syncId	syncId
		p	4	playerInventory	playerInventory
	m	(Lbki;)Z	a	isSmeltable
		p	1	itemStack	itemStack
	m	(Lbki;)Z	b	isFuel
		p	1	itemStack	itemStack
	m	()I	j	getCookProgress
	m	()I	k	getFuelProgress
	m	()Z	l	isBurning
c	bgk	net/minecraft/screen/AnvilScreenHandler
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	f	I	h	repairItemUsage
	f	Ljava/lang/String;	i	newItemName
	f	Lbgw;	j	levelCost
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
	m	(Ljava/lang/String;)V	a	setNewItemName
	m	(I)I	d	getNextCost
		p	0	cost	cost
	m	()I	f	getLevelCost
c	bgl	net/minecraft/screen/BeaconScreenHandler
	f	Lamz;	c	payment
	f	Lbgl$a;	d	paymentSlot
	f	Lbgs;	e	context
	f	Lbgr;	f	propertyDelegate
	m	(ILamz;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
	m	(ILamz;Lbgr;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
		p	3	propertyDelegate	propertyDelegate
		p	4	context	context
	m	(II)V	c	setEffects
		p	1	primaryEffectId	primaryEffectId
		p	2	secondaryEffectId	secondaryEffectId
	m	()I	e	getProperties
	m	()Laoe;	f	getPrimaryEffect
	m	()Laoe;	g	getSecondaryEffect
	m	()Z	h	hasPayment
c	bgl$a	net/minecraft/screen/BeaconScreenHandler$PaymentSlot
	m	(Lbgl;Lamz;III)V	<init>	<init>
		p	2	inventory	inventory
		p	3	index	index
		p	4	x	x
		p	5	y	y
c	bgm	net/minecraft/screen/BlastFurnaceScreenHandler
	m	(ILbeb;Lamz;Lbgr;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
		p	4	propertyDelegate	propertyDelegate
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bgn	net/minecraft/screen/BrewingStandScreenHandler
	f	Lamz;	c	inventory
	f	Lbgr;	d	propertyDelegate
	f	Lbhw;	e	ingredientSlot
	m	(ILbeb;Lamz;Lbgr;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
		p	4	propertyDelegate	propertyDelegate
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	()I	e	getFuel
	m	()I	f	getBrewTime
c	bgn$a	net/minecraft/screen/BrewingStandScreenHandler$FuelSlot
	m	(Lbki;)Z	a_	matches
		p	0	stack	stack
c	bgn$b	net/minecraft/screen/BrewingStandScreenHandler$IngredientSlot
c	bgn$c	net/minecraft/screen/BrewingStandScreenHandler$PotionSlot
	m	(Lbki;)Z	b_	matches
		p	0	stack	stack
c	bgo	net/minecraft/screen/CartographyTableScreenHandler
	f	Lamz;	c	inventory
	f	Lbgs;	d	context
	f	Z	e	currentlyTakingItem
	f	J	f	lastTakeResultTime
	f	Lbhr;	g	resultSlot
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
	m	(Lbki;Lbki;Lbki;)V	a	updateResult
		p	1	map	map
		p	2	item	item
		p	3	oldResult	oldResult
c	bgp	net/minecraft/screen/GenericContainerScreenHandler
	f	Lamz;	c	inventory
	f	I	d	rows
	m	(Lbhk;ILbeb;I)V	<init>	<init>
		p	1	type	type
		p	2	syncId	syncId
		p	3	playerInventory	playerInventory
		p	4	rows	rows
	m	(Lbhk;ILbeb;Lamz;I)V	<init>	<init>
		p	1	type	type
		p	2	syncId	syncId
		p	3	playerInventory	playerInventory
		p	4	inventory	inventory
		p	5	rows	rows
	m	(ILbeb;Lamz;)Lbgp;	a	createGeneric9x3
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
		p	2	inventory	inventory
	m	(ILbeb;)Lbgp;	a	createGeneric9x1
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
	m	(ILbeb;)Lbgp;	b	createGeneric9x2
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
	m	(ILbeb;Lamz;)Lbgp;	b	createGeneric9x6
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
		p	2	inventory	inventory
	m	(ILbeb;)Lbgp;	c	createGeneric9x3
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
	m	(ILbeb;)Lbgp;	d	createGeneric9x4
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
	m	(ILbeb;)Lbgp;	e	createGeneric9x5
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
	m	()Lamz;	e	getInventory
	m	()I	f	getRows
	m	(ILbeb;)Lbgp;	f	createGeneric9x6
		p	0	syncId	syncId
		p	1	playerInventory	playerInventory
c	bgq	net/minecraft/screen/slot/SlotActionType
	f	Lbgq;	a	PICKUP
		c	Performs a normal slot click. This can pickup or place items in the slot, possibly merging the cursor stack into the slot, or swapping the slot stack with the cursor stack if they can't be merged.
	f	Lbgq;	b	QUICK_MOVE
		c	Performs a shift-click. This usually quickly moves items between the player's inventory and the open screen handler.
	f	Lbgq;	c	SWAP
		c	Exchanges items between a slot and a hotbar slot. This is usually triggered by the player pressing a 1-9 number key while hovering over a slot.\n\n<p>When the action type is swap, the click data is the hotbar slot to swap with (0-8).</p>
	f	Lbgq;	d	CLONE
		c	Clones the item in the slot. Usually triggered by middle clicking an item in creative mode.
	f	Lbgq;	e	THROW
		c	Throws the item out of the inventory. This is usually triggered by the player pressing Q while hovering over a slot, or clicking outside the window.\n\n<p>When the action type is throw, the click data determines whether to throw a whole stack (1) or a single item from that stack (0).</p>
	f	Lbgq;	f	QUICK_CRAFT
		c	Drags items between multiple slots. This is usually triggered by the player clicking and dragging between slots.\n\n<p>This action happens in 3 stages. Stage 0 signals that the drag has begun, and stage 2 signals that the drag has ended. In between multiple stage 1s signal which slots were dragged on.</p>\n\n<p>The stage is packed into the click data along with the mouse button that was clicked. See {@link net.minecraft.screen.ScreenHandler#packQuickCraftData(int, int) ScreenHandler.packQuickCraftData(int, int)} for details.</p>
	f	Lbgq;	g	PICKUP_ALL
		c	Replenishes the cursor stack with items from the screen handler. This is usually triggered by the player double clicking.
c	bgr	net/minecraft/screen/PropertyDelegate
	c	A property delegate represents an indexed list of integer properties.\n\n<p>Property delegates are used for displaying integer values in screens,\nsuch as the progress bars in furnaces.
	m	(I)I	a	get
		p	1	index	index
	m	(II)V	a	set
		p	1	index	index
		p	2	value	value
	m	()I	a	size
c	bgs	net/minecraft/screen/ScreenHandlerContext
	c	Screen handler contexts allow screen handlers to interact with the\nlogical server's world safely.
	f	Lbgs;	a	EMPTY
		c	The dummy screen handler context for clientside screen handlers.
	m	(Ljava/util/function/BiConsumer;)V	a	run
		p	1	function	function
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	run
		p	1	function	function
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	run
		p	1	function	function
		p	2	defaultValue	defaultValue
	m	(Lbqb;Lfu;)Lbgs;	a	create
		c	Returns an active screen handler context. Used on the logical server.
		p	0	world	world
		p	1	pos	pos
c	bgt	net/minecraft/screen/ScreenHandlerListener
	m	(Lbgi;II)V	a	onPropertyUpdate
		p	1	handler	handler
		p	2	property	property
		p	3	value	value
	m	(Lbgi;ILbki;)V	a	onSlotUpdate
		p	1	handler	handler
		p	2	slotId	slotId
		p	3	stack	stack
	m	(Lbgi;Lgi;)V	a	onHandlerRegistered
		p	1	handler	handler
		p	2	stacks	stacks
c	bgu	net/minecraft/inventory/CraftingInventory
	f	Lgi;	a	stacks
	f	I	b	width
	f	I	c	height
	f	Lbgi;	d	handler
	m	(Lbgi;II)V	<init>	<init>
		p	1	handler	handler
		p	2	width	width
		p	3	height	height
	m	()I	f	getHeight
	m	()I	g	getWidth
c	bgv	net/minecraft/screen/CraftingScreenHandler
	f	Lbgu;	c	input
	f	Lbhr;	d	result
	f	Lbgs;	e	context
	f	Lbec;	f	player
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(ILbqb;Lbec;Lbgu;Lbhr;)V	a	updateResult
		p	0	syncId	syncId
		p	1	world	world
		p	2	player	player
		p	3	craftingInventory	craftingInventory
		p	4	resultInventory	resultInventory
c	bgw	net/minecraft/screen/Property
	c	An integer property that is stored in a {@link ScreenHandler}.\n\n<p>{@code Property} instances are used for tracking integer properties in property delegates\nand other sources of integer properties, and sending needed content updates to listeners.\n\n@see ScreenHandler#addProperty
	f	I	a	oldValue
	m	()Lbgw;	a	create
		c	Creates a new property that is not attached to any other objects.
	m	(Lbgr;I)Lbgw;	a	create
		c	Creates a new property that accesses the {@code index} of the {@code delegate}.
		p	0	delegate	delegate
		p	1	index	index
	m	(I)V	a	set
		p	1	value	value
	m	([II)Lbgw;	a	create
		c	Creates a new property that accesses the {@code index} of the {@code array}.
		p	0	array	array
		p	1	index	index
	m	()I	b	get
	m	()Z	c	hasChanged
		c	Returns true if the value of this property has changed since the last call to {@code hasChanged()}.
c	bgw$3	net/minecraft/screen/Property$3
	f	I	a	value
c	bgx	net/minecraft/screen/Generic3x3ContainerScreenHandler
	f	Lamz;	c	inventory
	m	(ILbeb;Lamz;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bgy	net/minecraft/screen/EnchantmentScreenHandler
	f	[I	c	enchantmentPower
	f	[I	d	enchantmentId
	f	[I	e	enchantmentLevel
	f	Lamz;	f	inventory
	f	Lbgs;	g	context
	f	Ljava/util/Random;	h	random
	f	Lbgw;	i	seed
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Lbki;II)Ljava/util/List;	a	generateEnchantments
		p	1	stack	stack
		p	2	slot	slot
		p	3	level	level
	m	()I	e	getLapisCount
	m	()I	f	getSeed
c	bgz	net/minecraft/screen/slot/FurnaceFuelSlot
	f	Lbgj;	a	handler
	m	(Lbgj;Lamz;III)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	index	index
		p	4	x	x
		p	5	y	y
	m	(Lbki;)Z	c_	isBucket
		p	0	stack	stack
c	bh	net/minecraft/predicate/entity/FishingHookPredicate
	f	Lbh;	a	ANY
	f	Z	b	inOpenWater
	m	(Z)V	<init>	<init>
		p	1	inOpenWater	inOpenWater
	m	(Laom;)Z	a	test
		p	1	entity	entity
	m	(Lcom/google/gson/JsonElement;)Lbh;	a	fromJson
		p	0	json	json
	m	(Z)Lbh;	a	of
		p	0	inOpenWater	inOpenWater
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	bha	net/minecraft/screen/FurnaceScreenHandler
	m	(ILbeb;Lamz;Lbgr;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
		p	4	propertyDelegate	propertyDelegate
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bhb	net/minecraft/screen/slot/FurnaceOutputSlot
	f	Lbec;	a	player
	f	I	b	amount
	m	(Lbec;Lamz;III)V	<init>	<init>
		p	1	player	player
		p	2	inventory	inventory
		p	3	index	index
		p	4	x	x
		p	5	y	y
c	bhc	net/minecraft/screen/GrindstoneScreenHandler
	f	Lamz;	c	result
	f	Lamz;	d	input
	f	Lbgs;	e	context
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Lbki;II)Lbki;	a	grind
		p	1	item	item
		p	2	damage	damage
		p	3	amount	amount
	m	(Lbki;Lbki;)Lbki;	b	transferEnchantments
		p	1	target	target
		p	2	source	source
	m	()V	e	updateResult
c	bhc$4	net/minecraft/screen/GrindstoneScreenHandler$4
	m	(Lbqb;)I	a	getExperience
		p	1	world	world
	m	(Lbki;)I	e	getExperience
		p	1	stack	stack
c	bhd	net/minecraft/screen/HopperScreenHandler
	f	Lamz;	c	inventory
	m	(ILbeb;Lamz;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bhe	net/minecraft/screen/HorseScreenHandler
	f	Lamz;	c	inventory
	f	Lazm;	d	entity
	m	(ILbeb;Lamz;Lazm;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
		p	4	entity	entity
c	bhf	net/minecraft/screen/PlayerScreenHandler
	f	Luh;	c	BLOCK_ATLAS_TEXTURE
	f	Luh;	d	EMPTY_HELMET_SLOT_TEXTURE
	f	Luh;	e	EMPTY_CHESTPLATE_SLOT_TEXTURE
	f	Luh;	f	EMPTY_LEGGINGS_SLOT_TEXTURE
	f	Luh;	g	EMPTY_BOOTS_SLOT_TEXTURE
	f	Luh;	h	EMPTY_OFFHAND_ARMOR_SLOT
	f	Z	i	onServer
	f	[Luh;	j	EMPTY_ARMOR_SLOT_TEXTURES
	f	[Laor;	k	EQUIPMENT_SLOT_ORDER
	f	Lbgu;	l	craftingInput
	f	Lbhr;	m	craftingResult
	f	Lbec;	n	owner
	m	(Lbeb;ZLbec;)V	<init>	<init>
		p	1	inventory	inventory
		p	2	onServer	onServer
		p	3	owner	owner
c	bhg	net/minecraft/screen/ForgingScreenHandler
	f	Lamz;	c	output
	f	Lamz;	d	input
	f	Lbgs;	e	context
	f	Lbec;	f	player
	m	(Lbhk;ILbeb;Lbgs;)V	<init>	<init>
		p	1	type	type
		p	2	syncId	syncId
		p	3	playerInventory	playerInventory
		p	4	context	context
	m	(Lbec;Lbki;)Lbki;	a	onTakeOutput
		p	1	player	player
		p	2	stack	stack
	m	(Lcfj;)Z	a	canUse
		p	1	state	state
	m	(Lbec;Z)Z	b	canTakeOutput
		p	1	player	player
		p	2	present	present
	m	()V	e	updateResult
c	bhh	net/minecraft/screen/LecternScreenHandler
	f	Lamz;	c	inventory
	f	Lbgr;	d	propertyDelegate
	m	(ILamz;Lbgr;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
		p	3	propertyDelegate	propertyDelegate
	m	(I)V	<init>	<init>
		p	1	syncId	syncId
	m	()Lbki;	e	getBookItem
	m	()I	f	getPage
c	bhi	net/minecraft/screen/LoomScreenHandler
	f	Lbgs;	c	context
	f	Lbgw;	d	selectedPattern
	f	Ljava/lang/Runnable;	e	inventoryChangeListener
	f	Lbhw;	f	bannerSlot
	f	Lbhw;	g	dyeSlot
	f	Lbhw;	h	patternSlot
	f	Lbhw;	i	outputSlot
	f	J	j	lastTakeResultTime
	f	Lamz;	k	input
	f	Lamz;	l	output
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Ljava/lang/Runnable;)V	a	setInventoryChangeListener
		p	1	inventoryChangeListener	inventoryChangeListener
	m	()I	e	getSelectedPattern
	m	()Lbhw;	f	getBannerSlot
	m	()Lbhw;	g	getDyeSlot
	m	()Lbhw;	h	getPatternSlot
	m	()Lbhw;	i	getOutputSlot
	m	()V	j	updateOutputSlot
c	bhj	net/minecraft/screen/ScreenHandlerFactory
	m	(ILbeb;Lbec;)Lbgi;	createMenu	createMenu
		p	1	syncId	syncId
		p	2	inv	inv
		p	3	player	player
c	bhk	net/minecraft/screen/ScreenHandlerType
	f	Lbhk$a;	y	factory
	m	(Lbhk$a;)V	<init>	<init>
		p	1	factory	factory
	m	(ILbeb;)Lbgi;	a	create
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Ljava/lang/String;Lbhk$a;)Lbhk;	a	register
		p	0	id	id
		p	1	factory	factory
c	bhk$a	net/minecraft/screen/ScreenHandlerType$Factory
	m	(ILbeb;)Lbgi;	create	create
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bhl	net/minecraft/village/TraderInventory
	f	Lboy;	a	trader
	f	Lgi;	b	inventory
	f	Lboz;	c	traderRecipe
	f	I	d	recipeIndex
	f	I	e	traderRewardedExperience
	m	(I)V	c	setRecipeIndex
		p	1	index	index
	m	(I)Z	d	needRecipeUpdate
		p	1	slot	slot
	m	()V	f	updateRecipes
	m	()Lboz;	g	getTradeOffer
	m	()I	h	getTraderRewardedExperience
c	bhm	net/minecraft/screen/MerchantScreenHandler
	f	Lboy;	c	trader
	f	Lbhl;	d	traderInventory
	f	I	e	levelProgress
	f	Z	f	leveled
	f	Z	g	canRefreshTrades
	m	(ILbeb;Lboy;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	trader	trader
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Lbpa;)V	a	setOffers
		p	1	offers	offers
	m	(Z)V	a	setCanLevel
		p	1	canLevel	canLevel
	m	(Z)V	b	setRefreshTrades
		p	1	refreshable	refreshable
	m	(Lbki;Lbki;)Z	b	equals
		p	1	itemStack	itemStack
		p	2	otherItemStack	otherItemStack
	m	(ILbki;)V	c	autofill
		p	1	slot	slot
		p	2	stack	stack
	m	(I)V	d	setRecipeIndex
		p	1	index	index
	m	(I)V	e	setExperienceFromServer
		p	1	experience	experience
	m	()I	e	getExperience
	m	()I	f	getTraderRewardedExperience
	m	(I)V	f	setLevelProgress
		p	1	progress	progress
	m	()I	g	getLevelProgress
	m	(I)V	g	switchTo
		p	1	recipeIndex	recipeIndex
	m	()Z	h	canRefreshTrades
	m	()Lbpa;	i	getRecipes
	m	()Z	j	isLeveled
	m	()V	k	playYesSound
c	bhn	net/minecraft/screen/slot/TradeOutputSlot
	f	Lbhl;	a	traderInventory
	f	Lbec;	b	player
	f	I	g	amount
	f	Lboy;	h	trader
	m	(Lbec;Lboy;Lbhl;III)V	<init>	<init>
		p	1	player	player
		p	2	trader	trader
		p	3	traderInventory	traderInventory
		p	4	index	index
		p	5	x	x
		p	6	y	y
c	bho	net/minecraft/inventory/EnderChestInventory
	f	Lcdx;	a	activeBlockEntity
	m	(Lcdx;)V	a	setActiveBlockEntity
		p	1	blockEntity	blockEntity
c	bhp	net/minecraft/screen/AbstractRecipeScreenHandler
	m	(Lbee;)V	a	populateRecipeFinder
		p	1	finder	finder
	m	(Lbmu;)Z	a	matches
		p	1	recipe	recipe
	m	(ZLbmu;Lze;)V	a	fillInputSlots
		p	1	craftAll	craftAll
		p	2	recipe	recipe
		p	3	player	player
	m	()V	e	clearCraftingSlots
	m	()I	f	getCraftingResultSlotIndex
	m	()I	g	getCraftingWidth
	m	()I	h	getCraftingHeight
	m	()I	i	getCraftingSlotCount
c	bhq	net/minecraft/recipe/RecipeUnlocker
	m	(Lbqb;Lze;Lbmu;)Z	a	shouldCraftRecipe
		p	2	player	player
	m	(Lbmu;)V	a	setLastRecipe
		p	1	recipe	recipe
	m	()Lbmu;	am_	getLastRecipe
	m	(Lbec;)V	b	unlockLastRecipe
		p	1	player	player
c	bhr	net/minecraft/inventory/CraftingResultInventory
	f	Lgi;	a	stacks
	f	Lbmu;	b	lastRecipe
c	bhs	net/minecraft/screen/slot/CraftingResultSlot
	f	Lbgu;	a	input
	f	Lbec;	b	player
	f	I	g	amount
	m	(Lbec;Lbgu;Lamz;III)V	<init>	<init>
		p	1	player	player
		p	2	input	input
		p	3	inventory	inventory
		p	4	index	index
		p	5	x	x
		p	6	y	y
c	bht	net/minecraft/screen/ShulkerBoxScreenHandler
	f	Lamz;	c	inventory
	m	(ILbeb;Lamz;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bhu	net/minecraft/screen/slot/ShulkerBoxSlot
c	bhv	net/minecraft/screen/ArrayPropertyDelegate
	c	A {@link PropertyDelegate} that is implemented using an int array.
	f	[I	a	data
	m	(I)V	<init>	<init>
		p	1	size	size
c	bhw	net/minecraft/screen/slot/Slot
	f	I	a	index
	f	Lamz;	c	inventory
	f	I	d	id
	f	I	e	x
	f	I	f	y
	m	(Lamz;III)V	<init>	<init>
		p	1	inventory	inventory
		p	2	index	index
		p	3	x	x
		p	4	y	y
	m	(Lbec;Lbki;)Lbki;	a	onTakeItem
		p	1	player	player
		p	2	stack	stack
	m	(Lbki;I)V	a	onCrafted
		p	1	stack	stack
		p	2	amount	amount
	m	()I	a	getMaxStackAmount
	m	(Lbec;)Z	a	canTakeItems
		p	1	playerEntity	playerEntity
	m	(Lbki;)Z	a	canInsert
		p	1	stack	stack
	m	(I)Lbki;	a	takeStack
		p	1	amount	amount
	m	(Lbki;Lbki;)V	a	onStackChanged
		p	1	originalItem	originalItem
	m	(I)V	b	onTake
		p	1	amount	amount
	m	()Z	b	doDrawHoveringEffect
	m	(Lbki;)I	b	getMaxStackAmount
		p	1	stack	stack
	m	()Lcom/mojang/datafixers/util/Pair;	c	getBackgroundSprite
	m	(Lbki;)V	c	onCrafted
		p	1	stack	stack
	m	()V	d	markDirty
	m	(Lbki;)V	d	setStack
		p	1	stack	stack
	m	()Lbki;	e	getStack
	m	()Z	f	hasStack
c	bhx	net/minecraft/screen/SmithingScreenHandler
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bhy	net/minecraft/screen/SmokerScreenHandler
	m	(ILbeb;Lamz;Lbgr;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	inventory	inventory
		p	4	propertyDelegate	propertyDelegate
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bhz	net/minecraft/recipe/RecipeInputProvider
	m	(Lbee;)V	a	provideRecipeInputs
		p	1	finder	finder
c	bi	net/minecraft/advancement/criterion/FishingRodHookedCriterion
	f	Luh;	a	ID
	m	(Lze;Lbki;Lbeo;Ljava/util/Collection;)V	a	trigger
		p	1	player	player
		p	2	rod	rod
		p	3	bobber	bobber
		p	4	fishingLoots	fishingLoots
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbi$a;	a	conditionsFromJson
c	bi$a	net/minecraft/advancement/criterion/FishingRodHookedCriterion$Conditions
	f	Lbo;	a	rod
	f	Lbe$b;	b	hookedEntity
	f	Lbo;	c	caughtItem
	m	(Lbe$b;Lbo;Lbe$b;Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	rod	rod
		p	3	hookedEntity	hookedEntity
		p	4	caughtItem	caughtItem
	m	(Lbo;Lbe;Lbo;)Lbi$a;	a	create
		p	0	rod	rod
		p	1	bobber	bobber
		p	2	item	item
	m	(Lbki;Ldat;Ljava/util/Collection;)Z	a	test
		p	1	rod	rod
		p	2	hookedEntityContext	hookedEntityContext
		p	3	fishingLoots	fishingLoots
c	bia	net/minecraft/screen/StonecutterScreenHandler
	f	Lbhw;	c	inputSlot
	f	Lbhw;	d	outputSlot
	f	Lamz;	e	input
	f	Lbgs;	f	context
	f	Lbgw;	g	selectedRecipe
	f	Lbqb;	h	world
	f	Ljava/util/List;	i	availableRecipes
	f	Lbki;	j	inputStack
	f	J	k	lastTakeTime
	f	Ljava/lang/Runnable;	l	contentsChangedListener
	f	Lbhr;	m	output
	m	(ILbeb;Lbgs;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	context	context
	m	(ILbeb;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Lamz;Lbki;)V	a	updateInput
		p	1	input	input
		p	2	stack	stack
	m	(Ljava/lang/Runnable;)V	a	setContentsChangedListener
	m	()I	e	getSelectedRecipe
	m	()Ljava/util/List;	f	getAvailableRecipes
	m	()I	g	getAvailableRecipeCount
	m	()Z	h	canCraft
	m	()V	i	populateResult
c	bic	net/minecraft/item/AirBlockItem
	f	Lbvr;	a	block
	m	(Lbvr;Lbke$a;)V	<init>	<init>
		p	1	block	block
		p	2	settings	settings
c	bid	net/minecraft/item/ArmorItem
	f	Lgw;	a	DISPENSER_BEHAVIOR
	f	Laor;	b	slot
	f	F	c	knockbackResistance
	f	Lbie;	d	type
	f	[Ljava/util/UUID;	j	MODIFIERS
	f	I	k	protection
	f	F	l	toughness
	f	Lcom/google/common/collect/Multimap;	m	attributeModifiers
	m	(Lbie;Laor;Lbke$a;)V	<init>	<init>
		p	1	material	material
		p	2	slot	slot
		p	3	settings	settings
	m	(Lfv;Lbki;)Z	a	dispenseArmor
		p	0	pointer	pointer
		p	1	armor	armor
	m	()Lbie;	ad_	getMaterial
	m	()Laor;	b	getSlotType
	m	()I	e	getProtection
c	bie	net/minecraft/item/ArmorMaterial
	m	(Laor;)I	a	getDurability
		p	1	slot	slot
	m	()I	a	getEnchantability
	m	(Laor;)I	b	getProtectionAmount
		p	1	slot	slot
	m	()Lack;	b	getEquipSound
	m	()Lbmr;	c	getRepairIngredient
	m	()Ljava/lang/String;	d	getName
	m	()F	e	getToughness
	m	()F	f	getKnockbackResistance
c	bif	net/minecraft/item/ArmorMaterials
	f	Lbif;	b	CHAIN
	f	[I	h	BASE_DURABILITY
	f	Ljava/lang/String;	i	name
	f	I	j	durabilityMultiplier
	f	[I	k	protectionAmounts
	f	I	l	enchantability
	f	Lack;	m	equipSound
	f	F	n	toughness
	f	F	o	knockbackResistance
	f	Lady;	p	repairIngredientSupplier
	m	(Ljava/lang/String;ILjava/lang/String;I[IILack;FFLjava/util/function/Supplier;)V	<init>	<init>
		p	3	name	name
		p	4	durabilityMultiplier	durabilityMultiplier
		p	5	protectionAmounts	protectionAmounts
		p	6	enchantability	enchantability
		p	7	equipSound	equipSound
		p	8	toughness	toughness
		p	9	knockbackResistance	knockbackResistance
c	big	net/minecraft/item/ArmorStandItem
	m	(Lbay;Ljava/util/Random;)V	a	setRotations
		p	1	stand	stand
		p	2	random	random
c	bih	net/minecraft/item/ArrowItem
	m	(Lbqb;Lbki;Laoy;)Lbeg;	a	createArrow
		p	1	world	world
		p	2	stack	stack
		p	3	shooter	shooter
c	bii	net/minecraft/item/AxeItem
	f	Ljava/util/Map;	a	STRIPPED_BLOCKS
	f	Ljava/util/Set;	d	EFFECTIVE_BLOCKS
	m	(Lblo;FFLbke$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
	m	(Lblv;Lbec;)V	a	method_20269
		p	1	p	p
c	bij	net/minecraft/item/BannerItem
	m	(Lbki;Ljava/util/List;)V	a	appendBannerTooltip
		p	0	stack	stack
		p	1	tooltip	tooltip
	m	()Lbje;	b	getColor
c	bik	net/minecraft/item/BannerPatternItem
	f	Lcdd;	a	pattern
	m	(Lcdd;Lbke$a;)V	<init>	<init>
		p	1	pattern	pattern
		p	2	settings	settings
	m	()Lcdd;	b	getPattern
	m	()Lmx;	d	getDescription
c	bil	net/minecraft/item/BedItem
c	bim	net/minecraft/item/BlockItem
	f	Lbvr;	a	block
	m	(Lbvr;Lbke$a;)V	<init>	<init>
		p	1	block	block
		p	2	settings	settings
	m	(Lcfj;Lcgl;Ljava/lang/String;)Lcfj;	a	with
		p	0	state	state
		p	1	property	property
		p	2	name	name
	m	(Lfu;Lbqb;Lbki;Lcfj;)Lcfj;	a	placeFromTag
		p	1	pos	pos
		p	2	world	world
		p	3	stack	stack
		p	4	state	state
	m	(Lcfj;)Lack;	a	getPlaceSound
		p	1	state	state
	m	(Lbin;)Lang;	a	place
		p	1	context	context
	m	(Lbin;Lcfj;)Z	a	place
		p	1	context	context
		p	2	state	state
	m	(Lfu;Lbqb;Lbec;Lbki;Lcfj;)Z	a	postPlacement
		p	1	pos	pos
		p	2	world	world
		p	3	player	player
		p	4	stack	stack
		p	5	state	state
	m	(Lcfj;Lcgl;Ljava/lang/Comparable;)Lcfj;	a	method_18082
		p	2	value	value
	m	(Ljava/util/Map;Lbke;)V	a	appendBlocks
		p	1	map	map
		p	2	item	item
	m	(Lbqb;Lbec;Lfu;Lbki;)Z	a	writeTagToBlockEntity
		p	0	world	world
		p	1	player	player
		p	2	pos	pos
		p	3	stack	stack
	m	(Lbin;Lcfj;)Z	b	canPlace
		p	1	context	context
		p	2	state	state
	m	(Lbin;)Lbin;	b	getPlacementContext
		p	1	context	context
	m	(Lbin;)Lcfj;	c	getPlacementState
		p	1	context	context
	m	()Z	d	checkStatePlacement
	m	()Lbvr;	e	getBlock
c	bin	net/minecraft/item/ItemPlacementContext
	f	Z	a	canReplaceExisting
	f	Lfu;	g	placementPos
	m	(Lblv;)V	<init>	<init>
		p	1	context	context
	m	(Lbin;Lfu;Lfz;)Lbin;	a	offset
		p	0	context	context
		p	1	pos	pos
		p	2	side	side
	m	()Z	b	canPlace
	m	()Z	c	canReplaceExisting
	m	()Lfz;	d	getPlayerLookDirection
	m	()[Lfz;	e	getPlacementDirections
c	bio	net/minecraft/item/BoatItem
	f	Ljava/util/function/Predicate;	a	RIDERS
	f	Lbft$b;	b	type
	m	(Lbft$b;Lbke$a;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
c	bip	net/minecraft/item/BoneMealItem
	m	(Lbki;Lbqb;Lfu;Lfz;)Z	a	useOnGround
		p	0	stack	stack
		p	1	world	world
		p	2	blockPos	blockPos
		p	3	facing	facing
	m	(Lbki;Lbqb;Lfu;)Z	a	useOnFertilizable
		p	0	stack	stack
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;I)V	a	createParticles
		p	0	world	world
		p	1	pos	pos
		p	2	count	count
c	biq	net/minecraft/item/BookItem
c	bir	net/minecraft/item/GlassBottleItem
	m	(Laol;)Z	a	method_7726
		p	0	entity	entity
	m	(Lbki;Lbec;Lbki;)Lbki;	a	fill
		p	1	emptyBottle	emptyBottle
		p	2	player	player
		p	3	filledBottle	filledBottle
c	bis	net/minecraft/item/BowItem
	m	(I)F	a	getPullProgress
		p	0	useTicks	useTicks
	m	(Lbec;Lbec;)V	a	method_20270
		p	1	p	p
c	bit	net/minecraft/item/MushroomStewItem
c	biu	net/minecraft/item/BucketItem
	f	Lcwz;	a	fluid
	m	(Lcwz;Lbke$a;)V	<init>	<init>
		p	1	fluid	fluid
		p	2	settings	settings
	m	(Lbec;Lbqb;Lfu;Ldeh;)Z	a	placeFluid
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
	m	(Lbec;Lbqc;Lfu;)V	a	playEmptyingSound
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
	m	(Lbqb;Lbki;Lfu;)V	a	onEmptied
		p	1	world	world
		p	2	stack	stack
		p	3	pos	pos
	m	(Lbki;Lbec;)Lbki;	a	getEmptiedStack
		p	1	stack	stack
		p	2	player	player
c	biv	net/minecraft/item/ChorusFruitItem
c	biw	net/minecraft/item/CompassItem
	m	(Lle;)Ljava/util/Optional;	a	getLodestoneDimension
		p	0	tag	tag
	m	(Lbki;)Z	d	hasLodestone
		p	0	stack	stack
c	bix	net/minecraft/item/NetworkSyncedItem
	m	(Lbki;Lbqb;Lbec;)Lni;	a	createSyncPacket
		p	1	stack	stack
		p	2	world	world
		p	3	player	player
c	biy	net/minecraft/item/ItemGroup
	f	[Lbiy;	a	GROUPS
	f	Lbiy;	b	BUILDING_BLOCKS
	f	Lbiy;	c	DECORATIONS
	f	Lbiy;	d	REDSTONE
	f	Lbiy;	e	TRANSPORTATION
	f	Lbiy;	f	MISC
	f	Lbiy;	g	SEARCH
	f	Lbiy;	h	FOOD
	f	Lbiy;	i	TOOLS
	f	Lbiy;	j	COMBAT
	f	Lbiy;	k	BREWING
	f	Lbiy;	l	MATERIALS
	f	Lbiy;	m	HOTBAR
	f	Lbiy;	n	INVENTORY
	f	I	o	index
	f	Ljava/lang/String;	p	id
	f	Ljava/lang/String;	q	name
	f	Ljava/lang/String;	r	texture
	f	Z	s	scrollbar
	f	Z	t	tooltip
	f	[Lbnx;	u	enchantments
	f	Lbki;	v	icon
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	index	index
		p	2	id	id
	m	()I	a	getIndex
	m	(Ljava/lang/String;)Lbiy;	a	setTexture
		p	1	texture	texture
	m	(Lbnx;)Z	a	containsEnchantments
		p	1	target	target
	m	(Lgi;)V	a	appendStacks
		p	1	stacks	stacks
	m	([Lbnx;)Lbiy;	a	setEnchantments
		p	1	targets	targets
	m	()Ljava/lang/String;	b	getId
	m	(Ljava/lang/String;)Lbiy;	b	setName
		p	1	name	name
	m	()Ljava/lang/String;	c	getName
	m	()Ljava/lang/String;	d	getTranslationKey
	m	()Lbki;	e	getIcon
	m	()Lbki;	f	createIcon
	m	()Ljava/lang/String;	g	getTexture
	m	()Z	h	hasTooltip
	m	()Lbiy;	i	setNoTooltip
	m	()Z	j	hasScrollbar
	m	()Lbiy;	k	setNoScrollbar
	m	()I	l	getColumn
	m	()Z	m	isTopRow
	m	()Z	n	isSpecial
	m	()[Lbnx;	o	getEnchantments
c	biz	net/minecraft/item/CrossbowItem
	f	Z	c	charged
	f	Z	d	loaded
	m	(I)Lack;	a	getQuickChargeSound
		p	1	stage	stage
	m	(Lbqb;Laoy;Lbki;)V	a	postShoot
		p	0	world	world
		p	1	entity	entity
		p	2	stack	stack
	m	(Laoy;Lbki;Lbki;ZZ)Z	a	loadProjectile
		p	0	shooter	shooter
		p	1	crossbow	crossbow
		p	2	projectile	projectile
		p	3	simulated	simulated
		p	4	creative	creative
	m	(Z)F	a	getSoundPitch
		p	0	flag	flag
	m	(ILbki;)F	a	getPullProgress
		p	0	useTicks	useTicks
		p	1	stack	stack
	m	(Lbke;Lbki;)Z	a	method_7768
		p	1	s	s
	m	(Lbki;Lbke;)Z	a	hasProjectile
		p	0	crossbow	crossbow
		p	1	projectile	projectile
	m	(Laoy;Lbki;)Z	a	loadProjectiles
		p	0	shooter	shooter
		p	1	projectile	projectile
	m	(Lbqb;Laoy;Lbki;Lbki;)Lbeg;	a	createArrow
		p	0	world	world
		p	1	entity	entity
		p	2	crossbow	crossbow
		p	3	arrow	arrow
	m	(Lbqb;Laoy;Lanf;Lbki;Lbki;FZFFF)V	a	shoot
		p	0	world	world
		p	1	shooter	shooter
		p	2	hand	hand
		p	3	crossbow	crossbow
		p	4	projectile	projectile
		p	5	soundPitch	soundPitch
		p	6	creative	creative
		p	7	speed	speed
		p	8	divergence	divergence
		p	9	simulated	simulated
	m	(Lanf;Laoy;)V	a	method_20272
		p	1	e	e
	m	(Lbqb;Laoy;Lanf;Lbki;FF)V	a	shootAll
		p	0	world	world
		p	1	entity	entity
		p	2	hand	hand
		p	3	stack	stack
		p	4	speed	speed
		p	5	divergence	divergence
	m	(Lbki;Z)V	a	setCharged
		p	0	stack	stack
		p	1	charged	charged
	m	(Ljava/util/Random;)[F	a	getSoundPitches
		p	0	random	random
	m	(Lbki;Lbki;)V	b	putProjectile
		p	0	crossbow	crossbow
		p	1	projectile	projectile
	m	(Lbki;)Z	d	isCharged
		p	0	stack	stack
	m	(Lbki;)I	g	getPullTime
		p	0	stack	stack
	m	(Lbki;)Ljava/util/List;	k	getProjectiles
		p	0	crossbow	crossbow
	m	(Lbki;)V	l	clearProjectiles
		p	0	crossbow	crossbow
	m	(Lbki;)F	m	getSpeed
		p	0	stack	stack
c	bj	net/minecraft/predicate/FluidPredicate
	f	Lbj;	a	ANY
	f	Ladf;	b	tag
	f	Lcwz;	c	fluid
	f	Lck;	d	state
	m	(Ladf;Lcwz;Lck;)V	<init>	<init>
		p	1	tag	tag
		p	2	fluid	fluid
		p	3	state	state
	m	(Lcom/google/gson/JsonElement;)Lbj;	a	fromJson
		p	0	json	json
	m	(Lzd;Lfu;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	bja	net/minecraft/item/DebugStickItem
	m	(Lbec;Lcfj;Lbqc;Lfu;ZLbki;)V	a	use
		p	1	player	player
		p	2	state	state
		p	3	world	world
		p	4	pos	pos
		p	5	update	update
		p	6	stack	stack
	m	(Lcfj;Lcgl;Z)Lcfj;	a	cycle
		p	0	state	state
		p	1	property	property
		p	2	inverse	inverse
	m	(Lcfj;Lcgl;)Ljava/lang/String;	a	getValueString
		p	0	state	state
		p	1	property	property
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	cycle
		p	0	elements	elements
		p	1	current	current
		p	2	inverse	inverse
	m	(Lbec;Lmr;)V	a	sendMessage
		p	0	player	player
		p	1	message	message
c	bjb	net/minecraft/item/MiningToolItem
	f	Ljava/util/Set;	a	effectiveBlocks
	f	F	b	miningSpeed
	f	F	c	attackDamage
	f	Lcom/google/common/collect/Multimap;	d	attributeModifiers
	m	(FFLblo;Ljava/util/Set;Lbke$a;)V	<init>	<init>
		p	1	attackDamage	attackDamage
		p	2	attackSpeed	attackSpeed
		p	3	material	material
		p	4	effectiveBlocks	effectiveBlocks
		p	5	settings	settings
	m	(Laoy;)V	a	method_20273
		p	0	e	e
	m	(Laoy;)V	b	method_20274
		p	0	e	e
	m	()F	d	getAttackDamage
c	bjc	net/minecraft/item/AutomaticItemPlacementContext
	f	Lfz;	g	facing
	m	(Lbqb;Lfu;Lfz;Lbki;Lfz;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	facing	facing
		p	4	stack	stack
		p	5	side	side
c	bjd	net/minecraft/item/TallBlockItem
c	bje	net/minecraft/util/DyeColor
	f	[Lbje;	q	VALUES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	r	BY_FIREWORK_COLOR
	f	I	s	id
	f	Ljava/lang/String;	t	name
	f	Lcxe;	u	materialColor
	f	I	v	color
	f	I	w	colorSwapped
	f	[F	x	colorComponents
	f	I	y	fireworkColor
	f	I	z	signColor
	m	(Ljava/lang/String;IILjava/lang/String;ILcxe;II)V	<init>	<init>
		p	3	woolId	woolId
		p	4	name	name
		p	5	color	color
		p	6	materialColor	materialColor
		p	7	fireworkColor	fireworkColor
		p	8	signColor	signColor
	m	(Ljava/lang/String;Lbje;)Lbje;	a	byName
		p	0	name	name
		p	1	defaultColor	defaultColor
	m	(I)Lbje;	a	byId
		p	0	id	id
	m	()I	b	getId
	m	(I)Lbje;	b	byFireworkColor
		p	0	color	color
	m	()Ljava/lang/String;	c	getName
	m	()[F	e	getColorComponents
	m	()Lcxe;	f	getMaterialColor
	m	()I	g	getFireworkColor
	m	()I	h	getSignColor
c	bjf	net/minecraft/item/DyeItem
	f	Ljava/util/Map;	a	DYES
	f	Lbje;	b	color
	m	(Lbje;Lbke$a;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	(Lbje;)Lbjf;	a	byColor
		p	0	color	color
	m	()Lbje;	d	getColor
c	bjg	net/minecraft/item/DyeableArmorItem
c	bjh	net/minecraft/item/DyeableHorseArmorItem
c	bji	net/minecraft/item/DyeableItem
	m	(Lbki;I)V	a	setColor
		p	1	stack	stack
		p	2	color	color
	m	(Lbki;)Z	a	hasColor
		p	1	stack	stack
	m	(Lbki;Ljava/util/List;)Lbki;	a	blendAndSetColor
		p	0	stack	stack
		p	1	colors	colors
	m	(Lbki;)I	b	getColor
		p	1	stack	stack
	m	(Lbki;)V	c	removeColor
		p	1	stack	stack
c	bjj	net/minecraft/item/EggItem
c	bjk	net/minecraft/item/ElytraItem
	m	(Lbki;)Z	d	isUsable
		p	0	stack	stack
c	bjl	net/minecraft/item/EmptyMapItem
c	bjm	net/minecraft/item/EnchantedBookItem
	m	(Lbnz;)Lbki;	a	forEnchantment
		p	0	info	info
	m	(Lbki;Lbnz;)V	a	addEnchantment
		p	0	stack	stack
		p	1	entry	entry
	m	(Lbki;)Llk;	d	getEnchantmentTag
		p	0	stack	stack
c	bjn	net/minecraft/item/EnchantedGoldenAppleItem
c	bjo	net/minecraft/item/EndCrystalItem
c	bjp	net/minecraft/item/EnderEyeItem
c	bjq	net/minecraft/item/EnderPearlItem
c	bjr	net/minecraft/item/ExperienceBottleItem
c	bjs	net/minecraft/item/FireChargeItem
	m	(Lbqb;Lfu;)V	a	playUseSound
		p	1	world	world
		p	2	pos	pos
c	bjt	net/minecraft/item/FireworkItem
c	bjt$a	net/minecraft/item/FireworkItem$Type
	f	[Lbjt$a;	f	TYPES
	f	I	g	id
	f	Ljava/lang/String;	h	name
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getId
	m	(Lbjt$a;)I	a	method_7814
		p	0	type	type
	m	(I)Lbjt$a;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	b	getName
c	bju	net/minecraft/item/FireworkChargeItem
	m	(Lle;Ljava/util/List;)V	a	appendFireworkTooltip
		p	0	tag	tag
		p	1	tooltip	tooltip
	m	(Lmx;[I)Lmr;	a	appendColors
		p	0	line	line
		p	1	colors	colors
	m	(I)Lmr;	a	getColorText
		p	0	color	color
c	bjv	net/minecraft/item/FishBucketItem
	f	Laoq;	a	fishType
	m	(Laoq;Lcwz;Lbke$a;)V	<init>	<init>
		p	1	type	type
		p	2	fluid	fluid
		p	3	settings	settings
	m	(Lbqb;Lbki;Lfu;)V	b	spawnFish
		p	1	world	world
		p	2	stack	stack
		p	3	pos	pos
c	bjw	net/minecraft/item/FishingRodItem
	m	(Lanf;Lbec;)V	a	method_20275
		p	1	p	p
c	bjx	net/minecraft/item/FlintAndSteelItem
	m	(Lblv;Lbec;)V	a	method_20276
		p	1	p	p
	m	(Lblv;Lbec;)V	b	method_20277
		p	1	p	p
c	bjy	net/minecraft/item/OnAStickItem
	f	Laoq;	a	target
	f	I	b	damagePerUse
	m	(Lbke$a;Laoq;I)V	<init>	<init>
		p	1	settings	settings
		p	2	target	target
		p	3	damagePerUse	damagePerUse
	m	(Lanf;Lbec;)V	a	method_20271
		p	1	p	p
c	bjz	net/minecraft/item/CommandBlockItem
c	bk	net/minecraft/advancement/criterion/ImpossibleCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lav;)Lbk$a;	b	conditionsFromJson
c	bk$a	net/minecraft/advancement/criterion/ImpossibleCriterion$Conditions
c	bka	net/minecraft/item/DecorationItem
	f	Laoq;	a	entityType
	m	(Laoq;Lbke$a;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
	m	(Lbec;Lfz;Lbki;Lfu;)Z	a	canPlaceOn
		p	1	player	player
		p	2	side	side
		p	3	stack	stack
		p	4	pos	pos
c	bkb	net/minecraft/item/HoeItem
	f	Ljava/util/Map;	a	TILLED_BLOCKS
	f	Ljava/util/Set;	c	EFFECTIVE_BLOCKS
	m	(Lblo;IFLbke$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
	m	(Lblv;Lbec;)V	a	method_20279
		p	1	p	p
c	bkc	net/minecraft/item/HoneyBottleItem
c	bkd	net/minecraft/item/HorseArmorItem
	f	I	a	bonus
	f	Ljava/lang/String;	b	entityTexture
	m	(ILjava/lang/String;Lbke$a;)V	<init>	<init>
		p	1	bonus	bonus
		p	2	name	name
		p	3	settings	settings
	m	()Luh;	f	getEntityTexture
	m	()I	g	getBonus
c	bke	net/minecraft/item/Item
	f	Lbkw;	a	rarity
	f	I	b	maxCount
	f	I	c	maxDamage
	f	Z	d	fireproof
	f	Ljava/util/Map;	e	BLOCK_ITEMS
	f	Ljava/util/UUID;	f	ATTACK_DAMAGE_MODIFIER_ID
	f	Ljava/util/UUID;	g	ATTACK_SPEED_MODIFIER_ID
	f	Ljava/util/Random;	h	RANDOM
	f	Lbiy;	i	group
	f	Lbke;	j	recipeRemainder
	f	Ljava/lang/String;	k	translationKey
	f	Lbgf;	l	foodComponent
	m	(Lbke$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbki;Lbqb;Laom;IZ)V	a	inventoryTick
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
		p	4	slot	slot
		p	5	selected	selected
	m	(Lbki;Lbki;)Z	a	canRepair
		p	1	stack	stack
		p	2	ingredient	ingredient
	m	(Lcfj;Lbqb;Lfu;Lbec;)Z	a	canMine
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	miner	miner
	m	(Lbqb;Lbec;Lbpj$b;)Ldeh;	a	rayTrace
		p	0	world	world
		p	1	player	player
		p	2	fluidHandling	fluidHandling
	m	(Lbqb;Lbec;Lanf;)Lanh;	a	use
		p	1	world	world
		p	2	user	user
		p	3	hand	hand
	m	(Lblv;)Lang;	a	useOnBlock
		p	1	context	context
	m	(Lbke;)I	a	getRawId
		p	0	item	item
	m	(Lbiy;Lgi;)V	a	appendStacks
		p	1	group	group
		p	2	stacks	stacks
	m	(Lbki;Laoy;Laoy;)Z	a	postHit
		p	1	stack	stack
		p	2	target	target
		p	3	attacker	attacker
	m	(Lbqb;Laoy;Lbki;I)V	a	usageTick
		p	1	world	world
		p	2	user	user
		p	3	stack	stack
		p	4	remainingUseTicks	remainingUseTicks
	m	(Lbki;Lcfj;)F	a	getMiningSpeedMultiplier
		p	1	stack	stack
		p	2	state	state
	m	(Lbki;Lbqb;Laoy;)Lbki;	a	finishUsing
		p	1	stack	stack
		p	2	world	world
		p	3	user	user
	m	(Lbvr;)Lbke;	a	fromBlock
		p	0	block	block
	m	(Lbiy;)Z	a	isIn
		p	1	group	group
	m	(Lbki;Lbqb;Laoy;I)V	a	onStoppedUsing
		p	1	stack	stack
		p	2	world	world
		p	3	user	user
		p	4	remainingUseTicks	remainingUseTicks
	m	(Lbki;Lbec;Laoy;Lanf;)Lang;	a	useOnEntity
		p	1	stack	stack
		p	2	user	user
		p	3	entity	entity
		p	4	hand	hand
	m	(Lbki;Lbqb;Lcfj;Lfu;Laoy;)Z	a	postMine
		p	1	stack	stack
		p	2	world	world
		p	3	state	state
		p	4	pos	pos
		p	5	miner	miner
	m	(Lbki;Lbqb;Ljava/util/List;Lbls;)V	a	appendTooltip
		p	1	stack	stack
		p	2	world	world
		p	3	tooltip	tooltip
		p	4	context	context
	m	(Lanw;)Z	a	damage
		p	1	source	source
	m	(Ladf;)Z	a	isIn
		p	1	tag	tag
	m	(Laor;)Lcom/google/common/collect/Multimap;	a	getAttributeModifiers
		p	1	slot	slot
	m	()Ljava/lang/String;	a	getTranslationKey
	m	()Z	ae_	isNetworkSynced
	m	()Lack;	af_	getEatSound
	m	()Lack;	ag_	getDrinkSound
	m	(Lcfj;)Z	b	isEffectiveOn
		p	1	state	state
	m	(I)Lbke;	b	byRawId
		p	0	id	id
	m	(Lle;)Z	b	postProcessTag
		p	1	tag	tag
	m	(Lbki;Lbqb;Lbec;)V	b	onCraft
		p	1	stack	stack
		p	2	world	world
		p	3	player	player
	m	()I	c	getEnchantability
	m	(Lbki;)Lblu;	d_	getUseAction
		p	1	stack	stack
	m	(Lbki;)Z	e	hasGlint
		p	1	stack	stack
	m	(Lbki;)I	e_	getMaxUseTime
		p	1	stack	stack
	m	(Lbki;)Ljava/lang/String;	f	getTranslationKey
		p	1	stack	stack
	m	(Lbki;)Z	f_	isEnchantable
		p	1	stack	stack
	m	(Lbki;)Lmr;	h	getName
		p	1	stack	stack
	m	()I	i	getMaxCount
	m	(Lbki;)Lbkw;	i	getRarity
		p	1	stack	stack
	m	(Lbki;)Z	j	isUsedOnRelease
		p	1	stack	stack
	m	()I	j	getMaxDamage
	m	()Z	k	isDamageable
	m	()Lmr;	l	getName
	m	()Ljava/lang/String;	m	getOrCreateTranslationKey
	m	()Z	n	shouldSyncTagToClient
	m	()Lbke;	o	getRecipeRemainder
	m	()Z	p	hasRecipeRemainder
	m	()Lbiy;	q	getGroup
	m	()Lbki;	r	getStackForRender
	m	()Z	s	isFood
	m	()Lbgf;	t	getFoodComponent
	m	()Z	u	isFireproof
c	bke$a	net/minecraft/item/Item$Settings
	f	I	a	maxCount
	f	I	b	maxDamage
	f	Lbke;	c	recipeRemainder
	f	Lbiy;	d	group
	f	Lbkw;	e	rarity
	f	Lbgf;	f	foodComponent
	f	Z	g	fireproof
	m	(Lbgf;)Lbke$a;	a	food
		p	1	foodComponent	foodComponent
	m	(I)Lbke$a;	a	maxCount
		p	1	maxCount	maxCount
	m	()Lbke$a;	a	fireproof
	m	(Lbkw;)Lbke$a;	a	rarity
		p	1	rarity	rarity
	m	(Lbiy;)Lbke$a;	a	group
		p	1	group	group
	m	(Lbke;)Lbke$a;	a	recipeRemainder
		p	1	recipeRemainder	recipeRemainder
	m	(I)Lbke$a;	b	maxDamageIfAbsent
		p	1	maxDamage	maxDamage
	m	(I)Lbke$a;	c	maxDamage
		p	1	maxDamage	maxDamage
c	bkf	net/minecraft/entity/player/ItemCooldownManager
	f	Ljava/util/Map;	a	entries
	f	I	b	tick
	m	(Lbke;)Z	a	isCoolingDown
		p	1	item	item
	m	(Lbke;I)V	a	set
		p	1	item	item
		p	2	duration	duration
	m	(Lbke;F)F	a	getCooldownProgress
		p	1	item	item
		p	2	partialTicks	partialTicks
	m	()V	a	update
	m	(Lbke;I)V	b	onCooldownUpdate
		p	1	item	item
		p	2	duration	duration
	m	(Lbke;)V	b	remove
		p	1	item	item
	m	(Lbke;)V	c	onCooldownUpdate
		p	1	item	item
c	bkf$a	net/minecraft/entity/player/ItemCooldownManager$Entry
	f	I	b	startTick
	f	I	c	endTick
	m	(Lbkf;II)V	<init>	<init>
		p	2	startTick	startTick
		p	3	endTick	endTick
c	bkg	net/minecraft/item/ItemFrameItem
c	bkh	net/minecraft/item/AliasedBlockItem
c	bki	net/minecraft/item/ItemStack
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbki;	b	EMPTY
	f	Ljava/text/DecimalFormat;	c	MODIFIER_FORMAT
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	I	f	count
	f	I	g	cooldown
	f	Lbke;	h	item
	f	Lle;	i	tag
	f	Z	j	empty
	f	Laom;	k	holder
	f	Lcfn;	l	lastDestroyPos
	f	Z	m	lastDestroyResult
	f	Lcfn;	n	lastPlaceOnPos
	f	Z	o	lastPlaceOnResult
	m	(Lbqa;)V	<init>	<init>
		p	1	item	item
	m	(Lbqa;I)V	<init>	<init>
		p	1	item	item
		p	2	count	count
	m	(Lle;)V	<init>	<init>
		p	1	tag	tag
	m	()Laom;	A	getHolder
	m	()I	B	getRepairCost
	m	()Lmr;	C	toHoverableText
	m	()I	D	getCooldown
	m	()I	E	getCount
	m	()Z	F	isFood
	m	()Lack;	G	getDrinkSound
	m	()Lack;	H	getEatSound
	m	()V	I	updateEmptyState
	m	(Lle;)Lbki;	a	fromTag
		p	0	tag	tag
	m	(Ljava/lang/String;Llu;)V	a	putSubTag
		p	1	key	key
		p	2	tag	tag
	m	(Ladh;Lcfn;)Z	a	canDestroy
		p	1	manager	manager
		p	2	pos	pos
	m	(Lbqb;Laoy;I)V	a	onStoppedUsing
		p	1	world	world
		p	2	user	user
		p	3	remainingUseTicks	remainingUseTicks
	m	(Lbki;Lbki;)Z	a	areTagsEqual
		p	0	left	left
		p	1	right	right
	m	(Lcfj;)F	a	getMiningSpeedMultiplier
		p	1	state	state
	m	()Z	a	isEmpty
	m	(Lbqb;Lbec;I)V	a	onCraft
		p	1	world	world
		p	2	player	player
		p	3	amount	amount
	m	(ILjava/util/Random;Lze;)Z	a	damage
		p	1	amount	amount
		p	2	random	random
		p	3	player	player
	m	(Laps;Lapv;Laor;)V	a	addAttributeModifier
		p	2	modifier	modifier
		p	3	slot	slot
	m	(Lbqb;Lbec;Lanf;)Lanh;	a	use
		p	1	world	world
		p	2	user	user
		p	3	hand	hand
	m	(Lbqb;Laom;IZ)V	a	inventoryTick
		p	1	world	world
		p	2	entity	entity
		p	3	slot	slot
		p	4	selected	selected
	m	(Laom;)V	a	setHolder
		p	1	holder	holder
	m	(ILaoy;Ljava/util/function/Consumer;)V	a	damage
		p	1	amount	amount
		p	2	entity	entity
		p	3	breakCallback	breakCallback
	m	(Lblv;)Lang;	a	useOnBlock
		p	1	context	context
	m	(Ljava/util/List;Llk;)V	a	appendEnchantments
		p	0	tooltip	tooltip
		p	1	enchantments	enchantments
	m	(Ljava/util/List;Lle;Lbnw;)V	a	method_17869
		p	2	e	e
	m	(Lmx;)Lmx;	a	method_7955
		p	0	text	text
	m	(I)Lbki;	a	split
		p	1	amount	amount
	m	(Lbki;)Z	a	isItemEqualIgnoreDamage
		p	1	stack	stack
	m	(Lcfn;Lcfn;)Z	a	areBlocksEqual
		p	0	first	first
		p	1	second	second
	m	(Lbqb;Lcfj;Lfu;Lbec;)V	a	postMine
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	miner	miner
	m	(Lmr;)Lbki;	a	setCustomName
		p	1	name	name
	m	(Lbnw;I)V	a	addEnchantment
		p	1	enchantment	enchantment
		p	2	level	level
	m	(Lbqb;Laoy;)Lbki;	a	finishUsing
		p	1	world	world
		p	2	user	user
	m	(Ljava/lang/String;)Lle;	a	getOrCreateSubTag
		p	1	key	key
	m	(Lbec;Laoy;Lanf;)Lang;	a	useOnEntity
		p	1	user	user
		p	2	entity	entity
		p	3	hand	hand
	m	(Laoy;Lbec;)V	a	postHit
		p	1	target	target
		p	2	attacker	attacker
	m	(Lnb;)Lnb;	a	method_7966
		p	1	style	style
	m	(Lbec;Lbls;)Ljava/util/List;	a	getTooltip
		p	1	player	player
		p	2	context	context
	m	(Laor;)Lcom/google/common/collect/Multimap;	a	getAttributeModifiers
	m	(Lcfj;)Z	b	isEffectiveOn
		p	1	state	state
	m	(Ljava/lang/String;)Lle;	b	getSubTag
		p	1	key	key
	m	(I)V	b	setDamage
		p	1	damage	damage
	m	(Lbqb;Laoy;I)V	b	usageTick
		p	1	world	world
		p	2	user	user
		p	3	remainingUseTicks	remainingUseTicks
	m	(Lbki;Lbki;)Z	b	areEqual
		p	0	left	left
		p	1	right	right
	m	(Lbki;)Z	b	isItemEqual
		p	1	stack	stack
	m	()Lbke;	b	getItem
	m	(Lle;)Lle;	b	toTag
		p	1	tag	tag
	m	(Ladh;Lcfn;)Z	b	canPlaceOn
		p	1	manager	manager
		p	2	pos	pos
	m	(Ljava/lang/String;)V	c	removeSubTag
		p	1	key	key
	m	()I	c	getMaxCount
	m	(Lbki;)Z	c	isEqual
		p	1	stack	stack
	m	(I)V	c	setRepairCost
		p	1	repairCost	repairCost
	m	(Lle;)V	c	setTag
		p	1	tag	tag
	m	(Lbki;Lbki;)Z	c	areItemsEqualIgnoreDamage
		p	0	left	left
		p	1	right	right
	m	()Z	d	isStackable
	m	(Lbki;Lbki;)Z	d	areItemsEqual
		p	0	left	left
		p	1	right	right
	m	(I)V	d	setCooldown
		p	1	cooldown	cooldown
	m	(Ljava/lang/String;)Ljava/util/Collection;	d	parseBlockTag
		p	0	tag	tag
	m	(I)V	e	setCount
		p	1	count	count
	m	()Z	e	isDamageable
	m	(I)V	f	increment
		p	1	amount	amount
	m	()Z	f	isDamaged
	m	()I	g	getDamage
	m	(I)V	g	decrement
		p	1	amount	amount
	m	()I	h	getMaxDamage
	m	()Lbki;	i	copy
	m	()Ljava/lang/String;	j	getTranslationKey
	m	()I	k	getMaxUseTime
	m	()Lblu;	l	getUseAction
	m	()Z	m	isUsedOnRelease
	m	()Z	n	hasTag
	m	()Lle;	o	getTag
	m	()Lle;	p	getOrCreateTag
	m	()Llk;	q	getEnchantments
	m	()Lmr;	r	getName
	m	()V	s	removeCustomName
	m	()Z	t	hasCustomName
	m	()Z	u	hasGlint
	m	()Lbkw;	v	getRarity
	m	()Z	w	isEnchantable
	m	()Z	x	hasEnchantments
	m	()Z	y	isInFrame
	m	()Lbba;	z	getFrame
c	bkj	net/minecraft/item/ItemUsage
	m	(Lbqb;Lbec;Lanf;)Lanh;	a	consumeHeldItem
c	bkk	net/minecraft/item/Items
	f	Lbke;	A	JUNGLE_SAPLING
	f	Lbke;	B	ACACIA_SAPLING
	f	Lbke;	C	DARK_OAK_SAPLING
	f	Lbke;	D	BEDROCK
	f	Lbke;	E	SAND
	f	Lbke;	F	RED_SAND
	f	Lbke;	G	GRAVEL
	f	Lbke;	H	GOLD_ORE
	f	Lbke;	I	IRON_ORE
	f	Lbke;	J	COAL_ORE
	f	Lbke;	K	NETHER_GOLD_ORE
	f	Lbke;	L	OAK_LOG
	f	Lbke;	M	SPRUCE_LOG
	f	Lbke;	N	BIRCH_LOG
	f	Lbke;	O	JUNGLE_LOG
	f	Lbke;	P	ACACIA_LOG
	f	Lbke;	Q	DARK_OAK_LOG
	f	Lbke;	R	CRIMSON_STEM
	f	Lbke;	S	WARPED_STEM
	f	Lbke;	T	STRIPPED_OAK_LOG
	f	Lbke;	U	STRIPPED_SPRUCE_LOG
	f	Lbke;	V	STRIPPED_BIRCH_LOG
	f	Lbke;	W	STRIPPED_JUNGLE_LOG
	f	Lbke;	X	STRIPPED_ACACIA_LOG
	f	Lbke;	Y	STRIPPED_DARK_OAK_LOG
	f	Lbke;	Z	STRIPPED_CRIMSON_STEM
	f	Lbke;	a	AIR
	f	Lbke;	aA	LAPIS_ORE
	f	Lbke;	aB	LAPIS_BLOCK
	f	Lbke;	aC	DISPENSER
	f	Lbke;	aD	SANDSTONE
	f	Lbke;	aE	CHISELED_SANDSTONE
	f	Lbke;	aF	CUT_SANDSTONE
	f	Lbke;	aG	NOTE_BLOCK
	f	Lbke;	aH	POWERED_RAIL
	f	Lbke;	aI	DETECTOR_RAIL
	f	Lbke;	aJ	STICKY_PISTON
	f	Lbke;	aK	COBWEB
	f	Lbke;	aL	GRASS
	f	Lbke;	aM	FERN
	f	Lbke;	aN	DEAD_BUSH
	f	Lbke;	aO	SEAGRASS
	f	Lbke;	aP	SEA_PICKLE
	f	Lbke;	aQ	PISTON
	f	Lbke;	aR	WHITE_WOOL
	f	Lbke;	aS	ORANGE_WOOL
	f	Lbke;	aT	MAGENTA_WOOL
	f	Lbke;	aU	LIGHT_BLUE_WOOL
	f	Lbke;	aV	YELLOW_WOOL
	f	Lbke;	aW	LIME_WOOL
	f	Lbke;	aX	PINK_WOOL
	f	Lbke;	aY	GRAY_WOOL
	f	Lbke;	aZ	LIGHT_GRAY_WOOL
	f	Lbke;	aa	STRIPPED_WARPED_STEM
	f	Lbke;	ab	STRIPPED_OAK_WOOD
	f	Lbke;	ac	STRIPPED_SPRUCE_WOOD
	f	Lbke;	ad	STRIPPED_BIRCH_WOOD
	f	Lbke;	ae	STRIPPED_JUNGLE_WOOD
	f	Lbke;	af	STRIPPED_ACACIA_WOOD
	f	Lbke;	ag	STRIPPED_DARK_OAK_WOOD
	f	Lbke;	ah	STRIPPED_CRIMSON_HYPHAE
	f	Lbke;	ai	STRIPPED_WARPED_HYPHAE
	f	Lbke;	aj	OAK_WOOD
	f	Lbke;	ak	SPRUCE_WOOD
	f	Lbke;	al	BIRCH_WOOD
	f	Lbke;	am	JUNGLE_WOOD
	f	Lbke;	an	ACACIA_WOOD
	f	Lbke;	ao	DARK_OAK_WOOD
	f	Lbke;	ap	CRIMSON_HYPHAE
	f	Lbke;	aq	WARPED_HYPHAE
	f	Lbke;	ar	OAK_LEAVES
	f	Lbke;	as	SPRUCE_LEAVES
	f	Lbke;	at	BIRCH_LEAVES
	f	Lbke;	au	JUNGLE_LEAVES
	f	Lbke;	av	ACACIA_LEAVES
	f	Lbke;	aw	DARK_OAK_LEAVES
	f	Lbke;	ax	SPONGE
	f	Lbke;	ay	WET_SPONGE
	f	Lbke;	az	GLASS
	f	Lbke;	b	STONE
	f	Lbke;	bA	NETHER_SPROUTS
	f	Lbke;	bB	WEEPING_VINES
	f	Lbke;	bC	TWISTING_VINES
	f	Lbke;	bD	SUGAR_CANE
	f	Lbke;	bE	KELP
	f	Lbke;	bF	BAMBOO
	f	Lbke;	bG	GOLD_BLOCK
	f	Lbke;	bH	IRON_BLOCK
	f	Lbke;	bI	OAK_SLAB
	f	Lbke;	bJ	SPRUCE_SLAB
	f	Lbke;	bK	BIRCH_SLAB
	f	Lbke;	bL	JUNGLE_SLAB
	f	Lbke;	bM	ACACIA_SLAB
	f	Lbke;	bN	DARK_OAK_SLAB
	f	Lbke;	bO	CRIMSON_SLAB
	f	Lbke;	bP	WARPED_SLAB
	f	Lbke;	bQ	STONE_SLAB
	f	Lbke;	bR	SMOOTH_STONE_SLAB
	f	Lbke;	bS	SANDSTONE_SLAB
	f	Lbke;	bT	CUT_SANDSTONE_SLAB
	f	Lbke;	bU	PETRIFIED_OAK_SLAB
	f	Lbke;	bV	COBBLESTONE_SLAB
	f	Lbke;	bW	BRICK_SLAB
	f	Lbke;	bX	STONE_BRICK_SLAB
	f	Lbke;	bY	NETHER_BRICK_SLAB
	f	Lbke;	bZ	QUARTZ_SLAB
	f	Lbke;	ba	CYAN_WOOL
	f	Lbke;	bb	PURPLE_WOOL
	f	Lbke;	bc	BLUE_WOOL
	f	Lbke;	bd	BROWN_WOOL
	f	Lbke;	be	GREEN_WOOL
	f	Lbke;	bf	RED_WOOL
	f	Lbke;	bg	BLACK_WOOL
	f	Lbke;	bh	DANDELION
	f	Lbke;	bi	POPPY
	f	Lbke;	bj	BLUE_ORCHID
	f	Lbke;	bk	ALLIUM
	f	Lbke;	bl	AZURE_BLUET
	f	Lbke;	bm	RED_TULIP
	f	Lbke;	bn	ORANGE_TULIP
	f	Lbke;	bo	WHITE_TULIP
	f	Lbke;	bp	PINK_TULIP
	f	Lbke;	bq	OXEYE_DAISY
	f	Lbke;	br	CORNFLOWER
	f	Lbke;	bs	LILY_OF_THE_VALLEY
	f	Lbke;	bt	WITHER_ROSE
	f	Lbke;	bu	BROWN_MUSHROOM
	f	Lbke;	bv	RED_MUSHROOM
	f	Lbke;	bw	CRIMSON_FUNGUS
	f	Lbke;	bx	WARPED_FUNGUS
	f	Lbke;	by	CRIMSON_ROOTS
	f	Lbke;	bz	WARPED_ROOTS
	f	Lbke;	c	GRANITE
	f	Lbke;	cA	DIAMOND_BLOCK
	f	Lbke;	cB	CRAFTING_TABLE
	f	Lbke;	cC	FARMLAND
	f	Lbke;	cD	FURNACE
	f	Lbke;	cE	LADDER
	f	Lbke;	cF	RAIL
	f	Lbke;	cG	COBBLESTONE_STAIRS
	f	Lbke;	cH	LEVER
	f	Lbke;	cI	STONE_PRESSURE_PLATE
	f	Lbke;	cJ	OAK_PRESSURE_PLATE
	f	Lbke;	cK	SPRUCE_PRESSURE_PLATE
	f	Lbke;	cL	BIRCH_PRESSURE_PLATE
	f	Lbke;	cM	JUNGLE_PRESSURE_PLATE
	f	Lbke;	cN	ACACIA_PRESSURE_PLATE
	f	Lbke;	cO	DARK_OAK_PRESSURE_PLATE
	f	Lbke;	cP	CRIMSON_PRESSURE_PLATE
	f	Lbke;	cQ	WARPED_PRESSURE_PLATE
	f	Lbke;	cR	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lbke;	cS	REDSTONE_ORE
	f	Lbke;	cT	REDSTONE_TORCH
	f	Lbke;	cU	SNOW
	f	Lbke;	cV	ICE
	f	Lbke;	cW	SNOW_BLOCK
	f	Lbke;	cX	CACTUS
	f	Lbke;	cY	CLAY
	f	Lbke;	cZ	JUKEBOX
	f	Lbke;	ca	RED_SANDSTONE_SLAB
	f	Lbke;	cb	CUT_RED_SANDSTONE_SLAB
	f	Lbke;	cc	PURPUR_SLAB
	f	Lbke;	cd	PRISMARINE_SLAB
	f	Lbke;	ce	PRISMARINE_BRICK_SLAB
	f	Lbke;	cf	DARK_PRISMARINE_SLAB
	f	Lbke;	cg	SMOOTH_QUARTZ
	f	Lbke;	ch	SMOOTH_RED_SANDSTONE
	f	Lbke;	ci	SMOOTH_SANDSTONE
	f	Lbke;	cj	SMOOTH_STONE
	f	Lbke;	ck	BRICKS
	f	Lbke;	cl	TNT
	f	Lbke;	cm	BOOKSHELF
	f	Lbke;	cn	MOSSY_COBBLESTONE
	f	Lbke;	co	OBSIDIAN
	f	Lbke;	cp	TORCH
	f	Lbke;	cq	END_ROD
	f	Lbke;	cr	CHORUS_PLANT
	f	Lbke;	cs	CHORUS_FLOWER
	f	Lbke;	ct	PURPUR_BLOCK
	f	Lbke;	cu	PURPUR_PILLAR
	f	Lbke;	cv	PURPUR_STAIRS
	f	Lbke;	cw	SPAWNER
	f	Lbke;	cx	OAK_STAIRS
	f	Lbke;	cy	CHEST
	f	Lbke;	cz	DIAMOND_ORE
	f	Lbke;	d	POLISHED_GRANITE
	f	Lbke;	dA	INFESTED_STONE
	f	Lbke;	dB	INFESTED_COBBLESTONE
	f	Lbke;	dC	INFESTED_STONE_BRICKS
	f	Lbke;	dD	INFESTED_MOSSY_STONE_BRICKS
	f	Lbke;	dE	INFESTED_CRACKED_STONE_BRICKS
	f	Lbke;	dF	INFESTED_CHISELED_STONE_BRICKS
	f	Lbke;	dG	STONE_BRICKS
	f	Lbke;	dH	MOSSY_STONE_BRICKS
	f	Lbke;	dI	CRACKED_STONE_BRICKS
	f	Lbke;	dJ	CHISELED_STONE_BRICKS
	f	Lbke;	dK	BROWN_MUSHROOM_BLOCK
	f	Lbke;	dL	RED_MUSHROOM_BLOCK
	f	Lbke;	dM	MUSHROOM_STEM
	f	Lbke;	dN	IRON_BARS
	f	Lbke;	dO	CHAIN
	f	Lbke;	dP	GLASS_PANE
	f	Lbke;	dQ	MELON
	f	Lbke;	dR	VINE
	f	Lbke;	dS	OAK_FENCE_GATE
	f	Lbke;	dT	SPRUCE_FENCE_GATE
	f	Lbke;	dU	BIRCH_FENCE_GATE
	f	Lbke;	dV	JUNGLE_FENCE_GATE
	f	Lbke;	dW	ACACIA_FENCE_GATE
	f	Lbke;	dX	DARK_OAK_FENCE_GATE
	f	Lbke;	dY	CRIMSON_FENCE_GATE
	f	Lbke;	dZ	WARPED_FENCE_GATE
	f	Lbke;	da	OAK_FENCE
	f	Lbke;	db	SPRUCE_FENCE
	f	Lbke;	dc	BIRCH_FENCE
	f	Lbke;	dd	JUNGLE_FENCE
	f	Lbke;	de	ACACIA_FENCE
	f	Lbke;	df	DARK_OAK_FENCE
	f	Lbke;	dg	CRIMSON_FENCE
	f	Lbke;	dh	WARPED_FENCE
	f	Lbke;	di	PUMPKIN
	f	Lbke;	dj	CARVED_PUMPKIN
	f	Lbke;	dk	NETHERRACK
	f	Lbke;	dl	SOUL_SAND
	f	Lbke;	dm	SOUL_SOIL
	f	Lbke;	dn	BASALT
	f	Lbke;	do	POLISHED_BASALT
	f	Lbke;	dp	SOUL_TORCH
	f	Lbke;	dq	GLOWSTONE
	f	Lbke;	dr	JACK_O_LANTERN
	f	Lbke;	ds	OAK_TRAPDOOR
	f	Lbke;	dt	SPRUCE_TRAPDOOR
	f	Lbke;	du	BIRCH_TRAPDOOR
	f	Lbke;	dv	JUNGLE_TRAPDOOR
	f	Lbke;	dw	ACACIA_TRAPDOOR
	f	Lbke;	dx	DARK_OAK_TRAPDOOR
	f	Lbke;	dy	CRIMSON_TRAPDOOR
	f	Lbke;	dz	WARPED_TRAPDOOR
	f	Lbke;	e	DIORITE
	f	Lbke;	eA	BEACON
	f	Lbke;	eB	COBBLESTONE_WALL
	f	Lbke;	eC	MOSSY_COBBLESTONE_WALL
	f	Lbke;	eD	BRICK_WALL
	f	Lbke;	eE	PRISMARINE_WALL
	f	Lbke;	eF	RED_SANDSTONE_WALL
	f	Lbke;	eG	MOSSY_STONE_BRICK_WALL
	f	Lbke;	eH	GRANITE_WALL
	f	Lbke;	eI	STONE_BRICK_WALL
	f	Lbke;	eJ	NETHER_BRICK_WALL
	f	Lbke;	eK	ANDESITE_WALL
	f	Lbke;	eL	RED_NETHER_BRICK_WALL
	f	Lbke;	eM	SANDSTONE_WALL
	f	Lbke;	eN	END_STONE_BRICK_WALL
	f	Lbke;	eO	DIORITE_WALL
	f	Lbke;	eP	BLACKSTONE_WALL
	f	Lbke;	eQ	POLISHED_BLACKSTONE_WALL
	f	Lbke;	eR	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lbke;	eS	STONE_BUTTON
	f	Lbke;	eT	OAK_BUTTON
	f	Lbke;	eU	SPRUCE_BUTTON
	f	Lbke;	eV	BIRCH_BUTTON
	f	Lbke;	eW	JUNGLE_BUTTON
	f	Lbke;	eX	ACACIA_BUTTON
	f	Lbke;	eY	DARK_OAK_BUTTON
	f	Lbke;	eZ	CRIMSON_BUTTON
	f	Lbke;	ea	BRICK_STAIRS
	f	Lbke;	eb	STONE_BRICK_STAIRS
	f	Lbke;	ec	MYCELIUM
	f	Lbke;	ed	LILY_PAD
	f	Lbke;	ee	NETHER_BRICKS
	f	Lbke;	ef	CRACKED_NETHER_BRICKS
	f	Lbke;	eg	CHISELED_NETHER_BRICKS
	f	Lbke;	eh	NETHER_BRICK_FENCE
	f	Lbke;	ei	NETHER_BRICK_STAIRS
	f	Lbke;	ej	ENCHANTING_TABLE
	f	Lbke;	ek	END_PORTAL_FRAME
	f	Lbke;	el	END_STONE
	f	Lbke;	em	END_STONE_BRICKS
	f	Lbke;	en	DRAGON_EGG
	f	Lbke;	eo	REDSTONE_LAMP
	f	Lbke;	ep	SANDSTONE_STAIRS
	f	Lbke;	eq	EMERALD_ORE
	f	Lbke;	er	ENDER_CHEST
	f	Lbke;	es	TRIPWIRE_HOOK
	f	Lbke;	et	EMERALD_BLOCK
	f	Lbke;	eu	SPRUCE_STAIRS
	f	Lbke;	ev	BIRCH_STAIRS
	f	Lbke;	ew	JUNGLE_STAIRS
	f	Lbke;	ex	CRIMSON_STAIRS
	f	Lbke;	ey	WARPED_STAIRS
	f	Lbke;	ez	COMMAND_BLOCK
	f	Lbke;	f	POLISHED_DIORITE
	f	Lbke;	fA	GRAY_TERRACOTTA
	f	Lbke;	fB	LIGHT_GRAY_TERRACOTTA
	f	Lbke;	fC	CYAN_TERRACOTTA
	f	Lbke;	fD	PURPLE_TERRACOTTA
	f	Lbke;	fE	BLUE_TERRACOTTA
	f	Lbke;	fF	BROWN_TERRACOTTA
	f	Lbke;	fG	GREEN_TERRACOTTA
	f	Lbke;	fH	RED_TERRACOTTA
	f	Lbke;	fI	BLACK_TERRACOTTA
	f	Lbke;	fJ	BARRIER
	f	Lbke;	fK	IRON_TRAPDOOR
	f	Lbke;	fL	HAY_BLOCK
	f	Lbke;	fM	WHITE_CARPET
	f	Lbke;	fN	ORANGE_CARPET
	f	Lbke;	fO	MAGENTA_CARPET
	f	Lbke;	fP	LIGHT_BLUE_CARPET
	f	Lbke;	fQ	YELLOW_CARPET
	f	Lbke;	fR	LIME_CARPET
	f	Lbke;	fS	PINK_CARPET
	f	Lbke;	fT	GRAY_CARPET
	f	Lbke;	fU	LIGHT_GRAY_CARPET
	f	Lbke;	fV	CYAN_CARPET
	f	Lbke;	fW	PURPLE_CARPET
	f	Lbke;	fX	BLUE_CARPET
	f	Lbke;	fY	BROWN_CARPET
	f	Lbke;	fZ	GREEN_CARPET
	f	Lbke;	fa	WARPED_BUTTON
	f	Lbke;	fb	POLISHED_BLACKSTONE_BUTTON
	f	Lbke;	fc	ANVIL
	f	Lbke;	fd	CHIPPED_ANVIL
	f	Lbke;	fe	DAMAGED_ANVIL
	f	Lbke;	ff	TRAPPED_CHEST
	f	Lbke;	fg	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lbke;	fh	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lbke;	fi	DAYLIGHT_DETECTOR
	f	Lbke;	fj	REDSTONE_BLOCK
	f	Lbke;	fk	NETHER_QUARTZ_ORE
	f	Lbke;	fl	HOPPER
	f	Lbke;	fm	CHISELED_QUARTZ_BLOCK
	f	Lbke;	fn	QUARTZ_BLOCK
	f	Lbke;	fo	QUARTZ_BRICKS
	f	Lbke;	fp	QUARTZ_PILLAR
	f	Lbke;	fq	QUARTZ_STAIRS
	f	Lbke;	fr	ACTIVATOR_RAIL
	f	Lbke;	fs	DROPPER
	f	Lbke;	ft	WHITE_TERRACOTTA
	f	Lbke;	fu	ORANGE_TERRACOTTA
	f	Lbke;	fv	MAGENTA_TERRACOTTA
	f	Lbke;	fw	LIGHT_BLUE_TERRACOTTA
	f	Lbke;	fx	YELLOW_TERRACOTTA
	f	Lbke;	fy	LIME_TERRACOTTA
	f	Lbke;	fz	PINK_TERRACOTTA
	f	Lbke;	g	ANDESITE
	f	Lbke;	gA	BLUE_STAINED_GLASS
	f	Lbke;	gB	BROWN_STAINED_GLASS
	f	Lbke;	gC	GREEN_STAINED_GLASS
	f	Lbke;	gD	RED_STAINED_GLASS
	f	Lbke;	gE	BLACK_STAINED_GLASS
	f	Lbke;	gF	WHITE_STAINED_GLASS_PANE
	f	Lbke;	gG	ORANGE_STAINED_GLASS_PANE
	f	Lbke;	gH	MAGENTA_STAINED_GLASS_PANE
	f	Lbke;	gI	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lbke;	gJ	YELLOW_STAINED_GLASS_PANE
	f	Lbke;	gK	LIME_STAINED_GLASS_PANE
	f	Lbke;	gL	PINK_STAINED_GLASS_PANE
	f	Lbke;	gM	GRAY_STAINED_GLASS_PANE
	f	Lbke;	gN	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lbke;	gO	CYAN_STAINED_GLASS_PANE
	f	Lbke;	gP	PURPLE_STAINED_GLASS_PANE
	f	Lbke;	gQ	BLUE_STAINED_GLASS_PANE
	f	Lbke;	gR	BROWN_STAINED_GLASS_PANE
	f	Lbke;	gS	GREEN_STAINED_GLASS_PANE
	f	Lbke;	gT	RED_STAINED_GLASS_PANE
	f	Lbke;	gU	BLACK_STAINED_GLASS_PANE
	f	Lbke;	gV	PRISMARINE
	f	Lbke;	gW	PRISMARINE_BRICKS
	f	Lbke;	gX	DARK_PRISMARINE
	f	Lbke;	gY	PRISMARINE_STAIRS
	f	Lbke;	gZ	PRISMARINE_BRICK_STAIRS
	f	Lbke;	ga	RED_CARPET
	f	Lbke;	gb	BLACK_CARPET
	f	Lbke;	gc	TERRACOTTA
	f	Lbke;	gd	COAL_BLOCK
	f	Lbke;	ge	PACKED_ICE
	f	Lbke;	gf	ACACIA_STAIRS
	f	Lbke;	gg	DARK_OAK_STAIRS
	f	Lbke;	gh	SLIME_BLOCK
	f	Lbke;	gi	GRASS_PATH
	f	Lbke;	gj	SUNFLOWER
	f	Lbke;	gk	LILAC
	f	Lbke;	gl	ROSE_BUSH
	f	Lbke;	gm	PEONY
	f	Lbke;	gn	TALL_GRASS
	f	Lbke;	go	LARGE_FERN
	f	Lbke;	gp	WHITE_STAINED_GLASS
	f	Lbke;	gq	ORANGE_STAINED_GLASS
	f	Lbke;	gr	MAGENTA_STAINED_GLASS
	f	Lbke;	gs	LIGHT_BLUE_STAINED_GLASS
	f	Lbke;	gt	YELLOW_STAINED_GLASS
	f	Lbke;	gu	LIME_STAINED_GLASS
	f	Lbke;	gv	PINK_STAINED_GLASS
	f	Lbke;	gw	GRAY_STAINED_GLASS
	f	Lbke;	gx	LIGHT_GRAY_STAINED_GLASS
	f	Lbke;	gy	CYAN_STAINED_GLASS
	f	Lbke;	gz	PURPLE_STAINED_GLASS
	f	Lbke;	h	POLISHED_ANDESITE
	f	Lbke;	hA	PURPLE_SHULKER_BOX
	f	Lbke;	hB	BLUE_SHULKER_BOX
	f	Lbke;	hC	BROWN_SHULKER_BOX
	f	Lbke;	hD	GREEN_SHULKER_BOX
	f	Lbke;	hE	RED_SHULKER_BOX
	f	Lbke;	hF	BLACK_SHULKER_BOX
	f	Lbke;	hG	WHITE_GLAZED_TERRACOTTA
	f	Lbke;	hH	ORANGE_GLAZED_TERRACOTTA
	f	Lbke;	hI	MAGENTA_GLAZED_TERRACOTTA
	f	Lbke;	hJ	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lbke;	hK	YELLOW_GLAZED_TERRACOTTA
	f	Lbke;	hL	LIME_GLAZED_TERRACOTTA
	f	Lbke;	hM	PINK_GLAZED_TERRACOTTA
	f	Lbke;	hN	GRAY_GLAZED_TERRACOTTA
	f	Lbke;	hO	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lbke;	hP	CYAN_GLAZED_TERRACOTTA
	f	Lbke;	hQ	PURPLE_GLAZED_TERRACOTTA
	f	Lbke;	hR	BLUE_GLAZED_TERRACOTTA
	f	Lbke;	hS	BROWN_GLAZED_TERRACOTTA
	f	Lbke;	hT	GREEN_GLAZED_TERRACOTTA
	f	Lbke;	hU	RED_GLAZED_TERRACOTTA
	f	Lbke;	hV	BLACK_GLAZED_TERRACOTTA
	f	Lbke;	hW	WHITE_CONCRETE
	f	Lbke;	hX	ORANGE_CONCRETE
	f	Lbke;	hY	MAGENTA_CONCRETE
	f	Lbke;	hZ	LIGHT_BLUE_CONCRETE
	f	Lbke;	ha	DARK_PRISMARINE_STAIRS
	f	Lbke;	hb	SEA_LANTERN
	f	Lbke;	hc	RED_SANDSTONE
	f	Lbke;	hd	CHISELED_RED_SANDSTONE
	f	Lbke;	he	CUT_RED_SANDSTONE
	f	Lbke;	hf	RED_SANDSTONE_STAIRS
	f	Lbke;	hg	REPEATING_COMMAND_BLOCK
	f	Lbke;	hh	CHAIN_COMMAND_BLOCK
	f	Lbke;	hi	MAGMA_BLOCK
	f	Lbke;	hj	NETHER_WART_BLOCK
	f	Lbke;	hk	WARPED_WART_BLOCK
	f	Lbke;	hl	RED_NETHER_BRICKS
	f	Lbke;	hm	BONE_BLOCK
	f	Lbke;	hn	STRUCTURE_VOID
	f	Lbke;	ho	OBSERVER
	f	Lbke;	hp	SHULKER_BOX
	f	Lbke;	hq	WHITE_SHULKER_BOX
	f	Lbke;	hr	ORANGE_SHULKER_BOX
	f	Lbke;	hs	MAGENTA_SHULKER_BOX
	f	Lbke;	ht	LIGHT_BLUE_SHULKER_BOX
	f	Lbke;	hu	YELLOW_SHULKER_BOX
	f	Lbke;	hv	LIME_SHULKER_BOX
	f	Lbke;	hw	PINK_SHULKER_BOX
	f	Lbke;	hx	GRAY_SHULKER_BOX
	f	Lbke;	hy	LIGHT_GRAY_SHULKER_BOX
	f	Lbke;	hz	CYAN_SHULKER_BOX
	f	Lbke;	i	GRASS_BLOCK
	f	Lbke;	iA	RED_CONCRETE_POWDER
	f	Lbke;	iB	BLACK_CONCRETE_POWDER
	f	Lbke;	iC	TURTLE_EGG
	f	Lbke;	iD	DEAD_TUBE_CORAL_BLOCK
	f	Lbke;	iE	DEAD_BRAIN_CORAL_BLOCK
	f	Lbke;	iF	DEAD_BUBBLE_CORAL_BLOCK
	f	Lbke;	iG	DEAD_FIRE_CORAL_BLOCK
	f	Lbke;	iH	DEAD_HORN_CORAL_BLOCK
	f	Lbke;	iI	TUBE_CORAL_BLOCK
	f	Lbke;	iJ	BRAIN_CORAL_BLOCK
	f	Lbke;	iK	BUBBLE_CORAL_BLOCK
	f	Lbke;	iL	FIRE_CORAL_BLOCK
	f	Lbke;	iM	HORN_CORAL_BLOCK
	f	Lbke;	iN	TUBE_CORAL
	f	Lbke;	iO	BRAIN_CORAL
	f	Lbke;	iP	BUBBLE_CORAL
	f	Lbke;	iQ	FIRE_CORAL
	f	Lbke;	iR	HORN_CORAL
	f	Lbke;	iS	DEAD_BRAIN_CORAL
	f	Lbke;	iT	DEAD_BUBBLE_CORAL
	f	Lbke;	iU	DEAD_FIRE_CORAL
	f	Lbke;	iV	DEAD_HORN_CORAL
	f	Lbke;	iW	DEAD_TUBE_CORAL
	f	Lbke;	iX	TUBE_CORAL_FAN
	f	Lbke;	iY	BRAIN_CORAL_FAN
	f	Lbke;	iZ	BUBBLE_CORAL_FAN
	f	Lbke;	ia	YELLOW_CONCRETE
	f	Lbke;	ib	LIME_CONCRETE
	f	Lbke;	ic	PINK_CONCRETE
	f	Lbke;	id	GRAY_CONCRETE
	f	Lbke;	ie	LIGHT_GRAY_CONCRETE
	f	Lbke;	if	CYAN_CONCRETE
	f	Lbke;	ig	PURPLE_CONCRETE
	f	Lbke;	ih	BLUE_CONCRETE
	f	Lbke;	ii	BROWN_CONCRETE
	f	Lbke;	ij	GREEN_CONCRETE
	f	Lbke;	ik	RED_CONCRETE
	f	Lbke;	il	BLACK_CONCRETE
	f	Lbke;	im	WHITE_CONCRETE_POWDER
	f	Lbke;	in	ORANGE_CONCRETE_POWDER
	f	Lbke;	io	MAGENTA_CONCRETE_POWDER
	f	Lbke;	ip	LIGHT_BLUE_CONCRETE_POWDER
	f	Lbke;	iq	YELLOW_CONCRETE_POWDER
	f	Lbke;	ir	LIME_CONCRETE_POWDER
	f	Lbke;	is	PINK_CONCRETE_POWDER
	f	Lbke;	it	GRAY_CONCRETE_POWDER
	f	Lbke;	iu	LIGHT_GRAY_CONCRETE_POWDER
	f	Lbke;	iv	CYAN_CONCRETE_POWDER
	f	Lbke;	iw	PURPLE_CONCRETE_POWDER
	f	Lbke;	ix	BLUE_CONCRETE_POWDER
	f	Lbke;	iy	BROWN_CONCRETE_POWDER
	f	Lbke;	iz	GREEN_CONCRETE_POWDER
	f	Lbke;	j	DIRT
	f	Lbke;	jA	POLISHED_DIORITE_SLAB
	f	Lbke;	jB	MOSSY_COBBLESTONE_SLAB
	f	Lbke;	jC	END_STONE_BRICK_SLAB
	f	Lbke;	jD	SMOOTH_SANDSTONE_SLAB
	f	Lbke;	jE	SMOOTH_QUARTZ_SLAB
	f	Lbke;	jF	GRANITE_SLAB
	f	Lbke;	jG	ANDESITE_SLAB
	f	Lbke;	jH	RED_NETHER_BRICK_SLAB
	f	Lbke;	jI	POLISHED_ANDESITE_SLAB
	f	Lbke;	jJ	DIORITE_SLAB
	f	Lbke;	jK	SCAFFOLDING
	f	Lbke;	jL	IRON_DOOR
	f	Lbke;	jM	OAK_DOOR
	f	Lbke;	jN	SPRUCE_DOOR
	f	Lbke;	jO	BIRCH_DOOR
	f	Lbke;	jP	JUNGLE_DOOR
	f	Lbke;	jQ	ACACIA_DOOR
	f	Lbke;	jR	DARK_OAK_DOOR
	f	Lbke;	jS	CRIMSON_DOOR
	f	Lbke;	jT	WARPED_DOOR
	f	Lbke;	jU	REPEATER
	f	Lbke;	jV	COMPARATOR
	f	Lbke;	jW	STRUCTURE_BLOCK
	f	Lbke;	jX	JIGSAW
	f	Lbke;	ja	FIRE_CORAL_FAN
	f	Lbke;	jb	HORN_CORAL_FAN
	f	Lbke;	jc	DEAD_TUBE_CORAL_FAN
	f	Lbke;	jd	DEAD_BRAIN_CORAL_FAN
	f	Lbke;	je	DEAD_BUBBLE_CORAL_FAN
	f	Lbke;	jf	DEAD_FIRE_CORAL_FAN
	f	Lbke;	jg	DEAD_HORN_CORAL_FAN
	f	Lbke;	jh	BLUE_ICE
	f	Lbke;	ji	CONDUIT
	f	Lbke;	jj	POLISHED_GRANITE_STAIRS
	f	Lbke;	jk	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lbke;	jl	MOSSY_STONE_BRICK_STAIRS
	f	Lbke;	jm	POLISHED_DIORITE_STAIRS
	f	Lbke;	jn	MOSSY_COBBLESTONE_STAIRS
	f	Lbke;	jo	END_STONE_BRICK_STAIRS
	f	Lbke;	jp	STONE_STAIRS
	f	Lbke;	jq	SMOOTH_SANDSTONE_STAIRS
	f	Lbke;	jr	SMOOTH_QUARTZ_STAIRS
	f	Lbke;	js	GRANITE_STAIRS
	f	Lbke;	jt	ANDESITE_STAIRS
	f	Lbke;	ju	RED_NETHER_BRICK_STAIRS
	f	Lbke;	jv	POLISHED_ANDESITE_STAIRS
	f	Lbke;	jw	DIORITE_STAIRS
	f	Lbke;	jx	POLISHED_GRANITE_SLAB
	f	Lbke;	jy	SMOOTH_RED_SANDSTONE_SLAB
	f	Lbke;	jz	MOSSY_STONE_BRICK_SLAB
	f	Lbke;	k	COARSE_DIRT
	f	Lbke;	l	PODZOL
	f	Lbke;	m	CRIMSON_NYLIUM
	f	Lbke;	mN	CAKE
	f	Lbke;	mO	WHITE_BED
	f	Lbke;	mP	ORANGE_BED
	f	Lbke;	mQ	MAGENTA_BED
	f	Lbke;	mR	LIGHT_BLUE_BED
	f	Lbke;	mS	YELLOW_BED
	f	Lbke;	mT	LIME_BED
	f	Lbke;	mU	PINK_BED
	f	Lbke;	mV	GRAY_BED
	f	Lbke;	mW	LIGHT_GRAY_BED
	f	Lbke;	mX	CYAN_BED
	f	Lbke;	mY	PURPLE_BED
	f	Lbke;	mZ	BLUE_BED
	f	Lbke;	ma	DRIED_KELP_BLOCK
	f	Lbke;	n	WARPED_NYLIUM
	f	Lbke;	nB	BREWING_STAND
	f	Lbke;	nC	CAULDRON
	f	Lbke;	na	BROWN_BED
	f	Lbke;	nb	GREEN_BED
	f	Lbke;	nc	RED_BED
	f	Lbke;	nd	BLACK_BED
	f	Lbke;	o	COBBLESTONE
	f	Lbke;	oW	FLOWER_POT
	f	Lbke;	p	OAK_PLANKS
	f	Lbke;	pd	SKELETON_SKULL
	f	Lbke;	pe	WITHER_SKELETON_SKULL
	f	Lbke;	pf	PLAYER_HEAD
	f	Lbke;	pg	ZOMBIE_HEAD
	f	Lbke;	ph	CREEPER_HEAD
	f	Lbke;	pi	DRAGON_HEAD
	f	Lbke;	q	SPRUCE_PLANKS
	f	Lbke;	qR	LOOM
	f	Lbke;	qY	COMPOSTER
	f	Lbke;	qZ	BARREL
	f	Lbke;	r	BIRCH_PLANKS
	f	Lbke;	rA	BLACKSTONE
	f	Lbke;	rB	BLACKSTONE_SLAB
	f	Lbke;	rC	BLACKSTONE_STAIRS
	f	Lbke;	rD	GILDED_BLACKSTONE
	f	Lbke;	rE	POLISHED_BLACKSTONE
	f	Lbke;	rF	POLISHED_BLACKSTONE_SLAB
	f	Lbke;	rG	POLISHED_BLACKSTONE_STAIRS
	f	Lbke;	rH	CHISELED_POLISHED_BLACKSTONE
	f	Lbke;	rI	POLISHED_BLACKSTONE_BRICKS
	f	Lbke;	rJ	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lbke;	rK	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lbke;	rL	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lbke;	rM	RESPAWN_ANCHOR
	f	Lbke;	ra	SMOKER
	f	Lbke;	rb	BLAST_FURNACE
	f	Lbke;	rc	CARTOGRAPHY_TABLE
	f	Lbke;	rd	FLETCHING_TABLE
	f	Lbke;	re	GRINDSTONE
	f	Lbke;	rf	LECTERN
	f	Lbke;	rg	SMITHING_TABLE
	f	Lbke;	rh	STONECUTTER
	f	Lbke;	ri	BELL
	f	Lbke;	rj	LANTERN
	f	Lbke;	rk	SOUL_LANTERN
	f	Lbke;	rm	CAMPFIRE
	f	Lbke;	rn	SOUL_CAMPFIRE
	f	Lbke;	ro	SHROOMLIGHT
	f	Lbke;	rq	BEE_NEST
	f	Lbke;	rr	BEEHIVE
	f	Lbke;	rt	HONEY_BLOCK
	f	Lbke;	ru	HONEYCOMB_BLOCK
	f	Lbke;	rv	LODESTONE
	f	Lbke;	rw	NETHERITE_BLOCK
	f	Lbke;	rx	ANCIENT_DEBRIS
	f	Lbke;	ry	TARGET
	f	Lbke;	rz	CRYING_OBSIDIAN
	f	Lbke;	s	JUNGLE_PLANKS
	f	Lbke;	t	ACACIA_PLANKS
	f	Lbke;	u	DARK_OAK_PLANKS
	f	Lbke;	v	CRIMSON_PLANKS
	f	Lbke;	w	WARPED_PLANKS
	f	Lbke;	x	OAK_SAPLING
	f	Lbke;	y	SPRUCE_SAPLING
	f	Lbke;	z	BIRCH_SAPLING
	m	(Lbim;)Lbke;	a	register
		p	0	item	item
	m	(Lbvr;)Lbke;	a	register
		p	0	block	block
	m	(Ljava/lang/String;Lbke;)Lbke;	a	register
		p	0	id	id
		p	1	item	item
	m	(Luh;Lbke;)Lbke;	a	register
		p	0	id	id
		p	1	item	item
	m	(Lbvr;Lbiy;)Lbke;	a	register
		p	0	block	block
		p	1	group	group
	m	(Lbvr;Lbke;)Lbke;	a	register
		p	0	block	block
		p	1	item	item
c	bkl	net/minecraft/item/KnowledgeBookItem
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
c	bkm	net/minecraft/item/LeadItem
	m	(Lbec;Lbqb;Lfu;)Lang;	a	attachHeldMobsToBlock
c	bkn	net/minecraft/item/LingeringPotionItem
c	bko	net/minecraft/item/FilledMapItem
	m	(Lbki;Lbqb;IIIZZLug;)Lczv;	a	createMapState
		p	0	stack	stack
		p	1	world	world
		p	2	x	x
		p	3	z	z
		p	4	scale	scale
		p	5	showIcons	showIcons
		p	6	unlimitedTracking	unlimitedTracking
		p	7	dimension	dimension
	m	([Lbre;III)Z	a	hasPositiveDepth
		p	0	biomes	biomes
		p	1	scale	scale
		p	2	x	x
		p	3	z	z
	m	(I)Ljava/lang/String;	a	getMapName
		p	0	mapId	mapId
	m	(Lbqb;Laom;Lczv;)V	a	updateColors
		p	1	world	world
		p	2	entity	entity
		p	3	state	state
	m	(Lbqb;IIBZZ)Lbki;	a	createMap
		p	0	world	world
		p	1	x	x
		p	2	z	z
		p	3	scale	scale
		p	4	showIcons	showIcons
		p	5	unlimitedTracking	unlimitedTracking
	m	(Lbqb;Lbki;)Lbki;	a	copyMap
		p	0	world	world
		p	1	stack	stack
	m	(Lbki;Lbqb;)Lczv;	a	getMapState
		p	0	stack	stack
		p	1	world	world
	m	(Lbki;Lbqb;I)V	a	scale
		p	0	map	map
		p	1	world	world
		p	2	amount	amount
	m	(Lzd;Lbki;)V	a	fillExplorationMap
		p	1	map	map
	m	(Lbqb;Lcfj;Lfu;)Lcfj;	a	getFluidStateIfVisible
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
	m	(Lbki;Lbqb;)Lczv;	b	getOrCreateMapState
		p	0	map	map
		p	1	world	world
	m	(Lbki;)I	d	getMapId
		p	0	stack	stack
	m	(Lbki;)I	g	getMapColor
		p	0	stack	stack
c	bkp	net/minecraft/item/MilkBucketItem
c	bkq	net/minecraft/item/MinecartItem
	f	Lgw;	a	DISPENSER_BEHAVIOR
	f	Lbfr$a;	b	type
	m	(Lbfr$a;Lbke$a;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
c	bkq$1	net/minecraft/item/MinecartItem$1
	f	Lgv;	b	defaultBehavior
c	bkr	net/minecraft/item/NameTagItem
c	bks	net/minecraft/item/PickaxeItem
	f	Ljava/util/Set;	a	EFFECTIVE_BLOCKS
	m	(Lblo;IFLbke$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
c	bkt	net/minecraft/item/SkullItem
c	bku	net/minecraft/item/PotionItem
c	bkv	net/minecraft/item/RangedWeaponItem
	f	Ljava/util/function/Predicate;	a	BOW_PROJECTILES
	f	Ljava/util/function/Predicate;	b	CROSSBOW_HELD_PROJECTILES
	m	(Laoy;Ljava/util/function/Predicate;)Lbki;	a	getHeldProjectile
		p	0	entity	entity
		p	1	predicate	predicate
	m	()Ljava/util/function/Predicate;	b	getProjectiles
	m	()I	d	getRange
	m	(Lbki;)Z	d	method_18816
		p	0	stack	stack
	m	()Ljava/util/function/Predicate;	e	getHeldProjectiles
	m	(Lbki;)Z	g	method_18817
		p	0	stack	stack
c	bkw	net/minecraft/util/Rarity
	f	Li;	e	formatting
	m	(Ljava/lang/String;ILi;)V	<init>	<init>
		p	3	formatting	formatting
c	bkx	net/minecraft/item/MusicDiscItem
	f	Ljava/util/Map;	a	MUSIC_DISCS
	f	I	b	comparatorOutput
	f	Lack;	c	sound
	m	(ILack;Lbke$a;)V	<init>	<init>
		p	1	comparatorOutput	comparatorOutput
		p	2	sound	sound
		p	3	settings	settings
	m	(Lack;)Lbkx;	a	bySound
		p	0	sound	sound
	m	()I	f	getComparatorOutput
	m	()Lmx;	g	getDescription
	m	()Lack;	v	getSound
c	bky	net/minecraft/item/SaddleItem
c	bkz	net/minecraft/item/ScaffoldingItem
c	bl	net/minecraft/advancement/criterion/InventoryChangedCriterion
	f	Luh;	a	ID
	m	(Lze;Lbeb;Lbki;)V	a	trigger
		p	1	player	player
		p	2	inventory	inventory
		p	3	stack	stack
	m	(Lze;Lbeb;Lbki;III)V	a	trigger
		p	1	player	player
		p	2	inventory	inventory
		p	3	stack	stack
		p	4	full	full
		p	5	empty	empty
		p	6	occupied	occupied
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbl$a;	a	conditionsFromJson
c	bl$a	net/minecraft/advancement/criterion/InventoryChangedCriterion$Conditions
	f	Lbx$d;	a	occupied
	f	Lbx$d;	b	full
	f	Lbx$d;	c	empty
	f	[Lbo;	d	items
	m	(Lbe$b;Lbx$d;Lbx$d;Lbx$d;[Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	occupied	occupied
		p	3	full	full
		p	4	empty	empty
		p	5	items	items
	m	([Lbqa;)Lbl$a;	a	items
		p	0	items	items
	m	(Lbeb;Lbki;III)Z	a	matches
		p	1	inventory	inventory
		p	2	stack	stack
		p	3	full	full
		p	4	empty	empty
		p	5	occupied	occupied
	m	([Lbo;)Lbl$a;	a	items
		p	0	items	items
c	bla	net/minecraft/server/network/ServerItemCooldownManager
	f	Lze;	a	player
	m	(Lze;)V	<init>	<init>
		p	1	player	player
c	blb	net/minecraft/item/ShearsItem
	m	(Laoy;)V	a	method_20280
		p	0	e	e
c	blc	net/minecraft/item/ShieldItem
	m	(Lbki;)Lbje;	d	getColor
		p	0	stack	stack
c	bld	net/minecraft/item/ShovelItem
	f	Ljava/util/Map;	a	PATH_STATES
	f	Ljava/util/Set;	c	EFFECTIVE_BLOCKS
	m	(Lblo;FFLbke$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
	m	(Lblv;Lbec;)V	a	method_20281
		p	1	p	p
c	ble	net/minecraft/item/SignItem
	m	(Lbke$a;Lbvr;Lbvr;)V	<init>	<init>
		p	1	settings	settings
		p	2	standingBlock	standingBlock
		p	3	wallBlock	wallBlock
c	blf	net/minecraft/item/NetherStarItem
c	blg	net/minecraft/item/SnowballItem
c	blh	net/minecraft/item/SpawnEggItem
	f	Ljava/util/Map;	a	SPAWN_EGGS
	f	I	b	primaryColor
	f	I	c	secondaryColor
	f	Laoq;	d	type
	m	(Laoq;IILbke$a;)V	<init>	<init>
		p	1	type	type
		p	2	primaryColor	primaryColor
		p	3	secondaryColor	secondaryColor
		p	4	settings	settings
	m	(Lbec;Laoz;Laoq;Lbqb;Ldem;Lbki;)Ljava/util/Optional;	a	spawnBaby
		p	1	user	user
	m	(Lle;)Laoq;	a	getEntityType
		p	1	tag	tag
	m	(I)I	a	getColor
		p	1	num	num
	m	(Lle;Laoq;)Z	a	isOfSameEntityType
		p	1	tag	tag
		p	2	type	type
	m	(Laoq;)Lblh;	a	forEntity
		p	0	type	type
	m	()Ljava/lang/Iterable;	f	getAll
c	bli	net/minecraft/item/SpectralArrowItem
c	blj	net/minecraft/item/SplashPotionItem
c	blk	net/minecraft/item/WallStandingBlockItem
	f	Lbvr;	a	wallBlock
	m	(Lbvr;Lbvr;Lbke$a;)V	<init>	<init>
		p	1	standingBlock	standingBlock
		p	2	wallBlock	wallBlock
		p	3	settings	settings
c	bll	net/minecraft/item/SuspiciousStewItem
	m	(Lbki;Laoe;I)V	a	addEffectToStew
		p	0	stew	stew
		p	1	effect	effect
		p	2	duration	duration
c	blm	net/minecraft/item/SwordItem
	f	F	a	attackDamage
	m	(Lblo;IFLbke$a;)V	<init>	<init>
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
	m	(Laoy;)V	a	method_20282
		p	0	e	e
	m	(Laoy;)V	b	method_20283
		p	0	e	e
	m	()F	f	getAttackDamage
c	bln	net/minecraft/item/ThrowablePotionItem
c	blo	net/minecraft/item/ToolMaterial
	m	()I	a	getDurability
	m	()F	b	getMiningSpeedMultiplier
	m	()F	c	getAttackDamage
	m	()I	d	getMiningLevel
	m	()I	e	getEnchantability
	m	()Lbmr;	f	getRepairIngredient
c	blp	net/minecraft/item/ToolItem
	f	Lblo;	a	material
	m	(Lblo;Lbke$a;)V	<init>	<init>
		p	1	material	material
		p	2	settings	settings
	m	()Lblo;	g	getMaterial
c	blq	net/minecraft/item/ToolMaterials
	f	I	g	miningLevel
	f	I	h	itemDurability
	f	F	i	miningSpeed
	f	F	j	attackDamage
	f	I	k	enchantability
	f	Lady;	l	repairIngredient
	m	(Ljava/lang/String;IIIFFILjava/util/function/Supplier;)V	<init>	<init>
		p	3	miningLevel	miningLevel
		p	4	itemDurability	itemDurability
		p	5	miningSpeed	miningSpeed
		p	6	attackDamage	attackDamage
		p	7	enchantability	enchantability
		p	8	repairIngredient	repairIngredient
c	blr	net/minecraft/item/TippedArrowItem
c	bls	net/minecraft/client/item/TooltipContext
	m	()Z	a	isAdvanced
c	bls$a	net/minecraft/client/item/TooltipContext$Default
	f	Z	c	advanced
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3	advanced	advanced
c	blt	net/minecraft/item/TridentItem
	m	(Laoy;Lbec;)V	a	method_20285
		p	1	p	p
	m	(Laoy;)V	a	method_20284
		p	0	e	e
	m	(Laoy;)V	b	method_20286
		p	0	e	e
c	blu	net/minecraft/util/UseAction
c	blv	net/minecraft/item/ItemUsageContext
	f	Lbec;	b	player
	f	Lanf;	c	hand
	f	Ldeh;	d	hit
	f	Lbqb;	e	world
	f	Lbki;	f	stack
	m	(Lbec;Lanf;Ldeh;)V	<init>	<init>
		p	1	player	player
		p	2	hand	hand
		p	3	hit	hit
	m	(Lbqb;Lbec;Lanf;Lbki;Ldeh;)V	<init>	<init>
		p	1	world	world
		p	2	player	player
		p	3	hand	hand
		p	4	stack	stack
		p	5	hit	hit
	m	()Lfu;	a	getBlockPos
	m	()Lfz;	f	getPlayerFacing
	m	()Z	g	shouldCancelInteraction
	m	()F	h	getPlayerYaw
	m	()Lfz;	i	getSide
	m	()Ldem;	j	getHitPos
	m	()Z	k	hitsInsideBlock
	m	()Lbki;	l	getStack
	m	()Lbec;	m	getPlayer
	m	()Lanf;	n	getHand
	m	()Lbqb;	o	getWorld
c	blw	net/minecraft/item/Vanishable
	c	Represents a type of item that can have the {@code minecraft:vanishing_curse} enchantment.
c	blx	net/minecraft/item/LilyPadItem
c	bly	net/minecraft/item/Wearable
	c	Represents a type of item that is wearable in an armor equipment slot.\n\n<p>This type of item can be targeted by the {@code minecraft:binding_curse} enchantment.</p>
c	blz	net/minecraft/item/WritableBookItem
	m	(Lle;)Z	a	isValid
		p	0	tag	tag
c	bm	net/minecraft/advancement/criterion/ItemDurabilityChangedCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbm$a;	a	conditionsFromJson
	m	(Lze;Lbki;I)V	a	trigger
		p	1	player	player
		p	2	stack	stack
		p	3	damage	damage
c	bm$a	net/minecraft/advancement/criterion/ItemDurabilityChangedCriterion$Conditions
	f	Lbo;	a	item
	f	Lbx$d;	b	durability
	f	Lbx$d;	c	delta
	m	(Lbe$b;Lbo;Lbx$d;Lbx$d;)V	<init>	<init>
		p	1	player	player
		p	2	item	item
		p	3	durability	durability
		p	4	delta	delta
	m	(Lbki;I)Z	a	matches
		p	1	stack	stack
		p	2	damage	damage
	m	(Lbe$b;Lbo;Lbx$d;)Lbm$a;	a	create
c	bma	net/minecraft/item/WrittenBookItem
	m	(Lbki;Lcz;Lbec;)Z	a	resolve
		p	0	book	book
		p	1	commandSource	commandSource
		p	2	player	player
	m	(Lle;)Z	a	isValid
		p	0	tag	tag
	m	(Lbki;)I	d	getGeneration
		p	0	stack	stack
	m	(Lbki;)I	g	getPageCount
		p	0	stack	stack
c	bmb	net/minecraft/potion/Potion
	f	Ljava/lang/String;	a	baseName
	f	Lcom/google/common/collect/ImmutableList;	b	effects
	m	(Ljava/lang/String;[Laog;)V	<init>	<init>
		p	1	baseName	baseName
		p	2	effects	effects
	m	([Laog;)V	<init>	<init>
		p	1	effects	effects
	m	(Ljava/lang/String;)Lbmb;	a	byId
		p	0	id	id
	m	()Ljava/util/List;	a	getEffects
	m	()Z	b	hasInstantEffect
	m	(Ljava/lang/String;)Ljava/lang/String;	b	finishTranslationKey
		p	1	prefix	prefix
c	bmc	net/minecraft/recipe/BrewingRecipeRegistry
	f	Ljava/util/List;	a	POTION_RECIPES
	f	Ljava/util/List;	b	ITEM_RECIPES
	f	Ljava/util/List;	c	POTION_TYPES
	f	Ljava/util/function/Predicate;	d	POTION_TYPE_PREDICATE
	m	()V	a	registerDefaults
	m	(Lbke;)V	a	registerPotionType
		p	0	item	item
	m	(Lbke;Lbke;Lbke;)V	a	registerItemRecipe
		p	0	input	input
		p	1	ingredient	ingredient
		p	2	output	output
	m	(Lbmb;)Z	a	isBrewable
		p	0	potion	potion
	m	(Lbmb;Lbke;Lbmb;)V	a	registerPotionRecipe
		p	0	input	input
		p	2	output	output
	m	(Lbki;)Z	a	isValidIngredient
		p	0	stack	stack
	m	(Lbki;Lbki;)Z	a	hasRecipe
		p	0	input	input
		p	1	ingredient	ingredient
	m	(Lbki;Lbki;)Z	b	hasItemRecipe
		p	0	input	input
		p	1	ingredient	ingredient
	m	(Lbki;)Z	b	isItemRecipeIngredient
		p	0	stack	stack
	m	(Lbki;)Z	c	isPotionRecipeIngredient
		p	0	stack	stack
	m	(Lbki;Lbki;)Z	c	hasPotionRecipe
		p	0	input	input
		p	1	ingredient	ingredient
	m	(Lbki;Lbki;)Lbki;	d	craft
		p	0	input	input
		p	1	ingredient	ingredient
c	bmc$a	net/minecraft/recipe/BrewingRecipeRegistry$Recipe
	f	Ljava/lang/Object;	a	input
	f	Lbmr;	b	ingredient
	f	Ljava/lang/Object;	c	output
c	bmd	net/minecraft/potion/PotionUtil
	m	(Lbki;)Ljava/util/List;	a	getPotionEffects
		p	0	stack	stack
	m	(Lbki;Ljava/util/List;F)V	a	buildTooltip
		p	0	stack	stack
		p	1	list	list
	m	(Lbmb;Ljava/util/Collection;)Ljava/util/List;	a	getPotionEffects
		p	0	potion	potion
		p	1	custom	custom
	m	(Lbki;Ljava/util/Collection;)Lbki;	a	setCustomPotionEffects
		p	0	stack	stack
		p	1	effects	effects
	m	(Ljava/util/Collection;)I	a	getColor
		p	0	effects	effects
	m	(Lle;Ljava/util/List;)V	a	getCustomPotionEffects
		p	0	tag	tag
		p	1	list	list
	m	(Lbki;Lbmb;)Lbki;	a	setPotion
		p	0	stack	stack
		p	1	potion	potion
	m	(Lbmb;)I	a	getColor
		p	0	potion	potion
	m	(Lle;)Ljava/util/List;	a	getPotionEffects
		p	0	tag	tag
	m	(Lle;)Ljava/util/List;	b	getCustomPotionEffects
		p	0	tag	tag
	m	(Lbki;)Ljava/util/List;	b	getCustomPotionEffects
		p	0	stack	stack
	m	(Lle;)Lbmb;	c	getPotion
		p	0	compound	compound
	m	(Lbki;)I	c	getColor
		p	0	stack	stack
	m	(Lbki;)Lbmb;	d	getPotion
		p	0	stack	stack
c	bme	net/minecraft/potion/Potions
	m	(Ljava/lang/String;Lbmb;)Lbmb;	a	register
		p	0	name	name
		p	1	potion	potion
c	bmg	net/minecraft/recipe/AbstractCookingRecipe
	f	Lbmx;	a	type
	f	Luh;	b	id
	f	Ljava/lang/String;	c	group
	f	Lbmr;	d	input
	f	Lbki;	e	output
	f	F	f	experience
	f	I	g	cookTime
	m	(Lbmx;Luh;Ljava/lang/String;Lbmr;Lbki;FI)V	<init>	<init>
		p	1	type	type
		p	2	id	id
		p	3	group	group
		p	4	input	input
		p	5	output	output
		p	6	experience	experience
		p	7	cookTime	cookTime
	m	()F	b	getExperience
	m	()I	e	getCookTime
c	bmh	net/minecraft/recipe/ArmorDyeRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bmi	net/minecraft/recipe/BannerDuplicateRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
	m	(Lbgu;)Lgi;	b	getRemainingStacks
c	bmj	net/minecraft/recipe/BlastingRecipe
	m	(Luh;Ljava/lang/String;Lbmr;Lbki;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bmk	net/minecraft/recipe/BookCloningRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
	m	(Lbgu;)Lgi;	b	getRemainingStacks
c	bml	net/minecraft/recipe/CampfireCookingRecipe
	m	(Luh;Ljava/lang/String;Lbmr;Lbki;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bmm	net/minecraft/recipe/CraftingRecipe
c	bmn	net/minecraft/recipe/SpecialCraftingRecipe
	f	Luh;	a	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
c	bmo	net/minecraft/recipe/FireworkRocketRecipe
	f	Lbmr;	a	PAPER
	f	Lbmr;	b	DURATION_MODIFIER
	f	Lbmr;	c	FIREWORK_STAR
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bmp	net/minecraft/recipe/FireworkStarFadeRecipe
	f	Lbmr;	a	INPUT_STAR
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bmq	net/minecraft/recipe/FireworkStarRecipe
	f	Lbmr;	a	TYPE_MODIFIER
	f	Lbmr;	b	TRAIL_MODIFIER
	f	Lbmr;	c	FLICKER_MODIFIER
	f	Ljava/util/Map;	d	TYPE_MODIFIER_MAP
	f	Lbmr;	e	GUNPOWDER
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bmr	net/minecraft/recipe/Ingredient
	f	Lbmr;	a	EMPTY
	f	[Lbmr$c;	b	entries
	f	[Lbki;	c	matchingStacks
	f	Lit/unimi/dsi/fastutil/ints/IntList;	d	ids
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1	entries	entries
	m	(Lbki;)Z	a	test
	m	(Lcom/google/gson/JsonObject;)Lbmr$c;	a	entryFromJson
		p	0	json	json
	m	(Ladf;)Lbmr;	a	fromTag
		p	0	tag	tag
	m	([Lbqa;)Lbmr;	a	ofItems
		p	0	items	items
	m	(Lcom/google/gson/JsonElement;)Lbmr;	a	fromJson
		p	0	json	json
	m	(Lmg;)V	a	write
		p	1	buf	buf
	m	()[Lbki;	a	getMatchingStacksClient
	m	([Lbki;)Lbmr;	a	ofStacks
		p	0	stacks	stacks
	m	(Ljava/util/stream/Stream;)Lbmr;	b	ofEntries
		p	0	entries	entries
	m	(Lmg;)Lbmr;	b	fromPacket
		p	0	buf	buf
	m	(Lbki;)Lbmr$a;	b	method_8094
		p	0	stack	stack
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getIds
	m	(Lcom/google/gson/JsonElement;)Lbmr$c;	b	method_8090
		p	0	jsonElement	jsonElement
	m	()Lcom/google/gson/JsonElement;	c	toJson
	m	()Z	d	isEmpty
	m	()V	f	cacheMatchingStacks
	m	(Ljava/lang/Object;)Z	test	test
		p	1	stack	stack
c	bmr$a	net/minecraft/recipe/Ingredient$StackEntry
	f	Lbki;	a	stack
	m	(Lbki;)V	<init>	<init>
		p	1	stack	stack
c	bmr$b	net/minecraft/recipe/Ingredient$TagEntry
	f	Ladf;	a	tag
	m	(Ladf;)V	<init>	<init>
		p	1	tag	tag
c	bmr$c	net/minecraft/recipe/Ingredient$Entry
	m	()Ljava/util/Collection;	a	getStacks
	m	()Lcom/google/gson/JsonObject;	b	toJson
c	bms	net/minecraft/recipe/MapCloningRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bmt	net/minecraft/recipe/MapExtendingRecipe
	m	(Lczv;)Z	a	matches
		p	1	state	state
	m	(Lbgu;)Lbki;	craft	craft
	m	(Lbgu;Lbqb;)Z	matches	matches
c	bmu	net/minecraft/recipe/Recipe
	m	()Lgi;	a	getPreviewInputs
	m	(II)Z	a	fits
		p	1	width	width
		p	2	height	height
	m	(Lamz;Lbqb;)Z	a	matches
		p	1	inv	inv
		p	2	world	world
	m	(Lamz;)Lbki;	a	craft
		p	1	inv	inv
	m	()Z	ah_	isIgnoredInRecipeBook
	m	()Lbmw;	ai_	getSerializer
	m	(Lamz;)Lgi;	b	getRemainingStacks
	m	()Lbki;	c	getOutput
	m	()Ljava/lang/String;	d	getGroup
	m	()Luh;	f	getId
	m	()Lbmx;	g	getType
	m	()Lbki;	h	getRecipeKindIcon
c	bmv	net/minecraft/recipe/RecipeManager
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	recipes
	f	Z	d	errored
	m	(Ljava/util/Map;Labc;Lami;)V	a	apply
	m	(Luh;)Ljava/util/Optional;	a	get
		p	1	id	id
	m	(Luh;Lcom/google/gson/JsonObject;)Lbmu;	a	deserialize
		p	0	id	id
		p	1	json	json
	m	(Ljava/lang/Iterable;)V	a	setRecipes
		p	1	recipes	recipes
	m	(Lbmx;Lamz;Lbqb;)Ljava/util/Optional;	a	getFirstMatch
		p	1	type	type
		p	2	inventory	inventory
		p	3	world	world
	m	(Lbmx;Lamz;Lbqb;)Ljava/util/List;	b	getAllMatches
		p	1	type	type
		p	2	inventory	inventory
		p	3	world	world
	m	()Ljava/util/Collection;	b	values
	m	(Lbmx;)Ljava/util/Map;	b	getAllOfType
		p	1	type	type
	m	(Lbmx;Lamz;Lbqb;)Lgi;	c	getRemainingStacks
	m	()Ljava/util/stream/Stream;	d	keys
c	bmw	net/minecraft/recipe/RecipeSerializer
	f	Lbmw;	a	SHAPED
	f	Lbmw;	b	SHAPELESS
	f	Lbne;	c	ARMOR_DYE
	f	Lbne;	d	BOOK_CLONING
	f	Lbne;	e	MAP_CLONING
	f	Lbne;	f	MAP_EXTENDING
	f	Lbne;	g	FIREWORK_ROCKET
	f	Lbne;	h	FIREWORK_STAR
	f	Lbne;	i	FIREWORK_STAR_FADE
	f	Lbne;	j	TIPPED_ARROW
	f	Lbne;	k	BANNER_DUPLICATE
	f	Lbne;	l	SHIELD_DECORATION
	f	Lbne;	m	SHULKER_BOX
	f	Lbne;	n	SUSPICIOUS_STEW
	f	Lbne;	o	REPAIR_ITEM
	f	Lbnd;	p	SMELTING
	f	Lbnd;	q	BLASTING
	f	Lbnd;	r	SMOKING
	f	Lbnd;	s	CAMPFIRE_COOKING
	m	(Luh;Lmg;)Lbmu;	a	read
		p	1	id	id
		p	2	buf	buf
	m	(Lmg;Lbmu;)V	a	write
		p	1	buf	buf
		p	2	recipe	recipe
	m	(Ljava/lang/String;Lbmw;)Lbmw;	a	register
		p	0	id	id
		p	1	serializer	serializer
	m	(Luh;Lcom/google/gson/JsonObject;)Lbmu;	a	read
		p	1	id	id
		p	2	json	json
c	bmx	net/minecraft/recipe/RecipeType
	f	Lbmx;	a	CRAFTING
	f	Lbmx;	b	SMELTING
	f	Lbmx;	c	BLASTING
	f	Lbmx;	d	SMOKING
	f	Lbmx;	e	CAMPFIRE_COOKING
	m	(Lbmu;Lbqb;Lamz;)Ljava/util/Optional;	a	get
		p	1	recipe	recipe
		p	2	world	world
		p	3	inventory	inventory
	m	(Ljava/lang/String;)Lbmx;	a	register
c	bmy	net/minecraft/recipe/RepairItemRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bmz	net/minecraft/recipe/ShapedRecipe
	f	I	a	width
	f	I	b	height
	f	Lgi;	c	inputs
	f	Lbki;	d	output
	f	Luh;	e	id
	f	Ljava/lang/String;	f	group
	m	(Luh;Ljava/lang/String;IILgi;Lbki;)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	width	width
		p	4	height	height
		p	5	ingredients	ingredients
		p	6	output	output
	m	(Lcom/google/gson/JsonObject;)Lbki;	a	getItemStack
		p	0	json	json
	m	([Ljava/lang/String;)[Ljava/lang/String;	a	combinePattern
		p	0	lines	lines
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Ljava/lang/String;)I	a	findNextIngredient
		p	0	pattern	pattern
	m	(Lbgu;IIZ)Z	a	matchesSmall
		p	1	inv	inv
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
	m	(Lbgu;)Lbki;	a	craft
	m	(Ljava/lang/String;)I	b	findNextIngredientReverse
		p	0	pattern	pattern
	m	(Lcom/google/gson/JsonArray;)[Ljava/lang/String;	b	getPattern
		p	0	json	json
	m	([Ljava/lang/String;Ljava/util/Map;II)Lgi;	b	getIngredients
		p	0	pattern	pattern
		p	1	key	key
		p	2	width	width
		p	3	height	height
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	c	getComponents
		p	0	json	json
	m	()I	i	getWidth
	m	()I	j	getHeight
c	bmz$a	net/minecraft/recipe/ShapedRecipe$Serializer
	m	(Lmg;Lbmz;)V	a	write
	m	(Luh;Lcom/google/gson/JsonObject;)Lbmz;	b	read
	m	(Luh;Lmg;)Lbmz;	b	read
c	bn	net/minecraft/advancement/criterion/ThrownItemPickedUpByEntityCriterion
	f	Luh;	a	ID
	m	(Lze;Lbki;Laom;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
		p	3	entity	entity
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbn$a;	a	conditionsFromJson
c	bn$a	net/minecraft/advancement/criterion/ThrownItemPickedUpByEntityCriterion$Conditions
	f	Lbo;	a	item
	f	Lbe$b;	b	entity
	m	(Lbe$b;Lbo;Lbe$b;)V	<init>	<init>
		p	2	item	item
		p	3	entity	entity
	m	(Lbe$b;Lbo$a;Lbe$b;)Lbn$a;	a	create
	m	(Lze;Lbki;Ldat;)Z	a	test
		p	1	player	player
		p	2	stack	stack
c	bna	net/minecraft/recipe/ShapelessRecipe
	f	Luh;	a	id
	f	Ljava/lang/String;	b	group
	f	Lbki;	c	output
	f	Lgi;	d	input
	m	(Luh;Ljava/lang/String;Lbki;Lgi;)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	output	output
		p	4	input	input
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bna$a	net/minecraft/recipe/ShapelessRecipe$Serializer
	m	(Lmg;Lbna;)V	a	write
	m	(Lcom/google/gson/JsonArray;)Lgi;	a	getIngredients
		p	0	json	json
	m	(Luh;Lcom/google/gson/JsonObject;)Lbna;	b	read
	m	(Luh;Lmg;)Lbna;	b	read
c	bnb	net/minecraft/recipe/ShieldDecorationRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bnc	net/minecraft/recipe/ShulkerBoxColoringRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bnd	net/minecraft/recipe/CookingRecipeSerializer
	f	I	v	cookingTime
	f	Lbnd$a;	w	recipeFactory
	m	(Lbnd$a;I)V	<init>	<init>
		p	1	recipeFactory	recipeFactory
		p	2	cookingTime	cookingTime
	m	(Lmg;Lbmg;)V	a	write
	m	(Luh;Lmg;)Lbmg;	b	read
	m	(Luh;Lcom/google/gson/JsonObject;)Lbmg;	b	read
c	bnd$a	net/minecraft/recipe/CookingRecipeSerializer$RecipeFactory
	m	(Luh;Ljava/lang/String;Lbmr;Lbki;FI)Lbmg;	create	create
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bne	net/minecraft/recipe/SpecialRecipeSerializer
	f	Ljava/util/function/Function;	v	id
c	bnf	net/minecraft/recipe/CuttingRecipe
	f	Lbmr;	a	input
	f	Lbki;	b	output
	f	Luh;	c	id
	f	Ljava/lang/String;	d	group
	f	Lbmx;	e	type
	f	Lbmw;	f	serializer
	m	(Lbmx;Lbmw;Luh;Ljava/lang/String;Lbmr;Lbki;)V	<init>	<init>
		p	1	type	type
		p	2	serializer	serializer
		p	3	id	id
		p	4	group	group
		p	5	input	input
		p	6	output	output
c	bnf$a	net/minecraft/recipe/CuttingRecipe$Serializer
	f	Lbnf$a$a;	v	recipeFactory
	m	(Lmg;Lbnf;)V	a	write
	m	(Luh;Lmg;)Lbnf;	b	read
	m	(Luh;Lcom/google/gson/JsonObject;)Lbnf;	b	read
c	bnf$a$a	net/minecraft/recipe/CuttingRecipe$Serializer$RecipeFactory
c	bng	net/minecraft/recipe/SmeltingRecipe
	m	(Luh;Ljava/lang/String;Lbmr;Lbki;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bnh	net/minecraft/recipe/SmokingRecipe
	m	(Luh;Ljava/lang/String;Lbmr;Lbki;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bni	net/minecraft/recipe/StonecuttingRecipe
	m	(Luh;Ljava/lang/String;Lbmr;Lbki;)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
c	bnj	net/minecraft/recipe/SuspiciousStewRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bnk	net/minecraft/recipe/TippedArrowRecipe
	m	(Lbgu;Lbqb;)Z	a	matches
	m	(Lbgu;)Lbki;	a	craft
c	bnl	net/minecraft/recipe/SmithingRecipe
	f	Lbmr;	a	base
	f	Lbmr;	b	addition
	f	Lbki;	c	result
	f	Luh;	d	id
	m	(Luh;Lbmr;Lbmr;Lbki;)V	<init>	<init>
		p	1	id	id
		p	2	base	base
		p	3	addition	addition
		p	4	result	result
c	bnl$a	net/minecraft/recipe/SmithingRecipe$Serializer
	m	(Lmg;Lbnl;)V	a	write
	m	(Luh;Lmg;)Lbnl;	b	read
	m	(Luh;Lcom/google/gson/JsonObject;)Lbnl;	b	read
c	bnn	net/minecraft/enchantment/PowerEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bno	net/minecraft/enchantment/FlameEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bnp	net/minecraft/enchantment/InfinityEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bnq	net/minecraft/enchantment/PunchEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bnr	net/minecraft/enchantment/PiercingEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bns	net/minecraft/enchantment/BindingCurseEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bnt	net/minecraft/enchantment/DamageEnchantment
	f	I	a	typeIndex
	f	[Ljava/lang/String;	d	typeNames
	m	(Lbnw$a;I[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	typeIndex	typeIndex
		p	3	slots	slots
c	bnu	net/minecraft/enchantment/UnbreakingEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(Lbki;ILjava/util/Random;)Z	a	shouldPreventDamage
		p	0	item	item
		p	1	level	level
		p	2	random	random
c	bnv	net/minecraft/enchantment/EfficiencyEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bnw	net/minecraft/enchantment/Enchantment
	f	[Laor;	a	slotTypes
	f	Lbnx;	b	type
	f	Ljava/lang/String;	c	translationKey
	f	Lbnw$a;	d	rarity
	m	(Lbnw$a;Lbnx;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	type	type
		p	3	slotTypes	slotTypes
	m	(Laoy;)Ljava/util/Map;	a	getEquipment
		p	1	entity	entity
	m	(Lbki;)Z	a	isAcceptableItem
		p	1	stack	stack
	m	(I)I	a	getMinPower
		p	1	level	level
	m	(Laoy;Laom;I)V	a	onTargetDamaged
		p	1	user	user
		p	2	target	target
		p	3	level	level
	m	(ILapc;)F	a	getAttackDamage
		p	1	level	level
		p	2	group	group
	m	(Lbnw;)Z	a	canAccept
		c	Returns whether this enchantment can exist on an item stack with the\n{@code other} enchantment.
		p	1	other	other
	m	(ILanw;)I	a	getProtectionAmount
		p	1	level	level
		p	2	source	source
	m	()I	a	getMaxLevel
	m	()Z	b	isTreasure
	m	(I)I	b	getMaxPower
		p	1	level	level
	m	(Laoy;Laom;I)V	b	onUserDamaged
		p	1	user	user
		p	2	attacker	attacker
		p	3	level	level
	m	(Lbnw;)Z	b	canCombine
		c	Returns whether this enchantment can exist on an item stack with the\n{@code other} enchantment and the {@code other} enchantment can exist\nwith this enchantment.
		p	1	other	other
	m	()Z	c	isCursed
	m	(I)Lbnw;	c	byRawId
		p	0	id	id
	m	(I)Lmr;	d	getName
		p	1	level	level
	m	()Lbnw$a;	d	getRarity
	m	()I	e	getMinLevel
	m	()Ljava/lang/String;	f	getOrCreateTranslationKey
	m	()Ljava/lang/String;	g	getTranslationKey
	m	()Z	h	isAvailableForEnchantedBookOffer
		c	Returns whether this enchantment will appear in the enchanted book trade\noffers of librarian villagers.
	m	()Z	i	isAvailableForRandomSelection
		c	Returns whether this enchantment will appear in the enchanting table or\nloots with random enchant function.
c	bnw$a	net/minecraft/enchantment/Enchantment$Rarity
	c	The rarity is an attribute of an enchantment.\n\n<p>It affects the chance of getting an enchantment from enchanting or\nloots as well as the combination cost in anvil.
	f	I	e	weight
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	weight	weight
	m	()I	a	getWeight
		c	Returns the weight of an enchantment in weighted pickers.
c	bnx	net/minecraft/enchantment/EnchantmentTarget
	m	(Lbke;)Z	a	isAcceptableItem
		p	1	item	item
c	bny	net/minecraft/enchantment/EnchantmentHelper
	m	(Ljava/util/Collection;Lbnw;)Z	a	isCompatible
		c	Returns whether the {@code candidate} enchantment is compatible with the\n{@code existing} enchantments.
		p	0	existing	existing
		p	1	candidate	candidate
	m	(Lbny$a;Ljava/lang/Iterable;)V	a	forEachEnchantment
		p	0	action	action
		p	1	stacks	stacks
	m	(Lbki;)Ljava/util/Map;	a	get
		c	Gets the enchantments on an item stack.\n\n<p>For enchanted books, it retrieves from the item stack's stored than\nregular enchantments.\n\n@see net.minecraft.item.ItemStack#getEnchantments()\n@see net.minecraft.item.EnchantedBookItem#getEnchantmentTag(net.minecraft.item.ItemStack)
		p	0	stack	stack
	m	(Ljava/util/Map;Lbki;)V	a	set
		c	Sets the enchantments on an item stack.\n\n<p>For enchanted books, it sets the enchantments to the item stack's\nstored enchantments than regular enchantments.\n\n@see net.minecraft.item.ItemStack#getEnchantments()\n@see net.minecraft.item.EnchantedBookItem#getEnchantmentTag(net.minecraft.item.ItemStack)
		p	0	enchantments	enchantments
		p	1	stack	stack
	m	(Laoy;)F	a	getSweepingMultiplier
		p	0	entity	entity
	m	(Ljava/util/List;Lbnz;)V	a	removeConflicts
		c	Remove entries conflicting with the picked entry from the possible\nentries.
		p	0	possibleEntries	possibleEntries
			c	the possible entries
		p	1	pickedEntry	pickedEntry
			c	the picked entry
	m	(Lbnw;Laoy;Ljava/util/function/Predicate;)Ljava/util/Map$Entry;	a	chooseEquipmentWith
		c	Returns a pair of an equipment slot and the item stack in the supplied\nentity's slot, indicating the item stack has the enchantment supplied\nand fulfills the extra condition.\n\n<p>If multiple equipment slots' item stacks are valid, a random pair is\nreturned.
		p	0	enchantment	enchantment
			c	the enchantment the equipped item stack must have
		p	1	entity	entity
			c	the entity to choose equipments from
		p	2	condition	condition
			c	extra conditions for the item stack to pass for selection
	m	(Ljava/util/Random;Lbki;IZ)Lbki;	a	enchant
		c	Enchants the {@code target} item stack and returns it.
		p	0	random	random
			c	the seed
		p	1	target	target
			c	the item stack to enchant
		p	2	level	level
			c	the experience level
		p	3	treasureAllowed	treasureAllowed
			c	whether treasure enchantments may appear
	m	(Lbki;Lapc;)F	a	getAttackDamage
		p	0	stack	stack
		p	1	group	group
	m	(ILbki;Z)Ljava/util/List;	a	getPossibleEntries
		c	Gets all the possible entries for enchanting the {@code stack} at the\ngiven {@code power}.
		p	0	power	power
		p	1	stack	stack
		p	2	treasureAllowed	treasureAllowed
	m	(Lbnw;Lbki;)I	a	getLevel
		c	Gets the level of an enchantment on an item stack.
		p	0	enchantment	enchantment
		p	1	stack	stack
	m	(Ljava/util/Map;Lle;Lbnw;)V	a	method_17884
		p	2	enchantment	enchantment
	m	(Llk;)Ljava/util/Map;	a	fromTag
		c	Loads enchantments from an NBT list.
		p	0	tag	tag
	m	(Lbnw;Laoy;)I	a	getEquipmentLevel
		c	Returns the highest level of the passed enchantment in the enchantment's\napplicable equipment slots' item stacks.
		p	0	enchantment	enchantment
			c	the enchantment
		p	1	entity	entity
			c	the entity whose equipment slots are checked
	m	(Laoy;Laom;)V	a	onUserDamaged
		p	0	user	user
		p	1	attacker	attacker
	m	(Ljava/lang/Iterable;Lanw;)I	a	getProtectionAmount
		p	0	equipment	equipment
		p	1	source	source
	m	(Ljava/util/Random;IILbki;)I	a	calculateRequiredExperienceLevel
		c	Returns the required experience level for an enchanting option in the\nenchanting table's screen, or the enchantment screen.
		p	0	random	random
			c	the random, which guarantees consistent results with the same seed
		p	1	slotIndex	slotIndex
			c	the index of the enchanting option
		p	2	bookshelfCount	bookshelfCount
			c	the number of bookshelves
		p	3	stack	stack
			c	the item stack to enchant
	m	(Lbny$a;Lbki;)V	a	forEachEnchantment
		p	0	action	action
		p	1	stack	stack
	m	(Laoy;)I	b	getKnockback
		p	0	entity	entity
	m	(Lbki;)I	b	getLuckOfTheSea
		p	0	stack	stack
	m	(Lbnw;Laoy;)Ljava/util/Map$Entry;	b	chooseEquipmentWith
		c	Returns a pair of an equipment slot and the item stack in the supplied\nentity's slot, indicating the item stack has the enchantment supplied.\n\n<p>If multiple equipment slots' item stacks are valid, a random pair is\nreturned.
		p	0	enchantment	enchantment
			c	the enchantment the equipped item stack must have
		p	1	entity	entity
			c	the entity to choose equipments from
	m	(Ljava/util/Random;Lbki;IZ)Ljava/util/List;	b	generateEnchantments
		c	Generate the enchantments for enchanting the {@code stack}.
		p	0	random	random
		p	1	stack	stack
		p	2	level	level
		p	3	treasureAllowed	treasureAllowed
	m	(Laoy;Laom;)V	b	onTargetDamaged
		p	0	user	user
		p	1	target	target
	m	(Lbki;)I	c	getLure
		p	0	stack	stack
	m	(Laoy;)I	c	getFireAspect
		p	0	entity	entity
	m	(Laoy;)I	d	getRespiration
		p	0	entity	entity
	m	(Lbki;)Z	d	hasBindingCurse
		p	0	stack	stack
	m	(Lbki;)Z	e	hasVanishingCurse
		p	0	stack	stack
	m	(Laoy;)I	e	getDepthStrider
		p	0	entity	entity
	m	(Laoy;)I	f	getEfficiency
		p	0	entity	entity
	m	(Lbki;)I	f	getLoyalty
		p	0	stack	stack
	m	(Lbki;)I	g	getRiptide
		p	0	stack	stack
	m	(Laoy;)I	g	getLooting
		p	0	entity	entity
	m	(Lbki;)Z	h	hasChanneling
		p	0	stack	stack
	m	(Laoy;)Z	h	hasAquaAffinity
		p	0	entity	entity
	m	(Lbki;)Z	i	method_24366
		p	0	stack	stack
	m	(Laoy;)Z	i	hasFrostWalker
		p	0	entity	entity
	m	(Laoy;)Z	j	hasSoulSpeed
		p	0	entity	entity
c	bny$a	net/minecraft/enchantment/EnchantmentHelper$Consumer
	m	(Lbnw;I)V	accept	accept
		p	1	enchantment	enchantment
		p	2	level	level
c	bnz	net/minecraft/enchantment/EnchantmentLevelEntry
	c	Represents an entry in an enchantments array, i.e. a pair between\nenchantment and level. This is also a weighted entry and is available\nfor the weighted picker to pick from a list.\n\n<p>This is usually used where multiple enchantment to level mappings can\nexist, such as in enchanting logic. In other cases, vanilla prefers\n{@code Map<Enchantment, Integer>} over {@code List<EnchantmentLevelEntry>}.\n\n<p>This class is immutable. It does not override hashCode or equals.
	f	Lbnw;	b	enchantment
	f	I	c	level
	m	(Lbnw;I)V	<init>	<init>
		p	1	enchantment	enchantment
		p	2	level	level
c	bo	net/minecraft/predicate/item/ItemPredicate
	f	Lbo;	a	ANY
	f	Ladf;	b	tag
	f	Lbke;	c	item
	f	Lbx$d;	d	count
	f	Lbx$d;	e	durability
	f	[Laz;	f	enchantments
	f	[Laz;	g	storedEnchantments
	f	Lbmb;	h	potion
	f	Lbz;	i	nbt
	m	(Ladf;Lbke;Lbx$d;Lbx$d;[Laz;[Laz;Lbmb;Lbz;)V	<init>	<init>
		p	1	tag	tag
		p	2	item	item
		p	3	count	count
		p	4	durability	durability
		p	5	enchantments	enchantments
		p	6	storedEnchantments	storedEnchantments
		p	7	potion	potion
		p	8	nbt	nbt
	m	(Lbki;)Z	a	test
		p	1	stack	stack
	m	(Lcom/google/gson/JsonElement;)Lbo;	a	fromJson
		p	0	el	el
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonElement;)[Lbo;	b	deserializeAll
		p	0	el	el
c	bo$a	net/minecraft/predicate/item/ItemPredicate$Builder
	f	Ljava/util/List;	a	enchantments
	f	Ljava/util/List;	b	storedEnchantments
	f	Lbke;	c	item
	f	Ladf;	d	tag
	f	Lbx$d;	e	count
	f	Lbx$d;	f	durability
	f	Lbmb;	g	potion
	f	Lbz;	h	nbt
	m	(Lle;)Lbo$a;	a	nbt
		p	1	nbt	nbt
	m	(Ladf;)Lbo$a;	a	tag
		p	1	tag	tag
	m	(Laz;)Lbo$a;	a	enchantment
		p	1	enchantment	enchantment
	m	(Lbqa;)Lbo$a;	a	item
		p	1	item	item
	m	()Lbo$a;	a	create
	m	()Lbo;	b	build
c	boa	net/minecraft/enchantment/Enchantments
	f	[Laor;	M	ALL_ARMOR
	m	(Ljava/lang/String;Lbnw;)Lbnw;	a	register
		p	0	name	name
		p	1	enchantment	enchantment
c	bob	net/minecraft/enchantment/FireAspectEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	boc	net/minecraft/enchantment/LureEnchantment
c	bod	net/minecraft/enchantment/FrostWalkerEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(Laoy;Lbqb;Lfu;I)V	a	freezeWater
		p	0	entity	entity
		p	1	world	world
		p	2	blockPos	blockPos
		p	3	level	level
c	boe	net/minecraft/enchantment/KnockbackEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slot	slot
c	bof	net/minecraft/enchantment/LuckEnchantment
c	bog	net/minecraft/enchantment/MendingEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	boh	net/minecraft/enchantment/MultishotEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	boi	net/minecraft/enchantment/RespirationEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	boj	net/minecraft/enchantment/ProtectionEnchantment
	f	Lboj$a;	a	protectionType
	m	(Lbnw$a;Lboj$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
	m	(Laoy;D)D	a	transformExplosionKnockback
		p	0	entity	entity
		p	1	velocity	velocity
	m	(Laoy;I)I	a	transformFireDuration
		p	0	entity	entity
		p	1	duration	duration
c	boj$a	net/minecraft/enchantment/ProtectionEnchantment$Type
	f	Ljava/lang/String;	f	name
	f	I	g	basePower
	f	I	h	powerPerLevel
	m	(Ljava/lang/String;ILjava/lang/String;II)V	<init>	<init>
		p	3	name	name
		p	4	basePower	basePower
		p	5	powerPerLevel	powerPerLevel
	m	()I	b	getBasePower
	m	()I	c	getPowerPerLevel
c	bok	net/minecraft/enchantment/QuickChargeEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slot	slot
c	bol	net/minecraft/enchantment/SoulSpeedEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bom	net/minecraft/enchantment/SweepingEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(I)F	e	getMultiplier
c	bon	net/minecraft/enchantment/ThornsEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(ILjava/util/Random;)Z	a	shouldDamageAttacker
		p	0	level	level
		p	1	random	random
	m	(ILjava/util/Random;)I	b	getDamageAmount
		p	0	level	level
		p	1	random	random
c	boo	net/minecraft/enchantment/ChannelingEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bop	net/minecraft/enchantment/ImpalingEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	boq	net/minecraft/enchantment/LoyaltyEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bor	net/minecraft/enchantment/RiptideEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bos	net/minecraft/enchantment/SilkTouchEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bot	net/minecraft/enchantment/VanishingCurseEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bou	net/minecraft/enchantment/DepthStriderEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bov	net/minecraft/enchantment/AquaAffinityEnchantment
	m	(Lbnw$a;[Laor;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	boy	net/minecraft/village/Trader
	m	(Lboz;)V	a	trade
		p	1	offer	offer
	m	(Lbec;Lmr;I)V	a	sendOffers
	m	(Lbpa;)V	a	setOffersFromServer
		p	1	offers	offers
	m	()I	eM	getExperience
	m	()Lbec;	eN	getCurrentCustomer
	m	()Lbpa;	eP	getOffers
	m	()Z	eQ	isLeveledTrader
	m	()Lack;	eR	getYesSound
	m	()Lbqb;	eV	getTraderWorld
	m	(Lbec;)V	f	setCurrentCustomer
		p	1	customer	customer
	m	()Z	fa	canRefreshTrades
	m	(Lbki;)V	k	onSellingItem
		p	1	stack	stack
	m	(I)V	t	setExperienceFromServer
		p	1	experience	experience
c	boz	net/minecraft/village/TradeOffer
	f	Lbki;	a	firstBuyItem
	f	Lbki;	b	secondBuyItem
	f	Lbki;	c	sellItem
	f	I	d	uses
	f	I	e	maxUses
	f	Z	f	rewardingPlayerExperience
	f	I	g	specialPrice
	f	I	h	demandBonus
	f	F	i	priceMultiplier
	f	I	j	traderExperience
	m	(Lbki;Lbki;IIF)V	<init>	<init>
		p	1	buyItem	buyItem
		p	2	sellItem	sellItem
		p	3	maxUses	maxUses
		p	4	rewardedExp	rewardedExp
		p	5	priceMultiplier	priceMultiplier
	m	(Lbki;Lbki;Lbki;IIIF)V	<init>	<init>
		p	1	firstBuyItem	firstBuyItem
		p	2	secondBuyItem	secondBuyItem
		p	3	sellItem	sellItem
		p	4	uses	uses
		p	5	maxUses	maxUses
		p	6	rewardedExp	rewardedExp
		p	7	priceMultiplier	priceMultiplier
	m	(Lbki;Lbki;Lbki;IIF)V	<init>	<init>
		p	1	firstBuyItem	firstBuyItem
		p	2	secondBuyItem	secondBuyItem
		p	3	sellItem	sellItem
		p	4	maxUses	maxUses
		p	5	rewardedExp	rewardedExp
		p	6	priceMultiplier	priceMultiplier
	m	(Lbki;Lbki;)Z	a	matchesBuyItems
		p	1	first	first
		p	2	second	second
	m	()Lbki;	a	getOriginalFirstBuyItem
	m	(I)V	a	increaseSpecialPrice
	m	(Lbki;Lbki;)Z	b	depleteBuyItems
	m	()Lbki;	b	getAdjustedFirstBuyItem
	m	(I)V	b	setSpecialPrice
	m	(Lbki;Lbki;)Z	c	acceptsBuy
		p	1	given	given
		p	2	sample	sample
	m	()Lbki;	c	getSecondBuyItem
	m	()Lbki;	d	getMutableSellItem
	m	()V	e	updatePriceOnDemand
	m	()Lbki;	f	getSellItem
	m	()I	g	getUses
	m	()V	h	resetUses
	m	()I	i	getMaxUses
	m	()V	j	use
	m	()I	k	getDemandBonus
	m	()V	l	clearSpecialPrice
	m	()I	m	getSpecialPrice
	m	()F	n	getPriceMultiplier
	m	()I	o	getTraderExperience
	m	()Z	p	isDisabled
	m	()V	q	clearUses
	m	()Z	s	shouldRewardPlayerExperience
	m	()Lle;	t	toTag
c	bp	net/minecraft/advancement/criterion/ItemUsedOnBlockCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbp$a;	a	conditionsFromJson
	m	(Lze;Lfu;Lbki;)V	a	test
		p	1	player	player
		p	2	pos	pos
		p	3	stack	stack
	m	(Lcfj;Lze;Lfu;Lbki;Lbp$a;)Z	a	method_23888
		p	4	conditions	conditions
c	bp$a	net/minecraft/advancement/criterion/ItemUsedOnBlockCriterion$Conditions
	f	Lbu;	a	location
	f	Lbo;	b	item
	m	(Lbe$b;Lbu;Lbo;)V	<init>	<init>
		p	2	location	location
		p	3	item	item
	m	(Lbu$a;Lbo$a;)Lbp$a;	a	create
	m	(Lcfj;Lzd;Lfu;Lbki;)Z	a	test
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	stack	stack
c	bpa	net/minecraft/village/TraderOfferList
	m	(Lbki;Lbki;I)Lboz;	a	getValidRecipe
		p	1	firstBuyItem	firstBuyItem
		p	2	secondBuyItem	secondBuyItem
		p	3	index	index
	m	()Lle;	a	toTag
	m	(Lmg;)V	a	toPacket
		p	1	buffer	buffer
	m	(Lmg;)Lbpa;	b	fromPacket
		p	0	byteBuf	byteBuf
c	bpc	net/minecraft/world/CommandBlockExecutor
	f	Ljava/text/SimpleDateFormat;	b	DATE_FORMAT
	f	Lmr;	c	DEFAULT_NAME
	f	J	d	lastExecution
	f	Z	e	updateLastExecution
	f	I	f	successCount
	f	Z	g	trackOutput
	f	Lmr;	h	lastOutput
	f	Ljava/lang/String;	i	command
	f	Lmr;	j	customName
	m	(Lbec;)Lang;	a	interact
		p	1	player	player
	m	(Ljava/lang/String;)V	a	setCommand
		p	1	command	command
	m	(Lmr;)V	a	setCustomName
		p	1	name	name
	m	(Lbqb;)Z	a	execute
		p	1	world	world
	m	(I)V	a	setSuccessCount
		p	1	successCount	successCount
	m	(Z)V	a	shouldTrackOutput
		p	1	trackOutput	trackOutput
	m	(Lle;)Lle;	a	serialize
		p	1	tag	tag
	m	(Lle;)V	b	deserialize
		p	1	tag	tag
	m	(Lmr;)V	b	setLastOutput
		p	1	lastOutput	lastOutput
	m	()Lzd;	d	getWorld
	m	()V	e	markDirty
	m	()Ldem;	f	getPos
	m	()Lcz;	h	getSource
	m	()I	i	getSuccessCount
	m	()Lmr;	j	getLastOutput
	m	()Ljava/lang/String;	k	getCommand
	m	()Lmr;	l	getCustomName
	m	()Z	m	isTrackingOutput
c	bpd	net/minecraft/world/MobSpawnerLogic
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	spawnDelay
	f	Ljava/util/List;	c	spawnPotentials
	f	Lbqp;	d	spawnEntry
	f	I	g	minSpawnDelay
	f	I	h	maxSpawnDelay
	f	I	i	spawnCount
	f	Laom;	j	renderedEntity
	f	I	k	maxNearbyEntities
	f	I	l	requiredPlayerRange
	f	I	m	spawnRange
	m	(Laom;)V	a	spawnEntity
	m	(Laoq;)V	a	setEntityId
		p	1	type	type
	m	(I)V	a	sendStatus
		p	1	status	status
	m	(Lle;)V	a	fromTag
		p	1	tag	tag
	m	()Lbqb;	a	getWorld
	m	(Lbqp;)V	a	setSpawnEntry
		p	1	spawnEntry	spawnEntry
	m	()Lfu;	b	getPos
	m	(Lle;)Lle;	b	toTag
		p	1	tag	tag
	m	()V	c	update
	m	()Laom;	d	getRenderedEntity
	m	()Luh;	g	getEntityId
	m	()Z	h	isPlayerInRange
	m	()V	i	updateSpawns
c	bpe	net/minecraft/world/BlockRenderView
	m	(Lbqi;Lfu;)I	a	getLightLevel
		p	1	type	type
		p	2	pos	pos
	m	(Lfz;Z)F	a	getBrightness
		p	1	direction	direction
		p	2	shaded	shaded
	m	(Lfu;Lnet/minecraft/world/level/ColorResolver;)I	a	getColor
		p	1	pos	pos
		p	2	colorResolver	colorResolver
	m	(Lfu;I)I	b	getBaseLightLevel
		p	1	pos	pos
		p	2	ambientDarkness	ambientDarkness
	m	()Lcwr;	e	getLightingProvider
	m	(Lfu;)Z	f	isSkyVisible
		p	1	pos	pos
c	bpf	net/minecraft/server/world/BlockEvent
	f	Lfu;	a	pos
	f	Lbvr;	b	block
	f	I	c	type
	f	I	d	data
	m	(Lfu;Lbvr;II)V	<init>	<init>
		p	1	pos	pos
		p	2	block	block
		p	3	type	type
		p	4	data	data
	m	()Lfu;	a	getPos
	m	()Lbvr;	b	getBlock
	m	()I	c	getType
	m	()I	d	getData
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bpg	net/minecraft/world/BlockView
	c	Represents a scoped, read-only view of block states, fluid states and block entities.
	m	()I	H	getMaxLightLevel
	m	()I	I	getHeight
	m	(Ldem;Ldem;Lfu;Ldfg;Lcfj;)Ldeh;	a	rayTraceBlock
		p	1	start	start
		p	2	end	end
		p	3	pos	pos
		p	4	shape	shape
		p	5	state	state
	m	(Lbpj;)Ldeh;	a	rayTrace
		p	1	context	context
	m	(Lbpj;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	rayTrace
		p	1	context	context
		p	2	blockRayTracer	blockRayTracer
	m	(Lfu;)Lcxa;	b	getFluidState
		p	1	pos	pos
	m	(Lfu;)Lcdl;	c	getBlockEntity
		p	1	pos	pos
	m	(Lfu;)Lcfj;	d_	getBlockState
		p	1	pos	pos
	m	(Lfu;)I	h	getLuminance
		p	1	pos	pos
c	bph	net/minecraft/util/math/ChunkPos
	f	J	a	MARKER
	f	I	b	x
	f	I	c	z
	m	(J)V	<init>	<init>
		p	1	pos	pos
	m	(Lfu;)V	<init>	<init>
		p	1	pos	pos
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
	m	(II)J	a	toLong
		p	0	chunkX	chunkX
		p	1	chunkZ	chunkZ
	m	(Lbph;I)Ljava/util/stream/Stream;	a	stream
		p	0	center	center
		p	1	radius	radius
	m	(III)Lfu;	a	toBlockPos
		p	1	chunkRelativeX	chunkRelativeX
		p	2	chunkRelativeY	chunkRelativeY
		p	3	chunkRelativeZ	chunkRelativeZ
	m	()J	a	toLong
	m	(J)I	a	getPackedX
		p	0	pos	pos
	m	(Lbph;Lbph;)Ljava/util/stream/Stream;	a	stream
		p	0	pos1	pos1
		p	1	pos2	pos2
	m	(J)I	b	getPackedZ
		p	0	pos	pos
	m	()I	d	getStartX
	m	()I	e	getStartZ
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()I	f	getEndX
	m	()I	g	getEndZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionRelativeX
	m	()I	k	getRegionRelativeZ
	m	()Lfu;	l	getCenterBlockPos
c	bph$1	net/minecraft/util/math/ChunkPos$1
	f	Lbph;	e	position
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
		p	1	consumer	consumer
c	bpi	net/minecraft/server/world/SimpleTickScheduler
	f	Ljava/util/List;	a	scheduledTicks
	f	Ljava/util/function/Function;	b	identifierProvider
	m	(Ljava/util/function/Function;Ljava/util/List;)V	<init>	<init>
		p	1	identifierProvider	identifierProvider
		p	2	scheduledTicks	scheduledTicks
	m	(Ljava/util/function/Function;Ljava/util/List;J)V	<init>	<init>
		p	1	identifierProvider	identifierProvider
		p	2	scheduledTicks	scheduledTicks
		p	3	startTime	startTime
	m	(Llk;Ljava/util/function/Function;Ljava/util/function/Function;)Lbpi;	a	fromNbt
		p	0	ticks	ticks
	m	(Lbqr;)V	a	scheduleTo
		p	1	scheduler	scheduler
	m	()Llk;	b	toNbt
c	bpi$a	net/minecraft/server/world/SimpleTickScheduler$Tick
	f	Lfu;	a	pos
	f	I	b	delay
	f	Lbqt;	c	priority
	f	Ljava/lang/Object;	d	object
	m	(Ljava/lang/Object;Lfu;ILbqt;)V	<init>	<init>
		p	1	object	object
		p	2	pos	pos
		p	3	delay	delay
		p	4	priority	priority
c	bpj	net/minecraft/world/RayTraceContext
	f	Ldem;	a	start
	f	Ldem;	b	end
	f	Lbpj$a;	c	shapeType
	f	Lbpj$b;	d	fluid
	f	Lder;	e	entityPosition
	m	(Ldem;Ldem;Lbpj$a;Lbpj$b;Laom;)V	<init>	<init>
		p	1	start	start
		p	2	end	end
		p	3	shapeType	shapeType
		p	4	fluidHandling	fluidHandling
		p	5	entity	entity
	m	(Lcfj;Lbpg;Lfu;)Ldfg;	a	getBlockShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcxa;Lbpg;Lfu;)Ldfg;	a	getFluidShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	()Ldem;	a	getEnd
	m	()Ldem;	b	getStart
c	bpj$a	net/minecraft/world/RayTraceContext$ShapeType
	f	Lbpj$c;	d	provider
	m	(Ljava/lang/String;ILbpj$c;)V	<init>	<init>
		p	3	provider	provider
c	bpj$b	net/minecraft/world/RayTraceContext$FluidHandling
	f	Ljava/util/function/Predicate;	d	predicate
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3	predicate	predicate
	m	(Lcxa;)Z	a	handled
		p	1	state	state
c	bpj$c	net/minecraft/world/RayTraceContext$ShapeProvider
	m	(Lcfj;Lbpg;Lfu;Lder;)Ldfg;	get	get
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	context	context
c	bpk	net/minecraft/world/CollisionView
	m	(Laom;Ldfg;)Z	a	intersectsEntities
		p	1	except	except
		p	2	shape	shape
	m	(Lcfj;Lfu;Lder;)Z	a	canPlace
		p	1	state	state
		p	2	pos	pos
		p	3	context	context
	m	(Laom;Ldeg;)Z	a_	doesNotCollide
		p	1	entity	entity
		p	2	box	box
	m	(Laom;Ldeg;)Ljava/util/stream/Stream;	b	getBlockCollisions
		p	1	entity	entity
		p	2	box	box
	m	(Laom;Ldeg;Ljava/util/function/Predicate;)Z	b	doesNotCollide
	m	(Ldeg;)Z	b	doesNotCollide
		p	1	box	box
	m	(Laom;Ldeg;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	getEntityCollisions
	m	(II)Lbpg;	c	getExistingChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(Laom;Ldeg;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	d	getCollisions
	m	()Lcgw;	f	getWorldBorder
	m	(Laom;)Z	i	intersectsEntities
		p	1	entity	entity
	m	(Laom;)Z	j	doesNotCollide
		p	1	entity	entity
c	bpl	net/minecraft/world/BlockCollisionSpliterator
	f	Laom;	a	entity
	f	Ldeg;	b	box
	f	Lder;	c	context
	f	Lfx;	d	blockIterator
	f	Lfu$a;	e	pos
	f	Ldfg;	f	boxShape
	f	Lbpk;	g	world
	f	Z	h	checkEntity
	m	(Lbpk;Laom;Ldeg;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	box	box
	m	(Lcgw;Ldeg;)Z	a	isInWorldBorder
		p	0	border	border
		p	1	box	box
	m	(II)Lbpg;	a	getChunk
		p	1	x	x
		p	2	z	z
	m	(Ljava/util/function/Consumer;)Z	a	offerBlockShape
	m	(Ljava/util/function/Consumer;)Z	b	offerEntityShape
c	bpm	net/minecraft/world/gen/Spawner
	m	(Lzd;ZZ)I	a	spawn
c	bpn	net/minecraft/resource/DataPackSettings
	f	Lbpn;	a	SAFE_MODE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	enabled
	f	Ljava/util/List;	d	disabled
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1	enabled	enabled
		p	2	disabled	disabled
	m	()Ljava/util/List;	a	getEnabled
	m	()Ljava/util/List;	b	getDisabled
c	bpo	net/minecraft/world/explosion/DefaultExplosionBehavior
c	bpp	net/minecraft/world/EmptyBlockView
c	bpq	net/minecraft/client/world/DummyClientTickScheduler
	f	Lbpq;	a	INSTANCE
	m	()Lbpq;	b	get
c	bpr	net/minecraft/world/explosion/EntityExplosionBehavior
	f	Laom;	a	entity
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
c	bps	net/minecraft/world/EntityView
	m	(Laom;Ldfg;)Z	a	intersectsEntities
		p	1	entity	entity
		p	2	shape	shape
	m	(Ljava/lang/Class;Laxs;Laoy;DDDLdeg;)Laoy;	a	getClosestEntity
		p	1	entityClass	entityClass
		p	2	targetPredicate	targetPredicate
		p	3	entity	entity
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	box	box
	m	(Laxs;Laoy;)Lbec;	a	getClosestPlayer
		p	1	targetPredicate	targetPredicate
		p	2	entity	entity
	m	(DDDDZ)Lbec;	a	getClosestPlayer
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	maxDistance	maxDistance
		p	9	ignoreCreative	ignoreCreative
	m	(Ljava/lang/Class;Ldeg;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1	entityClass	entityClass
		p	2	box	box
		p	3	predicate	predicate
	m	(Ljava/lang/Class;Ldeg;)Ljava/util/List;	a	getNonSpectatingEntities
		p	1	entityClass	entityClass
		p	2	box	box
	m	(Laom;Laom;)Z	a	method_8338
		p	1	e	e
	m	(Laxs;Laoy;Ldeg;)Ljava/util/List;	a	getPlayers
		p	1	targetPredicate	targetPredicate
		p	2	entity	entity
		p	3	box	box
	m	(Laom;Ldeg;)Ljava/util/List;	a	getEntities
		p	1	except	except
		p	2	box	box
	m	(Ljava/util/List;Laxs;Laoy;DDD)Laoy;	a	getClosestEntity
		p	1	entityList	entityList
		p	2	targetPredicate	targetPredicate
		p	3	entity	entity
		p	4	x	x
		p	6	y	y
		p	8	z	z
	m	(Ljava/lang/Class;Laxs;Laoy;Ldeg;)Ljava/util/List;	a	getTargets
		p	1	entityClass	entityClass
		p	2	targetPredicate	targetPredicate
		p	3	targetingEntity	targetingEntity
		p	4	box	box
	m	(Laxs;DDD)Lbec;	a	getClosestPlayer
		p	1	targetPredicate	targetPredicate
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Laom;D)Lbec;	a	getClosestPlayer
		p	1	entity	entity
		p	2	maxDistance	maxDistance
	m	(DDDD)Z	a	isPlayerInRange
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	range	range
	m	(Laom;Ldeg;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1	except	except
		p	2	box	box
		p	3	predicate	predicate
	m	(DDDDLjava/util/function/Predicate;)Lbec;	a	getClosestPlayer
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	maxDistance	maxDistance
		p	9	targetPredicate	targetPredicate
	m	(Laxs;Laoy;DDD)Lbec;	a	getClosestPlayer
		p	1	targetPredicate	targetPredicate
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Ljava/lang/Class;Ldeg;Ljava/util/function/Predicate;)Ljava/util/List;	b	getEntitiesIncludingUngeneratedChunks
		p	1	entityClass	entityClass
		p	2	box	box
		p	3	predicate	predicate
	m	(Ljava/lang/Class;Laxs;Laoy;DDDLdeg;)Laoy;	b	getClosestEntityIncludingUngeneratedChunks
		p	1	entityClass	entityClass
		p	2	targetPredicate	targetPredicate
		p	3	entity	entity
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	box	box
	m	(Ljava/lang/Class;Ldeg;)Ljava/util/List;	b	getEntitiesIncludingUngeneratedChunks
		p	1	entityClass	entityClass
		p	2	box	box
	m	(Ljava/util/UUID;)Lbec;	b	getPlayerByUuid
		p	1	uuid	uuid
	m	(Laom;Ldeg;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	getEntityCollisions
		p	1	entity	entity
		p	2	box	box
		p	3	predicate	predicate
	m	()Ljava/util/List;	w	getPlayers
c	bpt	net/minecraft/world/explosion/Explosion
	f	Z	a	createFire
	f	Lbpt$a;	b	destructionType
	f	Ljava/util/Random;	c	random
	f	Lbqb;	d	world
	f	D	e	x
	f	D	f	y
	f	D	g	z
	f	Laom;	h	entity
	f	F	i	power
	f	Lanw;	j	damageSource
	f	Lbpu;	k	behavior
	f	Ljava/util/List;	l	affectedBlocks
	f	Ljava/util/Map;	m	affectedPlayers
	m	(Lbqb;Laom;Lanw;Lbpu;DDDFZLbpt$a;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
	m	(Lbqb;Laom;DDDFLjava/util/List;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	power	power
		p	10	affectedBlocks	affectedBlocks
	m	(Lbqb;Laom;DDDFZLbpt$a;Ljava/util/List;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	power	power
		p	10	createFire	createFire
		p	11	destructionType	destructionType
		p	12	affectedBlocks	affectedBlocks
	m	(Z)V	a	affectWorld
	m	(Laom;)Lbpu;	a	chooseBehavior
		p	1	entity	entity
	m	(Ldem;Laom;)F	a	getExposure
		p	0	source	source
		p	1	entity	entity
	m	()V	a	collectBlocksAndDamageEntities
	m	()Lanw;	b	getDamageSource
	m	()Ljava/util/Map;	c	getAffectedPlayers
	m	()Laoy;	d	getCausingEntity
	m	()V	e	clearAffectedBlocks
	m	()Ljava/util/List;	f	getAffectedBlocks
c	bpt$a	net/minecraft/world/explosion/Explosion$DestructionType
c	bpu	net/minecraft/world/explosion/ExplosionBehavior
	m	(Lbpt;Lbpg;Lfu;Lcfj;F)Z	a	canDestroyBlock
		p	1	explosion	explosion
		p	2	world	world
		p	3	pos	pos
		p	4	state	state
		p	5	power	power
	m	(Lbpt;Lbpg;Lfu;Lcfj;Lcxa;)Ljava/util/Optional;	a	getBlastResistance
		p	1	explosion	explosion
		p	2	world	world
		p	3	pos	pos
		p	4	blockState	blockState
		p	5	fluidState	fluidState
c	bpv	net/minecraft/client/color/world/FoliageColors
	f	[I	a	colorMap
	m	([I)V	a	setColorMap
		p	0	pixels	pixels
	m	(DD)I	a	getColor
		p	0	temperature	temperature
		p	2	humidity	humidity
	m	()I	a	getSpruceColor
	m	()I	b	getBirchColor
	m	()I	c	getDefaultColor
c	bpw	net/minecraft/world/ForcedChunkState
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	a	chunks
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getChunks
c	bpx	net/minecraft/world/GameRules
	f	Lorg/apache/logging/log4j/Logger;	H	LOGGER
	f	Ljava/util/Map;	I	RULE_TYPES
	f	Ljava/util/Map;	J	rules
	f	Lbpx$e;	b	DO_MOB_GRIEFING
		c	A {@linkplain GameRule game rule} which regulates whether mobs can modify the world.\n\n<p>Generally one is expected to test this rule before an entity modifies the world.\n\n<p>In vanilla, this includes:\n<ul>\n<li>Whether creeper explosions destroy blocks\n<li>Whether a zombie can break down a door\n<li>Whether a wither killing an entity will place or drop a wither rose\n</ul>
	f	Lbpx$e;	c	KEEP_INVENTORY
		c	A {@linkplain GameRule game rule} which regulates whether player inventories should be persist through respawning.
	f	Lbpx$e;	d	DO_MOB_SPAWNING
		c	A {@linkplain GameRule game rule} which regulates whether mobs can spawn naturally.
	f	Lbpx$e;	e	DO_MOB_LOOT
		c	A {@linkplain GameRule game rule} which regulates whether mobs should drop loot on death.
	f	Lbpx$e;	f	DO_TILE_DROPS
		c	A {@linkplain GameRule game rule} which regulates whether blocks should drop their items when broken.
	f	Lbpx$e;	o	REDUCED_DEBUG_INFO
		c	A {@linkplain GameRule game rule} which regulates whether clients' {@linkplain net.minecraft.client.gui.hud.DebugHud debug HUD}s show reduced information.\n\n<p>When the value of this rule is changed, all connected clients will be notified to update their display.\nIn vanilla, this includes the visibility of coordinates on the clients' debug HUDs.
	f	Lbpx$e;	s	MAX_ENTITY_CRAMMING
		c	A {@linkplain GameRule game rule} which regulates the number of entities that can be crammed into a block space before they incur cramming damage.
	f	Lbpx$e;	w	ANNOUNCE_ADVANCEMENTS
		c	A {@linkplain GameRule game rule} which regulates whether a player's advancements should be announced in chat.
	f	Lbpx$e;	x	DISABLE_RAIDS
		c	A {@linkplain GameRule game rule} which regulates whether raids should occur.\n\n<p>If this rule is set to {@code true} while raids are occurring, the raids will be stopped.
	f	Lbpx$e;	z	DO_IMMEDIATE_RESPAWN
		c	A {@linkplain GameRule game rule} which regulates whether a player should immediately respawn upon death.
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	rules	rules
	m	(Lcom/mojang/serialization/DynamicLike;)V	a	load
	m	(Lbpx;Lnet/minecraft/server/MinecraftServer;)V	a	setAllValues
		p	1	rules	rules
		p	2	server	server
	m	(Lbpx;Lnet/minecraft/server/MinecraftServer;Lbpx$e;)V	a	method_27323
		p	3	key	key
	m	(Lcom/mojang/serialization/DynamicLike;Lbpx$e;Lbpx$g;)V	a	method_20747
		p	1	key	key
		p	2	rule	rule
	m	(Lle;Lbpx$e;Lbpx$g;)V	a	method_20751
		p	1	key	key
		p	2	rule	rule
	m	(Lbpx$e;)Lbpx$g;	a	get
		p	1	key	key
	m	(Lbpx$c;)V	a	forEachType
		p	0	action	action
	m	(Ljava/lang/String;Lbpx$b;Lbpx$f;)Lbpx$e;	a	register
		p	0	name	name
		p	1	category	category
		p	2	type	type
	m	()Lle;	a	toNbt
	m	(Lbpx$e;Lbpx;Lnet/minecraft/server/MinecraftServer;)V	a	setValue
		p	1	key	key
		p	2	rules	rules
		p	3	server	server
	m	(Lbpx$c;Lbpx$e;Lbpx$f;)V	a	accept
		p	0	consumer	consumer
		p	1	key	key
		p	2	type	type
	m	(Lnet/minecraft/server/MinecraftServer;Lbpx$a;)V	a	method_22386
		p	0	server	server
		p	1	rule	rule
	m	()Lbpx;	b	copy
	m	(Lnet/minecraft/server/MinecraftServer;Lbpx$a;)V	b	method_8361
		p	0	server	server
		p	1	rule	rule
	m	(Lbpx$e;)Z	b	getBoolean
		p	1	rule	rule
	m	(Ljava/util/Map$Entry;)Lbpx$g;	b	method_20748
		p	0	e	e
	m	(Lbpx$c;Lbpx$e;Lbpx$f;)V	b	method_20750
		p	1	key	key
		p	2	type	type
	m	(Lbpx$e;)I	c	getInt
		p	1	rule	rule
	m	(Lbpx$e;)Ljava/lang/String;	d	method_20752
		p	0	key	key
c	bpx$a	net/minecraft/world/GameRules$BooleanRule
	f	Z	b	value
	m	(Lbpx$f;Z)V	<init>	<init>
		p	1	type	type
		p	2	initialValue	initialValue
	m	(ZLbpx$f;)Lbpx$a;	a	method_20756
		p	1	type	type
	m	(Lbpx$a;Lnet/minecraft/server/MinecraftServer;)V	a	setValue
	m	()Z	a	get
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
		p	1	value	value
		p	2	server	server
	m	(Lnet/minecraft/server/MinecraftServer;Lbpx$a;)V	a	method_20754
		p	0	server	server
		p	1	rule	rule
	m	(ZLjava/util/function/BiConsumer;)Lbpx$f;	b	create
		p	0	initialValue	initialValue
		p	1	changeCallback	changeCallback
	m	(Z)Lbpx$f;	b	create
		p	0	initialValue	initialValue
	m	()Lbpx$a;	d	getThis
	m	()Lbpx$a;	e	copy
c	bpx$b	net/minecraft/world/GameRules$Category
	f	Ljava/lang/String;	h	category
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	category	category
	m	()Ljava/lang/String;	a	getCategory
c	bpx$c	net/minecraft/world/GameRules$TypeConsumer
	m	(Lbpx$e;Lbpx$f;)V	a	accept
		p	1	key	key
		p	2	type	type
	m	(Lbpx$e;Lbpx$f;)V	b	acceptBoolean
		p	1	key	key
		p	2	type	type
	m	(Lbpx$e;Lbpx$f;)V	c	acceptInt
		p	1	key	key
		p	2	type	type
c	bpx$d	net/minecraft/world/GameRules$IntRule
	f	I	b	value
	m	(Lbpx$f;I)V	<init>	<init>
		p	1	rule	rule
		p	2	initialValue	initialValue
	m	(Lnet/minecraft/server/MinecraftServer;Lbpx$d;)V	a	method_20767
		p	0	server	server
		p	1	rule	rule
	m	(ILbpx$f;)Lbpx$d;	a	method_20765
		p	1	type	type
	m	(Lbpx$d;Lnet/minecraft/server/MinecraftServer;)V	a	setValue
	m	()I	a	get
	m	(ILjava/util/function/BiConsumer;)Lbpx$f;	a	create
		p	0	initialValue	initialValue
		p	1	changeCallback	changeCallback
	m	(I)Lbpx$f;	b	create
		p	0	initialValue	initialValue
	m	(Ljava/lang/String;)Z	b	validate
		c	Validates that an input is valid for this rule.
		p	1	input	input
	m	(Ljava/lang/String;)I	c	parseInt
		p	0	input	input
	m	()Lbpx$d;	d	getThis
	m	()Lbpx$d;	e	copy
c	bpx$e	net/minecraft/world/GameRules$Key
	f	Ljava/lang/String;	a	name
	f	Lbpx$b;	b	category
	m	(Ljava/lang/String;Lbpx$b;)V	<init>	<init>
		p	1	name	name
		p	2	category	category
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getTranslationKey
	m	()Lbpx$b;	c	getCategory
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	bpx$f	net/minecraft/world/GameRules$Type
	f	Ljava/util/function/Supplier;	a	argumentType
	f	Ljava/util/function/Function;	b	ruleFactory
	f	Ljava/util/function/BiConsumer;	c	changeCallback
	f	Lbpx$h;	d	ruleAcceptor
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lbpx$h;)V	<init>	<init>
		p	1	argumentType	argumentType
		p	2	ruleFactory	ruleFactory
		p	3	changeCallback	changeCallback
		p	4	ruleAcceptor	ruleAcceptor
	m	(Lbpx$c;Lbpx$e;)V	a	accept
		p	1	consumer	consumer
		p	2	key	key
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	1	name	name
	m	()Lbpx$g;	a	createRule
c	bpx$g	net/minecraft/world/GameRules$Rule
	f	Lbpx$f;	a	type
	m	(Lbpx$f;)V	<init>	<init>
		p	1	type	type
	m	(Ljava/lang/String;)V	a	deserialize
		p	1	value	value
	m	(Lbpx$g;Lnet/minecraft/server/MinecraftServer;)V	a	setValue
		p	1	rule	rule
		p	2	server	server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	setFromArgument
		p	1	context	context
		p	2	name	name
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	changed
		p	1	server	server
	m	()Ljava/lang/String;	b	serialize
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	set
		p	1	context	context
		p	2	name	name
	m	()I	c	getCommandResult
	m	()Lbpx$g;	f	copy
	m	()Lbpx$g;	g	getThis
c	bpx$h	net/minecraft/world/GameRules$Acceptor
	m	(Lbpx$c;Lbpx$e;Lbpx$f;)V	call	call
		p	1	consumer	consumer
		p	2	key	key
		p	3	type	type
c	bpy	net/minecraft/world/GameMode
	f	I	f	id
	f	Ljava/lang/String;	g	name
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getId
	m	(I)Lbpy;	a	byId
		p	0	id	id
	m	(Ljava/lang/String;Lbpy;)Lbpy;	a	byName
		p	0	name	name
		p	1	defaultMode	defaultMode
	m	(Ljava/lang/String;)Lbpy;	a	byName
		p	0	name	name
	m	(ILbpy;)Lbpy;	a	byId
		p	0	id	id
		p	1	defaultMode	defaultMode
	m	(Lbdz;)V	a	setAbilities
		p	1	abilities	abilities
	m	()Ljava/lang/String;	b	getName
	m	()Lmr;	c	getTranslatableName
	m	()Z	d	isBlockBreakingRestricted
	m	()Z	e	isCreative
	m	()Z	f	isSurvivalLike
c	bpz	net/minecraft/client/color/world/GrassColors
	f	[I	a	colorMap
	m	([I)V	a	setColorMap
		p	0	map	map
	m	(DD)I	a	getColor
		p	0	temperature	temperature
		p	2	humidity	humidity
c	bq	net/minecraft/advancement/criterion/KilledByCrossbowCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbq$a;	a	conditionsFromJson
	m	(Lze;Ljava/util/Collection;)V	a	trigger
		p	1	player	player
		p	2	piercingKilledEntities	piercingKilledEntities
c	bq$a	net/minecraft/advancement/criterion/KilledByCrossbowCriterion$Conditions
	f	[Lbe$b;	a	victims
	f	Lbx$d;	b	uniqueEntityTypes
	m	(Lbe$b;[Lbe$b;Lbx$d;)V	<init>	<init>
		p	1	player	player
		p	2	victims	victims
		p	3	uniqueEntityTypes	uniqueEntityTypes
	m	(Ljava/util/Collection;I)Z	a	matches
		p	1	victimContexts	victimContexts
		p	2	uniqueEntityTypeCount	uniqueEntityTypeCount
	m	(Lbx$d;)Lbq$a;	a	create
		p	0	uniqueEntityTypes	uniqueEntityTypes
	m	([Lbe$a;)Lbq$a;	a	create
		p	0	victimPredicates	victimPredicates
c	bqa	net/minecraft/item/ItemConvertible
	m	()Lbke;	h	asItem
c	bqb	net/minecraft/world/World
	f	Lbrg;	A	biomeAccess
	f	Lug;	B	registryKey
	f	Lug;	C	dimensionRegistryKey
	f	[Lfz;	a	DIRECTIONS
	f	Ljava/lang/Thread;	b	thread
	f	Z	c	debugWorld
	f	I	d	ambientDarkness
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lug;	g	OVERWORLD
	f	Lug;	h	NETHER
	f	Lug;	i	END
	f	Ljava/util/List;	j	blockEntities
	f	Ljava/util/List;	k	tickingBlockEntities
	f	Ljava/util/List;	l	pendingBlockEntities
	f	Ljava/util/List;	m	unloadedBlockEntities
	f	I	n	lcgBlockSeed
	f	I	o	unusedIncrement
	f	F	p	rainGradientPrev
	f	F	q	rainGradient
	f	F	r	thunderGradientPrev
	f	F	s	thunderGradient
	f	Ljava/util/Random;	t	random
	f	Ldam;	u	properties
	f	Z	v	isClient
	f	Z	w	iteratingTickingBlockEntities
	f	Lcif;	x	dimension
	f	Ljava/util/function/Supplier;	y	profiler
	f	Lcgw;	z	border
	m	(Ldam;Lug;Lug;Lcif;Ljava/util/function/Supplier;ZZJ)V	<init>	<init>
		p	5	profiler	profiler
	m	(Lfu;)Lcdl;	D	getPendingBlockEntity
		p	1	pos	pos
	m	()Ldfm;	D	getScoreboard
	m	()Z	J	isDay
	m	()Z	K	isNight
	m	()V	L	tickBlockEntities
	m	()Ljava/lang/String;	M	getDebugString
	m	()V	N	calculateAmbientDarkness
	m	()V	O	initWeatherGradients
	m	()V	P	disconnect
	m	()J	Q	getTime
	m	()J	R	getTimeOfDay
	m	()Lbpx;	S	getGameRules
	m	()Z	T	isThundering
	m	()Z	U	isRaining
	m	()Lug;	V	getDimensionRegistryKey
	m	()Lug;	W	getRegistryKey
	m	()Lami;	X	getProfiler
	m	()Ljava/util/function/Supplier;	Y	getProfilerSupplier
	m	()Z	Z	isDebugWorld
	m	(DDDLack;Lacm;FFZ)V	a	playSound
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	sound	sound
		p	8	category	category
		p	9	volume	volume
		p	10	pitch	pitch
	m	(Lfu;Laom;Lfz;)Z	a	isDirectionSolid
		p	1	pos	pos
		p	2	entity	entity
		p	3	direction	direction
	m	(Lni;)V	a	sendPacket
		p	1	packet	packet
	m	(Lj;)Lk;	a	addDetailsToCrashReport
		p	1	report	report
	m	(DDDDDDLle;)V	a	addFireworkParticle
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	velocityX	velocityX
		p	9	velocityY	velocityY
		p	11	velocityZ	velocityZ
		p	13	tag	tag
	m	(Laom;B)V	a	sendEntityStatus
		p	1	entity	entity
		p	2	status	status
	m	(Lbec;Laom;Lack;Lacm;FF)V	a	playSoundFromEntity
		p	1	player	player
		p	2	entity	entity
		p	3	sound	sound
		p	4	category	category
		p	5	volume	volume
		p	6	pitch	pitch
	m	(Lfu;Laom;)Z	a	isTopSolid
		p	1	pos	pos
		p	2	entity	entity
	m	(Lhf;ZDDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	(ILfu;I)V	a	setBlockBreakingInfo
		p	1	entityId	entityId
		p	2	pos	pos
		p	3	progress	progress
	m	(Ljava/util/function/Consumer;Laom;)V	a	tickEntity
		p	1	tickConsumer	tickConsumer
		p	2	entity	entity
	m	(Lfu;Lcfj;Lcfj;I)V	a	updateListeners
		p	1	pos	pos
		p	2	oldState	oldState
		p	3	newState	newState
		p	4	flags	flags
	m	(Laom;DDDFZLbpt$a;)Lbpt;	a	createExplosion
		p	1	entity	entity
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	power	power
		p	9	createFire	createFire
		p	10	destructionType	destructionType
	m	(Lfu;Lcdl;)V	a	setBlockEntity
		p	1	pos	pos
		p	2	blockEntity	blockEntity
	m	(Laom;Lanw;Lbpu;DDDFZLbpt$a;)Lbpt;	a	createExplosion
		p	1	entity	entity
		p	2	damageSource	damageSource
	m	(IIII)Lfu;	a	getRandomPosInChunk
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbec;Lfu;)Z	a	canPlayerModifyAt
		p	1	player	player
		p	2	pos	pos
	m	(Lbec;DDDLack;Lacm;FF)V	a	playSound
		p	1	player	player
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	sound	sound
		p	9	category	category
		p	10	volume	volume
		p	11	pitch	pitch
	m	(I)Laom;	a	getEntityById
		p	1	id	id
	m	(Ljava/util/Collection;)V	a	addBlockEntities
		p	1	blockEntities	blockEntities
	m	(Lfu;Lfz;)Z	a	isEmittingRedstonePower
		p	1	pos	pos
		p	2	direction	direction
	m	(Lfu;Lbvr;Lfu;)V	a	updateNeighbor
		p	1	sourcePos	sourcePos
		p	2	sourceBlock	sourceBlock
		p	3	neighborPos	neighborPos
	m	(Lfu;Lcfj;Lcfj;)V	a	onBlockChanged
		p	1	pos	pos
		p	2	oldBlock	oldBlock
		p	3	newBlock	newBlock
	m	(F)F	a	getSkyAngleRadians
		p	1	tickDelta	tickDelta
	m	(Ljava/lang/String;)Lczv;	a	getMapState
		p	1	id	id
	m	(Laoq;Ldeg;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1	type	type
		p	2	box	box
		p	3	predicate	predicate
	m	(Lfu;Lbvr;II)V	a	addSyncedBlockEvent
		p	1	pos	pos
		p	2	block	block
		p	3	type	type
		p	4	data	data
	m	(Laom;DDDFLbpt$a;)Lbpt;	a	createExplosion
		p	1	entity	entity
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	power	power
		p	9	destructionType	destructionType
	m	(Lfu;Lcfj;)Z	a	setBlockState
		p	1	pos	pos
		p	2	state	state
	m	(Lfu;Lbvr;Lfz;)V	a	updateNeighborsExcept
		p	1	pos	pos
		p	2	sourceBlock	sourceBlock
		p	3	direction	direction
	m	(Lczv;)V	a	putMapState
		p	1	mapState	mapState
	m	(Lcdl;)Z	a	addBlockEntity
		p	1	blockEntity	blockEntity
	m	(Lhf;ZDDDDDD)V	b	addImportantParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	(Lfu;Lcfj;Lcfj;)V	b	scheduleBlockRerenderIfNeeded
		p	1	pos	pos
		p	2	old	old
		p	3	updated	updated
	m	(ZZ)V	b	setMobSpawnOptions
		p	1	spawnMonsters	spawnMonsters
		p	2	spawnAnimals	spawnAnimals
	m	(I)Z	b	isHeightInvalid
		p	0	y	y
	m	(ILfu;I)V	b	syncGlobalEvent
		p	1	eventId	eventId
		p	2	pos	pos
		p	3	data	data
	m	(F)F	b	getThunderGradient
		p	1	delta	delta
	m	(Lfu;Lfz;)I	b	getEmittedRedstonePower
		p	1	pos	pos
		p	2	direction	direction
	m	(Lfu;Lcdl;)V	b	markDirty
		p	1	pos	pos
		p	2	blockEntity	blockEntity
	m	(Lhf;DDDDDD)V	b	addImportantParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lfu;Lbvr;)V	b	updateNeighborsAlways
		p	1	pos	pos
		p	2	block	block
	m	(Lfu;Lbvr;)V	c	updateComparators
		p	1	pos	pos
		p	2	block	block
	m	(F)V	c	setThunderGradient
		p	1	thunderGradient	thunderGradient
	m	(Lfu;Ljava/util/function/Predicate;)D	c	getCollisionHeightAt
		p	1	pos	pos
	m	(I)V	c	setLightningTicksLeft
		p	1	lightningTicksLeft	lightningTicksLeft
	m	(F)F	d	getRainGradient
		p	1	delta	delta
	m	(II)Lchj;	d	getChunk
	m	(Lfu;)Z	e	isValid
		p	0	pos	pos
	m	(F)V	e	setRainGradient
		p	1	rainGradient	rainGradient
	m	()Lnet/minecraft/server/MinecraftServer;	l	getServer
	m	(Lfu;)Z	l	isHeightInvalid
		p	0	pos	pos
	m	(Lfu;)D	m	getCollisionHeightAt
		p	1	pos	pos
	m	(Lfu;)Lchj;	n	getWorldChunk
		p	1	pos	pos
	m	()Lbmv;	o	getRecipeManager
	m	(Lfu;)V	o	removeBlockEntity
		p	1	pos	pos
	m	(Lfu;)Z	p	canSetBlock
		p	1	pos	pos
	m	()Ladh;	p	getTagManager
	m	()Z	q	isSavingDisabled
	m	(Lfu;)I	q	getReceivedStrongRedstonePower
		p	1	pos	pos
	m	(Lfu;)Z	r	isReceivingRedstonePower
		p	1	pos	pos
	m	(Lfu;)I	s	getReceivedRedstonePower
		p	1	pos	pos
	m	(Lfu;)Z	t	hasRain
		p	1	pos	pos
	m	()I	t	getNextMapId
	m	(Lfu;)Z	u	hasHighHumidity
		p	1	pos	pos
c	bqc	net/minecraft/world/WorldAccess
	m	()Lchb;	E	getChunkManager
	m	()Lbqr;	F	getFluidTickScheduler
	m	()Lbqr;	G	getBlockTickScheduler
	m	(Lbec;Lfu;Lack;Lacm;FF)V	a	playSound
		p	1	player	player
		p	2	pos	pos
		p	3	sound	sound
		p	4	category	category
		p	5	volume	volume
		p	6	pitch	pitch
	m	(Lhf;DDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lfu;Lbvr;)V	a	updateNeighbors
		p	1	pos	pos
		p	2	block	block
	m	(Lbec;ILfu;I)V	a	syncWorldEvent
		p	1	player	player
		p	2	eventId	eventId
		p	3	pos	pos
		p	4	data	data
	m	()F	aa	getMoonSize
	m	()I	ab	getMoonPhase
	m	()Land;	ac	getDifficulty
	m	()I	ad	getDimensionHeight
	m	(ILfu;I)V	c	syncWorldEvent
		p	1	eventId	eventId
		p	2	pos	pos
		p	3	data	data
	m	(Lfu;)Lane;	d	getLocalDifficulty
		p	1	pos	pos
	m	(F)F	f	getSkyAngle
		p	1	tickDelta	tickDelta
	m	()Lbqb;	n	getWorld
	m	()Ldab;	u_	getLevelProperties
	m	()Ljava/util/Random;	v_	getRandom
c	bqd	net/minecraft/world/WorldView
	c	Represents a scoped, read-only view of a world like structure that contains biomes, chunks and is bound to a dimension.
	m	(Lfu;)Z	A	isWater
		p	1	pos	pos
	m	(Lfu;)I	B	getLightLevel
		p	1	pos	pos
	m	(Lfu;)Z	C	isChunkLoaded
		p	1	pos	pos
	m	(Lcio$a;Lfu;)Lfu;	a	getTopPosition
		p	1	heightmap	heightmap
		p	2	pos	pos
	m	(III)Lbre;	a	getGeneratorStoredBiome
		p	1	biomeX	biomeX
		p	2	biomeY	biomeY
		p	3	biomeZ	biomeZ
	m	(Lfu;Lfu;)Z	a	isRegionLoaded
		p	1	min	min
		p	2	max	max
	m	(IIIIII)Z	a	isRegionLoaded
		p	1	minX	minX
		p	2	minY	minY
		p	3	minZ	minZ
		p	4	maxX	maxX
		p	5	maxY	maxY
		p	6	maxZ	maxZ
	m	(Lcio$a;II)I	a	getTopY
		p	1	heightmap	heightmap
		p	2	x	x
		p	3	z	z
	m	(IILchc;)Lcgy;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	status	status
	m	(IILchc;Z)Lcgy;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	(II)Lcgy;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(II)Z	b	isChunkLoaded
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(Lfu;Lfz;)I	c	getStrongRedstonePower
		p	1	pos	pos
		p	2	direction	direction
	m	()I	c	getAmbientDarkness
	m	(Lfu;I)I	c	getLightLevel
		p	1	pos	pos
		p	2	ambientDarkness	ambientDarkness
	m	()Lbrg;	d	getBiomeAccess
	m	(Ldeg;)Z	d	containsFluid
		p	1	box	box
	m	()Lcif;	m	getDimension
	m	()Z	s_	isClient
		c	Checks if this world view is on the logical client.\n\n<p>If the value returned is false, it is expected that this world is present on a logical server.
	m	()I	t_	getSeaLevel
	m	(Lfu;)Lbre;	v	getBiome
		p	1	pos	pos
	m	(Lfu;)Z	w	isAir
		p	1	pos	pos
	m	(Lfu;)Z	x	isSkyVisibleAllowingSea
		p	1	pos	pos
	m	(Lfu;)F	y	getBrightness
		p	1	pos	pos
	m	(Lfu;)Lcgy;	z	getChunk
		p	1	pos	pos
c	bqe	net/minecraft/world/level/LevelInfo
	f	Ljava/lang/String;	a	name
	f	Lbpy;	b	gameMode
	f	Z	c	structures
	f	Land;	d	difficulty
	f	Z	e	hardcore
	f	Lbpx;	f	gameRules
	m	(Ljava/lang/String;Lbpy;ZLand;ZLbpx;Lbpn;)V	<init>	<init>
		p	1	name	name
	m	()Ljava/lang/String;	a	getLevelName
	m	()Lbpy;	b	getGameMode
	m	()Z	c	hasStructures
	m	()Land;	d	getDifficulty
	m	()Z	e	isHardcore
	m	()Lbpx;	f	getGameRules
c	bqf	net/minecraft/world/ModifiableTestableWorld
c	bqg	net/minecraft/world/TestableWorld
	m	(Lcio$a;Lfu;)Lfu;	a	getTopPosition
		p	1	type	type
		p	2	pos	pos
	m	(Lfu;Ljava/util/function/Predicate;)Z	a	testBlockState
		p	1	pos	pos
		p	2	state	state
c	bqh	net/minecraft/world/ModifiableWorld
	c	Represents a modifiable world where block states can be changed and entities spawned.
	m	(Lfu;Z)Z	a	removeBlock
		p	1	pos	pos
		p	2	move	move
	m	(Lfu;Lcfj;II)Z	a	setBlockState
		c	Updates the block state at a position, calling appropriate callbacks.\n\n<p>When called on the server, the new block state is stored and propagated to clients and listeners as dictated\nby the supplied flags. Note that calling this on the client will update the world locally, but may not see the\nchange persisted across loads. It's recommended to check whether this world is client before\ninteracting with the world in this way.</p>\n\n<p>Accepted values of the flags are a bitset combination of the following:</p>\n<ul>\n<li>0b0000001 // 1 - PROPAGATE_CHANGE - Propagates a change event to surrounding blocks.</li>\n<li>0b0000010 // 2 - NOTIFY_LISTENERS - Notifies listeners and clients who need to react when the block changes</li>\n<li>0b0000100 // 4 - NO_REDRAW - Used in conjunction with NOTIFY_LISTENERS to suppress the render pass on clients.</li>\n<li>0b0001000 // 8 - REDRAW_ON_MAIN_THREAD - Forces a synchronous redraw on clients.</li>\n<li>0b0010000 // 16 - FORCE_STATE - Bypass virtual block state changes and forces the passed state to be stored as-is.</li>\n<li>0b0100000 // 32 - SKIP_DROPS - Prevents the previous block (container) from dropping items when destroyed.</li>\n<li>0b1000000 // 64 - MOVED - Signals that the current block is being moved to a different location, usually because of a piston.</li>\n</ul>
		p	1	pos	pos
			c	the target position
		p	2	state	state
			c	the block state to set
		p	3	flags	flags
			c	the bitwise flag combination, as described above
		p	4	maxUpdateDepth	maxUpdateDepth
			c	the limit for the cascading block updates
	m	(Lfu;ZLaom;)Z	a	breakBlock
		p	1	pos	pos
		p	2	drop	drop
		p	3	breakingEntity	breakingEntity
	m	(Lfu;Lcfj;I)Z	a	setBlockState
		c	Updates the block state at a position, calling appropriate callbacks.\n\n<p>When called on the server, the new block state is stored and propagated to clients and listeners as dictated\nby the supplied flags. Note that calling this on the client will update the world locally, but may not see the\nchange persisted across loads. It's recommended to check whether this world is client before\ninteracting with the world in this way.</p>\n\n<p>Accepted values of the flags are a bitset combination of the following:</p>\n<ul>\n<li>0b0000001 // 1 - PROPAGATE_CHANGE - Propagates a change event to surrounding blocks.</li>\n<li>0b0000010 // 2 - NOTIFY_LISTENERS - Notifies listeners and clients who need to react when the block changes</li>\n<li>0b0000100 // 4 - NO_REDRAW - Used in conjunction with NOTIFY_LISTENERS to suppress the render pass on clients.</li>\n<li>0b0001000 // 8 - REDRAW_ON_MAIN_THREAD - Forces a synchronous redraw on clients.</li>\n<li>0b0010000 // 16 - FORCE_STATE - Bypass virtual block state changes and forces the passed state to be stored as-is.</li>\n<li>0b0100000 // 32 - SKIP_DROPS - Prevents the previous block (container) from dropping items when destroyed.</li>\n<li>0b1000000 // 64 - MOVED - Signals that the current block is being moved to a different location, usually because of a piston.</li>\n</ul>
		p	1	pos	pos
			c	the target position
		p	2	state	state
			c	the block state to set
		p	3	flags	flags
			c	the bitwise flag combination, as described above
	m	(Lfu;ZLaom;I)Z	a	breakBlock
		p	1	pos	pos
		p	2	drop	drop
		p	3	breakingEntity	breakingEntity
		p	4	maxUpdateDepth	maxUpdateDepth
	m	(Lfu;Z)Z	b	breakBlock
		p	1	pos	pos
		p	2	drop	drop
	m	(Laom;)Z	c	spawnEntity
		p	1	entity	entity
c	bqi	net/minecraft/world/LightType
	f	I	c	value
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	value	value
c	bqj	net/minecraft/world/SpawnHelper
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	CHUNK_AREA
	f	[Lapa;	c	SPAWNABLE_GROUPS
	m	(Lbqc;Lbre;IILjava/util/Random;)V	a	populateEntities
		p	0	world	world
		p	1	biome	biome
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
	m	(Lzd;Lchj;Lbqj$d;ZZZ)V	a	spawn
		p	0	world	world
		p	1	chunk	chunk
		p	2	info	info
		p	3	spawnAnimals	spawnAnimals
		p	4	spawnMonsters	spawnMonsters
		p	5	shouldSpawnAnimals	shouldSpawnAnimals
	m	(Lapa;Lzd;Lcgy;Lfu;Lbqj$c;Lbqj$a;)V	a	spawnEntitiesInChunk
		p	0	group	group
		p	1	world	world
		p	2	chunk	chunk
		p	3	pos	pos
		p	4	checker	checker
		p	5	runner	runner
	m	(Lzd;Lbqq;Lcha;Lapa;Lbre$g;Lfu;)Z	a	containsSpawnEntry
	m	(Lzd;Lapa;Lbqq;Lcha;Lbre$g;Lfu$a;D)Z	a	canSpawn
		p	0	world	world
		p	1	group	group
		p	2	structureAccessor	structureAccessor
		p	3	chunkGenerator	chunkGenerator
		p	4	spawnEntry	spawnEntry
		p	5	pos	pos
		p	6	squaredDistance	squaredDistance
	m	(Lbpg;Lfu;Lcfj;Lcxa;Laoq;)Z	a	isClearForSpawn
		p	0	blockView	blockView
		p	1	pos	pos
		p	2	state	state
		p	3	fluidState	fluidState
	m	(Lapa;Lzd;Lchj;Lbqj$c;Lbqj$a;)V	a	spawnEntitiesInChunk
		p	0	group	group
		p	1	world	world
		p	2	chunk	chunk
		p	3	checker	checker
		p	4	runner	runner
	m	(Lzd;Laoz;D)Z	a	isValidSpawn
		p	0	world	world
		p	1	entity	entity
		p	2	squaredDistance	squaredDistance
	m	(Lzd;Lbqq;Lcha;Lapa;Ljava/util/Random;Lfu;)Lbre$g;	a	pickRandomSpawnEntry
	m	(ILjava/lang/Iterable;Lbqj$b;)Lbqj$d;	a	setupSpawn
		p	0	spawningChunkCount	spawningChunkCount
		p	1	entities	entities
		p	2	chunkSource	chunkSource
	m	(Lbqb;Lchj;)Lfu;	a	getSpawnPos
		p	0	world	world
		p	1	chunk	chunk
	m	(Lzd;Lcgy;Lfu$a;D)Z	a	isAcceptableSpawnPosition
		p	0	world	world
		p	1	chunk	chunk
		p	2	pos	pos
		p	3	squaredDistance	squaredDistance
	m	(Lapp$c;Lbqd;Lfu;Laoq;)Z	a	canSpawn
		p	0	location	location
		p	1	world	world
		p	2	pos	pos
		p	3	entityType	entityType
	m	(Lzd;Laoq;)Laoz;	a	createMob
		p	0	world	world
		p	1	type	type
	m	(Lbqd;Laoq;II)Lfu;	a	getEntitySpawnPos
		p	0	world	world
		p	1	entityType	entityType
		p	2	x	x
		p	3	z	z
	m	(Lfu;Lcgy;)Lbre;	b	getBiomeDirectly
		p	0	pos	pos
		p	1	chunk	chunk
c	bqj$a	net/minecraft/world/SpawnHelper$Runner
	m	(Laoz;Lcgy;)V	run	run
		p	1	entity	entity
		p	2	chunk	chunk
c	bqj$b	net/minecraft/world/SpawnHelper$ChunkSource
	m	(JLjava/util/function/Consumer;)V	query	query
		p	1	pos	pos
		p	3	chunkConsumer	chunkConsumer
c	bqj$c	net/minecraft/world/SpawnHelper$Checker
	m	(Laoq;Lfu;Lcgy;)Z	test	test
		p	1	type	type
		p	2	pos	pos
		p	3	chunk	chunk
c	bqj$d	net/minecraft/world/SpawnHelper$Info
	f	I	a	spawningChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	groupToCount
	f	Lbqn;	c	densityField
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	groupToCountView
	f	Lfu;	e	cachedPos
	f	Laoq;	f	cachedEntityType
	f	D	g	cachedDensityMass
	m	(ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lbqn;)V	<init>	<init>
		p	1	spawningChunkCount	spawningChunkCount
		p	2	groupToCount	groupToCount
		p	3	densityField	densityField
	m	(Laoz;Lcgy;)V	a	run
		c	@see SpawnHelper.Runner#run(MobEntity, Chunk)
		p	1	entity	entity
		p	2	chunk	chunk
	m	(Lapa;)Z	a	isBelowCap
		p	1	group	group
	m	()I	a	getSpawningChunkCount
	m	(Laoq;Lfu;Lcgy;)Z	a	test
		c	@see SpawnHelper.Checker#test(EntityType, BlockPos, Chunk)
		p	1	type	type
		p	2	pos	pos
		p	3	chunk	chunk
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getGroupToCount
c	bqk	net/minecraft/world/gen/chunk/VerticalBlockSample
	f	[Lcfj;	a	states
	m	([Lcfj;)V	<init>	<init>
		p	1	states	states
c	bql	net/minecraft/world/chunk/ChunkCache
	f	I	a	minX
	f	I	b	minZ
	f	[[Lcgy;	c	chunks
	f	Z	d	empty
	f	Lbqb;	e	world
	m	(Lbqb;Lfu;Lfu;)V	<init>	<init>
		p	1	world	world
		p	2	minPos	minPos
		p	3	maxPos	maxPos
c	bqm	net/minecraft/world/PortalForcer
	f	Lzd;	a	world
	f	Ljava/util/Random;	b	random
	m	(Lzd;)V	<init>	<init>
		p	1	world	world
	m	(Laom;F)Z	a	usePortal
		p	1	entity	entity
		p	2	yawOffset	yawOffset
	m	(Laom;)Z	a	createPortal
		p	1	entity	entity
	m	(Lfu;Ldem;Lfz;DDZ)Lcfo$c;	a	getPortal
		p	1	pos	pos
		p	3	direction	direction
		p	4	x	x
		p	6	y	y
		p	8	canActivate	canActivate
c	bqn	net/minecraft/util/math/GravityField
	c	Represents a density field in an area. Consider visualizing it like real\nlife gravity's distortion of space.
	f	Ljava/util/List;	a	points
	m	(Lfu;D)V	a	addPoint
		c	Adds a point to the gravity field.
		p	1	pos	pos
		p	2	mass	mass
	m	(Lfu;D)D	b	calculate
		c	Calculate the gravity on a potential point at {@code pos} with {@code mass}.
		p	1	pos	pos
		p	2	mass	mass
c	bqn$a	net/minecraft/util/math/GravityField$Point
	f	Lfu;	a	pos
	f	D	b	mass
	m	(Lfu;D)V	<init>	<init>
		p	1	pos	pos
		p	2	mass	mass
	m	(Lfu;)D	a	getGravityFactor
		p	1	pos	pos
c	bqo	net/minecraft/server/world/ServerTickScheduler
	f	Ljava/util/function/Predicate;	a	invalidObjPredicate
	f	Ljava/util/function/Function;	b	idToName
	f	Ljava/util/Set;	c	scheduledTickActions
	f	Ljava/util/TreeSet;	d	scheduledTickActionsInOrder
	f	Lzd;	e	world
	f	Ljava/util/Queue;	f	currentTickActions
	f	Ljava/util/List;	g	consumedTickActions
	f	Ljava/util/function/Consumer;	h	tickConsumer
	m	(Lzd;Ljava/util/function/Predicate;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	world	world
		p	2	invalidObjPredicate	invalidObjPredicate
		p	3	idToName	idToName
	m	(Lctd;Lfu;)V	a	copyScheduledTicks
		p	1	box	box
		p	2	offset	offset
	m	()I	a	getTicks
	m	(Lbph;ZZ)Ljava/util/List;	a	getScheduledTicksInChunk
		p	2	updateState	updateState
		p	3	getStaleTicks	getStaleTicks
	m	(Ljava/util/function/Function;Ljava/lang/Iterable;J)Llk;	a	serializeScheduledTicks
		p	0	identifierProvider	identifierProvider
		p	1	scheduledTicks	scheduledTicks
		p	2	time	time
	m	(Lbph;)Llk;	a	toTag
	m	(Ljava/util/List;Ljava/util/Collection;Lctd;Z)Ljava/util/List;	a	transferTicksInBounds
		p	1	dst	dst
		p	2	src	src
		p	3	bounds	bounds
		p	4	move	move
	m	(Lbqs;)V	a	addScheduledTick
	m	(Lctd;ZZ)Ljava/util/List;	a	getScheduledTicks
		p	1	bounds	bounds
		p	2	updateState	updateState
		p	3	getStaleTicks	getStaleTicks
	m	()V	b	tick
c	bqp	net/minecraft/world/MobSpawnerEntry
	f	Lle;	b	entityTag
	m	(Lle;)V	<init>	<init>
		p	1	tag	tag
	m	(ILle;)V	<init>	<init>
		p	1	weight	weight
		p	2	entityTag	entityTag
	m	()Lle;	a	serialize
	m	()Lle;	b	getEntityTag
c	bqq	net/minecraft/world/gen/StructureAccessor
	f	Lbqc;	a	world
	f	Lcix;	b	options
	m	(Lbqc;Lcix;)V	<init>	<init>
		p	1	world	world
		p	2	options	options
	m	(Lfu;Lctz;)Z	a	method_28387
		p	1	structureStart	structureStart
	m	(ZLfu;Lctz;)Z	a	method_28389
		p	2	structureStart	structureStart
	m	(Lctz;)Z	a	method_26972
		p	0	structureStart	structureStart
	m	(Lgo;Lcml;Lctz;Lchf;)V	a	setStructureStart
		p	1	pos	pos
		p	2	feature	feature
		p	3	structureStart	structureStart
		p	4	holder	holder
	m	(Lgo;Lcml;Lchf;)Lctz;	a	getStructureStart
		p	1	pos	pos
		p	2	feature	feature
		p	3	holder	holder
	m	(Lgo;Lcml;JLchf;)V	a	addStructureReference
		p	1	pos	pos
		p	2	feature	feature
		p	3	reference	reference
		p	5	holder	holder
	m	(Lfu;Lcty;)Z	a	method_28386
		p	1	piece	piece
	m	(Lzj;)Lbqq;	a	method_29951
		p	1	region	region
	m	()Z	a	shouldGenerateStructures
	m	(Lcml;Lgo;)Lctz;	a	method_26971
		p	2	pos	pos
	m	(Ljava/lang/Long;)Lgo;	a	method_26977
		p	0	pos	pos
	m	(Lgo;Lcml;)Ljava/util/stream/Stream;	a	getStructuresWithChildren
		p	1	pos	pos
		p	2	feature	feature
c	bqr	net/minecraft/world/TickScheduler
	m	(Lfu;Ljava/lang/Object;)Z	a	isScheduled
		p	1	pos	pos
		p	2	object	object
	m	(Lfu;Ljava/lang/Object;I)V	a	schedule
		p	1	pos	pos
		p	2	object	object
		p	3	delay	delay
	m	(Lfu;Ljava/lang/Object;ILbqt;)V	a	schedule
		p	1	pos	pos
		p	2	object	object
		p	3	delay	delay
		p	4	priority	priority
	m	(Lfu;Ljava/lang/Object;)Z	b	isTicking
		p	1	pos	pos
		p	2	object	object
c	bqs	net/minecraft/world/ScheduledTick
	f	Lfu;	a	pos
	f	J	b	time
	f	Lbqt;	c	priority
	f	J	d	idCounter
	f	Ljava/lang/Object;	e	object
	f	J	f	id
	m	(Lfu;Ljava/lang/Object;JLbqt;)V	<init>	<init>
		p	1	pos	pos
		p	2	t	t
		p	3	time	time
		p	5	priority	priority
	m	(Lfu;Ljava/lang/Object;)V	<init>	<init>
		p	1	pos	pos
		p	2	t	t
	m	()Ljava/util/Comparator;	a	getComparator
	m	()Ljava/lang/Object;	b	getObject
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bqt	net/minecraft/world/TickPriority
	f	I	h	index
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	index	index
	m	()I	a	getIndex
	m	(I)Lbqt;	a	byIndex
		p	0	index	index
c	bqu	net/minecraft/world/ServerWorldAccess
	m	()J	B	getSeed
c	bqv	net/minecraft/sound/BiomeAdditionsSound
	c	Represents an "additions sound" for a biome.
	f	Lack;	b	event
	f	D	c	chance
	m	(Lack;D)V	<init>	<init>
		p	1	event	event
		p	2	chance	chance
	m	()Lack;	a	getEvent
	m	()D	b	getChance
		c	Returns the chance of this addition sound to play at any tick.
c	bqw	net/minecraft/sound/BiomeMoodSound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbqw;	b	CAVE
	f	Lack;	c	event
	f	I	d	cultivationTicks
	f	I	e	spawnRange
	f	D	f	extraDistance
	m	(Lack;IID)V	<init>	<init>
		p	1	event	event
		p	2	cultivationTicks	cultivationTicks
		p	3	spawnRange	spawnRange
		p	4	extraDistance	extraDistance
	m	()Lack;	a	getEvent
	m	()I	b	getCultivationTicks
		c	Returns the ticks it takes for entering the mood environment (a totally\ndark cave) to playing the mood sound, or the inverse of the per-tick.
	m	()I	c	getSpawnRange
		c	Returns the chebyshev distance from which the mood sound can play to\nthe player.
	m	()D	d	getExtraDistance
		c	Returns the extra distance of the sound from the player when the sound\nplays from the mood position.\n\n<p>The sound is actually played at a position along the line on the\nthree-dimensional vector from the player to the chosen mood position that\nis this distance to the mood position and this distance farther from the\nplayer.
c	bqx	net/minecraft/world/biome/BiomeParticleConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	c	chance
	m	(Ljava/util/Random;)Z	a	shouldAddParticle
	m	()Lhf;	a	getParticleType
c	bqy	net/minecraft/world/biome/BadlandsBiome
c	bqz	net/minecraft/world/biome/BadlandsPlateauBiome
c	br	net/minecraft/advancement/criterion/OnKilledCriterion
	f	Luh;	a	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
	m	(Lze;Laom;Lanw;)V	a	trigger
		p	1	player	player
		p	2	entity	entity
		p	3	killingDamage	killingDamage
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbr$a;	a	conditionsFromJson
c	br$a	net/minecraft/advancement/criterion/OnKilledCriterion$Conditions
	f	Lbe$b;	a	entity
	f	Lau;	b	killingBlow
	m	(Luh;Lbe$b;Lbe$b;Lau;)V	<init>	<init>
		p	1	id	id
		p	2	player	player
		p	3	entity	entity
		p	4	killingBlow	killingBlow
	m	(Lbe$a;)Lbr$a;	a	createPlayerKilledEntity
		p	0	killedEntityPredicateBuilder	killedEntityPredicateBuilder
	m	(Lbe$a;Lau$a;)Lbr$a;	a	createPlayerKilledEntity
		p	0	killedEntityPredicateBuilder	killedEntityPredicateBuilder
		p	1	killingBlowBuilder	killingBlowBuilder
	m	(Lze;Ldat;Lanw;)Z	a	test
		p	1	player	player
		p	2	killedEntityContext	killedEntityContext
		p	3	killingBlow	killingBlow
	m	()Lbr$a;	c	createPlayerKilledEntity
	m	()Lbr$a;	d	createEntityKilledPlayer
c	bra	net/minecraft/world/biome/BambooJungleBiome
c	brb	net/minecraft/world/biome/BambooJungleHillsBiome
c	brc	net/minecraft/world/biome/BasaltDeltasBiome
c	brd	net/minecraft/world/biome/BeachBiome
c	bre	net/minecraft/world/biome/Biome
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	c	BIOMES
	f	Lge;	d	PARENT_BIOME_ID_MAP
	f	Lcwf;	e	TEMPERATURE_NOISE
	f	Lcwf;	f	FOLIAGE_NOISE
	f	Ljava/lang/String;	g	translationKey
	f	F	h	depth
	f	F	i	scale
	f	F	j	temperature
	f	F	k	downfall
	f	Ljava/lang/String;	l	parent
	f	Lcvj;	m	surfaceBuilder
	f	Lbre$b;	n	category
	f	Lbre$f;	o	precipitation
	f	Lbri;	p	effects
	f	Ljava/util/Map;	q	carvers
	f	Ljava/util/Map;	r	features
	f	Ljava/util/List;	s	flowerFeatures
	f	I	t	skyColor
	f	Ljava/util/Map;	u	structureFeatures
	f	Ljava/util/Map;	v	spawns
	f	Ljava/util/Map;	w	spawnDensities
	f	Ljava/util/List;	x	noisePoints
	f	Ljava/lang/ThreadLocal;	y	temperatureCache
	m	(Lbre$a;)V	<init>	<init>
		p	1	settings	settings
	m	()Lcvy;	A	getSurfaceConfig
	m	()Ljava/util/stream/Stream;	B	streamNoises
	m	()Ljava/lang/String;	C	getParent
	m	()I	D	calculateSkyColor
	m	(Lcin$b;)Ljava/util/List;	a	getFeaturesForStep
		p	1	feature	feature
	m	(Laoq;DD)V	a	addSpawnDensity
		p	1	type	type
		p	2	maxMass	maxMass
		p	4	mass	mass
	m	(Lbqd;Lfu;)Z	a	canSetIce
		p	1	world	world
		p	2	blockPos	blockPos
	m	(Lcin$b;Lckb;)V	a	addFeature
		p	1	step	step
		p	2	configuredFeature	configuredFeature
	m	(Laoq;)Lbre$e;	a	getSpawnDensity
		p	1	type	type
	m	(DD)I	a	getGrassColorAt
		p	1	x	x
		p	3	z	z
	m	(Lcin$b;Lbqq;Lcha;Lbqu;JLciy;Lfu;)V	a	generateFeatureStep
		p	1	step	step
		p	2	structureAccessor	structureAccessor
		p	3	chunkGenerator	chunkGenerator
		p	5	populationSeed	populationSeed
		p	7	chunkRandom	chunkRandom
		p	8	pos	pos
	m	(Lcjh;Lcja;)Lcjc;	a	configureCarver
		p	0	carver	carver
		p	1	config	config
	m	(Lapa;)Ljava/util/List;	a	getEntitySpawnList
		p	1	group	group
	m	(Lbqd;Lfu;Z)Z	a	canSetIce
		p	1	world	world
		p	2	pos	pos
		p	3	doWaterCheck	doWaterCheck
	m	(Ljava/util/Random;Lcgy;IIIDLcfj;Lcfj;IJ)V	a	buildSurface
		p	1	random	random
		p	2	chunk	chunk
		p	3	x	x
		p	4	z	z
		p	5	worldHeight	worldHeight
		p	6	noise	noise
		p	8	defaultBlock	defaultBlock
		p	9	defaultFluid	defaultFluid
		p	10	seaLevel	seaLevel
		p	11	seed	seed
	m	(Lfu;)F	a	computeTemperature
		p	1	blockPos	blockPos
	m	(Lcin$a;)Ljava/util/List;	a	getCarversForStep
		p	1	carver	carver
	m	(Lbre;)Lbre;	a	getModifiedBiome
		p	0	biome	biome
	m	()I	a	getFoliageColor
	m	(Lcin$a;Lcjc;)V	a	addCarver
		p	1	step	step
		p	2	configuredCarver	configuredCarver
	m	(Lapa;Lbre$g;)V	a	addSpawn
		p	1	group	group
		p	2	spawnEntry	spawnEntry
	m	(Lcml;)Z	a	hasStructureFeature
		p	1	structureFeature	structureFeature
	m	(Lckc;)V	a	addStructureFeature
		p	1	configuredStructureFeature	configuredStructureFeature
	m	()Z	b	hasParent
	m	(Lfu;)F	b	getTemperature
		p	1	blockPos	blockPos
	m	(Lbqd;Lfu;)Z	b	canSetSnow
		p	1	world	world
		p	2	blockPos	blockPos
	m	()I	c	getSkyColor
	m	()Lbre$f;	d	getPrecipitation
	m	()Z	e	hasHighHumidity
	m	()F	f	getMaxSpawnChance
	m	()Ljava/util/List;	h	getFlowerFeatures
	m	()I	i	getFogColor
	m	()Lbre$c;	j	getTemperatureGroup
	m	()F	k	getDepth
	m	()F	l	getRainfall
	m	()Lmr;	m	getName
	m	()Ljava/lang/String;	n	getTranslationKey
	m	()F	o	getScale
	m	()F	p	getTemperature
	m	()Lbri;	q	getEffects
	m	()I	r	getWaterColor
	m	()I	s	getWaterFogColor
	m	()Ljava/util/Optional;	t	getParticleConfig
	m	()Ljava/util/Optional;	u	getLoopSound
	m	()Ljava/util/Optional;	v	getMoodSound
	m	()Ljava/util/Optional;	w	getAdditionsSound
	m	()Lbre$b;	y	getCategory
	m	()Lcvj;	z	getSurfaceBuilder
c	bre$a	net/minecraft/world/biome/Biome$Settings
	f	Lcvj;	a	surfaceBuilder
	f	Lbre$f;	b	precipitation
	f	Lbre$b;	c	category
	f	Ljava/lang/Float;	d	depth
	f	Ljava/lang/Float;	e	scale
	f	Ljava/lang/Float;	f	temperature
	f	Ljava/lang/Float;	g	downfall
	f	Ljava/lang/String;	h	parent
	f	Ljava/util/List;	i	noises
	f	Lbri;	j	specialEffects
	m	(Ljava/util/List;)Lbre$a;	a	noises
		p	1	noises	noises
	m	(Lbre$f;)Lbre$a;	a	precipitation
		p	1	precipitation	precipitation
	m	(Lcvw;Lcvy;)Lbre$a;	a	configureSurfaceBuilder
		p	1	surfaceBuilder	surfaceBuilder
		p	2	config	config
	m	(Ljava/lang/String;)Lbre$a;	a	parent
		c	Sets the biome that this will replace as a modified version of the biome.
		p	1	parent	parent
			c	the string identifier of the biome to be replaced
	m	(Lbri;)Lbre$a;	a	effects
		p	1	effects	effects
	m	(Lbre$b;)Lbre$a;	a	category
		p	1	category	category
	m	(Lcvj;)Lbre$a;	a	surfaceBuilder
		p	1	surfaceBuilder	surfaceBuilder
	m	(F)Lbre$a;	a	depth
		p	1	depth	depth
	m	(F)Lbre$a;	b	scale
		p	1	scale	scale
	m	(F)Lbre$a;	c	temperature
		p	1	temperature	temperature
	m	(F)Lbre$a;	d	downfall
		p	1	downfall	downfall
c	bre$b	net/minecraft/world/biome/Biome$Category
	f	Ljava/util/Map;	s	NAME_MAP
	f	Ljava/lang/String;	t	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	b	getName
c	bre$c	net/minecraft/world/biome/Biome$TemperatureGroup
	f	Ljava/util/Map;	e	NAME_MAP
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	bre$d	net/minecraft/world/biome/Biome$MixedNoisePoint
	c	Represents a point in a multi-dimensional cartesian plane. Mixed-noise\nbiome generator picks the closest noise point from its selected point\nand choose the biome associated to that closest point. Another factor,\nrarity potential, favors larger differences in values instead, contrary\nto other point values.
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	temperature
	f	F	c	humidity
	f	F	d	altitude
	f	F	e	weirdness
	f	F	f	weight
		c	This value awards another point with value farthest from this one; i.e.\nunlike other points where closer distance is better, for this value the\nfarther the better. The result of the different values can be\napproximately modeled by a hyperbola weight=cosh(peak-1) as used by the\nmixed-noise generator.
	m	(FFFFF)V	<init>	<init>
		p	1	temperature	temperature
		p	2	humidity	humidity
		p	3	altitude	altitude
		p	4	weirdness	weirdness
		p	5	weight	weight
	m	(Lbre$d;)F	a	calculateDistanceTo
		c	Calculates the distance from this noise point to another one. The\ndistance is a squared distance in a multi-dimensional cartesian plane\nfrom a mathematical point of view, with a special parameter that\nreduces the calculated distance.\n\n<p>For most fields except rarity potential, smaller difference between\ntwo points' fields will lead to smaller distance. For rarity potential,\nlarger differences lead to smaller distance.\n\n<p>This distance is used by the mixed-noise biome layer source. The\nlayer source calculates an arbitrary noise point, and selects the\nbiome that offers a closest point to its arbitrary point.
		p	1	other	other
			c	the other noise point
c	bre$e	net/minecraft/world/biome/Biome$SpawnDensity
	c	Embodies the density limit information of a type of entity in entity\nspawning logic. The density field is generated for all entities spawned\nthan a specific type of entity.
	f	D	a	gravityLimit
	f	D	b	mass
	m	(DD)V	<init>	<init>
		p	1	gravityLimit	gravityLimit
		p	3	mass	mass
	m	()D	a	getGravityLimit
		c	Represents the cap of gravity as in {@link\nnet.minecraft.util.math.GravityField#calculate(BlockPos, double)} for\nentity spawning. If the cap is exceeded, the entity spawning attempt\nwill skip.
	m	()D	b	getMass
		c	Represents the mass of each entity spawned. Will affect gravity\ncalculation.
c	bre$f	net/minecraft/world/biome/Biome$Precipitation
	f	Ljava/util/Map;	e	NAME_MAP
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	b	getName
c	bre$g	net/minecraft/world/biome/Biome$SpawnEntry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laoq;	c	type
	f	I	d	minGroupSize
	f	I	e	maxGroupSize
	m	(Laoq;III)V	<init>	<init>
		p	1	type	type
		p	2	weight	weight
		p	3	minGroupSize	minGroupSize
		p	4	maxGroupSize	maxGroupSize
c	brf	net/minecraft/world/gen/feature/DefaultBiomeFeatures
	f	Lckc;	A	JUNGLE_RUINED_PORTAL
	f	Lckc;	B	SWAMP_RUINED_PORTAL
	f	Lckc;	C	MOUNTAIN_RUINED_PORTAL
	f	Lckc;	D	OCEAN_RUINED_PORTAL
	f	Lckc;	E	NETHER_RUINED_PORTAL
	f	Lcou;	F	OAK_TREE_CONFIG
	f	Lcou;	G	OAK_TREE_WITH_RARE_BEEHIVES_CONFIG
	f	Lcou;	H	OAK_TREE_WITH_BEEHIVES_CONFIG
	f	Lcou;	I	OAK_TREE_WITH_MORE_BEEHIVES_CONFIG
	f	Lcou;	J	JUNGLE_TREE_CONFIG
	f	Lcou;	K	JUNGLE_SAPLING_TREE_CONFIG
	f	Lcou;	L	PINE_TREE_CONFIG
	f	Lcou;	M	SPRUCE_TREE_CONFIG
	f	Lcou;	N	ACACIA_TREE_CONFIG
	f	Lcou;	O	BIRCH_TREE_CONFIG
	f	Lcou;	P	BIRCH_TREE_WITH_RARE_BEEHIVES_CONFIG
	f	Lcou;	Q	BIRCH_TREE_WITH_BEEHIVES_CONFIG
	f	Lcou;	R	BIRCH_TREE_WITH_MORE_BEEHIVES_CONFIG
	f	Lcou;	S	LARGE_BIRCH_TREE_CONFIG
	f	Lcou;	T	SWAMP_TREE_CONFIG
	f	Lcou;	U	FANCY_TREE_CONFIG
	f	Lcou;	V	FANCY_TREE_WITH_RARE_BEEHIVES_CONFIG
	f	Lcou;	W	FANCY_TREE_WITH_BEEHIVES_CONFIG
	f	Lcou;	X	FANCY_TREE_WITH_MORE_BEEHIVES_CONFIG
	f	Lcou;	Y	JUNGLE_GROUND_BUSH_CONFIG
	f	Lcou;	Z	DARK_OAK_TREE_CONFIG
	f	Lckc;	a	PILLAGER_OUTPOST
	f	Lcog;	aA	LARGE_FERN_CONFIG
	f	Lcog;	aB	CACTUS_CONFIG
	f	Lcog;	aC	SUGAR_CANE_CONFIG
	f	Lcnf;	aD	HAY_PILE_CONFIG
	f	Lcnf;	aE	SNOW_PILE_CONFIG
	f	Lcnf;	aF	MELON_PILE_CONFIG
	f	Lcnf;	aG	PUMPKIN_PILE_CONFIG
	f	Lcnf;	aH	BLUE_ICE_PILE_CONFIG
	f	Lcxa;	aI	WATER_FLUID
	f	Lcxa;	aJ	LAVA_FLUID
	f	Lcor;	aK	WATER_SPRING_CONFIG
	f	Lcor;	aL	LAVA_SPRING_CONFIG
	f	Lcor;	aM	NETHER_SPRING_CONFIG
	f	Lcor;	aN	MIXED_NETHER_SPRING_CONFIG
	f	Lcor;	aO	ENCLOSED_NETHER_SPRING_CONFIG
	f	Lcor;	aP	SOUL_SAND_SPRING_CONFIG
	f	Lcor;	aQ	ENCLOSED_SOUL_SAND_SPRING_CONFIG
	f	Lcnj;	aR	BASALT_COLUMN_CONFIG
	f	Lcnj;	aS	TALL_BASALT_COLUMN_CONFIG
	f	Lcoj;	aT	BASALT_BLOB_CONFIG
	f	Lcoj;	aU	BLACKSTONE_BLOB_CONFIG
	f	Lcno;	aV	DELTA_CONFIG
	f	Lcnt;	aW	HUGE_RED_MUSHROOM_CONFIG
	f	Lcnt;	aX	HUGE_BROWN_MUSHROOM_CONFIG
	f	Lcnf;	aY	CRIMSON_ROOTS_CONFIG
	f	Lcnf;	aZ	WARPED_ROOTS_CONFIG
	f	Lcou;	aa	MEGA_SPRUCE_TREE_CONFIG
	f	Lcou;	ab	MEGA_PINE_TREE_CONFIG
	f	Lcou;	ac	MEGA_JUNGLE_TREE_CONFIG
	f	Lcog;	ad	GRASS_CONFIG
	f	Lcog;	ae	TAIGA_GRASS_CONFIG
	f	Lcog;	af	LUSH_GRASS_CONFIG
	f	Lcog;	ag	LILY_OF_THE_VALLEY_CONFIG
	f	Lcog;	ah	BLUE_ORCHID_CONFIG
	f	Lcog;	ai	DEFAULT_FLOWER_CONFIG
	f	Lcog;	aj	PLAINS_FLOWER_CONFIG
	f	Lcog;	ak	FOREST_FLOWER_CONFIG
	f	Lcog;	al	DEAD_BUSH_CONFIG
	f	Lcog;	am	MELON_PATCH_CONFIG
	f	Lcog;	an	PUMPKIN_PATCH_CONFIG
	f	Lcog;	ao	SWEET_BERRY_BUSH_CONFIG
	f	Lcog;	ap	NETHER_FIRE_CONFIG
	f	Lcog;	aq	SOUL_FIRE_CONFIG
	f	Lcog;	ar	LILY_PAD_CONFIG
	f	Lcog;	as	RED_MUSHROOM_CONFIG
	f	Lcog;	at	BROWN_MUSHROOM_CONFIG
	f	Lcog;	au	SOUL_SAND_CRIMSON_ROOTS_CONFIG
	f	Lcog;	av	LILAC_CONFIG
	f	Lcog;	aw	ROSE_BUSH_CONFIG
	f	Lcog;	ax	PEONY_CONFIG
	f	Lcog;	ay	SUNFLOWER_CONFIG
	f	Lcog;	az	TALL_GRASS_CONFIG
	f	Lckc;	b	NORMAL_MINESHAFT
	f	Lcfj;	bA	REDSTONE_ORE
	f	Lcfj;	bB	DIAMOND_ORE
	f	Lcfj;	bC	LAPIS_ORE
	f	Lcfj;	bD	STONE
	f	Lcfj;	bE	EMERALD_ORE
	f	Lcfj;	bF	INFESTED_STONE
	f	Lcfj;	bG	SAND
	f	Lcfj;	bH	CLAY
	f	Lcfj;	bI	GRASS_BLOCK
	f	Lcfj;	bJ	MOSSY_COBBLESTONE
	f	Lcfj;	bK	LARGE_FERN
	f	Lcfj;	bL	TALL_GRASS
	f	Lcfj;	bM	LILAC
	f	Lcfj;	bN	ROSE_BUSH
	f	Lcfj;	bO	PEONY
	f	Lcfj;	bP	BROWN_MUSHROOM
	f	Lcfj;	bQ	RED_MUSHROOM
	f	Lcfj;	bR	SEAGRASS
	f	Lcfj;	bS	PACKED_ICE
	f	Lcfj;	bT	BLUE_ICE
	f	Lcfj;	bU	LILY_OF_THE_VALLEY
	f	Lcfj;	bV	BLUE_ORCHID
	f	Lcfj;	bW	POPPY
	f	Lcfj;	bX	DANDELION
	f	Lcfj;	bY	DEAD_BUSH
	f	Lcfj;	bZ	MELON
	f	Lcnf;	ba	NETHER_SPROUTS_CONFIG
	f	Lcfj;	bb	GRASS
	f	Lcfj;	bc	FERN
	f	Lcfj;	bd	PODZOL
	f	Lcfj;	be	OAK_LOG
	f	Lcfj;	bf	OAK_LEAVES
	f	Lcfj;	bg	JUNGLE_LOG
	f	Lcfj;	bh	JUNGLE_LEAVES
	f	Lcfj;	bi	SPRUCE_LOG
	f	Lcfj;	bj	SPRUCE_LEAVES
	f	Lcfj;	bk	ACACIA_LOG
	f	Lcfj;	bl	ACACIA_LEAVES
	f	Lcfj;	bm	BIRCH_LOG
	f	Lcfj;	bn	BIRCH_LEAVES
	f	Lcfj;	bo	DARK_OAK_LOG
	f	Lcfj;	bp	DARK_OAK_LEAVES
	f	Lcfj;	bq	WATER
	f	Lcfj;	br	LAVA
	f	Lcfj;	bs	DIRT
	f	Lcfj;	bt	GRAVEL
	f	Lcfj;	bu	GRANITE
	f	Lcfj;	bv	DIORITE
	f	Lcfj;	bw	ANDESITE
	f	Lcfj;	bx	COAL_ORE
	f	Lcfj;	by	IRON_ORE
	f	Lcfj;	bz	GOLD_ORE
	f	Lckc;	c	MESA_MINESHAFT
	f	Lcfj;	ca	PUMPKIN
	f	Lcfj;	cb	SWEET_BERRY_BUSH
	f	Lcfj;	cc	FIRE
	f	Lcfj;	cd	SOUL_FIRE
	f	Lcfj;	ce	NETHERRACK
	f	Lcfj;	cf	SOUL_SOIL
	f	Lcfj;	cg	CRIMSON_ROOTS
	f	Lcfj;	ch	LILY_PAD
	f	Lcfj;	ci	SNOW
	f	Lcfj;	cj	JACK_O_LANTERN
	f	Lcfj;	ck	SUNFLOWER
	f	Lcfj;	cl	CACTUS
	f	Lcfj;	cm	SUGAR_CANE
	f	Lcfj;	cn	RED_MUSHROOM_BLOCK
	f	Lcfj;	co	BROWN_MUSHROOM_BLOCK
	f	Lcfj;	cp	MUSHROOM_BLOCK
	f	Lcfj;	cq	NETHER_GOLD_ORE
	f	Lcfj;	cr	NETHER_QUARTZ_ORE
	f	Lcfj;	cs	WARPED_STEM
	f	Lcfj;	ct	WARPED_WART_BLOCK
	f	Lcfj;	cu	NETHER_WART_BLOCK
	f	Lcfj;	cv	CRIMSON_STEM
	f	Lcfj;	cw	SHROOMLIGHT
	f	Lcqj;	cx	VERY_RARE_BEEHIVES_CONFIG
	f	Lcqj;	cy	REGULAR_BEEHIVES_CONFIG
	f	Lcqj;	cz	MORE_BEEHIVES_CONFIG
	f	Lckc;	d	MANSION
	f	Lckc;	e	JUNGLE_PYRAMID
	f	Lckc;	f	DESERT_PYRAMID
	f	Lckc;	g	IGLOO
	f	Lckc;	h	SUNKEN_SHIPWRECK
	f	Lckc;	i	BEACHED_SHIPWRECK
	f	Lckc;	j	SWAMP_HUT
	f	Lckc;	k	STRONGHOLD
	f	Lckc;	l	MONUMENT
	f	Lckc;	m	COLD_OCEAN_RUIN
	f	Lckc;	n	WARM_OCEAN_RUIN
	f	Lckc;	o	FORTRESS
	f	Lckc;	p	NETHER_FOSSIL
	f	Lckc;	q	END_CITY
	f	Lckc;	r	BURIED_TREASURE
	f	Lckc;	s	BASTION_REMNANT
	f	Lckc;	t	PLAINS_VILLAGE
	f	Lckc;	u	DESERT_VILLAGE
	f	Lckc;	v	SAVANNA_VILLAGE
	f	Lckc;	w	SNOWY_VILLAGE
	f	Lckc;	x	TAIGA_VILLAGE
	f	Lckc;	y	STANDARD_RUINED_PORTAL
	f	Lckc;	z	DESERT_RUINED_PORTAL
	m	(Lbre;)V	A	addSavannaTrees
		p	0	biome	biome
	m	(Lbre;)V	B	addExtraSavannaTrees
		p	0	biome	biome
	m	(Lbre;)V	C	addMountainTrees
		p	0	biome	biome
	m	(Lbre;)V	D	addExtraMountainTrees
		p	0	biome	biome
	m	(Lbre;)V	E	addJungleTrees
		p	0	biome	biome
	m	(Lbre;)V	F	addJungleEdgeTrees
		p	0	biome	biome
	m	(Lbre;)V	G	addBadlandsPlateauTrees
		p	0	biome	biome
	m	(Lbre;)V	H	addSnowySpruceTrees
		p	0	biome	biome
	m	(Lbre;)V	I	addGiantSpruceTaigaTrees
		p	0	biome	biome
	m	(Lbre;)V	J	addGiantTreeTaigaTrees
		p	0	biome	biome
	m	(Lbre;)V	K	addJungleGrass
		p	0	biome	biome
	m	(Lbre;)V	L	addSavannaTallGrass
		p	0	biome	biome
	m	(Lbre;)V	M	addShatteredSavannaGrass
		p	0	biome	biome
	m	(Lbre;)V	N	addSavannaGrass
		p	0	biome	biome
	m	(Lbre;)V	O	addBadlandsGrass
		p	0	biome	biome
	m	(Lbre;)V	P	addForestFlowers
		p	0	biome	biome
	m	(Lbre;)V	Q	addForestGrass
		p	0	biome	biome
	m	(Lbre;)V	R	addSwampFeatures
		p	0	biome	biome
	m	(Lbre;)V	S	addMushroomFieldsFeatures
		p	0	biome	biome
	m	(Lbre;)V	T	addPlainsFeatures
		p	0	biome	biome
	m	(Lbre;)V	U	addDesertDeadBushes
		p	0	biome	biome
	m	(Lbre;)V	V	addGiantTaigaGrass
		p	0	biome	biome
	m	(Lbre;)V	W	addDefaultFlowers
		p	0	biome	biome
	m	(Lbre;)V	X	addExtraDefaultFlowers
		p	0	biome	biome
	m	(Lbre;)V	Y	addDefaultGrass
		p	0	biome	biome
	m	(Lbre;)V	Z	addTaigaGrass
		p	0	biome	biome
	m	(Lbre;II)V	a	addNetherOres
		p	0	biome	biome
		p	1	goldCount	goldCount
		p	2	quartzCount	quartzCount
	m	(Lbre;)V	a	addBadlandsUndergroundStructures
		p	0	biome	biome
	m	(Lbre;)V	aa	addPlainsTallGrass
		p	0	biome	biome
	m	(Lbre;)V	ab	addDefaultMushrooms
		p	0	biome	biome
	m	(Lbre;)V	ac	addDefaultVegetation
		p	0	biome	biome
	m	(Lbre;)V	ad	addBadlandsVegetation
		p	0	biome	biome
	m	(Lbre;)V	ae	addJungleVegetation
		p	0	biome	biome
	m	(Lbre;)V	af	addDesertVegetation
		p	0	biome	biome
	m	(Lbre;)V	ag	addSwampVegetation
		p	0	biome	biome
	m	(Lbre;)V	ah	addDesertFeatures
		p	0	biome	biome
	m	(Lbre;)V	ai	addFossils
		p	0	biome	biome
	m	(Lbre;)V	aj	addKelp
		p	0	biome	biome
	m	(Lbre;)V	ak	addSeagrassOnStone
		p	0	biome	biome
	m	(Lbre;)V	al	addSeagrass
		p	0	biome	biome
	m	(Lbre;)V	am	addMoreSeagrass
		p	0	biome	biome
	m	(Lbre;)V	an	addLessKelp
		p	0	biome	biome
	m	(Lbre;)V	ao	addSprings
		p	0	biome	biome
	m	(Lbre;)V	ap	addIcebergs
		p	0	biome	biome
	m	(Lbre;)V	aq	addBlueIce
		p	0	biome	biome
	m	(Lbre;)V	ar	addFrozenTopLayer
		p	0	biome	biome
	m	(Lbre;)V	as	addNetherMineables
		p	0	biome	biome
	m	(Lbre;)V	at	addAncientDebris
		p	0	biome	biome
	m	(Lbre;)V	au	addCrimsonForestVegetation
		p	0	biome	biome
	m	(Lbre;)V	av	addWarpedForestVegetation
		p	0	biome	biome
	m	(Lbre;)V	b	addDefaultUndergroundStructures
		p	0	biome	biome
	m	(Lbre;)V	c	addOceanStructures
		p	0	biome	biome
	m	(Lbre;)V	d	addLandCarvers
		p	0	biome	biome
	m	(Lbre;)V	e	addOceanCarvers
		p	0	biome	biome
	m	(Lbre;)V	f	addDefaultLakes
		p	0	biome	biome
	m	(Lbre;)V	g	addDesertLakes
		p	0	biome	biome
	m	(Lbre;)V	h	addDungeons
		p	0	biome	biome
	m	(Lbre;)V	i	addMineables
		p	0	biome	biome
	m	(Lbre;)V	j	addDefaultOres
		p	0	biome	biome
	m	(Lbre;)V	k	addExtraGoldOre
		p	0	biome	biome
	m	(Lbre;)V	l	addEmeraldOre
		p	0	biome	biome
	m	(Lbre;)V	m	addInfestedStone
		p	0	biome	biome
	m	(Lbre;)V	n	addDefaultDisks
		p	0	biome	biome
	m	(Lbre;)V	o	addClay
		p	0	biome	biome
	m	(Lbre;)V	p	addMossyRocks
		p	0	biome	biome
	m	(Lbre;)V	q	addLargeFerns
		p	0	biome	biome
	m	(Lbre;)V	r	addSweetBerryBushesSnowy
		p	0	biome	biome
	m	(Lbre;)V	s	addSweetBerryBushes
		p	0	biome	biome
	m	(Lbre;)V	t	addBamboo
		p	0	biome	biome
	m	(Lbre;)V	u	addBambooJungleTrees
		p	0	biome	biome
	m	(Lbre;)V	v	addTaigaTrees
		p	0	biome	biome
	m	(Lbre;)V	w	addWaterBiomeOakTrees
		p	0	biome	biome
	m	(Lbre;)V	x	addBirchTrees
		p	0	biome	biome
	m	(Lbre;)V	y	addForestTrees
		p	0	biome	biome
	m	(Lbre;)V	z	addTallBirchTrees
		p	0	biome	biome
c	brg	net/minecraft/world/biome/source/BiomeAccess
	f	Lbrg$a;	a	storage
	f	J	b	seed
	f	Lbrj;	c	type
	m	(Lbrg$a;JLbrj;)V	<init>	<init>
		p	1	storage	storage
		p	2	seed	seed
		p	4	type	type
	m	(Lbrh;)Lbrg;	a	withSource
		p	1	source	source
	m	(J)J	a	hashSeed
		p	0	seed	seed
	m	(III)Lbre;	a	getBiomeForNoiseGen
		p	1	biomeX	biomeX
		p	2	biomeY	biomeY
		p	3	biomeZ	biomeZ
	m	(Lfu;)Lbre;	a	getBiome
		p	1	pos	pos
	m	(DDD)Lbre;	a	getBiome
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfu;)Lbre;	b	method_27344
		p	1	pos	pos
c	brg$a	net/minecraft/world/biome/source/BiomeAccess$Storage
	m	(III)Lbre;	b	getBiomeForNoiseGen
		p	1	biomeX	biomeX
		p	2	biomeY	biomeY
		p	3	biomeZ	biomeZ
c	brh	net/minecraft/world/biome/source/BiomeSource
	f	Ljava/util/Map;	b	structureFeatures
	f	Ljava/util/Set;	c	topMaterials
	f	Ljava/util/List;	d	biomes
	f	Ljava/util/List;	e	SPAWN_BIOMES
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	biomes	biomes
	m	(J)Lbrh;	a	withSeed
		p	1	seed	seed
	m	(IIIILjava/util/List;Ljava/util/Random;)Lfu;	a	locateBiome
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	radius	radius
		p	5	biomes	biomes
		p	6	random	random
	m	(Lcml;)Z	a	hasStructureFeature
		p	1	feature	feature
	m	(IIIIILjava/util/List;Ljava/util/Random;Z)Lfu;	a	locateBiome
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	radius	radius
		p	6	biomes	biomes
		p	7	random	random
	m	(IIII)Ljava/util/Set;	a	getBiomesInArea
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	radius	radius
	m	()Ljava/util/List;	b	getSpawnBiomes
	m	()Ljava/util/Set;	d	getTopMaterials
c	bri	net/minecraft/world/biome/BiomeEffects
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	fogColor
	f	I	c	waterColor
	f	I	d	waterFogColor
	f	Ljava/util/Optional;	e	particleConfig
	f	Ljava/util/Optional;	f	loopSound
	f	Ljava/util/Optional;	g	moodSound
	f	Ljava/util/Optional;	h	additionsSound
	f	Ljava/util/Optional;	i	music
	m	(IIILjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1	fogColor	fogColor
		p	2	waterColor	waterColor
		p	3	waterFogColor	waterFogColor
		p	4	particleConfig	particleConfig
		p	5	loopSound	loopSound
		p	6	moodSound	moodSound
		p	7	additionsSound	additionsSound
		p	8	music	music
	m	()I	a	getFogColor
	m	()I	b	getWaterColor
	m	()I	c	getWaterFogColor
	m	()Ljava/util/Optional;	d	getParticleConfig
	m	()Ljava/util/Optional;	e	getLoopSound
		c	Returns the loop sound.\n\n<p>A loop sound is played continuously as an ambient sound whenever the\nplayer is in the biome with this effect.
	m	()Ljava/util/Optional;	f	getMoodSound
		c	Returns the mood sound.\n\n<p>A mood sound is played once every 6000 to 17999 ticks as an ambient\nsound whenever the player is in the biome with this effect and near a\nposition that has 0 sky light and less than 7 combined light.\n\n<p>Overworld biomes have the regular cave sound as their mood sound,\nwhile three nether biomes in 20w10a have their dedicated mood sounds.
	m	()Ljava/util/Optional;	g	getAdditionsSound
		c	Returns the additions sound.\n\n<p>An additions sound is played at 1.1% chance every tick as an ambient\nsound whenever the player is in the biome with this effect.
c	bri$a	net/minecraft/world/biome/BiomeEffects$Builder
	f	Ljava/util/OptionalInt;	a	fogColor
	f	Ljava/util/OptionalInt;	b	waterColor
	f	Ljava/util/OptionalInt;	c	waterFogColor
	f	Ljava/util/Optional;	d	particleConfig
	f	Ljava/util/Optional;	e	loopSound
	f	Ljava/util/Optional;	f	moodSound
	f	Ljava/util/Optional;	g	additionsSound
	f	Ljava/util/Optional;	h	musicSound
	m	(Lack;)Lbri$a;	a	loopSound
		p	1	sound	sound
	m	(I)Lbri$a;	a	fogColor
		p	1	fogColor	fogColor
	m	()Lbri;	a	build
	m	(Lbqw;)Lbri$a;	a	moodSound
		p	1	moodSound	moodSound
	m	(Laci;)Lbri$a;	a	music
		p	1	music	music
	m	(Lbqx;)Lbri$a;	a	particleConfig
		p	1	particleConfig	particleConfig
	m	(Lbqv;)Lbri$a;	a	additionsSound
		p	1	additionsSound	additionsSound
	m	(I)Lbri$a;	b	waterColor
		p	1	waterColor	waterColor
	m	(I)Lbri$a;	c	waterFogColor
		p	1	waterFogColor	waterFogColor
c	brj	net/minecraft/world/biome/source/BiomeAccessType
	m	(JIIILbrg$a;)Lbre;	a	getBiome
		p	1	seed	seed
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	storage	storage
c	brk	net/minecraft/world/biome/Biomes
	f	Lbre;	b	DEFAULT
	m	(ILjava/lang/String;Lbre;)Lbre;	a	register
		p	0	rawId	rawId
		p	1	id	id
		p	2	biome	biome
c	brl	net/minecraft/world/biome/BirchForestBiome
c	brm	net/minecraft/world/biome/BirchForestHillsBiome
c	brn	net/minecraft/world/biome/source/CheckerboardBiomeSource
	f	Ljava/util/List;	f	biomeArray
	f	I	g	gridSize
	m	(Ljava/util/List;I)V	<init>	<init>
		p	2	size	size
c	bro	net/minecraft/world/biome/ColdOceanBiome
c	brp	net/minecraft/world/biome/CrimsonForestBiome
c	brq	net/minecraft/world/biome/DarkForestBiome
c	brr	net/minecraft/world/biome/DarkForestHillsBiome
c	brs	net/minecraft/world/biome/DeepColdOceanBiome
c	brt	net/minecraft/world/biome/DeepFrozenOceanBiome
	f	Lcwf;	t	noiseSampler
c	bru	net/minecraft/world/biome/DeepLukewarmOceanBiome
c	brv	net/minecraft/world/biome/DeepOceanBiome
c	brw	net/minecraft/world/biome/DeepWarmOceanBiome
c	brx	net/minecraft/world/biome/DesertBiome
c	bry	net/minecraft/world/biome/DesertHillsBiome
c	brz	net/minecraft/world/biome/DesertLakesBiome
c	bs	net/minecraft/advancement/criterion/LevitationCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbs$a;	a	conditionsFromJson
	m	(Lze;Ldem;I)V	a	trigger
		p	1	player	player
		p	2	startPos	startPos
		p	3	duration	duration
c	bs$a	net/minecraft/advancement/criterion/LevitationCriterion$Conditions
	f	Law;	a	distance
	f	Lbx$d;	b	duration
	m	(Lbe$b;Law;Lbx$d;)V	<init>	<init>
		p	1	player	player
		p	2	distance	distance
		p	3	duration	duration
	m	(Lze;Ldem;I)Z	a	matches
		p	1	player	player
		p	2	startPos	startPos
		p	3	duration	duration
	m	(Law;)Lbs$a;	a	create
		p	0	distance	distance
c	bsa	net/minecraft/world/biome/EndBarrensBiome
c	bsb	net/minecraft/world/biome/EndHighlandsBiome
c	bsc	net/minecraft/world/biome/EndMidlandsBiome
c	bsd	net/minecraft/world/biome/ErodedBadlandsBiome
c	bse	net/minecraft/world/biome/source/FixedBiomeSource
	f	Lbre;	f	biome
c	bsf	net/minecraft/world/biome/ForestBiome
c	bsg	net/minecraft/world/biome/FlowerForestBiome
c	bsh	net/minecraft/world/biome/FrozenOceanBiome
c	bsi	net/minecraft/world/biome/FrozenRiverBiome
c	bsj	net/minecraft/world/biome/source/VoronoiBiomeAccessType
	m	(JIIIDDD)D	a	calcSquaredDistance
		p	0	seed	seed
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	xFraction	xFraction
		p	7	yFraction	yFraction
		p	9	zFraction	zFraction
	m	(D)D	a	square
		p	0	d	d
	m	(J)D	a	distribute
		p	0	seed	seed
c	bsk	net/minecraft/world/biome/source/HorizontalVoronoiBiomeAccessType
c	bsl	net/minecraft/world/biome/GiantSpruceTaigaBiome
c	bsm	net/minecraft/world/biome/GiantSpruceTaigaHillsBiome
c	bsn	net/minecraft/world/biome/GiantTreeTaigaBiome
c	bso	net/minecraft/world/biome/GiantTreeTaigaHillsBiome
c	bsp	net/minecraft/world/biome/GravellyMountainsBiome
c	bsq	net/minecraft/world/biome/IceSpikesBiome
c	bsr	net/minecraft/world/biome/JungleBiome
c	bss	net/minecraft/world/biome/JungleEdgeBiome
c	bst	net/minecraft/world/biome/JungleHillsBiome
c	bsu	net/minecraft/world/biome/LukewarmOceanBiome
c	bsv	net/minecraft/world/biome/ModifiedBadlandsPlateauBiome
c	bsw	net/minecraft/world/biome/ModifiedGravellyMountainsBiome
c	bsx	net/minecraft/world/biome/ModifiedJungleBiome
c	bsy	net/minecraft/world/biome/ModifiedJungleEdgeBiome
c	bsz	net/minecraft/world/biome/ModifiedWoodedBadlandsPlateauBiome
c	bt	net/minecraft/predicate/LightPredicate
	f	Lbt;	a	ANY
	f	Lbx$d;	b	range
	m	(Lbx$d;)V	<init>	<init>
		p	1	range	range
	m	(Lzd;Lfu;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonElement;)Lbt;	a	fromJson
		p	0	json	json
c	bta	net/minecraft/world/biome/MountainsBiome
c	btb	net/minecraft/world/biome/MountainEdgeBiome
c	btc	net/minecraft/world/biome/source/MultiNoiseBiomeSource
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lcwd;	g	temperatureNoise
	f	Lcwd;	h	humidityNoise
	f	Lcwd;	i	altitudeNoise
	f	Lcwd;	j	weirdnessNoise
	f	Ljava/util/List;	k	biomePoints
	f	Z	l	threeDimensionalSampling
	f	J	m	seed
	m	(JLjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1	seed	seed
	m	(JLjava/util/List;)V	<init>	<init>
		p	1	seed	seed
		p	3	biomePoints	biomePoints
	m	(Lbre;Lbre$d;)Lcom/mojang/datafixers/util/Pair;	a	method_27988
		p	1	point	point
	m	(Lbre;)Ljava/util/stream/Stream;	a	method_27987
		p	0	biome	biome
c	btc$a	net/minecraft/world/biome/source/MultiNoiseBiomeSource$Preset
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbtc$a;	b	NETHER
	f	Luh;	d	id
	f	Ljava/util/function/LongFunction;	e	biomeSourceFunction
	m	(Luh;Ljava/util/function/LongFunction;)V	<init>	<init>
		p	1	id	id
	m	(J)Lbtc;	a	getBiomeSource
		p	1	seed	seed
	m	(J)Lbtc;	b	method_28472
		p	0	seed	seed
c	btd	net/minecraft/world/biome/MushroomFieldsBiome
c	bte	net/minecraft/world/biome/MushroomFieldShoreBiome
c	btf	net/minecraft/world/biome/source/DirectBiomeAccessType
c	btg	net/minecraft/world/biome/NetherWastesBiome
c	bth	net/minecraft/world/biome/OceanBiome
c	bti	net/minecraft/world/biome/source/VanillaLayeredBiomeSource
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lcxy;	f	biomeSampler
	f	Ljava/util/List;	g	BIOMES
c	btj	net/minecraft/world/biome/PlainsBiome
c	btk	net/minecraft/world/biome/RiverBiome
c	btl	net/minecraft/world/biome/SavannaBiome
c	btm	net/minecraft/world/biome/SavannaPlateauBiome
c	btn	net/minecraft/world/biome/ShatteredSavannaBiome
c	bto	net/minecraft/world/biome/ShatteredSavannaPlateauBiome
c	btp	net/minecraft/world/biome/EndIslandsSmallBiome
c	btq	net/minecraft/world/biome/SnowyBeachBiome
c	btr	net/minecraft/world/biome/SnowyMountainsBiome
c	bts	net/minecraft/world/biome/SnowyTaigaBiome
c	btt	net/minecraft/world/biome/SnowyTaigaHillsBiome
c	btu	net/minecraft/world/biome/SnowyTaigaMountainsBiome
c	btv	net/minecraft/world/biome/SnowyTundraBiome
c	btw	net/minecraft/world/biome/SoulSandValleyBiome
c	btx	net/minecraft/world/biome/StoneShoreBiome
c	bty	net/minecraft/world/biome/SunflowerPlainsBiome
c	btz	net/minecraft/world/biome/SwampBiome
c	bu	net/minecraft/predicate/entity/LocationPredicate
	f	Lbu;	a	ANY
	f	Lbx$c;	c	x
	f	Lbx$c;	d	y
	f	Lbx$c;	e	z
	f	Lbre;	f	biome
	f	Lcml;	g	feature
	f	Lug;	h	dimension
	f	Ljava/lang/Boolean;	i	smokey
	f	Lbt;	j	light
	f	Lal;	k	block
	f	Lbj;	l	fluid
	m	(Lbx$c;Lbx$c;Lbx$c;Lbre;Lcml;Lug;Ljava/lang/Boolean;Lbt;Lal;Lbj;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	biome	biome
		p	5	feature	feature
		p	6	dimension	dimension
		p	7	smokey	smokey
		p	8	light	light
		p	9	block	block
		p	10	fluid	fluid
	m	(Lug;)Lbu;	a	dimension
		p	0	dimension	dimension
	m	(Lbre;)Lbu;	a	biome
		p	0	biome	biome
	m	(Lzd;DDD)Z	a	test
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lzd;FFF)Z	a	test
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lcml;)Lbu;	a	feature
		p	0	feature	feature
	m	(Lcom/google/gson/JsonElement;)Lbu;	a	fromJson
		p	0	json	json
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	bu$a	net/minecraft/predicate/entity/LocationPredicate$Builder
	f	Lbx$c;	a	x
	f	Lbx$c;	b	y
	f	Lbx$c;	c	z
	f	Lbre;	d	biome
	f	Lcml;	e	feature
	f	Lug;	f	dimension
	f	Ljava/lang/Boolean;	g	smokey
	f	Lbt;	h	light
	f	Lal;	i	block
	f	Lbj;	j	fluid
	m	(Ljava/lang/Boolean;)Lbu$a;	a	smokey
		p	1	smokey	smokey
	m	(Lbre;)Lbu$a;	a	biome
		p	1	biome	biome
	m	()Lbu$a;	a	create
	m	(Lal;)Lbu$a;	a	block
		p	1	block	block
	m	()Lbu;	b	build
c	bua	net/minecraft/world/biome/SwampHillsBiome
c	bub	net/minecraft/world/biome/TaigaBiome
c	buc	net/minecraft/world/biome/TaigaHillsBiome
c	bud	net/minecraft/world/biome/TaigaMountainsBiome
c	bue	net/minecraft/world/biome/TallBirchForestBiome
c	buf	net/minecraft/world/biome/TallBirchHillsBiome
c	bug	net/minecraft/world/biome/EndBiome
c	buh	net/minecraft/world/biome/source/TheEndBiomeSource
	f	Lcwg;	f	noise
	f	Ljava/util/List;	g	BIOMES
	m	(Lcwg;II)F	a	getNoiseAt
c	bui	net/minecraft/world/biome/VoidBiome
c	buj	net/minecraft/world/biome/WarmOceanBiome
c	buk	net/minecraft/world/biome/WarpedForestBiome
c	bul	net/minecraft/world/biome/WoodedBadlandsPlateauBiome
c	bum	net/minecraft/world/biome/WoodedHillsBiome
c	bun	net/minecraft/world/biome/WoodedMountainsBiome
c	bup	net/minecraft/block/AbstractBannerBlock
	f	Lbje;	a	color
	m	(Lbje;Lcfi$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	()Lbje;	b	getColor
c	buq	net/minecraft/block/AbstractChestBlock
	f	Ljava/util/function/Supplier;	a	entityTypeRetriever
	m	(Lcfi$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	settings	settings
		p	2	entityTypeSupplier	entityTypeSupplier
	m	(Lcfj;Lbqb;Lfu;Z)Lbxf$c;	a	getBlockEntitySource
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	ignoreBlocked	ignoreBlocked
c	bur	net/minecraft/block/AbstractFurnaceBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	LIT
	m	(Lbqb;Lfu;Lbec;)V	a	openScreen
		p	1	world	world
		p	2	pos	pos
		p	3	player	player
c	bus	net/minecraft/block/AbstractGlassBlock
c	but	net/minecraft/block/AbstractSkullBlock
	f	Lcay$a;	a	type
	m	(Lcay$a;Lcfi$c;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
	m	()Lcay$a;	b	getSkullType
c	buu	net/minecraft/block/AirBlock
c	buv	net/minecraft/block/AnvilBlock
	f	Lcgd;	a	FACING
	f	Ldfg;	b	BASE_SHAPE
	f	Ldfg;	c	X_STEP_SHAPE
	f	Ldfg;	d	X_STEM_SHAPE
	f	Ldfg;	e	X_FACE_SHAPE
	f	Ldfg;	f	Z_STEP_SHAPE
	f	Ldfg;	g	Z_STEM_SHAPE
	f	Ldfg;	h	Z_FACE_SHAPE
	f	Ldfg;	i	X_AXIS_SHAPE
	f	Ldfg;	j	Z_AXIS_SHAPE
	f	Lne;	k	TITLE
	m	(Lcfj;)Lcfj;	c	getLandingState
		p	0	fallingState	fallingState
c	buw	net/minecraft/block/AttachedStemBlock
	f	Lcgd;	a	FACING
	f	Lcbq;	b	gourdBlock
	f	Ljava/util/Map;	c	FACING_TO_SHAPE
	m	(Lcbq;Lcfi$c;)V	<init>	<init>
		p	1	gourdBlock	gourdBlock
		p	2	settings	settings
	m	()Lbke;	b	getSeeds
c	bux	net/minecraft/block/BambooBlock
	f	Ldfg;	a	SMALL_LEAVES_SHAPE
	f	Ldfg;	b	LARGE_LEAVES_SHAPE
	f	Ldfg;	c	NO_LEAVES_SHAPE
	f	Lcgi;	d	AGE
	f	Lcgg;	e	LEAVES
	f	Lcgi;	f	STAGE
	m	(Lbpg;Lfu;)I	a	countBambooAbove
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;Lbqb;Lfu;Ljava/util/Random;I)V	a	updateLeaves
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
		p	5	height	height
	m	(Lbpg;Lfu;)I	b	countBambooBelow
		p	1	world	world
		p	2	pos	pos
c	buy	net/minecraft/block/BambooSaplingBlock
	f	Ldfg;	a	SHAPE
	m	(Lbqb;Lfu;)V	a	grow
		p	1	world	world
		p	2	pos	pos
c	buz	net/minecraft/block/BannerBlock
	f	Lcgi;	a	ROTATION
	f	Ljava/util/Map;	b	COLORED_BANNERS
	f	Ldfg;	c	SHAPE
	m	(Lbje;)Lbvr;	a	getForColor
		p	0	color	color
c	bv	net/minecraft/advancement/criterion/LocationArrivalCriterion
	f	Luh;	a	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
	m	(Lze;)V	a	trigger
		p	1	player	player
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbv$a;	a	conditionsFromJson
c	bv$a	net/minecraft/advancement/criterion/LocationArrivalCriterion$Conditions
	f	Lbu;	a	location
	m	(Luh;Lbe$b;Lbu;)V	<init>	<init>
		p	1	id	id
		p	2	player	player
		p	3	location	location
	m	(Lbu;)Lbv$a;	a	create
		p	0	location	location
	m	(Lzd;DDD)Z	a	matches
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()Lbv$a;	c	createSleptInBed
	m	()Lbv$a;	d	createHeroOfTheVillage
c	bva	net/minecraft/block/BarrelBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	OPEN
c	bvb	net/minecraft/block/BarrierBlock
c	bvc	net/minecraft/block/DeadCoralFanBlock
	f	Ldfg;	a	SHAPE
c	bvd	net/minecraft/block/DeadCoralBlock
	f	Ldfg;	a	SHAPE
c	bve	net/minecraft/block/CoralParentBlock
	f	Ldfg;	a	SHAPE
	f	Lcga;	b	WATERLOGGED
	m	(Lcfj;Lbqc;Lfu;)V	a	checkLivingConditions
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbpg;Lfu;)Z	c	isInWater
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bvf	net/minecraft/block/DeadCoralWallFanBlock
	f	Lcgd;	a	FACING
	f	Ljava/util/Map;	c	FACING_TO_SHAPE
c	bvg	net/minecraft/block/BlockWithEntity
c	bvh	net/minecraft/block/AbstractFireBlock
	f	F	g	damage
	m	(Lcfi$c;F)V	<init>	<init>
		p	1	settings	settings
		p	2	damage	damage
	m	(Lbpg;Lfu;)Lcfj;	a	getState
		p	0	world	world
		p	1	pos	pos
	m	(Lcfj;)Z	e	isFlammable
		p	1	state	state
c	bvi	net/minecraft/block/AbstractPressurePlateBlock
	f	Ldfg;	a	PRESSED_SHAPE
	f	Ldfg;	b	DEFAULT_SHAPE
	f	Ldeg;	c	BOX
	m	(Lcfj;I)Lcfj;	a	setRedstoneOutput
		p	1	state	state
		p	2	rsOut	rsOut
	m	(Lbqb;Lfu;Lcfj;I)V	a	updatePlateState
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	rsOut	rsOut
	m	(Lbqb;Lfu;)V	a	updateNeighbors
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;)V	a	playPressSound
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;)V	b	playDepressSound
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lfu;)I	b	getRedstoneOutput
		p	1	world	world
		p	2	pos	pos
	m	()I	c	getTickRate
	m	(Lcfj;)I	g	getRedstoneOutput
		p	1	state	state
c	bvj	net/minecraft/block/AbstractRailBlock
	f	Ldfg;	a	STRAIGHT_SHAPE
	f	Ldfg;	b	ASCENDING_SHAPE
	f	Z	c	allowCurves
	m	(ZLcfi$c;)V	<init>	<init>
		p	1	allowCurves	allowCurves
		p	2	settings	settings
	m	(Lbqb;Lfu;Lcfj;Z)Lcfj;	a	updateBlockState
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	forceUpdate	forceUpdate
	m	(Lbqb;Lfu;)Z	a	isRail
		p	0	world	world
		p	1	pos	pos
	m	(Lcfj;Lbqb;Lfu;Z)Lcfj;	a	updateCurves
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	notify	notify
	m	(Lfu;Lbqb;Lcgm;)Z	a	shouldDropRail
		c	Checks if this rail should be dropped.\n\n<p>This method will return true if:\n<ul><li>The rail block is ascending.</li>\n<li>The block in the direction of ascent does not have a top rim.</li></ul>
		p	0	pos	pos
		p	1	world	world
		p	2	shape	shape
	m	(Lcfj;Lbqb;Lfu;Lbvr;)V	a	updateBlockState
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	neighbor	neighbor
	m	()Z	c	canMakeCurves
	m	()Lcgl;	d	getShapeProperty
	m	(Lcfj;)Z	g	isRail
		p	0	state	state
c	bvk	net/minecraft/block/Stainable
	m	()Lbje;	a	getColor
c	bvl	net/minecraft/block/BeaconBlock
c	bvm	net/minecraft/block/BedBlock
	f	Lcgg;	a	PART
	f	Lcga;	b	OCCUPIED
	f	Ldfg;	c	TOP_SHAPE
	f	Ldfg;	d	LEG_1_SHAPE
	f	Ldfg;	e	LEG_2_SHAPE
	f	Ldfg;	f	LEG_3_SHAPE
	f	Ldfg;	g	LEG_4_SHAPE
	f	Ldfg;	h	NORTH_SHAPE
	f	Ldfg;	i	SOUTH_SHAPE
	f	Ldfg;	j	WEST_SHAPE
	f	Ldfg;	k	EAST_SHAPE
	f	Lbje;	o	color
	m	(Lbje;Lcfi$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	(Laoq;Lbqd;Lfu;)Ljava/util/Optional;	a	canWakeUpAt
		p	0	type	type
		p	1	world	world
		p	2	pos	pos
	m	(Laoq;Lbqd;Lfu;I)Ljava/util/Optional;	a	findWakeUpPosition
		p	0	type	type
		p	1	world	world
		p	2	pos	pos
		p	3	index	index
	m	(Lbpg;Lfu;)Lfz;	a	getDirection
		p	0	world	world
		p	1	pos	pos
	m	(Lcfx;Lfz;)Lfz;	a	getDirectionTowardsOtherPart
		p	0	part	part
		p	1	direction	direction
	m	(Lbqb;)Z	a	isOverworld
		p	0	world	world
	m	(Lbqb;Lfu;)Z	a	isFree
		p	1	world	world
		p	2	pos	pos
	m	(Laom;)V	a	bounceEntity
		p	1	entity	entity
	m	()Lbje;	c	getColor
	m	(Lcfj;)Lfz;	g	getOppositePartDirection
		p	0	state	state
	m	(Lcfj;)Lbxf$a;	h	getBedPart
		p	0	state	state
c	bvn	net/minecraft/block/BeehiveBlock
	f	Lcgd;	a	FACING
	f	Lcgi;	b	HONEY_LEVEL
	f	[Lfz;	c	GENERATE_DIRECTIONS
	m	(Ljava/util/Random;)Lfz;	a	getRandomGenerationDirection
	m	(Lanf;Lbec;)V	a	method_21839
		p	1	player	player
	m	(Lbqb;DDDDD)V	a	addHoneyParticle
		p	1	world	world
		p	2	minX	minX
		p	4	maxX	maxX
		p	6	minZ	minZ
		p	8	maxZ	maxZ
		p	10	height	height
	m	(Lbqb;Lcfj;Lfu;)V	a	takeHoney
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
	m	(Lbqb;Lfu;Lcfj;)V	a	spawnHoneyParticles
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Ldfg;D)V	a	addHoneyParticle
		p	1	world	world
		p	2	pos	pos
		p	3	shape	shape
		p	4	height	height
	m	(Lbqb;Lcfj;Lfu;Lbec;Lcdi$b;)V	a	takeHoney
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	player	player
	m	(Lbqb;Lfu;)V	a	dropHoneycomb
		p	0	world	world
		p	1	pos	pos
	m	(Lbqb;Lfu;)V	b	angerNearbyBees
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lfu;)Z	d	hasBees
		p	1	world	world
		p	2	pos	pos
c	bvo	net/minecraft/block/BeetrootsBlock
	f	Lcgi;	a	AGE
	f	[Ldfg;	c	AGE_TO_SHAPE
c	bvp	net/minecraft/block/BellBlock
	f	Lcgd;	a	FACING
	f	Lcgg;	b	ATTACHMENT
	f	Lcga;	c	POWERED
	f	Ldfg;	d	NORTH_SOUTH_SHAPE
	f	Ldfg;	e	EAST_WEST_SHAPE
	f	Ldfg;	f	BELL_WAIST_SHAPE
	f	Ldfg;	g	BELL_LIP_SHAPE
	f	Ldfg;	h	BELL_SHAPE
	f	Ldfg;	i	NORTH_SOUTH_WALLS_SHAPE
	f	Ldfg;	j	EAST_WEST_WALLS_SHAPE
	f	Ldfg;	k	WEST_WALL_SHAPE
	f	Ldfg;	o	EAST_WALL_SHAPE
	f	Ldfg;	p	NORTH_WALL_SHAPE
	f	Ldfg;	q	SOUTH_WALL_SHAPE
	f	Ldfg;	r	HANGING_SHAPE
	m	(Lcfj;Lfz;D)Z	a	isPointOnBell
		p	1	state	state
		p	2	side	side
		p	3	y	y
	m	(Lbqb;Lcfj;Ldeh;Lbec;Z)Z	a	ring
		p	1	world	world
		p	2	state	state
	m	(Lbqb;Lfu;Lfz;)Z	a	ring
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;)Ldfg;	h	getShape
		p	1	state	state
	m	(Lcfj;)Lfz;	l	getPlacementSide
		p	0	state	state
c	bvq	net/minecraft/block/BlastFurnaceBlock
c	bvr	net/minecraft/block/Block
	f	Lcom/google/common/cache/LoadingCache;	a	FULL_CUBE_SHAPE_CACHE
	f	Ldfg;	b	SOLID_MEDIUM_SQUARE_SHAPE
	f	Ldfg;	c	SOLID_SMALL_SQUARE_SHAPE
	f	Lcfj;	d	defaultState
	f	Ljava/lang/String;	e	translationKey
	f	Lbke;	f	cachedItem
	f	Ljava/lang/ThreadLocal;	g	FACE_CULL_MAP
	f	Lorg/apache/logging/log4j/Logger;	l	LOGGER
	f	Lge;	m	STATE_IDS
	f	Lcfk;	n	stateManager
	m	(Lbpt;)Z	a	shouldDropItemsOnExplosion
		p	1	explosion	explosion
	m	(Lbiy;Lgi;)V	a	addStacksForDisplay
		p	1	group	group
		p	2	list	list
	m	(Lbki;Lbpg;Ljava/util/List;Lbls;)V	a	buildTooltip
		p	1	stack	stack
		p	2	world	world
		p	3	tooltip	tooltip
		p	4	options	options
	m	(Lbin;)Lcfj;	a	getPlacementState
		p	1	ctx	ctx
	m	(Lcfj;Lzd;Lfu;Lcdl;Laom;Lbki;)Ljava/util/List;	a	getDroppedStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
		p	4	entity	entity
		p	5	stack	stack
	m	(Lbpg;Laom;)V	a	onEntityLand
		p	1	world	world
		p	2	entity	entity
	m	(Lcfk$a;)V	a	appendProperties
		p	1	builder	builder
	m	(Lcfj;Lzd;Lfu;Lcdl;)Ljava/util/List;	a	getDroppedStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
	m	(Lcfj;Lcfj;Lbqc;Lfu;I)V	a	replaced
		p	0	state	state
		p	1	newState	newState
		p	2	world	world
		p	3	pos	pos
		p	4	flags	flags
	m	(Lbqc;Lfu;Lcfj;)V	a	onBroken
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(DDDDDD)Ldfg;	a	createCuboidShape
		p	0	xMin	xMin
		p	2	yMin	yMin
		p	4	zMin	zMin
		p	6	xMax	xMax
		p	8	yMax	yMax
		p	10	zMax	zMax
	m	(I)Lcfj;	a	getStateFromRawId
		p	0	stateId	stateId
	m	(Ldfg;Lfz;)Z	a	isFaceFullSquare
		p	0	shape	shape
		p	1	side	side
	m	(Ldfg;)Z	a	isShapeFullCube
		p	0	shape	shape
	m	(Lbpg;Lfu;Lcfj;)Lbki;	a	getPickStack
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcfj;Lcfj;Lbqc;Lfu;II)V	a	replaceBlock
		p	0	state	state
		p	1	newState	newState
		p	2	world	world
		p	3	pos	pos
		p	4	flags	flags
		p	5	maxUpdateDepth	maxUpdateDepth
	m	(Lcfj;Lcfj;Lbqb;Lfu;)Lcfj;	a	pushEntitiesUpBeforeBlockChange
		p	0	from	from
		p	1	to	to
		p	2	world	world
		p	3	pos	pos
	m	(Lbqb;Lfu;Lcfj;Lbec;)V	a	onBreak
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	player	player
	m	(Lbqb;Lfu;I)V	a	dropExperience
		p	1	world	world
		p	2	pos	pos
		p	3	size	size
	m	(Lbqb;Lfu;Lbki;)V	a	dropStack
		p	0	world	world
		p	1	pos	pos
		p	2	stack	stack
	m	(Lbqb;Lfu;Laom;)V	a	onSteppedOn
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	(Lbqd;Lfu;Lfz;)Z	a	sideCoversSmallSquare
		p	0	world	world
		p	1	pos	pos
		p	2	side	side
	m	(Lbvr;)Z	a	is
		p	1	block	block
	m	(Lbke;)Lbvr;	a	getBlockFromItem
		p	0	item	item
	m	(Lbqb;Lbec;Lfu;Lcfj;Lcdl;Lbki;)V	a	afterBreak
		p	1	world	world
		p	2	player	player
		p	3	pos	pos
		p	4	state	state
		p	5	blockEntity	blockEntity
		p	6	stack	stack
	m	(Lcfj;Lbqb;Lfu;Lcdl;)V	a	dropStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
	m	(Lbqb;Lfu;Lcfj;Laoy;Lbki;)V	a	onPlaced
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	placer	placer
		p	5	itemStack	itemStack
	m	(Ladf;)Z	a	isIn
		p	1	tag	tag
	m	(Lbqb;Lfu;Laom;F)V	a	onLandedUpon
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
		p	4	distance	distance
	m	(Lcfj;Lbqb;Lfu;Lcdl;Laom;Lbki;)V	a	dropStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
		p	4	entity	entity
		p	5	stack	stack
	m	(Lcfj;Lbqb;Lfu;Ljava/util/Random;)V	a	randomDisplayTick
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
	m	(Lbqb;Lfu;Lbpt;)V	a	onDestroyedByExplosion
		p	1	world	world
		p	2	pos	pos
		p	3	explosion	explosion
	m	(Lcfj;)Z	a_	hasRandomTicks
		p	1	state	state
	m	()Z	ak_	canMobSpawnInside
	m	(Lbvr;)Z	b	cannotConnect
		p	0	block	block
	m	(Lcfj;Lbpg;Lfu;)Z	b	isTranslucent
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbqc;Lfu;)Lcfj;	b	postProcessState
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;Lbqb;Lfu;)V	c	dropStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;)Z	c	hasTopRim
		p	0	world	world
		p	1	pos	pos
	m	(Lcfj;Lbpg;Lfu;Lfz;)Z	c	shouldDrawSide
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	facing	facing
	m	(Lbqb;Lfu;Lbki;)V	c	method_9596
		p	2	stack	stack
	m	(Lbqb;Lfu;)V	c	rainTick
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lfu;Lbki;)V	d	method_9587
		p	2	stack	stack
	m	(Lcfj;Lbpg;Lfu;Lfz;)Z	d	isSideSolidFullSquare
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	side	side
	m	()F	f	getBlastResistance
	m	()Lmx;	g	getName
	m	(Lcfj;)I	i	getRawIdFromState
		p	0	state	state
	m	()Ljava/lang/String;	i	getTranslationKey
	m	(Lcfj;)V	j	setDefaultState
		p	1	state	state
	m	()F	j	getSlipperiness
	m	()F	k	getVelocityMultiplier
	m	(Lcfj;)Lcbh;	k	getSoundGroup
		p	1	state	state
	m	()F	l	getJumpVelocityMultiplier
	m	()Lcfk;	m	getStateManager
	m	()Lcfj;	n	getDefaultState
	m	()Z	o	hasDynamicBounds
c	bvr$1	net/minecraft/block/Block$1
	m	(Ldfg;)Ljava/lang/Boolean;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
		p	1	shape	shape
c	bvr$a	net/minecraft/block/Block$NeighborGroup
	f	Lcfj;	a	self
	f	Lcfj;	b	other
	f	Lfz;	c	facing
	m	(Lcfj;Lcfj;Lfz;)V	<init>	<init>
		p	1	self	self
		p	2	other	other
		p	3	facing	facing
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bvs	net/minecraft/block/Blocks
	m	(Lcfj;)I	A	method_26104
		p	0	state	state
	m	(Lcfj;)I	B	method_26105
		p	0	state	state
	m	(Lcfj;Lbpg;Lfu;Laoq;)Ljava/lang/Boolean;	a	never
		c	A shortcut to always return {@code false} in a typed context predicate with an\n{@link EntityType}, used like {@code settings.allowSpawning(Blocks::never)}.
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
	m	(Lbje;Lcfi$c;)Lcav;	a	createShulkerBoxBlock
		p	0	color	color
		p	1	settings	settings
	m	(Z)Lcfc;	a	createPistonBlock
		p	0	sticky	sticky
	m	(Lcfj;Lbpg;Lfu;)Z	a	always
		c	A shortcut to always return {@code true} a context predicate, used as\n{@code settings.solidBlock(Blocks::always)}.
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Ljava/lang/String;Lbvr;)Lbvr;	a	register
		p	0	id	id
		p	1	block	block
	m	()V	a	refreshShapeCache
	m	(Lcxe;)Lbvr;	a	createNetherStemBlock
		p	0	materialColor	materialColor
	m	(Lcxe;Lcxe;)Lcao;	a	createLogBlock
		p	0	topMaterialColor	topMaterialColor
		p	1	sideMaterialColor	sideMaterialColor
	m	(Lbje;)Lbvm;	a	createBedBlock
		p	0	color	color
	m	(I)Ljava/util/function/ToIntFunction;	a	createLightLevelFromBlockState
		p	0	litLevel	litLevel
	m	(Lcfj;)I	a	method_26112
		p	0	state	state
	m	(Lcfj;Lbpg;Lfu;Laoq;)Ljava/lang/Boolean;	b	always
		c	A shortcut to always return {@code true} in a typed context predicate with an\n{@link EntityType}, used like {@code settings.allowSpawning(Blocks::always)}.
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
	m	(Lcfj;Lbpg;Lfu;)Z	b	never
		c	A shortcut to always return {@code false} a context predicate, used as\n{@code settings.solidBlock(Blocks::never)}.
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;)I	b	method_26121
		p	0	state	state
	m	(Lbje;)Lcbl;	b	createStainedGlassBlock
		p	0	color	color
	m	()Lbza;	b	createLeavesBlock
	m	(Lcfj;)I	c	method_26124
		p	0	state	state
	m	(Lcfj;Lbpg;Lfu;Laoq;)Ljava/lang/Boolean;	c	canSpawnOnLeaves
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
	m	(Lcfj;Lbpg;Lfu;Laoq;)Z	d	method_26128
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	entityType	entityType
	m	(Lcfj;)I	d	method_26127
		p	0	state	state
	m	(Lcfj;Lbpg;Lfu;Laoq;)Z	e	method_26130
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	entityType	entityType
	m	(Lcfj;)I	e	method_26129
		p	0	state	state
	m	(Lcfj;Lbpg;Lfu;Laoq;)Z	f	method_26132
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	entityType	entityType
	m	(Lcfj;)I	f	method_26131
		p	0	state	state
	m	(Lcfj;)I	g	method_26133
		p	0	state	state
	m	(Lcfj;)I	h	method_26134
		p	0	state	state
	m	(Lcfj;)I	i	method_26135
		p	0	state	state
	m	(Lcfj;)I	j	method_26136
		p	0	state	state
	m	(Lcfj;)I	k	method_26137
		p	0	state	state
	m	(Lcfj;)I	l	method_26138
		p	0	state	state
	m	(Lcfj;)I	m	method_26139
		p	0	state	state
	m	(Lcfj;)I	n	method_26140
		p	0	state	state
	m	(Lcfj;)I	o	method_26141
		p	0	state	state
	m	(Lcfj;)I	p	method_26142
		p	0	state	state
	m	(Lcfj;)I	q	method_26143
		p	0	state	state
	m	(Lcfj;)I	r	method_26144
		p	0	state	state
	m	(Lcfj;)I	s	method_26145
		p	0	state	state
	m	(Lcfj;)I	t	method_26146
		p	0	state	state
	m	(Lcfj;)I	u	method_26147
		p	0	state	state
	m	(Lcfj;)I	v	method_26148
		p	0	state	state
	m	(Lcfj;)I	w	method_26149
		p	0	state	state
	m	(Lcfj;)I	x	method_26150
		p	0	state	state
	m	(Lcfj;)I	y	method_26151
		p	0	state	state
	m	(Lcfj;)I	z	method_26152
		p	0	state	state
c	bvt	net/minecraft/block/Fertilizable
	m	(Lbpg;Lfu;Lcfj;Z)Z	a	isFertilizable
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	isClient	isClient
	m	(Lbqb;Ljava/util/Random;Lfu;Lcfj;)Z	a	canGrow
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
	m	(Lzd;Ljava/util/Random;Lfu;Lcfj;)V	a	grow
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
c	bvu	net/minecraft/block/BrewingStandBlock
	f	[Lcga;	a	BOTTLE_PROPERTIES
	f	Ldfg;	b	SHAPE
c	bvv	net/minecraft/block/BubbleColumnBlock
	f	Lcga;	a	DRAG
	m	(Lbpg;Lfu;)Z	a	calculateDrag
		p	0	world	world
		p	1	pos	pos
	m	(Lbqc;Lfu;Z)V	a	update
		p	0	world	world
		p	1	pos	pos
		p	2	drag	drag
	m	(Lbqc;Lfu;)Z	a	isStillWater
		p	0	world	world
		p	1	pos	pos
c	bvw	net/minecraft/block/FluidDrainable
	m	(Lbqc;Lfu;Lcfj;)Lcwz;	b	tryDrainFluid
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	bvx	net/minecraft/block/PlantBlock
	m	(Lcfj;Lbpg;Lfu;)Z	c	canPlantOnTop
		p	1	floor	floor
		p	2	world	world
		p	3	pos	pos
c	bvy	net/minecraft/block/AbstractButtonBlock
	f	Lcga;	a	POWERED
	f	Ldfg;	b	CEILING_X_SHAPE
	f	Ldfg;	c	CEILING_Z_SHAPE
	f	Ldfg;	d	FLOOR_X_SHAPE
	f	Ldfg;	e	FLOOR_Z_SHAPE
	f	Ldfg;	f	NORTH_SHAPE
	f	Ldfg;	g	SOUTH_SHAPE
	f	Ldfg;	h	WEST_SHAPE
	f	Ldfg;	i	EAST_SHAPE
	f	Ldfg;	j	CEILING_X_PRESSED_SHAPE
	f	Ldfg;	k	CEILING_Z_PRESSED_SHAPE
	f	Ldfg;	o	FLOOR_X_PRESSED_SHAPE
	f	Ldfg;	p	FLOOR_Z_PRESSED_SHAPE
	f	Ldfg;	q	NORTH_PRESSED_SHAPE
	f	Ldfg;	r	SOUTH_PRESSED_SHAPE
	f	Ldfg;	s	WEST_PRESSED_SHAPE
	f	Ldfg;	t	EAST_PRESSED_SHAPE
	f	Z	v	wooden
	m	(ZLcfi$c;)V	<init>	<init>
		p	1	wooden	wooden
		p	2	settings	settings
	m	(Lbec;Lbqc;Lfu;Z)V	a	playClickSound
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
		p	4	powered	powered
	m	(Z)Lack;	a	getClickSound
		p	1	powered	powered
	m	()I	c	getPressTicks
	m	(Lcfj;Lbqb;Lfu;)V	d	powerOn
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbqb;Lfu;)V	e	tryPowerWithProjectiles
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbqb;Lfu;)V	f	updateNeighbors
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bvz	net/minecraft/block/CactusBlock
	f	Lcgi;	a	AGE
	f	Ldfg;	b	COLLISION_SHAPE
	f	Ldfg;	c	OUTLINE_SHAPE
c	bw	net/minecraft/advancement/criterion/PlayerGeneratesContainerLootCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lbw$a;	a	conditionsFromJson
	m	(Lze;Luh;)V	a	test
		p	1	player	player
		p	2	id	id
c	bw$a	net/minecraft/advancement/criterion/PlayerGeneratesContainerLootCriterion$Conditions
	f	Luh;	a	lootTable
	m	(Lbe$b;Luh;)V	<init>	<init>
		p	1	entity	entity
		p	2	lootTable	lootTable
	m	(Luh;)Lbw$a;	a	create
		p	0	lootTable	lootTable
	m	(Luh;)Z	b	test
		p	1	lootTable	lootTable
c	bwa	net/minecraft/block/CakeBlock
	f	Lcgi;	a	BITES
	f	[Ldfg;	b	BITES_TO_SHAPE
	m	(Lbqc;Lfu;Lcfj;Lbec;)Lang;	a	tryEat
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	player	player
c	bwb	net/minecraft/block/CampfireBlock
	f	Ldfg;	a	SHAPE
	f	Lcga;	b	LIT
	f	Lcga;	c	SIGNAL_FIRE
	f	Lcga;	d	WATERLOGGED
	f	Lcgd;	e	FACING
	f	Ldfg;	f	SMOKEY_SHAPE
		c	The shape used to test whether a given block is considered 'smokey'.
	f	Z	g	emitsParticles
	f	I	h	fireDamage
	m	(ZILcfi$c;)V	<init>	<init>
		p	1	emitsParticles	emitsParticles
		p	2	fireDamage	fireDamage
		p	3	settings	settings
	m	(Lbqb;Lfu;ZZ)V	a	spawnSmokeParticle
		p	0	world	world
		p	1	pos	pos
		p	2	isSignal	isSignal
		p	3	lotsOfSmoke	lotsOfSmoke
	m	(Lbqb;Lfu;)Z	a	isLitCampfireInRange
		p	0	world	world
		p	1	pos	pos
	m	(Lbqc;Lfu;Lcfj;)V	c	extinguish
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lcfj;)Z	g	isLitCampfire
		p	0	state	state
	m	(Lcfj;)Z	l	doesBlockCauseSignalFire
		p	1	state	state
c	bwc	net/minecraft/block/CarrotsBlock
	f	[Ldfg;	a	AGE_TO_SHAPE
c	bwd	net/minecraft/block/CartographyTableBlock
	f	Lne;	a	TITLE
c	bwe	net/minecraft/block/CarvedPumpkinBlock
	f	Lcgd;	a	FACING
	f	Lcfo;	b	snowGolemDispenserPattern
	f	Lcfo;	c	snowGolemPattern
	f	Lcfo;	d	ironGolemDispenserPattern
	f	Lcfo;	e	ironGolemPattern
	f	Ljava/util/function/Predicate;	f	IS_PUMPKIN_PREDICATE
	m	(Lbqd;Lfu;)Z	a	canDispense
		p	2	pos	pos
	m	(Lbqb;Lfu;)V	a	trySpawnEntity
		p	1	world	world
		p	2	pos	pos
	m	()Lcfo;	c	getSnowGolemDispenserPattern
	m	()Lcfo;	d	getSnowGolemPattern
	m	()Lcfo;	e	getIronGolemDispenserPattern
	m	()Lcfo;	t	getIronGolemPattern
c	bwf	net/minecraft/block/CauldronBlock
	f	Lcgi;	a	LEVEL
	f	Ldfg;	b	OUTLINE_SHAPE
	f	Ldfg;	c	RAY_TRACE_SHAPE
	m	(Lbqb;Lfu;Lcfj;I)V	a	setLevel
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	level	level
c	bwg	net/minecraft/block/ChainBlock
	f	Ldfg;	a	SHAPE
	f	Lcga;	b	WATERLOGGED
c	bwh	net/minecraft/block/ChestBlock
	f	Lcgd;	b	FACING
	f	Lcgg;	c	CHEST_TYPE
	f	Lcga;	d	WATERLOGGED
	f	Ldfg;	e	DOUBLE_NORTH_SHAPE
	f	Ldfg;	f	DOUBLE_SOUTH_SHAPE
	f	Ldfg;	g	DOUBLE_WEST_SHAPE
	f	Ldfg;	h	DOUBLE_EAST_SHAPE
	f	Ldfg;	i	SINGLE_SHAPE
	f	Lbxf$b;	j	INVENTORY_RETRIEVER
	f	Lbxf$b;	k	NAME_RETRIEVER
	m	(Lbin;Lfz;)Lfz;	a	getNeighborChestDirection
		p	1	ctx	ctx
		p	2	dir	dir
	m	(Lcee;)Lbxf$b;	a	getAnimationProgressRetriever
	m	(Lbqc;Lfu;)Z	a	isChestBlocked
		p	0	world	world
		p	1	pos	pos
	m	(Lbwh;Lcfj;Lbqb;Lfu;Z)Lamz;	a	getInventory
		p	0	block	block
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	ignoreBlocked	ignoreBlocked
	m	(Lbpg;Lfu;)Z	a	hasBlockOnTop
		p	0	world	world
		p	1	pos	pos
	m	(Lbqc;Lfu;)Z	b	hasOcelotOnTop
		p	0	world	world
		p	1	pos	pos
	m	()Lacr;	c	getOpenStat
	m	(Lcfj;)Lbxf$a;	g	getDoubleBlockType
		p	0	state	state
	m	(Lcfj;)Lfz;	h	getFacing
		p	0	state	state
c	bwh$1	net/minecraft/block/ChestBlock$1
	m	(Lcdp;Lcdp;)Ljava/util/Optional;	a	getFromBoth
	m	(Lcdp;)Ljava/util/Optional;	a	getFrom
	m	()Ljava/util/Optional;	a	getFallback
c	bwh$2	net/minecraft/block/ChestBlock$2
	m	(Lcdp;Lcdp;)Ljava/util/Optional;	a	getFromBoth
	m	(Lcdp;)Ljava/util/Optional;	a	getFrom
	m	()Ljava/util/Optional;	a	getFallback
c	bwh$3	net/minecraft/block/ChestBlock$3
	m	(Lcdp;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	getFrom
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	getFallback
	m	(Lcdp;Lcdp;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	getFromBoth
c	bwi	net/minecraft/block/ChorusFlowerBlock
	f	Lcgi;	a	AGE
	f	Lbwj;	b	plantBlock
	m	(Lbwj;Lcfi$c;)V	<init>	<init>
		p	1	plantBlock	plantBlock
		p	2	settings	settings
	m	(Lbqc;Lfu;Ljava/util/Random;I)V	a	generate
		p	0	world	world
		p	1	pos	pos
		p	2	random	random
		p	3	size	size
	m	(Lbqb;Lfu;)V	a	die
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;Ljava/util/Random;Lfu;II)V	a	generate
		p	0	world	world
		p	1	pos	pos
		p	2	random	random
		p	3	rootPos	rootPos
		p	4	size	size
		p	5	layer	layer
	m	(Lbqd;Lfu;Lfz;)Z	b	isSurroundedByAir
		p	0	world	world
		p	1	pos	pos
		p	2	exceptDirection	exceptDirection
	m	(Lbqb;Lfu;I)V	b	grow
		p	1	world	world
		p	2	pos	pos
		p	3	age	age
c	bwj	net/minecraft/block/ChorusPlantBlock
	m	(Lbpg;Lfu;)Lcfj;	a	withConnectionProperties
		p	1	world	world
		p	2	pos	pos
c	bwk	net/minecraft/block/CocoaBlock
	f	Lcgi;	a	AGE
	f	[Ldfg;	b	AGE_TO_EAST_SHAPE
	f	[Ldfg;	c	AGE_TO_WEST_SHAPE
	f	[Ldfg;	d	AGE_TO_NORTH_SHAPE
	f	[Ldfg;	e	AGE_TO_SOUTH_SHAPE
c	bwl	net/minecraft/block/CommandBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	CONDITIONAL
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	m	(Lcfj;Lbqb;Lfu;Lbpc;Z)V	a	execute
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	executor	executor
		p	5	hasCommand	hasCommand
	m	(Lbqb;Lfu;Lfz;)V	a	executeCommandChain
		p	0	world	world
		p	1	pos	pos
		p	2	facing	facing
c	bwm	net/minecraft/block/ComparatorBlock
	f	Lcgg;	a	MODE
	m	(Lbqb;Lfz;Lfu;)Lbba;	a	getAttachedItemFrame
		p	1	world	world
		p	2	facing	facing
		p	3	pos	pos
	m	(Lbqb;Lfu;Lcfj;)I	e	calculateOutputSignal
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Lcfj;)V	f	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	bwn	net/minecraft/block/ComposterBlock
	f	Lcgi;	a	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	b	ITEM_TO_LEVEL_INCREASE_CHANCE
	f	Ldfg;	c	RAY_TRACE_SHAPE
	f	[Ldfg;	d	LEVEL_TO_COLLISION_SHAPE
	m	(FLbqa;)V	a	registerCompostableItem
		p	0	levelIncreaseChance	levelIncreaseChance
		p	1	item	item
	m	(Lbqb;Lfu;Z)V	a	playEffects
		p	0	world	world
		p	1	pos	pos
		p	2	fill	fill
	m	(Lcfj;Lzd;Lbki;Lfu;)Lcfj;	a	compost
		p	0	state	state
		p	1	world	world
		p	2	stack	stack
		p	3	pos	pos
	m	(Lcfj;Lbqc;Lfu;Lbki;)Lcfj;	b	addToComposter
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	item	item
	m	()V	c	registerDefaultCompostableItems
	m	(Lcfj;Lbqc;Lfu;)Lcfj;	d	emptyComposter
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;Lbqb;Lfu;)Lcfj;	d	emptyFullComposter
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bwn$a	net/minecraft/block/ComposterBlock$DummyInventory
c	bwn$b	net/minecraft/block/ComposterBlock$ComposterInventory
	f	Lcfj;	a	state
	f	Lbqc;	b	world
	f	Lfu;	c	pos
	f	Z	d	dirty
	m	(Lcfj;Lbqc;Lfu;)V	<init>	<init>
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bwn$c	net/minecraft/block/ComposterBlock$FullComposterInventory
	f	Lcfj;	a	state
	f	Lbqc;	b	world
	f	Lfu;	c	pos
	f	Z	d	dirty
	m	(Lcfj;Lbqc;Lfu;Lbki;)V	<init>	<init>
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	outputItem	outputItem
c	bwo	net/minecraft/block/ConcretePowderBlock
	f	Lcfj;	a	hardenedState
	m	(Lbvr;Lcfi$c;)V	<init>	<init>
		p	1	hardened	hardened
		p	2	settings	settings
	m	(Lbpg;Lfu;)Z	a	hardensOnAnySide
		p	0	world	world
		p	1	pos	pos
	m	(Lbpg;Lfu;Lcfj;)Z	b	shouldHarden
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lcfj;)Z	l	hardensIn
		p	0	state	state
c	bwp	net/minecraft/block/ConduitBlock
	f	Lcga;	a	WATERLOGGED
	f	Ldfg;	b	SHAPE
c	bwq	net/minecraft/block/CoralBlockBlock
	f	Lbvr;	a	deadCoralBlock
	m	(Lbvr;Lcfi$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
	m	(Lbpg;Lfu;)Z	a	isInWater
		p	1	world	world
		p	2	pos	pos
c	bwr	net/minecraft/block/CoralFanBlock
	f	Lbvr;	a	deadCoralBlock
	m	(Lbvr;Lcfi$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
c	bws	net/minecraft/block/CoralBlock
	f	Ldfg;	a	SHAPE
	f	Lbvr;	c	deadCoralBlock
	m	(Lbvr;Lcfi$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
c	bwt	net/minecraft/block/CoralWallFanBlock
	f	Lbvr;	c	deadCoralBlock
	m	(Lbvr;Lcfi$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
c	bwu	net/minecraft/block/CraftingTableBlock
	f	Lmr;	a	TITLE
c	bwv	net/minecraft/block/CropBlock
	f	[Ldfg;	a	AGE_TO_SHAPE
	f	Lcgi;	b	AGE
	m	(Lbqb;Lfu;Lcfj;)V	a	applyGrowth
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbvr;Lbpg;Lfu;)F	a	getAvailableMoisture
		p	0	block	block
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;)I	a	getGrowthAmount
		p	1	world	world
	m	(I)Lcfj;	b	withAge
		p	1	age	age
	m	()Lcgi;	c	getAgeProperty
	m	()I	d	getMaxAge
	m	()Lbqa;	e	getSeedsItem
	m	(Lcfj;)I	g	getAge
		p	1	state	state
	m	(Lcfj;)Z	h	isMature
		p	1	state	state
c	bww	net/minecraft/block/HorizontalConnectingBlock
	f	Lcga;	a	NORTH
	f	Lcga;	b	EAST
	f	Lcga;	c	SOUTH
	f	Lcga;	d	WEST
	f	Lcga;	e	WATERLOGGED
	f	Ljava/util/Map;	f	FACING_PROPERTIES
	f	[Ldfg;	g	collisionShapes
	f	[Ldfg;	h	boundingShapes
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	SHAPE_INDEX_CACHE
	m	(FFFFFLcfi$c;)V	<init>	<init>
		p	1	radius1	radius1
		p	2	radius2	radius2
		p	3	boundingHeight1	boundingHeight1
		p	4	boundingHeight2	boundingHeight2
		p	5	collisionHeight	collisionHeight
		p	6	settings	settings
	m	(FFFFF)[Ldfg;	a	createShapes
		p	1	radius1	radius1
		p	2	radius2	radius2
		p	3	height1	height1
		p	4	offset2	offset2
		p	5	height2	height2
	m	(Lfz;)I	a	getDirectionMask
		p	0	dir	dir
	m	(Lcfj;)I	g	getShapeIndex
		p	1	state	state
c	bwx	net/minecraft/block/CryingObsidianBlock
c	bwy	net/minecraft/block/DaylightDetectorBlock
	f	Lcgi;	a	POWER
	f	Lcga;	b	INVERTED
	f	Ldfg;	c	SHAPE
	m	(Lcfj;Lbqb;Lfu;)V	d	updateState
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bwz	net/minecraft/block/DeadBushBlock
	f	Ldfg;	a	SHAPE
c	bx	net/minecraft/predicate/NumberRange
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	EXCEPTION_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	EXCEPTION_SWAPPED
	f	Ljava/lang/Number;	c	min
	f	Ljava/lang/Number;	d	max
	m	(Ljava/lang/Number;Ljava/lang/Number;)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Lcom/mojang/brigadier/StringReader;Lbx$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lbx;	a	parse
		p	0	commandReader	commandReader
		p	2	converter	converter
		p	3	exceptionTypeSupplier	exceptionTypeSupplier
		p	4	mapper	mapper
	m	(Lcom/google/gson/JsonElement;Lbx;Ljava/util/function/BiFunction;Lbx$a;)Lbx;	a	fromJson
		p	0	json	json
		p	1	fallback	fallback
		p	2	asNumber	asNumber
		p	3	factory	factory
	m	()Ljava/lang/Number;	a	getMin
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	map
		p	0	object	object
		p	1	function	function
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isNextCharValid
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number;	a	fromStringReader
		p	0	reader	reader
		p	1	converter	converter
		p	2	exceptionTypeSupplier	exceptionTypeSupplier
	m	()Ljava/lang/Number;	b	getMax
	m	()Z	c	isDummy
	m	()Lcom/google/gson/JsonElement;	d	toJson
c	bx$a	net/minecraft/predicate/NumberRange$Factory
	m	(Ljava/lang/Number;Ljava/lang/Number;)Lbx;	create	create
		p	1	min	min
		p	2	max	max
c	bx$b	net/minecraft/predicate/NumberRange$CommandFactory
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Number;Ljava/lang/Number;)Lbx;	create	create
		p	1	reader	reader
		p	2	min	min
		p	3	max	max
c	bx$c	net/minecraft/predicate/NumberRange$FloatRange
	f	Lbx$c;	e	ANY
	f	Ljava/lang/Double;	f	squaredMin
	f	Ljava/lang/Double;	g	squaredMax
	m	(Ljava/lang/Float;Ljava/lang/Float;)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Lcom/mojang/brigadier/StringReader;)Lbx$c;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lbx$c;	a	parse
		p	0	reader	reader
		p	1	mapper	mapper
	m	(Ljava/lang/Float;)Ljava/lang/Double;	a	square
		p	0	value	value
	m	(Lcom/google/gson/JsonElement;)Lbx$c;	a	fromJson
		p	0	element	element
	m	(D)Z	a	testSqrt
		p	1	value	value
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lbx$c;	a	create
		p	0	reader	reader
		p	1	min	min
		p	2	max	max
	m	(F)Lbx$c;	b	atLeast
		p	0	value	value
	m	(F)Z	d	test
		p	1	value	value
c	bx$d	net/minecraft/predicate/NumberRange$IntRange
	f	Lbx$d;	e	ANY
	f	Ljava/lang/Long;	f	minSquared
	f	Ljava/lang/Long;	g	maxSquared
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Lcom/google/gson/JsonElement;)Lbx$d;	a	fromJson
		p	0	element	element
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	a	squared
		p	0	value	value
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lbx$d;	a	fromStringReader
		p	0	reader	reader
		p	1	converter	converter
	m	(Lcom/mojang/brigadier/StringReader;)Lbx$d;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lbx$d;	a	parse
		p	0	reader	reader
		p	1	min	min
		p	2	max	max
	m	(I)Lbx$d;	a	exactly
		p	0	value	value
	m	(I)Lbx$d;	b	atLeast
		p	0	value	value
	m	(I)Z	d	test
		p	1	value	value
c	bxa	net/minecraft/block/DetectorRailBlock
	f	Lcgg;	c	SHAPE
	f	Lcga;	d	POWERED
	m	(Lbqb;Lfu;Lcfj;)V	a	updatePoweredStatus
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getCarts
		p	1	world	world
		p	2	pos	pos
		p	3	entityClass	entityClass
		p	4	entityPredicate	entityPredicate
	m	(Lfu;)Ldeg;	a	getCartDetectionBox
		p	1	pos	pos
	m	(Lbqb;Lfu;Lcfj;Z)V	b	updateNearbyRails
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	unpowering	unpowering
c	bxb	net/minecraft/block/AbstractRedstoneGateBlock
	f	Ldfg;	b	SHAPE
	f	Lcga;	c	POWERED
	m	(Lbqd;Lfu;Lcfj;)Z	a	isLocked
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Lcfj;)Z	a	hasPower
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbpg;Lfu;Lcfj;)I	b	getOutputLevel
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqd;Lfu;Lfz;)I	b	getInputLevel
		p	1	world	world
		p	2	pos	pos
		p	3	dir	dir
	m	(Lbqd;Lfu;Lcfj;)I	b	getMaxInputLevelSides
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Lcfj;)I	b	getPower
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Lcfj;)V	c	updatePowered
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbpg;Lfu;Lcfj;)Z	c	isTargetNotAligned
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Lcfj;)V	d	updateTarget
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcfj;)I	g	getUpdateDelayInternal
		p	1	state	state
	m	(Lcfj;)Z	h	isValidInput
		p	1	state	state
	m	(Lcfj;)Z	l	isRedstoneGate
		p	0	state	state
c	bxc	net/minecraft/block/FacingBlock
	f	Lcgd;	a	FACING
c	bxd	net/minecraft/block/DispenserBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	TRIGGERED
	f	Ljava/util/Map;	c	BEHAVIORS
	m	(Lfv;)Lgj;	a	getOutputLocation
		p	0	pointer	pointer
	m	(Lbqb;Lfu;)V	a	dispense
		p	1	world	world
		p	2	pos	pos
	m	(Lbqa;Lgw;)V	a	registerBehavior
		p	0	provider	provider
		p	1	behavior	behavior
	m	(Lbki;)Lgw;	a	getBehaviorForItem
		p	1	stack	stack
c	bxe	net/minecraft/block/DoorBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	OPEN
	f	Lcgg;	c	HINGE
	f	Lcga;	d	POWERED
	f	Lcgg;	e	HALF
	f	Ldfg;	f	NORTH_SHAPE
	f	Ldfg;	g	SOUTH_SHAPE
	f	Ldfg;	h	EAST_SHAPE
	f	Ldfg;	i	WEST_SHAPE
	m	(Lbqb;Lfu;Z)V	a	setOpen
		p	1	world	world
		p	2	pos	pos
		p	3	open	open
	m	(Lbqb;Lfu;)Z	a	isWoodenDoor
		p	0	world	world
		p	1	pos	pos
	m	(Lbin;)Lcge;	b	getHinge
		p	1	ctx	ctx
	m	(Lbqb;Lfu;Z)V	b	playOpenCloseSound
		p	1	world	world
		p	2	pos	pos
		p	3	open	open
	m	()I	c	getOpenSoundEventId
	m	()I	d	getCloseSoundEventId
	m	(Lcfj;)Z	h	isWoodenDoor
		p	0	state	state
c	bxf	net/minecraft/block/DoubleBlockProperties
	m	(Lcdm;Ljava/util/function/Function;Ljava/util/function/Function;Lcgd;Lcfj;Lbqc;Lfu;Ljava/util/function/BiPredicate;)Lbxf$c;	a	toPropertySource
		p	0	blockEntityType	blockEntityType
		p	1	typeMapper	typeMapper
		p	4	state	state
		p	5	world	world
		p	6	pos	pos
		p	7	fallbackTester	fallbackTester
c	bxf$a	net/minecraft/block/DoubleBlockProperties$Type
c	bxf$b	net/minecraft/block/DoubleBlockProperties$PropertyRetriever
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	getFrom
		p	1	single	single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	getFromBoth
		p	1	first	first
		p	2	second	second
	m	()Ljava/lang/Object;	b	getFallback
c	bxf$c	net/minecraft/block/DoubleBlockProperties$PropertySource
	m	(Lbxf$b;)Ljava/lang/Object;	apply	apply
		p	1	retriever	retriever
c	bxf$c$a	net/minecraft/block/DoubleBlockProperties$PropertySource$Pair
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1	first	first
		p	2	second	second
c	bxf$c$b	net/minecraft/block/DoubleBlockProperties$PropertySource$Single
	f	Ljava/lang/Object;	a	single
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1	single	single
c	bxg	net/minecraft/block/TallPlantBlock
	f	Lcgg;	a	HALF
	m	(Lbqc;Lfu;I)V	a	placeAt
		p	1	world	world
		p	2	pos	pos
		p	3	flags	flags
c	bxh	net/minecraft/block/DragonEggBlock
	f	Ldfg;	a	SHAPE
	m	(Lcfj;Lbqb;Lfu;)V	d	teleport
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bxi	net/minecraft/block/DropperBlock
	f	Lgw;	c	BEHAVIOR
c	bxj	net/minecraft/block/EnchantingTableBlock
	f	Ldfg;	a	SHAPE
c	bxk	net/minecraft/block/EndGatewayBlock
c	bxl	net/minecraft/block/EndPortalBlock
	f	Ldfg;	a	SHAPE
c	bxm	net/minecraft/block/EndPortalFrameBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	EYE
	f	Ldfg;	c	FRAME_SHAPE
	f	Ldfg;	d	EYE_SHAPE
	f	Ldfg;	e	FRAME_WITH_EYE_SHAPE
	f	Lcfo;	f	COMPLETED_FRAME
	m	()Lcfo;	c	getCompletedFramePattern
c	bxn	net/minecraft/block/EndRodBlock
	f	Ldfg;	b	Y_SHAPE
	f	Ldfg;	c	Z_SHAPE
	f	Ldfg;	d	X_SHAPE
c	bxo	net/minecraft/block/EnderChestBlock
	f	Lcgd;	b	FACING
	f	Lcga;	c	WATERLOGGED
	f	Ldfg;	d	SHAPE
	f	Lne;	e	CONTAINER_NAME
c	bxp	net/minecraft/block/BlockEntityProvider
	m	(Lbpg;)Lcdl;	a	createBlockEntity
		p	1	world	world
c	bxq	net/minecraft/block/WallMountedBlock
	f	Lcgg;	u	FACE
	m	(Lbqd;Lfu;Lfz;)Z	b	canPlaceAt
		p	1	pos	pos
		p	2	direction	direction
	m	(Lcfj;)Lfz;	h	getDirection
		p	0	state	state
c	bxr	net/minecraft/block/FallingBlock
	m	(Lbqb;Lfu;Lbbf;)V	a	onDestroyedOnLanding
		p	1	world	world
		p	2	pos	pos
		p	3	fallingBlockEntity	fallingBlockEntity
	m	(Lbbf;)V	a	configureFallingBlockEntity
		p	1	entity	entity
	m	(Lbqb;Lfu;Lcfj;Lcfj;Lbbf;)V	a	onLanding
		p	1	world	world
		p	2	pos	pos
		p	3	fallingBlockState	fallingBlockState
		p	4	currentStateInPos	currentStateInPos
		p	5	fallingBlockEntity	fallingBlockEntity
	m	(Lcfj;Lbpg;Lfu;)I	c	getColor
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	()I	c	getFallDelay
		c	Gets the amount of time in ticks this block will wait before attempting to start falling.
	m	(Lcfj;)Z	h	canFallThrough
		p	0	state	state
c	bxs	net/minecraft/block/FarmlandBlock
	f	Lcgi;	a	MOISTURE
	f	Ldfg;	b	SHAPE
	m	(Lbpg;Lfu;)Z	a	hasCrop
		p	0	world	world
		p	1	pos	pos
	m	(Lbqd;Lfu;)Z	a	isWaterNearby
		p	0	world	world
		p	1	pos	pos
	m	(Lcfj;Lbqb;Lfu;)V	d	setToDirt
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bxt	net/minecraft/block/FenceBlock
	f	[Ldfg;	i	cullingShapes
	m	(Lcfj;ZLfz;)Z	a	canConnect
		p	1	state	state
		p	2	neighborIsFullSquare	neighborIsFullSquare
		p	3	dir	dir
	m	(Lbvr;)Z	c	isFence
		p	1	block	block
c	bxu	net/minecraft/block/FenceGateBlock
	f	Lcga;	a	OPEN
	f	Lcga;	b	POWERED
	f	Lcga;	c	IN_WALL
	f	Ldfg;	d	Z_AXIS_SHAPE
	f	Ldfg;	e	X_AXIS_SHAPE
	f	Ldfg;	f	IN_WALL_Z_AXIS_SHAPE
	f	Ldfg;	g	IN_WALL_X_AXIS_SHAPE
	f	Ldfg;	h	Z_AXIS_COLLISION_SHAPE
	f	Ldfg;	i	X_AXIS_COLLISION_SHAPE
	f	Ldfg;	j	Z_AXIS_CULL_SHAPE
	f	Ldfg;	k	X_AXIS_CULL_SHAPE
	f	Ldfg;	o	IN_WALL_Z_AXIS_CULL_SHAPE
	f	Ldfg;	p	IN_WALL_X_AXIS_CULL_SHAPE
	m	(Lcfj;Lfz;)Z	a	canWallConnect
		p	0	state	state
		p	1	side	side
	m	(Lcfj;)Z	h	isWall
		p	1	state	state
c	bxv	net/minecraft/block/FireBlock
	f	Lcgi;	g	AGE
	f	Lcga;	h	NORTH
	f	Lcga;	i	EAST
	f	Lcga;	j	SOUTH
	f	Lcga;	k	WEST
	f	Lcga;	o	UP
	f	Ljava/util/Map;	p	DIRECTION_PROPERTIES
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	q	burnChances
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	r	spreadChances
	m	(Lbqb;Lfu;ILjava/util/Random;I)V	a	trySpreadingFire
		p	1	world	world
		p	2	pos	pos
		p	3	spreadFactor	spreadFactor
		p	4	rand	rand
		p	5	currentAge	currentAge
	m	(Lbqd;Lfu;)I	a	getBurnChance
		p	2	pos	pos
	m	(Lbqb;Lfu;)Z	a	isRainingAround
		p	1	world	world
		p	2	pos	pos
	m	(Lbvr;II)V	a	registerFlammableBlock
		p	1	block	block
		p	2	burnChance	burnChance
		p	3	spreadChance	spreadChance
	m	(Lbpg;Lfu;)Lcfj;	b	getStateForPosition
		p	1	world	world
		p	2	pos	pos
	m	()V	c	registerDefaultFlammables
	m	(Lbpg;Lfu;)Z	e	areBlocksAroundFlammable
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;)I	h	getSpreadChance
		p	1	state	state
	m	(Lcfj;)I	l	getBurnChance
		p	1	state	state
c	bxw	net/minecraft/block/FletchingTableBlock
c	bxx	net/minecraft/block/FlowerBlock
	f	Ldfg;	a	SHAPE
	f	Laoe;	b	effectInStew
	f	I	c	effectInStewDuration
	m	(Laoe;ILcfi$c;)V	<init>	<init>
		p	1	suspiciousStewEffect	suspiciousStewEffect
		p	2	effectDuration	effectDuration
		p	3	settings	settings
	m	()Laoe;	c	getEffectInStew
	m	()I	d	getEffectInStewDuration
c	bxy	net/minecraft/block/FlowerPotBlock
	f	Ldfg;	a	SHAPE
	f	Ljava/util/Map;	b	CONTENT_TO_POTTED
	f	Lbvr;	c	content
	m	(Lbvr;Lcfi$c;)V	<init>	<init>
		p	1	content	content
		p	2	settings	settings
	m	()Lbvr;	c	getContent
c	bxz	net/minecraft/block/FrostedIceBlock
	f	Lcgi;	a	AGE
	m	(Lbpg;Lfu;I)Z	a	canMelt
		p	1	world	world
		p	2	pos	pos
		p	3	maxNeighbors	maxNeighbors
	m	(Lcfj;Lbqb;Lfu;)Z	e	increaseAge
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	by	net/minecraft/predicate/entity/EntityEffectPredicate
	f	Lby;	a	EMPTY
	f	Ljava/util/Map;	b	effects
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	effects	effects
	m	(Lcom/google/gson/JsonElement;)Lby;	a	fromJson
		p	0	json	json
	m	(Laom;)Z	a	test
		p	1	entity	entity
	m	(Laoy;)Z	a	test
		p	1	livingEntity	livingEntity
	m	(Laoe;)Lby;	a	withEffect
		p	1	statusEffect	statusEffect
	m	()Lby;	a	create
	m	(Ljava/util/Map;)Z	a	test
		p	1	effects	effects
	m	()Lcom/google/gson/JsonElement;	b	toJson
c	by$a	net/minecraft/predicate/entity/EntityEffectPredicate$EffectData
	f	Lbx$d;	a	amplifier
	f	Lbx$d;	b	duration
	f	Ljava/lang/Boolean;	c	ambient
	f	Ljava/lang/Boolean;	d	visible
	m	(Lbx$d;Lbx$d;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1	amplifier	amplifier
		p	2	duration	duration
		p	3	ambient	ambient
		p	4	visible	visible
	m	(Lcom/google/gson/JsonObject;)Lby$a;	a	fromJson
		p	0	json	json
	m	(Laog;)Z	a	test
		p	1	statusEffectInstance	statusEffectInstance
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	bya	net/minecraft/block/FungusBlock
	f	Ldfg;	a	SHAPE
	m	(Lcfi$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	settings	settings
c	byb	net/minecraft/block/FurnaceBlock
c	byc	net/minecraft/block/GlassBlock
c	byd	net/minecraft/block/GlazedTerracottaBlock
c	bye	net/minecraft/block/GrassBlock
c	byf	net/minecraft/block/GrassPathBlock
	f	Ldfg;	a	SHAPE
c	byg	net/minecraft/block/GravelBlock
c	byh	net/minecraft/block/GrindstoneBlock
	f	Ldfg;	A	SOUTH_WALL_SIDES
	f	Ldfg;	B	SOUTH_WALL_SHAPE
	f	Ldfg;	C	NORTH_WALL_WEST_LEG
	f	Ldfg;	D	NORTH_WALL_EAST_LEG
	f	Ldfg;	E	NORTH_WALL_WEST_HINGE
	f	Ldfg;	F	NORTH_WALL_EAST_HINGE
	f	Ldfg;	G	NORTH_WALL_WEST_SIDE
	f	Ldfg;	H	NORTH_WALL_EAST_SIDE
	f	Ldfg;	I	NORTH_WALL_SIDES
	f	Ldfg;	J	NORTH_WALL_SHAPE
	f	Ldfg;	K	WEST_WALL_NORTH_LEG
	f	Ldfg;	L	WEST_WALL_SOUTH_LEG
	f	Ldfg;	M	WEST_WALL_NORTH_HINGE
	f	Ldfg;	N	WEST_WALL_SOUTH_HINGE
	f	Ldfg;	O	WEST_WALL_NORTH_SIDE
	f	Ldfg;	P	WEST_WALL_SOUTH_SIDE
	f	Ldfg;	Q	WEST_WALL_SIDES
	f	Ldfg;	R	WEST_WALL_SHAPE
	f	Ldfg;	S	EAST_WALL_NORTH_LEG
	f	Ldfg;	T	EAST_WALL_SOUTH_LEG
	f	Ldfg;	U	EAST_WALL_NORTH_HINGE
	f	Ldfg;	V	EAST_WALL_SOUTH_HINGE
	f	Ldfg;	W	EAST_WALL_NORTH_SIDE
	f	Ldfg;	X	EAST_WALL_SOUTH_SIDE
	f	Ldfg;	Y	EAST_WALL_SIDES
	f	Ldfg;	Z	EAST_WALL_SHAPE
	f	Ldfg;	a	WEST_FLOOR_LEG
	f	Lne;	aD	TITLE
	f	Ldfg;	aa	WEST_CEILING_LEG
	f	Ldfg;	ab	EAST_CEILING_LEG
	f	Ldfg;	ac	WEST_CEILING_HINGE
	f	Ldfg;	ad	EAST_CEILING_HINGE
	f	Ldfg;	ae	WEST_CEILING_SIDE
	f	Ldfg;	af	EAST_CEILING_SIDE
	f	Ldfg;	ag	Z_CEILING_SIDES
	f	Ldfg;	ah	Z_CEILING_SHAPE
	f	Ldfg;	ai	NORTH_CEILING_LEG
	f	Ldfg;	aj	SOUTH_CEILING_LEG
	f	Ldfg;	ak	NORTH_CEILING_HINGE
	f	Ldfg;	al	SOUTH_CEILING_HINGE
	f	Ldfg;	am	NORTH_CEILING_SIDE
	f	Ldfg;	an	SOUTH_CEILING_SIDE
	f	Ldfg;	ao	X_CEILING_SIDES
	f	Ldfg;	ap	X_CEILING_SHAPE
	f	Ldfg;	b	EAST_FLOOR_LEG
	f	Ldfg;	c	WEST_FLOOR_HINGE
	f	Ldfg;	d	EAST_FLOOR_HINGE
	f	Ldfg;	e	WEST_FLOOR_SIDE
	f	Ldfg;	f	EAST_FLOOR_SIDE
	f	Ldfg;	g	Z_FLOOR_SIDES
	f	Ldfg;	h	Z_FLOOR_SHAPE
	f	Ldfg;	i	NORTH_FLOOR_LEG
	f	Ldfg;	j	SOUTH_FLOOR_LEG
	f	Ldfg;	k	NORTH_FLOOR_HINGE
	f	Ldfg;	o	SOUTH_FLOOR_HINGE
	f	Ldfg;	p	NORTH_FLOOR_SIDE
	f	Ldfg;	q	SOUTH_FLOOR_SIDE
	f	Ldfg;	r	X_FLOOR_SIDES
	f	Ldfg;	s	X_FLOOR_SHAPE
	f	Ldfg;	t	SOUTH_WALL_WEST_LEG
	f	Ldfg;	v	SOUTH_WALL_EAST_LEG
	f	Ldfg;	w	SOUTH_WALL_WEST_HINGE
	f	Ldfg;	x	SOUTH_WALL_EAST_HINGE
	f	Ldfg;	y	SOUTH_WALL_WEST_SIDE
	f	Ldfg;	z	SOUTH_WALL_EAST_SIDE
	m	(Lcfj;)Ldfg;	l	getShape
		p	1	state	state
c	byi	net/minecraft/block/AbstractPlantPartBlock
	f	Lfz;	a	growthDirection
	f	Z	b	tickWater
	f	Ldfg;	c	outlineShape
	m	(Lcfi$c;Lfz;Ldfg;Z)V	<init>	<init>
		p	1	settings	settings
		p	2	growthDirection	growthDirection
		p	3	outlineShape	outlineShape
		p	4	tickWater	tickWater
	m	(Lbvr;)Z	c	canAttachTo
		p	1	block	block
	m	()Lbyk;	c	getStem
	m	()Lbvr;	d	getPlant
c	byj	net/minecraft/block/AbstractPlantBlock
c	byk	net/minecraft/block/AbstractPlantStemBlock
	f	Lcgi;	d	AGE
	f	D	e	growthChance
	m	(Lcfi$c;Lfz;Ldfg;ZD)V	<init>	<init>
		p	1	settings	settings
		p	2	growthDirection	growthDirection
		p	3	outlineShape	outlineShape
		p	4	tickWater	tickWater
		p	5	growthChance	growthChance
	m	(Lbqc;)Lcfj;	a	getRandomGrowthState
		p	1	world	world
	m	(Lcfj;)Z	h	chooseStemState
		p	1	state	state
c	byl	net/minecraft/block/TransparentBlock
c	bym	net/minecraft/block/HayBlock
c	byn	net/minecraft/block/HoneyBlock
	f	Ldfg;	a	SHAPE
	m	(Lfu;Laom;)Z	a	isSliding
		p	1	pos	pos
		p	2	entity	entity
	m	(Laom;Lfu;)V	a	triggerAdvancement
		p	1	entity	entity
		p	2	pos	pos
	m	(Lbqb;Laom;)V	a	addCollisionEffects
		p	1	world	world
		p	2	entity	entity
	m	(Laom;I)V	a	addParticles
		p	0	entity	entity
		p	1	count	count
	m	(Laom;)V	a	addRegularParticles
		p	0	entity	entity
	m	(Laom;)V	b	addRichParticles
		p	0	entity	entity
	m	(Laom;)Z	c	hasHoneyBlockEffects
		p	0	entity	entity
	m	(Laom;)V	d	updateSlidingVelocity
		p	1	entity	entity
c	byo	net/minecraft/block/HopperBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	ENABLED
	f	Ldfg;	c	TOP_SHAPE
	f	Ldfg;	d	MIDDLE_SHAPE
	f	Ldfg;	e	OUTSIDE_SHAPE
	f	Ldfg;	f	DEFAULT_SHAPE
	f	Ldfg;	g	DOWN_SHAPE
	f	Ldfg;	h	EAST_SHAPE
	f	Ldfg;	i	NORTH_SHAPE
	f	Ldfg;	j	SOUTH_SHAPE
	f	Ldfg;	k	WEST_SHAPE
	f	Ldfg;	o	DOWN_RAY_TRACE_SHAPE
	f	Ldfg;	p	EAST_RAY_TRACE_SHAPE
	f	Ldfg;	q	NORTH_RAY_TRACE_SHAPE
	f	Ldfg;	r	SOUTH_RAY_TRACE_SHAPE
	f	Ldfg;	s	WEST_RAY_TRACE_SHAPE
	m	(Lbqb;Lfu;Lcfj;)V	a	updateEnabled
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	byp	net/minecraft/block/HorizontalFacingBlock
	f	Lcgd;	aq	FACING
c	byq	net/minecraft/block/MushroomBlock
	f	Lcga;	a	NORTH
	f	Lcga;	b	EAST
	f	Lcga;	c	SOUTH
	f	Lcga;	d	WEST
	f	Lcga;	e	UP
	f	Lcga;	f	DOWN
	f	Ljava/util/Map;	g	FACING_PROPERTIES
c	byr	net/minecraft/block/IceBlock
	m	(Lcfj;Lbqb;Lfu;)V	d	melt
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bys	net/minecraft/block/InfestedBlock
	f	Lbvr;	a	regularBlock
	f	Ljava/util/Map;	b	REGULAR_TO_INFESTED
	m	(Lbvr;Lcfi$c;)V	<init>	<init>
		c	Creates an infested block
		p	1	regularBlock	regularBlock
			c	the block this infested block should mimic
		p	2	settings	settings
			c	block settings
	m	(Lbqb;Lfu;)V	a	spawnSilverfish
		p	1	world	world
		p	2	pos	pos
	m	()Lbvr;	c	getRegularBlock
	m	(Lbvr;)Lcfj;	c	fromRegularBlock
		p	0	regularBlock	regularBlock
	m	(Lcfj;)Z	h	isInfestable
		p	0	block	block
c	byt	net/minecraft/block/PaneBlock
	m	(Lcfj;Z)Z	a	connectsTo
		p	1	state	state
c	byu	net/minecraft/block/JigsawBlock
	f	Lcgg;	a	ORIENTATION
	m	(Lcve$c;Lcve$c;)Z	a	attachmentMatches
		p	0	info1	info1
		p	1	info2	info2
	m	(Lcfj;)Lfz;	h	getFacing
	m	(Lcfj;)Lfz;	l	getRotation
c	byv	net/minecraft/block/JukeboxBlock
	f	Lcga;	a	HAS_RECORD
	m	(Lbqb;Lfu;)V	a	removeRecord
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;Lcfj;Lbki;)V	a	setRecord
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	stack	stack
c	byw	net/minecraft/block/KelpBlock
	f	Ldfg;	e	SHAPE
c	byx	net/minecraft/block/KelpPlantBlock
c	byy	net/minecraft/block/LadderBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	WATERLOGGED
	f	Ldfg;	c	EAST_SHAPE
	f	Ldfg;	d	WEST_SHAPE
	f	Ldfg;	e	SOUTH_SHAPE
	f	Ldfg;	f	NORTH_SHAPE
	m	(Lbpg;Lfu;Lfz;)Z	a	canPlaceOn
		p	1	world	world
		p	2	pos	pos
		p	3	side	side
c	byz	net/minecraft/block/LanternBlock
	f	Lcga;	a	HANGING
	f	Ldfg;	b	STANDING_SHAPE
	f	Ldfg;	c	HANGING_SHAPE
	m	(Lcfj;)Lfz;	h	attachedDirection
		p	0	state	state
c	bz	net/minecraft/predicate/NbtPredicate
	f	Lbz;	a	ANY
	f	Lle;	b	tag
	m	(Lle;)V	<init>	<init>
		p	1	tag	tag
	m	(Lbki;)Z	a	test
		p	1	stack	stack
	m	(Lcom/google/gson/JsonElement;)Lbz;	a	fromJson
		p	0	json	json
	m	(Llu;)Z	a	test
		p	1	tag	tag
	m	(Laom;)Z	a	test
		p	1	entity	entity
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Laom;)Lle;	b	entityToTag
		p	0	entity	entity
c	bza	net/minecraft/block/LeavesBlock
	f	Lcgi;	a	DISTANCE
	f	Lcga;	b	PERSISTENT
	m	(Lcfj;Lbqc;Lfu;)Lcfj;	a	updateDistanceFromLogs
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;)I	h	getDistanceFromLog
		p	0	state	state
c	bzb	net/minecraft/block/LecternBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	POWERED
	f	Lcga;	c	HAS_BOOK
	f	Ldfg;	d	BOTTOM_SHAPE
	f	Ldfg;	e	MIDDLE_SHAPE
	f	Ldfg;	f	BASE_SHAPE
	f	Ldfg;	g	COLLISION_SHAPE_TOP
	f	Ldfg;	h	COLLISION_SHAPE
	f	Ldfg;	i	WEST_SHAPE
	f	Ldfg;	j	NORTH_SHAPE
	f	Ldfg;	k	EAST_SHAPE
	f	Ldfg;	o	SOUTH_SHAPE
	m	(Lbqb;Lfu;Lcfj;Z)V	a	setHasBook
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	hasBook	hasBook
	m	(Lbqb;Lfu;Lbec;)V	a	openScreen
		p	1	world	world
		p	2	pos	pos
		p	3	player	player
	m	(Lbqb;Lfu;Lcfj;Lbki;)Z	a	putBookIfAbsent
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	book	book
	m	(Lbqb;Lfu;Lcfj;)V	a	setPowered
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lbqb;Lfu;Lcfj;)V	b	updateNeighborAlways
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lbqb;Lfu;Lcfj;Lbki;)V	b	putBook
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	book	book
	m	(Lbqb;Lfu;Lcfj;Z)V	b	setPowered
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	powered	powered
	m	(Lcfj;Lbqb;Lfu;)V	d	dropBook
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bzd	net/minecraft/block/LeverBlock
	f	Lcga;	a	POWERED
	f	Ldfg;	b	NORTH_WALL_SHAPE
	f	Ldfg;	c	SOUTH_WALL_SHAPE
	f	Ldfg;	d	WEST_WALL_SHAPE
	f	Ldfg;	e	EAST_WALL_SHAPE
	f	Ldfg;	f	FLOOR_Z_AXIS_SHAPE
	f	Ldfg;	g	FLOOR_X_AXIS_SHAPE
	f	Ldfg;	h	CEILING_Z_AXIS_SHAPE
	f	Ldfg;	i	CEILING_X_AXIS_SHAPE
	m	(Lcfj;Lbqc;Lfu;F)V	a	spawnParticles
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	alpha	alpha
	m	(Lcfj;Lbqb;Lfu;)V	e	updateNeighbors
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bze	net/minecraft/block/FluidBlock
	f	Lcgi;	a	LEVEL
	f	Lcwy;	b	fluid
	f	Ldfg;	c	COLLISION_SHAPE
	f	Ljava/util/List;	d	statesByLevel
	m	(Lcwy;Lcfi$c;)V	<init>	<init>
		p	1	fluid	fluid
		p	2	settings	settings
	m	(Lbqb;Lfu;Lcfj;)Z	a	receiveNeighborFluids
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqc;Lfu;)V	a	playExtinguishSound
		p	1	world	world
		p	2	pos	pos
c	bzf	net/minecraft/block/FluidFillable
	m	(Lbqc;Lfu;Lcfj;Lcxa;)Z	a	tryFillWithFluid
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	fluidState	fluidState
	m	(Lbpg;Lfu;Lcfj;Lcwz;)Z	a	canFillWithFluid
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	fluid	fluid
c	bzg	net/minecraft/block/LoomBlock
	f	Lne;	a	TITLE
c	bzh	net/minecraft/block/MagmaBlock
c	bzi	net/minecraft/block/MelonBlock
c	bzj	net/minecraft/util/BlockMirror
	f	Lc;	d	directionTransformation
	m	(Ljava/lang/String;ILc;)V	<init>	<init>
		p	3	directionTransformation	directionTransformation
	m	()Lc;	a	getDirectionTransformation
	m	(II)I	a	mirror
		p	1	rotation	rotation
		p	2	fullTurn	fullTurn
	m	(Lfz;)Lcap;	a	getRotation
		p	1	direction	direction
	m	(Lfz;)Lfz;	b	apply
		p	1	direction	direction
c	bzk	net/minecraft/block/MushroomPlantBlock
	f	Ldfg;	a	SHAPE
	m	(Lzd;Lfu;Lcfj;Ljava/util/Random;)Z	a	trySpawningBigMushroom
		p	2	pos	pos
		p	3	state	state
		p	4	random	random
c	bzl	net/minecraft/block/MyceliumBlock
c	bzm	net/minecraft/block/NetherPortalBlock
	f	Lcgg;	a	AXIS
	f	Ldfg;	b	X_SHAPE
	f	Ldfg;	c	Z_SHAPE
	m	(Lbqc;Lfu;)Z	a	createPortalAt
	m	(Lbqc;Lfu;)Lbzm$a;	b	createAreaHelper
	m	(Lbqc;Lfu;)Lcfo$b;	c	findPortal
		p	1	world	world
c	bzm$a	net/minecraft/block/NetherPortalBlock$AreaHelper
	f	Lbqc;	a	world
	f	Lfz$a;	b	axis
	f	Lfz;	c	negativeDir
	f	Lfz;	d	positiveDir
	f	I	e	foundPortalBlocks
	f	Lfu;	f	lowerCorner
	f	I	g	height
	f	I	h	width
	m	(Lbqc;Lfu;Lfz$a;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	axis	axis
	m	()I	a	getHeight
	m	(Lcfj;)Z	a	validStateInsidePortal
		p	1	state	state
	m	(Lfu;Lfz;)I	a	distanceToPortalEdge
		p	1	pos	pos
		p	2	dir	dir
	m	()I	b	getWidth
	m	()I	c	findHeight
	m	()Z	d	isValid
	m	()V	e	createPortal
	m	()Z	f	wasAlreadyValid
	m	()Z	g	portalAlreadyExisted
c	bzn	net/minecraft/block/SproutsBlock
	f	Ldfg;	a	SHAPE
c	bzo	net/minecraft/block/VineLogic
	m	(Lcfj;)Z	a	isValidForWeepingStem
		p	0	state	state
c	bzp	net/minecraft/block/NetherWartBlock
	f	Lcgi;	a	AGE
	f	[Ldfg;	b	AGE_TO_SHAPE
c	bzq	net/minecraft/block/NetherrackBlock
c	bzr	net/minecraft/block/NoteBlock
	f	Lcgg;	a	INSTRUMENT
	f	Lcga;	b	POWERED
	f	Lcgi;	c	NOTE
	m	(Lbqb;Lfu;)V	a	playNote
		p	1	world	world
		p	2	pos	pos
c	bzs	net/minecraft/block/NyliumBlock
	m	(Lcfj;Lbqd;Lfu;)Z	b	stayAlive
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bzt	net/minecraft/block/ObserverBlock
	f	Lcga;	b	POWERED
	m	(Lbqb;Lfu;Lcfj;)V	a	updateNeighbors
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqc;Lfu;)V	a	scheduleTick
		p	1	world	world
		p	2	pos	pos
c	bzu	net/minecraft/block/OreBlock
	m	(Ljava/util/Random;)I	a	getExperienceWhenMined
		p	1	random	random
c	bzv	net/minecraft/block/ConnectingBlock
	f	Lcga;	a	NORTH
	f	Lcga;	b	EAST
	f	Lcga;	c	SOUTH
	f	Lcga;	d	WEST
	f	Lcga;	e	UP
	f	Lcga;	f	DOWN
	f	Ljava/util/Map;	g	FACING_PROPERTIES
	f	[Ldfg;	h	CONNECTIONS_TO_SHAPE
	f	[Lfz;	i	FACINGS
	m	(FLcfi$c;)V	<init>	<init>
		p	1	radius	radius
		p	2	settings	settings
	m	(F)[Ldfg;	a	generateFacingsToShapeMap
		p	1	radius	radius
	m	(Lcfj;)I	h	getConnectionMask
		p	1	state	state
c	bzw	net/minecraft/block/PlayerSkullBlock
c	bzx	net/minecraft/block/WallPlayerSkullBlock
c	bzy	net/minecraft/block/PotatoesBlock
	f	[Ldfg;	a	AGE_TO_SHAPE
c	bzz	net/minecraft/block/RedstoneBlock
c	c	net/minecraft/util/math/DirectionTransformation
	f	La;	W	matrix
	f	Ljava/lang/String;	X	name
	f	Ljava/util/Map;	Y	mappings
	f	Z	Z	flipX
	f	Z	aa	flipY
	f	Z	ab	flipZ
	f	Le;	ac	axisTransformation
	f	[[Lc;	ad	COMBINATIONS
	f	[Lc;	ae	INVERSES
	m	(Ljava/lang/String;ILjava/lang/String;Le;ZZZ)V	<init>	<init>
		p	3	name	name
		p	4	axisTransformation	axisTransformation
		p	5	flipX	flipX
		p	6	flipY	flipY
		p	7	flipZ	flipZ
	m	(Lfz;)Lfz;	a	map
		p	1	direction	direction
	m	(Lgb;)Lgb;	a	mapJigsawOrientation
		p	1	orientation	orientation
	m	(Lc;)Lc;	a	prepend
		p	1	transformation	transformation
	m	(Lfz$a;)Z	a	shouldFlipDirection
		p	1	axis	axis
	m	()Lit/unimi/dsi/fastutil/booleans/BooleanList;	b	getAxisFlips
c	ca	net/minecraft/advancement/criterion/NetherTravelCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lca$a;	a	conditionsFromJson
	m	(Lze;Ldem;)V	a	trigger
		p	1	player	player
		p	2	enteredPos	enteredPos
c	ca$a	net/minecraft/advancement/criterion/NetherTravelCriterion$Conditions
	f	Lbu;	a	enteredPos
	f	Lbu;	b	exitedPos
	f	Law;	c	distance
	m	(Lbe$b;Lbu;Lbu;Law;)V	<init>	<init>
		p	1	player	player
		p	2	enteredPos	enteredPos
		p	3	exitedPos	exitedPos
		p	4	distance	distance
	m	(Law;)Lca$a;	a	distance
		p	0	distance	distance
	m	(Lzd;Ldem;DDD)Z	a	matches
		p	1	world	world
		p	2	enteredPos	enteredPos
		p	3	exitedPosX	exitedPosX
		p	5	exitedPosY	exitedPosY
		p	7	exitedPosZ	exitedPosZ
c	caa	net/minecraft/block/PoweredRailBlock
	f	Lcgg;	c	SHAPE
	f	Lcga;	d	POWERED
	m	(Lbqb;Lfu;ZILcgm;)Z	a	isPoweredByOtherRails
		p	1	world	world
		p	2	pos	pos
		p	4	distance	distance
		p	5	shape	shape
	m	(Lbqb;Lfu;Lcfj;ZI)Z	a	isPoweredByOtherRails
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	boolean4	boolean4
		p	5	distance	distance
c	cab	net/minecraft/block/PressurePlateBlock
	f	Lcga;	d	POWERED
	f	Lcab$a;	e	type
	m	(Lcab$a;Lcfi$c;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
c	cab$a	net/minecraft/block/PressurePlateBlock$ActivationRule
c	cac	net/minecraft/block/PumpkinBlock
c	cad	net/minecraft/block/RailBlock
	f	Lcgg;	c	SHAPE
c	cae	net/minecraft/block/RailPlacementHelper
	f	Lbqb;	a	world
	f	Lfu;	b	pos
	f	Lbvj;	c	block
	f	Lcfj;	d	state
	f	Z	e	allowCurves
	f	Ljava/util/List;	f	neighbors
	m	(Lbqb;Lfu;Lcfj;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcgm;)V	a	computeNeighbors
		p	1	shape	shape
	m	(Lcae;)Z	a	isNeighbor
		p	1	other	other
	m	(ZZLcgm;)Lcae;	a	updateBlockState
		p	1	powered	powered
		p	2	forceUpdate	forceUpdate
	m	()Ljava/util/List;	a	getNeighbors
	m	(Lfu;)Z	a	isVerticallyNearRail
		p	1	pos	pos
	m	(Lcae;)Z	b	canConnect
		p	1	placementHelper	placementHelper
	m	()I	b	getNeighborCount
	m	(Lfu;)Lcae;	b	getNeighboringRail
		p	1	pos	pos
	m	(Lcae;)V	c	computeRailShape
		p	1	placementHelper	placementHelper
	m	()Lcfj;	c	getBlockState
	m	(Lfu;)Z	c	isNeighbor
		p	1	pos	pos
	m	()V	d	updateNeighborPositions
	m	(Lfu;)Z	d	canConnect
		p	1	pos	pos
c	caf	net/minecraft/block/RedstoneOreBlock
	f	Lcga;	a	LIT
	m	(Lbqb;Lfu;)V	a	spawnParticles
		p	0	world	world
		p	1	pos	pos
	m	(Lcfj;Lbqb;Lfu;)V	d	light
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	cag	net/minecraft/block/RedstoneWireBlock
	f	Lcgg;	a	WIRE_CONNECTION_NORTH
	f	Lcgg;	b	WIRE_CONNECTION_EAST
	f	Lcgg;	c	WIRE_CONNECTION_SOUTH
	f	Lcgg;	d	WIRE_CONNECTION_WEST
	f	Lcgi;	e	POWER
	f	Ljava/util/Map;	f	DIRECTION_TO_WIRE_CONNECTION_PROPERTY
	f	Lcfj;	o	dotShape
	f	Z	p	wiresGivePower
	m	(Lbpg;Lfu;Lfz;)Lcgn;	a	getRenderConnectionType
	m	(Lbpg;Lcfj;Lfu;)Lcfj;	a	method_27840
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
	m	(Lcfj;Lfz;)Z	a	connectsTo
		p	0	state	state
		p	1	dir	dir
	m	(Lbqb;Lfu;Lcfj;)V	a	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(I)I	b	getWireColor
		p	0	powerLevel	powerLevel
	m	(Lbqb;Lfu;)V	b	updateNeighbors
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;Lcfj;)Z	b	canRunOnTop
		p	1	world	world
		p	2	pos	pos
		p	3	floor	floor
	m	(Lcfj;)Z	h	connectsTo
		p	0	state	state
	m	(Lcfj;)Z	m	isFullyConnected
		p	0	state	state
	m	(Lcfj;)Z	n	isNotConnected
		p	0	state	state
	m	(Lcfj;)I	o	increasePower
		p	1	state	state
c	cah	net/minecraft/block/RedstoneLampBlock
	f	Lcga;	a	LIT
c	cai	net/minecraft/block/RedstoneTorchBlock
	f	Lcga;	a	LIT
	f	Ljava/util/Map;	b	BURNOUT_MAP
	m	(Lbqb;Lfu;Lcfj;)Z	a	shouldUnpower
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Z)Z	a	isBurnedOut
		p	0	world	world
		p	1	pos	pos
		p	2	addNew	addNew
c	cai$a	net/minecraft/block/RedstoneTorchBlock$BurnoutEntry
	f	Lfu;	a	pos
	f	J	b	time
	m	(Lfu;J)V	<init>	<init>
		p	1	pos	pos
		p	2	time	time
c	caj	net/minecraft/block/WallRedstoneTorchBlock
	f	Lcgd;	b	FACING
	f	Lcga;	c	LIT
c	cak	net/minecraft/block/BlockRenderType
c	cal	net/minecraft/block/RepeaterBlock
	f	Lcga;	a	LOCKED
	f	Lcgi;	d	DELAY
c	cam	net/minecraft/block/RespawnAnchorBlock
	f	Lcgi;	a	CHARGES
	m	(Lcfj;I)I	a	getLightLevel
		p	0	state	state
		p	1	maxLevel	maxLevel
	m	(Lfu;Lbqb;)Z	a	hasStillWater
		p	0	pos	pos
		p	1	world	world
	m	(Lbqb;Lfu;Lcfj;)V	a	charge
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lbqb;)Z	a	isNether
	m	(Laoq;Lbqd;Lfu;)Ljava/util/Optional;	a	findRespawnPosition
		p	0	entity	entity
		p	1	world	world
		p	2	pos	pos
	m	(Lbki;)Z	a	isChargeItem
		p	0	stack	stack
	m	(Lcfj;Lbqb;Lfu;)V	d	explode
		p	1	state	state
		p	2	world	world
		p	3	explodedPos	explodedPos
	m	(Lcfj;)Z	h	canCharge
		p	0	state	state
c	can	net/minecraft/block/RootsBlock
	f	Ldfg;	a	SHAPE
c	cao	net/minecraft/block/PillarBlock
	f	Lcgg;	a	AXIS
c	cap	net/minecraft/util/BlockRotation
	f	Lc;	e	directionTransformation
	m	(Ljava/lang/String;ILc;)V	<init>	<init>
		p	3	directionTransformation	directionTransformation
	m	(Lcap;)Lcap;	a	rotate
		p	1	rotation	rotation
	m	(Ljava/util/Random;)Lcap;	a	random
		p	0	random	random
	m	()Lc;	a	getDirectionTransformation
	m	(II)I	a	rotate
		p	1	rotation	rotation
		p	2	fullTurn	fullTurn
	m	(Lfz;)Lfz;	a	rotate
		p	1	direction	direction
	m	(Ljava/util/Random;)Ljava/util/List;	b	randomRotationOrder
		p	0	random	random
c	caq	net/minecraft/block/SandBlock
	f	I	a	color
	m	(ILcfi$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
c	car	net/minecraft/block/SaplingBlock
	f	Lcgi;	a	STAGE
	f	Ldfg;	b	SHAPE
	f	Lces;	c	generator
	m	(Lces;Lcfi$c;)V	<init>	<init>
		p	1	generator	generator
		p	2	settings	settings
	m	(Lzd;Lfu;Lcfj;Ljava/util/Random;)V	a	generate
c	cas	net/minecraft/block/ScaffoldingBlock
	f	Lcgi;	a	DISTANCE
	f	Lcga;	b	WATERLOGGED
	f	Lcga;	c	BOTTOM
	f	Ldfg;	d	NORMAL_OUTLINE_SHAPE
	f	Ldfg;	e	BOTTOM_OUTLINE_SHAPE
	f	Ldfg;	f	COLLISION_SHAPE
	f	Ldfg;	g	OUTLINE_SHAPE
	m	(Lbpg;Lfu;)I	a	calculateDistance
		p	0	world	world
		p	1	pos	pos
	m	(Lbpg;Lfu;I)Z	a	shouldBeBottom
		p	1	world	world
		p	2	pos	pos
		p	3	distance	distance
c	cat	net/minecraft/block/SeaPickleBlock
	f	Lcgi;	a	PICKLES
	f	Lcga;	b	WATERLOGGED
	f	Ldfg;	c	ONE_PICKLE_SHAPE
	f	Ldfg;	d	TWO_PICKLES_SHAPE
	f	Ldfg;	e	THREE_PICKLES_SHAPE
	f	Ldfg;	f	FOUR_PICKLES_SHAPE
	m	(Lcfj;)Z	h	isDry
c	cau	net/minecraft/block/SeagrassBlock
	f	Ldfg;	a	SHAPE
c	cav	net/minecraft/block/ShulkerBoxBlock
	f	Lcgg;	a	FACING
	f	Luh;	b	CONTENTS
	f	Lbje;	c	color
	m	(Lbje;Lcfi$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	(Lbje;)Lbvr;	a	get
		p	0	dyeColor	dyeColor
	m	(Lbje;)Lbki;	b	getItemStack
		p	0	color	color
	m	(Lbke;)Lbje;	b	getColor
		p	0	item	item
	m	(Lbvr;)Lbje;	c	getColor
		p	0	block	block
	m	()Lbje;	c	getColor
c	caw	net/minecraft/block/AbstractSignBlock
	f	Lcga;	a	WATERLOGGED
	f	Ldfg;	b	SHAPE
	f	Lcgs;	c	type
	m	(Lcfi$c;Lcgs;)V	<init>	<init>
		p	1	settings	settings
		p	2	type	type
	m	()Lcgs;	c	getSignType
c	cax	net/minecraft/block/Waterloggable
c	cay	net/minecraft/block/SkullBlock
	f	Lcgi;	a	ROTATION
	f	Ldfg;	b	SHAPE
c	cay$a	net/minecraft/block/SkullBlock$SkullType
c	cay$b	net/minecraft/block/SkullBlock$Type
c	caz	net/minecraft/block/SlabBlock
	f	Lcgg;	a	TYPE
	f	Lcga;	b	WATERLOGGED
	f	Ldfg;	c	BOTTOM_SHAPE
	f	Ldfg;	d	TOP_SHAPE
c	cb	net/minecraft/advancement/criterion/PlacedBlockCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbvr;	a	getBlock
		p	0	obj	obj
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcb$a;	a	conditionsFromJson
	m	(Lze;Lfu;Lbki;)V	a	trigger
		p	1	player	player
		p	2	blockPos	blockPos
		p	3	stack	stack
	m	(Lbvr;Ljava/lang/String;)V	a	method_22490
		p	1	name	name
c	cb$a	net/minecraft/advancement/criterion/PlacedBlockCriterion$Conditions
	f	Lbvr;	a	block
	f	Lck;	b	state
	f	Lbu;	c	location
	f	Lbo;	d	item
	m	(Lbe$b;Lbvr;Lck;Lbu;Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	block	block
		p	3	state	state
		p	4	location	location
		p	5	item	item
	m	(Lcfj;Lfu;Lzd;Lbki;)Z	a	matches
		p	1	state	state
		p	2	pos	pos
		p	3	world	world
		p	4	stack	stack
	m	(Lbvr;)Lcb$a;	a	block
		p	0	block	block
c	cba	net/minecraft/block/SlimeBlock
	m	(Laom;)V	a	bounce
		p	1	entity	entity
c	cbb	net/minecraft/block/SmithingTableBlock
	f	Lne;	a	SCREEN_TITLE
c	cbc	net/minecraft/block/SmokerBlock
c	cbd	net/minecraft/block/SnowBlock
	f	Lcgi;	a	LAYERS
	f	[Ldfg;	b	LAYERS_TO_SHAPE
c	cbe	net/minecraft/block/SnowyBlock
	f	Lcga;	a	SNOWY
c	cbf	net/minecraft/block/SoulFireBlock
	m	(Lbvr;)Z	c	isSoulBase
		p	0	block	block
c	cbg	net/minecraft/block/SoulSandBlock
	f	Ldfg;	a	COLLISION_SHAPE
c	cbh	net/minecraft/sound/BlockSoundGroup
	f	Lcbh;	A	NYLIUM
	f	Lcbh;	B	FUNGUS
	f	Lcbh;	C	ROOTS
	f	Lcbh;	D	SHROOMLIGHT
	f	Lcbh;	E	WEEPING_VINES
	f	Lcbh;	F	WEEPING_VINES_LOW_PITCH
	f	Lcbh;	G	SOUL_SAND
	f	Lcbh;	H	SOUL_SOIL
	f	Lcbh;	I	BASALT
	f	Lcbh;	J	WART_BLOCK
	f	Lcbh;	K	NETHERRACK
	f	Lcbh;	L	NETHER_BRICKS
	f	Lcbh;	M	NETHER_SPROUTS
	f	Lcbh;	N	NETHER_ORE
	f	Lcbh;	O	BONE
	f	Lcbh;	P	NETHERITE
	f	Lcbh;	Q	ANCIENT_DEBRIS
	f	Lcbh;	R	LODESTONE
	f	Lcbh;	S	CHAIN
	f	Lcbh;	T	NETHER_GOLD_ORE
	f	Lcbh;	U	GILDED_BLACKSTONE
	f	F	V	volume
	f	F	W	pitch
	f	Lack;	X	breakSound
	f	Lack;	Y	stepSound
	f	Lack;	Z	placeSound
	f	Lcbh;	a	WOOD
	f	Lack;	aa	hitSound
	f	Lack;	ab	fallSound
	f	Lcbh;	b	GRAVEL
	f	Lcbh;	c	GRASS
	f	Lcbh;	d	LILY_PAD
	f	Lcbh;	e	STONE
	f	Lcbh;	f	METAL
	f	Lcbh;	g	GLASS
	f	Lcbh;	h	WOOL
	f	Lcbh;	i	SAND
	f	Lcbh;	j	SNOW
	f	Lcbh;	k	LADDER
	f	Lcbh;	l	ANVIL
	f	Lcbh;	m	SLIME
	f	Lcbh;	n	HONEY
	f	Lcbh;	o	WET_GRASS
	f	Lcbh;	p	CORAL
	f	Lcbh;	q	BAMBOO
	f	Lcbh;	r	BAMBOO_SAPLING
	f	Lcbh;	s	SCAFFOLDING
	f	Lcbh;	t	SWEET_BERRY_BUSH
	f	Lcbh;	u	CROP
	f	Lcbh;	v	STEM
	f	Lcbh;	w	VINE
	f	Lcbh;	x	NETHER_WART
	f	Lcbh;	y	LANTERN
	f	Lcbh;	z	NETHER_STEM
	m	(FFLack;Lack;Lack;Lack;Lack;)V	<init>	<init>
		p	1	volume	volume
		p	2	pitch	pitch
		p	3	breakSound	breakSound
		p	4	stepSound	stepSound
		p	5	placeSound	placeSound
		p	6	hitSound	hitSound
		p	7	fallSound	fallSound
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Lack;	c	getBreakSound
	m	()Lack;	d	getStepSound
	m	()Lack;	e	getPlaceSound
	m	()Lack;	f	getHitSound
	m	()Lack;	g	getFallSound
c	cbi	net/minecraft/block/SpawnerBlock
c	cbj	net/minecraft/block/SpongeBlock
	m	(Lbqb;Lfu;)V	a	update
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lfu;)Z	b	absorbWater
		p	1	world	world
		p	2	pos	pos
c	cbk	net/minecraft/block/SpreadableBlock
	m	(Lcfj;Lbqd;Lfu;)Z	b	canSurvive
		p	0	state	state
		p	2	pos	pos
	m	(Lcfj;Lbqd;Lfu;)Z	c	canSpread
		p	0	state	state
		p	2	pos	pos
c	cbl	net/minecraft/block/StainedGlassBlock
	f	Lbje;	a	color
	m	(Lbje;Lcfi$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
c	cbm	net/minecraft/block/StainedGlassPaneBlock
	f	Lbje;	i	color
	m	(Lbje;Lcfi$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
c	cbn	net/minecraft/block/StairsBlock
	f	Lcgd;	a	FACING
	f	Lcgg;	b	HALF
	f	Lcgg;	c	SHAPE
	f	Lcga;	d	WATERLOGGED
	f	Ldfg;	e	TOP_SHAPE
	f	Ldfg;	f	BOTTOM_SHAPE
	f	Ldfg;	g	BOTTOM_NORTH_WEST_CORNER_SHAPE
	f	Ldfg;	h	BOTTOM_SOUTH_WEST_CORNER_SHAPE
	f	Ldfg;	i	TOP_NORTH_WEST_CORNER_SHAPE
	f	Ldfg;	j	TOP_SOUTH_WEST_CORNER_SHAPE
	f	Ldfg;	k	BOTTOM_NORTH_EAST_CORNER_SHAPE
	f	Ldfg;	o	BOTTOM_SOUTH_EAST_CORNER_SHAPE
	f	Ldfg;	p	TOP_NORTH_EAST_CORNER_SHAPE
	f	Ldfg;	q	TOP_SOUTH_EAST_CORNER_SHAPE
	f	[Ldfg;	r	TOP_SHAPES
	f	[Ldfg;	s	BOTTOM_SHAPES
	f	[I	t	SHAPE_INDICES
	f	Lbvr;	u	baseBlock
	f	Lcfj;	v	baseBlockState
	m	(Lcfj;Lcfi$c;)V	<init>	<init>
		p	1	baseBlockState	baseBlockState
		p	2	settings	settings
	m	(Ldfg;Ldfg;Ldfg;Ldfg;Ldfg;)[Ldfg;	a	composeShapes
		p	0	base	base
		p	1	northWest	northWest
		p	2	northEast	northEast
		p	3	southWest	southWest
		p	4	southEast	southEast
	m	(Ldfg;Ldfg;Ldfg;Ldfg;Ldfg;I)Ldfg;	a	method_10674
		p	5	i	i
	m	(ILdfg;Ldfg;Ldfg;Ldfg;Ldfg;)Ldfg;	a	composeShape
		p	0	i	i
		p	1	base	base
		p	2	northWest	northWest
		p	3	northEast	northEast
		p	4	southWest	southWest
		p	5	southEast	southEast
	m	(Lcfj;Lbpg;Lfu;Lfz;)Z	e	method_10678
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	dir	dir
	m	(Lcfj;Lbpg;Lfu;)Lcgp;	g	getStairShape
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;)Z	h	isStairs
		p	0	state	state
	m	(Lcfj;)I	l	getShapeIndexIndex
		p	1	state	state
c	cbo	net/minecraft/block/SignBlock
	f	Lcgi;	c	ROTATION
c	cbp	net/minecraft/block/StemBlock
	f	Lcgi;	a	AGE
	f	[Ldfg;	b	AGE_TO_SHAPE
	f	Lcbq;	c	gourdBlock
	m	(Lcbq;Lcfi$c;)V	<init>	<init>
		p	1	gourdBlock	gourdBlock
		p	2	settings	settings
	m	()Lbke;	c	getPickItem
	m	()Lcbq;	d	getGourdBlock
c	cbq	net/minecraft/block/GourdBlock
	m	()Lcbp;	c	getStem
	m	()Lbuw;	d	getAttachedStem
c	cbr	net/minecraft/block/StoneButtonBlock
c	cbs	net/minecraft/block/StonecutterBlock
	f	Lcgd;	a	FACING
	f	Ldfg;	b	SHAPE
	f	Lne;	c	TITLE
c	cbt	net/minecraft/block/StructureBlock
	f	Lcgg;	a	MODE
	m	(Lcel;)V	a	doAction
		p	1	blockEntity	blockEntity
c	cbu	net/minecraft/block/StructureVoidBlock
	f	Ldfg;	a	SHAPE
c	cbv	net/minecraft/block/SugarCaneBlock
	f	Lcgi;	a	AGE
	f	Ldfg;	b	SHAPE
c	cbw	net/minecraft/block/SweetBerryBushBlock
	f	Lcgi;	a	AGE
	f	Ldfg;	b	SMALL_SHAPE
	f	Ldfg;	c	LARGE_SHAPE
c	cbx	net/minecraft/block/TallFlowerBlock
c	cby	net/minecraft/block/FernBlock
	f	Ldfg;	a	SHAPE
c	cbz	net/minecraft/block/TallSeagrassBlock
	f	Lcgg;	b	HALF
	f	Ldfg;	c	SHAPE
c	cc	net/minecraft/advancement/criterion/PlayerHurtEntityCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcc$a;	a	conditionsFromJson
	m	(Lze;Laom;Lanw;FFZ)V	a	trigger
		p	1	player	player
		p	2	entity	entity
		p	3	damage	damage
		p	4	dealt	dealt
		p	5	taken	taken
		p	6	blocked	blocked
c	cc$a	net/minecraft/advancement/criterion/PlayerHurtEntityCriterion$Conditions
	f	Lat;	a	damage
	f	Lbe$b;	b	entity
	m	(Lbe$b;Lat;Lbe$b;)V	<init>	<init>
		p	1	player	player
		p	2	damage	damage
		p	3	entity	entity
	m	(Lze;Ldat;Lanw;FFZ)Z	a	matches
		p	1	player	player
		p	2	entityContext	entityContext
		p	3	source	source
		p	4	dealt	dealt
		p	5	taken	taken
		p	6	blocked	blocked
	m	(Lat$a;)Lcc$a;	a	create
		p	0	hurtEntityPredicateBuilder	hurtEntityPredicateBuilder
c	cca	net/minecraft/block/TargetBlock
	f	Lcgi;	a	POWER
	m	(Lbqc;Lcfj;Ldeh;Laom;)I	a	trigger
		p	0	world	world
		p	1	state	state
	m	(Ldeh;Ldem;)I	a	calculatePower
		p	1	pos	pos
	m	(Lbqc;Lcfj;ILfu;I)V	a	setPower
		p	0	world	world
		p	1	state	state
		p	2	power	power
		p	3	pos	pos
		p	4	delay	delay
c	ccb	net/minecraft/block/TntBlock
	f	Lcga;	a	UNSTABLE
	m	(Lbqb;Lfu;Laoy;)V	a	primeTnt
		p	0	world	world
		p	1	pos	pos
		p	2	igniter	igniter
	m	(Lbqb;Lfu;)V	a	primeTnt
		p	0	world	world
		p	1	pos	pos
c	ccc	net/minecraft/block/TorchBlock
	f	Ldfg;	d	BOUNDING_SHAPE
	f	Lhf;	e	particle
	m	(Lcfi$c;Lhf;)V	<init>	<init>
		p	1	settings	settings
		p	2	particle	particle
c	ccd	net/minecraft/block/TrapdoorBlock
	f	Lcga;	a	OPEN
	f	Lcgg;	b	HALF
	f	Lcga;	c	POWERED
	f	Lcga;	d	WATERLOGGED
	f	Ldfg;	e	EAST_SHAPE
	f	Ldfg;	f	WEST_SHAPE
	f	Ldfg;	g	SOUTH_SHAPE
	f	Ldfg;	h	NORTH_SHAPE
	f	Ldfg;	i	OPEN_BOTTOM_SHAPE
	f	Ldfg;	j	OPEN_TOP_SHAPE
	m	(Lbec;Lbqb;Lfu;Z)V	a	playToggleSound
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
		p	4	open	open
c	cce	net/minecraft/block/TrappedChestBlock
c	ccf	net/minecraft/block/TripwireBlock
	f	Lcga;	a	POWERED
	f	Lcga;	b	ATTACHED
	f	Lcga;	c	DISARMED
	f	Lcga;	d	NORTH
	f	Lcga;	e	EAST
	f	Lcga;	f	SOUTH
	f	Lcga;	g	WEST
	f	Ldfg;	h	ATTACHED_SHAPE
	f	Ldfg;	i	DETACHED_SHAPE
	f	Ljava/util/Map;	j	FACING_PROPERTIES
	f	Lccg;	k	hookBlock
	m	(Lccg;Lcfi$c;)V	<init>	<init>
		p	1	hookBlock	hookBlock
		p	2	settings	settings
	m	(Lbqb;Lfu;)V	a	updatePowered
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;Lfz;)Z	a	shouldConnectTo
		p	1	state	state
		p	2	facing	facing
	m	(Lbqb;Lfu;Lcfj;)V	a	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	ccg	net/minecraft/block/TripwireHookBlock
	f	Lcgd;	a	FACING
	f	Lcga;	b	POWERED
	f	Lcga;	c	ATTACHED
	f	Ldfg;	d	SOUTH_SHAPE
	f	Ldfg;	e	NORTH_SHAPE
	f	Ldfg;	f	EAST_SHAPE
	f	Ldfg;	g	WEST_SHAPE
	m	(Lbqb;Lfu;Lcfj;ZZILcfj;)V	a	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	beingRemoved	beingRemoved
	m	(Lbqb;Lfu;ZZZZ)V	a	playSound
		p	1	world	world
		p	2	pos	pos
		p	3	attached	attached
		p	4	on	on
		p	5	detached	detached
		p	6	off	off
	m	(Lbqb;Lfu;Lfz;)V	a	updateNeighborsOnAxis
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
c	cch	net/minecraft/block/TurtleEggBlock
	f	Lcgi;	a	HATCH
	f	Lcgi;	b	EGGS
	f	Ldfg;	c	SMALL_SHAPE
	f	Ldfg;	d	LARGE_SHAPE
	m	(Lbpg;Lfu;)Z	a	isSand
	m	(Lbqb;Laom;)Z	a	breaksEgg
	m	(Lbqb;Lfu;Laom;I)V	a	tryBreakEgg
		p	1	world	world
		p	3	entity	entity
		p	4	inverseChance	inverseChance
	m	(Lbqb;Lfu;Lcfj;)V	a	breakEgg
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;)Z	a	shouldHatchProgress
		p	1	world	world
c	cci	net/minecraft/block/TwistingVinesBlock
	f	Ldfg;	e	SHAPE
c	ccj	net/minecraft/block/TwistingVinesPlantBlock
c	cck	net/minecraft/block/VineBlock
	f	Lcga;	a	UP
	f	Lcga;	b	NORTH
	f	Lcga;	c	EAST
	f	Lcga;	d	SOUTH
	f	Lcga;	e	WEST
	f	Ljava/util/Map;	f	FACING_PROPERTIES
	f	Ldfg;	g	UP_SHAPE
	f	Ldfg;	h	WEST_SHAPE
	f	Ldfg;	i	EAST_SHAPE
	f	Ldfg;	j	NORTH_SHAPE
	f	Ldfg;	k	SOUTH_SHAPE
	m	(Lfz;)Lcga;	a	getFacingProperty
		p	0	direction	direction
	m	(Lbpg;Lfu;Lfz;)Z	a	shouldConnectTo
		p	0	world	world
		p	1	pos	pos
		p	2	direction	direction
	m	(Lbpg;Lfu;)Z	a	canGrowAt
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;Lcfj;Ljava/util/Random;)Lcfj;	a	getGrownState
		p	1	above	above
		p	2	state	state
		p	3	random	random
	m	(Lbpg;Lfu;Lfz;)Z	b	shouldHaveSide
		p	1	world	world
		p	2	pos	pos
		p	3	side	side
	m	(Lcfj;Lbpg;Lfu;)Lcfj;	g	getPlacementShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;)Z	h	hasAdjacentBlocks
		p	1	state	state
	m	(Lcfj;)I	l	getAdjacentBlockCount
		p	1	state	state
	m	(Lcfj;)Z	m	hasHorizontalSide
		p	1	state	state
c	ccl	net/minecraft/block/WallBannerBlock
	f	Lcgd;	a	FACING
	f	Ljava/util/Map;	b	FACING_TO_SHAPE
c	ccm	net/minecraft/block/WallBlock
	f	Lcga;	a	UP
	f	Lcgg;	b	EAST_SHAPE
	f	Lcgg;	c	NORTH_SHAPE
	f	Lcgg;	d	SOUTH_SHAPE
	f	Lcgg;	e	WEST_SHAPE
	f	Lcga;	f	WATERLOGGED
	f	Ljava/util/Map;	g	shapeMap
	f	Ljava/util/Map;	h	collisionShapeMap
	m	(FFFFFF)Ljava/util/Map;	a	getShapeMap
	m	(Lcfj;ZLfz;)Z	a	shouldConnectTo
		p	1	state	state
		p	2	faceFullSquare	faceFullSquare
		p	3	side	side
c	ccn	net/minecraft/block/WallSignBlock
	f	Lcgd;	c	FACING
	f	Ljava/util/Map;	d	FACING_TO_SHAPE
c	cco	net/minecraft/block/WallSkullBlock
	f	Lcgd;	a	FACING
	f	Ljava/util/Map;	b	FACING_TO_SHAPE
c	ccp	net/minecraft/block/WallTorchBlock
	f	Lcgd;	a	FACING
	f	Ljava/util/Map;	b	BOUNDING_SHAPES
	m	(Lcfj;)Ldfg;	h	getBoundingShape
		p	0	state	state
c	ccq	net/minecraft/block/LilyPadBlock
	f	Ldfg;	a	SHAPE
c	ccr	net/minecraft/block/CobwebBlock
c	ccs	net/minecraft/block/WeepingVinesBlock
	f	Ldfg;	e	SHAPE
c	cct	net/minecraft/block/WeepingVinesPlantBlock
c	ccu	net/minecraft/block/WeightedPressurePlateBlock
	f	Lcgi;	d	POWER
	f	I	e	weight
	m	(ILcfi$c;)V	<init>	<init>
		p	1	weight	weight
		p	2	settings	settings
c	ccv	net/minecraft/block/WetSpongeBlock
c	ccw	net/minecraft/block/WitherRoseBlock
	m	(Laoe;Lcfi$c;)V	<init>	<init>
		p	1	effect	effect
		p	2	settings	settings
c	ccx	net/minecraft/block/WitherSkullBlock
	f	Lcfo;	c	witherBossPattern
	f	Lcfo;	d	witherDispenserPattern
	m	(Lbqb;Lfu;Lcei;)V	a	onPlaced
		p	0	world	world
		p	1	pos	pos
		p	2	blockEntity	blockEntity
	m	(Lbqb;Lfu;Lbki;)Z	b	canDispense
		p	0	world	world
		p	1	pos	pos
		p	2	stack	stack
	m	()Lcfo;	c	getWitherBossPattern
	m	()Lcfo;	d	getWitherDispenserPattern
c	ccy	net/minecraft/block/WallWitherSkullBlock
c	ccz	net/minecraft/block/WoodButtonBlock
c	cd	net/minecraft/advancement/criterion/PlayerInteractedWithEntityCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcd$a;	a	conditionsFromJson
	m	(Lze;Lbki;Laom;)V	a	test
		p	1	player	player
		p	2	stack	stack
		p	3	entity	entity
c	cd$a	net/minecraft/advancement/criterion/PlayerInteractedWithEntityCriterion$Conditions
	f	Lbo;	a	item
	f	Lbe$b;	b	entity
	m	(Lbe$b;Lbo;Lbe$b;)V	<init>	<init>
		p	1	player	player
		p	2	item	item
		p	3	entity	entity
	m	(Lbki;Ldat;)Z	a	test
		p	1	stack	stack
		p	2	context	context
	m	(Lbe$b;Lbo$a;Lbe$b;)Lcd$a;	a	create
		p	0	player	player
		p	1	itemBuilder	itemBuilder
		p	2	entity	entity
c	cda	net/minecraft/block/CarpetBlock
	f	Ldfg;	a	SHAPE
	f	Lbje;	b	color
	m	(Lbje;Lcfi$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	()Lbje;	c	getColor
c	cdb	net/minecraft/block/entity/AbstractFurnaceBlockEntity
	f	Lgi;	a	inventory
	f	Lbgr;	b	propertyDelegate
	f	Lbmx;	c	recipeType
	f	[I	g	TOP_SLOTS
	f	[I	h	BOTTOM_SLOTS
	f	[I	i	SIDE_SLOTS
	f	I	j	burnTime
	f	I	k	fuelTime
	f	I	l	cookTime
	f	I	m	cookTimeTotal
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	n	recipesUsed
	m	(Lcdm;Lbmx;)V	<init>	<init>
		p	1	blockEntityType	blockEntityType
		p	2	recipeType	recipeType
	m	(Ljava/util/Map;Lbqa;I)V	a	addFuel
		p	1	item	item
		p	2	fuelTime	fuelTime
	m	(Ljava/util/Map;Ladf;I)V	a	addFuel
		p	0	fuelTimes	fuelTimes
		p	1	tag	tag
		p	2	fuelTime	fuelTime
	m	(Lbki;)I	a	getFuelTime
		p	1	fuel	fuel
	m	(Lbqb;Ldem;IF)V	a	dropExperience
	m	(Lbmu;)Z	b	canAcceptRecipeOutput
		p	1	recipe	recipe
	m	(Lbki;)Z	b	canUseAsFuel
		p	0	stack	stack
	m	(Lbke;)Z	b	isFlammableWood
		p	0	item	item
	m	(Lbmu;)V	c	craftRecipe
		p	1	recipe	recipe
	m	(Lbec;)V	d	dropExperience
		p	1	player	player
	m	()Ljava/util/Map;	f	createFuelTimeMap
	m	()I	h	getCookTime
	m	()Z	j	isBurning
c	cdc	net/minecraft/block/entity/BannerBlockEntity
	f	Lmr;	a	customName
	f	Lbje;	b	baseColor
	f	Llk;	c	patternListTag
	f	Z	g	patternListTagRead
	f	Ljava/util/List;	h	patterns
	m	(Lbje;)V	<init>	<init>
		p	1	baseColor	baseColor
	m	(Lbki;Lbje;)V	a	readFrom
		p	1	stack	stack
		p	2	baseColor	baseColor
	m	(Lcfj;)Lbki;	a	getPickStack
		p	1	state	state
	m	(Lbki;)Llk;	a	getPatternListTag
		p	0	stack	stack
	m	(Lmr;)V	a	setCustomName
		p	1	customName	customName
	m	(Ljava/util/function/Supplier;)Lbje;	a	getColorForState
	m	(Lbki;)I	b	getPatternCount
		p	0	stack	stack
	m	(Lbki;)V	c	loadFromItemStack
		p	0	stack	stack
	m	()Ljava/util/List;	c	getPatterns
c	cdd	net/minecraft/block/entity/BannerPattern
	f	I	P	COUNT
	f	I	R	LOOM_APPLICABLE_COUNT
	f	[Lcdd;	S	VALUES
	f	Ljava/lang/String;	U	name
	f	Ljava/lang/String;	V	id
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3	name	name
		p	4	id	id
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
		p	3	name	name
		p	4	id	id
	m	(Z)Luh;	a	getSpriteId
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcdd;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	b	getId
c	cdd$a	net/minecraft/block/entity/BannerPattern$Patterns
	f	Ljava/util/List;	a	entries
	m	()Llk;	a	toTag
	m	(Lcdd;Lbje;)Lcdd$a;	a	add
		p	1	pattern	pattern
		p	2	color	color
c	cde	net/minecraft/block/entity/BarrelBlockEntity
	f	Lgi;	a	inventory
	f	I	b	viewerCount
	m	(Lcdm;)V	<init>	<init>
		p	1	type	type
	m	(Lcfj;Lack;)V	a	playSound
	m	(Lcfj;Z)V	a	setOpen
		p	1	state	state
		p	2	open	open
	m	()V	h	tick
	m	()V	j	scheduleUpdate
c	cdf	net/minecraft/block/entity/LockableContainerBlockEntity
	f	Lani;	a	lock
	f	Lmr;	b	customName
	m	(Lbec;Lani;Lmr;)Z	a	checkUnlocked
		p	0	player	player
		p	1	lock	lock
		p	2	containerName	containerName
	m	(ILbeb;)Lbgi;	a	createScreenHandler
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Lmr;)V	a	setCustomName
		p	1	customName	customName
	m	(Lbec;)Z	e	checkUnlocked
		p	1	player	player
	m	()Lmr;	g	getContainerName
c	cdg	net/minecraft/block/entity/BeaconBlockEntity
	f	[[Laoe;	a	EFFECTS_BY_LEVEL
	f	Ljava/util/Set;	b	EFFECTS
	f	Ljava/util/List;	c	beamSegments
	f	I	h	level
	f	Laoe;	j	primary
	f	Laoe;	k	secondary
	f	Lmr;	l	customName
	f	Lani;	m	lock
	f	Lbgr;	n	propertyDelegate
	m	(Lack;)V	a	playSound
	m	(III)V	a	updateLevel
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lmr;)V	a	setCustomName
	m	(I)Laoe;	b	getPotionEffectById
		p	0	id	id
	m	()Ljava/util/List;	f	getBeamSegments
	m	()I	h	getLevel
	m	()V	j	applyPlayerEffects
c	cdg$a	net/minecraft/block/entity/BeaconBlockEntity$BeamSegment
	f	[F	a	color
	f	I	b	height
	m	([F)V	<init>	<init>
		p	1	color	color
	m	()V	a	increaseHeight
	m	()[F	b	getColor
	m	()I	c	getHeight
c	cdh	net/minecraft/block/entity/BedBlockEntity
	f	Lbje;	a	color
	m	(Lbje;)V	<init>	<init>
		p	1	color	color
	m	(Lbje;)V	a	setColor
		p	1	color	color
	m	()Lbje;	d	getColor
c	cdi	net/minecraft/block/entity/BeehiveBlockEntity
	f	Ljava/util/List;	a	bees
	f	Lfu;	b	flowerPos
	m	(Lcfj;Ljava/util/List;Lcdi$b;Lcdi$a;)Z	a	method_21854
		p	4	bee	bee
	m	(Lcfj;Lcdi$a;Ljava/util/List;Lcdi$b;)Z	a	releaseBee
		p	1	state	state
		p	2	bee	bee
		p	4	beeState	beeState
	m	(Lcfj;Lcdi$b;)Ljava/util/List;	a	tryReleaseBee
		p	1	state	state
	m	(ILayl;)V	a	ageBee
		p	1	ticks	ticks
		p	2	bee	bee
	m	(Lcfj;)I	a	getHoneyLevel
		p	0	state	state
	m	(Laom;ZI)V	a	tryEnterHive
		p	1	entity	entity
		p	2	hasNectar	hasNectar
		p	3	ticksInHive	ticksInHive
	m	(Laom;Z)V	a	tryEnterHive
		p	1	entity	entity
		p	2	hasNectar	hasNectar
	m	(Lbec;Lcfj;Lcdi$b;)V	a	angerBees
		p	1	player	player
		p	2	state	state
	m	()Z	d	isNearFire
	m	()Z	f	hasNoBees
	m	()Z	h	isFullOfBees
	m	()I	j	getBeeCount
	m	()Z	k	isSmoked
	m	()V	l	sendDebugData
	m	()Llk;	m	getBees
	m	()Z	x	hasFlowerPos
	m	()V	y	tickBees
c	cdi$a	net/minecraft/block/entity/BeehiveBlockEntity$Bee
	f	Lle;	a	entityData
	f	I	b	ticksInHive
	f	I	c	minOccupationTicks
	m	(Lle;II)V	<init>	<init>
		p	1	entityData	entityData
		p	2	ticksInHive	ticksInHive
		p	3	minOccupationTicks	minOccupationTicks
c	cdi$b	net/minecraft/block/entity/BeehiveBlockEntity$BeeState
c	cdj	net/minecraft/block/entity/BellBlockEntity
	f	I	a	ringTicks
	f	Z	b	ringing
	f	Lfz;	c	lastSideHit
	f	J	g	lastRingTime
	f	Ljava/util/List;	h	hearingEntities
	f	Z	i	resonating
	m	(Lfz;)V	a	activate
		p	1	direction	direction
	m	(Laoy;)Z	a	isRaiderEntity
		p	1	entity	entity
	m	(Lbqb;)V	a	applyGlowToRaiders
		p	1	world	world
	m	(Lbqb;)V	b	applyParticlesToRaiders
		p	1	world	world
	m	(Laoy;)V	b	glowEntity
		p	1	entity	entity
	m	()V	d	playResonateSound
	m	()V	f	notifyMemoriesOfBell
c	cdk	net/minecraft/block/entity/BlastFurnaceBlockEntity
c	cdl	net/minecraft/block/entity/BlockEntity
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcdm;	b	type
	f	Lcfj;	c	cachedState
	f	Lbqb;	d	world
	f	Lfu;	e	pos
	f	Z	f	removed
	f	Z	g	invalid
	m	(Lcdm;)V	<init>	<init>
		p	1	type	type
	m	()V	Z_	markDirty
	m	(Lcfj;Lle;)V	a	fromTag
		p	1	state	state
		p	2	tag	tag
	m	(Lbzj;)V	a	applyMirror
		p	1	mirror	mirror
	m	(Lfu;)V	a	setPos
		p	1	pos	pos
	m	(Lk;)V	a	populateCrashReport
	m	(Lcap;)V	a	applyRotation
		p	1	rotation	rotation
	m	(Lbqb;Lfu;)V	a	setLocation
		p	1	world	world
		p	2	pos	pos
	m	()Lnv;	a	toUpdatePacket
	m	(Lle;)Lle;	a	toTag
		p	1	tag	tag
	m	(II)Z	a_	onSyncedBlockEvent
		p	1	type	type
		p	2	data	data
	m	()V	an_	markRemoved
	m	()Lle;	b	toInitialChunkDataTag
	m	(Lcfj;Lle;)Lcdl;	b	createFromTag
		p	0	state	state
		p	1	tag	tag
	m	(Lle;)Lle;	b	writeIdentifyingData
		p	1	tag	tag
	m	()D	i	getSquaredRenderDistance
	m	()Z	n	hasWorld
	m	()Lfu;	o	getPos
	m	()Lcfj;	p	getCachedState
	m	()Z	q	isRemoved
	m	()V	r	cancelRemoval
	m	()V	s	resetBlock
	m	()Z	t	copyItemDataRequiresOperator
	m	()Lcdm;	u	getType
	m	()Lbqb;	v	getWorld
	m	()V	w	markInvalid
c	cdm	net/minecraft/block/entity/BlockEntityType
	f	Lorg/apache/logging/log4j/Logger;	H	LOGGER
	f	Ljava/util/function/Supplier;	I	supplier
	f	Ljava/util/Set;	J	blocks
	f	Lcom/mojang/datafixers/types/Type;	K	type
	m	(Ljava/util/function/Supplier;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V	<init>	<init>
		p	1	supplier	supplier
		p	2	blocks	blocks
		p	3	type	type
	m	()Lcdl;	a	instantiate
	m	(Lbvr;)Z	a	supports
		p	1	block	block
	m	(Lbpg;Lfu;)Lcdl;	a	get
		p	1	world	world
		p	2	pos	pos
	m	(Ljava/lang/String;Lcdm$a;)Lcdm;	a	create
	m	(Lcdm;)Luh;	a	getId
c	cdm$a	net/minecraft/block/entity/BlockEntityType$Builder
	f	Ljava/util/function/Supplier;	a	supplier
	f	Ljava/util/Set;	b	blocks
	m	(Ljava/util/function/Supplier;Ljava/util/Set;)V	<init>	<init>
		p	1	supplier	supplier
		p	2	blocks	blocks
	m	(Lcom/mojang/datafixers/types/Type;)Lcdm;	a	build
	m	(Ljava/util/function/Supplier;[Lbvr;)Lcdm$a;	a	create
		p	0	supplier	supplier
		p	1	blocks	blocks
c	cdn	net/minecraft/block/entity/BrewingStandBlockEntity
	f	Lbgr;	a	propertyDelegate
	f	[I	b	TOP_SLOTS
	f	[I	c	BOTTOM_SLOTS
	f	[I	g	SIDE_SLOTS
	f	Lgi;	h	inventory
	f	I	i	brewTime
	f	[Z	j	slotsEmptyLastTick
	f	Lbke;	k	itemBrewing
	f	I	l	fuel
	m	()[Z	f	getSlotsEmpty
	m	()Z	h	canCraft
	m	()V	j	craft
c	cdo	net/minecraft/block/entity/CampfireBlockEntity
	f	Lgi;	a	itemsBeingCooked
	f	[I	b	cookingTimes
	f	[I	c	cookingTotalTimes
	m	(Lbki;I)Z	a	addItem
		p	1	item	item
		p	2	integer	integer
	m	(Lbki;)Ljava/util/Optional;	a	getRecipeFor
		p	1	item	item
	m	(Lle;)Lle;	b	saveInitialChunkData
		p	1	tag	tag
	m	()Lgi;	d	getItemsBeingCooked
	m	()V	f	spawnItemsBeingCooked
	m	()V	h	updateItemsBeingCooked
	m	()V	j	spawnSmokeParticles
	m	()V	k	updateListeners
c	cdp	net/minecraft/block/entity/ChestBlockEntity
	f	F	a	animationAngle
	f	F	b	lastAnimationAngle
	f	I	c	viewerCount
	f	Lgi;	i	inventory
	f	I	j	ticksOpen
	m	(Lcdp;Lcdp;)V	a	copyInventory
		p	0	from	from
		p	1	to	to
	m	(Lbqb;Lcdf;III)I	a	countViewers
		p	0	world	world
		p	1	container	container
		p	2	ticksOpen	ticksOpen
		p	3	x	x
		p	4	y	y
	m	(Lbqb;Lcdf;IIIII)I	a	tickViewerCount
		p	0	world	world
		p	1	blockEntity	blockEntity
		p	2	ticksOpen	ticksOpen
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	viewerCount	viewerCount
	m	(Lack;)V	a	playSound
	m	(Lbpg;Lfu;)I	a	getPlayersLookingInChestCount
		p	0	world	world
		p	1	pos	pos
	m	()V	h	onInvOpenOrClose
c	cdq	net/minecraft/block/entity/CommandBlockBlockEntity
	f	Z	a	powered
	f	Z	b	auto
	f	Z	c	conditionMet
	f	Z	g	needsUpdatePacket
	f	Lbpc;	h	commandExecutor
	m	(Z)V	a	setPowered
		p	1	powered	powered
	m	(Z)V	b	setAuto
		p	1	auto	auto
	m	(Z)V	c	setNeedsUpdatePacket
		p	1	needsUpdatePacket	needsUpdatePacket
	m	()Lbpc;	d	getCommandExecutor
	m	()Z	f	isPowered
	m	()Z	g	isAuto
	m	()Z	j	isConditionMet
	m	()Z	k	updateConditionMet
	m	()Z	l	needsUpdatePacket
	m	()Lcdq$a;	m	getCommandBlockType
	m	()Z	x	isConditionalCommandBlock
c	cdq$a	net/minecraft/block/entity/CommandBlockBlockEntity$Type
c	cdr	net/minecraft/block/entity/ComparatorBlockEntity
	f	I	a	outputSignal
	m	(I)V	a	setOutputSignal
		p	1	outputSignal	outputSignal
	m	()I	d	getOutputSignal
c	cds	net/minecraft/block/entity/ConduitBlockEntity
	f	I	a	ticks
	f	[Lbvr;	b	ACTIVATING_BLOCKS
	f	F	c	ticksActive
	f	Z	g	active
	f	Z	h	eyeOpen
	f	Ljava/util/List;	i	activatingBlocks
	f	Laoy;	j	targetEntity
	f	Ljava/util/UUID;	k	targetUuid
	f	J	l	nextAmbientSoundTime
	m	(F)F	a	getRotation
		p	1	tickDelta	tickDelta
	m	(Z)V	a	setActive
		p	1	active	active
	m	(Lack;)V	a	playSound
	m	(Z)V	b	setEyeOpen
		p	1	eyeOpen	eyeOpen
	m	()Z	d	isActive
	m	()Z	f	isEyeOpen
	m	()Z	h	updateActivatingBlocks
	m	()V	j	givePlayersEffects
	m	()V	k	attackHostileEntity
	m	()V	l	updateTargetEntity
	m	()Ldeg;	m	getAttackZone
	m	()Laoy;	x	findTargetEntity
	m	()V	y	spawnNautilusParticles
c	cdt	net/minecraft/block/entity/DaylightDetectorBlockEntity
c	cdu	net/minecraft/block/entity/DispenserBlockEntity
	f	Ljava/util/Random;	a	RANDOM
	f	Lgi;	b	inventory
	m	(Lbki;)I	a	addToFirstFreeSlot
		p	1	stack	stack
	m	()I	h	chooseNonEmptySlot
c	cdv	net/minecraft/block/entity/DropperBlockEntity
c	cdw	net/minecraft/block/entity/EnchantingTableBlockEntity
	f	I	a	ticks
	f	F	b	nextPageAngle
	f	F	c	pageAngle
	f	F	i	nextPageTurningSpeed
	f	F	j	pageTurningSpeed
	f	Ljava/util/Random;	n	RANDOM
	f	Lmr;	o	customName
	m	(Lmr;)V	a	setCustomName
		p	1	value	value
c	cdx	net/minecraft/block/entity/EnderChestBlockEntity
	f	F	a	animationProgress
	f	F	b	lastAnimationProgress
	f	I	c	viewerCount
	f	I	g	ticks
	m	(Lbec;)Z	a	canPlayerUse
	m	()V	d	onOpen
	m	()V	f	onClose
c	cdy	net/minecraft/block/entity/FurnaceBlockEntity
c	cdz	net/minecraft/block/entity/Hopper
	f	Ldfg;	a	INSIDE_SHAPE
	f	Ldfg;	b	ABOVE_SHAPE
	f	Ldfg;	c	INPUT_AREA_SHAPE
	m	()D	A	getHopperZ
	m	()Ldfg;	ac_	getInputAreaShape
	m	()Lbqb;	v	getWorld
	m	()D	x	getHopperX
	m	()D	z	getHopperY
c	ce	net/minecraft/predicate/PlayerPredicate
	f	Lce;	a	ANY
	f	Lbx$d;	b	experienceLevel
	f	Lbpy;	c	gamemode
	f	Ljava/util/Map;	d	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	e	recipes
	f	Ljava/util/Map;	f	advancements
	m	(Lbx$d;Lbpy;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;)V	<init>	<init>
		p	1	experienceLevel	experienceLevel
		p	2	gamemode	gamemode
		p	3	stats	stats
		p	4	recipes	recipes
		p	5	advancements	advancements
	m	(Lcom/google/gson/JsonElement;)Lce;	a	fromJson
		p	0	json	json
	m	(Lacr;)Luh;	a	getStatId
		p	0	stat	stat
	m	(Lcom/google/gson/JsonArray;Lacr;Lbx$d;)V	a	method_22498
		p	1	stat	stat
	m	(Lcom/google/gson/JsonObject;Luh;Ljava/lang/Boolean;)V	a	method_22501
		p	1	id	id
		p	2	present	present
	m	(Laom;)Z	a	test
		p	1	entity	entity
	m	(Lcom/google/gson/JsonObject;Luh;Lce$c;)V	a	method_22500
		p	1	id	id
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lact;Luh;)Lacr;	a	getStat
		p	0	type	type
		p	1	id	id
	m	(Lcom/google/gson/JsonElement;)Lce$c;	b	criterionFromJson
		p	0	json	json
c	ce$a	net/minecraft/predicate/PlayerPredicate$AdvancementCriteriaPredicate
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criteria
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V	<init>	<init>
		p	1	criteria	criteria
	m	(Ly;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	progress	progress
c	ce$b	net/minecraft/predicate/PlayerPredicate$CompletedAdvancementPredicate
	f	Z	a	done
	m	(Z)V	<init>	<init>
		p	1	done	done
	m	(Ly;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	progress	progress
c	ce$c	net/minecraft/predicate/PlayerPredicate$AdvancementPredicate
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	ce$d	net/minecraft/predicate/PlayerPredicate$Builder
	f	Lbx$d;	a	experienceLevel
	f	Lbpy;	b	gamemode
	f	Ljava/util/Map;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	m	()Lce;	b	build
c	cea	net/minecraft/block/entity/HopperBlockEntity
	f	Lgi;	i	inventory
	f	I	j	transferCooldown
	f	J	k	lastTickTime
	m	(Lbqb;DDD)Lamz;	a	getInventoryAt
		p	0	world	world
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lamz;Lamz;Lbki;Lfz;)Lbki;	a	transfer
		p	0	from	from
		p	1	to	to
		p	2	stack	stack
		p	3	side	side
	m	(Lbki;Lbki;)Z	a	canMergeItems
		p	0	first	first
		p	1	second	second
	m	(Ljava/util/function/Supplier;)Z	a	insertAndExtract
		p	1	extractMethod	extractMethod
	m	(Lamz;Lamz;Lbki;ILfz;)Lbki;	a	transfer
		p	0	from	from
		p	1	to	to
		p	2	stack	stack
		p	3	slot	slot
	m	(Laom;)V	a	onEntityCollided
	m	(Lamz;Lbbg;)Z	a	extract
		p	0	inventory	inventory
		p	1	itemEntity	itemEntity
	m	(Lcdz;Lamz;ILfz;)Z	a	extract
		p	0	hopper	hopper
		p	1	inventory	inventory
		p	2	slot	slot
		p	3	side	side
	m	(Lcdz;)Z	a	extract
		p	0	hopper	hopper
	m	(Lamz;Lbki;ILfz;)Z	a	canInsert
		p	0	inventory	inventory
		p	1	stack	stack
		p	2	slot	slot
		p	3	side	side
	m	(Lamz;Lfz;)Ljava/util/stream/IntStream;	a	getAvailableSlots
		p	0	inventory	inventory
		p	1	side	side
	m	(Lamz;Lbki;ILfz;)Z	b	canExtract
		p	0	inv	inv
		p	1	stack	stack
		p	2	slot	slot
		p	3	facing	facing
	m	(Lbqb;Lfu;)Lamz;	b	getInventoryAt
	m	(Lcdz;)Lamz;	b	getInputInventory
		p	0	hopper	hopper
	m	(Lamz;Lfz;)Z	b	isInventoryFull
		p	1	inv	inv
	m	(Lamz;Lfz;)Z	c	isInventoryEmpty
		p	0	inv	inv
		p	1	facing	facing
	m	(Lcdz;)Ljava/util/List;	c	getInputItemEntities
	m	(I)V	c	setCooldown
		p	1	cooldown	cooldown
	m	()Z	j	isFull
	m	()Z	k	insert
	m	()Lamz;	l	getOutputInventory
	m	()Z	m	needsCooldown
	m	()Z	y	isDisabled
c	ceb	net/minecraft/block/entity/JigsawBlockEntity
	f	Luh;	a	name
	f	Luh;	b	target
	f	Luh;	c	pool
	f	Lceb$a;	g	joint
	f	Ljava/lang/String;	h	finalState
	m	(Ljava/lang/String;)V	a	setFinalState
		p	1	finalState	finalState
	m	(Lzd;IZ)V	a	generate
		p	1	world	world
		p	2	maxDepth	maxDepth
		p	3	keepJigsaws	keepJigsaws
	m	(Luh;)V	a	setAttachmentType
		p	1	value	value
	m	(Lceb$a;)V	a	setJoint
		p	1	joint	joint
	m	(Luh;)V	b	setTargetPool
		p	1	target	target
	m	(Luh;)V	c	setPool
		p	1	pool	pool
	m	()Luh;	d	getName
	m	()Luh;	f	getTarget
	m	()Luh;	g	getPool
	m	()Ljava/lang/String;	h	getFinalState
	m	()Lceb$a;	j	getJoint
c	ceb$a	net/minecraft/block/entity/JigsawBlockEntity$Joint
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0	name	name
c	ceb$b	net/minecraft/block/entity/JigsawBlockEntity$RuntimeStructurePiece
	m	(Lcva;Lcqd;Lfu;ILcap;Lctd;)V	<init>	<init>
		p	1	manager	manager
		p	2	poolElement	poolElement
		p	3	pos	pos
		p	4	groundLevelDelta	groundLevelDelta
		p	5	rotation	rotation
		p	6	box	box
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
c	cec	net/minecraft/block/entity/JukeboxBlockEntity
	f	Lbki;	a	record
	m	(Lbki;)V	a	setRecord
		p	1	stack	stack
	m	()Lbki;	d	getRecord
c	ced	net/minecraft/block/entity/LecternBlockEntity
	f	Lamz;	a	inventory
	f	Lbgr;	b	propertyDelegate
	f	Lbki;	c	book
	f	I	g	currentPage
	f	I	h	pageCount
	m	(Lbec;)Lcz;	a	getCommandSource
		p	1	player	player
	m	(Lbki;Lbec;)V	a	setBook
		p	1	book	book
		p	2	player	player
	m	(Lbki;)V	a	setBook
		p	1	book	book
	m	(I)V	a	setCurrentPage
		p	1	currentPage	currentPage
	m	(Lbki;Lbec;)Lbki;	b	resolveBook
		p	1	book	book
		p	2	player	player
	m	()Lbki;	f	getBook
	m	()Z	g	hasBook
	m	()I	h	getCurrentPage
	m	()I	j	getComparatorOutput
	m	()V	k	onBookRemoved
c	cee	net/minecraft/client/block/ChestAnimationProgress
	m	(F)F	a	getAnimationProgress
		p	1	tickDelta	tickDelta
c	cef	net/minecraft/block/entity/LootableContainerBlockEntity
	f	Luh;	g	lootTableId
	f	J	h	lootTableSeed
	m	(Lgi;)V	a	setInvStackList
		p	1	list	list
	m	(Luh;J)V	a	setLootTable
		p	1	id	id
		p	2	seed	seed
	m	(Lbpg;Ljava/util/Random;Lfu;Luh;)V	a	setLootTable
		p	0	world	world
		p	1	random	random
		p	2	pos	pos
		p	3	id	id
	m	(Lle;)Z	b	deserializeLootTable
	m	(Lle;)Z	c	serializeLootTable
	m	(Lbec;)V	d	checkLootInteraction
		p	1	player	player
	m	()Lgi;	f	getInvStackList
c	ceg	net/minecraft/block/entity/ShulkerBoxBlockEntity
	f	[I	a	AVAILABLE_SLOTS
	f	Lgi;	b	inventory
	f	I	c	viewerCount
	f	Lceg$a;	i	animationStage
	f	F	j	animationProgress
	f	F	k	prevAnimationProgress
	f	Lbje;	l	cachedColor
	f	Z	m	cachedColorUpdateNeeded
	m	(Lbje;)V	<init>	<init>
		p	1	color	color
	m	(F)F	a	getAnimationProgress
	m	(Lcfj;)Ldeg;	a	getBoundingBox
		p	1	state	state
	m	(Lfz;)Ldeg;	b	getBoundingBox
		p	1	openDirection	openDirection
	m	(Lfz;)Ldeg;	c	getCollisionBox
		p	1	facing	facing
	m	(Lle;)V	d	deserializeInventory
		p	1	tag	tag
	m	(Lle;)Lle;	e	serializeInventory
		p	1	tag	tag
	m	()V	h	updateAnimation
	m	()Lceg$a;	j	getAnimationStage
	m	()Lbje;	k	getColor
	m	()Z	l	suffocates
	m	()V	m	pushEntities
	m	()V	x	updateNeighborStates
c	ceg$a	net/minecraft/block/entity/ShulkerBoxBlockEntity$AnimationStage
c	ceh	net/minecraft/block/entity/SignBlockEntity
	f	[Lmr;	a	text
	f	Z	b	editable
	f	Lbec;	c	editor
	f	[Lmu;	g	textBeingEdited
	f	Lbje;	h	textColor
	m	(Lbec;)V	a	setEditor
		p	1	player	player
	m	(Z)V	a	setEditable
	m	(Lze;)Lcz;	a	getCommandSource
		p	1	player	player
	m	(ILjava/util/function/UnaryOperator;)Lmu;	a	getTextBeingEditedOnRow
		p	1	row	row
	m	(Lbje;)Z	a	setTextColor
		p	1	value	value
	m	(ILmr;)V	a	setTextOnRow
		p	1	row	row
		p	2	text	text
	m	(Lbec;)Z	b	onActivate
		p	1	player	player
	m	()Z	d	isEditable
	m	()Lbec;	f	getEditor
	m	()Lbje;	g	getTextColor
c	cei	net/minecraft/block/entity/SkullBlockEntity
	f	Labl;	a	userCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	b	sessionService
	f	Lcom/mojang/authlib/GameProfile;	c	owner
	f	I	g	ticksPowered
	f	Z	h	powered
	m	(F)F	a	getTicksPowered
		p	1	tickDelta	tickDelta
	m	(Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V	a	setSessionService
		p	0	value	value
	m	(Lcom/mojang/authlib/GameProfile;)V	a	setOwnerAndType
	m	(Labl;)V	a	setUserCache
		p	0	value	value
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile;	b	loadProperties
		p	0	profile	profile
	m	()Lcom/mojang/authlib/GameProfile;	d	getOwner
	m	()V	f	loadOwnerProperties
c	cej	net/minecraft/block/entity/SmokerBlockEntity
c	cek	net/minecraft/block/entity/MobSpawnerBlockEntity
	f	Lbpd;	a	logic
	m	()Lbpd;	d	getLogic
c	cel	net/minecraft/block/entity/StructureBlockBlockEntity
	f	Luh;	a	structureName
	f	Ljava/lang/String;	b	author
	f	Ljava/lang/String;	c	metadata
	f	Lfu;	g	offset
	f	Lfu;	h	size
	f	Lbzj;	i	mirror
	f	Lcap;	j	rotation
	f	Lcgq;	k	mode
	f	Z	l	ignoreEntities
	f	Z	m	powered
	f	Z	n	showAir
	f	Z	o	showBoundingBox
	f	F	p	integrity
	f	J	q	seed
	m	()F	A	getIntegrity
	m	()J	B	getSeed
	m	()Z	C	detectStructureSize
	m	()Z	D	saveStructure
	m	()Z	E	loadStructure
	m	()V	F	unloadStructure
	m	()Z	G	isStructureAvailable
	m	()Z	H	isPowered
	m	()Z	I	shouldShowAir
	m	()Z	J	shouldShowBoundingBox
	m	()V	L	updateBlockMode
	m	(Lcgq;)V	a	setMode
		p	1	mode	mode
	m	(Lbec;)Z	a	openScreen
		p	1	player	player
	m	(Z)V	a	setIgnoreEntities
		p	1	ignoreEntities	ignoreEntities
	m	(Luh;)V	a	setStructureName
	m	(Ljava/util/List;)Ljava/util/List;	a	findCorners
		p	1	structureBlockEntities	structureBlockEntities
	m	(Lfu;Lfu;)Ljava/util/List;	a	findStructureBlockEntities
		p	1	pos1	pos1
		p	2	pos2	pos2
	m	(J)V	a	setSeed
		p	1	seed	seed
	m	(Laoy;)V	a	setAuthor
		p	1	entity	entity
	m	(Ljava/lang/String;)V	a	setStructureName
		p	1	name	name
	m	(F)V	a	setIntegrity
		p	1	integrity	integrity
	m	(Lfu;Ljava/util/List;)Lctd;	a	makeBoundingBox
		p	1	center	center
		p	2	corners	corners
	m	(ZLcve;)Z	a	place
		p	1	resizeDisabled	resizeDisabled
		p	2	structure	structure
	m	(Lcap;)V	b	setRotation
		p	1	rotation	rotation
	m	(Z)Z	b	saveStructure
	m	(J)Ljava/util/Random;	b	createRandom
		p	0	seed	seed
	m	(Lfu;)V	b	setOffset
		p	1	pos	pos
	m	(Ljava/lang/String;)V	b	setMetadata
		p	1	metadata	metadata
	m	(Lbzj;)V	b	setMirror
		p	1	mirror	mirror
	m	(Z)Z	c	loadStructure
		p	1	resizeDisabled	resizeDisabled
	m	(Lfu;)V	c	setSize
		p	1	pos	pos
	m	(Z)V	d	setPowered
		p	1	powered	powered
	m	()Ljava/lang/String;	d	getStructureName
	m	(Z)V	e	setShowAir
		p	1	showAir	showAir
	m	()Ljava/lang/String;	f	getStructurePath
	m	(Z)V	f	setShowBoundingBox
		p	1	showBoundingBox	showBoundingBox
	m	()Z	g	hasStructureName
	m	()Lfu;	h	getOffset
	m	()Lfu;	j	getSize
	m	()Lbzj;	k	getMirror
	m	()Lcap;	l	getRotation
	m	()Ljava/lang/String;	m	getMetadata
	m	()Lcgq;	x	getMode
	m	()V	y	cycleMode
	m	()Z	z	shouldIgnoreEntities
c	cel$a	net/minecraft/block/entity/StructureBlockBlockEntity$Action
c	cem	net/minecraft/block/entity/EndGatewayBlockEntity
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	J	b	age
	f	I	c	teleportCooldown
	f	Lfu;	g	exitPortalPos
	f	Z	h	exactTeleport
	m	(Laom;)V	a	tryTeleportingEntity
	m	(Lfu;Z)V	a	setExitPortalPos
		p	1	pos	pos
		p	2	exactTeleport	exactTeleport
	m	(Lzd;Lfu;)V	a	createPortal
		p	1	world	world
		p	2	pos	pos
	m	(Lchj;)Lfu;	a	findPortalPosition
		p	0	chunk	chunk
	m	(F)F	a	getRecentlyGeneratedBeamHeight
		p	1	tickDelta	tickDelta
	m	(Lbqb;Ldem;)Lchj;	a	getChunk
		p	0	world	world
		p	1	pos	pos
	m	(Lzd;)V	a	createPortal
		p	1	world	world
	m	(Lbpg;Lfu;IZ)Lfu;	a	findExitPortalPos
		p	0	world	world
		p	1	pos	pos
		p	2	searchRadius	searchRadius
	m	(F)F	b	getCooldownBeamHeight
		p	1	tickDelta	tickDelta
	m	()Z	d	isRecentlyGenerated
	m	()Z	f	needsCooldownBeforeTeleporting
	m	()V	h	startTeleportCooldown
	m	()I	j	getDrawnSidesCount
	m	()Lfu;	k	findBestPortalExitPos
c	cen	net/minecraft/block/entity/EndPortalBlockEntity
	m	(Lfz;)Z	a	shouldDrawSide
		p	1	direction	direction
c	ceo	net/minecraft/util/Tickable
	m	()V	al_	tick
c	cep	net/minecraft/block/entity/TrappedChestBlockEntity
c	cer	net/minecraft/block/sapling/LargeTreeSaplingGenerator
	m	(Lzd;Lcha;Lfu;Lcfj;Ljava/util/Random;II)Z	a	generateLargeTree
	m	(Lcfj;Lbpg;Lfu;II)Z	a	canGenerateLargeTree
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	x	x
		p	4	z	z
	m	(Ljava/util/Random;)Lckb;	a	createLargeTreeFeature
c	ces	net/minecraft/block/sapling/SaplingGenerator
	m	(Lzd;Lcha;Lfu;Lcfj;Ljava/util/Random;)Z	a	generate
	m	(Ljava/util/Random;Z)Lckb;	a	createTreeFeature
c	cet	net/minecraft/block/sapling/AcaciaSaplingGenerator
c	ceu	net/minecraft/block/sapling/BirchSaplingGenerator
c	cev	net/minecraft/block/sapling/DarkOakSaplingGenerator
c	cew	net/minecraft/block/sapling/JungleSaplingGenerator
c	cex	net/minecraft/block/sapling/OakSaplingGenerator
c	cey	net/minecraft/block/sapling/SpruceSaplingGenerator
c	cf	net/minecraft/advancement/criterion/RecipeUnlockedCriterion
	f	Luh;	a	ID
	m	(Lze;Lbmu;)V	a	trigger
		p	1	player	player
		p	2	recipe	recipe
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcf$a;	a	conditionsFromJson
	m	(Luh;)Lcf$a;	a	create
		p	0	id	id
c	cf$a	net/minecraft/advancement/criterion/RecipeUnlockedCriterion$Conditions
	f	Luh;	a	recipe
	m	(Lbe$b;Luh;)V	<init>	<init>
		p	1	player	player
		p	2	recipe	recipe
	m	(Lbmu;)Z	a	matches
		p	1	recipe	recipe
c	cfb	net/minecraft/block/PistonExtensionBlock
	f	Lcgd;	a	FACING
	f	Lcgg;	b	TYPE
	m	(Lbpg;Lfu;)Lcff;	a	getPistonBlockEntity
		p	1	world	world
		p	2	pos	pos
	m	(Lcfj;Lfz;ZZ)Lcdl;	a	createBlockEntityPiston
		p	0	pushedBlock	pushedBlock
		p	1	dir	dir
		p	2	extending	extending
c	cfc	net/minecraft/block/PistonBlock
	f	Lcga;	b	EXTENDED
	f	Ldfg;	c	EXTENDED_EAST_SHAPE
	f	Ldfg;	d	EXTENDED_WEST_SHAPE
	f	Ldfg;	e	EXTENDED_SOUTH_SHAPE
	f	Ldfg;	f	EXTENDED_NORTH_SHAPE
	f	Ldfg;	g	EXTENDED_UP_SHAPE
	f	Ldfg;	h	EXTENDED_DOWN_SHAPE
	f	Z	i	sticky
	m	(ZLcfi$c;)V	<init>	<init>
		p	1	sticky	sticky
		p	2	settings	settings
	m	(Lcfj;Lbqb;Lfu;Lfz;ZLfz;)Z	a	isMovable
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	motionDir	motionDir
		p	4	canBreak	canBreak
		p	5	pistonDir	pistonDir
	m	(Lbqb;Lfu;Lcfj;)V	a	tryMove
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqb;Lfu;Lfz;)Z	a	shouldExtend
		p	1	world	world
		p	2	pos	pos
		p	3	pistonFace	pistonFace
	m	(Lbqb;Lfu;Lfz;Z)Z	a	move
		p	1	world	world
		p	2	pos	pos
		p	3	dir	dir
		p	4	retract	retract
c	cfd	net/minecraft/block/PistonHeadBlock
	f	Lcgg;	b	TYPE
	f	Lcga;	c	SHORT
	f	Ldfg;	d	EAST_HEAD_SHAPE
	f	Ldfg;	e	WEST_HEAD_SHAPE
	f	Ldfg;	f	SOUTH_HEAD_SHAPE
	f	Ldfg;	g	NORTH_HEAD_SHAPE
	f	Ldfg;	h	UP_HEAD_SHAPE
	f	Ldfg;	i	DOWN_HEAD_SHAPE
	f	Ldfg;	j	UP_ARM_SHAPE
	f	Ldfg;	k	DOWN_ARM_SHAPE
	f	Ldfg;	o	SOUTH_ARM_SHAPE
	f	Ldfg;	p	NORTH_ARM_SHAPE
	f	Ldfg;	q	EAST_ARM_SHAPE
	f	Ldfg;	r	WEST_ARM_SHAPE
	f	Ldfg;	s	SHORT_UP_ARM_SHAPE
	f	Ldfg;	t	SHORT_DOWN_ARM_SHAPE
	f	Ldfg;	u	SHORT_SOUTH_ARM_SHAPE
	f	Ldfg;	v	SHORT_NORTH_ARM_SHAPE
	f	Ldfg;	w	SHORT_EAST_ARM_SHAPE
	f	Ldfg;	x	SHORT_WEST_ARM_SHAPE
	m	(Lcfj;)Ldfg;	h	getHeadShape
		p	1	state	state
	m	(Lcfj;)Ldfg;	l	getArmShape
		p	1	state	state
c	cfe	net/minecraft/util/math/Boxes
	m	(Ldeg;Lfz;D)Ldeg;	a	stretch
		p	0	box	box
		p	1	direction	direction
		p	2	length	length
c	cff	net/minecraft/block/entity/PistonBlockEntity
	c	A piston block entity represents the block being pushed by a piston.
	f	Lcfj;	a	pushedBlock
	f	Lfz;	b	facing
	f	Z	c	extending
	f	Z	g	source
	f	F	i	progress
	f	F	j	lastProgress
	f	J	k	savedWorldTime
	m	(Lcfj;Lfz;ZZ)V	<init>	<init>
		p	1	pushedBlock	pushedBlock
		p	2	facing	facing
		p	3	extending	extending
		p	4	source	source
	m	(Ldeg;Lfz;Ldeg;)D	a	getIntersectionSize
	m	(Laom;Lfz;D)V	a	push
		p	1	entity	entity
		p	2	direction	direction
		p	3	amount	amount
	m	(Ldeg;)Ldeg;	a	offsetHeadBox
		p	1	box	box
	m	(F)F	a	getProgress
		p	1	tickDelta	tickDelta
	m	(Lbpg;Lfu;)Ldfg;	a	getCollisionShape
		p	1	world	world
		p	2	pos	pos
	m	(F)F	b	getRenderOffsetX
		p	1	tickDelta	tickDelta
	m	(F)F	c	getRenderOffsetY
		p	1	tickDelta	tickDelta
	m	()Z	d	isExtending
	m	(F)F	d	getRenderOffsetZ
		p	1	tickDelta	tickDelta
	m	(F)F	e	getAmountExtended
		p	1	progress	progress
	m	()Lfz;	f	getFacing
	m	(F)V	f	pushEntities
		p	1	nextProgress	nextProgress
	m	()Z	h	isSource
	m	()Lfz;	j	getMovementDirection
	m	()Lcfj;	k	getPushedBlock
	m	()V	l	finish
	m	()J	m	getSavedWorldTime
	m	()Lcfj;	x	getHeadBlockState
	m	()Z	y	isPushingHoneyBlock
c	cfg	net/minecraft/block/piston/PistonHandler
	f	Lbqb;	a	world
	f	Lfu;	b	posFrom
	f	Z	c	retracted
	f	Lfu;	d	posTo
	f	Lfz;	e	motionDirection
	f	Ljava/util/List;	f	movedBlocks
	f	Ljava/util/List;	g	brokenBlocks
	f	Lfz;	h	pistonDirection
	m	(Lbqb;Lfu;Lfz;Z)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	dir	dir
		p	4	retracted	retracted
	m	(Lbvr;Lbvr;)Z	a	isAdjacentBlockStuck
	m	(Lfu;)Z	a	canMoveAdjacentBlock
		p	1	pos	pos
	m	()Z	a	calculatePush
	m	(Lbvr;)Z	a	isBlockSticky
		p	0	block	block
	m	(II)V	a	setMovedBlocks
		p	1	from	from
		p	2	to	to
	m	(Lfu;Lfz;)Z	a	tryMove
		p	1	pos	pos
		p	2	dir	dir
	m	()Ljava/util/List;	c	getMovedBlocks
	m	()Ljava/util/List;	d	getBrokenBlocks
c	cfi	net/minecraft/block/AbstractBlock
	f	Z	aA	dynamicBounds
	f	Lcfi$c;	aB	settings
	f	Luh;	aC	lootTableId
	f	[Lfz;	ar	FACINGS
	f	Lcxd;	as	material
	f	Z	at	collidable
	f	F	au	resistance
	f	Z	av	randomTicks
	f	Lcbh;	aw	soundGroup
	f	F	ax	slipperiness
	f	F	ay	velocityMultiplier
	f	F	az	jumpVelocityMultiplier
	m	(Lcfi$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lcfj;Lbin;)Z	a	canReplace
		p	1	state	state
		p	2	context	context
	m	(Lcfj;Lbqc;Lfu;II)V	a	prepare
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	flags	flags
	m	(Lcfj;Lbqb;Lfu;Lbki;)V	a	onStacksDropped
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	stack	stack
	m	(Lcfj;Lcwz;)Z	a	canBucketPlace
		p	1	state	state
		p	2	fluid	fluid
	m	(Lcfj;Lbpg;Lfu;Lder;)Ldfg;	a	getVisualShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	context	context
	m	(Lcfj;Lbqb;Lfu;Laom;)V	a	onEntityCollision
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	entity	entity
	m	(Lcfj;Lbqb;Lfu;Lcfj;Z)V	a	onStateReplaced
		c	Called in {@link net.minecraft.world.chunk.WorldChunk#setBlockState(BlockPos, BlockState, boolean)} if {@code newState} is different from {@code state}. Vanilla blocks perform removal cleanups here.
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	newState	newState
		p	5	moved	moved
	m	(Lcfj;Ldat$a;)Ljava/util/List;	a	getDroppedStacks
		p	1	state	state
		p	2	builder	builder
	m	(Lcfj;)Z	a	hasComparatorOutput
		p	1	state	state
	m	(Lcfj;Lbqb;Lfu;Lbec;)V	a	onBlockBreakStart
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	player	player
	m	(Lcfj;Lbpg;Lfu;)F	a	getAmbientOcclusionLightLevel
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbqb;Lfu;II)Z	a	onSyncedBlockEvent
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	type	type
		p	5	data	data
	m	(Lcfj;Lbzj;)Lcfj;	a	mirror
		p	1	state	state
		p	2	mirror	mirror
	m	(Lcfj;Lbqb;Lfu;Lbec;Lanf;Ldeh;)Lang;	a	onUse
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	player	player
		p	5	hand	hand
		p	6	hit	hit
	m	(Lcfj;Lbpg;Lfu;Lczg;)Z	a	canPathfindThrough
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	type	type
	m	(Lbqb;Lcfj;Ldeh;Lbes;)V	a	onProjectileHit
		p	1	world	world
		p	2	state	state
		p	3	hit	hit
		p	4	projectile	projectile
	m	(Lcfj;Lbpg;Lfu;Lfz;)I	a	getWeakRedstonePower
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	direction	direction
	m	(Lcfj;Lbqb;Lfu;Lbvr;Lfu;Z)V	a	neighborUpdate
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	block	block
		p	5	fromPos	fromPos
		p	6	notify	notify
	m	(Lcfj;Lbqb;Lfu;)I	a	getComparatorOutput
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lzd;Lfu;Ljava/util/Random;)V	a	scheduledTick
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
	m	(Lcfj;Lfu;)J	a	getRenderingSeed
		p	1	state	state
		p	2	pos	pos
	m	(Lcfj;Lbec;Lbpg;Lfu;)F	a	calcBlockBreakingDelta
		p	1	state	state
		p	2	player	player
		p	3	world	world
		p	4	pos	pos
	m	(Lcfj;Lcap;)Lcfj;	a	rotate
		p	1	state	state
		p	2	rotation	rotation
	m	(Lcfj;Lcfj;Lfz;)Z	a	isSideInvisible
		p	1	state	state
		p	2	stateFrom	stateFrom
		p	3	direction	direction
	m	(Lcfj;Lfz;Lcfj;Lbqc;Lfu;Lfu;)Lcfj;	a	getStateForNeighborUpdate
		p	1	state	state
		p	2	direction	direction
		p	3	newState	newState
		p	4	world	world
		p	5	pos	pos
		p	6	posFrom	posFrom
	m	(Lcfj;Lbqd;Lfu;)Z	a	canPlaceAt
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbpg;Lfu;)Ldfg;	a_	getRayTraceShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	()Lcfi$b;	aj_	getOffsetType
	m	(Lcfj;Lbpg;Lfu;Lder;)Ldfg;	b	getOutlineShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	context	context
	m	(Lcfj;Lbqb;Lfu;)Lanj;	b	createScreenHandlerFactory
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbqb;Lfu;Lcfj;Z)V	b	onBlockAdded
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	oldState	oldState
		p	5	notify	notify
	m	(Lcfj;Lzd;Lfu;Ljava/util/Random;)V	b	randomTick
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
	m	(Lcfj;Lbpg;Lfu;Lfz;)I	b	getStrongRedstonePower
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	direction	direction
	m	(Lcfj;)Lcak;	b	getRenderType
		p	1	state	state
	m	(Lcfj;)Z	b_	emitsRedstonePower
		p	1	state	state
	m	(Lcfj;Lbpg;Lfu;Lder;)Ldfg;	c	getCollisionShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	context	context
	m	(Lcfj;)Z	c_	hasSidedTransparency
		p	1	state	state
	m	(Lcfj;Lbpg;Lfu;)Ldfg;	d	getCullingShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;)Lcxa;	d	getFluidState
		p	1	state	state
	m	(Lcfj;Lbpg;Lfu;)Ldfg;	e	getSidesShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbpg;Lfu;)I	f	getOpacity
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;)Lcxf;	f	getPistonBehavior
		p	1	state	state
	m	()Lbke;	h	asItem
	m	()Lbvr;	p	asBlock
	m	()Z	q	hasBlockEntity
	m	()Luh;	r	getLootTableId
	m	()Lcxe;	s	getDefaultMaterialColor
c	cfi$a	net/minecraft/block/AbstractBlock$AbstractBlockState
	f	Lcfi$a$a;	a	shapeCache
	f	I	b	luminance
	f	Z	e	hasSidedTransparency
	f	Z	f	isAir
	f	Lcxd;	g	material
	f	Lcxe;	h	materialColor
	f	F	i	hardness
	f	Z	j	toolRequired
	f	Z	k	opaque
	f	Lcfi$e;	l	solidBlockPredicate
	f	Lcfi$e;	m	suffocationPredicate
	f	Lcfi$e;	n	blockVisionPredicate
	f	Lcfi$e;	o	postProcessPredicate
	f	Lcfi$e;	p	emissiveLightingPredicate
	m	(Lbvr;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1	block	block
		p	2	propertyMap	propertyMap
	m	(Lzd;Lfu;Ljava/util/Random;)V	a	scheduledTick
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;Laom;Lfz;)Z	a	hasSolidTopSurface
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
		p	4	direction	direction
	m	(Lbqb;Lfu;Lbec;)V	a	onBlockBreakStart
		p	1	world	world
		p	2	pos	pos
		p	3	player	player
	m	()V	a	initShapeCache
	m	(Lcap;)Lcfj;	a	rotate
		p	1	rotation	rotation
	m	(Lbpg;Lfu;Lfz;)Ldfg;	a	getCullingFace
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
	m	(Lbpg;Lfu;Laoq;)Z	a	allowsSpawning
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
	m	(Lbzj;)Lcfj;	a	mirror
		p	1	mirror	mirror
	m	(Lbqb;Lfu;Lbki;)V	a	onStacksDropped
		p	1	world	world
		p	2	pos	pos
		p	3	stack	stack
	m	(Lbqc;Lfu;II)V	a	updateNeighbors
		p	1	world	world
		p	2	pos	pos
		p	3	flags	flags
	m	(Lbqb;Lfu;II)Z	a	onSyncedBlockEvent
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
		p	4	data	data
	m	(Lbqb;Lbec;Lanf;Ldeh;)Lang;	a	onUse
		p	1	world	world
		p	2	player	player
		p	3	hand	hand
		p	4	hit	hit
	m	(Lfu;)J	a	getRenderingSeed
		p	1	pos	pos
	m	(Lbqd;Lfu;)Z	a	canPlaceAt
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lcfj;Ldeh;Lbes;)V	a	onProjectileHit
		p	1	world	world
		p	2	state	state
		p	3	hit	hit
		p	4	projectile	projectile
	m	(Lbec;Lbpg;Lfu;)F	a	calcBlockBreakingDelta
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
	m	(Lbqb;Lfu;Laom;)V	a	onEntityCollision
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	(Lbin;)Z	a	canReplace
		p	1	context	context
	m	(Lbpg;Lfu;Lczg;)Z	a	canPathfindThrough
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
	m	(Ldat$a;)Ljava/util/List;	a	getDroppedStacks
		p	1	builder	builder
	m	(Lbqb;Lfu;Lcfj;Z)V	a	onBlockAdded
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	notify	notify
	m	(Lcfj;Lfz;)Z	a	isSideInvisible
		p	1	state	state
		p	2	direction	direction
	m	(Lbpg;Lfu;Laom;)Z	a	hasSolidTopSurface
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	(Lbqb;Lfu;Lbvr;Lfu;Z)V	a	neighborUpdate
		p	1	world	world
		p	2	pos	pos
		p	3	block	block
		p	4	posFrom	posFrom
		p	5	notify	notify
	m	(Ladf;)Z	a	isIn
		p	1	tag	tag
	m	(Lfz;Lcfj;Lbqc;Lfu;Lfu;)Lcfj;	a	getStateForNeighborUpdate
		p	1	direction	direction
		p	2	state	state
		p	3	world	world
		p	4	pos	pos
		p	5	fromPos	fromPos
	m	(Lbqb;Lfu;)I	a	getComparatorOutput
		p	1	world	world
		p	2	pos	pos
	m	(Lcwz;)Z	a	canBucketPlace
		p	1	fluid	fluid
	m	(Lbpg;Lfu;)Z	a	isTranslucent
		p	1	world	world
		p	2	pos	pos
	m	(Lbvr;)Z	a	isOf
		p	1	block	block
	m	(Lbpg;Lfu;Lder;)Ldfg;	a	getOutlineShape
		p	1	world	world
		p	2	pos	pos
		p	3	context	context
	m	(Lzd;Lfu;Ljava/util/Random;)V	b	randomTick
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;Lfz;)I	b	getWeakRedstonePower
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
	m	(Lbqc;Lfu;II)V	b	prepare
		p	1	world	world
		p	2	pos	pos
		p	3	flags	flags
	m	(Lbqb;Lfu;)Lanj;	b	createScreenHandlerFactory
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;Lder;)Ldfg;	b	getCollisionShape
		p	1	world	world
		p	2	pos	pos
		p	3	context	context
	m	(Lbqb;Lfu;Lcfj;Z)V	b	onStateReplaced
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	moved	moved
	m	()Lbvr;	b	getBlock
	m	(Lbpg;Lfu;)I	b	getOpacity
		p	1	world	world
		p	2	pos	pos
	m	()Lcxd;	c	getMaterial
	m	(Lbpg;Lfu;Lder;)Ldfg;	c	getVisualShape
		p	1	world	world
		p	2	pos	pos
		p	3	context	context
	m	(Lbpg;Lfu;)Ldfg;	c	getCullingShape
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;Lfz;)I	c	getStrongRedstonePower
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
	m	(Lbpg;Lfu;Lfz;)Z	d	isSideSolidFullSquare
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
	m	(Lbpg;Lfu;)Lcxe;	d	getTopMaterialColor
		p	1	world	world
		p	2	pos	pos
	m	()Z	d	exceedsCube
	m	()Z	e	hasSidedTransparency
	m	(Lbpg;Lfu;)Z	e	hasEmissiveLighting
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;)F	f	getAmbientOcclusionLightLevel
		p	1	world	world
		p	2	pos	pos
	m	()I	f	getLuminance
	m	()Z	g	isAir
	m	(Lbpg;Lfu;)Z	g	isSolidBlock
		p	1	world	world
		p	2	pos	pos
	m	()Lcak;	h	getRenderType
	m	(Lbpg;Lfu;)F	h	getHardness
		p	1	world	world
		p	2	pos	pos
	m	()Z	i	emitsRedstonePower
	m	(Lbpg;Lfu;)Z	i	isOpaqueFullCube
		p	1	world	world
		p	2	pos	pos
	m	()Z	j	hasComparatorOutput
	m	(Lbpg;Lfu;)Ldfg;	j	getOutlineShape
		p	1	world	world
		p	2	pos	pos
	m	()Lcxf;	k	getPistonBehavior
	m	(Lbpg;Lfu;)Ldfg;	k	getCollisionShape
		p	1	world	world
		p	2	pos	pos
	m	()Z	l	isOpaque
	m	(Lbpg;Lfu;)Ldfg;	l	getSidesShape
		p	1	world	world
		p	2	pos	pos
	m	()Lcxa;	m	getFluidState
	m	(Lbpg;Lfu;)Ldfg;	m	getRayTraceShape
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;)Ldem;	n	getModelOffset
		p	1	world	world
		p	2	pos	pos
	m	()Z	n	hasRandomTicks
	m	(Lbpg;Lfu;)Z	o	shouldSuffocate
		p	1	world	world
		p	2	pos	pos
	m	()Lcbh;	o	getSoundGroup
	m	(Lbpg;Lfu;)Z	p	shouldBlockVision
		p	1	world	world
		p	2	pos	pos
	m	()Lcfj;	p	asBlockState
	m	()Z	q	isToolRequired
	m	(Lbpg;Lfu;)Z	q	shouldPostProcess
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;)Z	r	isFullCube
		p	1	world	world
		p	2	pos	pos
c	cfi$a$a	net/minecraft/block/AbstractBlock$AbstractBlockState$ShapeCache
	f	Z	a	fullOpaque
	f	Ldfg;	b	collisionShape
	f	Z	c	exceedsCube
	f	[Z	d	solidFullSquare
	f	Z	e	isFullCube
	f	[Lfz;	f	DIRECTIONS
	f	Z	g	translucent
	f	I	h	lightSubtracted
	f	[Ldfg;	i	extrudedFaces
	m	(Lcfj;)V	<init>	<init>
		p	1	state	state
c	cfi$b	net/minecraft/block/AbstractBlock$OffsetType
c	cfi$c	net/minecraft/block/AbstractBlock$Settings
	f	Lcxd;	a	material
	f	Ljava/util/function/Function;	b	materialColorFactory
	f	Z	c	collidable
	f	Lcbh;	d	soundGroup
	f	Ljava/util/function/ToIntFunction;	e	luminance
	f	F	f	resistance
	f	F	g	hardness
	f	Z	h	toolRequired
	f	Z	i	randomTicks
	f	F	j	slipperiness
	f	F	k	velocityMultiplier
	f	F	l	jumpVelocityMultiplier
	f	Luh;	m	lootTableId
	f	Z	n	opaque
	f	Z	o	isAir
	f	Lcfi$d;	p	allowsSpawningPredicate
	f	Lcfi$e;	q	solidBlockPredicate
	f	Lcfi$e;	r	suffocationPredicate
	f	Lcfi$e;	s	blockVisionPredicate
	f	Lcfi$e;	t	postProcessPredicate
	f	Lcfi$e;	u	emissiveLightingPredicate
	f	Z	v	dynamicBounds
	m	(Lcxd;Lcxe;)V	<init>	<init>
		p	1	material	material
		p	2	materialColorFactory	materialColorFactory
	m	(Lcxd;Ljava/util/function/Function;)V	<init>	<init>
		p	1	material	material
		p	2	materialColorFactory	materialColorFactory
	m	(Lcxd;Lbje;)Lcfi$c;	a	of
		p	0	material	material
		p	1	color	color
	m	(Lcxd;)Lcfi$c;	a	of
		p	0	material	material
	m	(Lcfj;)I	a	method_26237
		p	0	state	state
	m	(FF)Lcfi$c;	a	strength
		p	1	hardness	hardness
		p	2	resistance	resistance
	m	(Lcxd;Lcxe;)Lcfi$c;	a	of
		p	0	material	material
		p	1	color	color
	m	(Lcbh;)Lcfi$c;	a	sounds
		p	1	soundGroup	soundGroup
	m	(F)Lcfi$c;	a	slipperiness
		p	1	slipperiness	slipperiness
	m	(Lcfj;Lbpg;Lfu;Laoq;)Z	a	method_26239
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
	m	(Lcfi$d;)Lcfi$c;	a	allowsSpawning
		p	1	predicate	predicate
	m	(Lcfi;)Lcfi$c;	a	copy
		p	0	block	block
	m	(Lbvr;)Lcfi$c;	a	dropsLike
		p	1	source	source
	m	(Lcxe;Lcfj;)Lcxe;	a	method_26241
		p	1	state	state
	m	(Ljava/util/function/ToIntFunction;)Lcfi$c;	a	lightLevel
		p	1	levelFunction	levelFunction
	m	()Lcfi$c;	a	noCollision
	m	(Lcfj;Lbpg;Lfu;)Z	a	method_26238
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lcxd;Ljava/util/function/Function;)Lcfi$c;	a	of
		p	0	material	material
		p	1	materialColor	materialColor
	m	(Lcfi$e;)Lcfi$c;	a	solidBlock
		p	1	predicate	predicate
	m	(Lcfj;Lbpg;Lfu;)Z	b	method_26244
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	()Lcfi$c;	b	nonOpaque
	m	(Lcfi$e;)Lcfi$c;	b	suffocates
		p	1	predicate	predicate
	m	(F)Lcfi$c;	b	velocityMultiplier
		p	1	velocityMultiplier	velocityMultiplier
	m	(Lcfj;Lbpg;Lfu;)Z	c	method_26246
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	()Lcfi$c;	c	breakInstantly
	m	(Lcfi$e;)Lcfi$c;	c	blockVision
		p	1	predicate	predicate
	m	(F)Lcfi$c;	c	jumpVelocityMultiplier
		p	1	jumpVelocityMultiplier	jumpVelocityMultiplier
	m	(F)Lcfi$c;	d	strength
		p	1	strength	strength
	m	()Lcfi$c;	d	ticksRandomly
	m	(Lcfj;Lbpg;Lfu;)Z	d	method_26248
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lcfi$e;)Lcfi$c;	d	postProcess
		p	1	predicate	predicate
	m	(Lcfi$e;)Lcfi$c;	e	emissiveLighting
		p	1	predicate	predicate
	m	()Lcfi$c;	e	dynamicBounds
	m	()Lcfi$c;	f	dropsNothing
	m	()Lcfi$c;	g	air
	m	()Lcfi$c;	h	requiresTool
c	cfi$d	net/minecraft/block/AbstractBlock$TypedContextPredicate
	m	(Lcfj;Lbpg;Lfu;Ljava/lang/Object;)Z	test	test
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	type	type
c	cfi$e	net/minecraft/block/AbstractBlock$ContextPredicate
	m	(Lcfj;Lbpg;Lfu;)Z	test	test
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	cfj	net/minecraft/block/BlockState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	cfk	net/minecraft/state/StateManager
	f	Ljava/util/regex/Pattern;	a	VALID_NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	properties
	f	Lcom/google/common/collect/ImmutableList;	d	states
	m	(Ljava/util/function/Function;Ljava/lang/Object;Lcfk$b;Ljava/util/Map;)V	<init>	<init>
		p	3	factory	factory
		p	4	propertiesMap	propertiesMap
	m	()Lcom/google/common/collect/ImmutableList;	a	getStates
	m	(Ljava/lang/String;)Lcgl;	a	getProperty
		p	1	name	name
	m	()Lcfl;	b	getDefaultState
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
c	cfk$a	net/minecraft/state/StateManager$Builder
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	namedProperties
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1	owner	owner
	m	(Ljava/util/function/Function;Lcfk$b;)Lcfk;	a	build
		p	1	ownerToStateFunction	ownerToStateFunction
		p	2	factory	factory
	m	(Lcgl;)V	a	validate
		p	1	property	property
	m	([Lcgl;)Lcfk$a;	a	add
		p	1	properties	properties
c	cfk$b	net/minecraft/state/StateManager$Factory
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object;	create	create
		p	1	owner	owner
		p	2	entries	entries
c	cfl	net/minecraft/state/State
	f	Ljava/util/function/Function;	a	PROPERTY_MAP_PRINTER
	f	Lcom/google/common/collect/ImmutableMap;	b	entries
	f	Ljava/lang/Object;	c	owner
	f	Lcom/google/common/collect/Table;	e	withTable
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1	owner	owner
		p	2	entries	entries
	m	(Lcgl;)Ljava/lang/Object;	a	cycle
		p	1	property	property
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	createCodec
		p	1	ownerToStateFunction	ownerToStateFunction
	m	(Ljava/util/Map;)V	a	createWithTable
		p	1	states	states
	m	(Lcgl;Ljava/lang/Comparable;)Ljava/lang/Object;	a	with
		p	1	property	property
		p	2	value	value
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	getNext
		p	0	values	values
		p	1	value	value
	m	(Lcgl;Ljava/lang/Comparable;)Ljava/util/Map;	b	toMapWith
		p	1	property	property
		p	2	value	value
	m	(Lcgl;)Z	b	contains
		p	1	property	property
	m	(Lcgl;)Ljava/lang/Comparable;	c	get
		p	1	property	property
	m	(Lcgl;)Ljava/util/Optional;	d	method_28500
		p	1	property	property
	m	()Ljava/util/Collection;	r	getProperties
	m	()Lcom/google/common/collect/ImmutableMap;	s	getEntries
c	cfl$1	net/minecraft/state/State$1
	m	(Lcgl;Ljava/lang/Comparable;)Ljava/lang/String;	a	nameValue
		p	1	property	property
		p	2	value	value
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
c	cfn	net/minecraft/block/pattern/CachedBlockPosition
	f	Lbqd;	a	world
	f	Lfu;	b	pos
	f	Z	c	forceLoad
	f	Lcfj;	d	state
	f	Lcdl;	e	blockEntity
	f	Z	f	cachedEntity
	m	(Lbqd;Lfu;Z)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	forceLoad	forceLoad
	m	()Lcfj;	a	getBlockState
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	matchesBlockState
		p	0	state	state
	m	()Lcdl;	b	getBlockEntity
	m	()Lbqd;	c	getWorld
	m	()Lfu;	d	getBlockPos
c	cfo	net/minecraft/block/pattern/BlockPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
	m	([[[Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	pattern	pattern
	m	(Lfu;Lfz;Lfz;III)Lfu;	a	translate
		p	0	pos	pos
		p	1	forwards	forwards
		p	2	up	up
		p	3	offsetLeft	offsetLeft
		p	4	offsetDown	offsetDown
		p	5	offsetForwards	offsetForwards
	m	(Lbqd;Lfu;)Lcfo$b;	a	searchAround
		p	1	world	world
		p	2	pos	pos
	m	(Lbqd;Z)Lcom/google/common/cache/LoadingCache;	a	makeCache
		p	0	world	world
		p	1	forceLoad	forceLoad
	m	()I	a	getDepth
	m	(Lfu;Lfz;Lfz;Lcom/google/common/cache/LoadingCache;)Lcfo$b;	a	testTransform
		p	1	frontTopLeft	frontTopLeft
		p	2	forwards	forwards
		p	3	up	up
		p	4	cache	cache
	m	()I	b	getHeight
	m	()I	c	getWidth
c	cfo$a	net/minecraft/block/pattern/BlockPattern$BlockStateCacheLoader
	f	Lbqd;	a	world
	f	Z	b	forceLoad
	m	(Lbqd;Z)V	<init>	<init>
		p	1	world	world
		p	2	forceLoad	forceLoad
	m	(Lfu;)Lcfn;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
		p	1	pos	pos
c	cfo$b	net/minecraft/block/pattern/BlockPattern$Result
	f	Lfu;	a	frontTopLeft
	f	Lfz;	b	forwards
	f	Lfz;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
	m	(Lfu;Lfz;Lfz;Lcom/google/common/cache/LoadingCache;III)V	<init>	<init>
		p	1	frontTopLeft	frontTopLeft
		p	2	forwards	forwards
		p	3	up	up
		p	4	cache	cache
		p	5	width	width
		p	6	height	height
		p	7	depth	depth
	m	()Lfu;	a	getFrontTopLeft
	m	(Lfz;Lfu;DLdem;D)Lcfo$c;	a	getTeleportTarget
	m	(III)Lcfn;	a	translate
	m	()Lfz;	b	getForwards
	m	()Lfz;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
c	cfo$c	net/minecraft/block/pattern/BlockPattern$TeleportTarget
	f	Ldem;	a	pos
	f	Ldem;	b	velocity
	f	I	c	yaw
	m	(Ldem;Ldem;I)V	<init>	<init>
		p	1	pos	pos
		p	2	velocity	velocity
		p	3	yaw	yaw
c	cfp	net/minecraft/block/pattern/BlockPatternBuilder
	f	Lcom/google/common/base/Joiner;	a	JOINER
	f	Ljava/util/List;	b	aisles
	f	Ljava/util/Map;	c	charMap
	f	I	d	height
	f	I	e	width
	m	([Ljava/lang/String;)Lcfp;	a	aisle
		p	1	pattern	pattern
	m	()Lcfp;	a	start
	m	(CLjava/util/function/Predicate;)Lcfp;	a	where
		p	1	key	key
	m	()Lcfo;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	bakePredicates
	m	()V	d	validate
c	cfr	net/minecraft/util/function/MaterialPredicate
	f	Lcfr;	a	IS_AIR
	f	Lcxd;	b	material
	m	(Lcxd;)V	<init>	<init>
		p	1	material	material
	m	(Lcfj;)Z	a	test
	m	(Lcxd;)Lcfr;	a	create
		p	0	material	material
	m	(Ljava/lang/Object;)Z	test	test
		p	1	state	state
c	cfr$1	net/minecraft/util/function/MaterialPredicate$1
	m	(Lcfj;)Z	test	test
c	cfs	net/minecraft/predicate/block/BlockPredicate
	f	Lbvr;	a	block
	m	(Lbvr;)V	<init>	<init>
		p	1	block	block
	m	(Lbvr;)Lcfs;	a	make
		p	0	block	block
	m	(Lcfj;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cft	net/minecraft/predicate/block/BlockStatePredicate
	f	Ljava/util/function/Predicate;	a	ANY
	f	Lcfk;	b	manager
	f	Ljava/util/Map;	c	propertyTests
	m	(Lcfk;)V	<init>	<init>
		p	1	manager	manager
	m	(Lbvr;)Lcft;	a	forBlock
		p	0	block	block
	m	(Lcfj;Lcgl;Ljava/util/function/Predicate;)Z	a	testProperty
		p	1	blockState	blockState
		p	2	property	property
	m	(Lcfj;)Z	a	test
	m	(Lcgl;Ljava/util/function/Predicate;)Lcft;	a	with
		p	1	property	property
c	cfv	net/minecraft/block/enums/WallMountLocation
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cfw	net/minecraft/block/enums/BambooLeaves
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cfx	net/minecraft/block/enums/BedPart
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cfy	net/minecraft/block/enums/Attachment
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cfz	net/minecraft/state/property/Properties
	c	Contains all block and fluid state properties that Minecraft uses.
	f	Lcga;	A	TRIGGERED
		c	A property that specifies if a dispenser is activated.
	f	Lcga;	B	UNSTABLE
		c	 A property that specifies if TNT is unstable.\n\n <p>In vanilla, if TNT is unstable, it will ignite when broken.
	f	Lcga;	C	WATERLOGGED
		c	A property that specifies if a block is waterlogged.
	f	Lcga;	D	VINE_END
	f	Lcgg;	E	HORIZONTAL_AXIS
		c	 A property that specifies the axis a block is oriented to.\n\n<p>This property only allows a block to be oriented to the X and Z axes.
	f	Lcgg;	F	AXIS
		c	A property that specifies the axis a block is oriented to.
	f	Lcga;	G	UP
		c	A property that specifies if this block is connected to another block from the top.
	f	Lcga;	H	DOWN
		c	A property that specifies if this block is connected to another block from the below.
	f	Lcga;	I	NORTH
		c	A property that specifies if this block is connected to another block from the north.
	f	Lcga;	J	EAST
		c	A property that specifies if this block is connected to another block from the east.
	f	Lcga;	K	SOUTH
		c	A property that specifies if this block is connected to another block from the south.
	f	Lcga;	L	WEST
		c	A property that specifies if this block is connected to another block from the west.
	f	Lcgd;	M	FACING
		c	A property that specifies the direction a block is facing.
	f	Lcgd;	N	HOPPER_FACING
		c	A property that specifies the direction a hopper's output faces.\n\n<p>This property does not allow the hopper's output to face upwards.
	f	Lcgd;	O	HORIZONTAL_FACING
		c	A property that specifies the direction a block is facing.\n\n<p>This property only allows a block to face in one of the cardinal directions (north, south, east and west).
	f	Lcgg;	P	ORIENTATION
		c	A property that specifies the orientation of a jigsaw.
	f	Lcgg;	Q	WALL_MOUNT_LOCATION
		c	A property that specifies the type of wall a block is attached to.
	f	Lcgg;	R	ATTACHMENT
		c	A property that specifies how a bell is attached to a block.
	f	Lcgg;	S	EAST_WALL_SHAPE
		c	A property that specifies how a wall extends from the center post to the east.‌
	f	Lcgg;	T	NORTH_WALL_SHAPE
		c	A property that specifies how a wall extends from the center post to the north.‌
	f	Lcgg;	U	SOUTH_WALL_SHAPE
		c	A property that specifies how a wall extends from the center post to the south.‌
	f	Lcgg;	V	WEST_WALL_SHAPE
		c	A property that specifies how a wall extends from the center post to the west.‌
	f	Lcgg;	W	EAST_WIRE_CONNECTION
		c	A property that specifies how redstone wire attaches to the east.‌
	f	Lcgg;	X	NORTH_WIRE_CONNECTION
		c	A property that specifies how redstone wire attaches to the north.‌
	f	Lcgg;	Y	SOUTH_WIRE_CONNECTION
		c	A property that specifies how redstone wire attaches to the south.‌
	f	Lcgg;	Z	WEST_WIRE_CONNECTION
		c	A property that specifies how redstone wire attaches to the west.‌
	f	Lcga;	a	ATTACHED
		c	A property that specifies if a tripwire is attached to a tripwire hook.
	f	Lcgi;	aA	STAGE
		c	A property that specifies a growth stage on a scale of 0 to 1.
	f	Lcgi;	aB	DISTANCE_0_7
		c	A property that specifies the overhang distance of a scaffolding.
	f	Lcgi;	aC	CHARGES
		c	A property that specifies the amount of charges a respawn anchor has.
	f	Lcgi;	aD	ROTATION
		c	A property that specifies the rotation of a block on a 0 to 15 scale.\n\n<p>Each rotation is 22.5 degrees.
	f	Lcgg;	aE	BED_PART
		c	A property that specifies what part of a bed a block is.
	f	Lcgg;	aF	CHEST_TYPE
		c	A property that specifies what type of chest a block is.
	f	Lcgg;	aG	COMPARATOR_MODE
		c	A property that specifies the mode a comparator is set to.
	f	Lcgg;	aH	DOOR_HINGE
		c	A property that specifies whether a door's hinge is to the right or left.
	f	Lcgg;	aI	INSTRUMENT
		c	A property that specifies what instrument a note block will play.
	f	Lcgg;	aJ	PISTON_TYPE
		c	A property that specifies the type of a piston.
	f	Lcgg;	aK	SLAB_TYPE
		c	A property that specifies the type of slab.
	f	Lcgg;	aL	STAIR_SHAPE
		c	A property that specifies the shape of a stair block.
	f	Lcgg;	aM	STRUCTURE_BLOCK_MODE
		c	A property that specifies the mode of a structure block.
	f	Lcgg;	aN	BAMBOO_LEAVES
		c	A property that specifies the size of bamboo leaves.
	f	Lcgg;	aa	DOUBLE_BLOCK_HALF
		c	A property that specifies whether a double height block is the upper or lower half.
	f	Lcgg;	ab	BLOCK_HALF
		c	A property that specifies if a block is the upper or lower half.
	f	Lcgg;	ac	RAIL_SHAPE
		c	A property that specifies the two directions a rail connects to.
	f	Lcgg;	ad	STRAIGHT_RAIL_SHAPE
		c	A property that specifies the two directions a rail connects to.\n\n<p>This property does not allow for a rail to turn.
	f	Lcgi;	ae	AGE_1
		c	A property that specifies the age of a block on a scale of 0 to 1.
	f	Lcgi;	af	AGE_2
		c	A property that specifies the age of a block on a scale of 0 to 2.
	f	Lcgi;	ag	AGE_3
		c	A property that specifies the age of a block on a scale of 0 to 3.
	f	Lcgi;	ah	AGE_5
		c	A property that specifies the age of a block on a scale of 0 to 5.
	f	Lcgi;	ai	AGE_7
		c	A property that specifies the age of a block on a scale of 0 to 7.
	f	Lcgi;	aj	AGE_15
		c	A property that specifies the age of a block on a scale of 0 to 15.
	f	Lcgi;	ak	AGE_25
		c	A property that specifies the age of a block on a scale of 0 to 25.
	f	Lcgi;	al	BITES
		c	A property that specifies the bites taken out of a cake.
	f	Lcgi;	am	DELAY
		c	A property that specifies the delay a repeater will apply.
	f	Lcgi;	an	DISTANCE_1_7
		c	A property that specifies the overhang distance of a block on a scale of 1-7.
	f	Lcgi;	ao	EGGS
		c	A property that specifies the amount of eggs in a turtle egg block.
	f	Lcgi;	ap	HATCH
		c	A property that specifies how close an egg is hatching.
	f	Lcgi;	aq	LAYERS
		c	A property that specifies how many layers of snow are in a snow block.
	f	Lcgi;	ar	LEVEL_3
		c	A property that specifies how many levels of water there are in a cauldron.
	f	Lcgi;	as	LEVEL_8
		c	A property that specifies the level of a composter.
	f	Lcgi;	at	LEVEL_1_8
		c	A property that specifies the height of a fluid on a scale of 1 to 8.
	f	Lcgi;	au	HONEY_LEVEL
		c	A property that specifies the honey level of a beehive.
	f	Lcgi;	av	LEVEL_15
	f	Lcgi;	aw	MOISTURE
		c	A property that specifies the moisture of farmland.
	f	Lcgi;	ax	NOTE
		c	A property that specifies the pitch of a note block.
	f	Lcgi;	ay	PICKLES
		c	A property that specifies how many pickles are in a sea pickle.
	f	Lcgi;	az	POWER
		c	A property that specifies the redstone power of a block.
	f	Lcga;	b	BOTTOM
		c	A property that specifies if a scaffolding block is bottom of a floating segment.
	f	Lcga;	c	CONDITIONAL
		c	A property that specifies if a command block is conditional.
	f	Lcga;	d	DISARMED
		c	A property that specifies if a tripwire has been disarmed.
	f	Lcga;	e	DRAG
		c	A property that specifies if a bubble column should drag entities downwards.
	f	Lcga;	f	ENABLED
		c	A property that specifies whether a hopper is enabled.
	f	Lcga;	g	EXTENDED
		c	A property that specifies if a piston is extended.
	f	Lcga;	h	EYE
		c	A property that specifies if an end portal frame contains an eye of ender.
	f	Lcga;	i	FALLING
		c	A property that specifies if a fluid is falling.
	f	Lcga;	j	HANGING
		c	A property that specifies if a lantern is hanging.
	f	Lcga;	k	HAS_BOTTLE_0
		c	A property that specifies if a brewing stand has a bottle in slot 0.
	f	Lcga;	l	HAS_BOTTLE_1
		c	A property that specifies if a brewing stand has a bottle in slot 1.
	f	Lcga;	m	HAS_BOTTLE_2
		c	A property that specifies if a brewing stand has a bottle in slot 2.
	f	Lcga;	n	HAS_RECORD
		c	A property that specifies if a jukebox has a record.
	f	Lcga;	o	HAS_BOOK
		c	A property that specifies if a lectern has a book.
	f	Lcga;	p	INVERTED
		c	A property that specifies if a daylight sensor's output is inverted.
	f	Lcga;	q	IN_WALL
		c	A property that specifies if a fence gate is attached to a wall.\n\n<p>This lowers the fence gate by 3 pixels to attach more cleanly to a wall.
	f	Lcga;	r	LIT
		c	A property that specifies if a block is lit.
	f	Lcga;	s	LOCKED
		c	A property that specifies if a repeater is locked.
	f	Lcga;	t	OCCUPIED
		c	A property that specifies if a bed is occupied.
	f	Lcga;	u	OPEN
		c	A property that specifies if a block is open.\n\n<p>This property is normally used for doors, trapdoors and fence gates but is also used by barrels.
	f	Lcga;	v	PERSISTENT
		c	A property that specifies if a block is persistent.\n\n<p>In vanilla, this is used to specify whether leaves should disappear when the logs are removed.
	f	Lcga;	w	POWERED
		c	A property that specifies if a block is being powered to produce or emit redstone signal.
	f	Lcga;	x	SHORT
		c	A property that specifies if a piston head is shorter than normal.
	f	Lcga;	y	SIGNAL_FIRE
		c	A property that specifies if a campfire's smoke should be taller.\n\n<p>This occurs when a hay bale is placed under the campfire.
	f	Lcga;	z	SNOWY
		c	A property that specifies if a block is covered in snow.
	m	(Lcgm;)Z	a	method_11813
		p	0	shape	shape
	m	(Lfz;)Z	a	method_11814
		p	0	facing	facing
c	cg	net/minecraft/predicate/entity/AdvancementEntityPredicateSerializer
	f	Lcg;	a	INSTANCE
	f	Lcom/google/gson/Gson;	b	gson
	m	([Lddm;)Lcom/google/gson/JsonElement;	a	conditionsToJson
		p	1	conditions	conditions
c	cga	net/minecraft/state/property/BooleanProperty
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)Lcga;	a	of
		p	0	name	name
c	cgb	net/minecraft/block/enums/ChestType
	f	[Lcgb;	d	VALUES
	f	Ljava/lang/String;	e	name
	f	I	f	opposite
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	name	name
		p	4	opposite	opposite
	m	()Lcgb;	b	getOpposite
c	cgc	net/minecraft/block/enums/ComparatorMode
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cgd	net/minecraft/state/property/DirectionProperty
	m	(Ljava/lang/String;Ljava/util/Collection;)V	<init>	<init>
		p	1	name	name
		p	2	values	values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Lcgd;	a	of
		c	Creates a direction property.
		p	0	name	name
			c	the name of this property
		p	1	filter	filter
			c	a filter which specifies if a value is allowed
	m	(Ljava/lang/String;Ljava/util/Collection;)Lcgd;	a	of
		c	Creates a direction property which only supports specific values
		p	0	name	name
			c	the name of this property
		p	1	values	values
			c	the values this property can have
	m	(Ljava/lang/String;[Lfz;)Lcgd;	a	of
		c	Creates a direction property which only supports specific values
		p	0	name	name
			c	the name of this property
		p	1	values	values
			c	the values this property can have
c	cge	net/minecraft/block/enums/DoorHinge
c	cgf	net/minecraft/block/enums/DoubleBlockHalf
c	cgg	net/minecraft/state/property/EnumProperty
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	Ljava/util/Map;	b	byName
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V	<init>	<init>
		p	1	name	name
		p	2	type	type
		p	3	values	values
	m	(Ljava/lang/String;Ljava/lang/Class;)Lcgg;	a	of
		c	Creates an enum property.
		p	0	name	name
			c	the name of this property
		p	1	type	type
			c	the type this property contains
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lcgg;	a	of
		c	Creates an enum property.
		p	0	name	name
			c	the name of this property
		p	1	type	type
			c	the type this property contains
		p	2	filter	filter
			c	a filter that specifies if a value is allowed
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lcgg;	a	of
		c	Creates an enum property.
		p	0	name	name
			c	the name of this property
		p	1	type	type
			c	the type this property contains
		p	2	values	values
			c	the values this property could contain
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lcgg;	a	of
		p	0	name	name
		p	1	type	type
		p	2	values	values
c	cgh	net/minecraft/block/enums/BlockHalf
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cgi	net/minecraft/state/property/IntProperty
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1	name	name
		p	2	min	min
		p	3	max	max
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	name
	m	(Ljava/lang/String;II)Lcgi;	a	of
		p	0	name	name
		p	1	min	min
		p	2	max	max
c	cgj	net/minecraft/block/enums/Instrument
	f	Ljava/lang/String;	q	name
	f	Lack;	r	sound
	m	(Ljava/lang/String;ILjava/lang/String;Lack;)V	<init>	<init>
		p	3	name	name
		p	4	sound	sound
	m	(Lcfj;)Lcgj;	a	fromBlockState
		p	0	state	state
	m	()Lack;	b	getSound
c	cgk	net/minecraft/block/enums/PistonType
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cgl	net/minecraft/state/property/Property
	m	()Ljava/util/Collection;	a	getValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	name
		p	1	value	value
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	parse
		p	1	name	name
	m	()I	b	computeHashCode
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/lang/Class;	g	getType
c	cgm	net/minecraft/block/enums/RailShape
	f	Ljava/lang/String;	k	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Z	c	isAscending
c	cgn	net/minecraft/block/enums/WireConnection
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Z	b	isConnected
c	cgo	net/minecraft/block/enums/SlabType
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cgp	net/minecraft/block/enums/StairShape
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cgq	net/minecraft/block/enums/StructureBlockMode
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cgr	net/minecraft/block/enums/WallShape
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	cgs	net/minecraft/util/SignType
	f	Lcgs;	a	OAK
	f	Lcgs;	b	SPRUCE
	f	Lcgs;	c	BIRCH
	f	Lcgs;	d	ACACIA
	f	Lcgs;	e	JUNGLE
	f	Lcgs;	f	DARK_OAK
	f	Lcgs;	g	CRIMSON
	f	Lcgs;	h	WARPED
	f	Ljava/util/Set;	i	VALUES
	f	Ljava/lang/String;	j	name
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Lcgs;)Lcgs;	a	register
		p	0	type	type
	m	()Ljava/util/stream/Stream;	a	stream
	m	()Ljava/lang/String;	b	getName
c	cgu	net/minecraft/world/border/WorldBorderListener
	m	(Lcgw;DDJ)V	a	onInterpolateSize
		p	1	border	border
		p	2	fromSize	fromSize
		p	4	toSize	toSize
		p	6	time	time
	m	(Lcgw;D)V	a	onSizeChange
		p	1	border	border
		p	2	size	size
	m	(Lcgw;DD)V	a	onCenterChanged
		p	1	border	border
		p	2	centerX	centerX
		p	4	centerZ	centerZ
	m	(Lcgw;I)V	a	onWarningTimeChanged
		p	1	border	border
		p	2	warningTime	warningTime
	m	(Lcgw;D)V	b	onDamagePerBlockChanged
		p	1	border	border
		p	2	damagePerBlock	damagePerBlock
	m	(Lcgw;I)V	b	onWarningBlocksChanged
		p	1	border	border
		p	2	warningBlockDistance	warningBlockDistance
	m	(Lcgw;D)V	c	onSafeZoneChanged
		p	1	border	border
		p	2	safeZoneRadius	safeZoneRadius
c	cgu$a	net/minecraft/world/border/WorldBorderListener$WorldBorderSyncer
	f	Lcgw;	a	border
	m	(Lcgw;)V	<init>	<init>
		p	1	border	border
c	cgv	net/minecraft/world/border/WorldBorderStage
	f	I	d	color
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	color	color
	m	()I	a	getColor
c	cgw	net/minecraft/world/border/WorldBorder
	f	Ljava/util/List;	a	listeners
	f	Lcgw$c;	b	DEFAULT_BORDER
	f	D	c	damagePerBlock
	f	D	d	buffer
	f	I	e	warningTime
	f	I	f	warningBlocks
	f	D	g	centerX
	f	D	h	centerZ
	f	I	i	maxWorldBorderRadius
	f	Lcgw$a;	j	area
	m	(Lcgu;)V	a	addListener
		p	1	listener	listener
	m	(I)V	a	setMaxWorldBorderRadius
		p	1	radius	radius
	m	(Lcgw$c;)V	a	load
		p	1	properties	properties
	m	(D)V	a	setSize
		p	1	size	size
	m	()D	a	getCenterX
	m	(Lfu;)Z	a	contains
		p	1	pos	pos
	m	(Ldeg;)Z	a	contains
		p	1	box	box
	m	(Lbph;)Z	a	contains
		p	1	pos	pos
	m	(DDJ)V	a	interpolateSize
		p	1	fromSize	fromSize
		p	3	toSize	toSize
		p	5	time	time
	m	(Laom;)D	a	getDistanceInsideBorder
		p	1	entity	entity
	m	(DD)D	b	getDistanceInsideBorder
		p	1	x	x
		p	3	z	z
	m	(D)V	b	setBuffer
		p	1	buffer	buffer
	m	()D	b	getCenterZ
	m	(I)V	b	setWarningTime
		p	1	warningTime	warningTime
	m	()Ldfg;	c	asVoxelShape
	m	(D)V	c	setDamagePerBlock
		p	1	damagePerBlock	damagePerBlock
	m	(I)V	c	setWarningBlocks
		p	1	warningBlocks	warningBlocks
	m	(DD)V	c	setCenter
		p	1	x	x
		p	3	z	z
	m	()Lcgv;	d	getStage
	m	()D	e	getBoundWest
	m	()D	f	getBoundNorth
	m	()D	g	getBoundEast
	m	()D	h	getBoundSouth
	m	()D	i	getSize
	m	()J	j	getTargetRemainingTime
	m	()D	k	getTargetSize
	m	()Ljava/util/List;	l	getListeners
	m	()I	m	getMaxWorldBorderRadius
	m	()D	n	getBuffer
	m	()D	o	getDamagePerBlock
	m	()D	p	getShrinkingSpeed
	m	()I	q	getWarningTime
	m	()I	r	getWarningBlocks
	m	()V	s	tick
	m	()Lcgw$c;	t	write
c	cgw$a	net/minecraft/world/border/WorldBorder$Area
	m	()D	a	getBoundWest
	m	()D	b	getBoundEast
	m	()D	c	getBoundNorth
	m	()D	d	getBoundSouth
	m	()D	e	getSize
	m	()D	f	getShrinkingSpeed
	m	()J	g	getTargetRemainingTime
	m	()D	h	getTargetSize
	m	()Lcgv;	i	getStage
	m	()V	j	onMaxWorldBorderRadiusChanged
	m	()V	k	onCenterChanged
	m	()Lcgw$a;	l	getAreaInstance
	m	()Ldfg;	m	asVoxelShape
c	cgw$b	net/minecraft/world/border/WorldBorder$MovingArea
	f	D	b	oldSize
	f	D	c	newSize
	f	J	d	timeEnd
	f	J	e	timeStart
	f	D	f	timeDuration
	m	(Lcgw;DDJ)V	<init>	<init>
		p	2	oldSize	oldSize
		p	4	newSize	newSize
		p	6	duration	duration
c	cgw$c	net/minecraft/world/border/WorldBorder$Properties
	f	D	a	centerX
	f	D	b	centerZ
	f	D	c	damagePerBlock
	f	D	d	buffer
	f	I	e	warningBlocks
	f	I	f	warningTime
	f	D	g	size
	f	J	h	targetRemainingTime
	f	D	i	targetSize
	m	(DDDDIIDJD)V	<init>	<init>
		p	1	centerX	centerX
		p	3	centerZ	centerZ
		p	5	damagePerBlock	damagePerBlock
		p	7	buffer	buffer
		p	9	warningBlocks	warningBlocks
		p	10	warningTime	warningTime
		p	11	size	size
		p	13	targetRemainingTime	targetRemainingTime
		p	15	targetSize	targetSize
	m	(Lcgw;)V	<init>	<init>
		p	1	worldBorder	worldBorder
	m	()D	a	getCenterX
	m	(Lcom/mojang/serialization/DynamicLike;Lcgw$c;)Lcgw$c;	a	fromDynamic
	m	(Lle;)V	a	toTag
		p	1	tag	tag
	m	()D	b	getCenterZ
	m	()D	c	getDamagePerBlock
	m	()D	d	getBuffer
	m	()I	e	getWarningBlocks
	m	()I	f	getWarningTime
	m	()D	g	getSize
	m	()J	h	getTargetRemainingTime
	m	()D	i	getTargetSize
c	cgw$d	net/minecraft/world/border/WorldBorder$StaticArea
	f	D	b	size
	f	D	c	boundWest
	f	D	d	boundNorth
	f	D	e	boundEast
	f	D	f	boundSouth
	f	Ldfg;	g	shape
	m	(Lcgw;D)V	<init>	<init>
		p	1	size	size
	m	()V	n	recalculateBounds
c	cgy	net/minecraft/world/chunk/Chunk
	c	Represents a scoped, modifiable view of biomes, block states, fluid states and block entities.
	m	(J)V	a	setLastSaveTime
		p	1	lastSaveTime	lastSaveTime
	m	(SI)V	a	markBlockForPostProcessing
	m	(Laom;)V	a	addEntity
		p	1	entity	entity
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getList
		p	0	lists	lists
		p	1	index	index
	m	(Lcio$a;[J)V	a	setHeightmap
		p	1	type	type
		p	2	heightmap	heightmap
	m	(Lfu;Lcdl;)V	a	setBlockEntity
		p	1	pos	pos
		p	2	blockEntity	blockEntity
	m	(II)Z	a	areSectionsEmptyBetween
		p	1	lowerHeight	lowerHeight
		p	2	upperHeight	upperHeight
	m	(Lcio$a;)Lcio;	a	getHeightmap
		p	1	type	type
	m	()Lchk;	a	getHighestNonEmptySection
	m	(Lfu;Lcfj;Z)Lcfj;	a	setBlockState
		p	1	pos	pos
		p	2	state	state
		p	3	moved	moved
	m	(Lle;)V	a	addPendingBlockEntityTag
		p	1	tag	tag
	m	(Lcio$a;II)I	a	sampleHeightmap
		p	1	type	type
		p	2	x	x
		p	3	z	z
	m	(Ljava/util/Map;)V	a	setStructureStarts
		p	1	structureStarts	structureStarts
	m	(Z)V	a	setShouldSave
		p	1	shouldSave	shouldSave
	m	(Z)V	b	setLightOn
		p	1	lightOn	lightOn
	m	()I	b	getHighestNonEmptySectionYOffset
	m	(J)V	b	setInhabitedTime
		p	1	inhabitedTime	inhabitedTime
	m	()Ljava/util/Set;	c	getBlockEntityPositions
	m	(Lfu;)V	d	removeBlockEntity
		p	1	pos	pos
	m	()[Lchk;	d	getSectionArray
	m	(Lfu;)V	e	markBlockForPostProcessing
		p	1	pos	pos
	m	()Ljava/util/Collection;	f	getHeightmaps
	m	(Lfu;)Lle;	f	getBlockEntityTag
		p	1	pos	pos
	m	()Lbph;	g	getPos
	m	()Ljava/util/Map;	h	getStructureStarts
	m	()Lcgz;	i	getBiomeArray
	m	(Lfu;)Lle;	i	getPackedBlockEntityTag
		p	1	pos	pos
	m	()Z	j	needsSaving
	m	()Lchc;	k	getStatus
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	l	getPostProcessingLists
	m	()Ljava/util/stream/Stream;	m	getLightSourcesStream
	m	()Lbqr;	n	getBlockTickScheduler
	m	()Lbqr;	o	getFluidTickScheduler
	m	()Lcht;	p	getUpgradeData
	m	()J	q	getInhabitedTime
	m	()Z	r	isLightOn
c	cgz	net/minecraft/world/biome/source/BiomeArray
	f	I	a	DEFAULT_LENGTH
	f	I	b	HORIZONTAL_BIT_MASK
	f	I	c	VERTICAL_BIT_MASK
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	I	e	HORIZONTAL_SECTION_COUNT
	f	I	f	VERTICAL_SECTION_COUNT
	f	[Lbre;	g	data
	m	(Lbph;Lbrh;)V	<init>	<init>
		p	1	pos	pos
		p	2	source	source
	m	(Lbph;Lbrh;[I)V	<init>	<init>
		p	1	pos	pos
		p	2	source	source
		p	3	rawIds	rawIds
	m	([Lbre;)V	<init>	<init>
		p	1	data	data
	m	(Lmg;)V	<init>	<init>
		p	1	buf	buf
	m	()[I	a	toIntArray
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	()Lcgz;	b	copy
c	ch	net/minecraft/advancement/criterion/ShotCrossbowCriterion
	f	Luh;	a	ID
	m	(Lze;Lbki;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lch$a;	a	conditionsFromJson
c	ch$a	net/minecraft/advancement/criterion/ShotCrossbowCriterion$Conditions
	f	Lbo;	a	item
	m	(Lbe$b;Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	item	item
	m	(Lbki;)Z	a	matches
		p	1	stack	stack
	m	(Lbqa;)Lch$a;	a	create
		p	0	item	item
c	cha	net/minecraft/world/gen/chunk/ChunkGenerator
	c	In charge of shaping, adding biome specific surface blocks, and carving chunks,\nas well as populating the generated chunks with {@linkplain net.minecraft.world.gen.feature.Feature features} and {@linkplain net.minecraft.entity.Entity entities}.\nBiome placement starts here, however all vanilla and most modded chunk generators delegate this to a {@linkplain net.minecraft.world.biome.source.BiomeSource biome source}.
	f	Lbrh;	b	biomeSource
	f	Lciw;	d	config
	m	(II)Lbpg;	a	getColumnSample
		p	1	x	x
		p	2	z	z
	m	(Lcgy;)V	a	populateBiomes
		p	1	chunk	chunk
	m	(J)Lcha;	a	withSeed
		p	1	seed	seed
	m	(IILcio$a;)I	a	getHeight
		p	1	x	x
		p	2	z	z
		p	3	heightmapType	heightmapType
	m	(Lzj;)V	a	populateEntities
		p	1	region	region
	m	(JLbrg;Lcgy;Lcin$a;)V	a	carve
		p	1	seed	seed
		p	3	access	access
		p	4	chunk	chunk
		p	5	carver	carver
	m	(Lbre;Lbqq;Lapa;Lfu;)Ljava/util/List;	a	getEntitySpawnList
		p	1	biome	biome
		p	2	accessor	accessor
		p	3	group	group
		p	4	pos	pos
	m	(Lbqq;Lcgy;Lcva;J)V	a	setStructureStarts
	m	(Lzd;Lcml;Lfu;IZ)Lfu;	a	locateStructure
		p	1	world	world
		p	2	feature	feature
		p	3	center	center
		p	4	radius	radius
		p	5	skipExistingChunks	skipExistingChunks
	m	(Lbqc;Lbqq;Lcgy;)V	a	addStructureReferences
		p	1	world	world
		p	2	accessor	accessor
		p	3	chunk	chunk
	m	(Lzj;Lbqq;)V	a	generateFeatures
		p	1	region	region
		p	2	accessor	accessor
	m	(Lzj;Lcgy;)V	a	buildSurface
		p	1	region	region
		p	2	chunk	chunk
	m	(Lbqc;Lbqq;Lcgy;)V	b	populateNoise
		c	Generates the base shape of the chunk out of the basic block states as decided by this chunk generator's config.
		p	1	world	world
		p	2	accessor	accessor
		p	3	chunk	chunk
	m	(IILcio$a;)I	b	getHeightOnGround
		p	1	x	x
		p	2	z	z
		p	3	heightmapType	heightmapType
	m	()Lciw;	b	getConfig
	m	(IILcio$a;)I	c	getHeightInGround
		p	1	x	x
		p	2	z	z
		p	3	heightmapType	heightmapType
	m	()I	c	getSpawnHeight
	m	()Lbrh;	d	getBiomeSource
	m	()I	e	getMaxY
	m	()I	f	getSeaLevel
c	chb	net/minecraft/world/chunk/ChunkManager
	m	(Lbph;)Z	a	shouldTickChunk
		p	1	pos	pos
	m	(Lbph;Z)V	a	setChunkForced
		p	1	pos	pos
		p	2	forced	forced
	m	(IIZ)Lchj;	a	getWorldChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	create	create
	m	(ZZ)V	a	setMobSpawnOptions
		p	1	spawnMonsters	spawnMonsters
		p	2	spawnAnimals	spawnAnimals
	m	(Laom;)Z	a	shouldTickEntity
		p	1	entity	entity
	m	(II)Lchj;	a	getWorldChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(IILchc;Z)Lcgy;	a	getChunk
		p	1	x	x
		p	2	z	z
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	(Lfu;)Z	a	shouldTickBlock
		p	1	pos	pos
	m	(II)Z	b	isChunkLoaded
		p	1	x	x
		p	2	z	z
	m	()Ljava/lang/String;	e	getDebugString
	m	()Lcwr;	l	getLightingProvider
c	chc	net/minecraft/world/chunk/ChunkStatus
	f	Ljava/util/EnumSet;	n	PRE_CARVER_HEIGHTMAPS
	f	Ljava/util/EnumSet;	o	POST_CARVER_HEIGHTMAPS
	f	Lchc$c;	p	STATUS_BUMP_NO_GEN_TASK
		c	A load task which only bumps the chunk status of the chunk.
	f	Ljava/util/List;	q	DISTANCE_TO_TARGET_GENERATION_STATUS
	f	Lit/unimi/dsi/fastutil/ints/IntList;	r	STATUS_TO_TARGET_GENERATION_RADIUS
	f	Ljava/lang/String;	s	id
	f	I	t	index
	f	Lchc;	u	previous
	f	Lchc$b;	v	generationTask
	f	Lchc$c;	w	loadTask
	f	I	x	taskMargin
	f	Lchc$a;	y	chunkType
	f	Ljava/util/EnumSet;	z	heightMapTypes
	m	(Ljava/lang/String;Lchc;ILjava/util/EnumSet;Lchc$a;Lchc$b;Lchc$c;)V	<init>	<init>
		p	1	id	id
		p	2	previous	previous
		p	3	taskMargin	taskMargin
		p	4	heightMapTypes	heightMapTypes
		p	5	chunkType	chunkType
		p	6	generationTask	generationTask
		p	7	loadTask	loadTask
	m	(Ljava/lang/String;Lchc;ILjava/util/EnumSet;Lchc$a;Lchc$b;Lchc$c;)Lchc;	a	register
		p	0	id	id
		p	1	previous	previous
		p	2	taskMargin	taskMargin
		p	3	heightMapTypes	heightMapTypes
		p	4	chunkType	chunkType
		p	5	task	task
		p	6	loadTask	loadTask
	m	(Lzd;Lcva;Lzg;Ljava/util/function/Function;Lcgy;)Ljava/util/concurrent/CompletableFuture;	a	runLoadTask
		p	1	world	world
		p	2	structureManager	structureManager
		p	3	lightingProvider	lightingProvider
		p	5	chunk	chunk
	m	(Lzd;Lcha;Lcva;Lzg;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	runGenerationTask
		p	1	world	world
		p	2	chunkGenerator	chunkGenerator
		p	3	structureManager	structureManager
		p	4	lightingProvider	lightingProvider
		p	6	chunks	chunks
	m	(Ljava/lang/String;Lchc;ILjava/util/EnumSet;Lchc$a;Lchc$b;)Lchc;	a	register
		p	0	id	id
		p	1	previous	previous
		p	2	taskMargin	taskMargin
		p	3	heightMapTypes	heightMapTypes
		p	4	chunkType	chunkType
		p	5	task	task
	m	(Lchc;Lzd;Lcha;Lcva;Lzg;Ljava/util/function/Function;Ljava/util/List;Lcgy;)Ljava/util/concurrent/CompletableFuture;	a	method_17034
		p	0	targetStatus	targetStatus
		p	1	world	world
		p	2	generator	generator
		p	3	structureManager	structureManager
		p	4	lightingProvider	lightingProvider
		p	6	surroundingChunks	surroundingChunks
		p	7	chunk	chunk
	m	(Lchc;)I	a	getTargetGenerationRadius
		p	0	status	status
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	a	method_17033
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	(Ljava/lang/String;)Lchc;	a	get
		p	0	id	id
	m	(Ljava/lang/String;Lchc;ILjava/util/EnumSet;Lchc$a;Lchc$d;)Lchc;	a	register
		p	0	id	id
		p	1	previous	previous
		p	2	taskMargin	taskMargin
		p	3	heightMapTypes	heightMapTypes
		p	4	chunkType	chunkType
		p	5	task	task
	m	(Lchc;Lzd;Lcva;Lzg;Ljava/util/function/Function;Lcgy;)Ljava/util/concurrent/CompletableFuture;	a	method_20609
		p	0	status	status
		p	1	world	world
		p	2	structureManager	structureManager
		p	3	lightingProvider	lightingProvider
		p	5	chunk	chunk
	m	(Lchc;Lzg;Lcgy;)Ljava/util/concurrent/CompletableFuture;	a	getLightingFuture
		p	0	status	status
		p	1	lightingProvider	lightingProvider
		p	2	chunk	chunk
	m	(I)Lchc;	a	getTargetGenerationStatus
		p	0	distance	distance
	m	()Ljava/util/List;	a	createOrderedList
	m	(Lchc;Lcgy;)Z	a	shouldExcludeBlockLight
		p	0	status	status
		p	1	chunk	chunk
	m	()I	b	getMaxTargetGenerationRadius
	m	(Lchc;Lzd;Lcha;Lcva;Lzg;Ljava/util/function/Function;Ljava/util/List;Lcgy;)Ljava/util/concurrent/CompletableFuture;	b	method_20613
		p	0	targetStatus	targetStatus
		p	1	world	world
		p	2	generator	generator
		p	3	structureManager	structureManager
		p	4	lightingProvider	lightingProvider
		p	6	surroundingChunks	surroundingChunks
		p	7	chunk	chunk
	m	(Lchc;Lzd;Lcva;Lzg;Ljava/util/function/Function;Lcgy;)Ljava/util/concurrent/CompletableFuture;	b	method_20614
		p	0	status	status
		p	1	world	world
		p	2	structureManager	structureManager
		p	3	lightingProvider	lightingProvider
		p	5	chunk	chunk
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	b	method_16566
		p	0	targetStatus	targetStatus
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	(Lchc;)Z	b	isAtLeast
		p	1	chunk	chunk
	m	()I	c	getIndex
	m	(Lchc;Lzd;Lcha;Lcva;Lzg;Ljava/util/function/Function;Ljava/util/List;Lcgy;)Ljava/util/concurrent/CompletableFuture;	c	method_12151
		p	0	status	status
		p	1	world	world
		p	2	generator	generator
		p	3	structureManager	structureManager
		p	4	lightingProvider	lightingProvider
		p	6	surroundingChunks	surroundingChunks
		p	7	chunk	chunk
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	c	method_16569
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	(Lchc;Lzd;Lcva;Lzg;Ljava/util/function/Function;Lcgy;)Ljava/util/concurrent/CompletableFuture;	c	method_20615
		p	0	targetStatus	targetStatus
		p	1	world	world
		p	2	structureManager	structureManager
		p	3	lightingProvider	lightingProvider
		p	5	chunk	chunk
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	d	method_16563
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	()Ljava/lang/String;	d	getId
	m	(Lchc;Lzd;Lcha;Lcva;Lzg;Ljava/util/function/Function;Ljava/util/List;Lcgy;)Ljava/util/concurrent/CompletableFuture;	d	method_16556
		p	0	targetStatus	targetStatus
		p	1	world	world
		p	2	generator	generator
		p	3	structureManager	structureManager
		p	4	lightingProvider	lightingProvider
		p	6	surroundingChunks	surroundingChunks
		p	7	chunk	chunk
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	e	method_16567
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	()Lchc;	e	getPrevious
	m	()I	f	getTaskMargin
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	f	method_16564
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	()Lchc$a;	g	getChunkType
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	g	method_16570
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	h	method_16565
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
	m	()Ljava/util/EnumSet;	h	getHeightmapTypes
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	i	method_17036
		p	0	world	world
		p	1	generator	generator
		p	2	surroundingChunks	surroundingChunks
		p	3	chunk	chunk
c	chc$a	net/minecraft/world/chunk/ChunkStatus$ChunkType
	c	Specifies the type of a chunk
	f	Lchc$a;	a	field_12808
		c	A chunk which is incomplete and not loaded to the world yet.
	f	Lchc$a;	b	field_12807
		c	A chunk which is complete and bound to a world.
c	chc$b	net/minecraft/world/chunk/ChunkStatus$GenerationTask
	c	A task called when a chunk needs to be generated.
	m	(Lchc;Lzd;Lcha;Lcva;Lzg;Ljava/util/function/Function;Ljava/util/List;Lcgy;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1	targetStatus	targetStatus
			c	the status the chunk will be set to after the task is completed
		p	2	world	world
		p	3	generator	generator
		p	4	structureManager	structureManager
		p	5	lightingProvider	lightingProvider
		p	7	surroundingChunks	surroundingChunks
		p	8	chunk	chunk
			c	the primary chunk this task will be applied to
c	chc$c	net/minecraft/world/chunk/ChunkStatus$LoadTask
	c	A task called when a chunk is loaded but does not need to be generated.
	m	(Lchc;Lzd;Lcva;Lzg;Ljava/util/function/Function;Lcgy;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1	targetStatus	targetStatus
		p	2	world	world
		p	3	structureManager	structureManager
		p	4	lightingProvider	lightingProvider
		p	6	chunk	chunk
c	chc$d	net/minecraft/world/chunk/ChunkStatus$SimpleGenerationTask
	m	(Lzd;Lcha;Ljava/util/List;Lcgy;)V	doWork	doWork
		p	1	world	world
		p	2	generator	generator
		p	3	surroundingChunks	surroundingChunks
		p	4	chunk	chunk
c	chd	net/minecraft/world/chunk/ChunkNibbleArray
	f	[B	a	byteArray
	m	(IIII)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	value	value
	m	(II)V	a	set
		p	1	index	index
		p	2	value	value
	m	()[B	a	asByteArray
	m	(III)I	a	get
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()Lchd;	b	copy
	m	(III)I	b	getIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)I	b	get
	m	()Z	c	isUninitialized
	m	(I)Z	c	isEven
		p	1	n	n
	m	(I)I	d	divideByTwo
		p	1	n	n
c	che	net/minecraft/world/chunk/EmptyChunk
	f	[Lbre;	b	BIOMES
	m	(Lbqb;Lbph;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
c	chf	net/minecraft/world/StructureHolder
	m	(Lcml;Lctz;)V	a	setStructureStart
		p	1	structure	structure
		p	2	start	start
	m	(Lcml;)Lctz;	a	getStructureStart
		p	1	structure	structure
	m	(Lcml;J)V	a	addStructureReference
		p	1	structure	structure
		p	2	reference	reference
	m	(Ljava/util/Map;)V	b	setStructureReferences
		p	1	structureReferences	structureReferences
	m	(Lcml;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getStructureReferences
		p	1	structure	structure
	m	()Ljava/util/Map;	v	getStructureReferences
c	chg	net/minecraft/world/chunk/IdListPalette
	f	Lge;	a	idList
	f	Ljava/lang/Object;	b	fallback
	m	(Lge;Ljava/lang/Object;)V	<init>	<init>
		p	1	idList	idList
		p	2	defaultValue	defaultValue
c	chh	net/minecraft/world/chunk/BiMapPalette
	f	Lge;	a	idList
	f	Ladm;	b	map
	f	Lchp;	c	resizeHandler
	f	Ljava/util/function/Function;	d	elementDeserializer
	f	Ljava/util/function/Function;	e	elementSerializer
	f	I	f	indexBits
	m	(Lge;ILchp;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1	idList	idList
		p	2	indexBits	indexBits
		p	3	resizeHandler	resizeHandler
		p	4	elementDeserializer	elementDeserializer
		p	5	elementSerializer	elementSerializer
	m	(Llk;)V	b	toTag
		p	1	tag	tag
	m	()I	b	getIndexBits
c	chi	net/minecraft/world/chunk/ReadOnlyChunk
	c	Represents a read only view of a world chunk used in world generation.
	f	Lchj;	a	wrapped
	m	(Lchj;)V	<init>	<init>
		p	1	wrapped	wrapped
	m	(Lcwz;)Z	a	method_12241
		p	0	fluid	fluid
	m	(Lbvr;)Z	a	method_12242
		p	0	block	block
	m	(Lcio$a;)Lcio$a;	c	transformHeightmapType
		p	1	type	type
	m	()Lchs;	getBlockTickScheduler	getBlockTickScheduler
	m	()Lchs;	getFluidTickScheduler	getFluidTickScheduler
	m	()Lchj;	u	getWrappedChunk
c	chj	net/minecraft/world/chunk/WorldChunk
	f	Lchk;	a	EMPTY_SECTION
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	[Lchk;	c	sections
	f	Lcgz;	d	biomeArray
	f	Ljava/util/Map;	e	pendingBlockEntityTags
	f	Z	f	loadedToWorld
	f	Lbqb;	g	world
	f	Ljava/util/Map;	h	heightmaps
	f	Lcht;	i	upgradeData
	f	Ljava/util/Map;	j	blockEntities
	f	[Ladk;	k	entitySections
	f	Ljava/util/Map;	l	structureStarts
	f	Ljava/util/Map;	m	structureReferences
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	n	postProcessingLists
	f	Lbqr;	o	blockTickScheduler
	f	Lbqr;	p	fluidTickScheduler
	f	Z	q	unsaved
	f	J	r	lastSaveTime
	f	Z	s	shouldSave
	f	J	t	inhabitedTime
	f	Ljava/util/function/Supplier;	u	levelTypeProvider
	f	Ljava/util/function/Consumer;	v	loadToWorldConsumer
	f	Lbph;	w	pos
	f	Z	x	lightOn
	m	(Lbqb;Lchr;)V	<init>	<init>
		p	1	world	world
		p	2	protoChunk	protoChunk
	m	(Lbqb;Lbph;Lcgz;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	biomes	biomes
	m	(Lbqb;Lbph;Lcgz;Lcht;Lbqr;Lbqr;J[Lchk;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	biomes	biomes
		p	4	upgradeData	upgradeData
		p	5	blockTickScheduler	blockTickScheduler
		p	6	fluidTickScheduler	fluidTickScheduler
		p	7	inhabitedTime	inhabitedTime
		p	9	sections	sections
		p	10	loadToWorldConsumer	loadToWorldConsumer
	m	()V	A	runPostProcessing
	m	()V	B	disableTickSchedulers
	m	(ILfu;)Z	a	method_18319
		p	1	pos	pos
	m	(Lzd;)V	a	enableTickSchedulers
		p	1	world	world
	m	(Laom;Ldeg;Ljava/util/List;Ljava/util/function/Predicate;)V	a	getEntities
		p	1	except	except
		p	2	box	box
		p	3	entityList	entityList
		p	4	predicate	predicate
	m	(Ljava/util/function/Supplier;)V	a	setLevelTypeProvider
		p	1	levelTypeProvider	levelTypeProvider
	m	(III)Lcxa;	a	getFluidState
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lfu;Lle;)Lcdl;	a	loadBlockEntity
		p	1	pos	pos
		p	2	tag	tag
	m	(Laom;I)V	a	remove
		p	1	entity	entity
		p	2	section	section
	m	(Lfu;Lchj$a;)Lcdl;	a	getBlockEntity
		p	1	pos	pos
		p	2	creationType	creationType
	m	(Lcgz;Lmg;Lle;I)V	a	loadFromPacket
		p	1	biomes	biomes
		p	2	buf	buf
		p	3	tag	tag
		p	4	verticalStripBitmask	verticalStripBitmask
	m	(Laoq;Ldeg;Ljava/util/List;Ljava/util/function/Predicate;)V	a	getEntities
		p	1	type	type
		p	2	box	box
		p	3	entityList	entityList
		p	4	predicate	predicate
	m	(Lcdl;)V	a	addBlockEntity
		p	1	blockEntity	blockEntity
	m	(Ljava/lang/Class;Ldeg;Ljava/util/List;Ljava/util/function/Predicate;)V	a	getEntities
		p	1	entityClass	entityClass
		p	2	box	box
		p	3	entityList	entityList
		p	4	predicate	predicate
	m	(Laom;)V	b	remove
		p	1	entity	entity
	m	(Lcio$a;)Lcio;	c	method_12231
		p	1	type	type
	m	(Laom;)Laom;	c	method_18089
		p	1	entity	entity
	m	(Z)V	c	setLoadedToWorld
		p	1	loaded	loaded
	m	(Lcml;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	method_12222
		p	0	structure	structure
	m	(Lcml;)Lit/unimi/dsi/fastutil/longs/LongSet;	d	method_12212
		p	0	structure	structure
	m	(Z)V	d	setUnsaved
		p	1	unsaved	unsaved
	m	()Lcwr;	e	getLightingProvider
	m	(Lfu;)Lcdl;	j	createBlockEntity
		p	1	pos	pos
	m	(Lfu;)Z	n	method_18320
		p	0	pos	pos
	m	()V	s	markDirty
	m	()Z	t	isEmpty
	m	()Lyo$b;	u	getLevelType
	m	()V	w	loadToWorld
	m	()Lbqb;	x	getWorld
	m	()Ljava/util/Map;	y	getBlockEntities
	m	()[Ladk;	z	getEntitySectionArray
c	chj$a	net/minecraft/world/chunk/WorldChunk$CreationType
c	chk	net/minecraft/world/chunk/ChunkSection
	f	Lcho;	a	palette
	f	I	b	yOffset
	f	S	c	nonEmptyBlockCount
	f	S	d	randomTickableBlockCount
	f	S	e	nonEmptyFluidCount
	f	Lchq;	f	container
	m	(I)V	<init>	<init>
		p	1	yOffset	yOffset
	m	(ISSS)V	<init>	<init>
		p	1	yOffset	yOffset
		p	2	nonEmptyBlockCount	nonEmptyBlockCount
		p	3	randomTickableBlockCount	randomTickableBlockCount
		p	4	nonEmptyFluidCount	nonEmptyFluidCount
	m	(Lmg;)V	a	fromPacket
	m	(Lchk;)Z	a	isEmpty
		p	0	section	section
	m	(III)Lcfj;	a	getBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()V	a	lock
	m	(IIILcfj;Z)Lcfj;	a	setBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	state	state
		p	5	lock	lock
	m	(IIILcfj;)Lcfj;	a	setBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	state	state
	m	()V	b	unlock
	m	(Lmg;)V	b	toPacket
	m	(III)Lcxa;	b	getFluidState
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()Z	c	isEmpty
	m	()Z	d	hasRandomTicks
	m	()Z	e	hasRandomBlockTicks
	m	()Z	f	hasRandomFluidTicks
	m	()I	g	getYOffset
	m	()V	h	calculateCounts
	m	()Lchq;	i	getContainer
	m	()I	j	getPacketSize
c	chl	net/minecraft/world/chunk/ChunkProvider
	m	(Lbqi;Lgo;)V	a	onLightUpdate
		p	1	type	type
		p	2	pos	pos
	m	(II)Lbpg;	c	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	()Lbpg;	m	getWorld
c	chm	net/minecraft/world/chunk/ArrayPalette
	f	Lge;	a	idList
	f	[Ljava/lang/Object;	b	array
	f	Lchp;	c	resizeListener
	f	Ljava/util/function/Function;	d	valueDeserializer
	f	I	e	indexBits
	f	I	f	size
	m	(Lge;ILchp;Ljava/util/function/Function;)V	<init>	<init>
		p	2	integer	integer
		p	3	resizeListener	resizeListener
		p	4	valueDeserializer	valueDeserializer
	m	()I	b	getSize
c	chn	net/minecraft/world/level/storage/AlphaChunkDataArray
	f	[B	a	data
	f	I	b	zOffset
	f	I	c	xOffset
	m	([BI)V	<init>	<init>
		p	1	data	data
		p	2	yCoordinateBits	yCoordinateBits
	m	(III)I	a	get
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	cho	net/minecraft/world/chunk/Palette
	m	(Lmg;)V	a	fromPacket
		p	1	buf	buf
	m	(Ljava/util/function/Predicate;)Z	a	accepts
	m	(I)Ljava/lang/Object;	a	getByIndex
		p	1	index	index
	m	(Ljava/lang/Object;)I	a	getIndex
		p	1	object	object
	m	()I	a	getPacketSize
	m	(Llk;)V	a	fromTag
		p	1	tag	tag
	m	(Lmg;)V	b	toPacket
		p	1	buf	buf
c	chp	net/minecraft/world/chunk/PaletteResizeListener
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1	newSize	newSize
		p	2	objectAdded	objectAdded
c	chq	net/minecraft/world/chunk/PalettedContainer
	f	Ladj;	a	data
	f	Lcho;	b	fallbackPalette
	f	Lchp;	c	noOpPaletteResizeHandler
	f	Lge;	d	idList
	f	Ljava/util/function/Function;	e	elementDeserializer
	f	Ljava/util/function/Function;	f	elementSerializer
	f	Ljava/lang/Object;	g	defaultValue
	f	Lcho;	h	palette
	f	I	i	paletteSize
	f	Ljava/util/concurrent/locks/ReentrantLock;	j	writeLock
	m	(Lcho;Lge;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	<init>	<init>
		p	1	fallbackPalette	fallbackPalette
		p	2	idList	idList
		p	3	elementDeserializer	elementDeserializer
		p	4	elementSerializer	elementSerializer
		p	5	defaultElement	defaultElement
	m	(Lmg;)V	a	fromPacket
		p	1	buf	buf
	m	()V	a	lock
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	setAndGetOldValue
		p	1	index	index
		p	2	value	value
	m	(Lchq$a;)V	a	count
		p	1	consumer	consumer
	m	(Llk;[J)V	a	read
		p	1	paletteTag	paletteTag
		p	2	data	data
	m	(III)Ljava/lang/Object;	a	get
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)Ljava/lang/Object;	a	get
		p	1	index	index
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	setSync
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	value	value
	m	(Lle;Ljava/lang/String;Ljava/lang/String;)V	a	write
	m	(Ljava/lang/Thread;)Ljava/lang/String;	a	method_12332
		p	0	thread	thread
	m	()V	b	unlock
	m	(III)I	b	toIndex
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(I)V	b	setPaletteSize
		p	1	size	size
	m	(ILjava/lang/Object;)V	b	set
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	value	value
	m	(Lmg;)V	b	toPacket
		p	1	buf	buf
	m	()I	c	getPacketSize
	m	(ILjava/lang/Object;)I	c	method_12333
		p	0	newSize	newSize
		p	1	added	added
c	chq$a	net/minecraft/world/chunk/PalettedContainer$CountConsumer
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1	object	object
		p	2	count	count
c	chr	net/minecraft/world/chunk/ProtoChunk
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbph;	b	pos
	f	Z	c	shouldSave
	f	Lcgz;	d	biomes
	f	Lcwr;	e	lightingProvider
	f	Ljava/util/Map;	f	heightmaps
	f	Lchc;	g	status
	f	Ljava/util/Map;	h	blockEntities
	f	Ljava/util/Map;	i	blockEntityTags
	f	[Lchk;	j	sections
	f	Ljava/util/List;	k	entities
	f	Ljava/util/List;	l	lightSources
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	m	postProcessingLists
	f	Ljava/util/Map;	n	structureStarts
	f	Ljava/util/Map;	o	structureReferences
	f	Lcht;	p	upgradeData
	f	Lchs;	q	blockTickScheduler
	f	Lchs;	r	fluidTickScheduler
	f	J	s	inhabitedTime
	f	Ljava/util/Map;	t	carvingMasks
	f	Z	u	lightOn
	m	(Lbph;Lcht;[Lchk;Lchs;Lchs;)V	<init>	<init>
		p	1	pos	pos
		p	2	upgradeData	upgradeData
		p	3	sections	sections
		p	4	blockTickScheduler	blockTickScheduler
		p	5	fluidTickScheduler	fluidTickScheduler
	m	(Lbph;Lcht;)V	<init>	<init>
		p	1	pos	pos
		p	2	upgradeData	upgradeData
	m	(Lbvr;)Z	a	method_12311
		p	0	block	block
	m	(SILbph;)Lfu;	a	joinBlockPos
		p	0	sectionRel	sectionRel
		p	1	sectionY	sectionY
		p	2	chunkPos	chunkPos
	m	(Lcwr;)V	a	setLightingProvider
		p	1	lightingProvider	lightingProvider
	m	(Lcgz;)V	a	setBiomes
		p	1	biomes	biomes
	m	(Lcin$a;Ljava/util/BitSet;)V	a	setCarvingMask
		p	1	carver	carver
		p	2	mask	mask
	m	(I)Lchk;	a	getSection
		p	1	y	y
	m	(Lchc;)V	a	setStatus
		p	1	status	status
	m	(Lcin$a;)Ljava/util/BitSet;	a	getCarvingMask
		p	1	carver	carver
	m	(Lcwz;)Z	a	method_12310
		p	0	fluid	fluid
	m	(Lle;)V	b	addEntity
		p	1	entityTag	entityTag
	m	(Lcin$a;)Ljava/util/BitSet;	b	getOrCreateCarvingMask
		p	1	carver	carver
	m	(SI)V	b	addLightSource
		p	1	chunkSliceRel	chunkSliceRel
		p	2	sectionY	sectionY
	m	(Lcio$a;)Lcio;	c	method_12299
		p	1	type	type
	m	(Lcml;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	method_12305
		p	0	structure	structure
	m	(Lcin$a;)Ljava/util/BitSet;	c	method_12297
		p	0	carver	carver
	m	(Lcml;)Lit/unimi/dsi/fastutil/longs/LongSet;	d	method_12298
		p	0	structure	structure
	m	()Lcwr;	e	getLightingProvider
	m	(Lfu;)V	j	addLightSource
		p	1	pos	pos
	m	(Lfu;)S	k	getPackedSectionRelative
		p	0	pos	pos
	m	()Lchs;	s	getBlockTickScheduler
	m	()Lchs;	t	getFluidTickScheduler
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	w	getLightSourcesBySection
	m	()Ljava/util/Map;	x	getBlockEntities
	m	()Ljava/util/List;	y	getEntities
	m	()Ljava/util/Map;	z	getBlockEntityTags
c	chs	net/minecraft/world/ChunkTickScheduler
	f	Ljava/util/function/Predicate;	a	shouldExclude
	f	Lbph;	b	pos
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	c	scheduledPositions
	m	(Ljava/util/function/Predicate;Lbph;Llk;)V	<init>	<init>
		p	1	shouldExclude	shouldExclude
		p	2	pos	pos
		p	3	tag	tag
	m	(Ljava/util/function/Predicate;Lbph;)V	<init>	<init>
		p	1	shouldExclude	shouldExclude
		p	2	pos	pos
	m	(Lbqr;Ljava/util/function/Function;)V	a	tick
		p	1	scheduler	scheduler
		p	2	dataMapper	dataMapper
	m	()Llk;	b	toNbt
c	cht	net/minecraft/world/chunk/UpgradeData
	f	Lcht;	a	NO_UPGRADE_DATA
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	[Lga;	c	EIGHT_WAYS
	f	Ljava/util/EnumSet;	d	sidesToUpgrade
	f	[[I	e	centerIndicesToUpgrade
	f	Ljava/util/Map;	f	BLOCK_TO_LOGIC
	f	Ljava/util/Set;	g	CALLBACK_LOGICS
	m	(Lle;)V	<init>	<init>
		p	1	tag	tag
	m	(Lchj;Lga;)V	a	upgradeSide
		p	0	chunk	chunk
		p	1	side	side
	m	(Lcfj;Lfz;Lbqc;Lfu;Lfu;)Lcfj;	a	applyAdjacentBlock
		p	0	oldState	oldState
		p	1	dir	dir
		p	2	world	world
		p	3	currentPos	currentPos
		p	4	otherPos	otherPos
	m	(Lchj;)V	a	upgrade
		p	1	chunk	chunk
	m	()Z	a	isDone
	m	()Lle;	b	toTag
	m	(Lchj;)V	b	upgradeCenter
		p	1	chunk	chunk
c	cht$a	net/minecraft/world/chunk/UpgradeData$Logic
	m	(Lbqc;)V	a	postUpdate
		p	1	world	world
	m	(Lcfj;Lfz;Lcfj;Lbqc;Lfu;Lfu;)Lcfj;	a	getUpdatedState
c	cht$b	net/minecraft/world/chunk/UpgradeData$BuiltinLogic
	f	[Lfz;	f	DIRECTIONS
	m	(Ljava/lang/String;I[Lbvr;)V	<init>	<init>
		p	3	blocks	blocks
c	cht$b$4	net/minecraft/world/chunk/UpgradeData$BuiltinLogic$4
	f	Ljava/lang/ThreadLocal;	g	distanceToPositions
c	chv	net/minecraft/world/ChunkSerializer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lle;Lchj;)V	a	writeEntities
		p	0	tag	tag
		p	1	chunk	chunk
	m	(Lbph;Ljava/util/Map;Ljava/util/Map;)Lle;	a	writeStructures
		p	0	pos	pos
		p	1	structureStarts	structureStarts
		p	2	structureReferences	structureReferences
	m	(Lcva;Lle;J)Ljava/util/Map;	a	readStructureStarts
	m	(Lle;)Lchc$a;	a	getChunkType
		p	0	tag	tag
	m	(Lzd;Lcva;Laxz;Lbph;Lle;)Lchr;	a	deserialize
		p	0	world	world
		p	1	structureManager	structureManager
		p	2	poiStorage	poiStorage
		p	3	pos	pos
		p	4	tag	tag
	m	(Lchj;Laom;)Laom;	a	method_18091
		p	1	entity	entity
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Llk;	a	toNbt
		p	0	lists	lists
	m	(Lzd;Lcgy;)Lle;	a	serialize
		p	0	world	world
		p	1	chunk	chunk
	m	(Lbph;Lle;)Ljava/util/Map;	a	readStructureReferences
		p	0	pos	pos
		p	1	tag	tag
	m	(Lbvr;)Z	a	method_12396
		p	0	block	block
	m	(ILchk;)Z	a	method_12376
		p	1	chunkSection	chunkSection
	m	(Lcwz;)Z	a	method_12391
		p	0	fluid	fluid
	m	(Lle;Lchj;)V	b	method_12388
		p	1	chunk	chunk
c	chw	net/minecraft/world/storage/VersionedChunkStorage
	f	Lchx;	a	worker
	f	Lcom/mojang/datafixers/DataFixer;	b	dataFixer
	f	Lctj;	c	featureUpdater
	m	(Lle;)I	a	getDataVersion
		p	0	tag	tag
	m	(Lug;Ljava/util/function/Supplier;Lle;)Lle;	a	updateChunkTag
		p	2	persistentStateManagerFactory	persistentStateManagerFactory
		p	3	tag	tag
	m	(Lbph;Lle;)V	a	setTagAt
	m	(Lbph;)Lle;	e	getNbt
	m	()V	i	completeAll
c	chx	net/minecraft/world/storage/StorageIoWorker
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	closed
	f	Lcib;	d	storage
	f	Ljava/util/Map;	e	results
	m	(Lbph;)Lle;	a	getNbt
		p	1	pos	pos
	m	(Lbph;Lchx$a;)V	a	write
		p	1	pos	pos
	m	(Lbph;Lle;)Ljava/util/concurrent/CompletableFuture;	a	setResult
		p	1	pos	pos
		p	2	nbt	nbt
	m	()Ljava/util/concurrent/CompletableFuture;	a	completeAll
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()V	b	writeResult
c	chx$a	net/minecraft/world/storage/StorageIoWorker$Result
	f	Lle;	a	nbt
	f	Ljava/util/concurrent/CompletableFuture;	b	future
c	chx$b	net/minecraft/world/storage/StorageIoWorker$Priority
c	chy	net/minecraft/world/level/storage/AlphaChunkIo
	m	(Lchy$a;Lle;Lbrh;)V	a	convertAlphaChunk
		p	0	alphaChunk	alphaChunk
		p	1	tag	tag
		p	2	biomeSource	biomeSource
	m	(Lle;)Lchy$a;	a	readAlphaChunk
		p	0	tag	tag
c	chy$a	net/minecraft/world/level/storage/AlphaChunkIo$AlphaChunk
	f	J	a	lastUpdate
	f	Z	b	terrainPopulated
	f	[B	c	heightMap
	f	Lchn;	d	blockLight
	f	Lchn;	e	skyLight
	f	Lchn;	f	data
	f	[B	g	blocks
	f	Llk;	h	entities
	f	Llk;	i	blockEntities
	f	Llk;	j	blockTicks
	f	I	k	x
	f	I	l	z
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
c	chz	net/minecraft/world/storage/SectorMap
	m	(I)I	a	allocate
	m	(II)V	a	allocate
	m	(II)V	b	free
c	ci	net/minecraft/advancement/criterion/AbstractCriterion
	f	Ljava/util/Map;	a	progressions
	m	(Lze;Ljava/util/function/Predicate;)V	a	test
		p	1	player	player
		p	2	tester	tester
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Laj;	b	conditionsFromJson
		p	1	obj	obj
		p	2	playerPredicate	playerPredicate
		p	3	predicateDeserializer	predicateDeserializer
	m	(Lcom/google/gson/JsonObject;Lav;)Laj;	b	conditionsFromJson
c	cia	net/minecraft/world/storage/RegionFile
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/nio/ByteBuffer;	b	ZERO
	f	Ljava/nio/channels/FileChannel;	c	channel
	f	Ljava/nio/file/Path;	d	directory
	f	Lcic;	e	outputChunkStreamVersion
	f	Ljava/nio/ByteBuffer;	f	header
	f	Ljava/nio/IntBuffer;	g	sectorData
	f	Ljava/nio/IntBuffer;	h	saveTimes
	f	Lchz;	i	sectors
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lcic;Z)V	<init>	<init>
		p	1	file	file
		p	2	directory	directory
		p	3	outputChunkStreamVersion	outputChunkStreamVersion
		p	4	dsync	dsync
	m	(Ljava/io/File;Ljava/io/File;Z)V	<init>	<init>
		p	1	file	file
		p	2	directory	directory
		p	3	dsync	dsync
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcia$b;	a	writeSafely
	m	(Lbph;)Ljava/io/DataInputStream;	a	getChunkInputStream
		p	1	pos	pos
	m	(II)I	a	packSectorData
		p	1	offset	offset
		p	2	size	size
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	getInputStream
		p	0	buffer	buffer
		p	1	length	length
	m	(I)I	a	getSize
		p	0	sectorData	sectorData
	m	(B)Z	a	hasChunkStreamVersionId
	m	(Lbph;Ljava/nio/ByteBuffer;)V	a	writeChunk
		p	1	pos	pos
	m	(Lbph;)Z	b	isChunkValid
		p	1	pos	pos
	m	(B)B	b	getChunkStreamVersionId
	m	(I)I	b	getOffset
		p	0	sectorData	sectorData
	m	()V	c	writeHeader
	m	(Lbph;)Ljava/io/DataOutputStream;	c	getChunkOutputStream
		p	1	pos	pos
	m	(I)I	c	getSectorCount
		p	0	byteCount	byteCount
	m	(Lbph;)Z	d	hasChunk
		p	1	pos	pos
	m	()V	d	fillLastSector
	m	(Lbph;)Ljava/nio/file/Path;	e	getExternalChunkPath
	m	(Lbph;)I	f	getSectorData
		p	1	pos	pos
	m	(Lbph;)I	g	getIndex
		p	0	pos	pos
c	cia$a	net/minecraft/world/storage/RegionFile$ChunkBuffer
	f	Lbph;	b	pos
c	cia$b	net/minecraft/world/storage/RegionFile$OutputAction
c	cib	net/minecraft/world/storage/RegionBasedStorage
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	cachedRegionFiles
	f	Ljava/io/File;	b	directory
	f	Z	c	dsync
	m	(Ljava/io/File;Z)V	<init>	<init>
		p	1	directory	directory
		p	2	dsync	dsync
	m	(Lbph;)Lle;	a	getTagAt
		p	1	pos	pos
	m	(Lbph;Lle;)V	a	write
		p	1	pos	pos
		p	2	tag	tag
	m	(Lbph;)Lcia;	b	getRegionFile
		p	1	pos	pos
c	cic	net/minecraft/world/storage/ChunkStreamVersion
	f	Lcic;	a	GZIP
	f	Lcic;	b	DEFLATE
	f	Lcic;	c	UNCOMPRESSED
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	VERSIONS
	f	I	e	id
	f	Lcic$a;	f	inputStreamWrapper
	f	Lcic$a;	g	outputStreamWrapper
	m	(ILcic$a;Lcic$a;)V	<init>	<init>
		p	1	id	id
		p	2	inputStreamWrapper	inputStreamWrapper
		p	3	outputStreamWrapper	outputStreamWrapper
	m	()I	a	getId
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
		p	1	outputStream	outputStream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
		p	1	inputStream	inputStream
	m	(I)Lcic;	a	get
		p	0	id	id
	m	(Lcic;)Lcic;	a	add
		p	0	version	version
	m	(I)Z	b	exists
		p	0	id	id
c	cic$a	net/minecraft/world/storage/ChunkStreamVersion$Wrapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	wrap	wrap
		p	1	object	object
c	cid	net/minecraft/world/storage/SerializingRegionBasedStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lchx;	b	worker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	loadedElements
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	d	unsavedElements
	f	Ljava/util/function/Function;	f	factory
	f	Lcom/mojang/datafixers/DataFixer;	g	dataFixer
	f	Laeo;	h	dataFixType
	m	(Ljava/io/File;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/DataFixer;Laeo;Z)V	<init>	<init>
		p	1	directory	directory
	m	(Lcom/mojang/serialization/Dynamic;)I	a	getDataVersion
	m	(Lbph;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	a	update
		p	1	pos	pos
		p	3	data	data
	m	(J)V	a	onUpdate
		p	1	pos	pos
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lbph;)V	b	loadDataAt
	m	(J)V	b	onLoad
		p	1	pos	pos
	m	(Lgo;)Z	b	isPosInvalid
		p	1	pos	pos
	m	(J)Ljava/util/Optional;	c	getIfLoaded
		p	1	pos	pos
	m	(Lbph;)Lle;	c	loadNbt
		p	1	pos	pos
	m	(Lbph;)V	d	save
	m	(J)Ljava/util/Optional;	d	get
		p	1	pos	pos
	m	(J)Ljava/lang/Object;	e	getOrCreate
		p	1	pos	pos
c	cif	net/minecraft/world/dimension/DimensionType
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lug;	c	OVERWORLD_REGISTRY_KEY
	f	Lug;	d	THE_NETHER_REGISTRY_KEY
	f	Lug;	e	THE_END_REGISTRY_KEY
	f	Lcif;	f	OVERWORLD
	f	Lcif;	g	THE_NETHER
	f	Lcif;	h	THE_END
	f	Lug;	i	OVERWORLD_CAVES_REGISTRY_KEY
	f	Lcif;	j	OVERWORLD_CAVES
	f	Ljava/util/OptionalLong;	l	fixedTime
	f	Z	m	hasSkyLight
	f	Z	n	hasCeiling
	f	Z	o	ultrawarm
	f	Z	p	natural
	f	Z	q	shrunk
	f	Z	r	hasEnderDragonFight
	f	Z	s	piglinSafe
	f	Z	t	bedWorks
	f	Z	u	respawnAnchorWorks
	f	Z	v	hasRaids
	f	I	w	logicalHeight
	f	Lbrj;	x	biomeAccessType
	f	Luh;	y	infiniburn
	f	F	z	ambientLight
	m	(Ljava/util/OptionalLong;ZZZZZZZZZILuh;F)V	<init>	<init>
		p	1	fixedTime	fixedTime
		p	2	hasSkylight	hasSkylight
		p	3	hasCeiling	hasCeiling
		p	4	ultrawarm	ultrawarm
		p	5	natural	natural
		p	6	shrunk	shrunk
		p	7	piglinSafe	piglinSafe
		p	8	bedWorks	bedWorks
		p	9	respawnAnchorWorks	respawnAnchorWorks
		p	10	hasRaids	hasRaids
		p	11	logicalHeight	logicalHeight
		p	12	infiniburn	infiniburn
		p	13	ambientLight	ambientLight
	m	(Ljava/util/OptionalLong;ZZZZZZZZZZILbrj;Luh;F)V	<init>	<init>
		p	1	fixedTime	fixedTime
		p	2	hasSkylight	hasSkylight
		p	3	hasCeiling	hasCeiling
		p	4	ultrawarm	ultrawarm
		p	5	natural	natural
		p	6	shrunk	shrunk
		p	7	hasEnderDragonFight	hasEnderDragonFight
		p	8	piglinSafe	piglinSafe
		p	9	bedWorks	bedWorks
		p	10	respawnAnchorWorks	respawnAnchorWorks
		p	11	hasRaids	hasRaids
		p	12	logicalHeight	logicalHeight
		p	13	biomeAccessType	biomeAccessType
		p	14	infiniburn	infiniburn
		p	15	ambientLight	ambientLight
	m	(Lug;Ljava/io/File;)Ljava/io/File;	a	getSaveDirectory
		p	0	worldRef	worldRef
		p	1	root	root
	m	(Lgm$a;)Lgm$a;	a	addRegistryDefaults
		p	0	registryTracker	registryTracker
	m	(J)Lgh;	a	method_28517
		p	0	seed	seed
	m	()Lcif;	a	getOverworldDimensionType
	m	()Lcif;	b	getOverworldCavesDimensionType
	m	()Ljava/lang/String;	c	getSuffix
	m	(J)Lcha;	d	createEndGenerator
		p	0	seed	seed
	m	()Z	d	hasSkyLight
	m	()Z	e	hasCeiling
	m	(J)Lcha;	e	createNetherGenerator
		p	0	seed	seed
	m	()Z	f	isUltrawarm
	m	()Z	g	isNatural
	m	()Z	h	isShrunk
	m	()Z	i	isPiglinSafe
	m	()Z	j	isBedWorking
	m	()Z	k	isRespawnAnchorWorking
	m	()Z	l	hasRaids
	m	()I	m	getLogicalHeight
	m	()Z	n	hasEnderDragonFight
	m	()Lbrj;	o	getBiomeAccessType
	m	()Z	p	hasFixedTime
	m	()Ladf;	q	getInfiniburnBlocks
c	cig	net/minecraft/world/dimension/DimensionOptions
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lug;	b	OVERWORLD
	f	Lug;	c	NETHER
	f	Lug;	d	END
	f	Ljava/util/LinkedHashSet;	e	BASE_DIMENSIONS
	f	Ljava/util/function/Supplier;	f	dimensionTypeSupplier
	f	Lcha;	g	chunkGenerator
	m	(Ljava/util/function/Supplier;Lcha;)V	<init>	<init>
		p	1	typeSupplier	typeSupplier
	m	(JLgh;)Z	a	method_29567
		p	0	seed	seed
	m	()Ljava/util/function/Supplier;	a	getDimensionTypeSupplier
	m	()Lcif;	b	getDimensionType
	m	()Lcha;	c	getChunkGenerator
c	cih	net/minecraft/entity/boss/dragon/EnderDragonSpawnState
	m	(Lzd;Lcii;Ljava/util/List;ILfu;)V	a	run
		p	1	world	world
		p	2	fight	fight
		p	3	crystals	crystals
c	cii	net/minecraft/entity/boss/dragon/EnderDragonFight
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	VALID_ENTITY
	f	Lza;	c	bossBar
	f	Lzd;	d	world
	f	Ljava/util/List;	e	gateways
	f	Lcfo;	f	endPortalPattern
	f	I	g	dragonSeenTimer
	f	I	h	endCrystalsAlive
	f	I	i	crystalCountTimer
	f	I	j	playerUpdateTimer
	f	Z	k	dragonKilled
	f	Z	l	previouslyKilled
	f	Ljava/util/UUID;	m	dragonUuid
	f	Z	n	doLegacyCheck
	f	Lfu;	o	exitPortalLocation
	f	Lcih;	p	dragonSpawnState
	f	I	q	spawnStateTimer
	f	Ljava/util/List;	r	crystals
	m	(Lzd;JLle;)V	<init>	<init>
		p	1	world	world
	m	(Lbab;Lanw;)V	a	crystalDestroyed
		p	1	enderCrystal	enderCrystal
		p	2	source	source
	m	(Lfu;)V	a	generateEndGateway
	m	(Lbac;)V	a	dragonKilled
		p	1	dragon	dragon
	m	(Z)V	a	generateEndPortal
		p	1	previouslyKilled	previouslyKilled
	m	()Lle;	a	toTag
	m	(Lcih;)V	a	setSpawnState
	m	(Ljava/util/List;)V	a	respawnDragon
		p	1	crystals	crystals
	m	(Lbac;)V	b	updateFight
		p	1	dragon	dragon
	m	()V	b	tick
	m	()I	c	getAliveEndCrystals
	m	()Z	d	hasPreviouslyKilled
	m	()V	e	respawnDragon
	m	()V	f	resetEndCrystals
	m	()V	g	convertFromLegacy
	m	()V	h	checkDragonSeen
	m	()Z	i	worldContainsEndPortal
	m	()Lcfo$b;	j	findEndPortal
	m	()Z	k	loadChunks
	m	()V	l	updatePlayers
	m	()V	m	countAliveCrystals
	m	()V	n	generateNewEndGateway
	m	()Lbac;	o	createDragon
c	cil	net/minecraft/world/gen/chunk/DebugChunkGenerator
	f	Lcil;	d	INSTANCE
	f	Lcfj;	f	AIR
	f	Lcfj;	g	BARRIER
	f	Ljava/util/List;	h	BLOCK_STATES
	f	I	i	X_SIDE_LENGTH
	f	I	j	Z_SIDE_LENGTH
	m	(II)Lcfj;	b	getBlockState
		p	0	x	x
		p	1	z	z
c	cim	net/minecraft/world/gen/chunk/FlatChunkGenerator
	f	Lcra;	e	generatorConfig
	m	(Lcra;)V	<init>	<init>
		p	1	config	config
	m	(Lcfj;)Lcfj;	a	method_28002
		p	0	state	state
c	cin	net/minecraft/world/gen/GenerationStep
c	cin$a	net/minecraft/world/gen/GenerationStep$Carver
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	b	getName
c	cin$b	net/minecraft/world/gen/GenerationStep$Feature
	f	Lcom/mojang/serialization/Codec;	k	CODEC
	f	Ljava/util/Map;	l	BY_NAME
	f	Ljava/lang/String;	m	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	b	getName
c	cio	net/minecraft/world/Heightmap
	f	Ljava/util/function/Predicate;	a	ALWAYS_TRUE
	f	Ljava/util/function/Predicate;	b	SUFFOCATES
	f	Ladj;	c	storage
	f	Ljava/util/function/Predicate;	d	blockPredicate
	f	Lcgy;	e	chunk
	m	(Lcgy;Lcio$a;)V	<init>	<init>
		p	2	type	type
	m	(III)V	a	set
		p	1	x	x
		p	2	z	z
		p	3	height	height
	m	(II)I	a	get
		p	1	x	x
		p	2	z	z
	m	(Lcgy;Ljava/util/Set;)V	a	populateHeightmaps
		p	1	types	types
	m	(I)I	a	get
		p	1	index	index
	m	()[J	a	asLongArray
	m	(IIILcfj;)Z	a	trackUpdate
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	state	state
	m	([J)V	a	setTo
		p	1	heightmap	heightmap
	m	(II)I	c	toIndex
		p	0	x	x
		p	1	z	z
c	cio$a	net/minecraft/world/Heightmap$Type
	f	Ljava/lang/String;	h	name
	f	Lcio$b;	i	purpose
	f	Ljava/util/function/Predicate;	j	blockPredicate
	f	Ljava/util/Map;	k	BY_NAME
	m	(Ljava/lang/String;ILjava/lang/String;Lcio$b;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3	name	name
		p	4	purpose	purpose
		p	5	blockPredicate	blockPredicate
	m	(Ljava/lang/String;)Lcio$a;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	b	getName
	m	()Z	c	shouldSendToClient
	m	()Z	d	isStoredServerSide
	m	()Ljava/util/function/Predicate;	e	getBlockPredicate
c	cio$b	net/minecraft/world/Heightmap$Purpose
c	cip	net/minecraft/world/gen/chunk/SurfaceChunkGenerator
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lciy;	e	random
	f	Lcfj;	f	defaultBlock
	f	Lcfj;	g	defaultFluid
	f	Lcfj;	k	AIR
	f	I	l	verticalNoiseResolution
	f	I	m	horizontalNoiseResolution
	f	I	n	noiseSizeX
	f	I	o	noiseSizeY
	f	I	p	noiseSizeZ
	f	Lcwe;	q	lowerInterpolatedNoise
	f	Lcwe;	r	upperInterpolatedNoise
	f	Lcwe;	s	interpolationNoise
	f	Lcwh;	t	surfaceDepthNoise
	m	(DI)Lcfj;	a	getBlockState
		p	1	density	density
		p	3	y	y
	m	(Lcgy;Ljava/util/Random;)V	a	buildBedrock
		p	1	chunk	chunk
		p	2	random	random
	m	([DII)V	a	sampleNoiseColumn
		p	1	buffer	buffer
		p	2	x	x
		p	3	z	z
	m	(IIIDDDD)D	a	sampleNoise
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	horizontalScale	horizontalScale
		p	6	verticalScale	verticalScale
		p	8	horizontalStretch	horizontalStretch
		p	10	verticalStretch	verticalStretch
	m	(Lbph;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Lctz;)V	a	method_26983
		p	5	start	start
	m	(II[Lcfj;Ljava/util/function/Predicate;)I	a	sampleHeightmap
		p	1	x	x
		p	2	z	z
		p	3	states	states
		p	4	predicate	predicate
	m	([F)V	b	method_16573
		p	0	array	array
	m	(II)[D	b	sampleNoiseColumn
		p	1	x	x
		p	2	z	z
c	ciq	net/minecraft/world/gen/chunk/ChunkGeneratorType
	f	Lciw;	c	config
	f	Lcfj;	e	defaultBlock
	f	Lcfj;	f	defaultFluid
	f	I	g	bedrockCeilingY
	f	I	h	bedrockFloorY
	m	(Lciw;Lcis;Lcfj;Lcfj;IIIZLjava/util/Optional;)V	<init>	<init>
		p	1	config	config
		p	3	defaultBlock	defaultBlock
		p	4	defaultFluid	defaultFluid
	m	(Lciw;Lcis;Lcfj;Lcfj;IIIZ)V	<init>	<init>
		p	1	config	config
		p	3	defaultBlock	defaultBlock
		p	4	defaultFluid	defaultFluid
	m	()Lciw;	a	getConfig
	m	()Lcfj;	c	getDefaultBlock
	m	()Lcfj;	d	getDefaultFluid
	m	()I	e	getBedrockCeilingY
		c	Returns the Y level of the bedrock ceiling.\n\n<p>If a number less than 1 is returned, the ceiling will not be generated.
	m	()I	f	getBedrockFloorY
		c	Returns the Y level of the bedrock floor.\n\n<p>If a number greater than 255 is returned, the floor will not be generated.
c	ciq$a	net/minecraft/world/gen/chunk/ChunkGeneratorType$Preset
	f	Ljava/util/Map;	h	BY_ID
	f	Lmr;	i	text
	f	Luh;	j	id
	f	Lciq;	k	chunkGeneratorType
	m	(Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1	id	id
		p	2	generatorTypeGetter	generatorTypeGetter
	m	(Lciw;Lcfj;Lcfj;Lciq$a;ZZ)Lciq;	a	createIslandsType
		p	0	config	config
		p	1	defaultBlock	defaultBlock
		p	2	defaultFluid	defaultFluid
	m	(Lciw;ZLciq$a;)Lciq;	a	createOverworldType
	m	(Lciw;Lcfj;Lcfj;Lciq$a;)Lciq;	a	createCavesType
		p	0	config	config
		p	1	defaultBlock	defaultBlock
		p	2	defaultFluid	defaultFluid
	m	()Lciq;	b	getChunkGeneratorType
c	cir	net/minecraft/world/gen/chunk/NoiseSamplingConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	c	xzScale
	f	D	d	yScale
	f	D	e	xzFactor
	f	D	f	yFactor
	m	(DDDD)V	<init>	<init>
		p	1	xzScale	xzScale
		p	3	yScale	yScale
		p	5	xzFactor	xzFactor
		p	7	yFactor	yFactor
	m	()D	a	getXZScale
	m	()D	b	getYScale
	m	()D	c	getXZFactor
	m	()D	d	getYFactor
c	cis	net/minecraft/world/gen/chunk/NoiseConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Lcir;	c	sampling
	f	Lcit;	d	topSlide
	f	Lcit;	e	bottomSlide
	f	I	f	horizontalSize
	f	I	g	verticalSize
	f	D	h	densityFactor
	f	D	i	densityOffset
	f	Z	j	simplexSurfaceNoise
	f	Z	k	randomDensityOffset
	f	Z	l	islandNoiseOverride
	f	Z	m	amplified
	m	(ILcir;Lcit;Lcit;IIDDZZZZ)V	<init>	<init>
		p	1	height	height
		p	2	sampling	sampling
		p	3	topSlide	topSlide
		p	4	bottomSlide	bottomSlide
		p	5	sizeHorizontal	sizeHorizontal
		p	6	sizeVertical	sizeVertical
		p	7	densityFactor	densityFactor
		p	9	densityOffset	densityOffset
		p	11	simplexSurfaceNoise	simplexSurfaceNoise
		p	12	randomDensityOffset	randomDensityOffset
		p	13	islandNoiseOverride	islandNoiseOverride
		p	14	amplified	amplified
	m	()I	a	getHeight
	m	()Lcir;	b	getSampling
	m	()Lcit;	c	getTopSlide
	m	()Lcit;	d	getBottomSlide
	m	()I	e	getSizeHorizontal
	m	()I	f	getSizeVertical
	m	()D	g	getDensityFactor
	m	()D	h	getDensityOffset
	m	()Z	i	hasSimplexSurfaceNoise
	m	()Z	j	hasRandomDensityOffset
	m	()Z	k	hasIslandNoiseOverride
	m	()Z	l	isAmplified
c	cit	net/minecraft/world/gen/chunk/SlideConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	target
	f	I	c	size
	f	I	d	offset
	m	(III)V	<init>	<init>
		p	1	target	target
		p	2	size	size
		p	3	offset	offset
	m	()I	a	getTarget
	m	()I	b	getSize
	m	()I	c	getOffset
c	ciu	net/minecraft/world/gen/PillagerSpawner
	f	I	a	ticksUntilNextSpawn
	m	(Lbqb;Lfu;Ljava/util/Random;Z)Z	a	spawnOneEntity
c	civ	net/minecraft/world/gen/PhantomSpawner
	f	I	a	ticksUntilNextSpawn
c	ciw	net/minecraft/world/gen/chunk/StructuresConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableMap;	b	DEFAULT_STRUCTURES
	f	Lcos;	c	DEFAULT_STRONGHOLD
	f	Ljava/util/Map;	d	structures
	f	Lcos;	e	stronghold
	m	(Ljava/util/Optional;Ljava/util/Map;)V	<init>	<init>
		p	1	stronghold	stronghold
		p	2	structures	structures
	m	()Ljava/util/Map;	a	getStructures
	m	()Lcos;	b	getStronghold
c	cix	net/minecraft/world/gen/GeneratorOptions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcix;	b	DEMO_CONFIG
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	I	d	DEMO_SEED
	f	J	e	seed
	f	Z	f	generateStructures
	f	Z	g	bonusChest
	f	Lgh;	h	options
	f	Ljava/util/Optional;	i	legacyCustomOptions
	m	(JZZLgh;)V	<init>	<init>
		p	1	seed	seed
		p	3	generateStructures	generateStructures
		p	4	bonusChest	bonusChest
	m	(JZZLgh;Ljava/util/Optional;)V	<init>	<init>
		p	1	seed	seed
		p	3	generateStructures	generateStructures
		p	4	bonusChest	bonusChest
		p	6	legacyCustomOptions	legacyCustomOptions
	m	()Lcix;	a	getDefaultOptions
	m	(J)Lcip;	a	createOverworldGenerator
		p	0	seed	seed
	m	(Ljava/util/Properties;)Lcix;	a	fromProperties
	m	(ZLjava/util/OptionalLong;)Lcix;	a	withHardcore
		p	1	hardcore	hardcore
		p	2	seed	seed
	m	()J	b	getSeed
	m	()Z	c	shouldGenerateStructures
	m	()Z	d	hasBonusChest
	m	()Lgh;	e	getDimensionMap
	m	()Lcha;	f	getChunkGenerator
	m	()Lcom/google/common/collect/ImmutableSet;	g	getWorlds
	m	()Z	h	isDebugWorld
	m	()Z	i	isFlatWorld
	m	()Z	j	isLegacyCustomizedType
	m	()Lcix;	k	withBonusChest
	m	()Lcix;	l	toggleGenerateStructures
	m	()Lcix;	m	toggleBonusChest
c	ciy	net/minecraft/world/gen/ChunkRandom
	f	I	a	sampleCount
	m	(J)V	<init>	<init>
		p	1	seed	seed
	m	(JII)J	a	setPopulationSeed
		c	Seeds the randomizer to create population features such as decorators and animals.\n\n<p>This method takes in the world seed and the negative-most block coordinates of the\nchunk. The coordinate pair provided is equivalent to (chunkX * 16, chunkZ * 16). The\nthree values are mixed together through some layers of hashing to produce the\npopulation seed.</p>\n\n<p>This function has been proved to be reversible through some exploitation of the underlying\nnextLong() weaknesses. It is also important to remember that since setSeed()\ntruncates the 16 upper bits of world seed, only the 48 lowest bits affect the population\nseed output.</p>
		p	1	worldSeed	worldSeed
		p	3	blockX	blockX
		p	4	blockZ	blockZ
	m	(II)J	a	setTerrainSeed
		c	Seeds the randomizer to generate the surface terrain blocks (such as grass, sand, etc.)\nand the bedrock patterns.\n\n<p>Note that the terrain seed does not depend on the world seed and only gets affected by\nchunk coordinates.</p>
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(I)V	a	consume
		c	Skips the provided number of calls to the randomizer.\n\n<p>The skips give the effect of "scrambling" the randomizer but the output is still\nlinearly dependent. Note that since multiple calls to a linear congruential generator is\nequivalent to another linear congruence, this method could be optimized to combine\nthe calls into one.</p>
		p	1	count	count
	m	(JIII)J	a	setRegionSeed
		c	Seeds the randomizer to determine the start position of structure features such as\ntemples, monuments and buried treasures within a region.\n\n<p>The region coordinates pair corresponds to the coordinates of the region the seeded\nchunk lies in. For example, a swamp hut region is 32 by 32 chunks meaning that all\nchunks that lie within that region get seeded the same way.</p>\n\n<p>Similarly, the upper 16 bits of world seed also do not affect the region seed because\nthey get truncated in the setSeed() call.</p>
		p	1	worldSeed	worldSeed
		p	3	regionX	regionX
		p	4	regionZ	regionZ
		p	5	salt	salt
	m	(IIJJ)Ljava/util/Random;	a	getSlimeRandom
		p	0	chunkX	chunkX
		p	1	chunkZ	chunkZ
		p	2	worldSeed	worldSeed
		p	4	scrambler	scrambler
	m	(JII)J	b	setDecoratorSeed
		c	Seeds the randomizer to generate a given feature.\n\nThe salt, in the form of {@code index + 10000 * step} assures that each feature is seeded\ndifferently, making the decoration feel more random. Even though it does a good job\nat doing so, many entropy issues arise from the salt being so small and result in\nweird alignments between features that have an index close apart.
		p	1	populationSeed	populationSeed
			c	The population seed computed in setPopulationSeed().
		p	3	index	index
			c	The index of the feature in the feature list.
		p	4	step	step
			c	The generation step's ordinal for this feature.
	m	(JII)J	c	setCarverSeed
		c	Seeds the randomizer to generate larger features such as caves, ravines, mineshafts\nand strongholds. It is also used to initiate structure start behavior such as rotation.\n\n<p>Similar to the population seed, only the 48 lowest bits of the world seed affect the\noutput since it the upper 16 bits are truncated in the setSeed() call.</p>
		p	1	worldSeed	worldSeed
		p	3	chunkX	chunkX
		p	4	chunkZ	chunkZ
	m	(I)I	next	next
		p	1	bound	bound
c	ciz	net/minecraft/world/gen/carver/RavineCarver
	f	[F	m	heightToHorizontalStretchFactor
	m	(Lcgy;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V	a	carveRavine
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	width	width
		p	15	yaw	yaw
		p	16	pitch	pitch
		p	17	branchStartIndex	branchStartIndex
		p	18	branchCount	branchCount
		p	19	yawPitchRatio	yawPitchRatio
		p	21	carvingMask	carvingMask
	m	(Lcgy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcod;)Z	a	carve
	m	(Ljava/util/Random;IILcod;)Z	a	shouldCarve
c	cj	net/minecraft/advancement/criterion/SlideDownBlockCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbvr;	a	getBlock
		p	0	root	root
	m	(Lbvr;Ljava/lang/String;)V	a	method_23905
		p	1	key	key
	m	(Lze;Lcfj;)V	a	test
		p	1	player	player
		p	2	state	state
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcj$a;	a	conditionsFromJson
	m	(Lcfj;Lcj$a;)Z	a	method_23906
		p	1	conditions	conditions
c	cj$a	net/minecraft/advancement/criterion/SlideDownBlockCriterion$Conditions
	f	Lbvr;	a	block
	f	Lck;	b	state
	m	(Lbe$b;Lbvr;Lck;)V	<init>	<init>
		p	1	player	player
		p	2	block	block
		p	3	state	state
	m	(Lbvr;)Lcj$a;	a	create
		p	0	block	block
	m	(Lcfj;)Z	a	test
		p	1	state	state
c	cja	net/minecraft/world/gen/carver/CarverConfig
	f	Lcje;	a	DEFAULT
c	cjb	net/minecraft/world/gen/carver/CaveCarver
	m	(Lcgy;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V	a	carveTunnels
		p	1	chunk	chunk
		p	2	postToBiome	postToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	width	width
		p	15	yaw	yaw
		p	16	pitch	pitch
		p	17	branchStartIndex	branchStartIndex
		p	18	branchCount	branchCount
		p	19	yawPitchRatio	yawPitchRatio
		p	21	carvingMask	carvingMask
	m	(Lcgy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcod;)Z	a	carve
	m	()I	a	getMaxCaveCount
	m	(Lcgy;Ljava/util/function/Function;JIIIDDDFDLjava/util/BitSet;)V	a	carveCave
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	yaw	yaw
		p	15	yawPitchRatio	yawPitchRatio
		p	17	carvingMask	carvingMask
	m	(Ljava/util/Random;IILcod;)Z	a	shouldCarve
	m	(Ljava/util/Random;)F	a	getTunnelSystemWidth
	m	(Ljava/util/Random;)I	b	getCaveY
		p	1	random	random
	m	()D	b	getTunnelSystemHeightWidthRatio
c	cjc	net/minecraft/world/gen/carver/ConfiguredCarver
	f	Lcjh;	b	carver
	f	Lcja;	c	config
	m	(Lcjh;Lcja;)V	<init>	<init>
		p	1	carver	carver
		p	2	config	config
	m	(Ljava/util/Random;II)Z	a	shouldCarve
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
	m	(Lcgy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;)Z	a	carve
c	cjd	net/minecraft/world/gen/carver/NetherCaveCarver
c	cje	net/minecraft/world/gen/carver/DefaultCarverConfig
c	cjf	net/minecraft/world/gen/carver/UnderwaterRavineCarver
c	cjg	net/minecraft/world/gen/carver/UnderwaterCaveCarver
	m	(Lcjh;Lcgy;Ljava/util/BitSet;Ljava/util/Random;Lfu$a;IIIIIIII)Z	a	carveAtPoint
		p	0	carver	carver
		p	1	chunk	chunk
		p	2	mask	mask
		p	3	random	random
		p	4	pos	pos
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	9	z	z
		p	10	relativeX	relativeX
		p	11	y	y
		p	12	relativeZ	relativeZ
c	cjh	net/minecraft/world/gen/carver/Carver
	f	Lcfj;	f	AIR
	f	Lcfj;	g	CAVE_AIR
	f	Lcxa;	h	WATER
	f	Lcxa;	i	LAVA
	f	Ljava/util/Set;	j	alwaysCarvableBlocks
	f	Ljava/util/Set;	k	carvableFluids
	f	I	l	heightLimit
	f	Lcom/mojang/serialization/Codec;	m	codec
	m	(Lcom/mojang/serialization/Codec;I)V	<init>	<init>
		p	1	configCodec	configCodec
		p	2	heightLimit	heightLimit
	m	(IIDDIIF)Z	a	canCarveBranch
		p	1	mainChunkX	mainChunkX
		p	2	mainChunkZ	mainChunkZ
		p	3	x	x
		p	5	z	z
		p	7	branch	branch
		p	8	branchCount	branchCount
		p	9	baseWidth	baseWidth
	m	(IIIIII)Z	a	isOnBoundary
		p	1	minX	minX
		p	2	maxX	maxX
		p	3	minZ	minZ
		p	4	maxZ	maxZ
		p	5	x	x
		p	6	z	z
	m	(Ljava/lang/String;Lcjh;)Lcjh;	a	register
	m	(Lcfj;)Z	a	canAlwaysCarveBlock
		p	1	state	state
	m	(Lcgy;Ljava/util/function/Function;JIIIDDDDDLjava/util/BitSet;)Z	a	carveRegion
		p	2	posToBiome	posToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	chunkX	chunkX
		p	7	chunkZ	chunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	yaw	yaw
		p	16	pitch	pitch
		p	18	carvingMask	carvingMask
	m	(Lcgy;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lfu$a;Lfu$a;Lfu$a;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveAtPoint
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	3	carvingMask	carvingMask
		p	8	seaLevel	seaLevel
		p	9	mainChunkX	mainChunkX
		p	10	mainChunkZ	mainChunkZ
		p	11	x	x
		p	12	z	z
		p	13	relativeX	relativeX
		p	14	y	y
		p	15	relativeZ	relativeZ
	m	(Ljava/util/Random;IILcja;)Z	a	shouldCarve
		p	1	random	random
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
		p	4	config	config
	m	(Lcgy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcja;)Z	a	carve
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	4	seaLevel	seaLevel
		p	5	chunkX	chunkX
		p	6	chunkZ	chunkZ
		p	7	mainChunkX	mainChunkX
		p	8	mainChunkZ	mainChunkZ
		p	9	carvingMask	carvingMask
	m	(Lcgy;IIIIIIII)Z	a	isRegionUncarvable
		p	2	mainChunkX	mainChunkX
		p	3	mainChunkZ	mainChunkZ
		p	4	relMinX	relMinX
		p	5	relMaxX	relMaxX
		p	6	minY	minY
		p	7	maxY	maxY
		p	8	relMinZ	relMinZ
		p	9	relMaxZ	relMaxZ
	m	(Lcfj;Lcfj;)Z	a	canCarveBlock
		p	1	state	state
		p	2	stateAbove	stateAbove
	m	(DDDI)Z	a	isPositionExcluded
		p	1	scaledRelativeX	scaledRelativeX
		p	3	scaledRelativeY	scaledRelativeY
		p	5	scaledRelativeZ	scaledRelativeZ
		p	7	y	y
	m	()Lcom/mojang/serialization/Codec;	c	getCodec
	m	()I	d	getBranchFactor
c	cjj	net/minecraft/world/gen/feature/FlowerFeature
	m	(Lbqc;Lfu;Lcnr;)Z	a	isPosValid
		p	1	world	world
		p	2	pos	pos
		p	3	config	config
	m	(Lcnr;)I	a	getFlowerAmount
		p	1	config	config
	m	(Ljava/util/Random;Lfu;Lcnr;)Lfu;	a	getPos
		p	2	pos	pos
		p	3	config	config
	m	(Ljava/util/Random;Lfu;Lcnr;)Lcfj;	b	getFlowerState
		p	2	pos	pos
		p	3	config	config
c	cjk	net/minecraft/world/gen/feature/HugeMushroomFeature
	m	(Lbqc;Ljava/util/Random;Lfu;ILfu$a;Lcnt;)V	a	generateCap
		p	1	world	world
		p	3	start	start
		p	4	y	y
		p	5	mutable	mutable
		p	6	config	config
	m	(Lbqc;Lfu;ILfu$a;Lcnt;)Z	a	canGenerate
		p	1	world	world
		p	2	pos	pos
		p	3	height	height
		p	5	config	config
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnt;)Z	a	generate
	m	(Ljava/util/Random;)I	a	getHeight
	m	(IIII)I	a	getCapSize
		p	3	capSize	capSize
		p	4	y	y
	m	(Lbqc;Ljava/util/Random;Lfu;Lcnt;ILfu$a;)V	a	generateStem
		p	1	world	world
		p	3	pos	pos
		p	4	config	config
		p	5	height	height
c	cjl	net/minecraft/world/gen/feature/BambooFeature
	f	Lcfj;	a	BAMBOO
	f	Lcfj;	ac	BAMBOO_TOP_1
	f	Lcfj;	ad	BAMBOO_TOP_2
	f	Lcfj;	ae	BAMBOO_TOP_3
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcod;)Z	a	generate
c	cjm	net/minecraft/world/gen/feature/BasaltColumnsFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnj;)Z	a	generate
c	cjn	net/minecraft/world/gen/feature/BasaltPillarFeature
	m	(Lbqc;Ljava/util/Random;Lfu;)V	a	tryPlaceBasalt
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
	m	(Lbqc;Ljava/util/Random;Lfu;)Z	b	stopOrPlaceBasalt
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
c	cjo	net/minecraft/structure/BastionBridgeData
	m	()V	a	init
c	cjp	net/minecraft/world/gen/feature/BastionRemnantFeature
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcnx;)Z	a	shouldStartAt
c	cjp$a	net/minecraft/world/gen/feature/BastionRemnantFeature$Start
	m	(Lcha;Lcva;IILbre;Lcnx;)V	a	init
c	cjq	net/minecraft/structure/HoglinStableData
	m	()V	a	init
c	cjr	net/minecraft/structure/BastionUnitsData
	m	()V	a	init
c	cjs	net/minecraft/structure/BastionRemnantGenerator
	f	Lcom/google/common/collect/ImmutableMap;	a	START_POOLS_TO_SIZES
	m	(Lcha;Lcva;Lfu;Ljava/util/List;Lciy;Lcnx;)V	a	addPieces
		p	0	chunkGenerator	chunkGenerator
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	pieces	pieces
		p	4	random	random
		p	5	config	config
	m	()V	a	init
c	cjs$a	net/minecraft/structure/BastionRemnantGenerator$Piece
	m	(Lcva;Lcqd;Lfu;ILcap;Lctd;)V	<init>	<init>
		p	1	structureManager	structureManager
		p	2	structurePoolElement	structurePoolElement
		p	3	pos	pos
		p	4	groundLevelDelta	groundLevelDelta
		p	5	rotation	rotation
		p	6	boundingBox	boundingBox
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	structureManager	structureManager
		p	2	tag	tag
c	cjt	net/minecraft/structure/BastionData
	f	Lcuu;	a	PROCESSOR_RULE
	m	()V	a	init
c	cju	net/minecraft/structure/BastionTreasureData
	m	()V	a	init
c	cjv	net/minecraft/world/gen/feature/ForestRockFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcne;)Z	a	generate
c	cjw	net/minecraft/world/gen/feature/AbstractPileFeature
	m	(Lbqc;Lfu;Ljava/util/Random;)Z	a	canPlacePileBlock
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;Ljava/util/Random;Lcnf;)V	a	addPileBlock
		p	1	world	world
		p	2	pos	pos
		p	4	config	config
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnf;)Z	a	generate
c	cjx	net/minecraft/world/gen/feature/BlueIceFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cjy	net/minecraft/world/gen/feature/BonusChestFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cjz	net/minecraft/world/gen/feature/BuriedTreasureFeature
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcnh;)Z	a	shouldStartAt
c	cjz$a	net/minecraft/world/gen/feature/BuriedTreasureFeature$Start
	m	(Lcha;Lcva;IILbre;Lcnh;)V	a	init
c	ck	net/minecraft/predicate/StatePredicate
	f	Lck;	a	ANY
	f	Ljava/util/List;	b	conditions
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	testers	testers
	m	(Lcfk;Ljava/util/function/Consumer;)V	a	check
		p	1	factory	factory
		p	2	reporter	reporter
	m	(Lcxa;)Z	a	test
		p	1	state	state
	m	(Lcfk;Lcfl;)Z	a	test
		p	1	stateManager	stateManager
		p	2	container	container
	m	(Ljava/lang/String;Lcom/google/gson/JsonElement;)Lck$c;	a	createPredicate
		p	0	key	key
		p	1	json	json
	m	(Lcfj;)Z	a	test
		p	1	state	state
	m	(Lcom/google/gson/JsonElement;)Lck;	a	fromJson
		p	0	json	json
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	b	asNullableString
		p	0	json	json
c	ck$a	net/minecraft/predicate/StatePredicate$Builder
	f	Ljava/util/List;	a	conditions
	m	()Lck$a;	a	create
	m	(Lcgl;Ljava/lang/String;)Lck$a;	a	exactMatch
		p	1	property	property
		p	2	valueName	valueName
	m	(Lcgl;Ljava/lang/Comparable;)Lck$a;	a	exactMatch
		p	1	property	property
		p	2	value	value
	m	(Lcgl;Z)Lck$a;	a	exactMatch
		p	1	property	property
		p	2	value	value
	m	(Lcgl;I)Lck$a;	a	exactMatch
		p	1	property	property
		p	2	value	value
	m	()Lck;	b	build
c	ck$b	net/minecraft/predicate/StatePredicate$ExactValueCondition
	f	Ljava/lang/String;	a	value
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
		p	2	value	value
c	ck$c	net/minecraft/predicate/StatePredicate$Condition
	f	Ljava/lang/String;	a	key
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Lcfl;Lcgl;)Z	a	test
		p	1	state	state
		p	2	property	property
	m	(Lcfk;Lcfl;)Z	a	test
		p	1	stateManager	stateManager
		p	2	state	state
	m	(Lcfk;Ljava/util/function/Consumer;)V	a	reportMissing
		p	1	factory	factory
		p	2	reporter	reporter
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	()Ljava/lang/String;	b	getKey
c	ck$d	net/minecraft/predicate/StatePredicate$RangedValueCondition
	f	Ljava/lang/String;	a	min
	f	Ljava/lang/String;	b	max
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
		p	2	min	min
		p	3	max	max
c	cka	net/minecraft/world/gen/feature/ChorusPlantFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	ckb	net/minecraft/world/gen/feature/ConfiguredFeature
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lckt;	d	feature
	f	Lcnr;	e	config
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;)Z	a	generate
	m	(Lcrl;)Lckb;	a	createDecoratedFeature
	m	(F)Lcmw;	a	withChance
		p	1	chance	chance
c	ckc	net/minecraft/world/gen/feature/ConfiguredStructureFeature
c	ckd	net/minecraft/world/gen/feature/CoralClawFeature
c	cke	net/minecraft/world/gen/feature/CoralFeature
	m	(Lbqc;Ljava/util/Random;Lfu;Lcfj;)Z	a	spawnCoral
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
	m	(Lbqc;Ljava/util/Random;Lfu;Lcfj;)Z	b	spawnCoralPiece
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
c	ckf	net/minecraft/world/gen/feature/CoralMushroomFeature
c	ckg	net/minecraft/world/gen/feature/CoralTreeFeature
c	ckh	net/minecraft/world/gen/feature/DecoratedFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnm;)Z	a	generate
c	cki	net/minecraft/world/gen/feature/DecoratedFlowerFeature
c	ckj	net/minecraft/world/gen/feature/DefaultFlowerFeature
	m	(Lbqc;Lfu;Lcog;)Z	a	isPosValid
	m	(Lcog;)I	a	getFlowerAmount
	m	(Ljava/util/Random;Lfu;Lcog;)Lfu;	a	getPos
	m	(Ljava/util/Random;Lfu;Lcog;)Lcfj;	b	getFlowerState
c	ckk	net/minecraft/world/gen/feature/DeltaFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcno;)Z	a	generate
c	ckl	net/minecraft/world/gen/feature/DesertPyramidFeature
c	ckl$a	net/minecraft/world/gen/feature/DesertPyramidFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	ckm	net/minecraft/structure/DesertVillageData
	m	()V	a	init
c	ckn	net/minecraft/world/gen/feature/DesertWellFeature
	f	Lcft;	a	CAN_GENERATE
	f	Lcfj;	ac	slab
	f	Lcfj;	ad	wall
	f	Lcfj;	ae	fluidInside
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cko	net/minecraft/world/gen/feature/DiskFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnp;)Z	a	generate
c	ckp	net/minecraft/world/gen/feature/EndCityFeature
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcoa;)Z	a	shouldStartAt
	m	(IILcha;)I	b	getGenerationHeight
		p	0	chunkX	chunkX
		p	1	chunkZ	chunkZ
		p	2	chunkGenerator	chunkGenerator
c	ckp$a	net/minecraft/world/gen/feature/EndCityFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	ckq	net/minecraft/world/gen/feature/EndGatewayFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnq;)Z	a	generate
c	ckr	net/minecraft/world/gen/feature/EndIslandFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cks	net/minecraft/world/gen/feature/EndPortalFeature
	f	Lfu;	a	ORIGIN
	f	Z	ac	open
	m	(Z)V	<init>	<init>
		p	1	open	open
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	ckt	net/minecraft/world/gen/feature/Feature
	f	Lcjy;	T	BONUS_CHEST
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Lcjj;	d	FLOWER
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1	configCodec	configCodec
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnr;)Z	a	generate
		p	1	world	world
		p	2	structureAccessor	structureAccessor
		p	3	generator	generator
		p	4	random	random
		p	5	pos	pos
		p	6	config	config
	m	(Lcfj;)Z	a	method_27369
		p	0	state	state
	m	(Ljava/lang/String;Lckt;)Lckt;	a	register
		p	0	name	name
		p	1	feature	feature
	m	(Lbqg;Lfu;)Z	a	isSoil
		p	0	world	world
		p	1	pos	pos
	m	(Lbvr;)Z	a	isStone
		p	0	block	block
	m	(Lbqh;Lfu;Lcfj;)V	a	setBlockState
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	()Lcom/mojang/serialization/Codec;	a	getCodec
	m	(Lcnr;)Lckb;	b	configure
		p	1	config	config
	m	(Lbvr;)Z	b	isSoil
		p	0	block	block
	m	(Lbqg;Lfu;)Z	b	isAir
		p	0	world	world
		p	1	pos	pos
c	cku	net/minecraft/world/gen/feature/FillLayerFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnv;)Z	a	generate
c	ckv	net/minecraft/world/gen/feature/FossilFeature
	f	Luh;	a	SPINE_1
	f	Luh;	ac	SPINE_2
	f	Luh;	ad	SPINE_3
	f	Luh;	ae	SPINE_4
	f	Luh;	af	SPINE_1_COAL
	f	Luh;	ag	SPINE_2_COAL
	f	Luh;	ah	SPINE_3_COAL
	f	Luh;	ai	SPINE_4_COAL
	f	Luh;	aj	SKULL_1
	f	Luh;	ak	SKULL_2
	f	Luh;	al	SKULL_3
	f	Luh;	am	SKULL_4
	f	Luh;	an	SKULL_1_COAL
	f	Luh;	ao	SKULL_2_COAL
	f	Luh;	ap	SKULL_3_COAL
	f	Luh;	aq	SKULL_4_COAL
	f	[Luh;	ar	FOSSILS
	f	[Luh;	as	COAL_FOSSILS
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	ckw	net/minecraft/world/gen/feature/GlowstoneBlobFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	ckx	net/minecraft/world/gen/feature/HugeBrownMushroomFeature
c	cky	net/minecraft/world/gen/feature/HugeFungusFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcky;	b	CRIMSON_FUNGUS_CONFIG
	f	Lcky;	c	CRIMSON_FUNGUS_NOT_PLANTED_CONFIG
	f	Lcky;	d	WARPED_FUNGUS_CONFIG
	f	Lcky;	e	WARPED_FUNGUS_NOT_PLANTED_CONFIG
	f	Lcfj;	f	validBaseBlock
	f	Lcfj;	g	stemState
	f	Lcfj;	h	hatState
	f	Lcfj;	i	decorationState
	f	Z	j	planted
	m	(Lcfj;Lcfj;Lcfj;Lcfj;Z)V	<init>	<init>
		p	1	validBaseBlock	validBaseBlock
		p	2	stemState	stemState
		p	3	hatState	hatState
		p	4	decorationState	decorationState
		p	5	planted	planted
c	ckz	net/minecraft/world/gen/feature/HugeFungusFeature
	m	(Lfu;Lbqc;Ljava/util/Random;)V	a	generateVines
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcky;)Z	a	generate
	m	(Lbqc;Ljava/util/Random;Lcky;Lfu;IZ)V	a	generateStem
		p	1	world	world
		p	2	random	random
		p	3	config	config
		p	5	stemHeight	stemHeight
		p	6	thickStem	thickStem
	m	(Lbqc;Ljava/util/Random;Lcky;Lfu$a;FFF)V	a	generateHatBlock
		p	1	world	world
		p	2	random	random
		p	3	config	config
		p	4	pos	pos
		p	5	decorationChance	decorationChance
		p	6	generationChance	generationChance
		p	7	vineChance	vineChance
	m	(Lbqc;Lfu;Lbvr;)Lfu$a;	a	getStartPos
		p	0	world	world
		p	1	pos	pos
	m	(Lbqc;Ljava/util/Random;Lfu;Lcfj;Z)V	a	tryGenerateVines
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
	m	(Lbqc;Ljava/util/Random;Lcky;Lfu;IZ)V	b	generateHat
		p	1	world	world
		p	2	random	random
		p	3	config	config
		p	5	hatHeight	hatHeight
		p	6	thickStem	thickStem
c	cl	net/minecraft/advancement/criterion/SummonedEntityCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcl$a;	a	conditionsFromJson
	m	(Lze;Laom;)V	a	trigger
		p	1	player	player
		p	2	entity	entity
c	cl$a	net/minecraft/advancement/criterion/SummonedEntityCriterion$Conditions
	f	Lbe$b;	a	entity
	m	(Lbe$b;Lbe$b;)V	<init>	<init>
		p	1	player	player
		p	2	entity	entity
	m	(Ldat;)Z	a	matches
		p	1	summonedEntityContext	summonedEntityContext
	m	(Lbe$a;)Lcl$a;	a	create
		p	0	summonedEntityPredicateBuilder	summonedEntityPredicateBuilder
c	cla	net/minecraft/world/gen/feature/HugeRedMushroomFeature
c	clb	net/minecraft/world/gen/feature/IcePatchFeature
	f	Lbvr;	a	ICE
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcns;)Z	a	generate
c	clc	net/minecraft/world/gen/feature/IceSpikeFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cld	net/minecraft/world/gen/feature/IcebergFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcng;)Z	a	generate
	m	(Lbqc;Lfu;)V	a	clearSnowAbove
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;IIZI)V	a	method_13418
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;)Z	a	isAirBelow
		p	1	world	world
		p	2	pos	pos
	m	(Lbvr;)Z	c	isSnowyOrIcy
		p	1	block	block
c	cle	net/minecraft/world/gen/feature/IglooFeature
c	cle$a	net/minecraft/world/gen/feature/IglooFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	clf	net/minecraft/world/gen/feature/JungleTempleFeature
c	clf$a	net/minecraft/world/gen/feature/JungleTempleFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	clg	net/minecraft/world/gen/feature/KelpFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	clh	net/minecraft/world/gen/feature/LakeFeature
	f	Lcfj;	a	CAVE_AIR
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcng;)Z	a	generate
c	cli	net/minecraft/world/gen/feature/MineshaftFeature
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcnw;)Z	a	shouldStartAt
c	cli$a	net/minecraft/world/gen/feature/MineshaftFeature$Start
	m	(Lcha;Lcva;IILbre;Lcnw;)V	a	init
c	cli$b	net/minecraft/world/gen/feature/MineshaftFeature$Type
	f	Ljava/util/Map;	d	nameMap
	f	Ljava/lang/String;	e	name
	m	(I)Lcli$b;	a	byIndex
		p	0	index	index
	m	(Ljava/lang/String;)Lcli$b;	a	byName
		p	0	nam	nam
	m	()Ljava/lang/String;	b	getName
c	clj	net/minecraft/world/gen/feature/DungeonFeature
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	[Laoq;	ac	MOB_SPAWNER_ENTITIES
	f	Lcfj;	ad	AIR
	m	(Ljava/util/Random;)Laoq;	a	getMobSpawnerEntity
		p	1	random	random
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	clk	net/minecraft/world/gen/feature/NetherForestVegetationFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnf;)Z	a	generate
c	cll	net/minecraft/world/gen/feature/NetherFortressFeature
	f	Ljava/util/List;	u	MONSTER_SPAWNS
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcoa;)Z	a	shouldStartAt
c	cll$a	net/minecraft/world/gen/feature/NetherFortressFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	clm	net/minecraft/world/gen/feature/NoOpFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cln	net/minecraft/world/gen/feature/NoSurfaceOreFeature
	m	(Lfu$a;Ljava/util/Random;Lfu;I)V	a	getStartPos
		p	1	mutable	mutable
		p	2	random	random
		p	3	pos	pos
		p	4	size	size
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoc;)Z	a	generate
	m	(Ljava/util/Random;I)I	a	randomCoord
		p	1	random	random
		p	2	size	size
	m	(Lbqc;Lfu;)Z	a	checkAir
		p	1	world	world
		p	2	pos	pos
c	clo	net/minecraft/world/gen/feature/OceanMonumentFeature
	f	Ljava/util/List;	u	MONSTER_SPAWNS
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcoa;)Z	a	shouldStartAt
c	clo$a	net/minecraft/world/gen/feature/OceanMonumentFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
	m	(II)V	b	method_16588
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
c	clp	net/minecraft/world/gen/feature/OreFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoc;)Z	a	generate
	m	(Lbqc;Ljava/util/Random;Lcoc;DDDDDDIIIII)Z	a	generateVeinPart
		p	1	world	world
		p	2	random	random
		p	3	config	config
		p	4	startX	startX
		p	6	endX	endX
		p	8	startZ	startZ
		p	10	endZ	endZ
		p	12	startY	startY
		p	14	endY	endY
		p	16	x	x
		p	17	y	y
		p	18	z	z
		p	19	size	size
c	clq	net/minecraft/world/gen/feature/PillagerOutpostFeature
	f	Ljava/util/List;	u	MONSTER_SPAWNS
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcoa;)Z	a	shouldStartAt
c	clq$a	net/minecraft/world/gen/feature/PillagerOutpostFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	clr	net/minecraft/structure/PlainsVillageData
	m	()V	a	init
c	cls	net/minecraft/world/gen/feature/RandomBooleanFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoe;)Z	a	generate
c	clt	net/minecraft/world/gen/feature/RandomPatchFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcog;)Z	a	generate
c	clu	net/minecraft/world/gen/feature/RandomRandomFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoh;)Z	a	generate
c	clv	net/minecraft/world/gen/feature/RandomFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcof;)Z	a	generate
c	clw	net/minecraft/world/gen/feature/NetherrackReplaceBlobsFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoj;)Z	a	generate
c	clx	net/minecraft/world/gen/feature/EmeraldOreFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoi;)Z	a	generate
c	cly	net/minecraft/world/gen/feature/RuinedPortalFeature
	f	[Ljava/lang/String;	u	COMMON_PORTAL_STRUCTURE_IDS
	f	[Ljava/lang/String;	v	RARE_PORTAL_STRUCTURE_IDS
	m	(Ljava/util/Random;II)I	a	choose
		p	0	random	random
		p	1	min	min
		p	2	max	max
	m	(Ljava/util/Random;Lcha;Lctt$b;ZIILctd;)I	b	method_27211
		p	0	random	random
		p	1	chunkGenerator	chunkGenerator
		p	2	verticalPlacement	verticalPlacement
	m	(Ljava/util/Random;II)I	b	choosePlacementHeight
		p	1	min	min
		p	2	max	max
c	cly$a	net/minecraft/world/gen/feature/RuinedPortalFeature$Start
	m	(Lcha;Lcva;IILbre;Lcok;)V	a	init
c	cly$b	net/minecraft/world/gen/feature/RuinedPortalFeature$Type
	f	Ljava/util/Map;	i	BY_NAME
	f	Ljava/lang/String;	j	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Lcly$b;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	b	getName
c	clz	net/minecraft/structure/SavannaVillageData
	m	()V	a	init
c	cm	net/minecraft/advancement/criterion/TameAnimalCriterion
	f	Luh;	a	ID
	m	(Lze;Layk;)V	a	trigger
		p	1	player	player
		p	2	entity	entity
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcm$a;	a	conditionsFromJson
c	cm$a	net/minecraft/advancement/criterion/TameAnimalCriterion$Conditions
	f	Lbe$b;	a	entity
	m	(Lbe$b;Lbe$b;)V	<init>	<init>
		p	1	player	player
		p	2	entity	entity
	m	(Ldat;)Z	a	matches
		p	1	tamedEntityContext	tamedEntityContext
	m	(Lbe;)Lcm$a;	a	create
		p	0	entity	entity
	m	()Lcm$a;	c	any
c	cma	net/minecraft/world/gen/feature/SeaPickleFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnk;)Z	a	generate
c	cmb	net/minecraft/world/gen/feature/SeagrassFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcol;)Z	a	generate
c	cmc	net/minecraft/world/gen/feature/ShipwreckFeature
c	cmc$a	net/minecraft/world/gen/feature/ShipwreckFeature$Start
	m	(Lcha;Lcva;IILbre;Lcom;)V	a	init
c	cmd	net/minecraft/world/gen/feature/SimpleBlockFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoo;)Z	a	generate
c	cme	net/minecraft/world/gen/feature/SimpleRandomFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcop;)Z	a	generate
c	cmg	net/minecraft/world/gen/feature/FreezeTopLayerFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cmh	net/minecraft/structure/SnowyVillageData
	m	()V	a	init
c	cmi	net/minecraft/world/gen/feature/EndSpikeFeature
	f	Lcom/google/common/cache/LoadingCache;	a	CACHE
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoq;)Z	a	generate
	m	(Lbqc;Ljava/util/Random;Lcoq;Lcmi$a;)V	a	generateSpike
		p	1	world	world
		p	2	random	random
		p	3	config	config
	m	(Lbqu;)Ljava/util/List;	a	getSpikes
c	cmi$a	net/minecraft/world/gen/feature/EndSpikeFeature$Spike
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	centerX
	f	I	c	centerZ
	f	I	d	radius
	f	I	e	height
	f	Z	f	guarded
	f	Ldeg;	g	boundingBox
	m	(IIIIZ)V	<init>	<init>
		p	1	centerX	centerX
		p	2	centerZ	centerZ
		p	3	radius	radius
		p	4	height	height
	m	()I	a	getCenterX
	m	(Lfu;)Z	a	isInChunk
		p	1	pos	pos
	m	()I	b	getCenterZ
	m	()I	c	getRadius
	m	()I	d	getHeight
	m	()Z	e	isGuarded
	m	()Ldeg;	f	getBoundingBox
c	cmi$b	net/minecraft/world/gen/feature/EndSpikeFeature$SpikeCache
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
c	cmj	net/minecraft/world/gen/feature/SpringFeature
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcor;)Z	a	generate
c	cmk	net/minecraft/world/gen/feature/StrongholdFeature
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcoa;)Z	a	shouldStartAt
c	cmk$a	net/minecraft/world/gen/feature/StrongholdFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	cml	net/minecraft/world/gen/feature/StructureFeature
	f	Lcom/google/common/collect/BiMap;	a	STRUCTURES
	f	Lcmn;	j	SWAMP_HUT
	f	Ljava/util/Map;	u	STRUCTURE_TO_GENERATION_STEP
	f	Lorg/apache/logging/log4j/Logger;	v	LOGGER
	m	(Lbqd;Lbqq;Lfu;IZJLcot;)Lfu;	a	locateStructure
		p	5	skipExistingChunks	skipExistingChunks
	m	()Lcml$a;	a	getStructureStartFactory
	m	(Ljava/lang/String;Lcml;Lcin$b;)Lcml;	a	register
		p	0	name	name
		p	1	structureFeature	structureFeature
		p	2	step	step
	m	(Lcnr;)Lckc;	a	configure
		p	1	config	config
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcnr;)Z	a	shouldStartAt
	m	()Ljava/util/List;	c	getMonsterSpawns
	m	()Ljava/lang/String;	i	getName
	m	()Ljava/util/List;	j	getCreatureSpawns
c	cml$a	net/minecraft/world/gen/feature/StructureFeature$StructureStartFactory
	m	(Lcml;IILctd;IJ)Lctz;	create	create
		p	1	feature	feature
		p	2	x	x
		p	3	z	z
		p	4	box	box
c	cmm	net/minecraft/structure/StructurePieceType
	f	Lcmm;	A	STRONGHOLD_PORTAL_ROOM
	f	Lcmm;	B	STRONGHOLD_PRISON_HALL
	f	Lcmm;	C	STRONGHOLD_RIGHT_TURN
	f	Lcmm;	D	STRONGHOLD_SQUARE_ROOM
	f	Lcmm;	E	STRONGHOLD_SPIRAL_STAIRCASE
	f	Lcmm;	F	STRONGHOLD_START
	f	Lcmm;	G	STRONGHOLD_CORRIDOR
	f	Lcmm;	H	STRONGHOLD_STAIRS
	f	Lcmm;	I	JUNGLE_TEMPLE
	f	Lcmm;	J	OCEAN_TEMPLE
	f	Lcmm;	K	IGLOO
	f	Lcmm;	L	RUINED_PORTAL
	f	Lcmm;	M	SWAMP_HUT
	f	Lcmm;	N	DESERT_TEMPLE
	f	Lcmm;	O	OCEAN_MONUMENT_BASE
	f	Lcmm;	P	OCEAN_MONUMENT_CORE_ROOM
	f	Lcmm;	Q	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Lcmm;	R	OCEAN_MONUMENT_DOUBLE_X_Y_ROOM
	f	Lcmm;	S	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Lcmm;	T	OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM
	f	Lcmm;	U	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Lcmm;	V	OCEAN_MONUMENT_ENTRY_ROOM
	f	Lcmm;	W	OCEAN_MONUMENT_PENTHOUSE
	f	Lcmm;	X	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Lcmm;	Y	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Lcmm;	Z	OCEAN_MONUMENT_WING_ROOM
	f	Lcmm;	a	MINESHAFT_CORRIDOR
	f	Lcmm;	aa	END_CITY
	f	Lcmm;	ab	WOODLAND_MANSION
	f	Lcmm;	ac	BURIED_TREASURE
	f	Lcmm;	ad	SHIPWRECK
	f	Lcmm;	ae	NETHER_FOSSIL
	f	Lcmm;	b	MINESHAFT_CROSSING
	f	Lcmm;	c	MINESHAFT_ROOM
	f	Lcmm;	d	MINESHAFT_STAIRS
	f	Lcmm;	e	PILLAGER_OUTPOST
	f	Lcmm;	f	VILLAGE
	f	Lcmm;	g	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Lcmm;	h	NETHER_FORTRESS_BRIDGE_END
	f	Lcmm;	i	NETHER_FORTRESS_BRIDGE
	f	Lcmm;	j	NETHER_FORTRESS_CORRIDOR_STAIRS
	f	Lcmm;	k	NETHER_FORTRESS_CORRIDOR_BALCONY
	f	Lcmm;	l	NETHER_FORTRESS_CORRIDOR_EXIT
	f	Lcmm;	m	NETHER_FORTRESS_CORRIDOR_CROSSING
	f	Lcmm;	n	NETHER_FORTRESS_CORRIDOR_LEFT_TURN
	f	Lcmm;	o	NETHER_FORTRESS_SMALL_CORRIDOR
	f	Lcmm;	p	NETHER_FORTRESS_CORRIDOR_RIGHT_TURN
	f	Lcmm;	q	NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM
	f	Lcmm;	r	NETHER_FORTRESS_BRIDGE_PLATFORM
	f	Lcmm;	s	NETHER_FORTRESS_BRIDGE_SMALL_CROSSING
	f	Lcmm;	t	NETHER_FORTRESS_BRIDGE_STAIRS
	f	Lcmm;	u	NETHER_FORTRESS_START
	f	Lcmm;	v	STRONGHOLD_CHEST_CORRIDOR
	f	Lcmm;	w	STRONGHOLD_SMALL_CORRIDOR
	f	Lcmm;	x	STRONGHOLD_FIVE_WAY_CROSSING
	f	Lcmm;	y	STRONGHOLD_LEFT_TURN
	f	Lcmm;	z	STRONGHOLD_LIBRARY
	m	(Lcmm;Ljava/lang/String;)Lcmm;	a	register
		p	0	pieceType	pieceType
		p	1	id	id
	m	(Lcva;Lle;)Lcty;	load	load
		p	1	structureManager	structureManager
		p	2	tag	tag
c	cmn	net/minecraft/world/gen/feature/SwampHutFeature
	f	Ljava/util/List;	u	MONSTER_SPAWNS
	f	Ljava/util/List;	v	CREATURE_SPAWNS
c	cmn$a	net/minecraft/world/gen/feature/SwampHutFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	cmo	net/minecraft/structure/TaigaVillageData
	m	()V	a	init
c	cmp	net/minecraft/world/gen/feature/TreeFeature
	m	(Lbqf;Ljava/util/Random;Lfu;Ljava/util/Set;Ljava/util/Set;Lctd;Lcou;)Z	a	generate
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	logPositions	logPositions
		p	5	leavesPositions	leavesPositions
		p	6	box	box
		p	7	config	config
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcou;)Z	a	generate
	m	(Lcfj;)Z	a	method_16428
		p	0	state	state
	m	(Lbqu;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lctd;Lcqm;)V	a	method_23381
		p	6	decorator	decorator
	m	(Lbqc;Lctd;Ljava/util/Set;Ljava/util/Set;)Ldev;	a	placeLogsAndLeaves
		p	1	world	world
		p	2	box	box
		p	3	logs	logs
		p	4	leaves	leaves
	m	(Lcfj;)Z	b	method_16426
		p	0	state	state
	m	(Lbqh;Lfu;Lcfj;)V	b	setBlockStateWithoutUpdatingNeighbors
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lcfj;)Z	c	method_16417
		p	0	state	state
	m	(Lbqg;Lfu;)Z	c	canTreeReplace
		p	0	world	world
		p	1	pos	pos
	m	(Lcfj;)Z	d	method_16421
		p	0	state	state
	m	(Lbqg;Lfu;)Z	d	isAirOrLeaves
		p	0	world	world
		p	1	pos	pos
	m	(Lbqg;Lfu;)Z	e	canReplace
		p	1	pos	pos
	m	(Lcfj;)Z	e	method_23384
		p	0	state	state
	m	(Lcfj;)Z	f	method_16431
		p	0	state	state
	m	(Lbqg;Lfu;)Z	f	isVine
		p	0	world	world
		p	1	pos	pos
	m	(Lbqg;Lfu;)Z	g	isWater
		p	0	world	world
		p	1	pos	pos
	m	(Lbqg;Lfu;)Z	h	isDirtOrGrass
		p	0	world	world
		p	1	pos	pos
	m	(Lbqg;Lfu;)Z	i	isReplaceablePlant
		p	0	world	world
		p	1	pos	pos
c	cmq	net/minecraft/world/gen/feature/TwistingVinesFeature
	m	(Lbqc;Ljava/util/Random;Lfu$a;III)V	a	generateVineColumn
		p	0	world	world
		p	1	random	random
		p	2	pos	pos
		p	3	maxLength	maxLength
		p	4	minAge	minAge
		p	5	maxAge	maxAge
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
	m	(Lbqc;Lfu;)Z	a	isNotSuitable
	m	(Lbqc;Ljava/util/Random;Lfu;III)V	b	generateVinesInArea
c	cmr	net/minecraft/world/gen/feature/VillageFeature
c	cmr$a	net/minecraft/world/gen/feature/VillageFeature$Start
	m	(Lcha;Lcva;IILbre;Lcnu;)V	a	init
c	cms	net/minecraft/structure/VillageGenerator
	m	(Lcha;Lcva;Lfu;Ljava/util/List;Lciy;Lcnu;)V	a	addPieces
		p	0	chunkGenerator	chunkGenerator
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	pieces	pieces
		p	4	random	random
		p	5	config	config
	m	()V	a	init
c	cms$a	net/minecraft/structure/VillageGenerator$Piece
c	cmt	net/minecraft/world/gen/feature/VinesFeature
	f	[Lfz;	a	DIRECTIONS
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cmu	net/minecraft/world/gen/feature/VoidStartPlatformFeature
	f	Lfu;	a	START_BLOCK
	f	Lbph;	ac	START_CHUNK
	m	(IIII)I	a	getDistance
		p	0	x1	x1
		p	1	z1	z1
		p	2	x2	x2
		p	3	z2	z2
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
c	cmv	net/minecraft/world/gen/feature/WeepingVinesFeature
	f	[Lfz;	a	DIRECTIONS
	m	(Lbqc;Ljava/util/Random;Lfu$a;III)V	a	generateVineColumn
		p	0	world	world
		p	1	random	random
		p	2	pos	pos
		p	3	length	length
		p	4	minAge	minAge
		p	5	maxAge	maxAge
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcoa;)Z	a	generate
	m	(Lbqc;Ljava/util/Random;Lfu;)V	a	generateNetherWartBlocksInArea
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
	m	(Lbqc;Ljava/util/Random;Lfu;)V	b	generateVinesInArea
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
c	cmw	net/minecraft/world/gen/feature/RandomFeatureEntry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lckb;	b	feature
	f	F	c	chance
	m	(Lckb;F)V	<init>	<init>
		p	1	feature	feature
		p	2	chance	chance
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;)Z	a	generate
c	cmx	net/minecraft/world/gen/feature/WoodlandMansionFeature
	m	(Lcha;Lbrh;JLciy;IILbre;Lbph;Lcoa;)Z	a	shouldStartAt
c	cmx$a	net/minecraft/world/gen/feature/WoodlandMansionFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	cmy	net/minecraft/world/gen/placer/BlockPlacer
c	cmz	net/minecraft/world/gen/placer/BlockPlacerType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcmz;	a	register
		p	0	id	id
c	cn	net/minecraft/advancement/criterion/TargetHitCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcn$a;	a	conditionsFromJson
	m	(Lze;Laom;Ldem;I)V	a	trigger
		p	1	player	player
		p	2	projectile	projectile
		p	3	hitPos	hitPos
		p	4	signalStrength	signalStrength
c	cn$a	net/minecraft/advancement/criterion/TargetHitCriterion$Conditions
	f	Lbx$d;	a	signalStrength
	f	Lbe$b;	b	projectile
	m	(Lbe$b;Lbx$d;Lbe$b;)V	<init>	<init>
		p	1	player	player
		p	2	signalStrength	signalStrength
		p	3	projectile	projectile
	m	(Lbx$d;Lbe$b;)Lcn$a;	a	create
		p	0	signalStrength	signalStrength
	m	(Ldat;Ldem;I)Z	a	test
		p	1	projectileContext	projectileContext
		p	2	hitPos	hitPos
		p	3	signalStrength	signalStrength
c	cna	net/minecraft/world/gen/placer/ColumnPlacer
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	minSize
	f	I	d	extraSize
c	cnb	net/minecraft/world/gen/placer/DoublePlantPlacer
c	cnc	net/minecraft/world/gen/placer/SimpleBlockPlacer
c	cne	net/minecraft/world/gen/feature/ForestRockFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	state
	f	I	c	startRadius
	m	(Lcfj;I)V	<init>	<init>
		p	1	state	state
		p	2	startRadius	startRadius
c	cnf	net/minecraft/world/gen/feature/BlockPileFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpo;	b	stateProvider
c	cng	net/minecraft/world/gen/feature/SingleStateFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	state
	m	(Lcfj;)V	<init>	<init>
		p	1	state	state
c	cnh	net/minecraft/world/gen/feature/BuriedTreasureFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
	m	(F)V	<init>	<init>
		p	1	probability	probability
c	cni	net/minecraft/world/gen/decorator/ChanceRangeDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	chance
	f	I	c	bottomOffset
	f	I	d	topOffset
	f	I	e	top
	m	(FIII)V	<init>	<init>
		p	1	chance	chance
		p	2	bottomOffset	bottomOffset
		p	3	topOffset	topOffset
		p	4	top	top
c	cnj	net/minecraft/world/gen/feature/BasaltColumnsFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minReach
	f	I	c	maxReach
	f	I	d	minHeight
	f	I	e	maxHeight
	m	(IIII)V	<init>	<init>
		p	1	minReach	minReach
		p	2	maxReach	maxReach
		p	3	minHeight	minHeight
		p	4	maxHeight	maxHeight
c	cnj$a	net/minecraft/world/gen/feature/BasaltColumnsFeatureConfig$Builder
	f	I	a	minReach
	f	I	b	maxReach
	f	I	c	minHeight
	f	I	d	maxHeight
	m	()Lcnj;	a	build
	m	(I)Lcnj$a;	a	reach
		p	1	reach	reach
	m	(II)Lcnj$a;	a	reach
		p	1	min	min
		p	2	max	max
	m	(II)Lcnj$a;	b	height
		p	1	min	min
		p	2	max	max
c	cnk	net/minecraft/world/gen/feature/SeaPickleFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	count
	m	(I)V	<init>	<init>
		p	1	count	count
c	cnl	net/minecraft/world/gen/decorator/RangeDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	count
	f	I	c	bottomOffset
	f	I	d	topOffset
	f	I	e	maximum
	m	(IIII)V	<init>	<init>
		p	1	count	count
		p	2	bottomOffset	bottomOffset
		p	3	topOffset	topOffset
		p	4	maximum	maximum
c	cnm	net/minecraft/world/gen/feature/DecoratedFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lckb;	b	feature
	f	Lcrl;	c	decorator
c	cnn	net/minecraft/world/gen/decorator/DecoratorConfig
	f	Lcnz;	f	DEFAULT
c	cno	net/minecraft/world/gen/feature/DeltaFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	contents
	f	Lcfj;	c	rim
	f	I	d	minRadius
	f	I	e	maxRadius
	f	I	f	maxRim
	m	(Lcfj;Lcfj;III)V	<init>	<init>
		p	1	contents	contents
		p	2	rim	rim
		p	3	minRadius	minRadius
		p	4	maxRadius	maxRadius
		p	5	maxRim	maxRim
c	cno$a	net/minecraft/world/gen/feature/DeltaFeatureConfig$Builder
	f	Ljava/util/Optional;	a	contents
	f	Ljava/util/Optional;	b	rim
	f	I	c	minRadius
	f	I	d	maxRadius
	f	I	e	maxRim
	m	(II)Lcno$a;	a	radius
		p	1	min	min
		p	2	max	max
	m	(Lcfj;)Lcno$a;	a	contents
		p	1	contents	contents
	m	(Lcfj;I)Lcno$a;	a	rim
		p	1	rim	rim
		p	2	maxRim	maxRim
	m	()Lcno;	a	build
c	cnp	net/minecraft/world/gen/feature/DiskFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	state
	f	I	c	radius
	f	I	d	ySize
	f	Ljava/util/List;	e	targets
	m	(Lcfj;IILjava/util/List;)V	<init>	<init>
		p	1	state	state
		p	2	radius	radius
		p	3	ySize	ySize
		p	4	targets	targets
c	cnq	net/minecraft/world/gen/feature/EndGatewayFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	exitPos
	f	Z	c	exact
	m	(Ljava/util/Optional;Z)V	<init>	<init>
		p	1	exitPos	exitPos
		p	2	exact	exact
	m	(Lfu;Z)Lcnq;	a	createConfig
		p	0	exitPortalPosition	exitPortalPosition
		p	1	exitsAtSpawn	exitsAtSpawn
	m	()Lcnq;	a	createConfig
	m	()Ljava/util/Optional;	b	getExitPos
	m	()Z	c	isExact
c	cnr	net/minecraft/world/gen/feature/FeatureConfig
	f	Lcoa;	k	DEFAULT
c	cns	net/minecraft/world/gen/feature/IcePatchFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	radius
	m	(I)V	<init>	<init>
		p	1	radius	radius
c	cnt	net/minecraft/world/gen/feature/HugeMushroomFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpo;	b	capProvider
	f	Lcpo;	c	stemProvider
	f	I	d	capSize
	m	(Lcpo;Lcpo;I)V	<init>	<init>
		p	1	capProvider	capProvider
		p	2	stemProvider	stemProvider
		p	3	capSize	capSize
c	cnu	net/minecraft/world/gen/feature/StructurePoolFeatureConfig
	c	A feature config that specifies a starting pool and a size for the first two parameters of\n{@link net.minecraft.structure.pool.StructurePoolBasedGenerator#addPieces(net.minecraft.util.Identifier, int, net.minecraft.structure.pool.StructurePoolBasedGenerator.PieceFactory, net.minecraft.world.gen.chunk.ChunkGenerator, net.minecraft.structure.StructureManager, net.minecraft.util.math.BlockPos, java.util.List, java.util.Random, boolean, boolean)}.
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Luh;	b	startPool
	f	I	c	size
	m	(Luh;I)V	<init>	<init>
		p	2	size	size
	m	()I	a	getSize
	m	()Luh;	b	getStartPool
c	cnv	net/minecraft/world/gen/feature/FillLayerFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Lcfj;	c	state
	m	(ILcfj;)V	<init>	<init>
		p	1	height	height
		p	2	state	state
c	cnw	net/minecraft/world/gen/feature/MineshaftFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	probability
	f	Lcli$b;	c	type
	m	(DLcli$b;)V	<init>	<init>
		p	1	probability	probability
		p	3	type	type
c	cnx	net/minecraft/world/gen/feature/BastionRemnantFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	possibleConfigs
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	startPoolToSize	startPoolToSize
	m	(Ljava/util/Random;)Lcnu;	a	getRandom
		p	1	random	random
c	cny	net/minecraft/world/gen/decorator/NoiseHeightmapDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	noiseLevel
	f	I	c	belowNoise
	f	I	d	aboveNoise
	m	(DII)V	<init>	<init>
		p	1	noiseLevel	noiseLevel
		p	3	belowNoise	belowNoise
		p	4	aboveNoise	aboveNoise
c	cnz	net/minecraft/world/gen/decorator/NopeDecoratorConfig
c	co	net/minecraft/advancement/criterion/TickCriterion
	f	Luh;	a	ID
	m	(Lze;)V	a	trigger
		p	1	player	player
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lco$a;	a	conditionsFromJson
c	co$a	net/minecraft/advancement/criterion/TickCriterion$Conditions
	m	(Lbe$b;)V	<init>	<init>
		p	1	player	player
c	coa	net/minecraft/world/gen/feature/DefaultFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcoa;	b	INSTANCE
c	cob	net/minecraft/world/gen/feature/OceanRuinFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lctp$b;	b	biomeType
	f	F	c	largeProbability
	f	F	d	clusterProbability
	m	(Lctp$b;FF)V	<init>	<init>
		p	1	biomeType	biomeType
		p	2	largeProbability	largeProbability
		p	3	clusterProbability	clusterProbability
c	coc	net/minecraft/world/gen/feature/OreFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcoc$a;	b	target
	f	I	c	size
	f	Lcfj;	d	state
	m	(Lcoc$a;Lcfj;I)V	<init>	<init>
		p	1	target	target
		p	2	state	state
		p	3	size	size
c	coc$a	net/minecraft/world/gen/feature/OreFeatureConfig$Target
	f	Ljava/util/Map;	e	nameMap
	f	Ljava/lang/String;	f	name
	f	Ljava/util/function/Predicate;	g	predicate
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Lcoc$a;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/util/function/Predicate;	c	getCondition
c	cod	net/minecraft/world/gen/ProbabilityConfig
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	c	probability
	m	(F)V	<init>	<init>
		p	1	probability	probability
c	coe	net/minecraft/world/gen/feature/RandomBooleanFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lckb;	b	featureTrue
	f	Lckb;	c	featureFalse
	m	(Lckb;Lckb;)V	<init>	<init>
		p	1	featureTrue	featureTrue
		p	2	featureFalse	featureFalse
c	cof	net/minecraft/world/gen/feature/RandomFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	Lckb;	c	defaultFeature
	m	(Ljava/util/List;Lckb;)V	<init>	<init>
		p	1	features	features
		p	2	defaultFeature	defaultFeature
c	cog	net/minecraft/world/gen/feature/RandomPatchFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpo;	b	stateProvider
	f	Lcmy;	c	blockPlacer
	f	Ljava/util/Set;	d	whitelist
	f	Ljava/util/Set;	e	blacklist
	f	I	f	tries
	f	I	g	spreadX
	f	I	h	spreadY
	f	I	i	spreadZ
	f	Z	j	canReplace
	f	Z	l	project
	f	Z	m	needsWater
	m	(Lcpo;Lcmy;Ljava/util/Set;Ljava/util/Set;IIIIZZZ)V	<init>	<init>
		p	1	stateProvider	stateProvider
		p	2	blockPlacer	blockPlacer
		p	3	whitelist	whitelist
		p	4	blacklist	blacklist
		p	5	tries	tries
		p	6	spreadX	spreadX
		p	7	spreadY	spreadY
		p	8	spreadZ	spreadZ
		p	9	canReplace	canReplace
		p	10	project	project
		p	11	needsWater	needsWater
c	cog$a	net/minecraft/world/gen/feature/RandomPatchFeatureConfig$Builder
	f	Lcpo;	a	stateProvider
	f	Lcmy;	b	blockPlacer
	f	Ljava/util/Set;	c	whitelist
	f	Ljava/util/Set;	d	blacklist
	f	I	e	tries
	f	I	f	spreadX
	f	I	g	spreadY
	f	I	h	spreadZ
	f	Z	i	canReplace
	f	Z	j	project
	f	Z	k	needsWater
	m	(Lcpo;Lcmy;)V	<init>	<init>
		p	1	stateProvider	stateProvider
		p	2	blockPlacer	blockPlacer
	m	()Lcog$a;	a	canReplace
	m	(I)Lcog$a;	a	tries
		p	1	tries	tries
	m	(Ljava/util/Set;)Lcog$a;	a	whitelist
		p	1	whitelist	whitelist
	m	(I)Lcog$a;	b	spreadX
		p	1	spreadX	spreadX
	m	()Lcog$a;	b	cannotProject
	m	(Ljava/util/Set;)Lcog$a;	b	blacklist
		p	1	blacklist	blacklist
	m	()Lcog$a;	c	needsWater
	m	(I)Lcog$a;	c	spreadY
		p	1	spreadY	spreadY
	m	(I)Lcog$a;	d	spreadZ
		p	1	spreadZ	spreadZ
	m	()Lcog;	d	build
c	coh	net/minecraft/world/gen/feature/RandomRandomFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	I	c	count
	m	(Ljava/util/List;I)V	<init>	<init>
		p	1	features	features
		p	2	count	count
c	coi	net/minecraft/world/gen/feature/EmeraldOreFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	target
	f	Lcfj;	c	state
	m	(Lcfj;Lcfj;)V	<init>	<init>
		p	1	target	target
		p	2	state	state
c	coj	net/minecraft/world/gen/feature/NetherrackReplaceBlobsFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	target
	f	Lcfj;	c	state
	f	Lgr;	d	minReachPos
	f	Lgr;	e	maxReachPos
	m	(Lcfj;Lcfj;Lgr;Lgr;)V	<init>	<init>
		p	1	target	target
		p	2	state	state
		p	3	minReachPos	minReachPos
		p	4	maxReachPos	maxReachPos
c	coj$a	net/minecraft/world/gen/feature/NetherrackReplaceBlobsFeatureConfig$Builder
	f	Lcfj;	a	target
	f	Lcfj;	b	state
	f	Lgr;	c	minReachPos
	f	Lgr;	d	maxReachPos
	m	()Lcoj;	a	build
	m	(Lcfj;)Lcoj$a;	a	target
		p	1	target	target
	m	(Lgr;)Lcoj$a;	a	minReachPos
		p	1	minReachPos	minReachPos
	m	(Lcfj;)Lcoj$a;	b	state
		p	1	state	state
	m	(Lgr;)Lcoj$a;	b	maxReachPos
		p	1	maxReachPos	maxReachPos
c	cok	net/minecraft/world/gen/feature/RuinedPortalFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcly$b;	b	portalType
	m	(Lcly$b;)V	<init>	<init>
		p	1	type	type
c	col	net/minecraft/world/gen/feature/SeagrassFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	count
	f	D	c	tallSeagrassProbability
	m	(ID)V	<init>	<init>
		p	1	count	count
		p	2	tallSeagrassProbability	tallSeagrassProbability
c	com	net/minecraft/world/gen/feature/ShipwreckFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	isBeached
	m	(Z)V	<init>	<init>
		p	1	isBeached	isBeached
c	com/mojang/blaze3d/platform/GLX	com/mojang/blaze3d/platform/GLX
	m	(Ldgy;)I	_getRefreshRate	_getRefreshRate
		p	0	window	window
	m	(IZ)V	_init	_init
		p	0	debugVerbosity	debugVerbosity
		p	1	debugSync	debugSync
	m	(IZZZ)V	_renderCrosshair	_renderCrosshair
		p	0	size	size
		p	1	drawX	drawX
		p	2	drawY	drawY
		p	3	drawZ	drawZ
	m	(Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V	_setGlfwErrorCallback	_setGlfwErrorCallback
		p	0	callback	callback
	m	(Ldgy;)Z	_shouldClose	_shouldClose
		p	0	window	window
	m	(I)Ljava/lang/String;	getErrorString	getErrorString
		p	0	code	code
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	make	make
		p	0	factory	factory
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	make	make
		p	0	object	object
		p	1	initializer	initializer
c	com/mojang/blaze3d/systems/RenderSystem	com/mojang/blaze3d/systems/RenderSystem
	m	(I)V	activeTexture	activeTexture
		p	0	texture	texture
	m	(IF)V	alphaFunc	alphaFunc
		p	0	func	func
		p	1	ref	ref
	m	(Ljava/util/function/Supplier;)V	assertThread	assertThread
		p	0	check	check
	m	(I)V	bindTexture	bindTexture
		p	0	texture	texture
	m	(FFFF)V	blendColor	blendColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(I)V	blendEquation	blendEquation
		p	0	mode	mode
	m	(II)V	blendFunc	blendFunc
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
	m	(Ldgl$q;Ldgl$j;)V	blendFunc	blendFunc
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
	m	(IIII)V	blendFuncSeparate	blendFuncSeparate
		p	0	srcFactorRGB	srcFactorRGB
		p	1	dstFactorRGB	dstFactorRGB
		p	2	srcFactorAlpha	srcFactorAlpha
		p	3	dstFactorAlpha	dstFactorAlpha
	m	(Ldgl$q;Ldgl$j;Ldgl$q;Ldgl$j;)V	blendFuncSeparate	blendFuncSeparate
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
		p	2	srcAlpha	srcAlpha
		p	3	dstAlpha	dstAlpha
	m	(IZ)V	clear	clear
		p	0	mask	mask
		p	1	getError	getError
	m	(FFFF)V	clearColor	clearColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(D)V	clearDepth	clearDepth
		p	0	depth	depth
	m	(FFF)V	color3f	color3f
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
	m	(FFFF)V	color4f	color4f
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(ZZZZ)V	colorMask	colorMask
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(II)V	colorMaterial	colorMaterial
		p	0	face	face
		p	1	mode	mode
	m	(I)V	deleteTexture	deleteTexture
		p	0	texture	texture
	m	(I)V	depthFunc	depthFunc
		p	0	func	func
	m	(Z)V	depthMask	depthMask
		p	0	mask	mask
	m	(III)V	drawArrays	drawArrays
		p	0	mode	mode
		p	1	first	first
		p	2	count	count
	m	(J)V	flipFrame	flipFrame
		p	0	window	window
	m	(IFFFF)V	fog	fog
		p	0	pname	pname
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(F)V	fogDensity	fogDensity
		p	0	density	density
	m	(F)V	fogEnd	fogEnd
		p	0	end	end
	m	(Ldgl$m;)V	fogMode	fogMode
		p	0	mode	mode
	m	(F)V	fogStart	fogStart
		p	0	start	start
	m	(ILjava/util/function/Consumer;)V	getString	getString
		p	0	name	name
		p	1	consumer	consumer
	m	(ILjava/util/function/Supplier;)V	glBindBuffer	glBindBuffer
		p	0	target	target
		p	1	buffer	buffer
	m	(ILjava/nio/ByteBuffer;I)V	glBufferData	glBufferData
		p	0	target	target
		p	1	data	data
		p	2	usage	usage
	m	(I)V	glDeleteBuffers	glDeleteBuffers
		p	0	buffer	buffer
	m	(Ljava/util/function/Consumer;)V	glGenBuffers	glGenBuffers
		p	0	consumer	consumer
	m	(IFF)V	glMultiTexCoord2f	glMultiTexCoord2f
		p	0	texture	texture
		p	1	s	s
		p	2	t	t
	m	(ILjava/nio/IntBuffer;)V	glUniform1	glUniform1
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform1	glUniform1
		p	0	location	location
		p	1	value	value
	m	(II)V	glUniform1i	glUniform1i
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/IntBuffer;)V	glUniform2	glUniform2
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform2	glUniform2
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/IntBuffer;)V	glUniform3	glUniform3
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform3	glUniform3
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform4	glUniform4
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/IntBuffer;)V	glUniform4	glUniform4
		p	0	location	location
		p	1	value	value
	m	(IZLjava/nio/FloatBuffer;)V	glUniformMatrix2	glUniformMatrix2
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(IZLjava/nio/FloatBuffer;)V	glUniformMatrix3	glUniformMatrix3
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(IZLjava/nio/FloatBuffer;)V	glUniformMatrix4	glUniformMatrix4
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(Z)V	initGameThread	initGameThread
		p	0	assertNotRenderThread	assertNotRenderThread
	m	(IZ)V	initRenderer	initRenderer
		p	0	debugVerbosity	debugVerbosity
		p	1	debugSync	debugSync
	m	(I)V	limitDisplayFPS	limitDisplayFPS
		p	0	fps	fps
	m	(F)V	lineWidth	lineWidth
		p	0	width	width
	m	(Ldgl$o;)V	logicOp	logicOp
		p	0	op	op
	m	(I)V	matrixMode	matrixMode
		p	0	mode	mode
	m	(Lb;)V	multMatrix	multMatrix
		p	0	matrix	matrix
	m	(FFF)V	normal3f	normal3f
		p	0	nx	nx
		p	1	ny	ny
		p	2	nz	nz
	m	(DDDDDD)V	ortho	ortho
		p	0	l	l
		p	2	r	r
		p	4	b	b
		p	6	t	t
		p	8	n	n
		p	10	f	f
	m	(II)V	pixelStore	pixelStore
		p	0	pname	pname
		p	1	param	param
	m	(FF)V	polygonOffset	polygonOffset
		p	0	factor	factor
		p	1	units	units
	m	(IIIIIILjava/nio/ByteBuffer;)V	readPixels	readPixels
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
		p	4	format	format
		p	5	type	type
		p	6	pixels	pixels
	m	(Ldgd;)V	recordRenderCall	recordRenderCall
		p	0	renderCall	renderCall
	m	(I)V	renderCrosshair	renderCrosshair
		p	0	size	size
	m	(FFFF)V	rotatef	rotatef
		p	0	angle	angle
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(DDD)V	scaled	scaled
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(FFF)V	scalef	scalef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V	setErrorCallback	setErrorCallback
		p	0	callback	callback
	m	(IIII)V	setupDefaultState	setupDefaultState
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
	m	(Ljava/util/function/IntSupplier;I)V	setupOverlayColor	setupOverlayColor
		p	0	texture	texture
		p	1	size	size
	m	(I)V	shadeModel	shadeModel
		p	0	mode	mode
	m	(III)V	stencilFunc	stencilFunc
		p	0	func	func
		p	1	ref	ref
		p	2	mask	mask
	m	(III)V	stencilOp	stencilOp
		p	0	sfail	sfail
		p	1	dpfail	dpfail
		p	2	dppass	dppass
	m	(III)V	texParameter	texParameter
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(DDD)V	translated	translated
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(FFF)V	translatef	translatef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(IIII)V	viewport	viewport
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
c	coo	net/minecraft/world/gen/feature/SimpleBlockFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	toPlace
	f	Ljava/util/List;	c	placeOn
	f	Ljava/util/List;	d	placeIn
	f	Ljava/util/List;	e	placeUnder
c	cop	net/minecraft/world/gen/feature/SimpleRandomFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	features	features
c	coq	net/minecraft/world/gen/feature/EndSpikeFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	crystalInvulnerable
	f	Ljava/util/List;	c	spikes
	f	Lfu;	d	crystalBeamTarget
	m	(ZLjava/util/List;Lfu;)V	<init>	<init>
		p	1	crystalInvulnerable	crystalInvulnerable
		p	2	spikes	spikes
		p	3	crystalBeamTarget	crystalBeamTarget
	m	()Z	a	isCrystalInvulnerable
	m	()Ljava/util/List;	b	getSpikes
	m	()Lfu;	c	getPos
c	cor	net/minecraft/world/gen/feature/SpringFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcxa;	b	state
	f	Z	c	requiresBlockBelow
	f	I	d	rockCount
	f	I	e	holeCount
	f	Ljava/util/Set;	f	validBlocks
	m	(Lcxa;ZIILjava/util/Set;)V	<init>	<init>
		p	1	state	state
		p	2	requiresBlockBelow	requiresBlockBelow
		p	3	rockCount	rockCount
		p	4	holeCount	holeCount
		p	5	validBlocks	validBlocks
c	cos	net/minecraft/world/gen/chunk/StrongholdConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	distance
	f	I	c	spread
	f	I	d	count
	m	(III)V	<init>	<init>
		p	1	distance	distance
		p	2	spread	spread
		p	3	count	count
	m	()I	a	getDistance
	m	()I	b	getSpread
	m	()I	c	getCount
c	cot	net/minecraft/world/gen/chunk/StructureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
	m	(III)V	<init>	<init>
		p	1	spacing	spacing
		p	2	separation	separation
		p	3	salt	salt
	m	()I	a	getSpacing
	m	()I	b	getSeparation
	m	()I	c	getSalt
c	cou	net/minecraft/world/gen/feature/TreeFeatureConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpo;	b	trunkProvider
	f	Lcpo;	c	leavesProvider
	f	Ljava/util/List;	d	decorators
	f	Z	e	skipFluidCheck
	f	Lcpg;	f	foliagePlacer
	f	Lcqw;	g	trunkPlacer
	f	Lcow;	h	minimumSize
	f	I	i	maxWaterDepth
	f	Z	j	ignoreVines
	f	Lcio$a;	l	heightmap
	m	(Lcpo;Lcpo;Lcpg;Lcqw;Lcow;Ljava/util/List;IZLcio$a;)V	<init>	<init>
		p	1	trunkProvider	trunkProvider
		p	2	leavesProvider	leavesProvider
		p	3	foliagePlacer	foliagePlacer
		p	4	trunkPlacer	trunkPlacer
		p	5	minimumSize	minimumSize
		p	6	decorators	decorators
		p	7	maxWaterDepth	maxWaterDepth
		p	8	ignoreVines	ignoreVines
		p	9	heightmap	heightmap
	m	(Ljava/util/List;)Lcou;	a	setTreeDecorators
		p	1	decorators	decorators
	m	()V	a	ignoreFluidCheck
c	cou$a	net/minecraft/world/gen/feature/TreeFeatureConfig$Builder
	f	Lcpo;	a	trunkProvider
	f	Lcpo;	b	leavesProvider
	f	Lcpg;	c	foliagePlacer
	f	Lcqw;	d	trunkPlacer
	f	Lcow;	e	minimumSize
	f	Ljava/util/List;	f	decorators
	f	I	g	maxWaterDepth
	f	Z	h	ignoreVines
	f	Lcio$a;	i	heightmap
	m	(Lcpo;Lcpo;Lcpg;Lcqw;Lcow;)V	<init>	<init>
		p	1	trunkProvider	trunkProvider
		p	2	leavesProvider	leavesProvider
		p	3	foliagePlacer	foliagePlacer
		p	4	trunkPlacer	trunkPlacer
		p	5	minimumSize	minimumSize
	m	(Ljava/util/List;)Lcou$a;	a	decorators
		p	1	decorators	decorators
	m	()Lcou$a;	a	ignoreVines
	m	(I)Lcou$a;	a	maxWaterDepth
		p	1	maxWaterDepth	maxWaterDepth
	m	(Lcio$a;)Lcou$a;	a	heightmap
		p	1	heightmap	heightmap
	m	()Lcou;	b	build
c	cow	net/minecraft/world/gen/feature/size/FeatureSize
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/OptionalInt;	b	minClippedHeight
	m	(Ljava/util/OptionalInt;)V	<init>	<init>
		p	1	minClippedHeight	minClippedHeight
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	createCodecBuilder
	m	()Lcox;	b	getType
	m	()Ljava/util/OptionalInt;	c	getMinClippedHeight
c	cox	net/minecraft/world/gen/feature/size/FeatureSizeType
	f	Lcom/mojang/serialization/Codec;	c	codec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcox;	a	register
		p	0	id	id
	m	()Lcom/mojang/serialization/Codec;	a	getCodec
c	coy	net/minecraft/world/gen/feature/size/ThreeLayersFeatureSize
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	limit
	f	I	e	upperLimit
	f	I	f	lowerSize
	f	I	g	middleSize
	f	I	h	upperSize
	m	(IIIIILjava/util/OptionalInt;)V	<init>	<init>
		p	1	limit	limit
		p	2	upperLimit	upperLimit
		p	3	lowerSize	lowerSize
		p	4	middleSize	middleSize
		p	5	upperSize	upperSize
		p	6	minClippedHeight	minClippedHeight
c	coz	net/minecraft/world/gen/feature/size/TwoLayersFeatureSize
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	limit
	f	I	e	lowerSize
	f	I	f	upperSize
	m	(III)V	<init>	<init>
		p	1	limit	limit
		p	2	lowerSize	lowerSize
		p	3	upperSize	upperSize
	m	(IIILjava/util/OptionalInt;)V	<init>	<init>
		p	1	limit	limit
		p	2	lowerSize	lowerSize
		p	3	upperSize	upperSize
		p	4	minClippedHeight	minClippedHeight
c	cp	net/minecraft/advancement/criterion/VillagerTradeCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcp$a;	a	conditionsFromJson
	m	(Lze;Lbdk;Lbki;)V	a	handle
		p	1	player	player
		p	2	trader	trader
		p	3	stack	stack
c	cp$a	net/minecraft/advancement/criterion/VillagerTradeCriterion$Conditions
	f	Lbe$b;	a	villager
	f	Lbo;	b	item
	m	(Lbe$b;Lbe$b;Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	villager	villager
		p	3	item	item
	m	(Ldat;Lbki;)Z	a	matches
		p	1	traderContext	traderContext
		p	2	stack	stack
	m	()Lcp$a;	c	any
c	cpb	net/minecraft/world/gen/foliage/AcaciaFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cpc	net/minecraft/world/gen/foliage/BlobFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	cpd	net/minecraft/world/gen/foliage/BushFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cpe	net/minecraft/world/gen/foliage/DarkOakFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cpf	net/minecraft/world/gen/foliage/LargeOakFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cpg	net/minecraft/world/gen/foliage/FoliagePlacer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	radius
	f	I	f	randomRadius
	f	I	g	offset
	f	I	h	randomOffset
	m	(IIII)V	<init>	<init>
		p	1	radius	radius
		p	2	randomRadius	randomRadius
		p	3	offset	offset
		p	4	randomOffset	randomOffset
	m	(Ljava/util/Random;IIIIZ)Z	a	isInvalidForLeaves
		p	2	baseHeight	baseHeight
		p	3	dx	dx
		p	4	dy	dy
		p	5	dz	dz
	m	(Lbqf;Ljava/util/Random;Lcou;ILcpg$b;IILjava/util/Set;ILctd;)V	a	generate
		c	This is the main method used to generate foliage.
		p	1	world	world
		p	2	random	random
		p	3	config	config
		p	4	trunkHeight	trunkHeight
		p	6	foliageHeight	foliageHeight
		p	7	radius	radius
		p	8	leaves	leaves
	m	(Lbqf;Ljava/util/Random;Lcou;Lfu;ILjava/util/Set;IZLctd;)V	a	generate
		p	1	world	world
		p	2	random	random
		p	3	config	config
		p	5	baseHeight	baseHeight
		p	8	giantTrunk	giantTrunk
	m	(Ljava/util/Random;I)I	a	getRadius
		p	1	random	random
		p	2	baseHeight	baseHeight
	m	(Ljava/util/Random;ILcou;)I	a	getHeight
		p	1	random	random
		p	2	trunkHeight	trunkHeight
		p	3	config	config
	m	()Lcph;	a	getType
	m	(Lbqf;Ljava/util/Random;Lcou;ILcpg$b;IILjava/util/Set;Lctd;)V	a	generate
		p	1	world	world
		p	3	config	config
		p	4	trunkHeight	trunkHeight
		p	6	foliageHeight	foliageHeight
		p	7	radius	radius
		p	8	leaves	leaves
c	cpg$b	net/minecraft/world/gen/foliage/FoliagePlacer$TreeNode
	c	A point on a tree to generate foliage around
	f	Lfu;	a	center
	f	I	b	foliageRadius
	f	Z	c	giantTrunk
	m	(Lfu;IZ)V	<init>	<init>
		p	1	center	center
		p	2	foliageRadius	foliageRadius
		p	3	giantTrunk	giantTrunk
	m	()Lfu;	a	getCenter
	m	()I	b	getFoliageRadius
	m	()Z	c	isGiantTrunk
		c	Whether this node is the top of a giant (2x2 block) trunk
c	cph	net/minecraft/world/gen/foliage/FoliagePlacerType
	f	Lcom/mojang/serialization/Codec;	j	codec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcph;	a	register
		p	0	id	id
		p	1	codec	codec
	m	()Lcom/mojang/serialization/Codec;	a	getCodec
c	cpi	net/minecraft/world/gen/feature/JungleFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	cpj	net/minecraft/world/gen/feature/MegaPineFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	heightRange
	f	I	c	crownHeight
c	cpk	net/minecraft/world/gen/foliage/PineFoliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	I	c	randomHeight
c	cpl	net/minecraft/world/gen/foliage/SpruceFoliagePlacer
	f	I	b	trunkHeight
	f	I	c	randomTrunkHeight
c	cpo	net/minecraft/world/gen/stateprovider/BlockStateProvider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Random;Lfu;)Lcfj;	a	getBlockState
		p	1	random	random
		p	2	pos	pos
	m	()Lcpp;	a	getType
c	cpp	net/minecraft/world/gen/stateprovider/BlockStateProviderType
	f	Lcom/mojang/serialization/Codec;	f	codec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcpp;	a	register
		p	0	id	id
	m	()Lcom/mojang/serialization/Codec;	a	getCodec
c	cpq	net/minecraft/world/gen/stateprovider/ForestFlowerBlockStateProvider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcpq;	c	INSTANCE
	f	[Lcfj;	d	FLOWERS
c	cpr	net/minecraft/world/gen/stateprovider/PlainsFlowerBlockStateProvider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcpr;	c	INSTANCE
	f	[Lcfj;	d	TULIPS
	f	[Lcfj;	e	FLOWERS
c	cps	net/minecraft/world/gen/stateprovider/PillarBlockStateProvider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lbvr;	c	block
	m	(Lbvr;)V	<init>	<init>
		p	1	block	block
c	cpt	net/minecraft/world/gen/stateprovider/SimpleBlockStateProvider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcfj;	c	state
c	cpu	net/minecraft/world/gen/stateprovider/WeightedBlockStateProvider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Latb;	c	states
	m	(Latb;)V	<init>	<init>
		p	1	states	states
	m	(Lcfj;I)Lcpu;	a	addState
		p	1	state	state
		p	2	weight	weight
c	cpw	net/minecraft/structure/pool/EmptyPoolElement
	f	Lcpw;	b	INSTANCE
c	cpx	net/minecraft/structure/pool/FeaturePoolElement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lckb;	b	feature
	f	Lle;	c	tag
	m	(Lckb;)V	<init>	<init>
		p	1	feature	feature
	m	(Lcva;Lcap;)Lfu;	a	getStart
	m	()Lle;	b	createDefaultJigsawTag
c	cpy	net/minecraft/structure/JigsawJunction
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Lcqf$a;	e	destProjection
	m	(IIIILcqf$a;)V	<init>	<init>
		p	1	sourceX	sourceX
		p	2	sourceGroundY	sourceGroundY
		p	3	sourceZ	sourceZ
		p	4	deltaY	deltaY
		p	5	destProjection	destProjection
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	()I	a	getSourceX
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	cpz	net/minecraft/structure/pool/StructurePoolBasedGenerator
	f	Lcqg;	a	REGISTRY
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	()V	a	init
	m	(Luh;ILcpz$a;Lcha;Lcva;Lfu;Ljava/util/List;Ljava/util/Random;ZZ)V	a	addPieces
		p	0	startPoolId	startPoolId
		p	1	size	size
		p	3	chunkGenerator	chunkGenerator
c	cpz$a	net/minecraft/structure/pool/StructurePoolBasedGenerator$PieceFactory
	m	(Lcva;Lcqd;Lfu;ILcap;Lctd;)Lcts;	create	create
		p	1	structureManager	structureManager
		p	2	poolElement	poolElement
		p	3	pos	pos
		p	5	rotation	rotation
		p	6	elementBounds	elementBounds
c	cpz$b	net/minecraft/structure/pool/StructurePoolBasedGenerator$ShapedPoolStructurePiece
	f	Lcts;	a	piece
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	b	pieceShape
	f	I	c	minY
	f	I	d	currentSize
	m	(Lcts;Lorg/apache/commons/lang3/mutable/MutableObject;II)V	<init>	<init>
		p	1	piece	piece
		p	3	minY	minY
		p	4	currentSize	currentSize
c	cpz$c	net/minecraft/structure/pool/StructurePoolBasedGenerator$StructurePoolGenerator
	f	I	a	maxSize
	f	Lcpz$a;	b	pieceFactory
	f	Lcha;	c	chunkGenerator
	f	Lcva;	d	structureManager
	f	Ljava/util/List;	e	children
	f	Ljava/util/Random;	f	random
	f	Ljava/util/Deque;	g	structurePieces
	m	(Lcts;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V	a	generatePiece
		p	1	piece	piece
		p	3	minY	minY
		p	4	currentSize	currentSize
c	cq	net/minecraft/advancement/criterion/UsedEnderEyeCriterion
	f	Luh;	a	ID
	m	(Lze;Lfu;)V	a	trigger
		p	1	player	player
		p	2	strongholdPos	strongholdPos
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcq$a;	a	conditionsFromJson
c	cq$a	net/minecraft/advancement/criterion/UsedEnderEyeCriterion$Conditions
	f	Lbx$c;	a	distance
	m	(Lbe$b;Lbx$c;)V	<init>	<init>
		p	1	player	player
		p	2	distance	distance
	m	(D)Z	a	matches
		p	1	distance	distance
c	cqa	net/minecraft/structure/pool/LegacySinglePoolElement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cqb	net/minecraft/structure/pool/ListPoolElement
	f	Ljava/util/List;	b	elements
	m	(Lcqf$a;)V	b	setAllElementsProjection
c	cqc	net/minecraft/structure/pool/SinglePoolElement
	f	Lcom/google/common/collect/ImmutableList;	d	processors
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
		p	1	location	location
		p	2	processors	processors
	m	(Lcap;Lctd;Z)Lcvb;	a	createPlacementData
		p	3	keepJigsaws	keepJigsaws
	m	(Lcva;Lfu;Lcap;Z)Ljava/util/List;	a	getDataStructureBlocks
		p	4	mirroredAndRotated	mirroredAndRotated
c	cqd	net/minecraft/structure/pool/StructurePoolElement
	f	Lcqf$a;	a	projection
	m	(Lcva;Lfu;Lcap;)Lctd;	a	getBoundingBox
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	rotation	rotation
	m	(Lcva;Lbqu;Lbqq;Lcha;Lfu;Lfu;Lcap;Lctd;Ljava/util/Random;Z)Z	a	generate
		p	1	structureManager	structureManager
		p	10	keepJigsaws	keepJigsaws
	m	(Lcqf$a;)Lcqd;	a	setProjection
		p	1	projection	projection
	m	()Lcqe;	a	getType
	m	(Lcva;Lfu;Lcap;Ljava/util/Random;)Ljava/util/List;	a	getStructureBlockInfos
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	rotation	rotation
		p	4	random	random
	m	()Lcqf$a;	e	getProjection
	m	()I	f	getGroundLevelDelta
c	cqe	net/minecraft/structure/pool/StructurePoolElementType
c	cqf	net/minecraft/structure/pool/StructurePool
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcqf;	b	EMPTY
	f	Lcqf;	c	INVALID
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Luh;	e	id
	f	Lcom/google/common/collect/ImmutableList;	f	elementCounts
	f	Ljava/util/List;	g	elements
	f	Luh;	h	terminatorsId
	f	Lcqf$a;	i	projection
	f	I	j	highestY
	m	(Luh;Luh;Ljava/util/List;Lcqf$a;)V	<init>	<init>
		p	1	id	id
		p	2	terminatorsId	terminatorsId
		p	3	elementCounts	elementCounts
		p	4	projection	projection
	m	(Lcva;)I	a	getHighestY
	m	(Ljava/util/Random;)Lcqd;	a	getRandomElement
		p	1	random	random
	m	()Luh;	a	getTerminatorsId
	m	()Luh;	b	getId
	m	(Ljava/util/Random;)Ljava/util/List;	b	getElementIndicesInRandomOrder
		p	1	random	random
	m	()I	c	getElementCount
c	cqf$a	net/minecraft/structure/pool/StructurePool$Projection
	f	Ljava/util/Map;	d	PROJECTIONS_BY_ID
	f	Ljava/lang/String;	e	id
	f	Lcom/google/common/collect/ImmutableList;	f	processors
	m	(Ljava/lang/String;)Lcqf$a;	a	getById
		p	0	id	id
	m	()Ljava/lang/String;	b	getId
	m	()Lcom/google/common/collect/ImmutableList;	c	getProcessors
c	cqg	net/minecraft/structure/pool/StructurePoolRegistry
	f	Ljava/util/Map;	a	pools
	m	(Lcqf;)V	a	add
		p	1	pool	pool
	m	(Luh;)Lcqf;	a	get
		p	1	id	id
c	cqi	net/minecraft/world/gen/decorator/AlterGroundTreeDecorator
c	cqj	net/minecraft/world/gen/decorator/BeehiveTreeDecorator
	f	F	b	chance
c	cqk	net/minecraft/world/gen/decorator/CocoaBeansTreeDecorator
c	cql	net/minecraft/world/gen/decorator/LeaveVineTreeDecorator
c	cqm	net/minecraft/world/gen/decorator/TreeDecorator
	c	Tree decorators can add additional blocks to trees, such as vines or beehives.
	m	()Lcqn;	a	getType
	m	(Lbqh;Lfu;Lcfj;Ljava/util/Set;Lctd;)V	a	setBlockStateAndEncompassPosition
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	5	box	box
	m	(Lbqc;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lctd;)V	a	generate
		p	1	world	world
		p	2	random	random
		p	3	logPositions	logPositions
		p	4	leavesPositions	leavesPositions
		p	6	box	box
	m	(Lbqh;Lfu;Lcga;Ljava/util/Set;Lctd;)V	a	placeVine
		p	1	world	world
		p	2	pos	pos
		p	3	directionProperty	directionProperty
		p	5	box	box
c	cqn	net/minecraft/world/gen/decorator/TreeDecoratorType
c	cqo	net/minecraft/world/gen/decorator/TrunkVineTreeDecorator
c	cqq	net/minecraft/world/gen/trunk/DarkOakTrunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cqr	net/minecraft/world/gen/trunk/LargeOakTrunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lbqf;Ljava/util/Random;ILfu;Ljava/util/List;Ljava/util/Set;Lctd;Lcou;)V	a	makeBranches
		p	1	world	world
		p	3	treeHeight	treeHeight
		p	4	treePos	treePos
		p	5	branches	branches
		p	8	config	config
	m	(II)Z	a	isHighEnough
		p	1	treeHeight	treeHeight
		p	2	height	height
	m	(Lfu;Lfu;)Lfz$a;	a	getLogAxis
		p	1	branchStart	branchStart
		p	2	branchEnd	branchEnd
	m	(Lfu;)I	a	getLongestSide
		p	1	offset	offset
	m	(Lbqf;Ljava/util/Random;Lfu;Lfu;ZLjava/util/Set;Lctd;Lcou;)Z	a	makeOrCheckBranch
		p	1	world	world
		p	3	start	start
		p	4	end	end
		p	5	make	make
		p	8	config	config
c	cqr$a	net/minecraft/world/gen/trunk/LargeOakTrunkPlacer$BranchPosition
	f	Lcpg$b;	a	node
	f	I	b	endY
	m	(Lfu;I)V	<init>	<init>
		p	1	pos	pos
		p	2	width	width
	m	()I	a	getEndY
c	cqs	net/minecraft/world/gen/trunk/ForkingTrunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cqt	net/minecraft/world/gen/trunk/GiantTrunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cqu	net/minecraft/world/gen/trunk/MegaJungleTrunkPlacer
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	cqv	net/minecraft/world/gen/trunk/StraightTrunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cqw	net/minecraft/world/gen/trunk/TrunkPlacer
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	baseHeight
	f	I	e	firstRandomHeight
	f	I	f	secondRandomHeight
	m	(III)V	<init>	<init>
		p	1	baseHeight	baseHeight
		p	2	firstRandomHeight	firstRandomHeight
		p	3	secondRandomHeight	secondRandomHeight
	m	()Lcqx;	a	getType
	m	(Lbqf;Ljava/util/Random;ILfu;Ljava/util/Set;Lctd;Lcou;)Ljava/util/List;	a	generate
		c	Generates the trunk blocks and return a list of tree nodes to place foliage around
		p	1	world	world
		p	2	random	random
		p	3	trunkHeight	trunkHeight
		p	4	pos	pos
	m	(Ljava/util/Random;)I	a	getHeight
		p	1	random	random
c	cqx	net/minecraft/world/gen/trunk/TrunkPlacerType
	f	Lcom/mojang/serialization/Codec;	g	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcqx;	a	register
		p	0	id	id
	m	()Lcom/mojang/serialization/Codec;	a	getCodec
c	cqz	net/minecraft/world/gen/chunk/FlatChunkGeneratorLayer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	blockState
	f	I	c	thickness
	f	I	d	startY
	m	(ILbvr;)V	<init>	<init>
		p	1	thickness	thickness
		p	2	block	block
	m	()I	a	getThickness
	m	(I)V	a	setStartY
		p	1	startY	startY
	m	()Lcfj;	b	getBlockState
	m	()I	c	getStartY
c	cr	net/minecraft/advancement/criterion/UsedTotemCriterion
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lbe$b;Lav;)Lcr$a;	a	conditionsFromJson
	m	(Lze;Lbki;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
c	cr$a	net/minecraft/advancement/criterion/UsedTotemCriterion$Conditions
	f	Lbo;	a	item
	m	(Lbe$b;Lbo;)V	<init>	<init>
		p	1	player	player
		p	2	item	item
	m	(Lbki;)Z	a	matches
		p	1	stack	stack
	m	(Lbqa;)Lcr$a;	a	create
		p	0	item	item
c	cra	net/minecraft/world/gen/chunk/FlatChunkGeneratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lckb;	c	WATER_LAKE
	f	Lckb;	d	LAVA_LAKE
	f	Ljava/util/Map;	e	STRUCTURE_TO_FEATURES
	f	Lciw;	f	config
	f	Ljava/util/List;	g	layers
	f	Lbre;	h	biome
	f	[Lcfj;	i	layerBlocks
	f	Z	j	hasNoTerrain
	m	(Lciw;)V	<init>	<init>
		p	1	config	config
	m	(Lbre;)V	a	setBiome
	m	()Lciw;	d	getConfig
	m	()Lbre;	e	getBiome
	m	()Ljava/util/List;	f	getLayers
	m	()[Lcfj;	g	getLayerBlocks
	m	()V	h	updateLayerBlocks
	m	()Lcra;	i	getDefaultConfig
c	crd	net/minecraft/world/gen/decorator/CarvingMaskDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcre;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cre	net/minecraft/world/gen/decorator/CarvingMaskDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcin$a;	b	step
	f	F	c	probability
	m	(Lcin$a;F)V	<init>	<init>
		p	1	step	step
		p	2	probability	probability
c	crf	net/minecraft/world/gen/decorator/ChanceDecoratorConfig
	f	I	b	chance
	m	(I)V	<init>	<init>
		p	1	chance	chance
c	crg	net/minecraft/world/gen/decorator/ChanceHeightmapDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crh	net/minecraft/world/gen/decorator/ChanceHeightmapDoubleDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cri	net/minecraft/world/gen/decorator/ChancePassthroughDecorator
	m	(Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crj	net/minecraft/world/gen/decorator/ChanceTopSolidHeightmapDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crk	net/minecraft/world/gen/decorator/ChorusPlantDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcnz;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crl	net/minecraft/world/gen/decorator/ConfiguredDecorator
	f	Lcsc;	b	decorator
	f	Lcnn;	c	config
	m	(Lcsc;Lcnn;)V	<init>	<init>
		p	1	decorator	decorator
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lckb;)Z	a	generate
c	crm	net/minecraft/world/gen/decorator/CountBiasedRangeDecorator
	m	(Ljava/util/Random;Lcnl;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crn	net/minecraft/world/gen/decorator/CountChanceHeightmapDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcse;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cro	net/minecraft/world/gen/decorator/CountChanceHeightmapDoubleDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcse;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crp	net/minecraft/world/gen/decorator/CountDepthAverageDecorator
	m	(Ljava/util/Random;Lcry;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crq	net/minecraft/world/gen/decorator/CountHeightmapDoubleDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crr	net/minecraft/world/gen/decorator/CountHeight64Decorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crs	net/minecraft/world/gen/decorator/CountHeightmap32Decorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crt	net/minecraft/world/gen/decorator/CountHeightmapDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cru	net/minecraft/world/gen/decorator/CountTopSolidDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crv	net/minecraft/world/gen/decorator/CountVeryBiasedRangeDecorator
	m	(Ljava/util/Random;Lcnl;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crw	net/minecraft/world/gen/decorator/CountExtraHeightmapDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsg;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	crx	net/minecraft/world/gen/decorator/DarkOakTreeDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcnz;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cry	net/minecraft/world/gen/decorator/CountDepthDecoratorConfig
	f	I	b	count
	f	I	c	baseline
	f	I	d	spread
	m	(III)V	<init>	<init>
		p	1	count	count
		p	2	baseline	baseline
		p	3	spread	spread
c	crz	net/minecraft/world/gen/decorator/EmeraldOreDecorator
	m	(Ljava/util/Random;Lcnz;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cs	net/minecraft/command/FloatRangeArgument
	f	Lcs;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ONLY_INTS_EXCEPTION
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
	m	()Ljava/lang/Float;	a	getMin
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lcs;	a	parse
		p	0	reader	reader
		p	1	allowFloats	allowFloats
		p	2	transform	transform
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	mapFloat
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	parseFloat
		p	0	reader	reader
		p	1	allowFloats	allowFloats
	m	()Ljava/lang/Float;	b	getMax
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	peekDigit
		p	0	reader	reader
		p	1	allowFloats	allowFloats
c	csa	net/minecraft/world/gen/decorator/EndGatewayDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcnz;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csb	net/minecraft/world/gen/decorator/EndIslandDecorator
	m	(Ljava/util/Random;Lcnz;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csc	net/minecraft/world/gen/decorator/Decorator
	f	Lcom/mojang/serialization/Codec;	M	codec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1	configCodec	configCodec
	m	(Lbqc;Lcha;Ljava/util/Random;Lcnn;Lfu;)Ljava/util/stream/Stream;	a	getPositions
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
		p	4	config	config
		p	5	pos	pos
	m	(Lcnn;)Lcrl;	a	configure
		p	1	config	config
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lfu;Lcnn;Lckb;)Z	a	generate
	m	(Ljava/lang/String;Lcsc;)Lcsc;	a	register
		p	0	registryName	registryName
		p	1	decorator	decorator
	m	()Lcom/mojang/serialization/Codec;	a	getCodec
c	csd	net/minecraft/world/gen/decorator/ForestRockDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cse	net/minecraft/world/gen/decorator/CountChanceDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	count
	f	F	c	chance
	m	(IF)V	<init>	<init>
		p	1	count	count
		p	2	chance	chance
c	csf	net/minecraft/world/gen/decorator/CountDecoratorConfig
	f	I	b	count
	m	(I)V	<init>	<init>
		p	1	count	count
c	csg	net/minecraft/world/gen/decorator/CountExtraChanceDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	count
	f	F	c	extraChance
	f	I	d	extraCount
	m	(IFI)V	<init>	<init>
		p	1	count	count
		p	2	extraChance	extraChance
		p	3	extraCount	extraCount
c	csh	net/minecraft/world/gen/decorator/IcebergDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csi	net/minecraft/world/gen/decorator/LavaLakeDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csj	net/minecraft/world/gen/decorator/WaterLakeDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csk	net/minecraft/world/gen/decorator/DungeonsDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcrf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csl	net/minecraft/world/gen/decorator/TopSolidHeightmapNoiseBiasedDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	noiseToCountRatio
	f	D	c	noiseFactor
	f	D	d	noiseOffset
	f	Lcio$a;	e	heightmap
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	m	(IDDLcio$a;)V	<init>	<init>
		p	1	noiseToCountRatio	noiseToCountRatio
		p	2	noiseFactor	noiseFactor
		p	4	noiseOffset	noiseOffset
		p	6	heightmap	heightmap
c	csm	net/minecraft/world/gen/decorator/NoiseHeightmap32Decorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcny;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csn	net/minecraft/world/gen/decorator/NoiseHeightmapDoubleDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcny;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cso	net/minecraft/world/gen/decorator/NopeDecorator
	m	(Ljava/util/Random;Lcnz;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csp	net/minecraft/world/gen/decorator/HeightmapRangeDecoratorConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	min
	f	I	c	max
	m	(II)V	<init>	<init>
		p	1	min	min
		p	2	max	max
c	csq	net/minecraft/world/gen/decorator/SimpleDecorator
	m	(Ljava/util/Random;Lcnn;Lfu;)Ljava/util/stream/Stream;	a	getPositions
		p	1	random	random
		p	2	config	config
		p	3	pos	pos
c	csr	net/minecraft/world/gen/decorator/HeightmapDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcnz;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	css	net/minecraft/world/gen/decorator/HeightmapNoiseBiasedDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsl;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	cst	net/minecraft/world/gen/decorator/HeightmapRangeDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsp;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csu	net/minecraft/world/gen/decorator/ChanceRangeDecorator
	m	(Ljava/util/Random;Lcni;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csv	net/minecraft/world/gen/decorator/CountRangeDecorator
	m	(Ljava/util/Random;Lcnl;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csw	net/minecraft/world/gen/decorator/HellFireDecorator
	m	(Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csx	net/minecraft/world/gen/decorator/LightGemChanceDecorator
	m	(Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csy	net/minecraft/world/gen/decorator/MagmaDecorator
	m	(Lbqc;Lcha;Ljava/util/Random;Lcsf;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	csz	net/minecraft/world/gen/decorator/RandomCountRangeDecorator
	m	(Ljava/util/Random;Lcnl;Lfu;)Ljava/util/stream/Stream;	a	getPositions
c	ctc	net/minecraft/structure/VillageStructureStart
c	ctd	net/minecraft/util/math/BlockBox
	f	I	a	minX
	f	I	b	minY
	f	I	c	minZ
	f	I	d	maxX
	f	I	e	maxY
	f	I	f	maxZ
	m	([I)V	<init>	<init>
		p	1	data	data
	m	(Lctd;)V	<init>	<init>
		p	1	source	source
	m	(IIII)V	<init>	<init>
		p	1	minX	minX
		p	2	minZ	minZ
		p	3	maxX	maxX
		p	4	maxZ	maxZ
	m	(Lgr;Lgr;)V	<init>	<init>
		p	1	v1	v1
		p	2	v2	v2
	m	(IIIIII)V	<init>	<init>
		p	1	minX	minX
		p	2	minY	minY
		p	3	minZ	minZ
		p	4	maxX	maxX
		p	5	maxY	maxY
		p	6	maxZ	maxZ
	m	()Lctd;	a	empty
	m	(IIIIIIIIILfz;)Lctd;	a	rotated
		p	0	x	x
		p	1	y	y
		p	2	z	z
		p	3	offsetX	offsetX
		p	4	offsetY	offsetY
		p	5	offsetZ	offsetZ
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	facing	facing
	m	(IIII)Z	a	intersectsXZ
		p	1	minX	minX
		p	2	minZ	minZ
		p	3	maxX	maxX
		p	4	maxZ	maxZ
	m	(III)V	a	offset
		p	1	dx	dx
		p	2	dy	dy
		p	3	dz	dz
	m	(IIIIII)Lctd;	a	create
		p	0	x1	x1
		p	1	y1	y1
		p	2	z1	z1
		p	3	x2	x2
		p	4	y2	y2
		p	5	z2	z2
	m	(Lgr;)Z	b	contains
		p	1	vec	vec
	m	(Lctd;)Z	b	intersects
		p	1	other	other
	m	()Lctd;	b	infinite
	m	(III)Lctd;	b	translated
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()Lgr;	c	getDimensions
	m	(Lctd;)V	c	encompass
		p	1	region	region
	m	()I	d	getBlockCountX
	m	()I	e	getBlockCountY
	m	()I	f	getBlockCountZ
	m	()Lgr;	g	getCenter
		c	@implNote Biased toward the minimum bound corner of the box.
	m	()Lli;	h	toNbt
c	cte	net/minecraft/structure/BuriedTreasureGenerator
c	cte$a	net/minecraft/structure/BuriedTreasureGenerator$Piece
	m	(Lfu;)V	<init>	<init>
		p	1	pos	pos
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcfj;)Z	a	isLiquid
		p	1	state	state
c	ctf	net/minecraft/structure/DesertTempleGenerator
	f	[Z	e	hasPlacedChest
	m	(Ljava/util/Random;II)V	<init>	<init>
		p	1	random	random
		p	2	x	x
		p	3	z	z
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
c	ctg	net/minecraft/structure/EndCityGenerator
	f	Lcvb;	a	PLACEMENT_DATA
	f	Lcvb;	b	IGNORE_AIR_PLACEMENT_DATA
	f	Lctg$b;	c	BUILDING
	f	Ljava/util/List;	d	SMALL_TOWER_BRIDGE_ATTACHMENTS
	f	Lctg$b;	e	SMALL_TOWER
	f	Lctg$b;	f	BRIDGE_PIECE
	f	Ljava/util/List;	g	FAT_TOWER_BRIDGE_ATTACHMENTS
	f	Lctg$b;	h	FAT_TOWER
	m	(Lcva;Lfu;Lcap;Ljava/util/List;Ljava/util/Random;)V	a	addPieces
		p	0	structureManager	structureManager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
	m	(Lcva;Lctg$b;ILctg$a;Lfu;Ljava/util/List;Ljava/util/Random;)Z	b	createPart
		p	0	manager	manager
		p	1	piece	piece
		p	2	depth	depth
		p	3	parent	parent
		p	4	pos	pos
		p	5	pieces	pieces
		p	6	random	random
	m	(Lcva;Lctg$a;Lfu;Ljava/lang/String;Lcap;Z)Lctg$a;	b	createPiece
		p	0	structureManager	structureManager
		p	1	lastPiece	lastPiece
		p	2	relativePosition	relativePosition
		p	3	template	template
		p	4	rotation	rotation
		p	5	ignoreAir	ignoreAir
	m	(Ljava/util/List;Lctg$a;)Lctg$a;	b	addPiece
		p	0	pieces	pieces
		p	1	piece	piece
c	ctg$3	net/minecraft/structure/EndCityGenerator$3
	f	Z	a	shipGenerated
c	ctg$a	net/minecraft/structure/EndCityGenerator$Piece
	f	Ljava/lang/String;	d	template
	f	Lcap;	e	rotation
	f	Z	f	ignoreAir
	m	(Lcva;Ljava/lang/String;Lfu;Lcap;Z)V	<init>	<init>
		p	1	manager	manager
		p	2	template	template
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	ignoreAir	ignoreAir
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcva;)V	a	initializeStructureData
		p	1	manager	manager
c	ctg$b	net/minecraft/structure/EndCityGenerator$Part
	m	()V	a	init
	m	(Lcva;ILctg$a;Lfu;Ljava/util/List;Ljava/util/Random;)Z	a	create
		p	1	manager	manager
		p	2	depth	depth
		p	3	root	root
		p	4	pos	pos
		p	5	pieces	pieces
		p	6	random	random
c	cth	net/minecraft/structure/IglooGenerator
	f	Luh;	a	TOP_TEMPLATE
	f	Luh;	b	MIDDLE_TEMPLATE
	f	Luh;	c	BOTTOM_TEMPLATE
	m	(Lcva;Lfu;Lcap;Ljava/util/List;Ljava/util/Random;)V	a	addPieces
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
c	cth$a	net/minecraft/structure/IglooGenerator$Piece
	f	Luh;	d	template
	f	Lcap;	e	rotation
	m	(Lcva;Luh;Lfu;Lcap;I)V	<init>	<init>
		p	1	manager	manager
		p	2	identifier	identifier
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	yOffset	yOffset
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcva;)V	a	initializeStructureData
		p	1	manager	manager
c	cti	net/minecraft/structure/JungleTempleGenerator
	f	Z	e	placedMainChest
	f	Z	f	placedHiddenChest
	f	Z	g	placedTrap1
	f	Z	h	placedTrap2
	f	Lcti$a;	i	COBBLESTONE_RANDOMIZER
	m	(Ljava/util/Random;II)V	<init>	<init>
		p	1	random	random
		p	2	x	x
		p	3	z	z
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
c	cti$a	net/minecraft/structure/JungleTempleGenerator$CobblestoneRandomizer
c	ctj	net/minecraft/world/FeatureUpdater
	f	Ljava/util/Map;	a	OLD_TO_NEW
	f	Ljava/util/Map;	b	ANCIENT_TO_OLD
	f	Z	c	needsUpdate
	f	Ljava/util/Map;	d	featureIdToChunkTag
	f	Ljava/util/Map;	e	updateStates
	m	(Lle;)Lle;	a	getUpdatedReferences
	m	(Lug;Ldaa;)Lctj;	a	create
	m	(Ldaa;)V	a	init
	m	(Lle;Lbph;)Lle;	a	getUpdatedStarts
	m	(II)Z	a	needsUpdate
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(J)V	a	markResolved
	m	(IILjava/lang/String;)Z	a	needsUpdate
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	id	id
c	ctk	net/minecraft/structure/MineshaftGenerator
	m	(Ljava/util/List;Ljava/util/Random;IIILfz;ILcli$b;)Lctk$c;	a	getRandomJigsaw
		p	1	random	random
	m	(Lcty;Ljava/util/List;Ljava/util/Random;IIILfz;I)Lctk$c;	b	tryGenerateJigsaw
		p	2	random	random
c	ctk$a	net/minecraft/structure/MineshaftGenerator$MineshaftCorridor
	f	Z	b	hasRails
	f	Z	c	hasCobwebs
	f	Z	d	hasSpawner
	f	I	e	length
	m	(Ljava/util/List;Ljava/util/Random;IIILfz;)Lctd;	a	getBoundingBox
c	ctk$b	net/minecraft/structure/MineshaftGenerator$MineshaftCrossing
	f	Lfz;	b	direction
	f	Z	c	twoFloors
	m	(Ljava/util/List;Ljava/util/Random;IIILfz;)Lctd;	a	getBoundingBox
		p	5	facing	facing
c	ctk$c	net/minecraft/structure/MineshaftGenerator$MineshaftPart
	f	Lcli$b;	a	mineshaftType
	m	()Lcfj;	a	getPlanksType
	m	()Lcfj;	b	getFenceType
c	ctk$d	net/minecraft/structure/MineshaftGenerator$MineshaftRoom
	f	Ljava/util/List;	b	entrances
	m	(ILjava/util/Random;IILcli$b;)V	<init>	<init>
		p	2	random	random
c	ctk$e	net/minecraft/structure/MineshaftGenerator$MineshaftStairs
	m	(Ljava/util/List;Ljava/util/Random;IIILfz;)Lctd;	a	getBoundingBox
		p	1	random	random
c	ctl	net/minecraft/structure/NetherFortressGenerator
	m	(Lctl$n;Ljava/util/List;Ljava/util/Random;IIILfz;I)Lctl$m;	b	generatePiece
c	ctl$a	net/minecraft/structure/NetherFortressGenerator$BridgeCrossing
	m	(Ljava/util/Random;II)V	<init>	<init>
		p	1	random	random
		p	2	x	x
		p	3	z	z
c	ctl$b	net/minecraft/structure/NetherFortressGenerator$BridgeEnd
	f	I	a	seed
c	ctl$c	net/minecraft/structure/NetherFortressGenerator$Bridge
c	ctl$d	net/minecraft/structure/NetherFortressGenerator$CorridorStairs
c	ctl$e	net/minecraft/structure/NetherFortressGenerator$CorridorBalcony
c	ctl$f	net/minecraft/structure/NetherFortressGenerator$CorridorExit
c	ctl$g	net/minecraft/structure/NetherFortressGenerator$CorridorCrossing
c	ctl$h	net/minecraft/structure/NetherFortressGenerator$CorridorLeftTurn
	f	Z	a	containsChest
c	ctl$i	net/minecraft/structure/NetherFortressGenerator$SmallCorridor
c	ctl$j	net/minecraft/structure/NetherFortressGenerator$CorridorRightTurn
	f	Z	a	containsChest
c	ctl$k	net/minecraft/structure/NetherFortressGenerator$CorridorNetherWartsRoom
c	ctl$l	net/minecraft/structure/NetherFortressGenerator$BridgePlatform
	f	Z	a	hasBlazeSpawner
c	ctl$m	net/minecraft/structure/NetherFortressGenerator$Piece
c	ctl$n	net/minecraft/structure/NetherFortressGenerator$PieceData
	f	Ljava/lang/Class;	a	pieceType
c	ctl$o	net/minecraft/structure/NetherFortressGenerator$BridgeSmallCrossing
c	ctl$p	net/minecraft/structure/NetherFortressGenerator$BridgeStairs
c	ctl$q	net/minecraft/structure/NetherFortressGenerator$Start
	f	Ljava/util/List;	b	bridgePieces
	f	Ljava/util/List;	c	corridorPieces
c	ctm	net/minecraft/world/gen/feature/NetherFossilFeature
c	ctm$a	net/minecraft/world/gen/feature/NetherFossilFeature$Start
	m	(Lcha;Lcva;IILbre;Lcoa;)V	a	init
c	ctn	net/minecraft/structure/NetherFossilGenerator
	f	[Luh;	a	FOSSILS
	m	(Lcva;Ljava/util/List;Ljava/util/Random;Lfu;)V	a	addPieces
		p	0	manager	manager
		p	1	pieces	pieces
		p	2	random	random
		p	3	pos	pos
c	ctn$a	net/minecraft/structure/NetherFossilGenerator$Piece
	f	Luh;	d	template
	f	Lcap;	e	structureRotation
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcva;Luh;Lfu;Lcap;)V	<init>	<init>
		p	1	manager	manager
		p	2	template	template
		p	3	pos	pos
		p	4	rotation	rotation
	m	(Lcva;)V	a	initializeStructureData
		p	1	manager	manager
c	cto	net/minecraft/structure/OceanMonumentGenerator
c	cto$a	net/minecraft/structure/OceanMonumentGenerator$DoubleXRoomFactory
c	cto$b	net/minecraft/structure/OceanMonumentGenerator$DoubleXYRoomFactory
c	cto$c	net/minecraft/structure/OceanMonumentGenerator$DoubleYRoomFactory
c	cto$d	net/minecraft/structure/OceanMonumentGenerator$DoubleYZRoomFactory
c	cto$e	net/minecraft/structure/OceanMonumentGenerator$DoubleZRoomFactory
c	cto$f	net/minecraft/structure/OceanMonumentGenerator$SimpleRoomFactory
c	cto$g	net/minecraft/structure/OceanMonumentGenerator$SimpleRoomTopFactory
c	cto$h	net/minecraft/structure/OceanMonumentGenerator$Base
c	cto$i	net/minecraft/structure/OceanMonumentGenerator$PieceFactory
	m	(Lcto$v;)Z	a	canGenerate
		p	1	setting	setting
	m	(Lfz;Lcto$v;Ljava/util/Random;)Lcto$r;	a	generate
		p	1	direction	direction
		p	2	setting	setting
		p	3	random	random
c	cto$j	net/minecraft/structure/OceanMonumentGenerator$CoreRoom
c	cto$k	net/minecraft/structure/OceanMonumentGenerator$DoubleXRoom
c	cto$l	net/minecraft/structure/OceanMonumentGenerator$DoubleXYRoom
c	cto$m	net/minecraft/structure/OceanMonumentGenerator$DoubleYRoom
c	cto$n	net/minecraft/structure/OceanMonumentGenerator$DoubleYZRoom
c	cto$o	net/minecraft/structure/OceanMonumentGenerator$DoubleZRoom
c	cto$p	net/minecraft/structure/OceanMonumentGenerator$Entry
c	cto$q	net/minecraft/structure/OceanMonumentGenerator$Penthouse
c	cto$r	net/minecraft/structure/OceanMonumentGenerator$Piece
	f	Lcfj;	a	PRISMARINE
	f	Lcfj;	b	PRISMARINE_BRICKS
	f	Lcfj;	c	DARK_PRISMARINE
	f	Lcfj;	e	SEA_LANTERN
	f	Lcfj;	f	WATER
	f	Ljava/util/Set;	g	ICE_BLOCKS
	f	I	h	TWO_ZERO_ZERO_INDEX
	f	I	i	TWO_TWO_ZERO_INDEX
	f	I	j	ZERO_ONE_ZERO_INDEX
	f	I	k	FOUR_ONE_ZERO_INDEX
	f	Lcto$v;	l	setting
	m	(Lbqc;Lctd;IIIIII)V	a	setAirAndWater
		p	1	world	world
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	width	width
		p	7	height	height
		p	8	depth	depth
	m	(III)I	b	getIndex
		p	0	x	x
		p	1	y	y
		p	2	z	z
c	cto$s	net/minecraft/structure/OceanMonumentGenerator$SimpleRoom
c	cto$t	net/minecraft/structure/OceanMonumentGenerator$SimpleRoomTop
c	cto$u	net/minecraft/structure/OceanMonumentGenerator$WingRoom
c	cto$v	net/minecraft/structure/OceanMonumentGenerator$PieceSetting
	f	I	a	roomIndex
	f	[Lcto$v;	b	neighbors
	f	[Z	c	neighborPresences
	f	Z	d	used
	m	(I)V	<init>	<init>
		p	1	index	index
	m	()V	a	checkNeighborStates
	m	(Lfz;Lcto$v;)V	a	setNeighbor
	m	()Z	b	isAboveLevelThree
	m	()I	c	countNeighbors
c	ctp	net/minecraft/world/gen/feature/OceanRuinFeature
c	ctp$a	net/minecraft/world/gen/feature/OceanRuinFeature$Start
	m	(Lcha;Lcva;IILbre;Lcob;)V	a	init
c	ctp$b	net/minecraft/world/gen/feature/OceanRuinFeature$BiomeType
	f	Ljava/util/Map;	d	nameMap
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;)Lctp$b;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	b	getName
c	ctq	net/minecraft/structure/OceanRuinGenerator
	f	[Luh;	a	WARM_RUINS
	f	[Luh;	b	BRICK_RUINS
	f	[Luh;	c	CRACKED_RUINS
	f	[Luh;	d	MOSSY_RUINS
	f	[Luh;	e	BIG_BRICK_RUINS
	f	[Luh;	f	BIG_MOSSY_RUINS
	f	[Luh;	g	BIG_CRACKED_RUINS
	f	[Luh;	h	BIG_WARM_RUINS
	m	(Lcva;Lfu;Lcap;Ljava/util/List;Ljava/util/Random;Lcob;)V	a	addPieces
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
		p	5	config	config
	m	(Lcva;Ljava/util/Random;Lcap;Lfu;Lcob;Ljava/util/List;)V	a	method_14825
		p	0	manager	manager
		p	1	random	random
		p	2	rotation	rotation
		p	3	pos	pos
		p	4	config	config
		p	5	pieces	pieces
	m	(Ljava/util/Random;II)Ljava/util/List;	a	getRoomPositions
		p	0	random	random
		p	1	x	x
		p	2	z	z
	m	(Lcva;Lfu;Lcap;Ljava/util/List;Ljava/util/Random;Lcob;ZF)V	a	method_14822
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
		p	5	config	config
		p	6	large	large
		p	7	integrity	integrity
	m	(Ljava/util/Random;)Luh;	a	getRandomWarmRuin
		p	0	random	random
	m	(Ljava/util/Random;)Luh;	b	getRandomBigWarmRuin
		p	0	random	random
c	ctq$a	net/minecraft/structure/OceanRuinGenerator$Piece
	f	Lctp$b;	d	biomeType
	f	F	e	integrity
	f	Luh;	f	template
	f	Lcap;	g	rotation
	f	Z	h	large
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcva;Luh;Lfu;Lcap;FLctp$b;Z)V	<init>	<init>
		p	1	structureManager	structureManager
		p	2	template	template
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	integrity	integrity
		p	6	biomeType	biomeType
		p	7	large	large
	m	(Lcva;)V	a	initialize
		p	1	structureManager	structureManager
c	ctr	net/minecraft/structure/PillagerOutpostGenerator
	m	()V	a	init
	m	(Lcha;Lcva;Lfu;Ljava/util/List;Lciy;)V	a	addPieces
		p	0	chunkGenerator	chunkGenerator
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	pieces	pieces
		p	4	random	random
c	ctr$a	net/minecraft/structure/PillagerOutpostGenerator$Piece
	m	(Lcva;Lcqd;Lfu;ILcap;Lctd;)V	<init>	<init>
		p	1	manager	manager
		p	2	element	element
		p	3	pos	pos
		p	4	groundLevelDelta	groundLevelDelta
		p	5	rotation	rotation
		p	6	boundingBox	boundingBox
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
c	cts	net/minecraft/structure/PoolStructurePiece
	f	Lcqd;	a	poolElement
	f	Lfu;	b	pos
	f	Lcap;	c	rotation
	f	I	e	groundLevelDelta
	f	Ljava/util/List;	f	junctions
	f	Lcva;	g	structureManager
	m	(Lcva;Lle;Lcmm;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
		p	3	type	type
	m	(Lcmm;Lcva;Lcqd;Lfu;ILcap;Lctd;)V	<init>	<init>
		p	1	type	type
		p	2	manager	manager
		p	3	poolElement	poolElement
		p	4	pos	pos
		p	5	groundLevelDelta	groundLevelDelta
		p	6	rotation	rotation
		p	7	boundingBox	boundingBox
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lctd;Lfu;Z)Z	a	method_27236
		p	7	keepJigsaws	keepJigsaws
	m	(Lcpy;)V	a	addJunction
		p	1	junction	junction
	m	()Lcqd;	b	getPoolElement
	m	()Lfu;	c	getPos
	m	()I	d	getGroundLevelDelta
	m	()Ljava/util/List;	e	getJunctions
c	ctt	net/minecraft/structure/RuinedPortalStructurePiece
	f	Luh;	e	template
	f	Lcap;	f	rotation
	f	Lbzj;	g	mirror
	f	Lctt$b;	h	verticalPlacement
	f	Lctt$a;	i	properties
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lfu;Lctt$b;Lctt$a;Luh;Lcve;Lcap;Lbzj;Lfu;)V	<init>	<init>
		p	1	pos	pos
		p	2	verticalPlacement	verticalPlacement
		p	3	properties	properties
		p	4	template	template
		p	5	structure	structure
		p	6	rotation	rotation
		p	7	mirror	mirror
		p	8	center	center
	m	(Lbqc;Lfu;)Z	a	canFillNetherrack
		p	1	world	world
		p	2	pos	pos
	m	(Lbvr;FLbvr;)Lcuu;	a	createReplacementRule
		p	0	old	old
		p	1	chance	chance
		p	2	updated	updated
	m	(Lctt$b;)Lcio$a;	a	getHeightmapType
		p	0	verticalPlacement	verticalPlacement
	m	(Lcve;Lfu;)V	a	processProperties
		p	1	structure	structure
		p	2	center	center
	m	(Lbqc;IILctt$b;)I	a	getBaseHeight
		p	0	world	world
		p	1	x	x
		p	2	y	y
		p	3	verticalPlacement	verticalPlacement
	m	(Ljava/util/Random;Lbqc;)V	a	updateNetherracksInBound
		p	1	random	random
		p	2	world	world
	m	(Lbvr;Lbvr;)Lcuu;	a	createReplacementRule
		p	0	old	old
		p	1	updated	updated
	m	(Ljava/util/Random;Lbqc;Lfu;)V	a	generateVines
		p	1	random	random
		p	2	world	world
		p	3	pos	pos
	m	(Ljava/util/Random;Lbqc;Lfu;)V	b	generateOvergrownLeaves
		p	1	random	random
		p	2	world	world
		p	3	pos	pos
	m	(Ljava/util/Random;Lbqc;)V	b	placeNetherrackBase
		p	1	random	random
		p	2	world	world
	m	()Lcuu;	c	createLavaReplacementRule
	m	(Ljava/util/Random;Lbqc;Lfu;)V	c	updateNetherracks
		p	1	random	random
		p	2	world	world
		p	3	pos	pos
	m	(Ljava/util/Random;Lbqc;Lfu;)V	d	placeNetherrackBottom
		p	1	random	random
		p	2	world	world
		p	3	pos	pos
c	ctt$a	net/minecraft/structure/RuinedPortalStructurePiece$Properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	cold
	f	F	c	mossiness
	f	Z	d	airPocket
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	replaceWithBlackstone
	m	(ZFZZZZ)V	<init>	<init>
		p	1	cold	cold
		p	2	mossiness	mossiness
		p	3	airPocket	airPocket
		p	4	overgrown	overgrown
		p	5	vines	vines
		p	6	replaceWithBlackstone	replaceWithBlackstone
c	ctt$b	net/minecraft/structure/RuinedPortalStructurePiece$VerticalPlacement
	f	Ljava/util/Map;	g	VERTICAL_PLACEMENTS
	f	Ljava/lang/String;	h	id
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	id	id
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Lctt$b;	a	getFromId
		p	0	id	id
c	ctu	net/minecraft/structure/StructurePieceWithDimensions
	f	I	a	width
	f	I	b	height
	f	I	c	depth
	f	I	d	hPos
	m	(Lcmm;Ljava/util/Random;IIIIII)V	<init>	<init>
		p	1	type	type
		p	2	random	random
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	width	width
		p	7	height	height
		p	8	depth	depth
	m	(Lbqc;Lctd;I)Z	a	method_14839
		p	1	world	world
		p	2	boundingBox	boundingBox
c	ctv	net/minecraft/structure/ShipwreckGenerator
	f	[Luh;	b	BEACHED_TEMPLATES
	f	[Luh;	c	REGULAR_TEMPLATES
	m	(Lcva;Lfu;Lcap;Ljava/util/List;Ljava/util/Random;Lcom;)V	a	addParts
		p	0	structureManager	structureManager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	children	children
		p	4	random	random
		p	5	config	config
c	ctv$a	net/minecraft/structure/ShipwreckGenerator$Piece
	f	Lcap;	d	rotation
	f	Luh;	e	template
	f	Z	f	grounded
	m	(Lcva;Luh;Lfu;Lcap;Z)V	<init>	<init>
		p	1	manager	manager
		p	2	identifier	identifier
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	grounded	grounded
	m	(Lcva;Lle;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcva;)V	a	initializeStructureData
		p	1	manager	manager
c	ctw	net/minecraft/structure/StrongholdGenerator
	f	[Lctw$f;	a	ALL_PIECE_SETTINGS
	f	Ljava/util/List;	b	possiblePieceSettings
	f	Ljava/lang/Class;	c	activePieceType
	f	Lctw$k;	e	STONE_BRICK_RANDOMIZER
	m	()V	a	init
c	ctw$a	net/minecraft/structure/StrongholdGenerator$ChestCorridor
	f	Z	a	chestGenerated
c	ctw$b	net/minecraft/structure/StrongholdGenerator$SmallCorridor
	f	I	a	length
c	ctw$c	net/minecraft/structure/StrongholdGenerator$FiveWayCrossing
	f	Z	a	lowerLeftExists
	f	Z	b	upperLeftExists
	f	Z	c	lowerRightExists
	f	Z	e	upperRightExists
c	ctw$d	net/minecraft/structure/StrongholdGenerator$LeftTurn
c	ctw$e	net/minecraft/structure/StrongholdGenerator$Library
	f	Z	a	tall
c	ctw$f	net/minecraft/structure/StrongholdGenerator$PieceSetting
	f	Ljava/lang/Class;	a	pieceType
	f	I	c	generatedCount
	f	I	d	limit
	m	(I)Z	a	canGenerate
		p	1	depth	depth
	m	()Z	a	canGenerate
c	ctw$g	net/minecraft/structure/StrongholdGenerator$PortalRoom
	f	Z	a	spawnerPlaced
c	ctw$h	net/minecraft/structure/StrongholdGenerator$PrisonHall
c	ctw$i	net/minecraft/structure/StrongholdGenerator$RightTurn
c	ctw$j	net/minecraft/structure/StrongholdGenerator$SquareRoom
	f	I	a	roomType
c	ctw$k	net/minecraft/structure/StrongholdGenerator$StoneBrickRandomizer
c	ctw$l	net/minecraft/structure/StrongholdGenerator$SpiralStaircase
	f	Z	a	isStructureStart
c	ctw$m	net/minecraft/structure/StrongholdGenerator$Start
c	ctw$n	net/minecraft/structure/StrongholdGenerator$Corridor
	f	Z	a	leftExitExists
	f	Z	b	rightExitExists
c	ctw$o	net/minecraft/structure/StrongholdGenerator$Stairs
c	ctw$p	net/minecraft/structure/StrongholdGenerator$Piece
	f	Lctw$p$a;	d	entryDoor
	m	(Lbqc;Ljava/util/Random;Lctd;Lctw$p$a;III)V	a	generateEntrance
		p	1	world	world
		p	2	random	random
		p	3	boundingBox	boundingBox
		p	4	type	type
		p	5	x	x
		p	6	y	y
		p	7	z	z
	m	(Ljava/util/Random;)Lctw$p$a;	a	getRandomEntrance
		p	1	random	random
c	ctw$p$a	net/minecraft/structure/StrongholdGenerator$Piece$EntranceType
c	ctw$q	net/minecraft/structure/StrongholdGenerator$Turn
c	ctx	net/minecraft/world/ChunkUpdateState
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	a	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	b	remaining
	m	(J)V	a	add
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAll
	m	(J)Z	b	contains
	m	(J)Z	c	isRemaining
	m	(J)V	d	markResolved
c	cty	net/minecraft/structure/StructurePiece
	f	Lfz;	a	facing
	f	Lbzj;	b	mirror
	f	Lcap;	c	rotation
	f	Lcmm;	d	type
	f	Ljava/util/Set;	e	BLOCKS_NEEDING_POST_PROCESSING
	f	Lcfj;	m	AIR
	f	Lctd;	n	boundingBox
	f	I	o	length
	m	(Lcmm;I)V	<init>	<init>
		p	1	type	type
		p	2	length	length
	m	(Lcmm;Lle;)V	<init>	<init>
		p	1	type	type
		p	2	tag	tag
	m	(Lbqc;Lctd;Ljava/util/Random;IIILfz;Luh;)Z	a	addDispenser
		p	1	world	world
		p	2	boundingBox	boundingBox
		p	3	random	random
		p	4	x	x
		p	5	y	y
		p	6	z	z
		p	7	facing	facing
		p	8	lootTableId	lootTableId
	m	(Lbqc;Lctd;Ljava/util/Random;IIILuh;)Z	a	addChest
		p	1	world	world
		p	2	boundingBox	boundingBox
		p	3	random	random
		p	4	x	x
		p	5	y	y
		p	6	z	z
		p	7	lootTableId	lootTableId
	m	(Lfz;)V	a	setOrientation
		p	1	orientation	orientation
	m	(Ljava/util/List;Lctd;)Lcty;	a	getOverlappingPiece
	m	(Lbqc;Lctd;IIIIIILcfj;Lcfj;Z)V	a	fillWithOutline
		p	1	world	world
		p	10	inside	inside
	m	(II)I	a	applyXTransform
	m	(III)V	a	translate
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbqd;IIILctd;)Z	a	isUnderSeaLevel
		p	2	x	x
		p	3	z	z
		p	4	y	y
	m	(Lbqc;Lctd;Ljava/util/Random;FIIIIIILcfj;Lcfj;ZZ)V	a	fillWithOutlineUnderSeaLevel
		p	3	random	random
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lctd;Lbph;Lfu;)Z	a	generate
		p	2	structureAccessor	structureAccessor
		p	3	chunkGenerator	chunkGenerator
		p	4	random	random
		p	5	boundingBox	boundingBox
	m	(Lbqc;Lctd;Ljava/util/Random;Lfu;Luh;Lcfj;)Z	a	addChest
		p	1	world	world
		p	2	boundingBox	boundingBox
		p	3	random	random
		p	4	pos	pos
		p	5	lootTableId	lootTableId
		p	6	block	block
	m	(Lcty;Ljava/util/List;Ljava/util/Random;)V	a	placeJigsaw
	m	(Lbqc;Lcfj;IIILctd;)V	a	addBlock
		p	1	world	world
		p	2	block	block
		p	3	x	x
		p	4	y	y
		p	5	z	z
	m	(Lbpg;IIILctd;)Lcfj;	a	getBlockAt
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lbph;I)Z	a	intersectsChunk
		p	2	offset	offset
	m	(Lbqc;Lctd;IIIIIILcfj;Z)V	a	method_14919
		p	1	world	world
		p	2	bounds	bounds
		p	3	minX	minX
		p	4	minY	minY
		p	5	minZ	minZ
		p	6	maxX	maxX
		p	7	maxY	maxY
		p	8	maxZ	maxZ
		p	9	block	block
	m	(Lbqc;Lctd;IIIIIIZLjava/util/Random;Lcty$a;)V	a	fillWithOutline
		p	3	minX	minX
		p	4	minY	minY
		p	5	minZ	minZ
		p	6	maxX	maxX
		p	7	maxY	maxY
		p	8	maxZ	maxZ
		p	9	replaceBlocks	replaceBlocks
		p	10	random	random
	m	(Lle;)V	a	toNbt
		p	1	tag	tag
	m	(Lbqc;Lctd;Ljava/util/Random;FIIILcfj;)V	a	addBlockWithRandomThreshold
		p	1	world	world
		p	2	bounds	bounds
		p	3	random	random
		p	4	threshold	threshold
		p	5	x	x
		p	6	y	y
		p	7	z	z
	m	()Lcap;	ap_	getRotation
	m	(Lbqc;Lcfj;IIILctd;)V	b	method_14936
		p	1	world	world
		p	3	x	x
		p	4	y	y
		p	5	z	z
	m	(II)I	b	applyZTransform
	m	(Lbqc;Lctd;IIIIII)V	b	fill
		p	1	world	world
		p	2	bounds	bounds
		p	3	minX	minX
		p	4	minY	minY
		p	5	minZ	minZ
		p	6	maxX	maxX
		p	7	maxY	maxY
	m	(I)I	d	applyYTransform
	m	()Lle;	f	getTag
	m	()Lctd;	g	getBoundingBox
	m	()I	h	getLength
	m	()Lfz;	i	getFacing
	m	()Lcmm;	k	getType
c	cty$a	net/minecraft/structure/StructurePiece$BlockRandomizer
	f	Lcfj;	a	block
	m	()Lcfj;	a	getBlock
	m	(Ljava/util/Random;IIIZ)V	a	setBlock
		p	1	random	random
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	placeBlock	placeBlock
c	ctz	net/minecraft/structure/StructureStart
	f	Lctz;	a	DEFAULT
	f	Ljava/util/List;	b	children
	f	Lctd;	c	boundingBox
	f	Lciy;	d	random
	f	Lcml;	e	feature
	f	I	f	chunkX
	f	I	g	chunkZ
	f	I	h	references
	m	(Lcml;IILctd;IJ)V	<init>	<init>
		p	1	feature	feature
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
		p	4	box	box
		p	5	references	references
		p	6	seed	seed
	m	()Lfu;	a	getPos
	m	(Lbqu;Lbqq;Lcha;Ljava/util/Random;Lctd;Lbph;)V	a	generateStructure
	m	(II)Lle;	a	toTag
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(Lcha;Lcva;IILbre;Lcnr;)V	a	init
		p	1	chunkGenerator	chunkGenerator
		p	2	structureManager	structureManager
		p	3	x	x
		p	4	z	z
		p	5	biome	biome
	m	()V	b	setBoundingBoxFromChildren
	m	()Lctd;	c	getBoundingBox
	m	()Ljava/util/List;	d	getChildren
	m	()Z	e	hasChildren
	m	()I	f	getChunkX
	m	()I	g	getChunkZ
	m	()Z	h	isInExistingChunk
	m	()V	i	incrementReferences
	m	()I	j	getReferences
	m	()I	k	getReferenceCountToBeInExistingChunk
	m	()Lcml;	l	getFeature
c	ctz$1	net/minecraft/structure/StructureStart$1
	m	(Lcha;Lcva;IILbre;Lcnw;)V	a	init
c	cua	net/minecraft/structure/SwampHutGenerator
	f	Z	e	hasWitch
	f	Z	f	hasCat
c	cub	net/minecraft/structure/SimpleStructurePiece
	f	Lcve;	a	structure
	f	Lcvb;	b	placementData
	f	Lfu;	c	pos
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Lcve;Lfu;Lcvb;)V	a	setStructureData
		p	1	structure	structure
		p	2	pos	pos
		p	3	placementData	placementData
	m	(Ljava/lang/String;Lfu;Lbqc;Ljava/util/Random;Lctd;)V	a	handleMetadata
		p	1	metadata	metadata
		p	2	pos	pos
		p	3	world	world
		p	4	random	random
		p	5	boundingBox	boundingBox
c	cuc	net/minecraft/structure/WoodlandMansionGenerator
	m	(Lcva;Lfu;Lcap;Ljava/util/List;Ljava/util/Random;)V	a	addPieces
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
c	cuc$a	net/minecraft/structure/WoodlandMansionGenerator$FirstFloorRoomPool
c	cuc$b	net/minecraft/structure/WoodlandMansionGenerator$RoomPool
	m	(Ljava/util/Random;Z)Ljava/lang/String;	a	getMediumFunctionalRoom
		p	1	random	random
		p	2	staircase	staircase
	m	(Ljava/util/Random;)Ljava/lang/String;	a	getSmallRoom
		p	1	random	random
	m	(Ljava/util/Random;)Ljava/lang/String;	b	getSmallSecretRoom
		p	1	random	random
	m	(Ljava/util/Random;Z)Ljava/lang/String;	b	getMediumGenericRoom
		p	1	random	random
		p	2	staircase	staircase
	m	(Ljava/util/Random;)Ljava/lang/String;	c	getMediumSecretRoom
		p	1	random	random
	m	(Ljava/util/Random;)Ljava/lang/String;	d	getBigRoom
		p	1	random	random
	m	(Ljava/util/Random;)Ljava/lang/String;	e	getBigSecretRoom
		p	1	random	random
c	cuc$c	net/minecraft/structure/WoodlandMansionGenerator$MansionParameters
	f	Ljava/util/Random;	a	random
c	cuc$d	net/minecraft/structure/WoodlandMansionGenerator$LayoutGenerator
	f	Lcva;	a	manager
	f	Ljava/util/Random;	b	random
	m	(Lcva;Ljava/util/Random;)V	<init>	<init>
		p	1	manager	manager
		p	2	random	random
	m	(Lfu;Lcap;Ljava/util/List;Lcuc$c;)V	a	generate
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
	m	(Ljava/util/List;Lcuc$e;Lcuc$g;Lfz;IIII)V	a	addRoof
	m	(Ljava/util/List;Lfu;Lcap;Lfz;Lfz;Lcuc$b;Z)V	a	addMediumRoom
		p	7	staircase	staircase
	m	(Ljava/util/List;Lcuc$e;)V	a	addEntrance
	m	(Ljava/util/List;Lfu;Lcap;Lcuc$b;)V	a	addBigSecretRoom
	m	(Ljava/util/List;Lfu;Lcap;Lfz;Lcuc$b;)V	a	addSmallRoom
	m	(Ljava/util/List;Lfu;Lcap;Lfz;Lfz;Lcuc$b;)V	a	addBigRoom
c	cuc$e	net/minecraft/structure/WoodlandMansionGenerator$GenerationPiece
	f	Lcap;	a	rotation
	f	Lfu;	b	position
	f	Ljava/lang/String;	c	template
c	cuc$f	net/minecraft/structure/WoodlandMansionGenerator$SecondFloorRoomPool
c	cuc$g	net/minecraft/structure/WoodlandMansionGenerator$FlagMatrix
	f	[[I	a	array
	f	I	b	n
	f	I	c	m
	f	I	d	fallback
	m	(III)V	<init>	<init>
		p	1	n	n
		p	2	m	m
		p	3	fallback	fallback
	m	(III)V	a	set
		p	1	i	i
		p	2	j	j
		p	3	value	value
	m	(IIII)V	a	update
		p	1	i	i
		p	2	j	j
		p	3	expected	expected
		p	4	newValue	newValue
	m	(II)I	a	get
		p	1	i	i
		p	2	j	j
	m	(IIIII)V	a	fill
		p	1	i0	i0
		p	2	j0	j0
		p	3	i1	i1
		p	4	j1	j1
		p	5	value	value
	m	(III)Z	b	anyMatchAround
		p	1	i	i
		p	2	j	j
		p	3	value	value
c	cuc$h	net/minecraft/structure/WoodlandMansionGenerator$ThirdFloorRoomPool
c	cuc$i	net/minecraft/structure/WoodlandMansionGenerator$Piece
	f	Ljava/lang/String;	d	template
	f	Lcap;	e	rotation
	f	Lbzj;	f	mirror
	m	(Lcva;)V	a	setupPlacement
c	cue	net/minecraft/structure/rule/AlwaysTrueRuleTest
	f	Lcue;	b	INSTANCE
c	cuf	net/minecraft/structure/rule/AxisAlignedLinearPosRuleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDistance
	f	I	f	maxDistance
	f	Lfz$a;	g	axis
c	cug	net/minecraft/structure/processor/BlackstoneReplacementStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcug;	b	INSTANCE
	f	Ljava/util/Map;	c	replacementMap
c	cuh	net/minecraft/structure/processor/BlockAgeStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mossiness
	m	(F)V	<init>	<init>
		p	1	mossiness	mossiness
	m	(Ljava/util/Random;)Lcfj;	a	processBlocks
	m	(Ljava/util/Random;Lbvr;)Lcfj;	a	randomStairProperties
		p	1	stairs	stairs
	m	(Ljava/util/Random;[Lcfj;)Lcfj;	a	randomState
		p	1	states	states
	m	(Ljava/util/Random;[Lcfj;[Lcfj;)Lcfj;	a	process
		p	2	regularStates	regularStates
		p	3	mossyStates	mossyStates
	m	(Ljava/util/Random;Lcfj;)Lcfj;	a	processStairs
		p	2	state	state
	m	(Ljava/util/Random;)Lcfj;	b	processSlabs
	m	(Ljava/util/Random;)Lcfj;	c	processWalls
	m	(Ljava/util/Random;)Lcfj;	d	processObsidian
c	cui	net/minecraft/structure/processor/BlockIgnoreStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcui;	b	IGNORE_STRUCTURE_BLOCKS
	f	Lcui;	c	IGNORE_AIR
	f	Lcui;	d	IGNORE_AIR_AND_STRUCTURE_BLOCKS
	f	Lcom/google/common/collect/ImmutableList;	e	blocks
c	cuj	net/minecraft/structure/rule/BlockMatchRuleTest
	f	Lbvr;	b	block
c	cuk	net/minecraft/structure/processor/BlockRotStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	integrity
	m	(F)V	<init>	<init>
		p	1	integrity	integrity
c	cul	net/minecraft/structure/rule/BlockStateMatchRuleTest
	f	Lcfj;	b	blockState
c	cum	net/minecraft/structure/processor/GravityStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcio$a;	b	heightmap
	f	I	c	offset
	m	(Lcio$a;I)V	<init>	<init>
		p	1	heightmap	heightmap
		p	2	offset	offset
c	cun	net/minecraft/structure/processor/JigsawReplacementStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcun;	b	INSTANCE
c	cuo	net/minecraft/structure/processor/LavaSubmergedBlockStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcuo;	b	INSTANCE
c	cup	net/minecraft/structure/rule/LinearPosRuleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDistance
	f	I	f	maxDistance
c	cuq	net/minecraft/structure/processor/NopStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcuq;	b	INSTANCE
c	cur	net/minecraft/structure/rule/AlwaysTruePosRuleTest
	f	Lcur;	b	INSTANCE
c	cus	net/minecraft/structure/rule/PosRuleTest
	m	(Lfu;Lfu;Lfu;Ljava/util/Random;)Z	a	test
	m	()Lcut;	a	getType
c	cut	net/minecraft/structure/rule/PosRuleTestType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcut;	a	register
		p	0	id	id
c	cuu	net/minecraft/structure/processor/StructureProcessorRule
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcuy;	b	inputPredicate
	f	Lcuy;	c	locationPredicate
	f	Lcus;	d	positionPredicate
	f	Lcfj;	e	outputState
	f	Lle;	f	tag
	m	()Lcfj;	a	getOutputState
	m	(Lcfj;Lcfj;Lfu;Lfu;Lfu;Ljava/util/Random;)Z	a	test
		p	1	input	input
		p	2	location	location
	m	()Lle;	b	getTag
c	cuv	net/minecraft/structure/rule/RandomBlockMatchRuleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbvr;	b	block
	f	F	d	probability
c	cuw	net/minecraft/structure/rule/RandomBlockStateMatchRuleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	blockState
	f	F	d	probability
c	cux	net/minecraft/structure/processor/RuleStructureProcessor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableList;	b	rules
c	cuy	net/minecraft/structure/rule/RuleTest
	c	Rule tests are used in structure generation to check if a block state matches some condition.
	m	()Lcuz;	a	getType
	m	(Lcfj;Ljava/util/Random;)Z	a	test
		p	1	state	state
		p	2	random	random
c	cuz	net/minecraft/structure/rule/RuleTestType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcuz;	a	register
		p	0	id	id
c	cv	net/minecraft/command/TranslatableBuiltInExceptions
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	method_18479
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	method_9184
		p	0	message	message
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	method_9188
		p	0	symbol	symbol
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	method_18480
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	method_9179
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	method_9186
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	method_9182
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	method_9190
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	method_18481
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	method_9178
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	method_9180
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	method_9181
		p	0	value	value
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	method_9185
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	method_9183
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	method_9187
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	method_9191
		p	0	character	character
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	method_9189
		p	0	expected	expected
c	cva	net/minecraft/structure/StructureManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	structures
	f	Lcom/mojang/datafixers/DataFixer;	c	dataFixer
	f	Ljava/nio/file/Path;	e	generatedPath
	m	(Labc;Ldae$a;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	3	dataFixer	dataFixer
	m	(Lle;)Lcve;	a	createStructure
		p	1	tag	tag
	m	(Luh;Ljava/lang/String;)Ljava/nio/file/Path;	a	getStructurePath
		p	1	id	id
		p	2	extension	extension
	m	(Ljava/io/InputStream;)Lcve;	a	readStructure
		p	1	structureInputStream	structureInputStream
	m	(Luh;)Lcve;	a	getStructureOrBlank
		p	1	id	id
	m	(Luh;Ljava/lang/String;)Ljava/nio/file/Path;	b	getAndCheckStructurePath
		p	1	id	id
		p	2	extension	extension
	m	(Luh;)Lcve;	b	getStructure
		p	1	identifier	identifier
	m	(Luh;)Z	c	saveStructure
		p	1	id	id
	m	(Luh;)V	d	unloadStructure
		p	1	id	id
	m	(Luh;)Lcve;	e	loadStructureFromResource
		p	1	id	id
	m	(Luh;)Lcve;	f	loadStructureFromFile
		p	1	id	id
c	cvb	net/minecraft/structure/StructurePlacementData
	f	Lbzj;	a	mirror
	f	Lcap;	b	rotation
	f	Lfu;	c	position
	f	Z	d	ignoreEntities
	f	Lbph;	e	chunkPosition
	f	Lctd;	f	boundingBox
	f	Z	g	placeFluids
	f	Ljava/util/Random;	h	random
	f	Ljava/util/List;	j	processors
	f	Z	k	updateNeighbors
	m	(Lcvc;)Lcvb;	a	addProcessor
		p	1	processor	processor
	m	(Lbph;)Lcvb;	a	setChunkPosition
		p	1	chunkPosition	chunkPosition
	m	(Lcap;)Lcvb;	a	setRotation
		p	1	rotation	rotation
	m	()Lcvb;	a	copy
	m	(Z)Lcvb;	a	setIgnoreEntities
		p	1	ignoreEntities	ignoreEntities
	m	(Lctd;)Lcvb;	a	setBoundingBox
		p	1	boundingBox	boundingBox
	m	(Ljava/util/Random;)Lcvb;	a	setRandom
		p	1	random	random
	m	(Lfu;)Lcvb;	a	setPosition
		p	1	position	position
	m	(Lbzj;)Lcvb;	a	setMirror
		p	1	mirror	mirror
	m	(Ljava/util/List;Lfu;)Lcve$a;	a	getRandomBlockInfos
		p	2	pos	pos
	m	()Lcvb;	b	clearProcessors
	m	(Lbph;)Lctd;	b	getChunkBlockBox
		p	1	pos	pos
	m	(Lcvc;)Lcvb;	b	removeProcessor
		p	1	processor	processor
	m	(Lfu;)Ljava/util/Random;	b	getRandom
		p	1	pos	pos
	m	()Lbzj;	c	getMirror
	m	(Z)Lcvb;	c	setUpdateNeighbors
		p	1	updateNeighbors	updateNeighbors
	m	()Lcap;	d	getRotation
	m	()Lfu;	e	getPosition
	m	()Z	g	shouldIgnoreEntities
	m	()Lctd;	h	getBoundingBox
	m	()Z	i	shouldUpdateNeighbors
	m	()Ljava/util/List;	j	getProcessors
	m	()V	k	calculateBoundingBox
	m	()Z	l	shouldPlaceFluids
c	cvc	net/minecraft/structure/processor/StructureProcessor
	m	()Lcvd;	a	getType
	m	(Lbqd;Lfu;Lfu;Lcve$c;Lcve$c;Lcvb;)Lcve$c;	a	process
		p	2	pos	pos
c	cvd	net/minecraft/structure/processor/StructureProcessorType
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcvd;	a	register
		p	0	id	id
c	cve	net/minecraft/structure/Structure
	f	Ljava/util/List;	a	blockInfoLists
	f	Ljava/util/List;	b	entities
	f	Lfu;	c	size
	f	Ljava/lang/String;	d	author
	m	(Lbqc;Lfu;Lbzj;Lcap;Lfu;Lctd;Z)V	a	spawnEntities
		p	1	world	world
		p	2	pos	pos
		p	5	pivot	pivot
		p	6	area	area
	m	(Lcvb;Lfu;Lcvb;Lfu;)Lfu;	a	transformBox
		p	1	placementData1	placementData1
		p	2	pos1	pos1
		p	3	placementData2	placementData2
		p	4	pos2	pos2
	m	(Llk;Llk;)V	a	loadPalettedBlockInfo
		p	1	paletteTag	paletteTag
		p	2	blocksTag	blocksTag
	m	(Ldem;Lbzj;Lcap;Lfu;)Ldem;	a	transformAround
		p	0	point	point
		p	3	pivot	pivot
	m	(Lcap;)Lfu;	a	getRotatedSize
	m	(Ljava/lang/String;)V	a	setAuthor
		p	1	name	name
	m	(Lcap;IILctd;Lfz;Lfz;)V	a	mirrorBoundingBox
		p	1	rotation	rotation
		p	2	offsetX	offsetX
		p	3	offsetZ	offsetZ
		p	4	boundingBox	boundingBox
	m	()Lfu;	a	getSize
	m	(Lfu;Lcvb;Lbvr;Z)Ljava/util/List;	a	getInfosForBlock
		p	1	pos	pos
		p	2	placementData	placementData
		p	3	block	block
		p	4	transformed	transformed
	m	(Lbqc;Lle;)Ljava/util/Optional;	a	getEntity
	m	(Lfu;Lcvb;Lbvr;)Ljava/util/List;	a	getInfosForBlock
		p	1	pos	pos
		p	2	placementData	placementData
		p	3	block	block
	m	([I)Llk;	a	createIntListTag
	m	(Lbqc;ILdev;III)V	a	updateCorner
		p	0	world	world
		p	1	flags	flags
		p	3	startX	startX
		p	4	startY	startY
		p	5	startZ	startZ
	m	([D)Llk;	a	createDoubleListTag
	m	(Lfu;Lbzj;Lcap;Lfu;)Lfu;	a	transformAround
		p	0	pos	pos
		p	3	pivot	pivot
	m	(Lbqc;Lfu;Lfu;Lcvb;Ljava/util/Random;I)Z	a	place
		p	1	world	world
		p	2	pos	pos
		p	4	placementData	placementData
	m	(Lfu;Lbzj;Lcap;II)Lfu;	a	applyTransformedOffset
		p	3	offsetX	offsetX
		p	4	offsetZ	offsetZ
	m	(Lbqc;Lfu;Lfu;Lcvb;Ljava/util/List;)Ljava/util/List;	a	process
		p	0	world	world
		p	1	pos	pos
	m	(Lbqb;Lfu;Lfu;)V	a	addEntitiesFromWorld
		p	1	world	world
		p	2	firstCorner	firstCorner
		p	3	secondCorner	secondCorner
	m	(Lbqc;Lfu;Lcvb;Ljava/util/Random;)V	a	place
		p	1	world	world
		p	2	pos	pos
		p	3	placementData	placementData
	m	(Lbqb;Lfu;Lfu;ZLbvr;)V	a	saveFromWorld
		p	1	world	world
		p	2	start	start
		p	3	size	size
		p	4	includeEntities	includeEntities
		p	5	ignoredBlock	ignoredBlock
	m	(Lle;)Lle;	a	toTag
		p	1	tag	tag
	m	(Lcvb;Lfu;)Lfu;	a	transform
		p	0	placementData	placementData
		p	1	pos	pos
	m	(Lfu;Lbzj;Lcap;)Lfu;	a	offsetByTransformedSize
	m	(Lbqc;Lfu;Lcvb;Ljava/util/Random;)V	b	placeAndNotifyListeners
		p	1	world	world
		p	2	pos	pos
		p	3	data	data
	m	()Ljava/lang/String;	b	getAuthor
	m	(Lcvb;Lfu;)Lctd;	b	calculateBoundingBox
		p	2	pos	pos
	m	(Lle;)V	b	fromTag
		p	1	tag	tag
c	cve$a	net/minecraft/structure/Structure$PalettedBlockInfoList
	f	Ljava/util/List;	a	infos
	f	Ljava/util/Map;	b	blockToInfos
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	infos	infos
	m	()Ljava/util/List;	a	getAll
	m	(Lbvr;)Ljava/util/List;	a	getAllOf
		p	1	block	block
c	cve$b	net/minecraft/structure/Structure$Palette
	f	Lcfj;	a	AIR
	f	Lge;	b	ids
	f	I	c	currentIndex
	m	(I)Lcfj;	a	getState
		p	1	id	id
	m	(Lcfj;)I	a	getId
		p	1	state	state
	m	(Lcfj;I)V	a	set
		p	1	state	state
		p	2	id	id
c	cve$c	net/minecraft/structure/Structure$StructureBlockInfo
	f	Lfu;	a	pos
	f	Lcfj;	b	state
	f	Lle;	c	tag
	m	(Lfu;Lcfj;Lle;)V	<init>	<init>
		p	1	pos	pos
		p	2	state	state
		p	3	tag	tag
c	cve$d	net/minecraft/structure/Structure$StructureEntityInfo
	f	Ldem;	a	pos
	f	Lfu;	b	blockPos
	f	Lle;	c	tag
	m	(Ldem;Lfu;Lle;)V	<init>	<init>
		p	1	pos	pos
		p	2	blockPos	blockPos
		p	3	tag	tag
c	cvf	net/minecraft/structure/rule/TagMatchRuleTest
	f	Ladf;	b	tag
c	cvh	net/minecraft/world/gen/surfacebuilder/BadlandsSurfaceBuilder
	f	[Lcfj;	a	layerBlocks
	f	Lcfj;	ah	WHITE_TERRACOTTA
	f	Lcfj;	ai	ORANGE_TERRACOTTA
	f	Lcfj;	aj	TERRACOTTA
	f	Lcfj;	ak	YELLOW_TERRACOTTA
	f	Lcfj;	al	BROWN_TERRACOTTA
	f	Lcfj;	am	RED_TERRACOTTA
	f	Lcfj;	an	LIGHT_GRAY_TERRACOTTA
	f	J	b	seed
	f	Lcwf;	c	heightCutoffNoise
	f	Lcwf;	d	heightNoise
	f	Lcwf;	e	layerNoise
	m	(III)Lcfj;	a	calculateLayerBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
	m	(J)V	b	initLayerBlocks
		p	1	seed	seed
c	cvi	net/minecraft/world/gen/surfacebuilder/BasaltDeltasSurfaceBuilder
	f	Lcfj;	a	BASALT
	f	Lcfj;	b	BLACKSTONE
	f	Lcfj;	c	GRAVEL
c	cvj	net/minecraft/world/gen/surfacebuilder/ConfiguredSurfaceBuilder
	f	Lcvw;	b	surfaceBuilder
	f	Lcvy;	c	config
	m	(Lcvw;Lcvy;)V	<init>	<init>
		p	1	surfaceBuilder	surfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJ)V	a	generate
		p	1	random	random
		p	2	chunk	chunk
		p	3	biome	biome
		p	9	defaultBlock	defaultBlock
		p	10	defaultFluid	defaultFluid
		p	12	seed	seed
	m	()Lcvy;	a	getConfig
	m	(J)V	a	initSeed
		p	1	seed	seed
c	cvk	net/minecraft/world/gen/surfacebuilder/DefaultSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;Lcfj;Lcfj;Lcfj;I)V	a	generate
		p	1	random	random
		p	2	chunk	chunk
		p	3	biome	biome
		p	4	x	x
		p	5	z	z
		p	6	height	height
		p	7	noise	noise
		p	9	defaultBlock	defaultBlock
		p	10	fluidBlock	fluidBlock
		p	11	topBlock	topBlock
		p	12	underBlock	underBlock
		p	13	underwaterBlock	underwaterBlock
		p	14	seaLevel	seaLevel
c	cvl	net/minecraft/world/gen/surfacebuilder/ErodedBadlandsSurfaceBuilder
	f	Lcfj;	ah	WHITE_TERRACOTTA
	f	Lcfj;	ai	ORANGE_TERRACOTTA
	f	Lcfj;	aj	TERRACOTTA
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	generate	generate
c	cvm	net/minecraft/world/gen/surfacebuilder/FrozenOceanSurfaceBuilder
	f	Lcfj;	a	PACKED_ICE
	f	J	aj	seed
	f	Lcfj;	b	SNOW_BLOCK
	f	Lcfj;	c	AIR
	f	Lcfj;	d	GRAVEL
	f	Lcfj;	e	ICE
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvn	net/minecraft/world/gen/surfacebuilder/GiantTreeTaigaSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvo	net/minecraft/world/gen/surfacebuilder/GravellyMountainSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvp	net/minecraft/world/gen/surfacebuilder/MountainSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvq	net/minecraft/world/gen/surfacebuilder/AbstractNetherSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvr	net/minecraft/world/gen/surfacebuilder/NetherForestSurfaceBuilder
	f	J	a	seed
	f	Lcfj;	b	CAVE_AIR
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvs	net/minecraft/world/gen/surfacebuilder/NetherSurfaceBuilder
	f	J	a	seed
	f	Lcwe;	b	noise
	f	Lcfj;	c	CAVE_AIR
	f	Lcfj;	d	GRAVEL
	f	Lcfj;	e	GLOWSTONE
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvt	net/minecraft/world/gen/surfacebuilder/NopeSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvu	net/minecraft/world/gen/surfacebuilder/ShatteredSavannaSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cvv	net/minecraft/world/gen/surfacebuilder/SoulSandValleySurfaceBuilder
	f	Lcfj;	a	SOUL_SAND
	f	Lcfj;	b	SOUL_SOIL
	f	Lcfj;	c	GRAVEL
c	cvw	net/minecraft/world/gen/surfacebuilder/SurfaceBuilder
	f	Lcvx;	A	AIR_CONFIG
	f	Lcvx;	B	PODZOL_CONFIG
	f	Lcvx;	C	GRAVEL_CONFIG
	f	Lcvx;	D	GRASS_CONFIG
	f	Lcvx;	E	DIRT_CONFIG
	f	Lcvx;	F	STONE_CONFIG
	f	Lcvx;	G	COARSE_DIRT_CONFIG
	f	Lcvx;	H	SAND_CONFIG
	f	Lcvx;	I	GRASS_SAND_UNDERWATER_CONFIG
	f	Lcvx;	J	SAND_SAND_UNDERWATER_CONFIG
	f	Lcvx;	K	BADLANDS_CONFIG
	f	Lcvx;	L	MYCELIUM_CONFIG
	f	Lcvx;	M	NETHER_CONFIG
	f	Lcvx;	N	SOUL_SAND_CONFIG
	f	Lcvx;	O	END_CONFIG
	f	Lcvx;	P	CRIMSON_NYLIUM_CONFIG
	f	Lcvx;	Q	WARPED_NYLIUM_CONFIG
	f	Lcvx;	R	BASALT_DELTA_CONFIG
	f	Lcfj;	f	AIR
	f	Lcfj;	g	DIRT
	f	Lcfj;	h	GRASS_BLOCK
	f	Lcfj;	i	PODZOL
	f	Lcfj;	j	GRAVEL
	f	Lcfj;	k	STONE
	f	Lcfj;	l	COARSE_DIRT
	f	Lcfj;	m	SAND
	f	Lcfj;	n	RED_SAND
	f	Lcfj;	o	WHITE_TERRACOTTA
	f	Lcfj;	p	MYCELIUM
	f	Lcfj;	q	SOUL_SAND
	f	Lcfj;	r	NETHERRACK
	f	Lcfj;	s	END_STONE
	f	Lcfj;	t	CRIMSON_NYLIUM
	f	Lcfj;	u	WARPED_NYLIUM
	f	Lcfj;	v	NETHER_WART_BLOCK
	f	Lcfj;	w	WARPED_WART_BLOCK
	f	Lcfj;	x	BLACKSTONE
	f	Lcfj;	y	BASALT
	f	Lcfj;	z	MAGMA_BLOCK
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvy;)V	a	generate
		p	1	random	random
		p	2	chunk	chunk
		p	3	biome	biome
		p	4	x	x
		p	5	z	z
		p	6	height	height
		p	7	noise	noise
		p	9	defaultBlock	defaultBlock
		p	10	defaultFluid	defaultFluid
		p	11	seaLevel	seaLevel
		p	12	seed	seed
		p	14	surfaceBlocks	surfaceBlocks
	m	(Ljava/lang/String;Lcvw;)Lcvw;	a	register
	m	(J)V	a	initSeed
		p	1	seed	seed
c	cvx	net/minecraft/world/gen/surfacebuilder/TernarySurfaceConfig
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfj;	b	topMaterial
	f	Lcfj;	c	underMaterial
	f	Lcfj;	d	underwaterMaterial
	m	(Lcfj;Lcfj;Lcfj;)V	<init>	<init>
		p	1	topMaterial	topMaterial
		p	2	underMaterial	underMaterial
		p	3	underwaterMaterial	underwaterMaterial
	m	()Lcfj;	c	getUnderwaterMaterial
c	cvy	net/minecraft/world/gen/surfacebuilder/SurfaceConfig
	m	()Lcfj;	a	getTopMaterial
	m	()Lcfj;	b	getUnderMaterial
c	cvz	net/minecraft/world/gen/surfacebuilder/SwampSurfaceBuilder
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	a	generate
c	cw	net/minecraft/server/function/CommandFunction
	f	[Lcw$c;	a	elements
	f	Luh;	b	id
	m	(Luh;[Lcw$c;)V	<init>	<init>
		p	1	id	id
		p	2	elements	elements
	m	(Luh;Lcom/mojang/brigadier/CommandDispatcher;Lcz;Ljava/util/List;)Lcw;	a	create
		p	0	id	id
	m	()Luh;	a	getId
	m	()[Lcw$c;	b	getElements
c	cw$a	net/minecraft/server/function/CommandFunction$LazyContainer
	f	Lcw$a;	a	EMPTY
	f	Luh;	b	id
	f	Z	c	initialized
	f	Ljava/util/Optional;	d	function
	m	(Luh;)V	<init>	<init>
		p	1	id	id
	m	(Lcw;)V	<init>	<init>
		p	1	function	function
	m	(Luu;)Ljava/util/Optional;	a	get
		p	1	manager	manager
	m	()Luh;	a	getId
c	cw$b	net/minecraft/server/function/CommandFunction$CommandElement
	f	Lcom/mojang/brigadier/ParseResults;	a	parsed
	m	(Lcom/mojang/brigadier/ParseResults;)V	<init>	<init>
		p	1	parsed	parsed
c	cw$c	net/minecraft/server/function/CommandFunction$Element
	m	(Luu;Lcz;Ljava/util/ArrayDeque;I)V	a	execute
		p	1	manager	manager
		p	2	source	source
		p	3	stack	stack
		p	4	maxChainLength	maxChainLength
c	cw$d	net/minecraft/server/function/CommandFunction$FunctionElement
	f	Lcw$a;	a	function
c	cwa	net/minecraft/world/gen/surfacebuilder/WoodedBadlandsSurfaceBuilder
	f	Lcfj;	ah	WHITE_TERRACOTTA
	f	Lcfj;	ai	ORANGE_TERRACOTTA
	f	Lcfj;	aj	TERRACOTTA
	m	(Ljava/util/Random;Lcgy;Lbre;IIIDLcfj;Lcfj;IJLcvx;)V	generate	generate
c	cwc	net/minecraft/util/math/noise/PerlinNoiseSampler
	f	D	a	originX
	f	D	b	originY
	f	D	c	originZ
	f	[B	d	permutations
	m	(Ljava/util/Random;)V	<init>	<init>
		p	1	random	random
	m	(DDDDD)D	a	sample
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(IDDD)D	a	grad
		p	0	hash	hash
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(I)I	a	getGradient
		p	1	hash	hash
	m	(IIIDDDDDD)D	a	sample
		p	1	sectionX	sectionX
		p	2	sectionY	sectionY
		p	3	sectionZ	sectionZ
		p	4	localX	localX
		p	6	localY	localY
		p	8	localZ	localZ
		p	10	fadeLocalX	fadeLocalX
		p	12	fadeLocalY	fadeLocalY
		p	14	fadeLocalZ	fadeLocalZ
c	cwd	net/minecraft/util/math/noise/DoublePerlinNoiseSampler
	f	D	a	amplitude
	f	Lcwe;	b	firstSampler
	f	Lcwe;	c	secondSampler
	m	(Lciy;Ljava/util/List;)V	<init>	<init>
		p	2	octaves	octaves
	m	(DDD)D	a	sample
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(I)D	a	createAmplitude
		p	0	octaves	octaves
c	cwe	net/minecraft/util/math/noise/OctavePerlinNoiseSampler
	f	[Lcwc;	a	octaveSamplers
	m	(Lciy;Ljava/util/List;)V	<init>	<init>
		p	1	random	random
		p	2	octaves	octaves
	m	(Lciy;Ljava/util/stream/IntStream;)V	<init>	<init>
		p	1	random	random
		p	2	octaves	octaves
	m	(Lciy;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V	<init>	<init>
		p	1	random	random
		p	2	octaves	octaves
	m	(I)Lcwc;	a	getOctave
		p	1	octave	octave
	m	(D)D	a	maintainPrecision
	m	(DDDDDZ)D	a	sample
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(DDD)D	a	sample
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	cwf	net/minecraft/util/math/noise/OctaveSimplexNoiseSampler
	f	[Lcwg;	a	octaveSamplers
	m	(DDZ)D	a	sample
		p	1	x	x
		p	3	y	y
c	cwg	net/minecraft/util/math/noise/SimplexNoiseSampler
	f	[[I	a	gradients
	f	D	b	originX
	f	D	c	originY
	f	D	d	originZ
	f	D	e	sqrt3
	f	D	f	SKEW_FACTOR_2D
	f	D	g	UNSKEW_FACTOR_2D
	f	[I	h	permutations
	m	(Ljava/util/Random;)V	<init>	<init>
		p	1	random	random
	m	([IDDD)D	a	dot
		p	0	gArr	gArr
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(IDDDD)D	a	grad
		p	1	hash	hash
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(I)I	a	getGradient
		p	1	hash	hash
	m	(DD)D	a	sample
		p	1	x	x
		p	3	y	y
c	cwh	net/minecraft/util/math/noise/NoiseSampler
	m	(DDDD)D	a	sample
		p	1	x	x
		p	3	y	y
c	cwj	net/minecraft/world/chunk/light/ChunkBlockLightProvider
	f	[Lfz;	e	DIRECTIONS
	f	Lfu$a;	f	mutablePos
	m	(Lchl;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
	m	(J)I	d	getLightSourceLuminance
		p	1	blockPos	blockPos
c	cwk	net/minecraft/world/chunk/light/BlockLightStorage
	m	(Lchl;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
c	cwk$a	net/minecraft/world/chunk/light/BlockLightStorage$Data
	m	()Lcwk$a;	a	copy
c	cwl	net/minecraft/world/chunk/ChunkToNibbleArrayMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	arrays
	f	[J	b	cachePositions
	f	[Lchd;	c	cacheArrays
	f	Z	d	cacheEnabled
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1	arrays	arrays
	m	(J)V	a	replaceWithCopy
		p	1	pos	pos
	m	(JLchd;)V	a	put
		p	1	pos	pos
		p	3	data	data
	m	()Lcwl;	b	copy
	m	(J)Z	b	containsKey
		p	1	chunkPos	chunkPos
	m	(J)Lchd;	c	get
		p	1	chunkPos	chunkPos
	m	()V	c	clearCache
	m	()V	d	disableCache
	m	(J)Lchd;	d	removeChunk
		p	1	chunkPos	chunkPos
c	cwm	net/minecraft/world/chunk/light/LevelPropagator
	f	I	a	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	b	pendingIdUpdatesByLevel
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	c	pendingUpdates
	f	I	d	minPendingLevel
	f	Z	e	hasPendingUpdates
	m	(III)V	<init>	<init>
		p	1	levelCount	levelCount
		p	2	expectedLevelSize	expectedLevelSize
		p	3	expectedTotalSize	expectedTotalSize
	m	(J)Z	a	isMarker
		p	1	id	id
	m	(JIIZ)V	a	removePendingUpdate
		p	1	id	id
		p	3	level	level
		p	4	levelCount	levelCount
		p	5	removeFully	removeFully
	m	(JII)V	a	addPendingUpdate
		p	1	id	id
		p	3	level	level
		p	4	targetLevel	targetLevel
	m	(JJI)I	a	recalculateLevel
		p	1	id	id
		p	3	excludedId	excludedId
		p	5	maxLevel	maxLevel
	m	(II)I	a	minLevel
		p	1	a	a
		p	2	b	b
	m	(JI)V	a	setLevel
		p	1	id	id
		p	3	level	level
	m	(JIZ)V	a	propagateLevel
		p	1	id	id
		p	3	level	level
		p	4	decrease	decrease
	m	(JJIZ)V	a	updateLevel
		p	1	sourceId	sourceId
		p	3	id	id
		p	5	level	level
		p	6	decrease	decrease
	m	(I)V	a	increaseMinPendingLevel
		p	1	maxLevel	maxLevel
	m	(JJIIIZ)V	a	updateLevel
		p	1	sourceId	sourceId
		p	3	id	id
		p	5	level	level
		p	6	currentLevel	currentLevel
		p	7	pendingLevel	pendingLevel
		p	8	decrease	decrease
	m	(JJI)I	b	getPropagatedLevel
		p	1	sourceId	sourceId
		p	3	targetId	targetId
		p	5	level	level
	m	(I)I	b	applyPendingUpdates
		p	1	maxSteps	maxSteps
	m	()Z	b	hasPendingUpdates
	m	(JJIZ)V	b	propagateLevel
		p	1	sourceId	sourceId
		p	3	targetId	targetId
		p	5	level	level
		p	6	decrease	decrease
	m	(J)I	c	getLevel
		p	1	id	id
	m	(J)V	e	removePendingUpdate
		p	1	id	id
	m	(J)V	f	resetLevel
		p	1	id	id
c	cwm$1	net/minecraft/world/chunk/light/LevelPropagator$1
	m	(I)V	rehash	rehash
		p	1	newN	newN
c	cwm$2	net/minecraft/world/chunk/light/LevelPropagator$2
	m	(I)V	rehash	rehash
		p	1	newN	newN
c	cwn	net/minecraft/world/chunk/ColumnChunkNibbleArray
c	cwo	net/minecraft/world/chunk/light/ChunkLightProvider
	f	Lchl;	a	chunkProvider
	f	Lbqi;	b	type
	f	Lcwq;	c	lightStorage
	f	Lfu$a;	d	reusableBlockPos
	f	[Lfz;	e	DIRECTIONS
	f	[J	g	cachedChunkPositions
	f	[Lbpg;	h	cachedChunks
	m	(Lchl;Lbqi;Lcwq;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
		p	2	type	type
		p	3	lightStorage	lightStorage
	m	(Lbpg;Lcfj;Lfu;Lcfj;Lfu;Lfz;I)I	a	getRealisticOpacity
		p	0	world	world
		p	1	state1	state1
		p	2	pos1	pos1
		p	3	state2	state2
		p	4	pos2	pos2
		p	5	direction	direction
		p	6	opacity2	opacity2
	m	(Lfu;I)V	a	addLightSource
		p	1	pos	pos
		p	2	level	level
	m	(Lcfj;JLfz;)Ldfg;	a	getOpaqueShape
		p	1	world	world
		p	2	pos	pos
		p	4	facing	facing
	m	()Z	a	hasUpdates
	m	(Lbph;Z)V	a	setLightEnabled
		p	1	pos	pos
		p	2	lightEnabled	lightEnabled
	m	(JLorg/apache/commons/lang3/mutable/MutableInt;)Lcfj;	a	getStateForLighting
		p	1	pos	pos
	m	(Lchd;J)I	a	getCurrentLevelFromArray
		p	1	array	array
		p	2	blockPos	blockPos
	m	(II)Lbpg;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(JLchd;Z)V	a	setLightArray
		p	1	pos	pos
		p	3	lightArray	lightArray
	m	(Lfu;)V	a	checkBlock
		p	1	pos	pos
	m	(IZZ)I	a	doLightUpdates
		p	1	maxSteps	maxSteps
		p	2	doSkylight	doSkylight
		p	3	skipEdgeLightPropagation	skipEdgeLightPropagation
	m	(Lbph;Z)V	b	setRetainData
		p	1	pos	pos
		p	2	retainData	retainData
	m	()V	d	clearChunkCache
c	cwp	net/minecraft/world/chunk/light/ChunkLightingView
	m	(Lgo;)Lchd;	a	getLightArray
		p	1	pos	pos
	m	(Lfu;)I	b	getLightLevel
c	cwp$a	net/minecraft/world/chunk/light/ChunkLightingView$Empty
c	cwq	net/minecraft/world/chunk/light/LightStorage
	f	Lchd;	a	EMPTY
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	b	nonEmptySections
	f	Lcwl;	e	uncachedLightArrays
	f	Lcwl;	f	lightArrays
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	h	dirtySections
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	lightArraysToAdd
	f	Z	j	hasLightUpdates
	f	[Lfz;	k	DIRECTIONS
	f	Lbqi;	l	lightType
	f	Lchl;	m	chunkProvider
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	p	lightArraysToRemove
	m	(Lbqi;Lchl;Lcwl;)V	<init>	<init>
		p	1	lightType	lightType
		p	2	chunkProvider	chunkProvider
		p	3	lightData	lightData
	m	()Z	a	hasLightUpdates
	m	(Lcwo;J)V	a	removeChunkData
		p	1	storage	storage
		p	2	blockChunkPos	blockChunkPos
	m	(JZ)Lchd;	a	getLightArray
		p	1	sectionPos	sectionPos
		p	3	cached	cached
	m	(Lcwo;ZZ)V	a	updateLightArrays
		p	2	doSkylight	doSkylight
		p	3	skipEdgeLightPropagation	skipEdgeLightPropagation
	m	(JLchd;Z)V	a	setLightArray
		p	1	pos	pos
		p	3	array	array
	m	(Lcwl;J)Lchd;	a	getLightArray
		p	1	storage	storage
		p	2	sectionPos	sectionPos
	m	(JI)V	b	set
		p	1	blockPos	blockPos
		p	3	value	value
	m	(JZ)V	b	setLightEnabled
	m	(JZ)V	c	setRetainData
	m	(JZ)V	d	updateSectionStatus
		p	1	pos	pos
		p	3	empty	empty
	m	()V	d	updateAll
	m	(J)I	d	getLight
		p	1	blockPos	blockPos
	m	()V	e	notifyChunkProvider
	m	(J)Z	g	hasLight
		p	1	sectionPos	sectionPos
	m	(J)Lchd;	h	getLightArray
		p	1	sectionPos	sectionPos
	m	(J)I	i	get
		p	1	blockPos	blockPos
	m	(J)Lchd;	j	createLightArray
		p	1	pos	pos
	m	(J)V	k	onLightArrayCreated
		p	1	blockPos	blockPos
	m	(J)V	l	onChunkRemoved
c	cwr	net/minecraft/world/chunk/light/LightingProvider
	f	Lcwo;	a	blockLightProvider
	f	Lcwo;	b	skyLightProvider
	m	(Lchl;ZZ)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
		p	2	hasBlockLight	hasBlockLight
		p	3	hasSkyLight	hasSkyLight
	m	(Lfu;I)V	a	addLightSource
		p	1	pos	pos
		p	2	level	level
	m	(Lbqi;)Lcwp;	a	get
		p	1	lightType	lightType
	m	(Lbqi;Lgo;Lchd;Z)V	a	queueData
		p	1	lightType	lightType
		p	2	pos	pos
		p	3	nibbles	nibbles
	m	()Z	a	hasUpdates
	m	(Lfu;)V	a	checkBlock
		p	1	pos	pos
	m	(IZZ)I	a	doLightUpdates
		p	1	maxUpdateCount	maxUpdateCount
		p	2	doSkylight	doSkylight
		p	3	skipEdgeLightPropagation	skipEdgeLightPropagation
	m	(Lbph;Z)V	a	setLightEnabled
		p	1	pos	pos
		p	2	lightEnabled	lightEnabled
	m	(Lbph;Z)V	b	setRetainData
		p	1	pos	pos
		p	2	retainData	retainData
	m	(Lfu;I)I	b	getLight
		p	1	pos	pos
		p	2	ambientDarkness	ambientDarkness
c	cws	net/minecraft/world/chunk/light/LightingView
	m	(Lfu;Z)V	a	updateSectionStatus
		p	1	pos	pos
		p	2	status	status
	m	(Lgo;Z)V	a	updateSectionStatus
		p	1	pos	pos
		p	2	status	status
c	cwt	net/minecraft/world/chunk/light/ChunkSkyLightProvider
	f	[Lfz;	e	DIRECTIONS
	f	[Lfz;	f	HORIZONTAL_DIRECTIONS
	m	(Lchl;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
c	cwu	net/minecraft/world/chunk/light/SkyLightStorage
	f	[Lfz;	k	LIGHT_REDUCTION_DIRECTIONS
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	m	pendingSkylightUpdates
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	lightEnabled
	f	Z	p	hasSkyLightUpdates
	m	(Lchl;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
	m	(I)Z	a	isAboveMinHeight
		p	1	blockY	blockY
	m	()V	f	checkForUpdates
	m	(J)Z	n	isAboveTopmostLightArray
		p	1	pos	pos
	m	(J)Z	o	isLightEnabled
		p	1	sectionPos	sectionPos
c	cwu$a	net/minecraft/world/chunk/light/SkyLightStorage$Data
	f	I	b	defaultTopArraySectionY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topArraySectionY
	m	()Lcwu$a;	a	copy
c	cwx	net/minecraft/fluid/EmptyFluid
c	cwy	net/minecraft/fluid/FlowableFluid
	c	Represents a fluid which can flow.
	f	Lcga;	a	FALLING
	f	Lcgi;	b	LEVEL
	f	Ljava/util/Map;	f	shapeCache
	m	(Lbpg;Lfu;Lcfj;Lfz;Lfu;Lcfj;Lcxa;Lcwz;)Z	a	canFlow
		p	1	world	world
		p	2	fluidPos	fluidPos
		p	3	fluidBlockState	fluidBlockState
		p	4	flowDirection	flowDirection
		p	5	flowTo	flowTo
		p	6	flowToBlockState	flowToBlockState
	m	(Lbpg;Lfu;Lfz;)Z	a	method_15749
		p	1	world	world
		p	2	pos	pos
	m	(Z)Lcxa;	a	getStill
		p	1	falling	falling
	m	(Lbpg;Lfu;Lcfj;Lcwz;)Z	a	canFill
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	fluid	fluid
	m	(Lbqd;Lfu;)I	a	method_15740
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;Lcxa;)V	a	tryFlow
		p	1	world	world
		p	2	fluidPos	fluidPos
		p	3	state	state
	m	(Lbqc;Lfu;Lcfj;Lfz;Lcxa;)V	a	flow
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	direction	direction
		p	5	fluidState	fluidState
	m	(Lbpg;Lcwz;Lfu;Lcfj;Lfz;Lfu;Lcfj;Lcxa;)Z	a	canFlowThrough
		p	1	world	world
		p	2	fluid	fluid
		p	3	pos	pos
		p	4	state	state
		p	5	face	face
		p	6	fromPos	fromPos
		p	7	fromState	fromState
		p	8	fluidState	fluidState
	m	(Lbpg;Lcwz;Lfu;Lcfj;Lfu;Lcfj;)Z	a	method_15736
		p	1	world	world
		p	2	fluid	fluid
		p	3	pos	pos
		p	4	state	state
		p	5	fromPos	fromPos
		p	6	fromState	fromState
	m	(Lbqc;Lfu;Lcfj;)V	a	beforeBreakingBlock
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqc;Lfu;Lcxa;Lcfj;)V	a	method_15744
		p	1	world	world
		p	2	pos	pos
		p	3	fluidState	fluidState
		p	4	blockState	blockState
	m	(Lbqd;Lfu;ILfz;Lcfj;Lfu;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I	a	method_15742
		p	1	world	world
	m	(IZ)Lcxa;	a	getFlowing
		p	1	level	level
		p	2	falling	falling
	m	(Lbqd;Lfu;Lcfj;)Lcxa;	a	getUpdatedState
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lfz;Lbpg;Lfu;Lcfj;Lfu;Lcfj;)Z	a	receivesFlow
		p	1	face	face
		p	2	world	world
		p	3	pos	pos
		p	4	state	state
		p	5	fromPos	fromPos
		p	6	fromState	fromState
	m	(Lbqb;Lfu;Lcxa;Lcxa;)I	a	getNextTickDelay
		p	1	world	world
		p	2	pos	pos
		p	3	oldState	oldState
		p	4	newState	newState
	m	(Lbqd;Lfu;Lcfj;)Ljava/util/Map;	b	getSpread
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbqd;)I	b	getFlowSpeed
		p	1	world	world
	m	(Lcxa;Lbpg;Lfu;)Z	c	isFluidAboveEqual
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lbqd;)I	c	getLevelDecreasePerBlock
		p	1	world	world
	m	()Lcwz;	d	getFlowing
	m	(Lcxa;)I	e	method_15741
		p	0	state	state
	m	()Lcwz;	e	getStill
	m	()Z	f	isInfinite
	m	(Lcxa;)Z	g	method_15748
		p	1	state	state
	m	(Lcxa;)Z	h	isMatchingAndStill
		p	1	state	state
c	cwz	net/minecraft/fluid/Fluid
	f	Lcxa;	a	defaultState
	f	Lge;	c	STATE_IDS
	f	Lcfk;	d	stateManager
	m	()Lbke;	a	getBucketItem
	m	(Lbpg;Lfu;Lcxa;)Ldem;	a	getVelocity
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcwz;)Z	a	matchesType
		p	1	fluid	fluid
	m	(Lbqb;Lfu;Lcxa;Ljava/util/Random;)V	a	randomDisplayTick
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	random	random
	m	(Lcxa;Lbpg;Lfu;)F	a	getHeight
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Ladf;)Z	a	isIn
		p	1	tag	tag
	m	(Lbqb;Lfu;Lcxa;)V	a	onScheduledTick
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcxa;)F	a	getHeight
		p	1	state	state
	m	(Lcxa;Lbpg;Lfu;Lcwz;Lfz;)Z	a	canBeReplacedWith
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	fluid	fluid
		p	5	direction	direction
	m	(Lbqd;)I	a	getTickRate
		p	1	world	world
	m	(Lcfk$a;)V	a	appendProperties
	m	(Lbqb;Lfu;Lcxa;Ljava/util/Random;)V	b	onRandomTick
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcxa;)Lcfj;	b	toBlockState
		p	1	state	state
	m	(Lcxa;Lbpg;Lfu;)Ldfg;	b	getShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	()Z	b	isEmpty
	m	(Lcxa;)Z	c	isStill
		p	1	state	state
	m	()F	c	getBlastResistance
	m	(Lcxa;)I	d	getLevel
		p	1	state	state
	m	(Lcxa;)V	f	setDefaultState
		p	1	state	state
	m	()Lcfk;	g	getStateManager
	m	()Lcxa;	h	getDefaultState
	m	()Lhf;	i	getParticle
	m	()Z	j	hasRandomTicks
c	cx	net/minecraft/command/CommandException
	f	Lmr;	a	message
	m	(Lmr;)V	<init>	<init>
		p	1	message	message
	m	()Lmr;	a	getTextMessage
c	cxa	net/minecraft/fluid/FluidState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lcwz;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1	fluid	fluid
		p	2	propertiesMap	propertiesMap
	m	(Lbqb;Lfu;)V	a	onScheduledTick
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;Lfu;)F	a	getHeight
		p	1	world	world
		p	2	pos	pos
	m	(Lbqb;Lfu;Ljava/util/Random;)V	a	randomDisplayTick
		p	1	world	world
		p	2	pos	pos
		p	3	random	random
	m	(Ladf;)Z	a	isIn
		p	1	tag	tag
	m	()Lcwz;	a	getFluid
	m	(Lbpg;Lfu;Lcwz;Lfz;)Z	a	canBeReplacedWith
		p	1	world	world
		p	2	pos	pos
		p	3	fluid	fluid
		p	4	direction	direction
	m	(Lbqb;Lfu;Ljava/util/Random;)V	b	onRandomTick
		p	1	world	world
		p	2	pos	pos
		p	3	random	random
	m	(Lbpg;Lfu;)Z	b	method_15756
		p	1	world	world
		p	2	pos	pos
	m	()Z	b	isStill
	m	(Lbpg;Lfu;)Ldem;	c	getVelocity
		p	1	world	world
		p	2	pos	pos
	m	()Z	c	isEmpty
	m	(Lbpg;Lfu;)Ldfg;	d	getShape
		p	1	world	world
		p	2	pos	pos
	m	()F	d	getHeight
	m	()I	e	getLevel
	m	()Z	f	hasRandomTicks
	m	()Lcfj;	g	getBlockState
	m	()Lhf;	h	getParticle
	m	()F	i	getBlastResistance
c	cxb	net/minecraft/fluid/Fluids
	f	Lcwy;	b	FLOWING_WATER
	f	Lcwy;	c	WATER
	f	Lcwy;	d	FLOWING_LAVA
	f	Lcwy;	e	LAVA
	m	(Ljava/lang/String;Lcwz;)Lcwz;	a	register
		p	0	id	id
		p	1	value	value
c	cxc	net/minecraft/fluid/LavaFluid
	m	(Lbqd;Lfu;)Z	a	canLightFire
		p	1	world	world
		p	2	pos	pos
	m	(Lbqc;Lfu;)V	a	playExtinguishEvent
		p	1	world	world
		p	2	pos	pos
	m	(Lbqd;Lfu;)Z	b	hasBurnableBlock
		p	1	world	world
		p	2	pos	pos
c	cxc$a	net/minecraft/fluid/LavaFluid$Flowing
c	cxc$b	net/minecraft/fluid/LavaFluid$Still
c	cxd	net/minecraft/block/Material
	f	Lcxd;	A	BAMBOO
	f	Lcxd;	B	WOOL
		c	Material for wool and bed blocks.
	f	Lcxd;	C	TNT
	f	Lcxd;	D	LEAVES
	f	Lcxd;	E	GLASS
		c	Material for glass and glass-like blocks (includes sea lanterns and conduits).
	f	Lcxd;	F	ICE
		c	Material for ice that can melt. See {@link #DENSE_ICE} for unmeltable ice.
	f	Lcxd;	G	CACTUS
	f	Lcxd;	H	STONE
		c	Material for blocks that are stone or made from it, and generally prefer to be broken by a pickaxe.
	f	Lcxd;	I	METAL
	f	Lcxd;	J	SNOW_BLOCK
		c	Material for full sized snow blocks.
	f	Lcxd;	K	REPAIR_STATION
		c	Material for blocks that can repair tools, including grindstone and anvils.
	f	Lcxd;	L	BARRIER
	f	Lcxd;	M	PISTON
	f	Lcxd;	N	UNUSED_PLANT
		c	Not in use, but has foliage color.
	f	Lcxd;	O	GOURD
		c	Material for gourds. Includes the carved pumpkin and jack o' lantern.
	f	Lcxd;	P	EGG
		c	Material for egg blocks, such as dragon and turtle eggs.
	f	Lcxd;	Q	CAKE
	f	Lcxe;	R	color
	f	Lcxf;	S	pistonBehavior
	f	Z	T	blocksMovement
	f	Z	U	burnable
	f	Z	V	liquid
	f	Z	W	blocksLight
	f	Z	X	replaceable
	f	Z	Y	solid
	f	Lcxd;	a	AIR
	f	Lcxd;	b	STRUCTURE_VOID
		c	Material for structure void block.
	f	Lcxd;	c	PORTAL
		c	Material for the various portal blocks.
	f	Lcxd;	d	CARPET
	f	Lcxd;	e	PLANT
		c	Material for plants such as flowers and crops
	f	Lcxd;	f	UNDERWATER_PLANT
		c	Material for underwater plants without the replaceable property.
	f	Lcxd;	g	REPLACEABLE_PLANT
	f	Lcxd;	h	REPLACEABLE_UNDERWATER_PLANT
	f	Lcxd;	i	WATER
	f	Lcxd;	j	BUBBLE_COLUMN
	f	Lcxd;	k	LAVA
	f	Lcxd;	l	SNOW_LAYER
		c	Material for non-full blocks of snow. Has the replaceable property.
	f	Lcxd;	m	FIRE
	f	Lcxd;	n	SUPPORTED
		c	Material for blocks that require a supporting block such as redstone components, torches, flower pots, and skulls.
	f	Lcxd;	o	COBWEB
	f	Lcxd;	p	REDSTONE_LAMP
	f	Lcxd;	q	ORGANIC_PRODUCT
		c	Material for blocks that come from mobs such as honey, slime, or infested blocks. Includes clay but not bone blocks.
	f	Lcxd;	r	SOIL
		c	Material for the top layer of soil. Path, dirt, podzol, soul soil, farmland and similar.
	f	Lcxd;	s	SOLID_ORGANIC
		c	Organic blocks that are solid, including hay, target, and grass blocks.
	f	Lcxd;	t	DENSE_ICE
		c	Material for ice blocks that do not melt. See {@link #ICE} for meltable ice.
	f	Lcxd;	u	AGGREGATE
		c	A material or structure formed from a loosely compacted mass of fragments or particles.
	f	Lcxd;	v	SPONGE
	f	Lcxd;	w	SHULKER_BOX
	f	Lcxd;	x	WOOD
		c	Material for wood logs, and things crafted from them.
	f	Lcxd;	y	NETHER_WOOD
		c	Material for blocks crafted from Nether stems and hyphae.
	f	Lcxd;	z	BAMBOO_SAPLING
	m	(Lcxe;ZZZZZZLcxf;)V	<init>	<init>
		p	1	color	color
		p	2	liquid	liquid
		p	3	solid	solid
		p	4	blocksMovement	blocksMovement
		p	5	blocksLight	blocksLight
		p	6	breakByHand	breakByHand
		p	7	burnable	burnable
	m	()Z	a	isLiquid
	m	()Z	b	isSolid
	m	()Z	c	blocksMovement
	m	()Z	d	isBurnable
	m	()Z	e	isReplaceable
	m	()Z	f	blocksLight
	m	()Lcxf;	g	getPistonBehavior
	m	()Lcxe;	h	getColor
c	cxd$a	net/minecraft/block/Material$Builder
	f	Lcxf;	a	pistonBehavior
	f	Z	b	blocksMovement
	f	Z	c	burnable
	f	Z	d	liquid
	f	Z	e	replaceable
	f	Z	f	solid
	f	Lcxe;	g	color
	f	Z	h	blocksLight
	m	(Lcxe;)V	<init>	<init>
		p	1	color	color
	m	()Lcxd$a;	a	liquid
	m	()Lcxd$a;	b	notSolid
	m	()Lcxd$a;	c	allowsMovement
	m	()Lcxd$a;	d	burnable
	m	()Lcxd$a;	e	replaceable
	m	()Lcxd$a;	f	destroyedByPiston
	m	()Lcxd$a;	g	blocksPistons
	m	()Lcxd;	h	build
	m	()Lcxd$a;	i	lightPassesThrough
c	cxe	net/minecraft/block/MaterialColor
	f	Lcxe;	A	BLUE
	f	Lcxe;	B	BROWN
	f	Lcxe;	C	GREEN
	f	Lcxe;	D	RED
	f	Lcxe;	E	BLACK
	f	Lcxe;	F	GOLD
	f	Lcxe;	G	DIAMOND
	f	Lcxe;	H	LAPIS
	f	Lcxe;	I	EMERALD
	f	Lcxe;	J	SPRUCE
	f	Lcxe;	K	NETHER
	f	Lcxe;	L	WHITE_TERRACOTTA
	f	Lcxe;	M	ORANGE_TERRACOTTA
	f	Lcxe;	N	MAGENTA_TERRACOTTA
	f	Lcxe;	O	LIGHT_BLUE_TERRACOTTA
	f	Lcxe;	P	YELLOW_TERRACOTTA
	f	Lcxe;	Q	LIME_TERRACOTTA
	f	Lcxe;	R	PINK_TERRACOTTA
	f	Lcxe;	S	GRAY_TERRACOTTA
	f	Lcxe;	T	LIGHT_GRAY_TERRACOTTA
	f	Lcxe;	U	CYAN_TERRACOTTA
	f	Lcxe;	V	PURPLE_TERRACOTTA
	f	Lcxe;	W	BLUE_TERRACOTTA
	f	Lcxe;	X	BROWN_TERRACOTTA
	f	Lcxe;	Y	GREEN_TERRACOTTA
	f	Lcxe;	Z	RED_TERRACOTTA
	f	[Lcxe;	a	COLORS
	f	Lcxe;	aa	BLACK_TERRACOTTA
	f	I	ai	color
	f	I	aj	id
	f	Lcxe;	b	CLEAR
	f	Lcxe;	c	GRASS
	f	Lcxe;	d	SAND
	f	Lcxe;	e	WEB
	f	Lcxe;	f	LAVA
	f	Lcxe;	g	ICE
	f	Lcxe;	h	IRON
	f	Lcxe;	i	FOLIAGE
	f	Lcxe;	j	WHITE
	f	Lcxe;	k	CLAY
	f	Lcxe;	l	DIRT
	f	Lcxe;	m	STONE
	f	Lcxe;	n	WATER
	f	Lcxe;	o	WOOD
	f	Lcxe;	p	QUARTZ
	f	Lcxe;	q	ORANGE
	f	Lcxe;	r	MAGENTA
	f	Lcxe;	s	LIGHT_BLUE
	f	Lcxe;	t	YELLOW
	f	Lcxe;	u	LIME
	f	Lcxe;	v	PINK
	f	Lcxe;	w	GRAY
	f	Lcxe;	x	LIGHT_GRAY
	f	Lcxe;	y	CYAN
	f	Lcxe;	z	PURPLE
	m	(II)V	<init>	<init>
		p	1	id	id
		p	2	color	color
	m	(I)I	a	getRenderColor
		p	1	shade	shade
c	cxf	net/minecraft/block/piston/PistonBehavior
c	cxg	net/minecraft/fluid/WaterFluid
c	cxg$a	net/minecraft/fluid/WaterFluid$Flowing
c	cxg$b	net/minecraft/fluid/WaterFluid$Still
c	cxi	net/minecraft/world/biome/layer/util/LayerSampler
	m	(II)I	a	sample
		p	1	x	x
		p	2	z	z
c	cxj	net/minecraft/world/biome/layer/util/LayerFactory
c	cxk	net/minecraft/world/biome/layer/util/CachingLayerSampler
	f	Lcyx;	a	operator
	f	Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;	b	cache
	f	I	c	cacheCapacity
	m	(Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;ILcyx;)V	<init>	<init>
		p	1	cache	cache
		p	2	cacheCapacity	cacheCapacity
		p	3	operator	operator
	m	()I	a	getCapacity
c	cxm	net/minecraft/world/biome/layer/util/LayerSampleContext
	m	(Lcyx;Lcxi;)Lcxi;	a	createSampler
		p	1	operator	operator
		p	2	parent	parent
	m	(II)I	a	choose
		p	1	a	a
		p	2	b	b
	m	(JJ)V	a	initSeed
		p	1	x	x
		p	3	y	y
	m	(Lcyx;)Lcxi;	a	createSampler
		p	1	operator	operator
	m	(Lcyx;Lcxi;Lcxi;)Lcxi;	a	createSampler
		p	1	operator	operator
	m	(IIII)I	a	choose
		p	1	a	a
		p	2	b	b
		p	3	c	c
		p	4	d	d
c	cxn	net/minecraft/world/biome/layer/util/LayerRandomnessSource
	m	(I)I	a	nextInt
		p	1	bound	bound
	m	()Lcwc;	b	getNoiseSampler
c	cxo	net/minecraft/world/biome/layer/util/CachingLayerContext
	f	Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;	a	cache
	f	I	b	cacheCapacity
	f	Lcwc;	c	noiseSampler
	f	J	d	worldSeed
	f	J	e	localSeed
	m	(IJJ)V	<init>	<init>
		p	1	cacheCapacity	cacheCapacity
		p	2	seed	seed
		p	4	salt	salt
	m	(Lcyx;Lcxk;)Lcxk;	a	createSampler
	m	(Lcyx;Lcxk;Lcxk;)Lcxk;	a	createSampler
	m	(JJ)J	b	addSalt
		p	0	seed	seed
		p	2	salt	salt
	m	(Lcyx;)Lcxk;	b	createSampler
c	cxq	net/minecraft/world/biome/layer/AddDeepOceanLayer
c	cxr	net/minecraft/world/biome/layer/AddClimateLayers
c	cxr$a	net/minecraft/world/biome/layer/AddClimateLayers$AddTemperateBiomesLayer
c	cxr$b	net/minecraft/world/biome/layer/AddClimateLayers$AddCoolBiomesLayer
c	cxr$c	net/minecraft/world/biome/layer/AddClimateLayers$AddSpecialBiomesLayer
c	cxs	net/minecraft/world/biome/layer/IncreaseEdgeCurvatureLayer
c	cxt	net/minecraft/world/biome/layer/AddMushroomIslandLayer
	f	I	b	MUSHROOM_FIELDS_ID
c	cxu	net/minecraft/world/biome/layer/AddColdClimatesLayer
c	cxv	net/minecraft/world/biome/layer/EaseBiomeEdgeLayer
	f	I	b	DESERT_ID
	f	I	c	MOUNTAINS_ID
	f	I	d	WOODED_MOUNTAINS_ID
	f	I	e	SNOWY_TUNDRA_ID
	f	I	f	JUNGLE_ID
	f	I	g	BAMBOO_JUNGLE_ID
	f	I	h	JUNGLE_EDGE_ID
	f	I	i	BADLANDS_ID
	f	I	j	BADLANDS_PLATEAU_ID
	f	I	k	WOODED_BADLANDS_PLATEAU_ID
	f	I	l	PLAINS_ID
	f	I	m	GIANT_TREE_TAIGA_ID
	f	I	n	MOUNTAIN_EDGE_ID
	f	I	o	SWAMP_ID
	f	I	p	TAIGA_ID
	f	I	q	SNOWY_TAIGA_ID
c	cxw	net/minecraft/world/biome/layer/SetBaseBiomesLayer
	f	I	a	BIRCH_FOREST_ID
	f	I	b	DESERT_ID
	f	I	c	MOUNTAINS_ID
	f	I	d	FOREST_ID
	f	I	e	SNOWY_TUNDRA_ID
	f	I	f	JUNGLE_ID
	f	I	g	BADLANDS_PLATEAU_ID
	f	I	h	WOODED_BADLANDS_PLATEAU_ID
	f	I	i	MUSHROOM_FIELDS_ID
	f	I	j	PLAINS_ID
	f	I	k	GIANT_TREE_TAIGA_ID
	f	I	l	DARK_FOREST_ID
	f	I	m	SAVANNA_ID
	f	I	n	SWAMP_ID
	f	I	o	TAIGA_ID
	f	I	p	SNOWY_TAIGA_ID
	f	[I	q	OLD_GROUP_1
	f	[I	r	DRY_BIOMES
	f	[I	s	TEMPERATE_BIOMES
	f	[I	t	COOL_BIOMES
	f	[I	u	SNOWY_BIOMES
	f	[I	v	chosenGroup1
	m	(Z)V	<init>	<init>
		p	1	old	old
c	cxx	net/minecraft/world/biome/layer/ContinentLayer
c	cxy	net/minecraft/world/biome/source/BiomeLayerSampler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcxk;	b	sampler
	m	(Lcxj;)V	<init>	<init>
		p	1	layerFactory	layerFactory
	m	(I)Lbre;	a	getBiome
		p	1	id	id
	m	(II)Lbre;	a	sample
		p	1	x	x
		p	2	y	y
c	cxz	net/minecraft/world/biome/layer/BiomeLayers
	f	I	a	WARM_OCEAN_ID
	f	I	b	LUKEWARM_OCEAN_ID
	f	I	c	OCEAN_ID
	f	I	d	COLD_OCEAN_ID
	f	I	e	FROZEN_OCEAN_ID
	f	I	f	DEEP_WARM_OCEAN_ID
	f	I	g	DEEP_LUKEWARM_OCEAN_ID
	f	I	h	DEEP_OCEAN_ID
	f	I	i	DEEP_COLD_OCEAN_ID
	f	I	j	DEEP_FROZEN_OCEAN_ID
	m	(ZIILjava/util/function/LongFunction;)Lcxj;	a	build
		p	0	old	old
		p	1	biomeSize	biomeSize
		p	2	riverSize	riverSize
		p	3	contextProvider	contextProvider
	m	(JZII)Lcxy;	a	build
		p	0	seed	seed
		p	2	old	old
		p	3	biomeSize	biomeSize
		p	4	riverSize	riverSize
	m	(JLcyo;Lcxj;ILjava/util/function/LongFunction;)Lcxj;	a	stack
		p	0	seed	seed
		p	2	layer	layer
		p	3	parent	parent
		p	4	count	count
		p	5	contextProvider	contextProvider
	m	(I)Z	a	isOcean
		p	0	id	id
	m	(II)Z	a	areSimilar
		p	0	id1	id1
		p	1	id2	id2
	m	(JJ)Lcxo;	a	method_15849
		p	2	salt	salt
	m	(I)Z	b	isShallowOcean
		p	0	id	id
c	cy	net/minecraft/server/command/CommandOutput
	c	Represents a subject which can receive command feedback.
	f	Lcy;	a_	DUMMY
	m	()Z	S_	shouldBroadcastConsoleToOps
	m	()Z	a	shouldReceiveFeedback
	m	(Lmr;Ljava/util/UUID;)V	a	sendSystemMessage
		p	1	message	message
		p	2	senderUuid	senderUuid
	m	()Z	b	shouldTrackOutput
c	cya	net/minecraft/world/biome/layer/OceanTemperatureLayer
c	cyb	net/minecraft/world/biome/layer/ApplyOceanTemperatureLayer
c	cyc	net/minecraft/world/biome/layer/AddBambooJungleLayer
	f	I	b	JUNGLE_ID
	f	I	c	BAMBOO_JUNGLE_ID
c	cyd	net/minecraft/world/biome/layer/AddSunflowerPlainsLayer
	f	I	b	PLAINS_ID
	f	I	c	SUNFLOWER_PLAINS
c	cye	net/minecraft/world/biome/layer/AddHillsLayer
	f	I	A	SNOWY_TAIGA_HILLS_ID
	f	I	B	TAIGA_HILLS_ID
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	I	c	BIRCH_FOREST_ID
	f	I	d	BIRCH_FOREST_HILLS_ID
	f	I	e	DESERT_ID
	f	I	f	DESERT_HILLS_ID
	f	I	g	MOUNTAINS_ID
	f	I	h	WOODED_MOUNTAINS_ID
	f	I	i	FOREST_ID
	f	I	j	WOODED_HILLS_ID
	f	I	k	SNOWY_TUNDRA_ID
	f	I	l	SNOWY_MOUNTAINS_ID
	f	I	m	JUNGLE_ID
	f	I	n	JUNGLE_HILLS_ID
	f	I	o	BAMBOO_JUNGLE_ID
	f	I	p	BAMBOO_JUNGLE_HILLS_ID
	f	I	q	BADLANDS_ID
	f	I	r	WOODED_BADLANDS_PLATEAU_ID
	f	I	s	PLAINS_ID
	f	I	t	GIANT_TREE_TAIGA_ID
	f	I	u	GIANT_TREE_TAIGA_HILLS_ID
	f	I	v	DARK_FOREST_ID
	f	I	w	SAVANNA_ID
	f	I	x	SAVANNA_PLATEAU_ID
	f	I	y	TAIGA_ID
	f	I	z	SNOWY_TAIGA_ID
c	cyf	net/minecraft/world/biome/layer/AddIslandLayer
c	cyg	net/minecraft/world/biome/layer/SimpleLandNoiseLayer
c	cyh	net/minecraft/world/biome/layer/NoiseToRiverLayer
	f	I	b	RIVER_ID
	m	(I)I	c	isValidForRiver
		p	0	value	value
c	cyi	net/minecraft/world/biome/layer/AddRiversLayer
	f	I	b	FROZEN_RIVER_ID
	f	I	c	SNOWY_TUNDRA_ID
	f	I	d	MUSHROOM_FIELDS_ID
	f	I	e	MUSHROOM_FIELD_SHORE_ID
	f	I	f	RIVER_ID
c	cyj	net/minecraft/world/biome/layer/AddEdgeBiomesLayer
	f	I	b	BEACH_ID
	f	I	c	SNOWY_BEACH_ID
	f	I	d	DESERT_ID
	f	I	e	MOUNTAINS_ID
	f	I	f	WOODED_MOUNTAINS_ID
	f	I	g	FOREST_ID
	f	I	h	JUNGLE_ID
	f	I	i	JUNGLE_EDGE_ID
	f	I	j	JUNGLE_HILLS_ID
	f	I	k	BADLANDS_ID
	f	I	l	WOODED_BADLANDS_PLATEAU_ID
	f	I	m	BADLANDS_PLATEAU_ID
	f	I	n	ERODED_BADLANDS_ID
	f	I	o	MODIFIED_WOODED_BADLANDS_PLATEAU_ID
	f	I	p	MODIFIED_BADLANDS_PLATEAU_ID
	f	I	q	MUSHROOM_FIELDS_ID
	f	I	r	MUSHROOM_FIELD_SHORE_ID
	f	I	s	RIVER_ID
	f	I	t	MOUNTAIN_EDGE_ID
	f	I	u	STONE_SHORE_ID
	f	I	v	SWAMP_ID
	f	I	w	TAIGA_ID
	m	(I)Z	c	isWooded
		p	0	id	id
	m	(I)Z	d	isBadlands
		p	1	id	id
c	cyk	net/minecraft/world/biome/layer/SmoothenShorelineLayer
c	cyl	net/minecraft/world/biome/layer/ScaleLayer
	m	(Lcxm;IIII)I	a	sample
		p	1	context	context
c	cyn	net/minecraft/world/biome/layer/type/InitLayer
	m	(Lcxn;II)I	a	sample
		p	1	context	context
		p	2	x	x
		p	3	y	y
	m	(Lcxm;)Lcxj;	a	create
		p	1	context	context
	m	(Lcxm;II)I	a	method_15857
		p	2	x	x
		p	3	z	z
c	cyo	net/minecraft/world/biome/layer/type/ParentedLayer
	m	(Lcxm;Lcxj;)Lcxj;	a	create
		p	1	context	context
		p	2	parent	parent
	m	(Lcxm;Lcxi;II)I	a	sample
		p	1	context	context
		p	2	parent	parent
		p	3	x	x
		p	4	z	z
c	cyp	net/minecraft/world/biome/layer/type/MergingLayer
	m	(Lcxm;Lcxj;Lcxj;)Lcxj;	a	create
		p	1	context	context
		p	2	layer1	layer1
		p	3	layer2	layer2
	m	(Lcxn;Lcxi;Lcxi;II)I	a	sample
		p	1	context	context
		p	2	sampler1	sampler1
		p	3	sampler2	sampler2
		p	4	x	x
		p	5	z	z
c	cyq	net/minecraft/world/biome/layer/type/DiagonalCrossSamplingLayer
	m	(Lcxn;IIIII)I	a	sample
		p	1	context	context
		p	2	sw	sw
		p	3	se	se
		p	4	ne	ne
		p	5	nw	nw
		p	6	center	center
c	cyr	net/minecraft/world/biome/layer/type/IdentitySamplingLayer
	m	(Lcxn;I)I	a	sample
		p	1	context	context
		p	2	value	value
c	cys	net/minecraft/world/biome/layer/type/SouthEastSamplingLayer
	m	(Lcxn;I)I	a	sample
		p	1	context	context
		p	2	se	se
c	cyt	net/minecraft/world/biome/layer/type/CrossSamplingLayer
	m	(Lcxn;IIIII)I	a	sample
		p	1	context	context
		p	2	n	n
		p	3	e	e
		p	4	s	s
		p	5	w	w
		p	6	center	center
c	cyu	net/minecraft/world/biome/layer/util/IdentityCoordinateTransformer
c	cyv	net/minecraft/world/biome/layer/util/NorthWestCoordinateTransformer
c	cyw	net/minecraft/world/biome/layer/util/CoordinateTransformer
	m	(I)I	a	transformX
		p	1	x	x
	m	(I)I	b	transformZ
		p	1	y	y
c	cyx	net/minecraft/world/biome/layer/util/LayerOperator
	m	(II)I	apply	apply
		p	1	x	x
		p	2	z	z
c	cz	net/minecraft/server/command/ServerCommandSource
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	REQUIRES_PLAYER_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	REQUIRES_ENTITY_EXCEPTION
	f	Lcy;	c	output
	f	Ldem;	d	position
	f	Lzd;	e	world
	f	I	f	level
	f	Ljava/lang/String;	g	simpleName
	f	Lmr;	h	name
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Z	j	silent
	f	Laom;	k	entity
	f	Lcom/mojang/brigadier/ResultConsumer;	l	resultConsumer
	f	Ldg$a;	m	entityAnchor
	f	Ldel;	n	rotation
	m	(Lcy;Ldem;Ldel;Lzd;ILjava/lang/String;Lmr;Lnet/minecraft/server/MinecraftServer;Laom;ZLcom/mojang/brigadier/ResultConsumer;Ldg$a;)V	<init>	<init>
		p	1	output	output
		p	2	pos	pos
		p	3	rot	rot
		p	4	world	world
		p	5	level	level
		p	6	simpleName	simpleName
		p	7	name	name
		p	8	server	server
		p	9	entity	entity
		p	10	silent	silent
		p	11	consumer	consumer
		p	12	entityAnchor	entityAnchor
	m	(Lcy;Ldem;Ldel;Lzd;ILjava/lang/String;Lmr;Lnet/minecraft/server/MinecraftServer;Laom;)V	<init>	<init>
		p	1	output	output
		p	2	pos	pos
		p	3	rot	rot
		p	4	world	world
		p	5	level	level
		p	6	simpleName	simpleName
		p	7	name	name
		p	8	server	server
		p	9	entity	entity
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	onCommandComplete
		p	1	context	context
		p	2	success	success
		p	3	result	result
	m	(Ldg$a;)Lcz;	a	withEntityAnchor
		p	1	anchor	anchor
	m	(Ldem;)Lcz;	a	withPosition
		p	1	position	position
	m	(Laom;)Lcz;	a	withEntity
		p	1	entity	entity
	m	(Lcom/mojang/brigadier/ResultConsumer;)Lcz;	a	withConsumer
		p	1	consumer	consumer
	m	()Lcz;	a	withSilent
	m	(Lzd;)Lcz;	a	withWorld
		p	1	world	world
	m	(Lmr;)V	a	sendError
		p	1	message	message
	m	(Ldel;)Lcz;	a	withRotation
		p	1	rotation	rotation
	m	(Laom;Ldg$a;)Lcz;	a	withLookingAt
		p	1	entity	entity
		p	2	anchor	anchor
	m	(Lmr;Z)V	a	sendFeedback
		p	1	message	message
		p	2	broadcastToOps	broadcastToOps
	m	(Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lcz;	a	mergeConsumers
		p	1	consumer	consumer
	m	(I)Lcz;	a	withLevel
		p	1	level	level
	m	(Lmr;)V	b	sendToOps
		p	1	message	message
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	b	method_9224
		p	0	context	context
		p	1	success	success
		p	2	result	result
	m	(I)Lcz;	b	withMaxLevel
		p	1	level	level
	m	()Lmr;	b	getDisplayName
	m	(Ldem;)Lcz;	b	withLookingAt
		p	1	position	position
	m	()Ljava/lang/String;	c	getName
	m	()Ldem;	d	getPosition
	m	()Lzd;	e	getWorld
	m	()Laom;	f	getEntity
	m	()Laom;	g	getEntityOrThrow
		c	Gets the entity from this command source or throws a command syntax exception if this command source is not an entity.
	m	()Lze;	h	getPlayer
		c	Gets the player from this command source or throws a command syntax exception if this command source is not a player.
	m	()Ldel;	i	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	j	getMinecraftServer
	m	()Ldg$a;	k	getEntityAnchor
c	cza	net/minecraft/entity/ai/pathing/PathMinHeap
	f	[Lczd;	a	pathNodes
	f	I	b	count
	m	(Lczd;F)V	a	setNodeWeight
		p	1	node	node
		p	2	weight	weight
	m	()V	a	clear
	m	(Lczd;)Lczd;	a	push
		p	1	node	node
	m	(I)V	a	shiftUp
		p	1	index	index
	m	(I)V	b	shiftDown
		p	1	index	index
	m	()Lczd;	c	pop
	m	()Z	e	isEmpty
c	czb	net/minecraft/entity/ai/pathing/PathNodeType
	f	F	x	defaultPenalty
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3	defaultPenalty	defaultPenalty
	m	()F	a	getDefaultPenalty
c	czc	net/minecraft/entity/ai/pathing/BirdPathNodeMaker
	m	(Laoz;III)Lczb;	a	getNodeType
		p	1	entity	entity
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lczd;)Z	a	isPassable
		p	1	node	node
	m	(Laoz;Lfu;)Lczb;	a	getNodeType
		p	1	entity	entity
		p	2	pos	pos
	m	(Lczd;)Z	b	unvisited
		p	1	node	node
c	czd	net/minecraft/entity/ai/pathing/PathNode
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	d	heapIndex
	f	F	e	penalizedPathLength
	f	F	f	distanceToNearestTarget
	f	F	g	heapWeight
	f	Lczd;	h	previous
	f	Z	i	visited
	f	F	j	pathLength
	f	F	k	penalty
	f	Lczb;	l	type
	f	I	m	hashCode
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()Lfu;	a	getPos
	m	(III)Lczd;	a	copyWithNewPosition
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lczd;)F	a	getDistance
		p	1	node	node
	m	(III)I	b	hash
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lczd;)F	b	getSquaredDistance
		p	1	node	node
	m	(Lmg;)Lczd;	b	fromBuffer
		p	0	buffer	buffer
	m	(Lfu;)F	c	getManhattanDistance
		p	1	pos	pos
	m	(Lczd;)F	c	getManhattanDistance
		p	1	node	node
	m	()Z	c	isInHeap
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	cze	net/minecraft/entity/ai/pathing/PathNodeMaker
	f	Lbql;	a	cachedWorld
	f	Laoz;	b	entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	pathNodeCache
	f	I	d	entityBlockXSize
	f	I	e	entityBlockYSize
	f	I	f	entityBlockZSize
	f	Z	g	canEnterOpenDoors
	f	Z	h	canOpenDoors
	f	Z	i	canSwim
	m	(III)Lczd;	a	getNode
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbpg;III)Lczb;	a	getDefaultNodeType
		c	Gets the path node type at the given position without adjusting the node type according to whether the entity can enter or open doors
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lbpg;IIILaoz;IIIZZ)Lczb;	a	getNodeType
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	mob	mob
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	canOpenDoors	canOpenDoors
		p	10	canEnterOpenDoors	canEnterOpenDoors
	m	(DDD)Lczj;	a	getNode
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()V	a	clear
	m	([Lczd;Lczd;)I	a	getSuccessors
		p	1	successors	successors
		p	2	node	node
	m	(Z)V	a	setCanEnterOpenDoors
		p	1	canEnterOpenDoors	canEnterOpenDoors
	m	(Lbql;Laoz;)V	a	init
		p	1	cachedWorld	cachedWorld
		p	2	entity	entity
	m	()Lczd;	b	getStart
	m	(Z)V	b	setCanOpenDoors
		p	1	canOpenDoors	canOpenDoors
	m	(Z)V	c	setCanSwim
		p	1	canSwim	canSwim
	m	()Z	c	canEnterOpenDoors
	m	()Z	d	canOpenDoors
	m	()Z	e	canSwim
c	czf	net/minecraft/entity/ai/pathing/Path
	f	Ljava/util/List;	a	nodes
	f	I	e	currentNodeIndex
	f	Lfu;	f	target
	f	F	g	manhattanDistanceFromTarget
	f	Z	h	reachesTarget
	m	(Ljava/util/List;Lfu;Z)V	<init>	<init>
		p	1	nodes	nodes
		p	2	target	target
		p	3	reachesTarget	reachesTarget
	m	(ILczd;)V	a	setNode
		p	1	index	index
		p	2	node	node
	m	(I)Lczd;	a	getNode
		p	1	index	index
	m	(Laom;)Ldem;	a	getNodePosition
	m	(Lczf;)Z	a	equalsPath
	m	()V	a	next
	m	(Laom;I)Ldem;	a	getNodePosition
		p	1	entity	entity
		p	2	index	index
	m	()Z	b	isFinished
	m	(I)V	b	setLength
		p	1	length	length
	m	(Lmg;)Lczf;	b	fromBuffer
		p	0	buffer	buffer
	m	(I)V	c	setCurrentNodeIndex
		p	1	index	index
	m	()Lczd;	c	getEnd
	m	()Ljava/util/List;	d	getNodes
	m	()I	e	getLength
	m	()I	f	getCurrentNodeIndex
	m	()Lgr;	g	getCurrentPosition
	m	()Z	i	reachesTarget
	m	()Lfu;	m	getTarget
	m	()F	n	getManhattanDistanceFromTarget
c	czg	net/minecraft/entity/ai/pathing/NavigationType
c	czh	net/minecraft/entity/ai/pathing/PathNodeNavigator
	f	[Lczd;	a	successors
	f	I	b	range
	f	Lcze;	c	pathNodeMaker
	f	Lcza;	d	minHeap
	m	(Lcze;I)V	<init>	<init>
		p	1	pathNodeMaker	pathNodeMaker
		p	2	range	range
	m	(Lczd;Ljava/util/Map;FIF)Lczf;	a	findPathToAny
		p	1	startNode	startNode
		p	2	positions	positions
		p	3	followRange	followRange
		p	4	distance	distance
		p	5	rangeMultiplier	rangeMultiplier
	m	(Lbql;Laoz;Ljava/util/Set;FIF)Lczf;	a	findPathToAny
		p	1	world	world
		p	2	mob	mob
		p	3	positions	positions
		p	4	followRange	followRange
		p	5	distance	distance
		p	6	rangeMultiplier	rangeMultiplier
	m	(Lczd;Lfu;Z)Lczf;	a	createPath
		p	1	endNode	endNode
		p	2	target	target
		p	3	reachesTarget	reachesTarget
	m	(Lczd;Ljava/util/Set;)F	a	calculateDistances
		p	1	node	node
		p	2	targets	targets
c	czi	net/minecraft/entity/ai/pathing/WaterPathNodeMaker
	f	Z	j	canJumpOutOfWater
	m	(Z)V	<init>	<init>
		p	1	canJumpOutOfWater	canJumpOutOfWater
	m	(III)Lczd;	b	getPathNodeInWater
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(III)Lczb;	c	getNodeType
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	czj	net/minecraft/entity/ai/pathing/TargetPathNode
	f	F	m	nearestNodeDistance
	f	Lczd;	n	nearestNode
	f	Z	o	reached
	m	(Lczd;)V	<init>	<init>
		p	1	node	node
	m	(FLczd;)V	a	updateNearestNode
		p	1	distance	distance
		p	2	node	node
	m	(Lmg;)Lczj;	c	fromBuffer
		p	0	buffer	buffer
	m	()Lczd;	d	getNearestNode
	m	()V	e	markReached
c	czk	net/minecraft/entity/ai/pathing/AmphibiousPathNodeMaker
	f	F	k	oldWalkablePenalty
	f	F	l	oldWaterBorderPenalty
	m	(IIIID)Lczd;	a	getPathNode
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	maxYStep	maxYStep
		p	5	prevFeetY	prevFeetY
	m	(Lfu;)D	b	getFeetY
		p	1	pos	pos
c	czl	net/minecraft/entity/ai/pathing/LandPathNodeMaker
	f	F	j	waterPathNodeTypeWeight
	m	(Lbpg;ZZLfu;Lczb;)Lczb;	a	adjustNodeType
		p	1	world	world
		p	2	canOpenDoors	canOpenDoors
		p	3	canEnterOpenDoors	canEnterOpenDoors
		p	4	pos	pos
		p	5	type	type
	m	(Lbpg;Lfu$a;)Lczb;	a	getLandNodeType
	m	(IIIIDLfz;Lczb;)Lczd;	a	getPathNode
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	maxYStep	maxYStep
		p	5	prevFeetY	prevFeetY
		p	7	direction	direction
	m	(Lbpg;Lfu$a;Lczb;)Lczb;	a	getNodeTypeFromNeighbors
	m	(Lczd;Lczd;)Z	a	isValidDiagonalSuccessor
		p	1	node	node
		p	2	successor1	successor1
	m	(Lbpg;Lfu;)D	a	getFeetY
		p	0	world	world
		p	1	pos	pos
	m	(Lbpg;IIIIIIZZLjava/util/EnumSet;Lczb;Lfu;)Lczb;	a	findNearbyNodeTypes
		c	Adds the node types in the box with the given size to the input EnumSet.\n@return The node type at the least coordinates of the input box.
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	sizeX	sizeX
		p	6	sizeY	sizeY
		p	7	sizeZ	sizeZ
		p	8	canOpenDoors	canOpenDoors
		p	9	canEnterOpenDoors	canEnterOpenDoors
		p	10	nearbyTypes	nearbyTypes
		p	11	type	type
		p	12	pos	pos
	m	(Laoz;Lfu;)Lczb;	a	getNodeType
		p	1	entity	entity
		p	2	pos	pos
	m	(Lbpg;Lfu;)Lczb;	b	getCommonNodeType
c	czp	net/minecraft/scoreboard/ScoreboardSynchronizer
	f	Lczq;	a	compound
	m	(Lczq;)V	<init>	<init>
		p	1	compound	compound
c	czq	net/minecraft/world/PersistentState
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	key
	f	Z	c	dirty
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Z)V	a	setDirty
		p	1	dirty	dirty
	m	(Lle;)V	a	fromTag
		p	1	tag	tag
	m	(Ljava/io/File;)V	a	save
	m	(Lle;)Lle;	b	toTag
		p	1	tag	tag
	m	()V	b	markDirty
	m	()Z	c	isDirty
	m	()Ljava/lang/String;	d	getId
c	czr	net/minecraft/item/map/MapBannerMarker
	f	Lfu;	a	pos
	f	Lbje;	b	color
	f	Lmr;	c	name
	m	(Lfu;Lbje;Lmr;)V	<init>	<init>
		p	1	pos	pos
		p	2	dyeColor	dyeColor
		p	3	name	name
	m	()Lfu;	a	getPos
	m	(Lle;)Lczr;	a	fromNbt
		p	0	tag	tag
	m	(Lbpg;Lfu;)Lczr;	a	fromWorldBlock
		p	0	blockView	blockView
		p	1	blockPos	blockPos
	m	()Lczs$a;	c	getIconType
	m	()Lmr;	d	getName
	m	()Lle;	e	getNbt
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/lang/String;	f	getKey
c	czs	net/minecraft/item/map/MapIcon
	f	Lczs$a;	a	type
	f	B	b	x
	f	B	c	z
	f	B	d	rotation
	f	Lmr;	e	text
	m	(Lczs$a;BBBLmr;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	3	z	z
		p	4	rotation	rotation
		p	5	text	text
	m	()B	a	getTypeId
	m	()Lczs$a;	b	getType
	m	()B	c	getX
	m	()B	d	getZ
	m	()B	e	getRotation
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Z	f	isAlwaysRendered
	m	()Lmr;	g	getText
c	czs$a	net/minecraft/item/map/MapIcon$Type
	f	B	B	id
	f	Z	C	alwaysRender
	f	I	D	tintColor
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3	renderNotHeld	renderNotHeld
	m	(Ljava/lang/String;IZI)V	<init>	<init>
		p	3	alwaysRender	alwaysRender
		p	4	tintColor	tintColor
	m	()B	a	getId
	m	(B)Lczs$a;	a	byId
		p	0	id	id
	m	()Z	b	isAlwaysRendered
	m	()Z	c	hasTintColor
	m	()I	d	getTintColor
c	czt	net/minecraft/item/map/MapFrameMarker
	f	Lfu;	a	pos
	f	I	b	rotation
	f	I	c	entityId
	m	(Lfu;II)V	<init>	<init>
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	entityId	entityId
	m	(Lfu;)Ljava/lang/String;	a	getKey
		p	0	pos	pos
	m	()Lle;	a	toTag
	m	(Lle;)Lczt;	a	fromTag
		p	0	tag	tag
	m	()Lfu;	b	getPos
	m	()I	c	getRotation
	m	()I	d	getEntityId
	m	()Ljava/lang/String;	e	getKey
c	czu	net/minecraft/world/IdCountsState
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	idCounts
	m	()I	a	getNextMapId
c	czv	net/minecraft/item/map/MapState
	f	I	a	xCenter
	f	I	b	zCenter
	f	Lug;	c	dimension
	f	Z	d	showIcons
	f	Z	e	unlimitedTracking
	f	B	f	scale
	f	[B	g	colors
	f	Z	h	locked
	f	Ljava/util/List;	i	updateTrackers
	f	Ljava/util/Map;	j	icons
	f	Ljava/util/Map;	l	updateTrackersByPlayer
	f	Ljava/util/Map;	m	banners
	f	Ljava/util/Map;	n	frames
	m	(Lbec;Lbki;)V	a	update
		p	1	player	player
		p	2	stack	stack
	m	(DDI)V	a	calculateCenter
		p	1	x	x
		p	3	z	z
		p	5	scale	scale
	m	(II)V	a	markDirty
		p	1	x	x
		p	2	z	z
	m	(Lczv;)V	a	copyFrom
		p	1	state	state
	m	(Lbki;Lbpg;Lbec;)Lni;	a	getPlayerMarkerPacket
		p	1	map	map
		p	2	world	world
		p	3	pos	pos
	m	(Lfu;I)V	a	removeFrame
		p	1	pos	pos
		p	2	id	id
	m	(Lczs$a;Lbqc;Ljava/lang/String;DDDLmr;)V	a	addIcon
		p	1	type	type
		p	2	world	world
		p	3	key	key
		p	4	x	x
		p	6	z	z
		p	8	rotation	rotation
		p	10	text	text
	m	(Lbqc;Lfu;)V	a	addBanner
		p	1	world	world
		p	2	pos	pos
	m	(Lbpg;II)V	a	removeBanner
		p	1	world	world
		p	2	x	x
		p	3	z	z
	m	(Lbki;Lfu;Ljava/lang/String;Lczs$a;)V	a	addDecorationsTag
		p	0	stack	stack
		p	1	pos	pos
		p	2	id	id
		p	3	type	type
	m	(IIIZZLug;)V	a	init
		p	1	x	x
		p	2	z	z
		p	3	scale	scale
		p	4	showIcons	showIcons
		p	5	unlimitedTracking	unlimitedTracking
		p	6	dimension	dimension
	m	(Lbec;)Lczv$a;	a	getPlayerSyncData
		p	1	player	player
c	czv$a	net/minecraft/item/map/MapState$PlayerUpdateTracker
	f	Lbec;	a	player
	f	Z	d	dirty
	f	I	e	startX
	f	I	f	startZ
	f	I	g	endX
	f	I	h	endZ
	f	I	i	emptyPacketsRequested
	m	(Lczv;Lbec;)V	<init>	<init>
		p	1	player	player
	m	(II)V	a	markDirty
		p	1	x	x
		p	2	z	z
	m	(Lbki;)Lni;	a	getPacket
		p	1	stack	stack
c	czy	net/minecraft/command/DataCommandStorage
	f	Ljava/util/Map;	a	storages
	f	Ldaa;	b	stateManager
	m	(Ldaa;)V	<init>	<init>
		p	1	stateManager	stateManager
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getSaveKey
		p	0	namespace	namespace
	m	()Ljava/util/stream/Stream;	a	getIds
	m	(Luh;Lle;)V	a	set
		p	1	id	id
		p	2	tag	tag
	m	(Ljava/lang/String;Ljava/lang/String;)Lczy$a;	a	createStorage
		p	1	namespace	namespace
		p	2	saveKey	saveKey
	m	(Luh;)Lle;	a	get
		p	1	id	id
c	czy$a	net/minecraft/command/DataCommandStorage$PersistentState
	f	Ljava/util/Map;	a	map
	m	(Ljava/lang/String;Lle;)V	a	set
		p	1	name	name
		p	2	tag	tag
	m	(Ljava/lang/String;)Lle;	a	get
		p	1	name	name
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	b	getIds
		p	1	namespace	namespace
c	czz	net/minecraft/world/level/UnmodifiableLevelProperties
	f	Ldak;	b	properties
c	d	net/minecraft/util/math/Quaternion
	f	Ld;	a	IDENTITY
	f	F	b	x
	f	F	c	y
	f	F	d	z
	f	F	e	w
	m	(Ld;)V	<init>	<init>
		p	1	other	other
	m	(Lg;FZ)V	<init>	<init>
		p	1	axis	axis
		p	2	rotationAngle	rotationAngle
		p	3	degrees	degrees
	m	(FFFF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	w	w
	m	(FFFZ)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	degrees	degrees
	m	(Ld;)V	a	hamiltonProduct
		p	1	other	other
	m	()F	a	getX
	m	(F)V	a	scale
		p	1	scale	scale
	m	(FFFF)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	w	w
	m	()F	b	getY
	m	(F)F	b	cos
		p	0	value	value
	m	()F	c	getZ
	m	(F)F	c	sin
		p	0	value	value
	m	()F	d	getW
	m	()V	e	conjugate
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()V	f	normalize
	m	()Ld;	g	copy
c	da	net/minecraft/server/command/CommandManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/CommandDispatcher;	b	dispatcher
	m	(Lda$a;)V	<init>	<init>
		p	1	environment	environment
	m	(Lda$b;)Ljava/util/function/Predicate;	a	getCommandValidator
		p	0	parser	parser
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcz;Ljava/util/Map;)V	a	makeTreeForSource
		p	1	tree	tree
		p	2	result	result
		p	3	source	source
		p	4	resultNodes	resultNodes
	m	(Lcz;Ljava/lang/String;)I	a	execute
		p	1	commandSource	commandSource
		p	2	command	command
	m	(Lze;)V	a	sendCommandTree
		p	1	player	player
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	literal
		p	0	literal	literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	0	name	name
		p	1	type	type
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	getException
		p	0	parse	parse
c	da$a	net/minecraft/server/command/CommandManager$RegistrationEnvironment
	c	Describes the environment in which commands are registered.
	f	Z	d	integrated
	f	Z	e	dedicated
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3	integrated	integrated
		p	4	dedicated	dedicated
	m	(Lda$a;)Z	a	isDedicated
		p	0	rule	rule
	m	(Lda$a;)Z	b	isIntegrated
		p	0	rule	rule
c	da$b	net/minecraft/server/command/CommandManager$CommandParser
c	daa	net/minecraft/world/PersistentStateManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	loadedStates
	f	Lcom/mojang/datafixers/DataFixer;	c	dataFixer
	f	Ljava/io/File;	d	directory
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1	directory	directory
		p	2	dataFixer	dataFixer
	m	(Lczq;)V	a	set
		p	1	state	state
	m	(Ljava/lang/String;)Ljava/io/File;	a	getFile
		p	1	id	id
	m	(Ljava/lang/String;I)Lle;	a	readTag
		p	1	id	id
		p	2	dataVersion	dataVersion
	m	()V	a	save
	m	(Ljava/io/PushbackInputStream;)Z	a	isCompressed
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)Lczq;	a	getOrCreate
		p	1	factory	factory
		p	2	id	id
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)Lczq;	b	get
		p	1	factory	factory
		p	2	id	id
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)Lczq;	c	readFromFile
		p	1	factory	factory
		p	2	id	id
c	dab	net/minecraft/world/WorldProperties
	m	()I	a	getSpawnX
	m	(Lk;)V	a	populateCrashReport
		p	1	reportSection	reportSection
	m	()I	b	getSpawnY
	m	(Z)V	b	setRaining
		p	1	raining	raining
	m	()I	c	getSpawnZ
	m	()J	d	getTime
	m	()J	e	getTimeOfDay
	m	()Z	h	isThundering
	m	()Z	j	isRaining
	m	()Z	m	isHardcore
	m	()Lbpx;	p	getGameRules
	m	()Land;	r	getDifficulty
	m	()Z	s	isDifficultyLocked
c	dac	net/minecraft/util/WorldSavePath
	f	Ldac;	i	ROOT
	f	Ljava/lang/String;	j	relativePath
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	relativePath	relativePath
	m	()Ljava/lang/String;	a	getRelativePath
c	dad	net/minecraft/world/level/storage/LevelStorageException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	message	message
c	dae	net/minecraft/world/level/storage/LevelStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	TIME_FORMATTER
	f	Ljava/nio/file/Path;	d	savesDirectory
	f	Ljava/nio/file/Path;	e	backupsDirectory
	f	Lcom/mojang/datafixers/DataFixer;	f	dataFixer
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1	savesDirectory	savesDirectory
		p	2	backupsDirectory	backupsDirectory
		p	3	dataFixer	dataFixer
	m	(Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object;	a	readLevelProperties
	m	(Ljava/lang/String;)Z	a	isLevelNameValid
		p	1	name	name
	m	(Ljava/nio/file/Path;)Ldae;	a	create
		p	0	path	path
	m	()Ljava/util/List;	b	getLevelList
	m	(Ljava/lang/String;)Z	b	levelExists
		p	1	name	name
	m	(Lcom/mojang/serialization/DynamicOps;Lbpn;)Ljava/util/function/BiFunction;	b	readLevelProperties
	m	()Ljava/nio/file/Path;	c	getSavesDirectory
	m	(Ljava/lang/String;)Ldae$a;	c	createSession
		p	1	directoryName	directoryName
	m	()Ljava/nio/file/Path;	d	getBackupsDirectory
	m	()I	g	getCurrentVersion
c	dae$a	net/minecraft/world/level/storage/LevelStorage$Session
	f	Ladp;	b	lock
	f	Ljava/nio/file/Path;	c	directory
	f	Ljava/lang/String;	d	directoryName
	f	Ljava/util/Map;	e	paths
	m	(Ldae;Ljava/lang/String;)V	<init>	<init>
		p	2	directoryName	directoryName
	m	(Ldac;)Ljava/nio/file/Path;	a	getDirectory
		p	1	savePath	savePath
	m	(Lug;)Ljava/io/File;	a	getWorldDirectory
		p	1	key	key
	m	(Laed;)Z	a	convert
		p	1	progressListener	progressListener
	m	(Lcom/mojang/serialization/DynamicOps;Lbpn;)Ldal;	a	readLevelProperties
	m	()Ljava/lang/String;	a	getDirectoryName
	m	(Ljava/lang/String;)V	a	save
		p	1	name	name
	m	(Ldac;)Ljava/nio/file/Path;	b	method_27428
		p	1	path	path
	m	()Z	c	needsConversion
	m	()Ljava/io/File;	f	getIconFile
	m	()V	g	deleteSessionLock
	m	()J	h	createBackup
	m	()V	i	checkValid
c	dae$a$1	net/minecraft/world/level/storage/LevelStorage$Session$1
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	m	(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	a	postVisitDirectory
c	dae$a$2	net/minecraft/world/level/storage/LevelStorage$Session$2
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
c	daf	net/minecraft/world/level/storage/LevelSummary
	f	Ljava/lang/String;	c	name
	f	Z	d	requiresConversion
	f	Z	e	locked
	f	Ljava/io/File;	f	file
	m	(Ldaf;)I	a	compareTo
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getDisplayName
	m	()Ljava/io/File;	c	getFile
	m	()Z	d	requiresConversion
	m	()J	e	getLastPlayed
	m	()Lbpy;	g	getGameMode
	m	()Z	h	isHardcore
	m	()Z	i	hasCheats
	m	()Lmx;	j	getVersion
	m	()Z	l	isDifferentVersion
	m	()Z	m	isFutureLevel
	m	()Z	n	isOutdatedLevel
	m	()Z	o	isLocked
c	dag	net/minecraft/world/level/storage/SaveVersionInfo
	f	I	a	levelFormatVersion
	f	J	b	lastPlayed
	f	Ljava/lang/String;	c	versionName
	f	I	d	versionId
	f	Z	e	stable
	m	(IJLjava/lang/String;IZ)V	<init>	<init>
		p	1	levelFormatVersion	levelFormatVersion
		p	2	lastPlayed	lastPlayed
		p	4	versionName	versionName
		p	5	versionId	versionId
		p	6	stable	stable
	m	(Lcom/mojang/serialization/Dynamic;)Ldag;	a	fromDynamic
		p	0	dynamic	dynamic
	m	()I	a	getLevelFormatVersion
	m	()J	b	getLastPlayed
	m	()Ljava/lang/String;	c	getVersionName
	m	()I	d	getVersionId
	m	()Z	e	isStable
c	dah	net/minecraft/world/level/storage/AnvilLevelStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ldae$a;Laed;)Z	a	convertLevel
	m	(Ljava/io/File;Ljava/lang/Iterable;Lbrh;IILaed;)V	a	convertRegions
		p	4	currentCount	currentCount
	m	(Ljava/io/File;Ljava/util/Collection;)V	a	addRegionFiles
	m	(Ljava/io/File;Ljava/io/File;Lbrh;IILaed;)V	a	convertRegion
		p	1	baseFolder	baseFolder
		p	4	progressStart	progressStart
	m	(Ldae$a;)V	a	makeMcrLevelDatBackup
c	dai	net/minecraft/world/WorldSaveHandler
	f	Lcom/mojang/datafixers/DataFixer;	a	dataFixer
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	playerDataDir
	m	(Lbec;)V	a	savePlayerData
	m	()[Ljava/lang/String;	a	getSavedPlayerIds
	m	(Lbec;)Lle;	b	loadPlayerData
c	daj	net/minecraft/world/level/LevelProperties
	f	Ljava/util/UUID;	A	wanderingTraderId
	f	Ljava/util/Set;	B	serverBrands
	f	Z	C	modded
	f	Lded;	D	scheduledEvents
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	e	spawnX
	f	I	f	spawnY
	f	I	g	spawnZ
	f	J	h	time
	f	J	i	timeOfDay
	f	Lcom/mojang/datafixers/DataFixer;	j	dataFixer
	f	I	k	dataVersion
	f	Z	l	playerDataLoaded
	f	Lle;	m	playerData
	f	I	n	version
	f	I	o	clearWeatherTime
	f	Z	p	raining
	f	I	q	rainTime
	f	Z	r	thundering
	f	I	s	thunderTime
	f	Z	t	initialized
	f	Z	u	difficultyLocked
	f	Lcgw$c;	v	worldBorder
	f	Lle;	x	customBossEvents
	f	I	y	wanderingTraderSpawnDelay
	f	I	z	wanderingTraderSpawnChance
	m	(Lcom/mojang/datafixers/DataFixer;ILle;ZIIIJJIIIZIZZZLcgw$c;IILjava/util/UUID;Ljava/util/LinkedHashSet;Lded;Lle;Lle;Lbqe;Lcix;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1	dataFixer	dataFixer
		p	2	dataVersion	dataVersion
		p	3	playerData	playerData
		p	4	modded	modded
		p	5	spawnX	spawnX
		p	6	spawnY	spawnY
		p	7	spawnZ	spawnZ
		p	8	time	time
		p	10	timeOfDay	timeOfDay
		p	12	version	version
		p	13	clearWeatherTime	clearWeatherTime
		p	14	rainTime	rainTime
		p	15	raining	raining
		p	16	thunderTime	thunderTime
		p	17	thundering	thundering
		p	18	initialized	initialized
		p	19	difficultyLocked	difficultyLocked
		p	20	worldBorder	worldBorder
		p	21	wanderingTraderSpawnDelay	wanderingTraderSpawnDelay
		p	22	wanderingTraderSpawnChance	wanderingTraderSpawnChance
		p	23	wanderingTraderId	wanderingTraderId
		p	24	serverBrands	serverBrands
	m	()V	I	loadPlayerData
	m	(Lgm;Lle;Lle;)V	a	updateProperties
c	dak	net/minecraft/world/level/ServerWorldProperties
	m	(Lcgw$c;)V	a	setWorldBorder
		p	1	properties	properties
	m	(Z)V	a	setThundering
		p	1	thundering	thundering
	m	(Lbpy;)V	a	setGameMode
		p	1	gameMode	gameMode
	m	(J)V	a	setTime
		p	1	time	time
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1	uuid	uuid
	m	(I)V	a	setClearWeatherTime
		p	1	clearWeatherTime	clearWeatherTime
	m	(J)V	b	setTimeOfDay
		p	1	time	time
	m	(Z)V	c	setInitialized
		p	1	initialized	initialized
	m	(I)V	e	setThunderTime
		p	1	thunderTime	thunderTime
	m	()Ljava/lang/String;	f	getLevelName
	m	(I)V	f	setRainTime
		p	1	rainTime	rainTime
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1	wanderingTraderSpawnDelay	wanderingTraderSpawnDelay
	m	()I	g	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1	wanderingTraderSpawnChance	wanderingTraderSpawnChance
	m	()I	i	getThunderTime
	m	()I	k	getRainTime
	m	()Lbpy;	l	getGameMode
	m	()Z	n	areCommandsAllowed
	m	()Z	o	isInitialized
	m	()Lcgw$c;	q	getWorldBorder
	m	()Lded;	t	getScheduledEvents
	m	()I	u	getWanderingTraderSpawnDelay
	m	()I	v	getWanderingTraderSpawnChance
c	dal	net/minecraft/world/SaveProperties
	m	()Lle;	D	getCustomBossEvents
	m	()Z	E	isModded
	m	()Ljava/util/Set;	F	getServerBrands
	m	()Ldak;	G	getMainWorldProperties
	m	()Lbqe;	H	getLevelInfo
	m	(Lgm;Lle;)Lle;	a	cloneWorldTag
	m	(Land;)V	a	setDifficulty
		p	1	difficulty	difficulty
	m	(Lbpy;)V	a	setGameMode
		p	1	gameMode	gameMode
	m	(Lk;)V	a	populateCrashReport
	m	(Ljava/lang/String;Z)V	a	addServerBrand
		p	1	brand	brand
		p	2	modded	modded
	m	(Lle;)V	b	setCustomBossEvents
		p	1	tag	tag
	m	(Z)V	d	setDifficultyLocked
		p	1	locked	locked
	m	()Ljava/lang/String;	f	getLevelName
	m	(I)Ljava/lang/String;	i	getFormatName
		p	1	id	id
	m	()Lbpy;	l	getGameMode
	m	()Z	m	isHardcore
	m	()Z	n	areCommandsAllowed
	m	()Lbpx;	p	getGameRules
	m	()Land;	r	getDifficulty
	m	()Z	s	isDifficultyLocked
	m	()Lle;	x	getPlayerData
	m	()I	y	getVersion
	m	()Lcix;	z	getGeneratorOptions
c	dam	net/minecraft/world/MutableWorldProperties
	m	(Lfu;)V	a	setSpawnPos
		p	1	pos	pos
	m	(I)V	b	setSpawnX
		p	1	spawnX	spawnX
	m	(I)V	c	setSpawnY
		p	1	spawnY	spawnY
	m	(I)V	d	setSpawnZ
		p	1	spawnZ	spawnZ
c	dan	net/minecraft/loot/BinomialLootTableRange
	f	I	d	n
	f	F	e	p
	m	(IF)V	<init>	<init>
		p	1	n	n
		p	2	p	p
	m	(IF)Ldan;	a	create
		p	0	n	n
		p	1	p	p
c	dan$a	net/minecraft/loot/BinomialLootTableRange$Serializer
	m	(Ldan;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldan;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	range	range
		p	2	unused	unused
		p	3	context	context
c	dao	net/minecraft/loot/LootTables
	f	Luh;	Q	WHITE_SHEEP_ENTITY
	f	Luh;	R	ORANGE_SHEEP_ENTITY
	f	Luh;	S	MAGENTA_SHEEP_ENTITY
	f	Luh;	T	LIGHT_BLUE_SHEEP_ENTITY
	f	Luh;	U	YELLOW_SHEEP_ENTITY
	f	Luh;	V	LIME_SHEEP_ENTITY
	f	Luh;	W	PINK_SHEEP_ENTITY
	f	Luh;	X	GRAY_SHEEP_ENTITY
	f	Luh;	Y	LIGHT_GRAY_SHEEP_ENTITY
	f	Luh;	Z	CYAN_SHEEP_ENTITY
	f	Luh;	a	EMPTY
	f	Ljava/util/Set;	aA	LOOT_TABLES_READ_ONLY
	f	Luh;	aa	PURPLE_SHEEP_ENTITY
	f	Luh;	ab	BLUE_SHEEP_ENTITY
	f	Luh;	ac	BROWN_SHEEP_ENTITY
	f	Luh;	ad	GREEN_SHEEP_ENTITY
	f	Luh;	ae	RED_SHEEP_ENTITY
	f	Luh;	af	BLACK_SHEEP_ENTITY
	f	Ljava/util/Set;	az	LOOT_TABLES
	f	Luh;	b	SPAWN_BONUS_CHEST
	f	Luh;	e	VILLAGE_WEAPONSMITH_CHEST
	f	Luh;	f	VILLAGE_TOOLSMITH_CHEST
	f	Luh;	g	VILLAGE_ARMORER_CHEST
	f	Luh;	h	VILLAGE_CARTOGRAPHER_CHEST
	f	Luh;	i	VILLAGE_MASON_CHEST
	f	Luh;	j	VILLAGE_SHEPARD_CHEST
	f	Luh;	k	VILLAGE_BUTCHER_CHEST
	f	Luh;	l	VILLAGE_FLETCHER_CHEST
	f	Luh;	m	VILLAGE_FISHER_CHEST
	f	Luh;	n	VILLAGE_TANNERY_CHEST
	f	Luh;	o	VILLAGE_TEMPLE_CHEST
	f	Luh;	p	VILLAGE_DESERT_HOUSE_CHEST
	f	Luh;	q	VILLAGE_PLAINS_CHEST
	f	Luh;	r	VILLAGE_TAIGA_HOUSE_CHEST
	f	Luh;	s	VILLAGE_SNOWY_HOUSE_CHEST
	f	Luh;	t	VILLAGE_SAVANNA_HOUSE_CHEST
	m	()Ljava/util/Set;	a	getAll
	m	(Ljava/lang/String;)Luh;	a	register
		p	0	id	id
	m	(Luh;)Luh;	a	registerLootTable
		p	0	id	id
c	dap	net/minecraft/loot/ConstantLootTableRange
	f	I	d	value
	m	(I)V	<init>	<init>
		p	1	value	value
	m	(I)Ldap;	a	create
		p	0	value	value
c	dap$a	net/minecraft/loot/ConstantLootTableRange$Serializer
	m	(Ldap;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldap;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	range	range
		p	2	unused	unused
		p	3	context	context
c	daq	net/minecraft/loot/LootGsons
	m	()Lcom/google/gson/GsonBuilder;	a	getConditionGsonBuilder
	m	()Lcom/google/gson/GsonBuilder;	b	getFunctionGsonBuilder
	m	()Lcom/google/gson/GsonBuilder;	c	getTableGsonBuilder
c	dar	net/minecraft/util/JsonSerializing
	m	(Lgl;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Ldar$a;	a	createTypeHandler
		p	0	registry	registry
		p	1	rootFieldName	rootFieldName
		p	2	idFieldName	idFieldName
		p	3	typeIdentification	typeIdentification
c	dar$a	net/minecraft/util/JsonSerializing$TypeHandler
	c	A handler of JSON serializable types that can either obtain a type from\na registry to handle JSON conversion or handle with a custom logic bound\nto a type.\n\n<p>When the root element read is an object, the handler obtains the type\nfrom registry to handle reading; otherwise, it falls back to custom\nlogic.</p>
	f	Lgl;	a	registry
	f	Ljava/lang/String;	b	rootFieldName
	f	Ljava/lang/String;	c	idFieldName
	f	Ljava/util/function/Function;	d	typeIdentification
	f	Lcom/mojang/datafixers/util/Pair;	e	customSerializer
	m	(Lgl;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1	registry	registry
		p	2	rootFieldName	rootFieldName
		p	3	idFieldName	idFieldName
		p	4	typeIdentification	typeIdentification
	m	()Ljava/lang/Object;	a	createGsonSerializer
c	dar$b	net/minecraft/util/JsonSerializing$CustomSerializer
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	toJson
		p	1	object	object
		p	2	context	context
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	fromJson
		p	1	json	json
		p	2	context	context
c	dar$c	net/minecraft/util/JsonSerializing$GsonSerializer
	f	Lgl;	a	registry
	f	Ljava/lang/String;	b	rootFieldName
	f	Ljava/lang/String;	c	idFieldName
	f	Ljava/util/function/Function;	d	typeIdentification
	f	Lcom/mojang/datafixers/util/Pair;	e	elementSerializer
	m	(Lgl;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)V	<init>	<init>
		p	2	rootFieldName	rootFieldName
		p	3	idFieldName	idFieldName
		p	4	typeIdentification	typeIdentification
c	das	net/minecraft/loot/operator/BoundedIntUnaryOperator
	f	Ljava/lang/Integer;	a	min
	f	Ljava/lang/Integer;	b	max
	f	Ljava/util/function/IntUnaryOperator;	c	operator
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(I)Ldas;	a	createMin
		p	0	min	min
	m	(II)Ldas;	a	create
		p	0	min	min
		p	1	max	max
	m	(I)I	applyAsInt	applyAsInt
		p	1	value	value
	m	(I)Ldas;	b	createMax
		p	0	max	max
c	das$a	net/minecraft/loot/operator/BoundedIntUnaryOperator$Serializer
	m	(Ldas;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldas;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	op	op
		p	2	type	type
		p	3	context	context
c	dat	net/minecraft/loot/context/LootContext
	f	Ljava/util/Random;	a	random
	f	F	b	luck
	f	Lzd;	c	world
	f	Ljava/util/function/Function;	d	tableGetter
	f	Ljava/util/Set;	e	activeTables
	f	Ljava/util/function/Function;	f	conditionGetter
	f	Ljava/util/Set;	g	conditions
	f	Ljava/util/Map;	h	parameters
	f	Ljava/util/Map;	i	drops
	m	(Ljava/util/Random;FLzd;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1	random	random
		p	2	luck	luck
		p	3	world	world
		p	4	tableGetter	tableGetter
		p	5	conditionSetter	conditionSetter
		p	6	parameters	parameters
		p	7	drops	drops
	m	(Ldcx;)Z	a	hasParameter
		p	1	parameter	parameter
	m	()Ljava/util/Random;	a	getRandom
	m	(Ldaw;)Z	a	markActive
		p	1	table	table
	m	(Luh;)Ldaw;	a	getSupplier
		p	1	id	id
	m	(Luh;Ljava/util/function/Consumer;)V	a	drop
		p	1	id	id
		p	2	lootConsumer	lootConsumer
	m	(Lddm;)Z	a	addCondition
		p	1	condition	condition
	m	()F	b	getLuck
	m	(Luh;)Lddm;	b	getCondition
		p	1	id	id
	m	(Ldaw;)V	b	markInactive
		p	1	table	table
	m	(Lddm;)V	b	removeCondition
		p	1	condition	condition
	m	(Ldcx;)Ljava/lang/Object;	c	get
		p	1	parameter	parameter
	m	()Lzd;	c	getWorld
c	dat$a	net/minecraft/loot/context/LootContext$Builder
	f	Lzd;	a	world
	f	Ljava/util/Map;	b	parameters
	f	Ljava/util/Map;	c	drops
	f	Ljava/util/Random;	d	random
	f	F	e	luck
	m	(Lzd;)V	<init>	<init>
		p	1	world	world
	m	(Ldcy;)Ldat;	a	build
		p	1	type	type
	m	(F)Ldat$a;	a	luck
		p	1	luck	luck
	m	(Ldcx;Ljava/lang/Object;)Ldat$a;	a	parameter
		p	1	key	key
		p	2	value	value
	m	(J)Ldat$a;	a	random
		p	1	seed	seed
	m	()Lzd;	a	getWorld
	m	(Ldcx;)Ljava/lang/Object;	a	get
		p	1	parameter	parameter
	m	(JLjava/util/Random;)Ldat$a;	a	random
		p	1	seed	seed
		p	3	random	random
	m	(Luh;Ldat$b;)Ldat$a;	a	putDrop
		p	1	id	id
		p	2	value	value
	m	(Ljava/util/Random;)Ldat$a;	a	random
		p	1	random	random
	m	(Ldcx;)Ljava/lang/Object;	b	getNullable
		p	1	parameter	parameter
	m	(Ldcx;Ljava/lang/Object;)Ldat$a;	b	optionalParameter
		p	1	key	key
		p	2	value	value
c	dat$b	net/minecraft/loot/context/LootContext$Dropper
	m	(Ldat;Ljava/util/function/Consumer;)V	add	add
		p	1	context	context
c	dat$c	net/minecraft/loot/context/LootContext$EntityTarget
	f	Ljava/lang/String;	e	type
	f	Ldcx;	f	parameter
	m	(Ljava/lang/String;ILjava/lang/String;Ldcx;)V	<init>	<init>
		p	3	type	type
		p	4	parameter	parameter
	m	()Ldcx;	a	getParameter
	m	(Ljava/lang/String;)Ldat$c;	a	fromString
		p	0	type	type
c	dat$c$a	net/minecraft/loot/context/LootContext$EntityTarget$Serializer
	m	(Lcom/google/gson/stream/JsonWriter;Ldat$c;)V	a	write
	m	(Lcom/google/gson/stream/JsonReader;)Ldat$c;	a	read
	m	(Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object;	read	read
		p	1	reader	reader
	m	(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V	write	write
		p	1	writer	writer
		p	2	entity	entity
c	dau	net/minecraft/loot/context/LootContextAware
	m	()Ljava/util/Set;	a	getRequiredParameters
	m	(Ldbe;)V	a	validate
		p	1	reporter	reporter
c	dav	net/minecraft/loot/LootPool
	f	[Ldbo;	a	entries
	f	[Lddm;	b	conditions
	f	Ljava/util/function/Predicate;	c	predicate
	f	[Ldch;	d	functions
	f	Ljava/util/function/BiFunction;	e	javaFunctions
	f	Ldaz;	f	rolls
	f	Ldbb;	g	bonusRolls
	m	([Ldbo;[Lddm;[Ldch;Ldaz;Ldbb;)V	<init>	<init>
		p	1	entries	entries
		p	2	conditions	conditions
		p	3	functions	functions
		p	4	rolls	rolls
		p	5	bonusRolls	bonusRolls
	m	(Ljava/util/function/Consumer;Ldat;)V	a	addGeneratedLoot
		p	1	lootConsumer	lootConsumer
		p	2	context	context
	m	()Ldav$a;	a	builder
	m	(Ldat;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Ldbn;)V	a	method_342
		p	3	choice	choice
	m	(Ldbe;)V	a	validate
	m	(Ljava/util/function/Consumer;Ldat;)V	b	supplyOnce
		p	1	lootConsumer	lootConsumer
		p	2	context	context
c	dav$a	net/minecraft/loot/LootPool$Builder
	f	Ljava/util/List;	a	entries
	f	Ljava/util/List;	b	conditions
	f	Ljava/util/List;	c	functions
	f	Ldaz;	d	rolls
	f	Ldbb;	e	bonusRollsRange
	m	(Ldch$a;)Ldav$a;	a	apply
	m	()Ldav$a;	a	getThis
	m	(Ldbo$a;)Ldav$a;	a	with
		p	1	entry	entry
	m	(Ldaz;)Ldav$a;	a	rolls
		p	1	rolls	rolls
	m	(Lddm$a;)Ldav$a;	a	conditionally
	m	()Ldav;	b	build
c	dav$b	net/minecraft/loot/LootPool$Serializer
	m	(Ldav;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldav;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	daw	net/minecraft/loot/LootTable
	f	Ldaw;	a	EMPTY
	f	Ldcy;	b	GENERIC
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ldcy;	d	type
	f	[Ldav;	e	pools
	f	[Ldch;	f	functions
	f	Ljava/util/function/BiFunction;	g	combinedFunction
	m	(Ldcy;[Ldav;[Ldch;)V	<init>	<init>
		p	1	type	type
		p	2	pools	pools
		p	3	functions	functions
	m	(Ljava/util/function/Consumer;Lbki;)V	a	method_331
		p	1	stack	stack
	m	()Ldcy;	a	getType
	m	(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	processStacks
		p	0	lootConsumer	lootConsumer
	m	(Lamz;Ljava/util/Random;)Ljava/util/List;	a	getFreeSlots
		p	1	inventory	inventory
		p	2	random	random
	m	(Lamz;Ldat;)V	a	supplyInventory
		p	1	inventory	inventory
		p	2	context	context
	m	(Ljava/util/List;ILjava/util/Random;)V	a	shuffle
		p	1	drops	drops
		p	2	freeSlots	freeSlots
		p	3	random	random
	m	(Ldat;)Ljava/util/List;	a	generateLoot
		p	1	context	context
	m	(Ldat;Ljava/util/function/Consumer;)V	a	generateUnprocessedLoot
		p	1	context	context
		p	2	lootConsumer	lootConsumer
	m	(Ldbe;)V	a	validate
		p	1	reporter	reporter
	m	(Ldat;Ljava/util/function/Consumer;)V	b	generateLoot
		p	1	context	context
		p	2	lootConsumer	lootConsumer
	m	()Ldaw$a;	b	builder
c	daw$a	net/minecraft/loot/LootTable$Builder
	f	Ljava/util/List;	a	pools
	f	Ljava/util/List;	b	functions
	f	Ldcy;	c	type
	m	()Ldaw$a;	a	getThis
	m	(Ldav$a;)Ldaw$a;	a	pool
		p	1	poolBuilder	poolBuilder
	m	(Ldcy;)Ldaw$a;	a	type
		p	1	context	context
	m	(Ldch$a;)Ldaw$a;	a	apply
	m	()Ldaw;	b	build
c	daw$b	net/minecraft/loot/LootTable$Serializer
	m	(Ldaw;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldaw;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	supplier	supplier
		p	2	unused	unused
		p	3	context	context
c	dax	net/minecraft/loot/LootManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	tables
	f	Lday;	d	conditionManager
	m	(Lday;)V	<init>	<init>
		p	1	conditionManager	conditionManager
	m	(Ljava/util/Map;Labc;Lami;)V	a	apply
	m	()Ljava/util/Set;	a	getTableIds
	m	(Luh;)Ldaw;	a	getTable
		p	1	id	id
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	method_368
		p	0	key	key
		p	1	value	value
	m	(Ldaw;)Lcom/google/gson/JsonElement;	a	toJson
		p	0	table	table
	m	(Ldbe;Luh;Ldaw;)V	a	validate
		p	0	reporter	reporter
		p	1	id	id
		p	2	table	table
c	day	net/minecraft/loot/condition/LootConditionManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	conditions
	m	(Ljava/util/Map;Labc;Lami;)V	a	apply
	m	(Luh;)Lddm;	a	get
		p	1	id	id
	m	()Ljava/util/Set;	a	getIds
c	day$a	net/minecraft/loot/condition/LootConditionManager$AndCondition
	f	[Lddm;	a	terms
	f	Ljava/util/function/Predicate;	b	predicate
	m	([Lddm;)V	<init>	<init>
		p	1	elements	elements
	m	(Ldat;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	daz	net/minecraft/loot/LootTableRange
	f	Luh;	a	CONSTANT
	f	Luh;	b	UNIFORM
	f	Luh;	c	BINOMIAL
	m	(Ljava/util/Random;)I	a	next
		p	1	random	random
	m	()Luh;	a	getType
c	db	net/minecraft/server/command/CommandSource
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	getCompletions
		p	1	context	context
		p	2	builder	builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestIdentifiers
		p	0	candidates	candidates
		p	1	builder	builder
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestFromIdentifier
		p	0	candidates	candidates
		p	1	builder	builder
		p	2	identifier	identifier
		p	3	tooltip	tooltip
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestMatching
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestPositions
		p	1	candidates	candidates
		p	2	builder	builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestFromIdentifier
		p	0	candidates	candidates
		p	1	builder	builder
		p	2	identifier	identifier
		p	3	tooltip	tooltip
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestIdentifiers
		p	1	builder	builder
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	forEachMatching
		p	0	candidates	candidates
		p	3	identifier	identifier
		p	4	action	action
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	forEachMatching
		p	0	candidates	candidates
		p	2	identifier	identifier
		p	3	action	action
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestIdentifiers
		p	0	candidates	candidates
		p	1	builder	builder
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggestColumnPositions
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestMatching
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestMatching
	m	(I)Z	c	hasPermissionLevel
		p	1	level	level
	m	()Ljava/util/Collection;	l	getPlayerNames
	m	()Ljava/util/Collection;	m	getTeamNames
	m	()Ljava/util/Collection;	n	getSoundIds
	m	()Ljava/util/stream/Stream;	o	getRecipeIds
	m	()Ljava/util/Set;	p	getWorldKeys
	m	()Ljava/util/Collection;	r	getEntitySuggestions
	m	()Ljava/util/Collection;	s	getBlockPositionSuggestions
	m	()Ljava/util/Collection;	t	getPositionSuggestions
c	db$a	net/minecraft/server/command/CommandSource$RelativePosition
	f	Ldb$a;	a	ZERO_LOCAL
	f	Ldb$a;	b	ZERO_WORLD
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	dba	net/minecraft/loot/LootTableRanges
	f	Ljava/util/Map;	a	TYPES
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ldaz;	a	fromJson
		p	0	json	json
		p	1	context	context
	m	(Ldaz;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	toJson
		p	0	range	range
		p	1	context	context
c	dbb	net/minecraft/loot/UniformLootTableRange
	f	F	d	min
	f	F	e	max
	m	(FF)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(F)V	<init>	<init>
		p	1	value	value
	m	(FF)Ldbb;	a	between
		p	0	min	min
		p	1	max	max
	m	(I)Z	a	contains
		p	1	value	value
	m	(Ljava/util/Random;)F	b	nextFloat
		p	1	random	random
	m	()F	b	getMinValue
	m	()F	c	getMaxValue
c	dbb$a	net/minecraft/loot/UniformLootTableRange$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldbb;	a	deserialize
	m	(Ldbb;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	dbc	net/minecraft/util/JsonSerializer
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
		p	1	json	json
		p	2	object	object
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	fromJson
		p	1	json	json
		p	2	context	context
c	dbd	net/minecraft/util/JsonSerializableType
	f	Ldbc;	a	jsonSerializer
	m	(Ldbc;)V	<init>	<init>
		p	1	jsonSerializer	jsonSerializer
	m	()Ldbc;	a	getJsonSerializer
c	dbe	net/minecraft/loot/LootTableReporter
	f	Lcom/google/common/collect/Multimap;	a	messages
	f	Ljava/util/function/Supplier;	b	nameFactory
	f	Ldcy;	c	contextType
	f	Ljava/util/function/Function;	d	conditionGetter
	f	Ljava/util/Set;	e	conditions
	f	Ljava/util/function/Function;	f	tableGetter
	f	Ljava/util/Set;	g	tables
	f	Ljava/lang/String;	h	name
	m	(Ldcy;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1	contextType	contextType
		p	2	conditionGetter	conditionGetter
		p	3	tableFactory	tableFactory
	m	(Lcom/google/common/collect/Multimap;Ljava/util/function/Supplier;Ldcy;Ljava/util/function/Function;Ljava/util/Set;Ljava/util/function/Function;Ljava/util/Set;)V	<init>	<init>
		p	1	messages	messages
		p	2	nameFactory	nameFactory
		p	3	contextType	contextType
		p	4	conditionGetter	conditionGetter
		p	5	conditions	conditions
		p	6	tableGetter	tableGetter
		p	7	tables	tables
	m	(Ldau;)V	a	validateContext
		p	1	contextAware	contextAware
	m	(Ljava/lang/String;)V	a	report
		p	1	message	message
	m	(Ljava/lang/String;Luh;)Ldbe;	a	withTable
		p	1	name	name
		p	2	id	id
	m	(Ldcy;)Ldbe;	a	withContextType
		p	1	contextType	contextType
	m	()Lcom/google/common/collect/Multimap;	a	getMessages
	m	(Luh;)Z	a	hasTable
		p	1	id	id
	m	(Ljava/lang/String;Luh;)Ldbe;	b	withCondition
		p	1	name	name
		p	2	id	id
	m	(Luh;)Z	b	hasCondition
		p	1	id	id
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/String;)Ldbe;	b	makeChild
		p	1	name	name
	m	(Luh;)Ldaw;	c	getTable
		p	1	id	id
	m	(Luh;)Lddm;	d	getCondition
		p	1	id	id
c	dbf	net/minecraft/loot/entry/AlternativeEntry
	m	([Ldbo$a;)Ldbf$a;	a	builder
		p	0	children	children
	m	([Ldbg;Ldat;Ljava/util/function/Consumer;)Z	a	method_387
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
c	dbf$a	net/minecraft/loot/entry/AlternativeEntry$Builder
	f	Ljava/util/List;	a	children
	m	([Ldbo$a;)V	<init>	<init>
		p	1	children	children
	m	()Ldbf$a;	a	getThisBuilder
c	dbg	net/minecraft/loot/entry/EntryCombiner
	f	Ldbg;	a	ALWAYS_FALSE
	f	Ldbg;	b	ALWAYS_TRUE
	m	(Ldat;Ljava/util/function/Consumer;)Z	a	doExpand
	m	(Ldbg;Ldat;Ljava/util/function/Consumer;)Z	a	method_16777
		p	2	context	context
		p	3	lootChoiceExpander	lootChoiceExpander
	m	(Ldbg;)Ldbg;	a	and
		p	1	other	other
	m	(Ldbg;)Ldbg;	b	or
		p	1	other	other
	m	(Ldbg;Ldat;Ljava/util/function/Consumer;)Z	b	method_16779
		p	2	context	context
		p	3	lootChoiceExpander	lootChoiceExpander
	m	(Ldat;Ljava/util/function/Consumer;)Z	expand	expand
		p	1	context	context
		p	2	choiceConsumer	choiceConsumer
c	dbh	net/minecraft/loot/entry/CombinedEntry
	f	[Ldbo;	c	children
	f	Ldbg;	e	predicate
	m	([Ldbo;[Lddm;)V	<init>	<init>
		p	1	children	children
		p	2	conditions	conditions
	m	(Ldbh$a;)Ldbo$b;	a	createSerializer
	m	([Ldbg;)Ldbg;	a	combine
		p	1	children	children
c	dbh$1	net/minecraft/loot/entry/CombinedEntry$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldbh;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldbh;Lcom/google/gson/JsonSerializationContext;)V	a	addEntryFields
c	dbh$a	net/minecraft/loot/entry/CombinedEntry$Factory
	m	([Ldbo;[Lddm;)Ldbh;	create	create
		p	1	children	children
		p	2	conditions	conditions
c	dbi	net/minecraft/loot/entry/DynamicEntry
	f	Luh;	g	name
	m	(Luh;II[Lddm;[Ldch;)V	<init>	<init>
		p	1	name	name
		p	2	weight	weight
		p	3	quality	quality
		p	4	conditions	conditions
		p	5	functions	functions
	m	(Luh;)Ldbq$a;	a	builder
		p	0	name	name
	m	(Luh;II[Lddm;[Ldch;)Ldbq;	a	method_391
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
c	dbi$a	net/minecraft/loot/entry/DynamicEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Ldbi;Lcom/google/gson/JsonSerializationContext;)V	a	addEntryFields
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lddm;[Ldch;)Ldbi;	a	fromJson
c	dbj	net/minecraft/loot/entry/EmptyEntry
	m	(II[Lddm;[Ldch;)V	<init>	<init>
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	()Ldbq$a;	b	Serializer
c	dbj$a	net/minecraft/loot/entry/EmptyEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lddm;[Ldch;)Ldbj;	a	fromJson
c	dbk	net/minecraft/loot/entry/SequenceEntry
	m	([Ldbg;Ldat;Ljava/util/function/Consumer;)Z	a	method_452
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
c	dbl	net/minecraft/loot/entry/ItemEntry
	f	Lbke;	g	item
	m	(Lbke;II[Lddm;[Ldch;)V	<init>	<init>
		p	1	item	item
		p	2	weight	weight
		p	3	quality	quality
		p	4	conditions	conditions
		p	5	functions	functions
	m	(Lbqa;II[Lddm;[Ldch;)Ldbq;	a	method_409
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	(Lbqa;)Ldbq$a;	a	builder
		p	0	drop	drop
c	dbl$a	net/minecraft/loot/entry/ItemEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lddm;[Ldch;)Ldbl;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldbl;Lcom/google/gson/JsonSerializationContext;)V	a	addEntryFields
c	dbm	net/minecraft/loot/entry/LootPoolEntryTypes
	m	()Ljava/lang/Object;	a	createGsonSerializer
	m	(Ljava/lang/String;Ldbc;)Ldbp;	a	register
		p	0	id	id
c	dbn	net/minecraft/loot/LootChoice
	m	(F)I	a	getWeight
		p	1	luck	luck
	m	(Ljava/util/function/Consumer;Ldat;)V	a	generateLoot
		p	1	lootConsumer	lootConsumer
		p	2	context	context
c	dbo	net/minecraft/loot/entry/LootPoolEntry
	f	Ljava/util/function/Predicate;	c	conditionPredicate
	f	[Lddm;	d	conditions
	m	([Lddm;)V	<init>	<init>
		p	1	conditions	conditions
	m	(Ldat;)Z	a	test
		p	1	context	context
	m	()Ldbp;	a	getType
	m	(Ldbe;)V	a	validate
		p	1	reporter	reporter
c	dbo$a	net/minecraft/loot/entry/LootPoolEntry$Builder
	f	Ljava/util/List;	a	conditions
	m	(Lddm$a;)Ldbo$a;	a	conditionally
	m	(Ldbo$a;)Ldbf$a;	a	alternatively
		p	1	builder	builder
	m	()Ldbo;	b	build
	m	()Ldbo$a;	d	getThisBuilder
	m	()Ldbo$a;	e	getThis
	m	()[Lddm;	f	getConditions
c	dbo$b	net/minecraft/loot/entry/LootPoolEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Ldbo;Lcom/google/gson/JsonSerializationContext;)V	a	addEntryFields
		p	1	json	json
		p	2	entry	entry
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbo;	b	fromJson
	m	(Lcom/google/gson/JsonObject;Ldbo;Lcom/google/gson/JsonSerializationContext;)V	b	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldbo;	b	fromJson
		p	1	json	json
		p	2	context	context
		p	3	conditions	conditions
c	dbp	net/minecraft/loot/entry/LootPoolEntryType
c	dbq	net/minecraft/loot/entry/LeafEntry
	f	I	c	weight
	f	I	e	quality
	f	[Ldch;	f	functions
	f	Ljava/util/function/BiFunction;	g	compiledFunctions
	f	Ldbn;	h	choice
	m	(II[Lddm;[Ldch;)V	<init>	<init>
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	(Ljava/util/function/Consumer;Ldat;)V	a	generateLoot
		p	1	lootConsumer	lootConsumer
		p	2	context	context
	m	(Ldbq$d;)Ldbq$a;	a	builder
		p	0	factory	factory
c	dbq$a	net/minecraft/loot/entry/LeafEntry$Builder
	f	I	a	weight
	f	I	b	quality
	f	Ljava/util/List;	c	functions
	m	(I)Ldbq$a;	a	weight
		p	1	weight	weight
	m	()[Ldch;	a	getFunctions
	m	(Ldch$a;)Ldbq$a;	a	apply
	m	(I)Ldbq$a;	b	quality
		p	1	quality	quality
c	dbq$b	net/minecraft/loot/entry/LeafEntry$BasicBuilder
	f	Ldbq$d;	c	factory
	m	(Ldbq$d;)V	<init>	<init>
		p	1	factory	factory
	m	()Ldbq$b;	g	getThisBuilder
c	dbq$c	net/minecraft/loot/entry/LeafEntry$Choice
c	dbq$d	net/minecraft/loot/entry/LeafEntry$Factory
	m	(II[Lddm;[Ldch;)Ldbq;	build	build
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
c	dbq$e	net/minecraft/loot/entry/LeafEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Ldbq;Lcom/google/gson/JsonSerializationContext;)V	a	addEntryFields
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldbq;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lddm;[Ldch;)Ldbq;	b	fromJson
		p	1	entryJson	entryJson
		p	2	context	context
		p	3	weight	weight
		p	4	quality	quality
		p	5	conditions	conditions
		p	6	functions	functions
c	dbr	net/minecraft/loot/entry/LootTableEntry
	f	Luh;	g	id
	m	(Luh;II[Lddm;[Ldch;)V	<init>	<init>
		p	1	id	id
		p	2	weight	weight
		p	3	quality	quality
		p	4	conditions	conditions
		p	5	functions	functions
	m	(Luh;)Ldbq$a;	a	builder
		p	0	id	id
	m	(Luh;II[Lddm;[Ldch;)Ldbq;	a	method_430
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
c	dbr$a	net/minecraft/loot/entry/LootTableEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Ldbr;Lcom/google/gson/JsonSerializationContext;)V	a	addEntryFields
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lddm;[Ldch;)Ldbr;	a	fromJson
c	dbs	net/minecraft/loot/entry/GroupEntry
	m	([Ldbg;Ldat;Ljava/util/function/Consumer;)Z	a	method_400
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
c	dbt	net/minecraft/loot/entry/TagEntry
	f	Ladf;	g	name
	f	Z	h	expand
	m	(Ladf;ZII[Lddm;[Ldch;)V	<init>	<init>
		p	1	name	name
		p	2	expand	expand
		p	3	weight	weight
		p	4	quality	quality
		p	5	conditions	conditions
		p	6	functions	functions
	m	(Ladf;II[Lddm;[Ldch;)Ldbq;	a	method_444
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	(Ldat;Ljava/util/function/Consumer;)Z	a	grow
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
	m	(Ladf;)Ldbq$a;	b	builder
		p	0	name	name
c	dbt$a	net/minecraft/loot/entry/TagEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Ldbt;Lcom/google/gson/JsonSerializationContext;)V	a	addEntryFields
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lddm;[Ldch;)Ldbt;	a	fromJson
c	dbv	net/minecraft/loot/function/ApplyBonusLootFunction
	f	Ljava/util/Map;	a	FACTORIES
	f	Lbnw;	b	enchantment
	f	Ldbv$b;	d	formula
	m	([Lddm;Lbnw;Ldbv$b;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	enchantment	enchantment
		p	3	formula	formula
	m	(Lbnw;I[Lddm;)Ldch;	a	method_462
		p	2	conditions	conditions
	m	(Lbnw;)Ldcg$a;	a	oreDrops
		p	0	enchantment	enchantment
	m	(Lbnw;IF[Lddm;)Ldch;	a	method_459
		p	3	conditions	conditions
	m	(Lbnw;[Lddm;)Ldch;	a	method_457
		p	1	conditions	conditions
	m	(Lbnw;FI)Ldcg$a;	a	binomialWithBonusCount
		p	0	enchantment	enchantment
		p	1	probability	probability
		p	2	extra	extra
	m	(Lbnw;I)Ldcg$a;	a	uniformBonusCount
		p	0	enchantment	enchantment
		p	1	bonusMultiplier	bonusMultiplier
	m	(Lbnw;[Lddm;)Ldch;	b	method_453
		p	1	conditions	conditions
	m	(Lbnw;)Ldcg$a;	b	uniformBonusCount
		p	0	enchantment	enchantment
c	dbv$a	net/minecraft/loot/function/ApplyBonusLootFunction$BinomialWithBonusCount
	f	Luh;	a	ID
	f	I	b	extra
	f	F	c	probability
	m	(IF)V	<init>	<init>
		p	1	extra	extra
		p	2	probability	probability
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbv$b;	a	fromJson
		p	0	json	json
		p	1	context	context
c	dbv$b	net/minecraft/loot/function/ApplyBonusLootFunction$Formula
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
		p	1	json	json
		p	2	context	context
	m	(Ljava/util/Random;II)I	a	getValue
		p	1	random	random
		p	2	initialCount	initialCount
		p	3	enchantmentLevel	enchantmentLevel
	m	()Luh;	a	getId
c	dbv$c	net/minecraft/loot/function/ApplyBonusLootFunction$FormulaFactory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbv$b;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	context	context
c	dbv$d	net/minecraft/loot/function/ApplyBonusLootFunction$OreDrops
	f	Luh;	a	ID
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbv$b;	a	fromJson
		p	0	json	json
		p	1	context	context
c	dbv$e	net/minecraft/loot/function/ApplyBonusLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldbv;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldbv;	a	fromJson
c	dbv$f	net/minecraft/loot/function/ApplyBonusLootFunction$UniformBonusCount
	f	Luh;	a	ID
	f	I	b	bonusMultiplier
	m	(I)V	<init>	<init>
		p	1	bonusMultiplier	bonusMultiplier
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldbv$b;	a	fromJson
		p	0	json	json
		p	1	context	context
c	dbw	net/minecraft/loot/function/ExplosionDecayLootFunction
	m	([Lddm;)V	<init>	<init>
		p	1	conditions	conditions
	m	()Ldcg$a;	c	builder
c	dbw$a	net/minecraft/loot/function/ExplosionDecayLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldbw;	a	fromJson
c	dbx	net/minecraft/loot/function/CopyStateFunction
	f	Lbvr;	a	block
	f	Ljava/util/Set;	b	properties
	m	([Lddm;Lbvr;Ljava/util/Set;)V	<init>	<init>
		p	3	properties	properties
	m	(Lbvr;)Ldbx$a;	a	getBuilder
c	dbx$a	net/minecraft/loot/function/CopyStateFunction$Builder
	f	Lbvr;	a	block
	f	Ljava/util/Set;	b	properties
	m	()Ldbx$a;	a	getThisBuilder
c	dbx$b	net/minecraft/loot/function/CopyStateFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldbx;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldbx;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dby	net/minecraft/loot/function/CopyNameLootFunction
	f	Ldby$a;	a	source
	m	([Lddm;Ldby$a;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	source	source
	m	(Ldby$a;)Ldcg$a;	a	builder
		p	0	source	source
	m	(Ldby$a;[Lddm;)Ldch;	a	method_474
		p	1	conditions	conditions
c	dby$a	net/minecraft/loot/function/CopyNameLootFunction$Source
	f	Ljava/lang/String;	e	name
	f	Ldcx;	f	parameter
	m	(Ljava/lang/String;ILjava/lang/String;Ldcx;)V	<init>	<init>
		p	3	name	name
		p	4	parameter	parameter
	m	(Ljava/lang/String;)Ldby$a;	a	get
		p	0	name	name
c	dby$b	net/minecraft/loot/function/CopyNameLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldby;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldby;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dbz	net/minecraft/loot/function/CopyNbtLootFunction
	f	Ldbz$c;	a	source
	f	Ljava/util/List;	b	operations
	f	Ljava/util/function/Function;	d	ENTITY_TAG_GETTER
	f	Ljava/util/function/Function;	e	BLOCK_ENTITY_TAG_GETTER
	m	([Lddm;Ldbz$c;Ljava/util/List;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	source	source
		p	3	operations	operations
	m	(Lbki;Llu;Ldbz$b;)V	a	method_16846
		p	2	operation	operation
	m	(Ldbz$c;)Ldbz$a;	a	builder
		p	0	source	source
	m	(Lcdl;)Llu;	a	method_16847
		p	0	blockEntity	blockEntity
	m	(Ljava/lang/String;)Ldn$h;	b	parseNbtPath
		p	0	nbtPath	nbtPath
c	dbz$a	net/minecraft/loot/function/CopyNbtLootFunction$Builder
	f	Ldbz$c;	a	source
	f	Ljava/util/List;	b	operations
	m	(Ldbz$c;)V	<init>	<init>
		p	1	source	source
	m	(Ljava/lang/String;Ljava/lang/String;)Ldbz$a;	a	withOperation
		p	1	source	source
		p	2	target	target
	m	()Ldbz$a;	a	getThisBuilder
	m	(Ljava/lang/String;Ljava/lang/String;Ldbz$d;)Ldbz$a;	a	withOperation
		p	1	source	source
		p	2	target	target
		p	3	operator	operator
c	dbz$b	net/minecraft/loot/function/CopyNbtLootFunction$Operation
	f	Ljava/lang/String;	a	sourcePath
	f	Ldn$h;	b	parsedSourcePath
	f	Ljava/lang/String;	c	targetPath
	f	Ldn$h;	d	parsedTargetPath
	f	Ldbz$d;	e	operator
	m	(Ljava/lang/String;Ljava/lang/String;Ldbz$d;)V	<init>	<init>
		p	1	source	source
		p	2	target	target
		p	3	operator	operator
	m	()Lcom/google/gson/JsonObject;	a	toJson
	m	(Lcom/google/gson/JsonObject;)Ldbz$b;	a	fromJson
		p	0	json	json
	m	(Ljava/util/function/Supplier;Llu;)V	a	execute
		p	1	itemTagTagGetter	itemTagTagGetter
		p	2	sourceEntityTag	sourceEntityTag
c	dbz$c	net/minecraft/loot/function/CopyNbtLootFunction$Source
	f	Ljava/lang/String;	e	name
	f	Ldcx;	f	parameter
	f	Ljava/util/function/Function;	g	getter
	m	(Ljava/lang/String;ILjava/lang/String;Ldcx;Ljava/util/function/Function;)V	<init>	<init>
		p	3	name	name
		p	4	parameter	parameter
		p	5	operator	operator
	m	(Ljava/lang/String;)Ldbz$c;	a	get
		p	0	name	name
	m	(Ldcx;Ljava/util/function/Function;Ldat;)Llu;	a	method_16861
		p	2	context	context
c	dbz$d	net/minecraft/loot/function/CopyNbtLootFunction$Operator
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Llu;Ldn$h;Ljava/util/List;)V	a	merge
		p	1	itemTag	itemTag
		p	2	targetPath	targetPath
		p	3	sourceTags	sourceTags
	m	(Ljava/lang/String;)Ldbz$d;	a	get
		p	0	name	name
c	dbz$d$2	net/minecraft/loot/function/CopyNbtLootFunction$Operator$2
	m	(Ljava/util/List;Llu;)V	a	method_16867
		p	1	foundTag	foundTag
	m	(Llu;Llu;)V	a	method_16866
		p	1	listTag	listTag
c	dbz$d$3	net/minecraft/loot/function/CopyNbtLootFunction$Operator$3
	m	(Llu;Llu;)V	a	method_16868
		p	1	compoundTag	compoundTag
	m	(Ljava/util/List;Llu;)V	a	method_16869
		p	1	foundTag	foundTag
c	dbz$e	net/minecraft/loot/function/CopyNbtLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldbz;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldbz;	a	fromJson
c	dc	net/minecraft/command/arguments/ColorArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_COLOR_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Li;	a	parse
	m	()Ldc;	a	color
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Li;	a	getColor
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dca	net/minecraft/loot/function/EnchantRandomlyLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	enchantments
	m	([Lddm;Ljava/util/Collection;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	enchantments	enchantments
	m	([Lddm;)Ldch;	a	method_488
		p	0	conditions	conditions
	m	()Ldcg$a;	d	builder
c	dca$a	net/minecraft/loot/function/EnchantRandomlyLootFunction$Builder
	f	Ljava/util/Set;	a	enchantments
	m	(Lbnw;)Ldca$a;	a	add
		p	1	enchantment	enchantment
	m	()Ldca$a;	a	getThisBuilder
c	dca$b	net/minecraft/loot/function/EnchantRandomlyLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldca;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldca;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dcb	net/minecraft/loot/function/EnchantWithLevelsLootFunction
	f	Ldaz;	a	range
	f	Z	b	treasureEnchantmentsAllowed
	m	([Lddm;Ldaz;Z)V	<init>	<init>
		p	1	conditions	conditions
		p	2	range	range
		p	3	treasureEnchantmentsAllowed	treasureEnchantmentsAllowed
	m	(Ldaz;)Ldcb$a;	a	builder
		p	0	range	range
c	dcb$a	net/minecraft/loot/function/EnchantWithLevelsLootFunction$Builder
	f	Ldaz;	a	range
	f	Z	b	treasureEnchantmentsAllowed
	m	(Ldaz;)V	<init>	<init>
		p	1	range	range
	m	()Ldcb$a;	a	getThisBuilder
	m	()Ldcb$a;	e	allowTreasureEnchantments
c	dcb$b	net/minecraft/loot/function/EnchantWithLevelsLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcb;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldcb;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dcc	net/minecraft/loot/function/ExplorationMapLootFunction
	f	Lczs$a;	b	DEFAULT_DECORATION
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lcml;	e	destination
	f	Lczs$a;	f	decoration
	f	B	g	zoom
	f	I	h	searchRadius
	f	Z	i	skipExistingChunks
	m	([Lddm;Lcml;Lczs$a;BIZ)V	<init>	<init>
		p	1	conditions	conditions
		p	3	decoration	decoration
		p	4	zoom	zoom
		p	5	searchRadius	searchRadius
		p	6	skipExistingChunks	skipExistingChunks
	m	()Ldcc$a;	c	create
c	dcc$a	net/minecraft/loot/function/ExplorationMapLootFunction$Builder
	f	Lcml;	a	destination
	f	Lczs$a;	b	decoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipExistingChunks
	m	(Z)Ldcc$a;	a	withSkipExistingChunks
		p	1	skipExistingChunks	skipExistingChunks
	m	()Ldcc$a;	a	getThisBuilder
	m	(Lcml;)Ldcc$a;	a	withDestination
	m	(Lczs$a;)Ldcc$a;	a	withDecoration
		p	1	decoration	decoration
	m	(B)Ldcc$a;	a	withZoom
		p	1	zoom	zoom
c	dcc$b	net/minecraft/loot/function/ExplorationMapLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcc;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldcc;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dcd	net/minecraft/loot/function/FillPlayerHeadLootFunction
	f	Ldat$c;	a	entity
	m	([Lddm;Ldat$c;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	entity	entity
c	dcd$a	net/minecraft/loot/function/FillPlayerHeadLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcd;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldcd;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dce	net/minecraft/loot/function/LootFunctionConsumingBuilder
	m	(Ldch$a;)Ljava/lang/Object;	b	apply
		p	1	function	function
	m	()Ljava/lang/Object;	c	getThis
c	dcf	net/minecraft/loot/function/LimitCountLootFunction
	f	Ldas;	a	limit
	m	([Lddm;Ldas;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	limit	limit
	m	(Ldas;)Ldcg$a;	a	builder
		p	0	limit	limit
	m	(Ldas;[Lddm;)Ldch;	a	method_508
		p	1	conditions	conditions
c	dcf$a	net/minecraft/loot/function/LimitCountLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldcf;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcf;	a	fromJson
c	dcg	net/minecraft/loot/function/ConditionalLootFunction
	f	Ljava/util/function/Predicate;	a	predicate
	f	[Lddm;	c	conditions
	m	([Lddm;)V	<init>	<init>
		p	1	conditions	conditions
	m	(Lbki;Ldat;)Lbki;	a	process
		p	1	stack	stack
		p	2	context	context
	m	(Ljava/util/function/Function;)Ldcg$a;	a	builder
		p	0	joiner	joiner
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1	itemStack	itemStack
		p	2	context	context
	m	(Lbki;Ldat;)Lbki;	b	apply
c	dcg$a	net/minecraft/loot/function/ConditionalLootFunction$Builder
	f	Ljava/util/List;	a	conditionList
	m	(Lddm$a;)Ldcg$a;	a	conditionally
	m	()Ldcg$a;	d	getThisBuilder
	m	()Ldcg$a;	f	getThis
	m	()[Lddm;	g	getConditions
c	dcg$b	net/minecraft/loot/function/ConditionalLootFunction$Joiner
	f	Ljava/util/function/Function;	a	joiner
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	joiner	joiner
	m	()Ldcg$b;	a	getThisBuilder
c	dcg$c	net/minecraft/loot/function/ConditionalLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldcg;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcg;	b	fromJson
		p	1	json	json
		p	2	context	context
		p	3	conditions	conditions
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldcg;	b	fromJson
c	dch	net/minecraft/loot/function/LootFunction
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Ldat;Lbki;)V	a	method_514
		p	3	stack	stack
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Ldat;)Ljava/util/function/Consumer;	a	apply
		p	0	itemApplier	itemApplier
		p	1	lootConsumer	lootConsumer
		p	2	context	context
	m	()Ldci;	b	getType
c	dch$a	net/minecraft/loot/function/LootFunction$Builder
	m	()Ldch;	b	build
c	dci	net/minecraft/loot/function/LootFunctionType
c	dcj	net/minecraft/loot/function/LootFunctionTypes
	f	Ljava/util/function/BiFunction;	a	NOOP
	m	()Ljava/lang/Object;	a	createGsonSerializer
	m	(Ljava/lang/String;Ldbc;)Ldci;	a	register
		p	0	id	id
	m	([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	join
		p	0	lootFunctions	lootFunctions
	m	(Lbki;Ldat;)Lbki;	a	method_592
		p	0	stack	stack
		p	1	context	context
	m	([Ljava/util/function/BiFunction;Lbki;Ldat;)Lbki;	a	method_595
		p	1	stack	stack
		p	2	context	context
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lbki;Ldat;)Lbki;	a	method_591
		p	2	stack	stack
		p	3	context	context
c	dck	net/minecraft/loot/function/LootingEnchantLootFunction
	f	Ldbb;	a	countRange
	f	I	b	limit
	m	([Lddm;Ldbb;I)V	<init>	<init>
		p	1	conditions	conditions
		p	2	countRange	countRange
		p	3	limit	limit
	m	(Ldbb;)Ldck$a;	a	builder
		p	0	countRange	countRange
	m	()Z	c	hasLimit
c	dck$a	net/minecraft/loot/function/LootingEnchantLootFunction$Builder
	f	Ldbb;	a	countRange
	f	I	b	limit
	m	(Ldbb;)V	<init>	<init>
		p	1	countRange	countRange
	m	()Ldck$a;	a	getThisBuilder
	m	(I)Ldck$a;	a	withLimit
		p	1	limit	limit
c	dck$b	net/minecraft/loot/function/LootingEnchantLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldck;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldck;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dcl	net/minecraft/loot/function/SetAttributesLootFunction
	f	Ljava/util/List;	a	attributes
	m	([Lddm;Ljava/util/List;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	attributes	attributes
c	dcl$b	net/minecraft/loot/function/SetAttributesLootFunction$Attribute
	f	Ljava/lang/String;	a	name
	f	Laps;	b	attribute
	f	Lapv$a;	c	operation
	f	Ldbb;	d	amountRange
	f	Ljava/util/UUID;	e	id
	f	[Laor;	f	slots
	m	(Ljava/lang/String;Laps;Lapv$a;Ldbb;[Laor;Ljava/util/UUID;)V	<init>	<init>
		p	1	name	name
		p	3	operation	operation
		p	4	amountRange	amountRange
		p	5	slots	slots
		p	6	id	id
	m	(Ljava/lang/String;)Lapv$a;	a	fromName
		p	0	name	name
	m	(Lapv$a;)Ljava/lang/String;	a	getName
		p	0	operation	operation
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldcl$b;	a	deserialize
		p	0	json	json
		p	1	context	context
	m	(Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject;	a	serialize
		p	1	context	context
c	dcl$d	net/minecraft/loot/function/SetAttributesLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldcl;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcl;	a	fromJson
c	dcm	net/minecraft/loot/function/SetContentsLootFunction
	f	Ljava/util/List;	a	entries
	m	([Lddm;Ljava/util/List;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	entries	entries
	m	(Ldat;Lgi;Ldbo;)V	a	method_599
		p	2	entry	entry
	m	(Lgi;Ldat;Ldbn;)V	a	method_600
		p	2	choice	choice
	m	()Ldcm$a;	c	builder
c	dcm$a	net/minecraft/loot/function/SetContentsLootFunction$Builer
	f	Ljava/util/List;	a	entries
	m	()Ldcm$a;	a	getThisBuilder
	m	(Ldbo$a;)Ldcm$a;	a	withEntry
		p	1	entryBuilder	entryBuilder
c	dcm$b	net/minecraft/loot/function/SetContentsLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldcm;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcm;	a	fromJson
c	dcn	net/minecraft/loot/function/SetLootTableLootFunction
	f	Luh;	a	id
	f	J	b	seed
	m	([Lddm;Luh;J)V	<init>	<init>
		p	1	conditions	conditions
		p	2	id	id
		p	3	seed	seed
c	dcn$a	net/minecraft/loot/function/SetLootTableLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldcn;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcn;	a	fromJson
c	dco	net/minecraft/loot/function/SetCountLootFunction
	f	Ldaz;	a	countRange
	m	([Lddm;Ldaz;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	countRange	countRange
	m	(Ldaz;[Lddm;)Ldch;	a	method_620
		p	1	conditions	conditions
	m	(Ldaz;)Ldcg$a;	a	builder
		p	0	countRange	countRange
c	dco$a	net/minecraft/loot/function/SetCountLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldco;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldco;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dcp	net/minecraft/loot/function/SetDamageLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbb;	b	durabilityRange
	m	([Lddm;Ldbb;)V	<init>	<init>
		p	1	contents	contents
		p	2	durabilityRange	durabilityRange
	m	(Ldbb;[Lddm;)Ldch;	a	method_634
		p	1	conditions	conditions
	m	(Ldbb;)Ldcg$a;	a	builder
		p	0	durabilityRange	durabilityRange
c	dcp$a	net/minecraft/loot/function/SetDamageLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcp;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldcp;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dcq	net/minecraft/loot/function/SetLoreLootFunction
	f	Z	a	replace
	f	Ljava/util/List;	b	lore
	f	Ldat$c;	d	entity
	m	([Lddm;ZLjava/util/List;Ldat$c;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	replace	replace
		p	3	lore	lore
		p	4	entity	entity
	m	(Lbki;Z)Llk;	a	getLoreForMerge
		p	1	stack	stack
		p	2	otherLoreExists	otherLoreExists
c	dcq$b	net/minecraft/loot/function/SetLoreLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldcq;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcq;	a	fromJson
c	dcr	net/minecraft/loot/function/SetNameLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lmr;	b	name
	f	Ldat$c;	d	entity
	m	([Lddm;Lmr;Ldat$c;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	name	name
		p	3	entity	entity
	m	(Lcz;Laom;Lmr;)Lmr;	a	method_16189
		p	2	textComponent	textComponent
	m	(Ldat;Ldat$c;)Ljava/util/function/UnaryOperator;	a	applySourceEntity
		p	0	context	context
		p	1	sourceEntity	sourceEntity
	m	(Lmr;)Lmr;	b	method_16191
		p	0	textComponent	textComponent
c	dcr$a	net/minecraft/loot/function/SetNameLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcr;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldcr;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dcs	net/minecraft/loot/function/SetNbtLootFunction
	f	Lle;	a	tag
	m	([Lddm;Lle;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	tag	tag
	m	(Lle;[Lddm;)Ldch;	a	method_675
		p	1	conditions	conditions
	m	(Lle;)Ldcg$a;	a	builder
		p	0	tag	tag
c	dcs$a	net/minecraft/loot/function/SetNbtLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcs;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Ldcs;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	dct	net/minecraft/loot/function/SetStewEffectLootFunction
	f	Ljava/util/Map;	a	effects
	m	([Lddm;Ljava/util/Map;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	effects	effects
	m	()Ldct$a;	c	builder
c	dct$a	net/minecraft/loot/function/SetStewEffectLootFunction$Builder
	f	Ljava/util/Map;	a	map
	m	(Laoe;Ldbb;)Ldct$a;	a	withEffect
		p	1	effect	effect
		p	2	durationRange	durationRange
	m	()Ldct$a;	a	getThisBuilder
c	dct$b	net/minecraft/loot/function/SetStewEffectLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Ldct;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldct;	a	fromJson
c	dcu	net/minecraft/loot/function/FurnaceSmeltLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	([Lddm;)V	<init>	<init>
		p	1	conditions	conditions
	m	()Ldcg$a;	c	builder
c	dcu$a	net/minecraft/loot/function/FurnaceSmeltLootFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lddm;)Ldcu;	a	fromJson
c	dcx	net/minecraft/loot/context/LootContextParameter
	f	Luh;	a	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
	m	()Luh;	a	getIdentifier
c	dcy	net/minecraft/loot/context/LootContextType
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	allowed
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1	required	required
		p	2	allowed	allowed
	m	()Ljava/util/Set;	a	getRequired
	m	(Ldbe;Ldau;)V	a	validate
		p	1	reporter	reporter
		p	2	parameterConsumer	parameterConsumer
	m	(Ldcx;)Ljava/lang/String;	b	method_779
		p	1	parameter	parameter
	m	()Ljava/util/Set;	b	getAllowed
c	dcy$a	net/minecraft/loot/context/LootContextType$Builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	allowed
	m	(Ldcx;)Ldcy$a;	a	require
		p	1	parameter	parameter
	m	()Ldcy;	a	build
	m	(Ldcx;)Ldcy$a;	b	allow
		p	1	parameter	parameter
c	dcz	net/minecraft/loot/context/LootContextTypes
	f	Lcom/google/common/collect/BiMap;	m	MAP
	m	(Ldcy;)Luh;	a	getId
		p	0	type	type
	m	(Ldcy$a;)V	a	method_760
		p	0	builder	builder
	m	(Luh;)Ldcy;	a	get
		p	0	id	id
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ldcy;	a	register
		p	0	name	name
		p	1	type	type
	m	(Ldcy$a;)V	b	method_763
		p	0	builder	builder
	m	(Ldcy$a;)V	d	method_756
		p	0	builder	builder
	m	(Ldcy$a;)V	f	method_15971
		p	0	builder	builder
	m	(Ldcy$a;)V	g	method_758
		p	0	builder	builder
	m	(Ldcy$a;)V	h	method_764
		p	0	builder	builder
	m	(Ldcy$a;)V	k	method_15970
		p	0	builder	builder
	m	(Ldcy$a;)V	l	method_755
		p	0	builder	builder
c	dd	net/minecraft/command/arguments/TextArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_COMPONENT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lmr;	a	parse
	m	()Ldd;	a	text
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lmr;	a	getTextArgument
		p	0	context	context
		p	1	name	name
c	dda	net/minecraft/loot/context/LootContextParameters
	m	(Ljava/lang/String;)Ldcx;	a	register
		p	0	name	name
c	ddc	net/minecraft/loot/condition/AlternativeLootCondition
	f	[Lddm;	a	terms
	f	Ljava/util/function/Predicate;	b	predicate
	m	([Lddm;)V	<init>	<init>
		p	1	terms	terms
	m	(Ldat;)Z	a	test
	m	([Lddm$a;)Lddc$a;	a	builder
		p	0	terms	terms
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddc$a	net/minecraft/loot/condition/AlternativeLootCondition$Builder
	f	Ljava/util/List;	a	terms
	m	([Lddm$a;)V	<init>	<init>
		p	1	terms	terms
c	ddc$b	net/minecraft/loot/condition/AlternativeLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddc;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddc;	b	fromJson
c	ddd	net/minecraft/loot/condition/TableBonusLootCondition
	f	Lbnw;	a	enchantment
	f	[F	b	chances
	m	(Lbnw;[F)V	<init>	<init>
		p	1	enchantment	enchantment
		p	2	chances	chances
	m	(Ldat;)Z	a	test
	m	(Lbnw;[F)Lddm$a;	a	builder
		p	0	enchantment	enchantment
		p	1	chances	chances
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddd$a	net/minecraft/loot/condition/TableBonusLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddd;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddd;	b	fromJson
c	dde	net/minecraft/loot/condition/ReferenceLootCondition
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	id
	m	(Luh;)V	<init>	<init>
		p	1	id	id
	m	(Ldat;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	dde$a	net/minecraft/loot/condition/ReferenceLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Ldde;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldde;	b	fromJson
c	ddf	net/minecraft/loot/condition/LootConditionConsumingBuilder
	m	(Lddm$a;)Ljava/lang/Object;	b	conditionally
		p	1	condition	condition
	m	()Ljava/lang/Object;	c	getThis
c	ddg	net/minecraft/loot/condition/DamageSourcePropertiesLootCondition
	f	Lau;	a	predicate
	m	(Lau;)V	<init>	<init>
		p	1	predicate	predicate
	m	(Ldat;)Z	a	test
	m	(Lau$a;)Lddm$a;	a	builder
		p	0	builder	builder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddg$a	net/minecraft/loot/condition/DamageSourcePropertiesLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddg;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddg;	b	fromJson
c	ddh	net/minecraft/loot/condition/EntityScoresLootCondition
	f	Ljava/util/Map;	a	scores
	f	Ldat$c;	b	target
	m	(Ljava/util/Map;Ldat$c;)V	<init>	<init>
		p	1	scores	scores
		p	2	target	target
	m	(Laom;Ldfm;Ljava/lang/String;Ldbb;)Z	a	entityScoreIsInRange
		p	1	entity	entity
		p	2	scoreboard	scoreboard
		p	3	objective	objective
		p	4	scoreRange	scoreRange
	m	(Ldat;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddh$b	net/minecraft/loot/condition/EntityScoresLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddh;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddh;	b	fromJson
c	ddi	net/minecraft/loot/condition/SurvivesExplosionLootCondition
	f	Lddi;	a	INSTANCE
	m	(Ldat;)Z	a	test
	m	()Lddm$a;	c	builder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddi$a	net/minecraft/loot/condition/SurvivesExplosionLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddi;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddi;	b	fromJson
c	ddj	net/minecraft/loot/condition/InvertedLootCondition
	f	Lddm;	a	term
	m	(Lddm;)V	<init>	<init>
		p	1	term	term
	m	(Ldat;)Z	a	test
	m	(Lddm$a;)Lddm$a;	a	builder
		p	0	term	term
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddj$a	net/minecraft/loot/condition/InvertedLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddj;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddj;	b	fromJson
c	ddk	net/minecraft/loot/condition/LocationCheckLootCondition
	f	Lbu;	a	predicate
	f	Lfu;	b	offset
	m	(Lbu;Lfu;)V	<init>	<init>
		p	1	predicate	predicate
		p	2	offset	offset
	m	(Ldat;)Z	a	test
	m	(Lbu$a;)Lddm$a;	a	builder
		p	0	predicateBuilder	predicateBuilder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddk$a	net/minecraft/loot/condition/LocationCheckLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddk;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddk;	b	fromJson
c	ddl	net/minecraft/loot/condition/BlockStatePropertyLootCondition
	f	Lbvr;	a	block
	f	Lck;	b	properties
	m	(Lbvr;Lck;)V	<init>	<init>
		p	1	block	block
		p	2	properties	properties
	m	(Ldat;)Z	a	test
	m	(Lbvr;)Lddl$a;	a	builder
		p	0	block	block
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddl$a	net/minecraft/loot/condition/BlockStatePropertyLootCondition$Builder
	f	Lbvr;	a	block
	f	Lck;	b	propertyValues
	m	(Lbvr;)V	<init>	<init>
		p	1	block	block
	m	(Lck$a;)Lddl$a;	a	properties
c	ddl$b	net/minecraft/loot/condition/BlockStatePropertyLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddl;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddl;	b	fromJson
c	ddm	net/minecraft/loot/condition/LootCondition
	m	()Lddn;	b	getType
c	ddm$a	net/minecraft/loot/condition/LootCondition$Builder
	m	()Lddm$a;	a	invert
	m	(Lddm$a;)Lddc$a;	a	or
		p	1	condition	condition
c	ddn	net/minecraft/loot/condition/LootConditionType
c	ddo	net/minecraft/loot/condition/LootConditionTypes
	m	()Ljava/lang/Object;	a	createGsonSerializer
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	method_929
		p	1	operand	operand
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	joinAnd
		p	0	predicates	predicates
	m	(Ljava/lang/Object;)Z	a	method_928
		p	0	predicates	predicates
	m	(Ljava/lang/String;Ldbc;)Lddn;	a	register
		p	0	id	id
		p	1	serializer	serializer
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	method_927
		p	1	operand	operand
	m	(Ljava/lang/Object;)Z	b	method_921
		p	0	predicates	predicates
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	joinOr
		p	0	predicates	predicates
c	ddp	net/minecraft/loot/condition/EntityPropertiesLootCondition
	f	Lbe;	a	predicate
	f	Ldat$c;	b	entity
	m	(Lbe;Ldat$c;)V	<init>	<init>
		p	1	predicate	predicate
		p	2	entity	entity
	m	(Ldat$c;Lbe$a;)Lddm$a;	a	builder
		p	0	entity	entity
		p	1	predicateBuilder	predicateBuilder
	m	(Ldat;)Z	a	test
	m	(Ldat$c;)Lddm$a;	a	create
		p	0	entity	entity
	m	(Ldat$c;Lbe;)Lddm$a;	a	builder
		p	0	entity	entity
		p	1	predicate	predicate
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddp$a	net/minecraft/loot/condition/EntityPropertiesLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddp;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddp;	b	fromJson
c	ddq	net/minecraft/loot/condition/KilledByPlayerLootCondition
	f	Lddq;	a	INSTANCE
	m	(Ldat;)Z	a	test
	m	()Lddm$a;	c	builder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddq$a	net/minecraft/loot/condition/KilledByPlayerLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddq;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddq;	b	fromJson
c	ddr	net/minecraft/loot/condition/RandomChanceLootCondition
	f	F	a	chance
	m	(F)V	<init>	<init>
		p	1	chance	chance
	m	(Ldat;)Z	a	test
	m	(F)Lddm$a;	a	builder
		p	0	chance	chance
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddr$a	net/minecraft/loot/condition/RandomChanceLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddr;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddr;	b	fromJson
c	dds	net/minecraft/loot/condition/RandomChanceWithLootingLootCondition
	f	F	a	chance
	f	F	b	lootingMultiplier
	m	(FF)V	<init>	<init>
		p	1	chance	chance
		p	2	lootingMultiplier	lootingMultiplier
	m	(Ldat;)Z	a	test
	m	(FF)Lddm$a;	a	builder
		p	0	chance	chance
		p	1	lootingMultiplier	lootingMultiplier
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	dds$a	net/minecraft/loot/condition/RandomChanceWithLootingLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Ldds;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldds;	b	fromJson
c	ddt	net/minecraft/loot/condition/MatchToolLootCondition
	f	Lbo;	a	predicate
	m	(Lbo;)V	<init>	<init>
		p	1	predicate	predicate
	m	(Ldat;)Z	a	test
	m	(Lbo$a;)Lddm$a;	a	builder
		p	0	predicate	predicate
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddt$a	net/minecraft/loot/condition/MatchToolLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddt;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddt;	b	fromJson
c	ddu	net/minecraft/loot/condition/TimeCheckLootCondition
	f	Ljava/lang/Long;	a	period
	f	Ldbb;	b	value
	m	(Ljava/lang/Long;Ldbb;)V	<init>	<init>
		p	1	period	period
		p	2	value	value
	m	(Ldat;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddu$b	net/minecraft/loot/condition/TimeCheckLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddu;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddu;	b	fromJson
c	ddv	net/minecraft/loot/condition/WeatherCheckLootCondition
	f	Ljava/lang/Boolean;	a	raining
	f	Ljava/lang/Boolean;	b	thundering
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1	raining	raining
		p	2	thundering	thundering
	m	(Ldat;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ddv$b	net/minecraft/loot/condition/WeatherCheckLootCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lddv;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lddv;	b	fromJson
c	ddz	net/minecraft/world/timer/FunctionTimerCallback
	f	Luh;	a	name
	m	(Lnet/minecraft/server/MinecraftServer;Lded;J)V	a	call
c	ddz$a	net/minecraft/world/timer/FunctionTimerCallback$Serializer
	m	(Lle;Lddz;)V	a	serialize
	m	(Lle;)Lddz;	a	deserialize
c	de	net/minecraft/command/arguments/NbtCompoundTagArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()Lde;	a	nbtCompound
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lle;	a	getCompoundTag
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lle;	a	parse
c	dea	net/minecraft/world/timer/FunctionTagTimerCallback
	f	Luh;	a	name
	m	(Lnet/minecraft/server/MinecraftServer;Lded;J)V	a	call
c	dea$a	net/minecraft/world/timer/FunctionTagTimerCallback$Serializer
	m	(Lle;Ldea;)V	a	serialize
	m	(Lle;)Ldea;	a	deserialize
c	deb	net/minecraft/world/timer/TimerCallback
	m	(Ljava/lang/Object;Lded;J)V	a	call
		p	1	server	server
		p	2	events	events
		p	3	time	time
c	deb$a	net/minecraft/world/timer/TimerCallback$Serializer
	f	Luh;	a	id
	f	Ljava/lang/Class;	b	callbackClass
	m	(Lle;Ldeb;)V	a	serialize
		p	1	tag	tag
		p	2	callback	callback
	m	()Luh;	a	getId
	m	()Ljava/lang/Class;	b	getCallbackClass
	m	(Lle;)Ldeb;	b	deserialize
		p	1	tag	tag
c	dec	net/minecraft/world/timer/TimerCallbackSerializer
	f	Ldec;	a	INSTANCE
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	serializersByType
	f	Ljava/util/Map;	d	serializersByClass
	m	(Ldeb;)Lle;	a	serialize
		p	1	callback	callback
	m	(Ldeb$a;)Ldec;	a	registerSerializer
		p	1	serializer	serializer
	m	(Lle;)Ldeb;	a	deserialize
		p	1	tag	tag
	m	(Ljava/lang/Class;)Ldeb$a;	a	getSerializer
c	ded	net/minecraft/world/timer/Timer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldec;	b	callback
	f	Ljava/util/Queue;	c	events
	f	Lcom/google/common/primitives/UnsignedLong;	d	eventCounter
	f	Lcom/google/common/collect/Table;	e	eventsByName
	m	(Ldec;)V	<init>	<init>
		p	1	timerCallbackSerializer	timerCallbackSerializer
	m	(Ljava/lang/String;JLdeb;)V	a	setEvent
		p	1	name	name
		p	2	triggerTime	triggerTime
		p	4	callback	callback
	m	(Lle;)V	a	addEvent
		p	1	tag	tag
	m	(Lded$a;)Lle;	a	serialize
		p	1	event	event
	m	(Ljava/lang/Object;J)V	a	processEvents
		p	1	server	server
		p	2	time	time
	m	()Llk;	b	toTag
	m	()Ljava/util/Comparator;	c	createEventComparator
c	ded$a	net/minecraft/world/timer/Timer$Event
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	id
	f	Ljava/lang/String;	c	name
	f	Ldeb;	d	callback
	m	(JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Ldeb;)V	<init>	<init>
		p	1	triggerTime	triggerTime
		p	3	id	id
		p	4	name	name
		p	5	callback	callback
c	deg	net/minecraft/util/math/Box
	f	D	a	minX
	f	D	b	minY
	f	D	c	minZ
	f	D	d	maxX
	f	D	e	maxY
	f	D	f	maxZ
	m	(DDDDDD)V	<init>	<init>
		p	1	x1	x1
		p	3	y1	y1
		p	5	z1	z1
		p	7	x2	x2
		p	9	y2	y2
		p	11	z2	z2
	m	(Lfu;)V	<init>	<init>
		p	1	pos	pos
	m	(Ldem;Ldem;)V	<init>	<init>
		p	1	pos1	pos1
		p	2	pos2	pos2
	m	(Lfu;Lfu;)V	<init>	<init>
		p	1	pos1	pos1
		p	2	pos2	pos2
	m	(Ldeg;Ldem;[DLfz;DDD)Lfz;	a	traceCollisionSide
		p	0	box	box
		p	1	intersectingVector	intersectingVector
		p	2	traceDistanceResult	traceDistanceResult
		p	3	approachDirection	approachDirection
		p	4	xDelta	xDelta
		p	6	yDelta	yDelta
		p	8	zDelta	zDelta
	m	(DDDDDD)Z	a	intersects
		p	1	minX	minX
		p	3	minY	minY
		p	5	minZ	minZ
		p	7	maxX	maxX
		p	9	maxY	maxY
		p	11	maxZ	maxZ
	m	()D	a	getAverageSideLength
	m	([DLfz;DDDDDDDDLfz;DDD)Lfz;	a	traceCollisionSide
		p	0	traceDistanceResult	traceDistanceResult
		p	1	approachDirection	approachDirection
		p	2	xDelta	xDelta
		p	4	yDelta	yDelta
		p	6	zDelta	zDelta
		p	8	begin	begin
		p	10	minX	minX
		p	12	maxX	maxX
		p	14	minZ	minZ
		p	16	maxZ	maxZ
		p	18	resultDirection	resultDirection
		p	19	startX	startX
		p	21	startY	startY
		p	23	startZ	startZ
	m	(DDD)Ldeg;	a	shrink
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ldem;Ldem;)Z	a	intersects
		p	1	from	from
		p	2	to	to
	m	(Lctd;)Ldeg;	a	from
		p	0	mutable	mutable
	m	(Lfz$a;)D	a	getMin
		p	1	axis	axis
	m	(Ldeg;)Ldeg;	a	intersection
		p	1	box	box
	m	(Ljava/lang/Iterable;Ldem;Ldem;Lfu;)Ldeh;	a	rayTrace
		p	0	boxes	boxes
		p	1	from	from
		p	2	to	to
		p	3	pos	pos
	m	(Lfu;)Ldeg;	a	offset
		p	1	blockPos	blockPos
	m	()D	b	getXLength
	m	(Ldem;)Ldeg;	b	stretch
		p	1	scale	scale
	m	(Ldem;Ldem;)Ljava/util/Optional;	b	rayTrace
		p	1	min	min
		p	2	max	max
	m	(DDD)Ldeg;	b	stretch
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfz$a;)D	b	getMax
		p	1	axis	axis
	m	(Ldeg;)Ldeg;	b	union
		p	1	box	box
	m	(Ldeg;)Z	c	intersects
		p	1	box	box
	m	(Ldem;)Ldeg;	c	offset
		p	1	vec3d	vec3d
	m	()D	c	getYLength
	m	(DDD)Ldeg;	c	expand
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ldem;)Z	d	contains
		p	1	vec	vec
	m	()D	d	getZLength
	m	(DDD)Ldeg;	d	offset
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(DDD)Z	e	contains
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Z	e	isValid
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ldem;	f	getCenter
	m	(D)Ldeg;	g	expand
		p	1	value	value
	m	(D)Ldeg;	h	contract
		p	1	value	value
c	deh	net/minecraft/util/hit/BlockHitResult
	f	Lfz;	b	side
	f	Lfu;	c	blockPos
	f	Z	d	missed
	f	Z	e	insideBlock
	m	(ZLdem;Lfz;Lfu;Z)V	<init>	<init>
		p	1	missed	missed
		p	2	pos	pos
		p	3	side	side
		p	4	blockPos	blockPos
		p	5	insideBlock	insideBlock
	m	(Ldem;Lfz;Lfu;Z)V	<init>	<init>
		p	1	pos	pos
		p	2	side	side
		p	3	blockPos	blockPos
		p	4	insideBlock	insideBlock
	m	()Lfu;	a	getBlockPos
	m	(Ldem;Lfz;Lfu;)Ldeh;	a	createMissed
		p	0	pos	pos
		p	1	side	side
		p	2	blockPos	blockPos
	m	(Lfz;)Ldeh;	a	withSide
		p	1	side	side
	m	()Lfz;	b	getSide
	m	()Z	d	isInsideBlock
c	dei	net/minecraft/util/hit/EntityHitResult
	f	Laom;	b	entity
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Laom;Ldem;)V	<init>	<init>
		p	1	entity	entity
		p	2	pos	pos
	m	()Laom;	a	getEntity
c	dej	net/minecraft/util/hit/HitResult
	f	Ldem;	a	pos
	m	(Ldem;)V	<init>	<init>
		p	1	pos	pos
	m	(Laom;)D	a	squaredDistanceTo
		p	1	entity	entity
	m	()Ldej$a;	c	getType
	m	()Ldem;	e	getPos
c	dej$a	net/minecraft/util/hit/HitResult$Type
c	dek	net/minecraft/client/util/math/PosAndRot
	f	Ldem;	a	pos
	f	F	b	pitch
	f	F	c	yaw
	m	(Ldem;FF)V	<init>	<init>
		p	1	pos	pos
		p	2	pitch	pitch
		p	3	yaw	yaw
	m	()Ldem;	a	getPos
	m	()F	b	getPitch
	m	()F	c	getYaw
c	del	net/minecraft/util/math/Vec2f
	f	Ldel;	a	ZERO
	f	Ldel;	b	SOUTH_EAST_UNIT
	f	Ldel;	c	EAST_UNIT
	f	Ldel;	d	WEST_UNIT
	f	Ldel;	e	SOUTH_UNIT
	f	Ldel;	f	NORTH_UNIT
	f	Ldel;	g	MAX_SOUTH_EAST
	f	Ldel;	h	MIN_SOUTH_EAST
	f	F	i	x
	f	F	j	y
	m	(FF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
	m	(Ldel;)Z	c	equals
		p	1	other	other
c	dem	net/minecraft/util/math/Vec3d
	f	Ldem;	a	ZERO
	f	D	b	x
	f	D	c	y
	f	D	d	z
	m	(Lg;)V	<init>	<init>
		p	1	vec	vec
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lgr;)Ldem;	a	ofCenter
		p	0	vec	vec
	m	(D)Ldem;	a	multiply
		p	1	mult	mult
	m	(Lgr;D)Ldem;	a	ofCenter
		p	0	vec	vec
		p	1	deltaY	deltaY
	m	(Ldem;)Ldem;	a	reverseSubtract
		p	1	vec	vec
	m	(Lgj;D)Z	a	isInRange
		p	1	pos	pos
		p	2	radius	radius
	m	(Ldel;)Ldem;	a	fromPolar
		p	0	polar	polar
	m	(F)Ldem;	a	rotateX
		p	1	angle	angle
	m	(I)Ldem;	a	unpackRgb
		p	0	rgb	rgb
	m	(Lfz$a;)D	a	getComponentAlongAxis
	m	(DDD)Ldem;	a	subtract
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ljava/util/EnumSet;)Ldem;	a	floorAlongAxes
		p	1	axes	axes
	m	(FF)Ldem;	a	fromPolar
		p	0	pitch	pitch
		p	1	yaw	yaw
	m	(F)Ldem;	b	rotateY
		p	1	angle	angle
	m	(DDD)Ldem;	b	add
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ldem;)D	b	dotProduct
		p	1	vec	vec
	m	(Lgr;)Ldem;	b	of
		p	0	vec	vec
	m	(DDD)D	c	squaredDistanceTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ldem;)Ldem;	c	crossProduct
		p	1	vec	vec
	m	(Lgr;)Ldem;	c	ofBottomCenter
		p	0	vec	vec
	m	(DDD)Ldem;	d	multiply
		p	1	multX	multX
		p	3	multY	multY
		p	5	multZ	multZ
	m	(Ldem;)Ldem;	d	subtract
		p	1	vec	vec
	m	()Ldem;	d	normalize
	m	()Ldem;	e	negate
	m	(Ldem;)Ldem;	e	add
		p	1	vec	vec
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()D	f	length
	m	(Ldem;)D	f	distanceTo
		p	1	vec	vec
	m	()D	g	lengthSquared
	m	(Ldem;)D	g	squaredDistanceTo
		p	1	vec	vec
	m	(Ldem;)Ldem;	h	multiply
		p	1	mult	mult
c	deo	net/minecraft/util/shape/ArrayVoxelShape
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xPoints
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	yPoints
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zPoints
	m	(Ldev;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1	shape	shape
		p	2	xPoints	xPoints
		p	3	yPoints	yPoints
		p	4	zPoints	zPoints
	m	(Ldev;[D[D[D)V	<init>	<init>
		p	1	shape	shape
		p	2	xPoints	xPoints
		p	3	yPoints	yPoints
		p	4	zPoints	zPoints
c	dep	net/minecraft/util/shape/BitSetVoxelSet
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
	m	(Ldev;)V	<init>	<init>
		p	1	other	other
	m	(IIIIIIIII)V	<init>	<init>
		p	1	xMask	xMask
		p	2	yMask	yMask
		p	3	zMask	zMask
		p	4	xMin	xMin
		p	5	yMin	yMin
		p	6	zMin	zMin
		p	7	xMax	xMax
		p	8	yMax	yMax
		p	9	zMax	zMax
	m	(III)I	a	getIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ldev;Ldev;Ldey;Ldey;Ldey;Ldeq;)Ldep;	a	combine
		p	0	first	first
		p	1	second	second
		p	2	xPoints	xPoints
		p	3	yPoints	yPoints
		p	4	zPoints	zPoints
		p	5	function	function
c	deq	net/minecraft/util/function/BooleanBiFunction
	f	Ldeq;	a	FALSE
	f	Ldeq;	b	NOT_OR
	f	Ldeq;	c	ONLY_SECOND
	f	Ldeq;	d	NOT_FIRST
	f	Ldeq;	e	ONLY_FIRST
	f	Ldeq;	f	NOT_SECOND
	f	Ldeq;	g	NOT_SAME
	f	Ldeq;	h	NOT_AND
	f	Ldeq;	i	AND
	f	Ldeq;	j	SAME
	f	Ldeq;	k	SECOND
	f	Ldeq;	l	CAUSES
	f	Ldeq;	m	FIRST
	f	Ldeq;	n	CAUSED_BY
	f	Ldeq;	o	OR
	f	Ldeq;	p	TRUE
c	der	net/minecraft/block/ShapeContext
	m	(Lbke;)Z	a	isHolding
		p	1	item	item
	m	()Lder;	a	absent
	m	(Ldfg;Lfu;Z)Z	a	isAbove
		p	1	shape	shape
		p	2	pos	pos
		p	3	defaultValue	defaultValue
	m	(Laom;)Lder;	a	of
		p	0	entity	entity
	m	(Lcxa;Lcwy;)Z	a	method_27866
		p	1	state	state
		p	2	fluid	fluid
	m	()Z	b	isDescending
c	des	net/minecraft/util/shape/FractionalDoubleList
	f	I	a	sectionCount
	m	(I)V	<init>	<init>
		p	1	sectionCount	sectionCount
	m	(I)D	getDouble	getDouble
		p	1	position	position
c	det	net/minecraft/util/shape/SimpleVoxelShape
c	deu	net/minecraft/util/shape/FractionalPairList
	f	Ldes;	a	mergedList
	f	I	b	firstSectionCount
	f	I	c	secondSectionCount
	f	I	d	gcd
	m	(II)V	<init>	<init>
		p	1	firstSectionCount	firstSectionCount
		p	2	secondSectionCount	secondSectionCount
c	dev	net/minecraft/util/shape/VoxelSet
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	f	[Lfz$a;	d	AXES
	m	(III)V	<init>	<init>
		p	1	xSize	xSize
		p	2	ySize	ySize
		p	3	zSize	zSize
	m	(Lfz$a;)I	a	getMin
		p	1	axis	axis
	m	(IIIIZ)V	a	setColumn
		p	1	minZ	minZ
		p	2	maxZ	maxZ
		p	3	x	x
		p	4	y	y
		p	5	included	included
	m	(Lfs;III)Z	a	inBoundsAndContains
		p	1	cycle	cycle
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Ldev$b;Z)V	a	forEachEdge
	m	(Ldev$a;Lfs;)V	a	forEachDirection
		p	2	direction	direction
	m	()Z	a	isEmpty
	m	(Ldev$a;)V	a	forEachDirection
	m	(Ldev$b;Lfs;Z)V	a	forEachEdge
		p	2	direction	direction
	m	(IIIZZ)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	resize	resize
		p	5	included	included
	m	(IIIII)Z	a	isRectangleFull
		p	1	minX	minX
		p	2	maxX	maxX
		p	3	minZ	minZ
		p	4	maxZ	maxZ
		p	5	y	y
	m	(IIII)Z	a	isColumnFull
		p	1	minZ	minZ
		p	2	maxZ	maxZ
		p	3	x	x
		p	4	y	y
	m	(Lfz$a;)I	b	getMax
		p	1	axis	axis
	m	(Lfs;III)Z	b	contains
		p	1	cycle	cycle
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Ldev$b;Z)V	b	forEachBox
		p	1	consumer	consumer
		p	2	largest	largest
	m	(III)Z	b	contains
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()I	b	getXSize
	m	(Lfz$a;II)I	b	getEndingAxisCoord
		p	2	from	from
		p	3	to	to
	m	()I	c	getYSize
	m	(Lfz$a;)I	c	getSize
		p	1	axis	axis
	m	(III)Z	c	inBoundsAndContains
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()I	d	getZSize
c	dev$a	net/minecraft/util/shape/VoxelSet$PositionConsumer
	m	(Lfz;III)V	consume	consume
		p	1	direction	direction
		p	2	x	x
		p	3	y	y
		p	4	z	z
c	dev$b	net/minecraft/util/shape/VoxelSet$PositionBiConsumer
	m	(IIIIII)V	consume	consume
		p	1	x1	x1
		p	2	y1	y1
		p	3	z1	z1
		p	4	x2	x2
		p	5	y2	y2
		p	6	z2	z2
c	dew	net/minecraft/block/EntityShapeContext
	f	Lder;	a	ABSENT
	f	Z	b	descending
	f	D	c	minY
	f	Lbke;	d	heldItem
	m	(ZDLbke;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	descending	descending
		p	2	minY	minY
		p	4	heldItem	heldItem
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
c	dex	net/minecraft/util/shape/IdentityPairList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	merged
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1	values	values
c	dey	net/minecraft/util/shape/PairList
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getPairs
	m	(Ldey$a;)Z	a	forEachPair
		p	1	predicate	predicate
c	dey$a	net/minecraft/util/shape/PairList$Consumer
	m	(III)Z	merge	merge
		p	1	x	x
		p	2	y	y
		p	3	index	index
c	dez	net/minecraft/util/shape/SimplePairList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleArrayList;	a	valueIndices
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	b	minValues
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	c	maxValues
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V	<init>	<init>
		p	1	first	first
		p	2	second	second
		p	3	includeFirstOnly	includeFirstOnly
		p	4	includeSecondOnly	includeSecondOnly
c	df	net/minecraft/command/arguments/DimensionArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	INVALID_DIMENSION_EXCEPTION
	m	(Lcom/mojang/brigadier/StringReader;)Luh;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lzd;	a	getDimensionArgument
		p	0	context	context
		p	1	name	name
	m	()Ldf;	a	dimension
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dfb	net/minecraft/util/shape/DisjointPairList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	first
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	second
	f	Z	c	inverted
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V	<init>	<init>
		p	1	first	first
		p	2	second	second
		p	3	inverted	inverted
	m	(Ldey$a;)Z	b	iterateSections
	m	(I)D	getDouble	getDouble
		p	1	position	position
c	dfc	net/minecraft/util/shape/OffsetDoubleList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	oldList
	f	D	b	offset
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V	<init>	<init>
		p	1	oldList	oldList
		p	2	offset	offset
	m	(I)D	getDouble	getDouble
		p	1	position	position
c	dfd	net/minecraft/util/shape/VoxelShapes
	f	Ldfg;	a	UNBOUNDED
	f	Ldfg;	b	FULL_CUBE
	f	Ldfg;	c	EMPTY
	m	(Ldfg;Ldfg;Lfz;)Z	a	isSideCovered
		p	0	shape	shape
		p	1	neighbor	neighbor
		p	2	direction	direction
	m	(Ldfg;Ldfg;)Ldfg;	a	union
		p	0	first	first
		p	1	second	second
	m	(DDD)I	a	clamp
		p	0	value	value
		p	2	min	min
		p	4	max	max
	m	(DD)I	a	findRequiredBitResolution
		p	0	min	min
		p	2	max	max
	m	(DDDDDD)Ldfg;	a	cuboid
		p	0	xMin	xMin
		p	2	yMin	yMin
		p	4	zMin	zMin
		p	6	xMax	xMax
		p	8	yMax	yMax
		p	10	zMax	zMax
	m	(Ldeq;Ldev;IILdev;IIIII)Z	a	method_1070
		p	7	z1	z1
		p	8	z2	z2
		p	9	index3	index3
	m	()Ldfg;	a	empty
	m	(Lfz$a;Ldeg;Ljava/util/stream/Stream;D)D	a	calculateMaxOffset
		p	0	axis	axis
		p	1	box	box
		p	2	shapes	shapes
		p	3	maxDist	maxDist
	m	(Lfz$a;Ldeg;Lbqd;DLder;Ljava/util/stream/Stream;)D	a	calculatePushVelocity
		p	1	box	box
		p	2	world	world
		p	3	initial	initial
		p	5	context	context
		p	6	shapes	shapes
	m	(Ldeg;Lbqd;DLder;Lfs;Ljava/util/stream/Stream;)D	a	calculatePushVelocity
		p	0	box	box
		p	1	world	world
		p	2	initial	initial
		p	4	context	context
		p	5	direction	direction
		p	6	shapes	shapes
	m	(II)J	a	lcm
		p	0	a	a
		p	1	b	b
	m	(Ldey;Ldey;Ldey;Ldev;Ldev;Ldeq;)Z	a	matchesAnywhere
		p	0	mergedX	mergedX
		p	1	mergedY	mergedY
		p	2	mergedZ	mergedZ
		p	3	shape1	shape1
		p	4	shape2	shape2
		p	5	predicate	predicate
	m	(Ldey;Ldey;Ldeq;Ldev;Ldev;III)Z	a	method_1075
		p	5	x1	x1
		p	6	x2	x2
		p	7	index1	index1
	m	(Ldey;Ldeq;Ldev;ILdev;IIII)Z	a	method_1076
		p	6	y1	y1
		p	7	y2	y2
		p	8	index2	index2
	m	(Ldfg;Lfz;)Ldfg;	a	extrudeFace
		p	0	shape	shape
		p	1	direction	direction
	m	(Ldfg;[Ldfg;)Ldfg;	a	union
		p	0	first	first
		p	1	others	others
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Ldey;	a	createListPair
		p	0	size	size
		p	1	first	first
		p	2	second	second
		p	3	includeFirst	includeFirst
		p	4	includeSecond	includeSecond
	m	(Ldeg;)Ldfg;	a	cuboid
		p	0	box	box
	m	(Ldfg;Ldfg;Ldeq;)Ldfg;	a	combineAndSimplify
		p	0	first	first
		p	1	second	second
		p	2	function	function
	m	(Ldfg;Ldfg;)Z	b	unionCoversFullCube
		p	0	one	one
		p	1	two	two
	m	()Ldfg;	b	fullCube
	m	(Ldfg;Ldfg;Lfz;)Z	b	adjacentSidesCoverSquare
		p	0	one	one
		p	1	two	two
		p	2	direction	direction
	m	(Ldfg;Ldfg;Ldeq;)Ldfg;	b	combine
		p	0	one	one
		p	1	two	two
		p	2	function	function
	m	(Ldfg;Ldfg;Ldeq;)Z	c	matchesAnywhere
		p	0	shape1	shape1
		p	1	shape2	shape2
		p	2	predicate	predicate
c	dfd$a	net/minecraft/util/shape/VoxelShapes$BoxConsumer
	m	(DDDDDD)V	consume	consume
		p	1	minX	minX
		p	3	minY	minY
		p	5	minZ	minZ
		p	7	maxX	maxX
		p	9	maxY	maxY
		p	11	maxZ	maxZ
c	dfe	net/minecraft/util/shape/SlicedVoxelShape
	f	Ldfg;	b	shape
	f	Lfz$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	POINTS
	m	(Ldfg;Lfz$a;I)V	<init>	<init>
		p	1	shape	shape
		p	2	axis	axis
		p	3	sliceWidth	sliceWidth
	m	(Ldev;Lfz$a;I)Ldev;	a	createVoxelSet
		p	0	voxelSet	voxelSet
		p	2	sliceWidth	sliceWidth
c	dff	net/minecraft/util/shape/CroppedVoxelSet
	f	Ldev;	d	parent
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
	m	(Ldev;IIIIII)V	<init>	<init>
		p	1	parent	parent
		p	2	xMin	xMin
		p	3	yMin	yMin
		p	4	zMin	zMin
		p	5	xMax	xMax
		p	6	yMax	yMax
		p	7	zMax	zMax
c	dfg	net/minecraft/util/shape/VoxelShape
	f	Ldev;	a	voxels
	f	[Ldfg;	b	shapeCache
	m	(Ldev;)V	<init>	<init>
		p	1	voxels	voxels
	m	(Lfs;Ldeg;D)D	a	calculateMaxDistance
		p	1	axisCycle	axisCycle
		p	2	box	box
		p	3	maxDist	maxDist
	m	(Ldem;Ldem;Lfu;)Ldeh;	a	rayTrace
		p	1	start	start
		p	2	end	end
		p	3	pos	pos
	m	(Lfz$a;Ldeg;D)D	a	calculateMaxDistance
		p	1	axis	axis
		p	2	box	box
		p	3	maxDist	maxDist
	m	(Lfz$a;D)I	a	getCoordIndex
		p	2	coord	coord
	m	()Ldeg;	a	getBoundingBox
	m	(Lfz$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getPointPositions
		p	1	axis	axis
	m	(Lfz;)Ldfg;	a	getFace
		p	1	facing	facing
	m	(Ldfd$a;)V	a	forEachEdge
	m	(Lfz$a;I)D	a	getPointPosition
		p	1	axis	axis
		p	2	index	index
	m	(DDD)Ldfg;	a	offset
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ldfd$a;)V	b	forEachBox
	m	(Lfz$a;)D	b	getMin
		p	1	axis	axis
	m	(Lfz$a;DD)D	b	getEndingCoord
		p	2	from	from
		p	4	to	to
	m	(DDD)Z	b	contains
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfz;)Ldfg;	b	getUncachedFace
		p	1	facing	facing
	m	()Z	b	isEmpty
	m	()Ldfg;	c	simplify
	m	(Lfz$a;)D	c	getMax
		p	1	axis	axis
	m	()Ljava/util/List;	d	getBoundingBoxes
c	dfj	net/minecraft/scoreboard/ScoreboardObjective
	f	Ldfm;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Ldfp;	c	criterion
	f	Lmr;	d	displayName
	f	Ldfp$a;	f	renderType
	m	(Ldfm;Ljava/lang/String;Ldfp;Lmr;Ldfp$a;)V	<init>	<init>
		p	1	scoreboard	scoreboard
		p	2	name	name
		p	3	criterion	criterion
		p	4	displayName	displayName
	m	(Lmr;)V	a	setDisplayName
		p	1	name	name
	m	()Ldfm;	a	getScoreboard
	m	(Ldfp$a;)V	a	setRenderType
		p	1	renderType	renderType
	m	(Lnb;)Lnb;	a	method_1119
		p	1	style	style
	m	()Ljava/lang/String;	b	getName
	m	()Ldfp;	c	getCriterion
	m	()Lmr;	d	getDisplayName
	m	()Lmr;	e	toHoverableText
	m	()Ldfp$a;	f	getRenderType
c	dfk	net/minecraft/scoreboard/Team
	f	Ldfm;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Set;	c	playerList
	f	Lmr;	d	displayName
	f	Lmr;	e	prefix
	f	Lmr;	f	suffix
	f	Z	g	friendlyFire
	f	Z	h	showFriendlyInvisibles
	f	Ldfo$b;	i	nameTagVisibilityRule
	f	Ldfo$b;	j	deathMessageVisibilityRule
	f	Li;	k	color
	f	Ldfo$a;	l	collisionRule
	m	(Ldfm;Ljava/lang/String;)V	<init>	<init>
		p	1	scoreboard	scoreboard
		p	2	name	name
	m	(Li;)V	a	setColor
		p	1	color	color
	m	(Ldfo$a;)V	a	setCollisionRule
	m	(Lmr;)V	a	setDisplayName
	m	(I)V	a	setFriendlyFlagsBitwise
	m	(Z)V	a	setFriendlyFireAllowed
		p	1	friendlyFire	friendlyFire
	m	(Ldfo$b;)V	a	setNameTagVisibilityRule
	m	(Ldfo;Lmr;)Lmx;	a	modifyText
	m	(Lmr;)V	b	setPrefix
	m	(Ldfo$b;)V	b	setDeathMessageVisibilityRule
	m	(Z)V	b	setShowFriendlyInvisibles
		p	1	showFriendlyInvisible	showFriendlyInvisible
	m	()Lmr;	c	getDisplayName
	m	(Lmr;)V	c	setSuffix
	m	()Lmx;	d	getFormattedName
	m	()Lmr;	e	getPrefix
	m	()Lmr;	f	getSuffix
	m	()I	m	getFriendlyFlagsBitwise
c	dfl	net/minecraft/scoreboard/ScoreboardPlayerScore
	f	Ljava/util/Comparator;	a	COMPARATOR
	f	Ldfm;	b	scoreboard
	f	Ldfj;	c	objective
	f	Ljava/lang/String;	d	playerName
	f	I	e	score
	f	Z	f	locked
	f	Z	g	forceUpdate
	m	(Ldfm;Ldfj;Ljava/lang/String;)V	<init>	<init>
		p	1	scoreboard	scoreboard
		p	2	objective	objective
		p	3	playerName	playerName
	m	(Z)V	a	setLocked
		p	1	locked	locked
	m	(I)V	a	incrementScore
	m	()V	a	incrementScore
	m	()I	b	getScore
	m	(I)V	c	setScore
		p	1	score	score
	m	()V	c	clearScore
	m	()Ldfj;	d	getObjective
	m	()Ljava/lang/String;	e	getPlayerName
	m	()Ldfm;	f	getScoreboard
	m	()Z	g	isLocked
c	dfm	net/minecraft/scoreboard/Scoreboard
	f	Ljava/util/Map;	a	objectives
	f	Ljava/util/Map;	b	objectivesByCriterion
	f	Ljava/util/Map;	c	playerObjectives
	f	[Ldfj;	d	objectiveSlots
	f	Ljava/util/Map;	e	teams
	f	Ljava/util/Map;	f	teamsByPlayer
	f	[Ljava/lang/String;	g	displaySlotNames
	m	(Ldfj;)V	a	updateObjective
		p	1	objective	objective
	m	(Ljava/lang/String;Ldfk;)Z	a	addPlayerToTeam
		p	1	playerName	playerName
	m	(Ljava/lang/String;Ldfp;Lmr;Ldfp$a;)Ldfj;	a	addObjective
		p	1	name	name
		p	2	criterion	criterion
		p	3	displayName	displayName
		p	4	renderType	renderType
	m	(I)Ldfj;	a	getObjectiveForSlot
	m	(Laom;)V	a	resetEntityScore
	m	(Ljava/lang/String;)V	a	updatePlayerScore
		p	1	playerName	playerName
	m	(Llk;)V	a	fromTag
	m	(Ldfk;)V	a	updateScoreboardTeamAndPlayers
	m	(Ldfl;)V	a	updateScore
		p	1	score	score
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ldfj;)V	a	method_1182
		p	3	objective	objective
	m	(Ljava/lang/String;Ldfj;)V	a	updatePlayerScore
		p	1	playerName	playerName
		p	2	objective	objective
	m	(ILdfj;)V	a	setObjectiveSlot
		p	1	slot	slot
		p	2	objective	objective
	m	(Ldfp;)Ljava/util/List;	a	method_1179
		p	0	criterion	criterion
	m	(Llk;Ldfl;)V	a	method_1161
		p	1	score	score
	m	(Ldfp;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	forEachScore
		p	1	criterion	criterion
		p	2	player	player
		p	3	action	action
	m	(Ljava/lang/String;Ldfk;)V	b	removePlayerFromTeam
		p	1	playerName	playerName
	m	(Ldfl;)Z	b	method_1177
		p	0	score	score
	m	(Ljava/lang/String;Ldfj;)Z	b	playerHasObjective
		p	1	playerName	playerName
		p	2	objective	objective
	m	(Ldfj;)V	b	updateExistingObjective
		p	1	objective	objective
	m	(Ldfk;)V	b	updateScoreboardTeam
	m	(I)Ljava/lang/String;	b	getDisplaySlotName
		p	0	slotId	slotId
	m	(Ljava/lang/String;)Z	b	containsObjective
		p	1	name	name
	m	()Ljava/util/Collection;	c	getObjectives
	m	(Ldfj;)V	c	updateRemovedObjective
		p	1	objective	objective
	m	(Ljava/lang/String;Ldfj;)Ldfl;	c	getPlayerScore
		p	1	player	player
		p	2	objective	objective
	m	(Ljava/lang/String;)Ldfj;	c	getObjective
		p	1	name	name
	m	(Ldfk;)V	c	updateRemovedTeam
	m	(Ljava/lang/String;)Ldfj;	d	getNullableObjective
		p	1	name	name
	m	(Ldfk;)V	d	removeTeam
	m	(Ljava/lang/String;Ldfj;)V	d	resetPlayerScore
		p	1	playerName	playerName
		p	2	objective	objective
	m	()Ljava/util/Collection;	d	getObjectiveNames
	m	(Ljava/lang/String;)Ljava/util/Map;	e	getPlayerObjectives
	m	(Ljava/lang/String;Ldfj;)Ldfl;	e	method_1187
		p	2	objective	objective
	m	()Ljava/util/Collection;	e	getKnownPlayers
	m	(Ljava/lang/String;)Ldfk;	f	getTeam
	m	()Ljava/util/Collection;	f	getTeamNames
	m	(Ljava/lang/String;)Ldfk;	g	addTeam
	m	()Ljava/util/Collection;	g	getTeams
	m	(Ljava/lang/String;)Z	h	clearPlayerTeam
	m	()[Ljava/lang/String;	h	getDisplaySlotNames
	m	(Ldfj;)Ljava/util/Collection;	i	getAllPlayerScores
		p	1	objective	objective
	m	()Llk;	i	toTag
	m	(Ljava/lang/String;)Ldfk;	i	getPlayerTeam
	m	(Ldfj;)V	j	removeObjective
		p	1	objective	objective
	m	(Ljava/lang/String;)I	j	getDisplaySlotId
		p	0	slotName	slotName
c	dfn	net/minecraft/scoreboard/ScoreboardState
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldfm;	b	scoreboard
	f	Lle;	c	tag
	m	(Ldfk;Llk;)V	a	deserializeTeamPlayers
		p	1	team	team
	m	()Llk;	a	serializeTeams
	m	(Llk;)V	a	deserializeTeams
	m	(Ldfm;)V	a	setScoreboard
	m	(Llk;)V	b	deserializeObjectives
	m	(Lle;)V	c	deserializeDisplaySlots
	m	(Lle;)V	d	serializeSlots
	m	()Llk;	e	serializeObjectives
c	dfo	net/minecraft/scoreboard/AbstractTeam
	m	(Ldfo;)Z	a	isEqual
	m	()Ljava/lang/String;	b	getName
	m	(Lmr;)Lmx;	d	modifyText
	m	()Ljava/util/Collection;	g	getPlayerList
	m	()Z	h	isFriendlyFireAllowed
	m	()Z	i	shouldShowFriendlyInvisibles
	m	()Ldfo$b;	j	getNameTagVisibilityRule
	m	()Ldfo$b;	k	getDeathMessageVisibilityRule
	m	()Ldfo$a;	l	getCollisionRule
	m	()Li;	n	getColor
c	dfo$a	net/minecraft/scoreboard/AbstractTeam$CollisionRule
	f	Ljava/lang/String;	e	name
	f	I	f	value
	f	Ljava/util/Map;	g	COLLISION_RULES
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	name	name
		p	4	value	value
	m	(Ljava/lang/String;)Ldfo$a;	a	getRule
		p	0	name	name
	m	()Lmr;	b	getTranslationKey
c	dfo$b	net/minecraft/scoreboard/AbstractTeam$VisibilityRule
	f	Ljava/lang/String;	e	name
	f	I	f	value
	f	Ljava/util/Map;	g	VISIBILITY_RULES
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	name	name
		p	4	value	value
	m	(Ljava/lang/String;)Ldfo$b;	a	getRule
		p	0	name	name
	m	()Lmr;	b	getTranslationKey
c	dfp	net/minecraft/scoreboard/ScoreboardCriterion
	f	Ljava/util/Map;	a	OBJECTIVES
	f	[Ldfp;	m	TEAM_KILLS
	f	[Ldfp;	n	KILLED_BY_TEAMS
	f	Ljava/lang/String;	o	name
	f	Z	p	readOnly
	f	Ldfp$a;	q	criterionType
	m	(Ljava/lang/String;ZLdfp$a;)V	<init>	<init>
		p	1	name	name
		p	2	readOnly	readOnly
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Lact;Luh;)Ljava/util/Optional;	a	createStatCriterion
		p	0	statType	statType
		p	1	id	id
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	createStatCriterion
		p	0	name	name
	m	()Ljava/lang/String;	c	getName
	m	()Z	d	isReadOnly
	m	()Ldfp$a;	e	getCriterionType
c	dfp$a	net/minecraft/scoreboard/ScoreboardCriterion$RenderType
	f	Ljava/lang/String;	c	name
	f	Ljava/util/Map;	d	CRITERION_TYPES
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Ldfp$a;	a	getType
		p	0	name	name
	m	()Ljava/lang/String;	a	getName
c	dfs	net/minecraft/client/util/GlfwUtil
	m	()V	a	makeJvmCrash
	m	()D	b	getTime
c	dft	net/minecraft/client/sound/Source
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	pointer
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	c	playing
	f	I	d	bufferSize
	f	Lepf;	e	stream
	m	(I)V	<init>	<init>
		p	1	pointer	pointer
	m	(Ldem;)V	a	setPosition
	m	(Lepf;)V	a	setStream
		p	1	stream	stream
	m	(Ljavax/sound/sampled/AudioFormat;I)I	a	getBufferSize
		p	0	format	format
		p	1	time	time
	m	()Ldft;	a	create
	m	(F)V	a	setPitch
	m	(Z)V	a	setLooping
	m	(Ldfy;)V	a	setBuffer
	m	(F)V	b	setVolume
	m	(Z)V	b	setRelative
	m	()V	b	close
	m	(F)V	c	setAttenuation
	m	()V	c	play
	m	()V	d	pause
	m	()V	e	resume
	m	()V	f	stop
	m	()Z	g	isStopped
	m	()V	h	disableAttenuation
	m	()V	i	tick
	m	()I	j	getSourceState
	m	()I	k	removeProcessedBuffers
c	dfu	net/minecraft/client/sound/SoundEngine
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	J	b	devicePointer
	f	J	c	contextPointer
	f	Ldfu$a;	d	EMPTY_SOURCE_SET
	f	Ldfu$a;	e	streamingSources
	f	Ldfu$a;	f	staticSources
	f	Ldfv;	g	listener
	m	()V	a	init
	m	(Ldfu$c;)Ldft;	a	createSource
		p	1	mode	mode
	m	(Ldft;)V	a	release
		p	1	source	source
	m	()V	b	close
	m	()Ldfv;	c	getListener
	m	()Ljava/lang/String;	d	getDebugString
	m	()I	f	getMonoSourceCount
	m	()J	g	openDevice
c	dfu$a	net/minecraft/client/sound/SoundEngine$SourceSet
	m	()Ldft;	a	createSource
	m	(Ldft;)Z	a	release
	m	()V	b	close
	m	()I	c	getMaxSourceCount
	m	()I	d	getSourceCount
c	dfu$b	net/minecraft/client/sound/SoundEngine$SourceSetImpl
	f	I	a	maxSourceCount
	f	Ljava/util/Set;	b	sources
	m	(I)V	<init>	<init>
		p	1	maxSourceCount	maxSourceCount
c	dfu$c	net/minecraft/client/sound/SoundEngine$RunMode
c	dfv	net/minecraft/client/sound/Listener
	f	F	a	volume
	m	(F)V	a	setVolume
		p	1	volume	volume
	m	(Ldem;)V	a	setPosition
		p	1	position	position
	m	(Lg;Lg;)V	a	setOrientation
	m	()F	b	getVolume
	m	()V	c	init
c	dfw	net/minecraft/client/sound/OggAudioStream
	f	J	a	pointer
	f	Ljavax/sound/sampled/AudioFormat;	b	format
	f	Ljava/io/InputStream;	c	inputStream
	f	Ljava/nio/ByteBuffer;	d	buffer
	m	(Ljava/io/InputStream;)V	<init>	<init>
		p	1	inputStream	inputStream
	m	(Ljava/nio/FloatBuffer;Ldfw$a;)V	a	readChannels
	m	(Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Ldfw$a;)V	a	readChannels
	m	(Ldfw$a;)Z	a	readOggFile
	m	()Ljava/nio/ByteBuffer;	b	getBuffer
	m	()Z	c	readHeader
	m	()V	d	increaseBufferSize
c	dfw$a	net/minecraft/client/sound/OggAudioStream$ChannelList
	f	Ljava/util/List;	a	buffers
	f	I	b	size
	f	I	c	currentBufferSize
	f	Ljava/nio/ByteBuffer;	d	buffer
	m	(I)V	<init>	<init>
		p	1	size	size
	m	(F)V	a	addChannel
	m	()Ljava/nio/ByteBuffer;	a	getBuffer
	m	()V	b	init
c	dfx	net/minecraft/client/sound/AlUtil
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljavax/sound/sampled/AudioFormat;)I	a	getFormatId
		p	0	format	format
	m	(Ljava/lang/String;)Z	a	checkErrors
		p	0	sectionName	sectionName
	m	(JLjava/lang/String;)Z	a	checkAlcErrors
		p	0	deviceHandle	deviceHandle
		p	2	sectionName	sectionName
	m	(I)Ljava/lang/String;	a	getErrorMessage
		p	0	errorCode	errorCode
	m	(I)Ljava/lang/String;	b	getAlcErrorMessage
		p	0	errorCode	errorCode
c	dfy	net/minecraft/client/sound/StaticSound
	f	Ljava/nio/ByteBuffer;	a	sample
	f	Ljavax/sound/sampled/AudioFormat;	b	format
	f	Z	c	hasBuffer
	f	I	d	streamBufferPointer
	m	(Ljava/nio/ByteBuffer;Ljavax/sound/sampled/AudioFormat;)V	<init>	<init>
		p	1	sample	sample
		p	2	format	format
	m	()Ljava/util/OptionalInt;	a	getStreamBufferPointer
	m	()V	b	close
	m	()Ljava/util/OptionalInt;	c	takeStreamBufferPointer
c	dfz	net/minecraft/client/font/Glyph
	m	(Z)F	a	getAdvance
		p	1	bold	bold
	m	()F	a	getBearingX
	m	()F	b	getBoldOffset
	m	()F	c	getShadowOffset
c	dg	net/minecraft/command/arguments/EntityAnchorArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	INVALID_ANCHOR_EXCEPTION
	m	()Ldg;	a	entityAnchor
	m	(Lcom/mojang/brigadier/StringReader;)Ldg$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldg$a;	a	getEntityAnchor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dg$a	net/minecraft/command/arguments/EntityAnchorArgumentType$EntityAnchor
	f	Ljava/util/Map;	c	anchors
	f	Ljava/lang/String;	d	id
	f	Ljava/util/function/BiFunction;	e	offset
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	3	id	id
		p	4	offset	offset
	m	(Ljava/lang/String;)Ldg$a;	a	fromId
		p	0	id	id
	m	(Lcz;)Ldem;	a	positionAt
	m	(Laom;)Ldem;	a	positionAt
c	dga	net/minecraft/client/font/Font
	m	(I)Ldgb;	a	getGlyph
c	dgb	net/minecraft/client/font/RenderableGlyph
	m	(II)V	a	upload
		p	1	x	x
		p	2	y	y
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()Z	f	hasColor
	m	()F	g	getOversample
	m	()F	h	getXMin
	m	()F	i	getXMax
	m	()F	j	getYMin
	m	()F	k	getYMax
	m	()F	l	getAscent
c	dgc	net/minecraft/client/font/TrueTypeFont
	f	Lorg/lwjgl/stb/STBTTFontinfo;	b	info
	f	F	c	oversample
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	d	excludedCharacters
	f	F	e	shiftX
	f	F	f	shiftY
	f	F	g	scaleFactor
	f	F	h	ascent
	m	(I)Ldgc$a;	b	getGlyph
c	dgc$a	net/minecraft/client/font/TrueTypeFont$TtfGlyph
	f	I	b	width
	f	I	c	height
	f	F	d	bearingX
	f	F	e	ascent
	f	F	f	advance
	f	I	g	glyphIndex
	m	(Ldgc;IIIIFFI)V	<init>	<init>
		p	1	outerClass	outerClass
		p	2	xMin	xMin
		p	3	xMax	xMax
		p	4	yMax	yMax
		p	5	yMin	yMin
		p	6	advance	advance
		p	7	bearing	bearing
		p	8	index	index
c	dgd	com/mojang/blaze3d/systems/RenderCall
c	dge	com/mojang/blaze3d/systems/RenderCallStorage
	f	Ljava/util/List;	a	recordingQueues
c	dgf	net/minecraft/client/gl/Framebuffer
	f	I	a	textureWidth
	f	I	b	textureHeight
	f	I	c	viewportWidth
	f	I	d	viewportHeight
	f	Z	e	useDepthAttachment
	f	I	f	fbo
	f	I	g	colorAttachment
	f	I	h	depthAttachment
	f	[F	i	clearColor
	f	I	j	texFilter
	m	(IIZZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	useDepth	useDepth
		p	4	getError	getError
	m	(IIZ)V	a	resize
		p	1	width	width
		p	2	height	height
		p	3	getError	getError
	m	(I)V	a	setTexFilter
	m	(Ldgf;)V	a	copyDepthFrom
	m	(FFFF)V	a	setClearColor
		p	1	r	r
		p	2	g	g
		p	3	b	b
		p	4	a	a
	m	(Z)V	a	beginWrite
		p	1	setViewport	setViewport
	m	(II)V	a	draw
		p	1	width	width
		p	2	height	height
	m	()V	a	delete
	m	(Z)V	b	clear
		p	1	getError	getError
	m	(IIZ)V	b	initFbo
		p	1	width	width
		p	2	height	height
		p	3	getError	getError
	m	()V	b	checkFramebufferStatus
	m	(IIZ)V	c	draw
		p	1	width	width
		p	2	height	height
	m	()V	c	beginRead
	m	(Z)V	c	bind
		p	1	updateViewport	updateViewport
	m	(IIZ)V	d	resizeInternal
		p	1	width	width
		p	2	height	height
		p	3	getError	getError
	m	()V	d	endRead
	m	(IIZ)V	e	drawInternal
		p	1	width	width
		p	2	height	height
	m	()V	e	endWrite
c	dgg	net/minecraft/client/util/Clipboard
	f	Ljava/nio/ByteBuffer;	a	clipboardBuffer
	m	(JLjava/lang/String;)V	a	setClipboard
		p	1	window	window
	m	(JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String;	a	getClipboard
		p	1	window	window
	m	(JLjava/nio/ByteBuffer;[B)V	a	setClipboard
c	dgh	net/minecraft/client/util/Untracker
	f	Ljava/lang/invoke/MethodHandle;	a	ALLOCATOR_UNTRACK
	m	(Lorg/lwjgl/system/Pointer;)V	a	untrack
		p	0	pointer	pointer
	m	(J)V	a	untrack
		p	0	address	address
c	dgi	net/minecraft/client/WindowSettings
	f	I	a	width
	f	I	b	height
	f	Ljava/util/OptionalInt;	c	fullscreenWidth
	f	Ljava/util/OptionalInt;	d	fullscreenHeight
	f	Z	e	fullscreen
	m	(IILjava/util/OptionalInt;Ljava/util/OptionalInt;Z)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	fullscreenWidth	fullscreenWidth
		p	4	fullscreenHeight	fullscreenHeight
		p	5	fullscreen	fullscreen
c	dgj	com/mojang/blaze3d/platform/FramebufferInfo
	c	Contains global constants for the frame buffer and frame buffer states,\nnormalized to the current implementation running on the target system.
	f	I	a	FRAME_BUFFER
	f	I	b	RENDER_BUFFER
	f	I	c	COLOR_ATTACHMENT
	f	I	d	DEPTH_ATTACHMENT
	f	I	e	FRAME_BUFFER_COMPLETE
		c	@see org.lwjgl.opengl.GL30#GL_FRAMEBUFFER_COMPLETE
	f	I	f	FRAME_BUFFER_INCOMPLETE_ATTACHMENT
		c	@see org.lwjgl.opengl.GL30#GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
	f	I	g	FRAME_BUFFER_INCOMPLETE_MISSING_ATTACHMENT
		c	@see org.lwjgl.opengl.GL30#GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
	f	I	h	FRAME_BUFFER_INCOMPLETE_DRAW_BUFFER
		c	@see org.lwjgl.opengl.GL30#GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
	f	I	i	FRAME_BUFFER_INCOMPLETE_READ_BUFFER
		c	@see org.lwjgl.opengl.GL30#GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
c	dgk	net/minecraft/client/gl/GlDebug
	f	Ljava/nio/ByteBuffer;	a	byteBuffer
	f	Ljava/nio/FloatBuffer;	b	floatBuffer
	f	Ljava/nio/IntBuffer;	c	intBuffer
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lcom/google/common/base/Joiner;	e	NEWLINE_JOINER
	f	Lcom/google/common/base/Joiner;	f	SEMICOLON_JOINER
	f	Ljava/util/Map;	g	CONSTANTS
	f	Ljava/util/List;	h	KHR_VERBOSITY_LEVELS
	f	Ljava/util/List;	i	ARB_VERBOSITY_LEVELS
	m	(ILjava/lang/String;)V	a	registerConstant
		p	0	constant	constant
		p	1	description	description
	m	(IIIIIJJ)V	a	info
		p	0	source	source
		p	1	type	type
		p	2	id	id
		p	3	severity	severity
	m	(I)Ljava/lang/String;	a	unknown
		p	0	opcode	opcode
	m	(IZ)V	a	enableDebug
		p	0	verbosity	verbosity
		p	1	sync	sync
	m	(I)Ljava/lang/String;	b	getSource
		p	0	opcode	opcode
	m	(I)Ljava/lang/String;	c	getType
		p	0	opcode	opcode
	m	(I)Ljava/lang/String;	d	getSeverity
		p	0	opcode	opcode
c	dgl	com/mojang/blaze3d/platform/GlStateManager
	f	Ljava/nio/FloatBuffer;	a	MATRIX_BUFFER
	f	Ldgl$a;	b	ALPHA_TEST
	f	Ldgl$c;	c	LIGHTING
	f	[Ldgl$c;	d	LIGHT_ENABLE
	f	Ldgl$g;	e	COLOR_MATERIAL
	f	Ldgl$b;	f	BLEND
	f	Ldgl$i;	g	DEPTH
	f	Ldgl$n;	h	FOG
	f	Ldgl$h;	i	CULL
	f	Ldgl$p;	j	POLY_OFFSET
	f	Ldgl$e;	k	COLOR_LOGIC
	f	Ldgl$v;	l	TEX_GEN
	f	Ldgl$s;	m	STENCIL
	f	Ljava/nio/FloatBuffer;	n	colorBuffer
	f	I	o	activeTexture
	f	[Ldgl$w;	p	TEXTURES
	f	I	q	modelShadeMode
	f	Ldgl$c;	r	RESCALE_NORMAL
	f	Ldgl$f;	s	COLOR_MASK
	f	Ldgl$d;	t	COLOR
	f	Ldgl$l;	u	fboMode
	m	()V	A	enableCull
	m	(I)V	A	method_22607
		p	0	index	index
	m	()V	B	disableCull
	m	(I)Ljava/lang/String;	B	getString
		p	0	name	name
	m	()V	C	enablePolygonOffset
	m	(I)I	C	getInteger
		p	0	pname	pname
	m	()V	D	disablePolygonOffset
	m	()V	E	enableLineOffset
	m	()V	F	disableLineOffset
	m	()V	G	enableColorLogicOp
	m	()V	H	disableColorLogicOp
	m	()V	I	enableTexture
	m	()V	J	disableTexture
	m	()I	K	genTextures
	m	()V	L	enableRescaleNormal
	m	()V	M	disableRescaleNormal
	m	()V	N	loadIdentity
	m	()V	O	pushMatrix
	m	()V	P	popMatrix
	m	()V	Q	clearCurrentColor
	m	()I	R	getError
	m	()Z	S	supportsGl30
	m	(ZZZZ)V	a	colorMask
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(IZ)V	a	clear
		p	0	mask	mask
		p	1	getError	getError
	m	(DDD)V	a	scaled
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(D)V	a	clearDepth
		p	0	depth	depth
	m	(IIIJ)V	a	texCoordPointer
		p	0	size	size
		p	1	type	type
		p	2	stride	stride
		p	3	pointer	pointer
	m	(IILjava/nio/FloatBuffer;)V	a	light
		p	0	light	light
		p	1	pname	pname
		p	2	params	params
	m	(I)V	a	enableLight
		p	0	light	light
	m	(III)V	a	texEnv
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(F)V	a	fogDensity
		p	0	density	density
	m	(ILjava/nio/IntBuffer;)V	a	uniform1
		p	0	location	location
		p	1	value	value
	m	(Lb;)V	a	multMatrix
		p	0	matrix	matrix
	m	(I[F)V	a	fog
		p	0	pname	pname
		p	1	params	params
	m	(Lg;Lg;Lb;)V	a	setupLevelDiffuseLighting
	m	(Z)V	a	depthMask
		p	0	mask	mask
	m	(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String;	a	initFramebufferSupport
		c	Configures the frame buffer and populates {@link FramebufferInfo} with the appropriate constants\nfor the current GLCapabilities.\n\n@return human-readable string representing the selected frame buffer technology\n@throws IllegalStateException if no known frame buffer technology is supported
		p	0	capabilities	capabilities
	m	(ILjava/nio/FloatBuffer;)V	a	lightModel
		p	0	pname	pname
		p	1	params	params
	m	(IIF)V	a	texParameter
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(DDDDDD)V	a	ortho
		p	0	l	l
		p	2	r	r
		p	4	b	b
		p	6	t	t
		p	8	n	n
		p	10	f	f
	m	(FFF)V	a	normal3f
		p	0	nx	nx
		p	1	ny	ny
		p	2	nz	nz
	m	(IZLjava/nio/FloatBuffer;)V	a	uniformMatrix2
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(IIIIIIIIII)V	a	blitFramebuffer
	m	(IFF)V	a	multiTexCoords2f
		p	0	texture	texture
		p	1	s	s
		p	2	t	t
	m	(FF)V	a	polygonOffset
		p	0	factor	factor
		p	1	units	units
	m	(IIIII)V	a	framebufferTexture2D
		p	0	target	target
		p	1	attachment	attachment
		p	2	textureTarget	textureTarget
		p	3	texture	texture
		p	4	level	level
	m	(IIIIJ)V	a	getTexImage
		p	0	target	target
		p	1	level	level
		p	2	format	format
		p	3	type	type
		p	4	pixels	pixels
	m	(II)V	a	colorMaterial
		p	0	face	face
		p	1	mode	mode
	m	(IIJ)V	a	normalPointer
		p	0	type	type
		p	1	stride	stride
		p	2	pointer	pointer
	m	(Ldgl$t;I)V	a	texGenMode
		p	0	coord	coord
		p	1	mode	mode
	m	()V	a	pushLightingAttributes
	m	(IIIIIIIILjava/nio/IntBuffer;)V	a	texImage2D
		p	0	target	target
		p	1	level	level
		p	2	internalFormat	internalFormat
		p	3	width	width
		p	4	height	height
		p	5	border	border
		p	6	format	format
		p	7	type	type
		p	8	pixels	pixels
	m	(FFFF)V	a	blendColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(Ljava/nio/FloatBuffer;)V	a	multMatrix
		p	0	matrix	matrix
	m	(IF)V	a	alphaFunc
		p	0	func	func
		p	1	ref	ref
	m	(IIIIIILjava/nio/ByteBuffer;)V	a	readPixels
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
		p	4	format	format
		p	5	type	type
		p	6	pixels	pixels
	m	(ILjava/nio/ByteBuffer;I)V	a	bufferData
		p	0	target	target
		p	1	data	data
		p	2	usage	usage
	m	(IIII)V	a	blendFuncSeparate
		p	0	srcFactorRGB	srcFactorRGB
		p	1	dstFactorRGB	dstFactorRGB
		p	2	srcFactorAlpha	srcFactorAlpha
		p	3	dstFactorAlpha	dstFactorAlpha
	m	(Ldgl$t;)V	a	enableTexGen
		p	0	coord	coord
	m	(IIIIIIIIJ)V	a	texSubImage2D
		p	0	target	target
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	width	width
		p	5	height	height
		p	6	format	format
		p	7	type	type
		p	8	pixels	pixels
	m	(ILjava/lang/CharSequence;)V	a	shaderSource
		p	0	shader	shader
		p	1	source	source
	m	(IIIZIJ)V	a	vertexAttribPointer
		p	0	index	index
		p	1	size	size
		p	2	type	type
		p	3	normalized	normalized
		p	4	stride	stride
		p	5	pointer	pointer
	m	(Lg;Lg;)V	a	setupGuiFlatDiffuseLighting
	m	(Ldgl$t;ILjava/nio/FloatBuffer;)V	a	texGenParam
		p	0	coord	coord
		p	1	pname	pname
		p	2	params	params
	m	(IIIIIIII)V	a	copyTexSubImage2d
	m	(II)V	b	blendFunc
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
	m	(ILjava/nio/IntBuffer;)V	b	uniform2
		p	0	location	location
		p	1	value	value
	m	(DDD)V	b	translated
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(IF)V	b	pixelTransfer
		p	0	pname	pname
		p	1	param	param
	m	(FFFF)V	b	clearColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(III)V	b	texParameter
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(IZLjava/nio/FloatBuffer;)V	b	uniformMatrix3
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(ILjava/nio/FloatBuffer;)V	b	uniform1
		p	0	location	location
		p	1	value	value
	m	(FFF)V	b	scalef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(IIII)V	b	blendFuncSeparateUntracked
		p	0	srcFactorRGB	srcFactorRGB
		p	1	dstFactorRGB	dstFactorRGB
		p	2	srcFactorAlpha	srcFactorAlpha
		p	3	dstFactorAlpha	dstFactorAlpha
	m	(Lg;Lg;)V	b	setupGui3dDiffuseLighting
	m	(I)V	b	depthFunc
		p	0	func	func
	m	(ILjava/lang/CharSequence;)I	b	getUniformLocation
		p	0	program	program
		p	1	name	name
	m	(F)V	b	fogStart
		p	0	start	start
	m	(Ldgl$t;)V	b	disableTexGen
		p	0	coord	coord
	m	()V	b	pushTextureAttributes
	m	(IIIJ)V	b	vertexPointer
		p	0	size	size
		p	1	type	type
		p	2	stride	stride
		p	3	pointer	pointer
	m	(FFFF)V	c	rotatef
		p	0	angle	angle
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(FFF)V	c	translatef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(III)I	c	getTexLevelParameter
		p	0	target	target
		p	1	level	level
		p	2	pname	pname
	m	(IIII)V	c	viewport
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
	m	(II)I	c	getProgram
		p	0	program	program
		p	1	pname	pname
	m	(Ldgl$t;)Ldgl$u;	c	getGenCoordState
		p	0	coord	coord
	m	(IZLjava/nio/FloatBuffer;)V	c	uniformMatrix4
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(F)V	c	fogEnd
		p	0	end	end
	m	(ILjava/nio/FloatBuffer;)V	c	uniform2
		p	0	location	location
		p	1	value	value
	m	(I)V	c	blendEquation
		p	0	mode	mode
	m	(IIIJ)V	c	colorPointer
		p	0	size	size
		p	1	type	type
		p	2	stride	stride
		p	3	pointer	pointer
	m	()V	c	popAttributes
	m	(ILjava/nio/IntBuffer;)V	c	uniform3
		p	0	location	location
		p	1	value	value
	m	(ILjava/lang/CharSequence;)I	c	getAttribLocation
		p	0	program	program
		p	1	name	name
	m	()V	d	disableAlphaTest
	m	(ILjava/nio/FloatBuffer;)V	d	uniform3
		p	0	location	location
		p	1	value	value
	m	(II)V	d	attachShader
		p	0	program	program
		p	1	shader	shader
	m	(IIII)V	d	combineColor
		p	0	combineColor	combineColor
		p	1	source0Color	source0Color
		p	2	source1Color	source1Color
		p	3	source2Color	source2Color
	m	(FFFF)V	d	color4f
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(III)V	d	stencilFunc
		p	0	func	func
		p	1	ref	ref
		p	2	mask	mask
	m	(I)V	d	deleteShader
		p	0	shader	shader
	m	(F)V	d	lineWidth
		p	0	width	width
	m	(ILjava/nio/IntBuffer;)V	d	uniform4
		p	0	location	location
		p	1	value	value
	m	(I)I	e	createShader
		p	0	type	type
	m	(III)V	e	stencilOp
		p	0	sfail	sfail
		p	1	dpfail	dpfail
		p	2	dppass	dppass
	m	(FFFF)Ljava/nio/FloatBuffer;	e	getBuffer
		p	0	a	a
		p	1	b	b
		p	2	c	c
		p	3	d	d
	m	(ILjava/nio/FloatBuffer;)V	e	uniform4
		p	0	location	location
		p	1	value	value
	m	(II)I	e	getShader
		p	0	shader	shader
		p	1	pname	pname
	m	()V	e	enableAlphaTest
	m	(III)V	f	drawArrays
		p	0	mode	mode
		p	1	first	first
		p	2	count	count
	m	(II)V	f	uniform1
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	f	getFloat
		p	0	pname	pname
		p	1	params	params
	m	()V	f	enableLighting
	m	(I)V	f	compileShader
		p	0	shader	shader
	m	(II)V	g	bindBuffers
		p	0	target	target
		p	1	buffer	buffer
	m	(I)V	g	useProgram
		p	0	program	program
	m	()V	g	disableLighting
	m	(II)V	h	bindFramebuffer
		p	0	target	target
		p	1	framebuffer	framebuffer
	m	()V	h	enableColorMaterial
	m	(I)V	h	deleteProgram
		p	0	program	program
	m	()V	i	disableColorMaterial
	m	(II)Ljava/lang/String;	i	getShaderInfoLog
		p	0	shader	shader
		p	1	maxLength	maxLength
	m	(I)V	i	linkProgram
		p	0	program	program
	m	(II)Ljava/lang/String;	j	getProgramInfoLog
		p	0	program	program
		p	1	maxLength	maxLength
	m	(I)V	j	deleteBuffers
		p	0	buffer	buffer
	m	()V	j	disableDepthTest
	m	()V	k	enableDepthTest
	m	(II)V	k	setupOverlayColor
		p	0	texture	texture
		p	1	size	size
	m	(I)V	k	deleteFramebuffers
		p	0	framebuffers	framebuffers
	m	(II)V	l	fogi
		p	0	pname	pname
		p	1	param	param
	m	()V	l	disableBlend
	m	(I)I	l	checkFramebufferStatus
		p	0	target	target
	m	(I)V	m	activeTextureUntracked
		p	0	texture	texture
	m	()V	m	enableBlend
	m	(II)V	m	polygonMode
		p	0	face	face
		p	1	mode	mode
	m	(I)V	n	clientActiveTexture
		p	0	texture	texture
	m	()I	n	createProgram
	m	(II)V	n	pixelStore
		p	0	pname	pname
		p	1	param	param
	m	()I	o	genBuffers
	m	(I)V	o	fogMode
		p	0	mode	mode
	m	(II)V	o	combineColor
		p	0	combineColor	combineColor
		p	1	source0Color	source0Color
	m	(II)V	p	combineAlpha
		p	0	combineAlpha	combineAlpha
		p	1	source0Alpha	source0Alpha
	m	()I	p	getFramebufferDepthAttachment
	m	(I)V	p	logicOp
		p	0	op	op
	m	()I	q	genFramebuffers
	m	(I)V	q	activeTexture
		p	0	texture	texture
	m	()I	r	getActiveBoundTexture
	m	(I)V	r	deleteTexture
		p	0	texture	texture
	m	(I)V	s	bindTexture
		p	0	texture	texture
	m	()V	s	setupOutline
	m	(I)V	t	shadeModel
		p	0	mode	mode
	m	()V	t	teardownOutline
	m	(I)V	u	stencilMask
		p	0	mask	mask
	m	()V	u	teardownOverlayColor
	m	()V	v	setupEndPortalTexGen
	m	(I)V	v	clearStencil
		p	0	stencil	stencil
	m	(I)V	w	matrixMode
		p	0	mode	mode
	m	()V	w	clearTexGen
	m	(I)V	x	enableClientState
		p	0	cap	cap
	m	()V	x	mulTextureByProjModelView
	m	(I)V	y	disableClientState
		p	0	cap	cap
	m	()V	y	enableFog
	m	()V	z	disableFog
	m	(I)V	z	enableVertexAttribArray
		p	0	index	index
c	dgl$a	com/mojang/blaze3d/platform/GlStateManager$AlphaTestState
	f	Ldgl$c;	a	capState
	f	I	b	func
	f	F	c	ref
c	dgl$b	com/mojang/blaze3d/platform/GlStateManager$BlendFuncState
	f	Ldgl$c;	a	capState
	f	I	b	srcFactorRGB
	f	I	c	dstFactorRGB
	f	I	d	srcFactorAlpha
	f	I	e	dstFactorAlpha
c	dgl$c	com/mojang/blaze3d/platform/GlStateManager$CapabilityTracker
	f	I	a	cap
	f	Z	b	state
	m	(I)V	<init>	<init>
		p	1	cap	cap
	m	(Z)V	a	setState
		p	1	state	state
	m	()V	a	disable
	m	()V	b	enable
c	dgl$d	com/mojang/blaze3d/platform/GlStateManager$Color4
	f	F	a	red
	f	F	b	green
	f	F	c	blue
	f	F	d	alpha
	m	(FFFF)V	<init>	<init>
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
c	dgl$e	com/mojang/blaze3d/platform/GlStateManager$LogicOpState
	f	Ldgl$c;	a	capState
	f	I	b	op
c	dgl$f	com/mojang/blaze3d/platform/GlStateManager$ColorMask
	f	Z	a	red
	f	Z	b	green
	f	Z	c	blue
	f	Z	d	alpha
c	dgl$g	com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState
	f	Ldgl$c;	a	capState
	f	I	b	face
	f	I	c	mode
c	dgl$h	com/mojang/blaze3d/platform/GlStateManager$CullFaceState
	f	Ldgl$c;	a	capState
	f	I	b	mode
c	dgl$i	com/mojang/blaze3d/platform/GlStateManager$DepthTestState
	f	Ldgl$c;	a	capState
	f	Z	b	mask
	f	I	c	func
c	dgl$j	com/mojang/blaze3d/platform/GlStateManager$DstFactor
c	dgl$l	com/mojang/blaze3d/platform/GlStateManager$FBOMode
c	dgl$m	com/mojang/blaze3d/platform/GlStateManager$FogMode
	f	I	d	value
c	dgl$n	com/mojang/blaze3d/platform/GlStateManager$FogState
	f	Ldgl$c;	a	capState
	f	I	b	mode
	f	F	c	density
	f	F	d	start
	f	F	e	end
c	dgl$o	com/mojang/blaze3d/platform/GlStateManager$LogicOp
	f	I	q	value
c	dgl$p	com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	f	Ldgl$c;	a	capFill
	f	Ldgl$c;	b	capLine
	f	F	c	factor
	f	F	d	units
c	dgl$q	com/mojang/blaze3d/platform/GlStateManager$SrcFactor
c	dgl$r	com/mojang/blaze3d/platform/GlStateManager$StencilSubState
	f	I	a	func
	f	I	b	ref
	f	I	c	mask
c	dgl$s	com/mojang/blaze3d/platform/GlStateManager$StencilState
	f	Ldgl$r;	a	subState
	f	I	b	mask
	f	I	c	sfail
	f	I	d	dpfail
	f	I	e	dppass
c	dgl$t	com/mojang/blaze3d/platform/GlStateManager$TexCoord
c	dgl$u	com/mojang/blaze3d/platform/GlStateManager$TexGenCoordState
	f	Ldgl$c;	a	capState
	f	I	b	coord
	f	I	c	mode
	m	(II)V	<init>	<init>
		p	1	coord	coord
		p	2	cap	cap
c	dgl$v	com/mojang/blaze3d/platform/GlStateManager$TexGenState
	f	Ldgl$u;	a	s
	f	Ldgl$u;	b	t
	f	Ldgl$u;	c	r
	f	Ldgl$u;	d	q
c	dgl$w	com/mojang/blaze3d/platform/GlStateManager$Texture2DState
	f	Ldgl$c;	a	capState
	f	I	b	boundTexture
c	dgl$x	com/mojang/blaze3d/platform/GlStateManager$Viewport
	f	I	b	x
	f	I	c	y
	f	I	d	width
	f	I	e	height
c	dgm	com/mojang/blaze3d/platform/GlDebugInfo
	m	()Ljava/lang/String;	a	getVendor
	m	()Ljava/lang/String;	b	getCpuInfo
	m	()Ljava/lang/String;	c	getRenderer
	m	()Ljava/lang/String;	d	getVersion
c	dgn	net/minecraft/client/util/InputUtil
	f	Ldgn$a;	a	UNKNOWN_KEY
	f	Ljava/lang/invoke/MethodHandle;	b	GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE
	f	I	c	GLFW_RAW_MOUSE_MOTION
	m	(JI)Z	a	isKeyPressed
		p	0	handle	handle
		p	2	code	code
	m	(JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V	a	setKeyboardCallbacks
		p	0	handle	handle
		p	2	keyCallback	keyCallback
		p	3	charModsCallback	charModsCallback
	m	(JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V	a	setMouseCallbacks
		p	0	handle	handle
		p	2	cursorPosCallback	cursorPosCallback
		p	3	mouseButtonCallback	mouseButtonCallback
		p	4	scrollCallback	scrollCallback
	m	(JZ)V	a	setRawMouseMotionMode
		p	0	window	window
		p	2	value	value
	m	(Ljava/lang/String;)Ldgn$a;	a	fromTranslationKey
		p	0	translationKey	translationKey
	m	()Z	a	isRawMouseMotionSupported
	m	(II)Ldgn$a;	a	fromKeyCode
		p	0	keyCode	keyCode
		p	1	scanCode	scanCode
	m	(JIDD)V	a	setCursorParameters
		p	0	handler	handler
c	dgn$a	net/minecraft/client/util/InputUtil$Key
	f	Ljava/lang/String;	a	translationKey
	f	Ldgn$b;	b	type
	f	I	c	code
	f	Lady;	d	localizedText
	f	Ljava/util/Map;	e	KEYS
	m	(Ljava/lang/String;Ldgn$b;I)V	<init>	<init>
		p	1	translationKey	translationKey
		p	2	type	type
		p	3	code	code
	m	()Ldgn$b;	a	getCategory
	m	()I	b	getCode
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()Lmr;	d	getLocalizedText
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	other	other
c	dgn$b	net/minecraft/client/util/InputUtil$Type
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	map
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/BiFunction;	f	textTranslator
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	3	name	name
		p	4	textTranslator	textTranslator
	m	(I)Ldgn$a;	a	createFromCode
		p	1	code	code
	m	(Ldgn$b;Ljava/lang/String;I)V	a	mapKey
		p	0	type	type
		p	1	translationKey	translationKey
		p	2	keyCode	keyCode
	m	(I)Ldgn$a;	b	method_27448
		p	1	code	code
c	dgo	net/minecraft/client/render/DiffuseLighting
	m	()V	a	enable
	m	(Lb;)V	a	enableForLevel
		p	0	modelMatrix	modelMatrix
	m	(Lb;)V	b	method_27869
		p	0	modelMatrix	modelMatrix
	m	()V	b	disable
	m	()V	c	disableGuiDepthLighting
	m	()V	d	enableGuiDepthLighting
c	dgp	net/minecraft/client/util/GlAllocationUtils
	m	(I)Ljava/nio/ByteBuffer;	a	allocateByteBuffer
		p	0	size	size
	m	(I)Ljava/nio/FloatBuffer;	b	allocateFloatBuffer
		p	0	size	size
c	dgq	net/minecraft/client/util/Monitor
	f	J	a	handle
	f	Ljava/util/List;	b	videoModes
	f	Ldgx;	c	currentVideoMode
	f	I	d	x
	f	I	e	y
	m	(Ldgx;)I	a	findClosestVideoModeIndex
	m	()V	a	populateVideoModes
	m	(I)Ldgx;	a	getVideoMode
	m	(Ljava/util/Optional;)Ldgx;	a	findClosestVideoMode
	m	()Ldgx;	b	getCurrentVideoMode
	m	()I	c	getViewportX
	m	()I	d	getViewportY
	m	()I	e	getVideoModeCount
	m	()J	f	getHandle
c	dgr	net/minecraft/client/util/MonitorFactory
c	dgs	net/minecraft/client/texture/NativeImage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	WRITE_TO_FILE_OPEN_OPTIONS
	f	Ldgs$a;	c	format
	f	I	d	width
	f	I	e	height
	f	Z	f	isStbImage
	f	J	g	pointer
	f	J	h	sizeBytes
	m	(Ldgs$a;IIZJ)V	<init>	<init>
		p	1	format	format
		p	2	width	width
		p	3	height	height
		p	4	useStb	useStb
		p	5	pointer	pointer
	m	(IIZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	useStb	useStb
	m	(Ldgs$a;IIZ)V	<init>	<init>
		p	1	format	format
		p	2	width	width
		p	3	height	height
		p	4	useStb	useStb
	m	(IIIILdgs;)V	a	resizeSubRectTo
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	targetImage	targetImage
	m	(Ljava/lang/String;)Ldgs;	a	read
		p	0	dataUri	dataUri
	m	(Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V	a	makeGlyphBitmapSubpixel
		p	1	fontInfo	fontInfo
		p	2	glyphIndex	glyphIndex
		p	3	width	width
		p	4	height	height
		p	5	scaleX	scaleX
		p	6	scaleY	scaleY
		p	7	shiftX	shiftX
		p	8	shiftY	shiftY
		p	9	startX	startX
		p	10	startY	startY
	m	(Ldgs;)V	a	copyFrom
		p	1	image	image
	m	(Ljava/io/File;)V	a	writeFile
	m	(IIIIIIZZ)V	a	copyRect
		p	1	x	x
		p	2	y	y
		p	3	translateX	translateX
		p	4	translateY	translateY
		p	5	width	width
		p	6	height	height
		p	7	flipX	flipX
		p	8	flipY	flipY
	m	(Ljava/nio/channels/WritableByteChannel;)Z	a	write
	m	(IIIIIIIZZZZ)V	a	upload
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	unpackSkipPixels	unpackSkipPixels
		p	5	unpackSkipRows	unpackSkipRows
		p	6	width	width
		p	7	height	height
		p	8	blur	blur
		p	9	clamp	clamp
		p	10	mipmap	mipmap
		p	11	close	close
	m	(Z)V	a	setTextureClamp
		p	0	clamp	clamp
	m	(IZ)V	a	loadFromTextureImage
		p	1	level	level
		p	2	removeAlpha	removeAlpha
	m	(II)I	a	getPixelColor
		c	Gets the color of a pixel on this native image.\nThe color returned by this method will be in a ABGR format.\n\n<p>This is only supported when this native image's format is {@link NativeImage#Format#ABGR ABGR}.
		p	1	x	x
		p	2	y	y
	m	(IIIIIIIZZ)V	a	upload
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	unpackSkipPixels	unpackSkipPixels
		p	5	unpackSkipRows	unpackSkipRows
		p	6	width	width
		p	7	height	height
		p	8	mipmap	mipmap
		p	9	close	close
	m	(IIIZ)V	a	upload
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	close	close
	m	(Ljava/nio/file/Path;)V	a	writeFile
		p	1	path	path
	m	(III)V	a	setPixelColor
		c	Sets the color of a pixel on this native image.\nThe color to be set using this method should be in a ABGR format.\n\n<p>This is only supported when this native image's format is {@link NativeImage#Format#ABGR ABGR}
		p	1	x	x
		p	2	y	y
		p	3	color	color
	m	(ZZ)V	a	setTextureFilter
		p	0	blur	blur
		p	1	mipmap	mipmap
	m	(Ldgs$a;Ljava/nio/ByteBuffer;)Ldgs;	a	read
	m	()I	a	getWidth
	m	(Ljava/io/InputStream;)Ldgs;	a	read
	m	(Ldgs$a;Ljava/io/InputStream;)Ldgs;	a	read
	m	(Ljava/nio/ByteBuffer;)Ldgs;	a	read
	m	(IIIII)V	a	fillRect
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	color	color
	m	(I)I	a	getAlpha
		p	0	color	color
	m	(IIII)I	a	getAbgrColor
		c	The resulting color of this operation is stored as least to most significant bits.
		p	0	alpha	alpha
		p	1	blue	blue
		p	2	green	green
		p	3	red	red
	m	()I	b	getHeight
	m	(IIIIIIIZZZZ)V	b	uploadInternal
		p	1	level	level
		p	2	xOffset	xOffset
		p	3	yOffset	yOffset
		p	4	unpackSkipPixels	unpackSkipPixels
		p	5	unpackSkipRows	unpackSkipRows
		p	6	width	width
		p	7	height	height
		p	8	blur	blur
		p	9	clamp	clamp
		p	10	mipmap	mipmap
		p	11	close	close
	m	(II)B	b	getPixelOpacity
		p	1	x	x
		p	2	y	y
	m	(I)I	b	getRed
		p	0	color	color
	m	(I)I	c	getGreen
		p	0	color	color
	m	()Ldgs$a;	c	getFormat
	m	(I)I	d	getBlue
		p	0	color	color
	m	()[I	d	makePixelArray
	m	()[B	e	getBytes
	m	()V	f	mirrorVertically
	m	()V	g	untrack
	m	()V	h	checkAllocated
c	dgs$a	net/minecraft/client/texture/NativeImage$Format
	f	Ldgs$a;	a	ABGR
	f	Ldgs$a;	b	BGR
	f	I	e	channelCount
	f	I	f	pixelDataFormat
	f	Z	g	hasRed
	f	Z	h	hasGreen
	f	Z	i	hasBlue
	f	Z	j	hasLuminance
	f	Z	k	hasAlpha
	f	I	l	redOffset
	f	I	m	greenOffset
	f	I	n	blueOffset
	f	I	o	luminanceChannelOffset
	f	I	p	alphaChannelOffset
	f	Z	q	writeable
	m	(Ljava/lang/String;IIIZZZZZIIIIIZ)V	<init>	<init>
		p	3	channels	channels
		p	4	glFormat	glFormat
		p	5	hasRed	hasRed
		p	6	hasGreen	hasGreen
		p	7	hasBlue	hasBlue
		p	8	hasLuminance	hasLuminance
		p	9	hasAlpha	hasAlpha
		p	10	redOffset	redOffset
		p	11	greenOffset	greenOffset
		p	12	blueOffset	blueOffset
		p	13	luminanceOffset	luminanceOffset
		p	14	alphaOffset	alphaOffset
		p	15	writeable	writeable
	m	()I	a	getChannelCount
	m	()V	b	setPackAlignment
	m	(I)Ldgs$a;	b	getFormat
		p	0	glFormat	glFormat
	m	()V	c	setUnpackAlignment
	m	()I	d	getPixelDataFormat
	m	()Z	e	hasAlphaChannel
	m	()I	f	getAlphaChannelOffset
	m	()Z	g	hasOpacityChannel
	m	()I	h	getOpacityOffset
	m	()Z	i	isWriteable
c	dgs$b	net/minecraft/client/texture/NativeImage$GLFormat
	f	Ldgs$b;	a	ABGR
	f	Ldgs$b;	b	BGR
	f	I	f	glConstant
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	glConstant	glConstant
	m	()I	a	getGlConstant
c	dgs$c	net/minecraft/client/texture/NativeImage$WriteCallback
	f	Ljava/nio/channels/WritableByteChannel;	a	channel
	f	Ljava/io/IOException;	b	exception
	m	(Ljava/nio/channels/WritableByteChannel;)V	<init>	<init>
		p	1	channel	channel
	m	()V	a	throwStoredException
	m	(JJI)V	invoke	invoke
		p	1	context	context
		p	3	data	data
		p	5	size	size
c	dgt	net/minecraft/client/util/PngFile
	f	I	a	width
	f	I	b	height
	m	(Ljava/lang/String;Ljava/io/InputStream;)V	<init>	<init>
		p	1	name	name
		p	2	in	in
	m	(Ljava/io/InputStream;)Ldgt$a;	a	createReader
		p	0	is	is
c	dgt$a	net/minecraft/client/util/PngFile$Reader
	f	Z	a	errored
	m	(J)I	a	eof
		p	1	user	user
	m	(I)V	a	skip
		p	1	n	n
	m	(JI)V	a	skip
		p	1	user	user
		p	3	n	n
	m	(JJI)I	a	read
		p	1	user	user
		p	3	data	data
		p	5	size	size
	m	(JI)I	b	read
		p	1	data	data
		p	3	size	size
c	dgt$b	net/minecraft/client/util/PngFile$ChannelReader
	f	Ljava/nio/channels/ReadableByteChannel;	b	channel
	f	J	c	buffer
	f	I	d	bufferSize
	f	I	e	bufferPosition
	f	I	f	readPosition
	m	(I)V	b	readToBuffer
		p	1	size	size
c	dgt$c	net/minecraft/client/util/PngFile$SeekableChannelReader
	f	Ljava/nio/channels/SeekableByteChannel;	b	channel
	m	(Ljava/nio/channels/SeekableByteChannel;)V	<init>	<init>
		p	1	channel	channel
c	dgu	net/minecraft/client/util/MonitorTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	pointerToMonitorMap
	f	Ldgr;	b	monitorFactory
	m	(Ldgr;)V	<init>	<init>
		p	1	monitorFactory	monitorFactory
	m	(III)I	a	clamp
		p	0	value	value
		p	1	min	min
		p	2	max	max
	m	(JI)V	a	handleMonitorEvent
		p	1	monitor	monitor
		p	3	event	event
	m	(Ldgy;)Ldgq;	a	getMonitor
	m	(J)Ldgq;	a	getMonitor
	m	()V	a	stop
c	dgw	net/minecraft/client/texture/TextureUtil
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljava/nio/IntBuffer;II)V	a	uploadImage
		c	Uploads {@code imageData} to the bound texture.\nEach integer is interpreted as 0xAARRGGBB.
		p	0	imageData	imageData
		p	1	width	width
		p	2	height	height
	m	(Ljava/io/InputStream;)Ljava/nio/ByteBuffer;	a	readAllToByteBuffer
		p	0	inputStream	inputStream
	m	(IIII)V	a	allocate
		p	0	id	id
		p	1	maxLevel	maxLevel
		p	2	width	width
		p	3	height	height
	m	(Ldgs$b;IIII)V	a	allocate
		c	Allocate uninitialized backing memory for {@code maxLevel+1}\nmip levels to texture {@code id}.
		p	0	internalFormat	internalFormat
		p	1	id	id
		p	2	maxLevel	maxLevel
		p	3	width	width
		p	4	height	height
	m	(I)V	a	deleteId
		p	0	id	id
	m	(III)V	a	allocate
		p	0	id	id
		p	1	width	width
		p	2	height	height
	m	()I	a	generateId
	m	(Ldgs$b;III)V	a	allocate
		p	0	internalFormat	internalFormat
		p	1	id	id
		p	2	width	width
		p	3	height	height
	m	(I)V	b	bind
		p	0	id	id
	m	(Ljava/io/InputStream;)Ljava/lang/String;	b	readAllToString
		p	0	inputStream	inputStream
c	dgx	net/minecraft/client/util/VideoMode
	f	I	a	width
	f	I	b	height
	f	I	c	redBits
	f	I	d	greenBits
	f	I	e	blueBits
	f	I	f	refreshRate
	f	Ljava/util/regex/Pattern;	g	PATTERN
	m	()I	a	getWidth
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	fromString
	m	()I	b	getHeight
	m	()I	c	getRedBits
	m	()I	d	getGreenBits
	m	()I	e	getBlueBits
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()I	f	getRefreshRate
	m	()Ljava/lang/String;	g	asString
c	dgy	net/minecraft/client/util/Window
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lorg/lwjgl/glfw/GLFWErrorCallback;	b	errorCallback
	f	Ldgz;	c	eventHandler
	f	Ldgu;	d	monitorTracker
	f	J	e	handle
	f	I	f	windowedX
	f	I	g	windowedY
	f	I	h	windowedWidth
	f	I	i	windowedHeight
	f	Ljava/util/Optional;	j	videoMode
	f	Z	k	fullscreen
	f	Z	l	currentFullscreen
	f	I	m	x
	f	I	n	y
	f	I	o	width
	f	I	p	height
	f	I	q	framebufferWidth
	f	I	r	framebufferHeight
	f	I	s	scaledWidth
	f	I	t	scaledHeight
	f	D	u	scaleFactor
	f	Ljava/lang/String;	v	phase
	f	Z	w	videoModeDirty
	f	I	x	framerateLimit
	f	Z	y	vsync
	m	(Ldgz;Ldgu;Ldgi;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	eventHandler	eventHandler
		p	2	monitorTracker	monitorTracker
		p	3	settings	settings
		p	4	videoMode	videoMode
		p	5	title	title
	m	(Ljava/util/function/BiConsumer;)V	a	acceptError
		p	0	consumer	consumer
	m	(I)V	a	setFramerateLimit
		p	1	framerateLimit	framerateLimit
	m	(IJ)V	a	logGlError
		p	1	error	error
		p	2	description	description
	m	(Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer;	a	readImage
		p	1	in	in
		p	2	x	x
		p	3	y	y
		p	4	channels	channels
	m	(Z)V	a	setVsync
		p	1	vsync	vsync
	m	(Ljava/util/Optional;)V	a	setVideoMode
		p	1	videoMode	videoMode
	m	()I	a	getRefreshRate
	m	(IZ)I	a	calculateScaleFactor
		p	1	guiScale	guiScale
		p	2	forceUnicodeFont	forceUnicodeFont
	m	(JII)V	a	onWindowPosChanged
		p	1	window	window
		p	3	x	x
		p	4	y	y
	m	(Ljava/io/InputStream;Ljava/io/InputStream;)V	a	setIcon
		p	1	icon16	icon16
		p	2	icon32	icon32
	m	(JZ)V	a	onWindowFocusChanged
		p	1	window	window
		p	3	focused	focused
	m	(D)V	a	setScaleFactor
		p	1	scaleFactor	scaleFactor
	m	(Ljava/lang/String;)V	a	setPhase
		p	1	phase	phase
	m	(Ljava/lang/String;)V	b	setTitle
	m	()Z	b	shouldClose
	m	(JII)V	b	onFramebufferSizeChanged
		p	1	window	window
		p	3	width	width
		p	4	height	height
	m	(IJ)V	b	throwGlError
		p	0	error	error
		p	1	description	description
	m	(Z)V	b	setRawMouseMotion
		p	1	rawMouseMotion	rawMouseMotion
	m	()V	c	logOnGlError
	m	(JII)V	c	onWindowSizeChanged
		p	1	window	window
		p	3	width	width
		p	4	height	height
	m	(Z)V	c	updateFullscreen
		p	1	vsync	vsync
	m	()I	d	getFramerateLimit
	m	()V	e	swapBuffers
	m	()Ljava/util/Optional;	f	getVideoMode
	m	()V	g	applyVideoMode
	m	()V	h	toggleFullscreen
	m	()J	i	getHandle
	m	()Z	j	isFullscreen
	m	()I	k	getFramebufferWidth
	m	()I	l	getFramebufferHeight
	m	()I	m	getWidth
	m	()I	n	getHeight
	m	()I	o	getScaledWidth
	m	()I	p	getScaledHeight
	m	()I	q	getX
	m	()I	r	getY
	m	()D	s	getScaleFactor
	m	()Ldgq;	t	getMonitor
	m	()V	u	throwOnGlError
	m	()V	v	updateFramebufferSize
	m	()V	w	updateWindowRegion
c	dgy$a	net/minecraft/client/util/Window$GlErroredException
c	dgz	net/minecraft/client/WindowEventHandler
	m	(Z)V	a	onWindowFocusChanged
		p	1	focused	focused
	m	()V	a	onResolutionChanged
c	dh	net/minecraft/command/arguments/EntityArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	TOO_MANY_ENTITIES_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	TOO_MANY_PLAYERS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ENTITY_NOT_FOUND_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	PLAYER_NOT_FOUND_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	NOT_ALLOWED_EXCEPTION
	f	Ljava/util/Collection;	g	EXAMPLES
	f	Z	h	singleTarget
	f	Z	i	playersOnly
	m	(ZZ)V	<init>	<init>
		p	1	singleTarget	singleTarget
		p	2	playersOnly	playersOnly
	m	(Lcom/mojang/brigadier/StringReader;)Lez;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laom;	a	getEntity
		p	0	context	context
		p	1	name	name
	m	()Ldh;	a	entity
	m	()Ldh;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
		p	0	context	context
		p	1	name	name
	m	()Ldh;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
	m	()Ldh;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lze;	e	getPlayer
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dh$a	net/minecraft/command/arguments/EntityArgumentType$Serializer
	m	(Ldh;Lmg;)V	a	toPacket
	m	(Lmg;)Ldh;	a	fromPacket
	m	(Ldh;Lcom/google/gson/JsonObject;)V	a	toJson
c	dha	net/minecraft/client/gl/Uniform
	m	(FF)V	a	set
		p	1	value1	value1
		p	2	value2	value2
	m	([F)V	a	set
		p	1	values	values
	m	(IIII)V	a	set
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
		p	4	value4	value4
	m	(F)V	a	set
		p	1	value1	value1
	m	(FFF)V	a	set
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
	m	(FFFF)V	a	set
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
		p	4	value4	value4
	m	(Lb;)V	a	set
		p	1	values	values
	m	(FFFF)V	b	setForDataType
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
		p	4	value4	value4
c	dhb	net/minecraft/client/gl/GlBlendState
	f	Ldhb;	a	activeBlendState
	f	I	b	srcRgb
	f	I	c	srcAlpha
	f	I	d	dstRgb
	f	I	e	dstAlpha
	f	I	f	func
	f	Z	g	separateBlend
	f	Z	h	blendDisabled
	m	(III)V	<init>	<init>
		p	1	srcRgb	srcRgb
		p	2	dstRgb	dstRgb
		p	3	func	func
	m	(IIIII)V	<init>	<init>
		p	1	srcRgb	srcRgb
		p	2	dstRgb	dstRgb
		p	3	srcAlpha	srcAlpha
		p	4	dstAlpha	dstAlpha
		p	5	func	func
	m	(ZZIIIII)V	<init>	<init>
		p	1	separateBlend	separateBlend
		p	2	blendDisabled	blendDisabled
		p	3	srcRgb	srcRgb
		p	4	dstRgb	dstRgb
		p	5	srcAlpha	srcAlpha
		p	6	dstAlpha	dstAlpha
		p	7	func	func
	m	()V	a	enable
	m	(Ljava/lang/String;)I	a	getFuncFromString
	m	()Z	b	isBlendDisabled
	m	(Ljava/lang/String;)I	b	getComponentFromString
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dhc	net/minecraft/client/gl/GlProgram
	m	()I	a	getProgramRef
	m	()V	b	markUniformsDirty
	m	()Ldhd;	c	getVertexShader
	m	()Ldhd;	d	getFragmentShader
c	dhd	net/minecraft/client/gl/GlShader
	f	Ldhd$a;	a	shaderType
	f	Ljava/lang/String;	b	name
	f	I	c	shaderRef
	f	I	d	refCount
	m	(Ldhd$a;ILjava/lang/String;)V	<init>	<init>
		p	1	shaderType	shaderType
		p	2	shaderRef	shaderRef
		p	3	name	name
	m	(Ldhc;)V	a	attachTo
	m	()V	a	release
	m	(Ldhd$a;Ljava/lang/String;Ljava/io/InputStream;)Ldhd;	a	createFromResource
		p	0	type	type
		p	1	name	name
		p	2	sourceCode	sourceCode
	m	()Ljava/lang/String;	b	getName
c	dhd$a	net/minecraft/client/gl/GlShader$Type
	f	Ldhd$a;	a	VERTEX
	f	Ldhd$a;	b	FRAGMENT
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	d	fileExtension
	f	I	e	glType
	f	Ljava/util/Map;	f	loadedShaders
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getFileExtension
	m	()Ljava/util/Map;	c	getLoadedShaders
	m	()I	d	getGlType
c	dhe	net/minecraft/client/gl/GlProgramManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	()I	a	createProgram
	m	(Ldhc;)V	a	deleteProgram
	m	(I)V	a	useProgram
	m	(Ldhc;)V	b	linkProgram
c	dhf	net/minecraft/client/gl/GlUniform
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	loc
	f	I	c	count
	f	I	d	dataType
	f	Ljava/nio/IntBuffer;	e	intData
	f	Ljava/nio/FloatBuffer;	f	floatData
	f	Ljava/lang/String;	g	name
	f	Z	h	stateDirty
	f	Ldhc;	i	program
	m	(Ljava/lang/String;IILdhc;)V	<init>	<init>
		p	1	name	name
		p	2	dataType	dataType
		p	3	count	count
		p	4	program	program
	m	(I)V	a	setLoc
	m	(Ljava/lang/String;)I	a	getTypeIndex
		p	0	typeName	typeName
	m	(ILjava/lang/CharSequence;)I	a	getUniformLocation
	m	()Ljava/lang/String;	a	getName
	m	(II)V	a	uniform1
	m	(ILjava/lang/CharSequence;)I	b	getAttribLocation
	m	()V	b	upload
	m	()V	c	markStateDirty
	m	()V	d	uploadInts
	m	()V	e	uploadFloats
	m	()V	f	uploadMatrix
c	dhg	net/minecraft/client/render/BufferBuilder
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	f	Ljava/nio/ByteBuffer;	h	buffer
	f	Ljava/util/List;	i	parameters
	f	I	j	lastParameterIndex
	f	I	k	buildStart
	f	I	l	elementOffset
	f	I	m	nextDrawStart
	f	I	n	vertexCount
	f	Ldhr;	o	currentElement
	f	I	p	currentElementId
	f	I	q	drawMode
	f	Ldhq;	r	format
	f	Z	u	building
	m	(I)V	<init>	<init>
		p	1	initialCapacity	initialCapacity
	m	(ILdhq;)V	a	begin
		p	1	drawMode	drawMode
		p	2	format	format
	m	(Ldhg$b;)V	a	restoreState
	m	(FFF)V	a	sortQuads
		p	1	cameraX	cameraX
		p	2	cameraY	cameraY
		p	3	cameraZ	cameraZ
	m	(Ljava/nio/FloatBuffer;FFFII)F	a	getDistanceSq
		p	0	buffer	buffer
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()V	a	grow
	m	()Ldhg$b;	b	popState
	m	(I)V	c	grow
		p	1	size	size
	m	()V	c	end
	m	(I)I	d	roundBufferSize
		p	0	amount	amount
	m	()Lcom/mojang/datafixers/util/Pair;	f	popData
	m	()V	g	clear
	m	()V	h	reset
	m	()Z	j	isBuilding
c	dhg$a	net/minecraft/client/render/BufferBuilder$DrawArrayParameters
	f	Ldhq;	a	vertexFormat
	f	I	b	count
	f	I	c	mode
	m	(Ldhq;II)V	<init>	<init>
		p	1	vertexFormat	vertexFormat
		p	2	count	count
		p	3	mode	mode
	m	()Ldhq;	a	getVertexFormat
	m	()I	b	getCount
	m	()I	c	getMode
c	dhg$b	net/minecraft/client/render/BufferBuilder$State
	f	Ljava/nio/ByteBuffer;	a	buffer
	f	Ldhq;	b	format
	m	(Ljava/nio/ByteBuffer;Ldhq;)V	<init>	<init>
		p	1	buffer	buffer
		p	2	format	format
c	dhh	net/minecraft/client/render/BufferRenderer
	m	(Ldhg;)V	a	draw
		p	0	bufferBuilder	bufferBuilder
	m	(Ljava/nio/ByteBuffer;ILdhq;I)V	a	draw
		p	0	buffer	buffer
		p	1	mode	mode
		p	2	vertexFormat	vertexFormat
		p	3	count	count
c	dhi	net/minecraft/client/render/BufferVertexConsumer
	m	(IS)V	a	putShort
		p	1	index	index
		p	2	value	value
	m	(SSI)Ldhp;	a	texture
		p	1	u	u
		p	2	v	v
		p	3	index	index
	m	(IF)V	a	putFloat
		p	1	index	index
		p	2	value	value
	m	(IB)V	a	putByte
		p	1	index	index
		p	2	value	value
	m	()V	e	nextElement
	m	()Ldhr;	i	getCurrentElement
c	dhj	net/minecraft/client/render/VertexFormats
	f	Ldhr;	a	POSITION_ELEMENT
	f	Ldhr;	b	COLOR_ELEMENT
	f	Ldhr;	c	TEXTURE_ELEMENT
	f	Ldhr;	d	OVERLAY_ELEMENT
	f	Ldhr;	e	LIGHT_ELEMENT
	f	Ldhr;	f	NORMAL_ELEMENT
	f	Ldhr;	g	PADDING_ELEMENT
	f	Ldhq;	h	POSITION_COLOR_TEXTURE_LIGHT_NORMAL
	f	Ldhq;	i	POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL
	f	Ldhq;	j	POSITION_TEXTURE_COLOR_LIGHT
	f	Ldhq;	k	POSITION
	f	Ldhq;	l	POSITION_COLOR
	f	Ldhq;	m	POSITION_COLOR_LIGHT
	f	Ldhq;	n	POSITION_TEXTURE
	f	Ldhq;	o	POSITION_COLOR_TEXTURE
	f	Ldhq;	p	POSITION_TEXTURE_COLOR
	f	Ldhq;	q	POSITION_COLOR_TEXTURE_LIGHT
	f	Ldhq;	r	POSITION_TEXTURE_LIGHT_COLOR
	f	Ldhq;	s	POSITION_TEXTURE_COLOR_NORMAL
c	dhk	net/minecraft/client/render/FixedColorVertexConsumer
	f	Z	a	colorFixed
	f	I	b	fixedRed
	f	I	c	fixedGreen
	f	I	d	fixedBlue
	f	I	e	fixedAlpha
	m	(IIII)V	b	fixedColor
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
c	dhl	net/minecraft/client/util/math/MatrixStack
	f	Ljava/util/Deque;	a	stack
	m	(Ld;)V	a	multiply
		p	1	quaternion	quaternion
	m	(FFF)V	a	scale
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(DDD)V	a	translate
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()V	a	push
	m	()V	b	pop
	m	()Ldhl$a;	c	peek
	m	()Z	d	isEmpty
c	dhl$a	net/minecraft/client/util/math/MatrixStack$Entry
	f	Lb;	a	modelMatrix
	f	La;	b	normalMatrix
	m	()Lb;	a	getModel
	m	()La;	b	getNormal
c	dhm	net/minecraft/client/render/TransformingVertexConsumer
	f	Ldhp;	g	vertexConsumer
	f	Lb;	h	textureMatrix
	f	La;	i	normalMatrix
	f	F	j	x
	f	F	k	y
	f	F	l	z
	f	I	m	u1
	f	I	n	v1
	f	I	o	light
	f	F	p	normalX
	f	F	q	normalY
	f	F	r	normalZ
	m	(Ldhp;Lb;La;)V	<init>	<init>
		p	1	vertexConsumer	vertexConsumer
	m	()V	a	init
c	dhn	net/minecraft/client/render/Tessellator
	f	Ldhg;	a	buffer
	f	Ldhn;	b	INSTANCE
	m	(I)V	<init>	<init>
		p	1	bufferCapacity	bufferCapacity
	m	()Ldhn;	a	getInstance
	m	()V	b	draw
	m	()Ldhg;	c	getBuffer
c	dho	net/minecraft/client/gl/VertexBuffer
	f	I	a	id
	f	Ldhq;	b	format
	f	I	c	vertexCount
	m	(Ldhq;)V	<init>	<init>
		p	1	format	format
	m	(Ldhg;)V	a	upload
		p	1	buffer	buffer
	m	()V	a	bind
	m	(Lb;I)V	a	draw
		p	1	matrix	matrix
		p	2	mode	mode
	m	()V	b	unbind
	m	(Ldhg;)Ljava/util/concurrent/CompletableFuture;	b	submitUpload
		p	1	buffer	buffer
	m	(Ldhg;)V	c	uploadInternal
		p	1	buffer	buffer
c	dhp	net/minecraft/client/render/VertexConsumer
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	m	(Ldhl$a;Lect;FFFII)V	a	quad
		p	1	matrixEntry	matrixEntry
		p	2	quad	quad
		p	3	red	red
		p	4	green	green
		p	5	blue	blue
		p	6	light	light
		p	7	overlay	overlay
	m	(FFFF)Ldhp;	a	color
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(Ldhl$a;Lect;[FFFF[IIZ)V	a	quad
		p	1	matrixEntry	matrixEntry
		p	2	quad	quad
		p	3	brightnesses	brightnesses
		p	4	red	red
		p	5	green	green
		p	6	blue	blue
		p	7	lights	lights
		p	8	overlay	overlay
		p	9	useQuadColorData	useQuadColorData
	m	(FFFFFFFFFIIFFF)V	a	vertex
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	red	red
		p	5	green	green
		p	6	blue	blue
		p	7	alpha	alpha
		p	8	u	u
		p	9	v	v
		p	10	overlay	overlay
		p	11	light	light
		p	12	normalX	normalX
		p	13	normalY	normalY
		p	14	normalZ	normalZ
	m	(Lb;FFF)Ldhp;	a	vertex
		p	1	matrix	matrix
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(DDD)Ldhp;	a	vertex
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(I)Ldhp;	a	light
		p	1	uv	uv
	m	(La;FFF)Ldhp;	a	normal
		p	1	matrix	matrix
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(FF)Ldhp;	a	texture
		p	1	u	u
		p	2	v	v
	m	(IIII)Ldhp;	a	color
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(II)Ldhp;	a	overlay
		p	1	u	u
		p	2	v	v
	m	(FFF)Ldhp;	b	normal
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(II)Ldhp;	b	light
		p	1	u	u
		p	2	v	v
	m	(I)Ldhp;	b	overlay
		p	1	uv	uv
	m	()V	d	next
c	dhq	net/minecraft/client/render/VertexFormat
	f	Lcom/google/common/collect/ImmutableList;	a	elements
	f	Lit/unimi/dsi/fastutil/ints/IntList;	b	offsets
	f	I	c	size
	m	(J)V	a	startDrawing
		p	1	pointer	pointer
	m	()I	a	getVertexSizeInteger
	m	()I	b	getVertexSize
	m	()Lcom/google/common/collect/ImmutableList;	c	getElements
	m	()V	d	endDrawing
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dhr	net/minecraft/client/render/VertexFormatElement
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldhr$a;	b	format
	f	Ldhr$b;	c	type
	f	I	d	index
	f	I	e	count
	f	I	f	size
	m	(ILdhr$a;Ldhr$b;I)V	<init>	<init>
		p	1	index	index
		p	2	format	format
		p	3	type	type
		p	4	count	count
	m	(JI)V	a	startDrawing
		p	1	pointer	pointer
		p	3	stride	stride
	m	()Ldhr$a;	a	getFormat
	m	(ILdhr$b;)Z	a	isValidType
		p	1	index	index
	m	()Ldhr$b;	b	getType
	m	()I	c	getIndex
	m	()I	d	getSize
	m	()V	e	endDrawing
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dhr$a	net/minecraft/client/render/VertexFormatElement$Format
	f	I	h	size
	f	Ljava/lang/String;	i	name
	f	I	j	glId
	m	(Ljava/lang/String;IILjava/lang/String;I)V	<init>	<init>
		p	3	size	size
		p	4	name	name
		p	5	glId	glId
	m	()I	a	getSize
	m	()Ljava/lang/String;	b	getName
	m	()I	c	getGlId
c	dhr$b	net/minecraft/client/render/VertexFormatElement$Type
	f	Ljava/lang/String;	g	name
	f	Ldhr$b$a;	h	starter
	f	Ljava/util/function/IntConsumer;	i	finisher
	m	(Ljava/lang/String;ILjava/lang/String;Ldhr$b$a;Ljava/util/function/IntConsumer;)V	<init>	<init>
		p	3	name	name
	m	(I)V	a	endDrawing
		p	1	elementIndex	elementIndex
	m	()Ljava/lang/String;	a	getName
	m	(IIIJI)V	a	startDrawing
		p	1	count	count
		p	2	glId	glId
		p	3	stride	stride
		p	4	pointer	pointer
		p	6	elementIndex	elementIndex
c	dhr$b$a	net/minecraft/client/render/VertexFormatElement$Type$Starter
	m	(IIIJI)V	setupBufferState	setupBufferState
		p	1	count	count
		p	2	glId	glId
		p	3	stride	stride
		p	4	pointer	pointer
		p	6	elementIndex	elementIndex
c	dhs	net/minecraft/client/render/VertexConsumers
	m	(Ldhp;Ldhp;)Ldhp;	a	dual
		p	0	first	first
		p	1	second	second
c	dhs$a	net/minecraft/client/render/VertexConsumers$Dual
	f	Ldhp;	a	first
	f	Ldhp;	b	second
	m	(Ldhp;Ldhp;)V	<init>	<init>
		p	1	first	first
		p	2	second	second
c	dht	net/minecraft/client/util/math/Vector3d
	f	D	a	x
	f	D	b	y
	f	D	c	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	dhu	com/mojang/realmsclient/KeyCombo
	f	[C	a	chars
	f	I	b	matchIndex
	f	Ljava/lang/Runnable;	c	onCompletion
	m	([CLjava/lang/Runnable;)V	<init>	<init>
		p	1	keys	keys
		p	2	task	task
	m	(C)Z	a	keyPressed
		p	1	key	key
	m	()V	a	reset
c	dhv	com/mojang/realmsclient/RealmsMainScreen
	f	Luh;	A	DARKEN
	f	Luh;	B	CROSS_ICON
	f	Luh;	C	TRIAL_ICON
	f	Luh;	D	WIDGETS
	f	Ljava/util/List;	E	IMAGES
	f	Ldjk;	F	realmsDataFetcher
	f	Z	G	overrideConfigure
	f	I	H	lastScrollYPosition
	f	Z	I	hasParentalConsent
	f	Z	J	checkedParentalConsent
	f	Z	K	checkedClientCompatability
	f	Ldqs;	L	realmsGenericErrorScreen
	f	Z	M	regionsPinged
	f	Lcom/google/common/util/concurrent/RateLimiter;	N	rateLimiter
	f	Z	O	dontSetConnectedToRealms
	f	Ldqs;	P	lastScreen
	f	Ldhv$f;	Q	realmSelectionList
	f	J	R	selectedServerId
	f	Ldni;	S	playButton
	f	Ldni;	T	backButton
	f	Ldni;	U	renewButton
	f	Ldni;	V	configureButton
	f	Ldni;	W	leaveButton
	f	Ljava/util/List;	X	toolTip
	f	Ljava/util/List;	Y	realmsServers
	f	I	Z	numberOfPendingInvites
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	aa	animTick
	f	Z	ab	hasFetchedServers
	f	Z	ac	popupOpenedByUser
	f	Z	ad	justClosedPopup
	f	Z	ae	trialsAvailable
	f	Z	af	createdTrial
	f	Z	ag	showingPopup
	f	Z	ah	hasUnreadNews
	f	Ljava/lang/String;	ai	newsLink
	f	I	aj	carouselIndex
	f	I	ak	carouselTick
	f	Z	al	hasSwitchedCarouselImage
	f	Ljava/util/List;	am	keyCombos
	f	I	an	clicks
	f	Ljava/util/concurrent/locks/ReentrantLock;	ao	connectLock
	f	Ldni;	aq	showPopupButton
	f	Ldni;	ar	pendingInvitesButton
	f	Ldni;	as	newsButton
	f	Ldni;	at	createTrialButton
	f	Ldni;	au	buyARealmButton
	f	Ldni;	av	closeButton
	f	Luh;	b	ON_ICON
	f	Luh;	c	OFF_ICON
	f	Luh;	p	EXPIRED_ICON
	f	Luh;	q	EXPIRES_SOON_ICON
	f	Luh;	r	LEAVE_ICON
	f	Luh;	s	INVITATION_ICON
	f	Luh;	t	INVITE_ICON
	f	Luh;	u	WORLD_ICON
	f	Luh;	v	REALMS
	f	Luh;	w	CONFIGURE_ICON
	f	Luh;	x	QUESTIONMARK
	f	Luh;	y	NEWS_ICON
	f	Luh;	z	POPUP
	m	()V	A	onRenew
	m	()V	B	checkClientCompatability
	m	()V	C	checkUnreadNews
	m	()V	D	checkParentalConsent
	m	()V	E	switchToStage
	m	()V	F	switchToLocal
	m	()V	G	switchToProd
	m	()V	H	stopRealmsFetcher
	m	()V	I	saveListScrollPosition
	m	()V	J	onClosePopup
	m	()I	K	popupX0
	m	()I	L	popupY0
	m	(Ldhl;II)V	a	drawRealmsLogo
		p	1	matrices	matrices
		p	2	x	x
		p	3	y	y
	m	(Labc;)V	a	method_23765
		p	0	manager	manager
	m	(Ldhl;IIIIZ)V	a	renderMoreInfo
	m	(Ldip;Ldqs;)V	a	play
	m	(Ldhl;Ljava/util/List;II)V	a	renderMousehoverTooltip
	m	(Ldip;)V	a	updateButtonStates
		p	1	server	server
	m	(Ldhl;IIIIZZ)V	a	drawInvitationPendingIcon
	m	(DD)Z	a	isOutsidePopup
		p	1	xm	xm
		p	3	ym	ym
	m	(J)Ldip;	a	findServer
		p	1	id	id
	m	(Ldhl;IIZIIZZ)V	a	renderNews
	m	()Z	aq_	shouldShowPopup
	m	()V	ar_	removeSelection
	m	(Ldhl;)V	b	renderLocal
	m	(Ldip;)Z	b	shouldPlayButtonBeActive
		p	1	server	server
	m	(Ldhl;II)V	b	drawPopup
		p	1	matrices	matrices
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	()V	c	addButtons
	m	(DD)Z	c	inPendingInvitationArea
		p	1	xm	xm
		p	3	ym	ym
	m	(Ldhl;)V	c	renderStage
	m	(Ldip;)Z	c	shouldRenewButtonBeActive
		p	1	server	server
	m	(Ldhl;IIII)V	c	drawExpired
	m	(Ldip;)Z	d	shouldConfigureButtonBeVisible
		p	1	server	server
	m	(Ldhl;IIII)V	d	drawOpen
	m	(Ldip;)Z	e	shouldLeaveButtonBeVisible
		p	1	server	server
	m	(Ldhl;IIII)V	e	drawClose
	m	(Ldip;)V	f	configureClicked
	m	(Ldhl;IIII)V	f	drawLeave
	m	(Ldip;)V	g	leaveClicked
		p	1	selectedServer	selectedServer
	m	(Ldhl;IIII)V	g	drawConfigure
	m	()Ldhv;	g	newScreen
	m	(Ldip;)Z	h	isSelfOwnedServer
		p	1	serverData	serverData
	m	()Z	v	shouldShowMessageInList
	m	()Z	w	hasParentalConsent
	m	()Z	x	shouldShowPopupButton
	m	()V	y	pingRegions
	m	()Ljava/util/List;	z	getOwnedNonExpiredWorldIds
c	dhv$a	com/mojang/realmsclient/RealmsMainScreen$CloseButton
c	dhv$b	com/mojang/realmsclient/RealmsMainScreen$Entry
c	dhv$d	com/mojang/realmsclient/RealmsMainScreen$NewsButton
c	dhv$e	com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
c	dhv$f	com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	m	(Ldhv$b;)V	b	setSelected
c	dhv$g	com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListEntry
	f	Ldip;	c	mServerData
	m	(Ldhv;Ldip;)V	<init>	<init>
		p	2	serverData	serverData
	m	(Ldip;Ldhl;IIII)V	b	renderMcoServerItem
		p	1	serverData	serverData
c	dhv$h	com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton
c	dhv$i	com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListTrialEntry
	m	(Ldhl;IIIII)V	a	renderTrialItem
		p	1	matrices	matrices
		p	2	index	index
		p	3	x	x
		p	4	y	y
		p	5	mouseX	mouseX
		p	6	mouseY	mouseY
c	dhw	net/minecraft/realms/SizeUnit
	c	Moved from RealmsUploadScreen.Unit in 20w10a.
	m	(J)Ldhw;	a	getLargestUnit
		p	0	bytes	bytes
	m	(JLdhw;)D	a	convertToUnit
		p	0	bytes	bytes
		p	2	unit	unit
	m	(JLdhw;)Ljava/lang/String;	b	humanReadableSize
		p	0	bytes	bytes
		p	2	unit	unit
	m	(J)Ljava/lang/String;	b	getUserFriendlyString
		p	0	bytes	bytes
	m	(Ljava/lang/String;)Ldhw;	valueOf	valueOf
		p	0	name	name
c	dhx	com/mojang/realmsclient/client/FileDownload
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Z	b	cancelled
	f	Z	c	finished
	f	Z	d	error
	f	Z	e	extracting
	f	Ljava/io/File;	f	backupFile
	f	Ljava/io/File;	g	resourcePackPath
	f	Lorg/apache/http/client/methods/HttpGet;	h	httpRequest
	f	Ljava/lang/Thread;	i	currentThread
	f	Lorg/apache/http/client/config/RequestConfig;	j	requestConfig
	f	[Ljava/lang/String;	k	INVALID_FILE_NAMES
	m	(Ljava/lang/String;)J	a	contentLength
		p	1	downloadLink	downloadLink
	m	(Ldjc;Ljava/lang/String;Ldju$a;Ldae;)V	a	downloadWorld
		p	1	download	download
		p	2	message	message
		p	3	status	status
		p	4	storage	storage
	m	()V	a	cancel
	m	(Ljava/lang/String;Ljava/io/File;Ldae;)V	a	untarGzipArchive
		p	1	name	name
		p	2	archive	archive
		p	3	storage	storage
	m	(Ljava/io/File;)V	a	readNbtFile
		p	0	file	file
	m	(Ljava/lang/String;)Ljava/lang/String;	b	findAvailableFolderName
		p	0	folder	folder
	m	()Z	b	isFinished
	m	()Z	c	isError
	m	()Z	d	isExtracting
c	dhx$a	com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	f	Ljava/awt/event/ActionListener;	b	listener
	m	(Ldhx;Ljava/io/OutputStream;)V	<init>	<init>
		p	2	out	out
	m	(Ljava/awt/event/ActionListener;)V	a	setListener
		p	1	listener	listener
	m	(I)V	afterWrite	afterWrite
		p	1	n	n
c	dhx$b	com/mojang/realmsclient/client/FileDownload$ProgressListener
	f	Ljava/lang/String;	b	worldName
	f	Ljava/io/File;	c	tempFile
	f	Ldae;	d	levelStorageSource
	f	Ldju$a;	e	downloadStatus
	m	(Ldhx;Ljava/lang/String;Ljava/io/File;Ldae;Ldju$a;)V	<init>	<init>
		p	2	worldName	worldName
		p	3	tempFile	tempFile
		p	4	storage	storage
		p	5	downloadStatus	downloadStatus
	m	(Ljava/awt/event/ActionEvent;)V	actionPerformed	actionPerformed
		p	1	e	e
c	dhx$c	com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	f	Ljava/io/File;	b	tempFile
	f	Ldju$a;	c	downloadStatus
	f	Ldjc;	d	worldDownload
	m	(Ldhx;Ljava/io/File;Ldju$a;Ldjc;)V	<init>	<init>
		p	2	tempFile	tempFile
		p	3	downloadStatus	downloadStatus
		p	4	worldDownload	worldDownload
	m	(Ljava/awt/event/ActionEvent;)V	actionPerformed	actionPerformed
		p	1	e	e
c	dhy	com/mojang/realmsclient/client/FileUpload
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	file
	f	J	c	worldId
	f	I	d	slotId
	f	Ldja;	e	uploadInfo
	f	Ljava/lang/String;	f	sessionId
	f	Ljava/lang/String;	g	username
	f	Ljava/lang/String;	h	clientVersion
	f	Ldie;	i	uploadStatus
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	j	cancelled
	f	Ljava/util/concurrent/CompletableFuture;	k	uploadTask
	f	Lorg/apache/http/client/config/RequestConfig;	l	requestConfig
	m	(Ljava/io/File;JILdja;Ldml;Ljava/lang/String;Ldie;)V	<init>	<init>
		p	1	file	file
		p	2	worldId	worldId
		p	4	slotId	slotId
		p	5	uploadInfo	uploadInfo
		p	7	clientVersion	clientVersion
	m	(JI)Z	a	shouldRetry
		p	1	retryDelaySeconds	retryDelaySeconds
		p	3	currentAttempt	currentAttempt
	m	(I)Ldkn;	a	requestUpload
		p	1	currentAttempt	currentAttempt
	m	(Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V	a	cleanup
		p	1	request	request
		p	2	client	client
	m	(Ljava/util/function/Consumer;)V	a	upload
		p	1	callback	callback
	m	(Lorg/apache/http/HttpResponse;Ldkn$a;)V	a	handleResponse
		p	1	response	response
		p	2	uploadResultBuilder	uploadResultBuilder
	m	()V	a	cancel
	m	(Lorg/apache/http/HttpResponse;)J	a	getRetryDelaySeconds
		p	1	response	response
	m	(Lorg/apache/http/client/methods/HttpPost;)V	a	setupRequest
		p	1	request	request
	m	()Z	b	isFinished
	m	(JI)Ldkn;	b	retryUploadAfter
		p	1	retryDelaySeconds	retryDelaySeconds
		p	3	currentAttempt	currentAttempt
c	dhy$a	com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	f	J	a	length
	f	Ljava/io/InputStream;	b	content
	f	Ldie;	c	uploadStatus
	m	(Ljava/io/InputStream;JLdie;)V	<init>	<init>
		p	1	content	content
		p	2	length	length
		p	4	uploadStatus	uploadStatus
	m	(Ljava/io/OutputStream;)V	writeTo	writeTo
		p	1	outstream	outstream
c	dhz	com/mojang/realmsclient/client/Ping
	m	()Ljava/util/List;	a	pingAllRegions
	m	([Ldhz$a;)Ljava/util/List;	a	ping
		p	0	regions	regions
	m	(Ljava/lang/String;)I	a	ping
		p	0	host	host
	m	(Ljava/net/Socket;)V	a	close
		p	0	socket	socket
	m	()J	b	now
c	dhz$a	com/mojang/realmsclient/client/Ping$Region
	f	Ldhz$a;	a	US_EAST_1
	f	Ldhz$a;	b	US_WEST_2
	f	Ldhz$a;	c	US_WEST_1
	f	Ldhz$a;	d	EU_WEST_1
	f	Ldhz$a;	e	AP_SOUTHEAST_1
	f	Ldhz$a;	f	AP_SOUTHEAST_2
	f	Ldhz$a;	g	AP_NORTHEAST_1
	f	Ldhz$a;	h	SA_EAST_1
	f	Ljava/lang/String;	i	name
	f	Ljava/lang/String;	j	endpoint
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3	name	name
		p	4	endpoint	endpoint
	m	(Ljava/lang/String;)Ldhz$a;	valueOf	valueOf
		p	0	name	name
c	di	net/minecraft/command/arguments/EntitySummonArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	NOT_FOUND_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Luh;)Luh;	a	validate
	m	()Ldi;	a	entitySummon
	m	(Lcom/mojang/brigadier/StringReader;)Luh;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Luh;	a	getEntitySummon
		p	0	context	context
		p	1	name	name
c	dia	com/mojang/realmsclient/client/RealmsClient
	f	Ldia$b;	a	currentEnvironment
	f	Z	b	initialized
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	sessionId
	f	Ljava/lang/String;	e	username
	f	Ldih;	f	JSON
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/net/Proxy;)V	<init>	<init>
		p	1	sessionId	sessionId
		p	2	username	username
		p	3	proxy	proxy
	m	(JLjava/lang/String;)V	a	uninvite
		p	1	worldId	worldId
		p	3	profileUuid	profileUuid
	m	(Ldil;)V	a	sendPingResults
		p	1	pingResult	pingResult
	m	()Ldia;	a	createRealmsClient
	m	(Ldid;)Ljava/lang/String;	a	execute
		p	1	r	r
	m	(J)Ldip;	a	getOwnWorld
		p	1	worldId	worldId
	m	(JI)Z	a	switchSlot
		p	1	worldId	worldId
		p	3	slot	slot
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	url
		p	1	path	path
		p	2	queryString	queryString
	m	(IILdip$c;)Ldje;	a	fetchWorldTemplates
		p	1	page	page
		p	2	pageSize	pageSize
		p	3	type	type
	m	(JLjava/lang/String;Ljava/lang/String;)V	a	initializeWorld
		p	1	worldId	worldId
		p	3	name	name
		p	4	motd	motd
	m	(Ljava/lang/String;)V	a	acceptInvitation
		p	1	invitationId	invitationId
	m	(JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean;	a	resetWorldWithSeed
		p	1	worldId	worldId
		p	3	seed	seed
		p	4	levelType	levelType
		p	5	generateStructures	generateStructures
	m	(JILdiv;)V	a	updateSlot
		p	1	worldId	worldId
		p	3	slot	slot
		p	4	options	options
	m	(JLjava/lang/String;Ljava/lang/String;)V	b	update
		p	1	worldId	worldId
		p	3	name	name
		p	4	motd	motd
	m	()V	b	switchToStage
	m	(Ljava/lang/String;)V	b	rejectInvitation
		p	1	invitationId	invitationId
	m	(JLjava/lang/String;)Ldip;	b	invite
		p	1	worldId	worldId
		p	3	profileName	profileName
	m	(JI)Ldjc;	b	download
		p	1	worldId	worldId
		p	3	slotId	slotId
	m	(J)Ldiq;	b	join
		p	1	worldId	worldId
	m	()V	c	switchToProd
	m	(Ljava/lang/String;)Ljava/lang/String;	c	url
		p	1	path	path
	m	(J)V	c	uninviteMyselfFrom
		p	1	worldId	worldId
	m	(JLjava/lang/String;)V	c	restoreWorld
		p	1	worldId	worldId
		p	3	backupId	backupId
	m	(J)Ldig;	d	backupsFor
		p	1	worldId	worldId
	m	(JLjava/lang/String;)Ljava/lang/Boolean;	d	putIntoMinigameMode
		p	1	worldId	worldId
		p	3	minigameId	minigameId
	m	()V	d	switchToLocal
	m	(JLjava/lang/String;)Ldii;	e	op
		p	1	worldId	worldId
		p	3	profileUuid	profileUuid
	m	(J)Ljava/lang/Boolean;	e	open
		p	1	worldId	worldId
	m	()Ldir;	e	listWorlds
	m	(JLjava/lang/String;)Ldii;	f	deop
		p	1	worldId	worldId
		p	3	profileUuid	profileUuid
	m	()Ldiu;	f	getLiveStats
	m	(J)Ljava/lang/Boolean;	f	close
		p	1	worldId	worldId
	m	(JLjava/lang/String;)Ljava/lang/Boolean;	g	resetWorldWithTemplate
		p	1	worldId	worldId
		p	3	worldTemplateId	worldTemplateId
	m	()Ljava/lang/Boolean;	g	mcoEnabled
	m	(J)Ldiz;	g	subscriptionFor
		p	1	worldId	worldId
	m	(JLjava/lang/String;)Ldja;	h	upload
		p	1	worldId	worldId
		p	3	uploadToken	uploadToken
	m	()Ljava/lang/Boolean;	h	stageAvailable
	m	(J)V	h	deleteWorld
		p	1	worldId	worldId
	m	()Ldia$a;	i	clientCompatible
	m	()I	j	pendingInvitesCount
	m	()Ldik;	k	pendingInvites
	m	()V	l	agreeToTos
	m	()Ldio;	m	getNews
	m	()Ljava/lang/Boolean;	n	trialAvailable
c	dia$a	com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	f	Ldia$a;	a	COMPATIBLE
	f	Ldia$a;	b	OUTDATED
	f	Ldia$a;	c	OTHER
	m	(Ljava/lang/String;)Ldia$a;	valueOf	valueOf
		p	0	name	name
c	dia$b	com/mojang/realmsclient/client/RealmsClient$Environment
	f	Ldia$b;	a	PRODUCTION
	f	Ldia$b;	b	STAGE
	f	Ldia$b;	c	LOCAL
	f	Ljava/lang/String;	d	baseUrl
	f	Ljava/lang/String;	e	protocol
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3	baseUrl	baseUrl
		p	4	protocol	protocol
	m	(Ljava/lang/String;)Ldia$b;	valueOf	valueOf
		p	0	name	name
c	dib	com/mojang/realmsclient/client/RealmsClientConfig
	f	Ljava/net/Proxy;	a	proxy
	m	()Ljava/net/Proxy;	a	getProxy
	m	(Ljava/net/Proxy;)V	a	setProxy
		p	0	proxy	proxy
c	dic	com/mojang/realmsclient/client/RealmsError
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	errorMessage
	f	I	c	errorCode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	error	error
	m	()Ljava/lang/String;	a	getErrorMessage
	m	()I	b	getErrorCode
c	did	com/mojang/realmsclient/client/Request
	f	Ljava/net/HttpURLConnection;	a	connection
	f	Ljava/lang/String;	b	url
	f	Z	c	connected
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1	url	url
		p	2	connectTimeout	connectTimeout
		p	3	readTimeout	readTimeout
	m	(Ljava/lang/String;II)Ldid;	a	get
		p	0	url	url
		p	1	connectTimeoutMillis	connectTimeoutMillis
		p	2	readTimeoutMillis	readTimeoutMillis
	m	(Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String;	a	getHeader
		p	0	connection	connection
		p	1	header	header
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	cookie
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;)Ldid;	a	get
		p	0	url	url
	m	(Ljava/io/InputStream;)Ljava/lang/String;	a	read
		p	1	in	in
	m	(Ljava/lang/String;Ljava/lang/String;II)Ldid;	a	post
		p	0	uri	uri
		p	1	content	content
		p	2	connectTimeoutMillis	connectTimeoutMillis
		p	3	readTimeoutMillis	readTimeoutMillis
	m	(Ljava/net/HttpURLConnection;)I	a	getRetryAfterHeader
		p	0	connection	connection
	m	()I	a	getRetryAfterHeader
	m	(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V	a	cookie
		p	0	connection	connection
		p	1	key	key
		p	2	value	value
	m	()I	b	responseCode
	m	(Ljava/lang/String;Ljava/lang/String;)Ldid;	b	post
		p	0	uri	uri
		p	1	content	content
	m	(Ljava/lang/String;)Ldid;	b	delete
		p	0	url	url
	m	(Ljava/lang/String;Ljava/lang/String;II)Ldid;	b	put
		p	0	url	url
		p	1	content	content
		p	2	connectTimeoutMillis	connectTimeoutMillis
		p	3	readTimeoutMillis	readTimeoutMillis
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getHeader
		p	1	header	header
	m	()Ljava/lang/String;	c	text
	m	(Ljava/lang/String;Ljava/lang/String;)Ldid;	c	put
		p	0	url	url
		p	1	content	content
	m	()Ldid;	d	connect
	m	()Ldid;	e	doConnect
	m	()V	f	dispose
c	did$a	com/mojang/realmsclient/client/Request$Delete
	m	()Ldid$a;	f	doConnect
c	did$b	com/mojang/realmsclient/client/Request$Get
	m	()Ldid$b;	f	doConnect
c	did$c	com/mojang/realmsclient/client/Request$Post
	f	Ljava/lang/String;	c	content
	m	(Ljava/lang/String;Ljava/lang/String;II)V	<init>	<init>
		p	1	uri	uri
		p	2	content	content
		p	3	connectTimeout	connectTimeout
		p	4	readTimeout	readTimeout
	m	()Ldid$c;	f	doConnect
c	did$d	com/mojang/realmsclient/client/Request$Put
	f	Ljava/lang/String;	c	content
	m	(Ljava/lang/String;Ljava/lang/String;II)V	<init>	<init>
		p	1	uri	uri
		p	2	content	content
		p	3	connectTimeout	connectTimeout
		p	4	readTimeout	readTimeout
	m	()Ldid$d;	f	doConnect
c	die	com/mojang/realmsclient/client/UploadStatus
	f	Ljava/lang/Long;	a	bytesWritten
	f	Ljava/lang/Long;	b	totalBytes
c	dif	com/mojang/realmsclient/dto/Backup
	f	Ljava/lang/String;	a	backupId
	f	Ljava/util/Date;	b	lastModifiedDate
	f	J	c	size
	f	Ljava/util/Map;	d	metadata
	f	Ljava/util/Map;	e	changeList
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	f	Z	g	uploadedVersion
	m	(Ljava/lang/String;)Ljava/lang/String;	a	format
		p	0	key	key
	m	(Z)V	a	setUploadedVersion
		p	1	uploadedVersion	uploadedVersion
	m	(Lcom/google/gson/JsonElement;)Ldif;	a	parse
		p	0	node	node
	m	()Z	a	isUploadedVersion
c	dig	com/mojang/realmsclient/dto/BackupList
	f	Ljava/util/List;	a	backups
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/lang/String;)Ldig;	a	parse
		p	0	json	json
c	dih	net/minecraft/realms/CheckedGson
	c	Checks so that only intended pojos are passed to the GSON (handles\nserialization after obfuscation).
	f	Lcom/google/gson/Gson;	a	GSON
	m	(Ljava/lang/String;Ljava/lang/Class;)Ldix;	a	fromJson
		p	1	json	json
		p	2	type	type
	m	(Ldix;)Ljava/lang/String;	a	toJson
		p	1	serializable	serializable
c	dii	com/mojang/realmsclient/dto/Ops
	f	Ljava/util/Set;	a	ops
	m	(Ljava/lang/String;)Ldii;	a	parse
		p	0	json	json
c	dij	com/mojang/realmsclient/dto/PendingInvite
	f	Ljava/lang/String;	a	invitationId
	f	Ljava/lang/String;	b	worldName
	f	Ljava/lang/String;	c	worldOwnerName
	f	Ljava/lang/String;	d	worldOwnerUuid
	f	Ljava/util/Date;	e	date
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	m	(Lcom/google/gson/JsonObject;)Ldij;	a	parse
		p	0	json	json
c	dik	com/mojang/realmsclient/dto/PendingInvitesList
	f	Ljava/util/List;	a	pendingInvites
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/lang/String;)Ldik;	a	parse
		p	0	json	json
c	dil	com/mojang/realmsclient/dto/PingResult
	f	Ljava/util/List;	a	pingResults
	f	Ljava/util/List;	b	worldIds
c	dim	com/mojang/realmsclient/dto/PlayerInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	uuid
	f	Z	c	operator
	f	Z	d	accepted
	f	Z	e	online
	m	()Ljava/lang/String;	a	getName
	m	(Z)V	a	setOperator
		p	1	operator	operator
	m	(Ljava/lang/String;)V	a	setName
		p	1	name	name
	m	(Ljava/lang/String;)V	b	setUuid
		p	1	uuid	uuid
	m	()Ljava/lang/String;	b	getUuid
	m	(Z)V	b	setAccepted
		p	1	accepted	accepted
	m	(Z)V	c	setOnline
		p	1	online	online
	m	()Z	c	isOperator
	m	()Z	d	getAccepted
	m	()Z	e	getOnline
c	din	com/mojang/realmsclient/dto/RealmsDescriptionDto
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	description
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
		p	2	description	description
c	dio	com/mojang/realmsclient/dto/RealmsNews
	f	Ljava/lang/String;	a	newsLink
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/lang/String;)Ldio;	a	parse
		p	0	json	json
c	dip	com/mojang/realmsclient/dto/RealmsServer
	f	J	a	id
	f	Ljava/lang/String;	b	remoteSubscriptionId
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	d	motd
	f	Ldip$b;	e	state
	f	Ljava/lang/String;	f	owner
	f	Ljava/lang/String;	g	ownerUUID
	f	Ljava/util/List;	h	players
	f	Ljava/util/Map;	i	slots
	f	Z	j	expired
	f	Z	k	expiredTrial
	f	I	l	daysLeft
	f	Ldip$c;	m	worldType
	f	I	n	activeSlot
	f	Ljava/lang/String;	o	minigameName
	f	I	p	minigameId
	f	Ljava/lang/String;	q	minigameImage
	f	Ldis;	r	serverPing
	f	Lorg/apache/logging/log4j/Logger;	s	LOGGER
	m	(Lcom/google/gson/JsonArray;)Ljava/util/List;	a	parseInvited
		p	0	jsonArray	jsonArray
	m	(Ldit;)V	a	updateServerPing
		p	1	serverPlayerList	serverPlayerList
	m	(Ljava/lang/String;)V	a	setName
		p	1	name	name
	m	(Ldip;)V	a	sortInvited
		p	0	server	server
	m	()Ljava/lang/String;	a	getDescription
	m	(Ljava/util/Map;)Ljava/util/Map;	a	cloneSlots
		p	1	slots	slots
	m	(Lcom/google/gson/JsonObject;)Ldip;	a	parse
		p	0	node	node
	m	(I)Ljava/lang/String;	a	getWorldName
		p	1	slotId	slotId
	m	(Ljava/lang/String;)V	b	setDescription
		p	1	description	description
	m	(Lcom/google/gson/JsonArray;)Ljava/util/Map;	b	parseSlots
		p	0	json	json
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/lang/String;	c	getMinigameName
	m	(Ljava/lang/String;)Ldip;	c	parse
		p	0	json	json
	m	()Ldip;	d	clone
	m	(Ljava/lang/String;)Ldip$b;	d	getState
		p	0	state	state
	m	(Ljava/lang/String;)Ldip$c;	e	getWorldType
		p	0	state	state
	m	()Ljava/util/Map;	e	getEmptySlots
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	dip$a	com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	f	Ljava/lang/String;	a	refOwner
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	owner	owner
	m	(Ldip;Ldip;)I	a	compare
	m	(Ljava/lang/Object;Ljava/lang/Object;)I	compare	compare
		p	1	one	one
		p	2	two	two
c	dip$b	com/mojang/realmsclient/dto/RealmsServer$State
	f	Ldip$b;	a	CLOSED
	f	Ldip$b;	b	OPEN
	f	Ldip$b;	c	UNINITIALIZED
	m	(Ljava/lang/String;)Ldip$b;	valueOf	valueOf
		p	0	name	name
c	dip$c	com/mojang/realmsclient/dto/RealmsServer$WorldType
	f	Ldip$c;	a	NORMAL
	f	Ldip$c;	b	MINIGAME
	f	Ldip$c;	c	ADVENTUREMAP
	f	Ldip$c;	d	EXPERIENCE
	f	Ldip$c;	e	INSPIRATION
	m	(Ljava/lang/String;)Ldip$c;	valueOf	valueOf
		p	0	name	name
c	diq	com/mojang/realmsclient/dto/RealmsServerAddress
	f	Ljava/lang/String;	a	address
	f	Ljava/lang/String;	b	resourcePackUrl
	f	Ljava/lang/String;	c	resourcePackHash
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Ljava/lang/String;)Ldiq;	a	parse
		p	0	json	json
c	dir	com/mojang/realmsclient/dto/RealmsServerList
	f	Ljava/util/List;	a	servers
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/lang/String;)Ldir;	a	parse
		p	0	json	json
c	dis	com/mojang/realmsclient/dto/RealmsServerPing
	f	Ljava/lang/String;	a	nrOfPlayers
	f	Ljava/lang/String;	b	playerList
c	dit	com/mojang/realmsclient/dto/RealmsServerPlayerList
	f	J	a	serverId
	f	Ljava/util/List;	b	players
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lcom/google/gson/JsonParser;	d	jsonParser
	m	(Lcom/google/gson/JsonArray;)Ljava/util/List;	a	parsePlayers
		p	0	jsonArray	jsonArray
	m	(Lcom/google/gson/JsonObject;)Ldit;	a	parse
		p	0	node	node
c	diu	com/mojang/realmsclient/dto/RealmsServerPlayerLists
	f	Ljava/util/List;	a	servers
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/lang/String;)Ldiu;	a	parse
		p	0	json	json
c	div	com/mojang/realmsclient/dto/RealmsWorldOptions
	f	Ljava/lang/Boolean;	a	pvp
	f	Ljava/lang/Boolean;	b	spawnAnimals
	f	Ljava/lang/Boolean;	c	spawnMonsters
	f	Ljava/lang/Boolean;	d	spawnNPCs
	f	Ljava/lang/Integer;	e	spawnProtection
	f	Ljava/lang/Boolean;	f	commandBlocks
	f	Ljava/lang/Boolean;	g	forceGameMode
	f	Ljava/lang/Integer;	h	difficulty
	f	Ljava/lang/Integer;	i	gameMode
	f	Ljava/lang/String;	j	slotName
	f	J	k	templateId
	f	Ljava/lang/String;	l	templateImage
	f	Z	m	adventureMap
	f	Z	n	empty
	f	Ljava/lang/String;	o	DEFAULT_WORLD_TEMPLATE_IMAGE
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;)V	<init>	<init>
		p	1	pvp	pvp
		p	2	spawnAnimals	spawnAnimals
		p	3	spawnMonsters	spawnMonsters
		p	4	spawnNPCs	spawnNPCs
		p	5	spawnProtection	spawnProtection
		p	6	commandBlocks	commandBlocks
		p	7	difficulty	difficulty
		p	8	gameMode	gameMode
		p	9	forceGameMode	forceGameMode
		p	10	slotName	slotName
	m	()Ldiv;	a	getDefaults
	m	(Z)V	a	setEmpty
		p	1	empty	empty
	m	(I)Ljava/lang/String;	a	getSlotName
		p	1	index	index
	m	(Lcom/google/gson/JsonObject;)Ldiv;	a	parse
		p	0	json	json
	m	()Ldiv;	b	getEmptyDefaults
	m	(I)Ljava/lang/String;	b	getDefaultSlotName
		p	1	index	index
	m	()Ljava/lang/String;	c	toJson
	m	()Ldiv;	d	clone
c	diw	com/mojang/realmsclient/dto/RealmsWorldResetDto
	f	Ljava/lang/String;	a	seed
	f	J	b	worldTemplateId
	f	I	c	levelType
	f	Z	d	generateStructures
	m	(Ljava/lang/String;JIZ)V	<init>	<init>
		p	1	seed	seed
		p	2	worldTemplateId	worldTemplateId
		p	4	levelType	levelType
		p	5	generateStructures	generateStructures
c	dix	net/minecraft/realms/RealmsSerializable
	c	A marker interface for Gson serializable pojos; the implementers make\nsure that they have {@code SerializedName} annotation on all their\ndata fields so serialization works after obfuscation, and save/load of\nsuch objects are controlled through another serializer.
c	diy	com/mojang/realmsclient/dto/RegionPingResult
	f	Ljava/lang/String;	a	regionName
	f	I	b	ping
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	regionName	regionName
		p	2	ping	ping
	m	()I	a	getPing
c	diz	com/mojang/realmsclient/dto/Subscription
	f	J	a	startDate
	f	I	b	daysLeft
	f	Ldiz$a;	c	type
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Ljava/lang/String;)Ldiz;	a	parse
		p	0	json	json
	m	(Ljava/lang/String;)Ldiz$a;	b	typeFrom
		p	0	subscriptionType	subscriptionType
c	diz$a	com/mojang/realmsclient/dto/Subscription$SubscriptionType
	m	(Ljava/lang/String;)Ldiz$a;	valueOf	valueOf
		p	0	name	name
c	dj	net/minecraft/command/arguments/GameProfileArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	UNKNOWN_PLAYER_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Ldj$a;	a	parse
	m	()Ldj;	a	gameProfile
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getProfileArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dj$a	net/minecraft/command/arguments/GameProfileArgumentType$GameProfileArgument
c	dj$b	net/minecraft/command/arguments/GameProfileArgumentType$SelectorBacked
	f	Lez;	a	selector
c	dja	com/mojang/realmsclient/dto/UploadInfo
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Z	b	worldClosed
	f	Ljava/lang/String;	c	token
	f	Ljava/lang/String;	d	uploadEndpoint
	f	I	e	port
	m	(Ljava/lang/String;)Ldja;	a	parse
		p	0	json	json
	m	()Ljava/lang/String;	a	getToken
	m	(Ljava/lang/String;)V	b	setToken
		p	1	token	token
	m	()Ljava/lang/String;	b	getUploadEndpoint
	m	()Z	c	isWorldClosed
	m	()I	d	getPort
c	djb	com/mojang/realmsclient/dto/ValueObject
	m	(Ljava/lang/reflect/Field;)Ljava/lang/String;	a	getName
		p	0	f	f
	m	(Ljava/lang/reflect/Field;)Z	b	isStatic
		p	0	f	f
c	djc	com/mojang/realmsclient/dto/WorldDownload
	f	Ljava/lang/String;	a	downloadLink
	f	Ljava/lang/String;	b	resourcePackUrl
	f	Ljava/lang/String;	c	resourcePackHash
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Ljava/lang/String;)Ldjc;	a	parse
		p	0	json	json
c	djd	com/mojang/realmsclient/dto/WorldTemplate
	f	Ljava/lang/String;	a	id
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/String;	c	version
	f	Ljava/lang/String;	d	author
	f	Ljava/lang/String;	e	link
	f	Ljava/lang/String;	f	image
	f	Ljava/lang/String;	g	trailer
	f	Ljava/lang/String;	h	recommendedPlayers
	f	Ldjd$a;	i	type
	f	Lorg/apache/logging/log4j/Logger;	j	LOGGER
	m	(Lcom/google/gson/JsonObject;)Ldjd;	a	parse
		p	0	node	node
c	djd$a	com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	f	Ldjd$a;	a	WORLD_TEMPLATE
	f	Ldjd$a;	b	MINIGAME
	f	Ldjd$a;	c	ADVENTUREMAP
	f	Ldjd$a;	d	EXPERIENCE
	f	Ldjd$a;	e	INSPIRATION
	m	(Ljava/lang/String;)Ldjd$a;	valueOf	valueOf
		p	0	name	name
c	dje	com/mojang/realmsclient/dto/WorldTemplatePaginatedList
	f	Ljava/util/List;	a	templates
	f	I	b	page
	f	I	c	size
	f	I	d	total
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	m	(I)V	<init>	<init>
		p	1	size	size
	m	(Ljava/lang/String;)Ldje;	a	parse
		p	0	json	json
c	djf	com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	f	Lorg/apache/logging/log4j/Logger;	a	logger
	m	(Lorg/apache/logging/log4j/Logger;)V	<init>	<init>
		p	1	logger	logger
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	uncaughtException	uncaughtException
		p	1	t	t
		p	2	e	e
c	djg	com/mojang/realmsclient/exception/RealmsHttpException
	m	(Ljava/lang/String;Ljava/lang/Exception;)V	<init>	<init>
		p	1	s	s
		p	2	e	e
c	djh	com/mojang/realmsclient/exception/RealmsServiceException
	f	I	a	httpResultCode
	f	Ljava/lang/String;	b	httpResponseContent
	f	I	c	errorCode
	f	Ljava/lang/String;	d	errorMsg
	m	(ILjava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	1	httpResultCode	httpResultCode
		p	2	httpResponseText	httpResponseText
		p	3	errorCode	errorCode
		p	4	errorMsg	errorMsg
	m	(ILjava/lang/String;Ldic;)V	<init>	<init>
		p	1	httpResultCode	httpResultCode
		p	2	httpResponseText	httpResponseText
		p	3	error	error
c	dji	com/mojang/realmsclient/exception/RetryCallException
	f	I	e	delaySeconds
	m	(I)V	<init>	<init>
		p	1	delaySeconds	delaySeconds
c	djj	com/mojang/realmsclient/client/Errable
	m	(Ljava/lang/String;)V	a	error
	m	(Lmr;)V	a	error
c	djk	com/mojang/realmsclient/gui/RealmsDataFetcher
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ScheduledExecutorService;	b	scheduler
	f	Z	c	stopped
	f	Ljava/lang/Runnable;	d	serverListUpdateTask
	f	Ljava/lang/Runnable;	e	pendingInviteUpdateTask
	f	Ljava/lang/Runnable;	f	trialAvailabilityTask
	f	Ljava/lang/Runnable;	g	liveStatsTask
	f	Ljava/lang/Runnable;	h	unreadNewsTask
	f	Ljava/util/Set;	i	removedServers
	f	Ljava/util/List;	j	servers
	f	Ldiu;	k	livestats
	f	I	l	pendingInvitesCount
	f	Z	m	trialAvailable
	f	Z	n	hasUnreadNews
	f	Ljava/lang/String;	o	newsLink
	f	Ljava/util/concurrent/ScheduledFuture;	p	serverListScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	q	pendingInviteScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	r	trialAvailableScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	s	liveStatsScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	t	unreadNewsScheduledFuture
	f	Ljava/util/Map;	u	fetchStatus
	m	(Ljava/util/List;)V	a	setServers
		p	1	newServers	newServers
	m	(Ldip;)V	a	removeItem
		p	1	server	server
	m	()Z	a	isStopped
	m	(Ldjk$d;)Z	a	isFetchedSinceLastTry
		p	1	task	task
	m	()V	b	init
	m	()V	c	initWithSpecificTaskList
	m	()V	d	markClean
	m	()V	e	forceUpdate
	m	()Ljava/util/List;	f	getServers
	m	()I	g	getPendingInvitesCount
	m	()Z	h	isTrialAvailable
	m	()Ldiu;	i	getLivestats
	m	()Z	j	hasUnreadNews
	m	()Ljava/lang/String;	k	newsLink
	m	()V	l	stop
	m	()V	n	scheduleTasks
	m	()V	o	cancelTasks
	m	()Z	p	isActive
c	djk$a	com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask
	m	()V	a	getLiveStats
c	djk$b	com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask
	m	()V	a	updatePendingInvites
c	djk$c	com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask
	m	()V	a	updateServersList
c	djk$d	com/mojang/realmsclient/gui/RealmsDataFetcher$Task
	f	Ldjk$d;	a	SERVER_LIST
	f	Ldjk$d;	b	PENDING_INVITE
	f	Ldjk$d;	c	TRIAL_AVAILABLE
	f	Ldjk$d;	d	LIVE_STATS
	f	Ldjk$d;	e	UNREAD_NEWS
	m	(Ljava/lang/String;)Ldjk$d;	valueOf	valueOf
		p	0	name	name
c	djk$e	com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask
	m	()V	a	getTrialAvailable
c	djk$f	com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask
	m	()V	a	getUnreadNews
c	djl	com/mojang/realmsclient/gui/RealmsWorldSlotButton
	f	Luh;	a	SLOT_FRAME
	f	Luh;	b	EMPTY_FRAME
	f	Luh;	c	PANORAMA_0
	f	Luh;	d	PANORAMA_2
	f	Luh;	e	PANORAMA_3
	f	Ljava/util/function/Supplier;	v	serverDataProvider
	f	Ljava/util/function/Consumer;	w	toolTipSetter
	f	I	x	slotIndex
	f	I	y	animTick
	f	Ldjl$b;	z	state
	m	(IIIILjava/util/function/Supplier;Ljava/util/function/Consumer;ILdni$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	serverDataProvider	serverDataProvider
		p	6	toolTipSetter	toolTipSetter
		p	7	id	id
		p	8	action	action
	m	(Ldhl;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLdjl$a;Lmr;)V	a	drawSlotFrame
		p	1	matrices	matrices
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
		p	7	text	text
	m	()Ldjl$b;	a	getState
c	djl$a	com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	f	Ldjl$a;	a	NOTHING
	f	Ldjl$a;	b	SWITCH_SLOT
	f	Ldjl$a;	c	JOIN
	m	(Ljava/lang/String;)Ldjl$a;	valueOf	valueOf
		p	0	name	name
c	djl$b	com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	f	Z	a	empty
	f	Z	b	minigame
	f	Ldjl$a;	c	action
	f	Z	d	isCurrentlyActiveSlot
	f	Ljava/lang/String;	e	slotName
	f	J	f	imageId
	f	Ljava/lang/String;	g	image
	f	Lmr;	h	actionPrompt
	m	(ZLjava/lang/String;JLjava/lang/String;ZZLdjl$a;Lmr;)V	<init>	<init>
		p	1	isCurrentlyActiveSlot	isCurrentlyActiveSlot
		p	2	slotName	slotName
		p	3	imageId	imageId
		p	5	image	image
		p	6	empty	empty
		p	7	minigame	minigame
		p	8	action	action
		p	9	actionPrompt	actionPrompt
c	djm	com/mojang/realmsclient/gui/screens/RealmsAcceptRejectButton
	f	I	a	width
	f	I	b	height
	f	I	c	x
	f	I	d	y
	m	(IIII)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	x	x
		p	4	y	y
	m	()I	a	getRight
	m	(Ldhl;Ljava/util/List;Leqg;IIII)V	a	render
		p	0	matrices	matrices
	m	(Ldhl;IIII)V	a	render
		p	1	matrices	matrices
	m	(I)V	a	handleClick
		p	1	index	index
	m	(Leqg;Ldnt$a;Ljava/util/List;IDD)V	a	handleClick
		p	0	selectionList	selectionList
		p	2	buttons	buttons
		p	3	button	button
		p	4	mouseX	mouseX
		p	6	mouseY	mouseY
	m	(Ldhl;IIZ)V	a	render
		p	2	y	y
	m	()I	b	getBottom
c	djn	com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	f	Ldqs;	a	parent
	f	Ldif;	b	backup
	f	Ldjn$a;	c	backupInfoList
	m	(Ldqs;Ldif;)V	<init>	<init>
		p	1	parent	parent
		p	2	backup	backup
	m	(Ljava/lang/String;)Lmr;	a	gameDifficultyMetadata
		p	1	value	value
	m	(Ljava/lang/String;Ljava/lang/String;)Lmr;	a	checkForSpecificMetadata
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;)Lmr;	b	gameModeMetadata
		p	1	value	value
c	djn$a	com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
c	djo	com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	f	Ldip;	A	serverData
	f	Leqf;	B	titleLabel
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	p	lastScrollPosition
	f	Ldjr;	q	parent
	f	Ljava/util/List;	r	backups
	f	Ljava/lang/String;	s	toolTip
	f	Ldjo$a;	t	backupObjectSelectionList
	f	I	u	selectedBackup
	f	I	v	slotId
	f	Ldni;	w	downloadButton
	f	Ldni;	x	restoreButton
	f	Ldni;	y	changesButton
	f	Ljava/lang/Boolean;	z	noBackups
	m	(Ldjr;Ldip;I)V	<init>	<init>
		p	1	parent	parent
		p	2	serverData	serverData
		p	3	slotId	slotId
	m	(Ldif;Ljava/lang/String;)V	a	addToChangeList
		p	1	backup	backup
		p	2	key	key
	m	(Ldhl;Ljava/lang/String;II)V	a	renderMousehoverTooltip
	m	(I)V	b	restoreClicked
		p	1	selectedBackup	selectedBackup
	m	()V	i	generateChangeList
	m	()V	k	updateButtonStates
	m	()Z	l	shouldChangesButtonBeVisible
	m	()Z	m	shouldRestoreButtonBeVisible
	m	()V	n	downloadClicked
	m	()V	v	downloadWorldData
	m	()V	w	restore
c	djo$a	com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	m	(Ldif;)V	a	addEntry
		p	1	backup	backup
	m	(Ldjo$b;)V	a	setSelected
	m	(I)V	b	selectInviteListItem
		p	1	item	item
c	djo$b	com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionListEntry
	f	Ldif;	b	mBackup
	m	(Ldjo;Ldif;)V	<init>	<init>
		p	2	backup	backup
	m	(Ldhl;IIII)V	a	drawRestore
	m	(Ldhl;Ldif;IIII)V	a	renderBackupItem
	m	(Ljava/util/Date;)Ljava/lang/String;	a	getMediumDatePresentation
		p	1	lastModifiedDate	lastModifiedDate
	m	(Ldhl;IIII)V	b	drawInfo
c	djp	com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldqs;	b	parent
	f	Ldhv;	c	mainScreen
	f	J	q	serverId
	f	[Lmr;	s	message
	f	I	t	left_x
	f	I	u	right_x
	f	Ljava/util/List;	v	slotsThatHasBeenDownloaded
	f	I	w	animTick
	m	(Ldqs;Ldhv;JZ)V	<init>	<init>
		p	1	parent	parent
		p	2	mainScreen	mainScreen
		p	3	serverId	serverId
	m	(I)I	a	getFramePositionX
		p	1	i	i
	m	(Ldhl;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V	a	drawSlotFrame
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(J)V	a	fetchServerData
		p	1	worldId	worldId
	m	(I)V	b	downloadWorld
		p	1	slotId	slotId
	m	()V	i	addButtons
	m	()V	k	backButtonClicked
	m	()Z	l	isMinigame
c	djq	com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	f	Ldqs;	a	parent
	f	Z	b	outdated
	m	(Ldqs;Z)V	<init>	<init>
		p	1	parent	parent
		p	2	outdated	outdated
c	djr	com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	f	Ldni;	A	optionsButton
	f	Ldni;	B	backupButton
	f	Ldni;	C	resetWorldButton
	f	Ldni;	D	switchMinigameButton
	f	Z	E	stateChanged
	f	I	F	animTick
	f	I	G	clicks
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	ON_ICON
	f	Luh;	c	OFF_ICON
	f	Luh;	p	EXPIRED_ICON
	f	Luh;	q	EXPIRES_SOON_ICON
	f	Lmr;	r	toolTip
	f	Ldhv;	s	parent
	f	Ldip;	t	server
	f	J	u	serverId
	f	I	v	left_x
	f	I	w	right_x
	f	Ldni;	x	playersButton
	f	Ldni;	y	settingsButton
	f	Ldni;	z	subscriptionButton
	m	(Ldhv;J)V	<init>	<init>
		p	1	parent	parent
		p	2	serverId	serverId
	m	()V	a	stateChanged
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	saveSettings
		p	1	name	name
		p	2	desc	desc
	m	(Ldiv;)V	a	saveSlotSettings
		p	1	options	options
	m	(ZLdqs;)V	a	openTheWorld
		p	1	join	join
		p	2	screen	screen
	m	(Ldhl;Lmr;II)V	a	renderMousehoverTooltip
	m	(Ldip;)V	a	joinRealm
		p	1	serverData	serverData
	m	(Ldqs;)V	a	closeTheWorld
		p	1	screen	screen
	m	(ILdip;)V	a	switchToFullSlot
		p	1	selectedSlot	selectedSlot
		p	2	serverData	serverData
	m	(Ldni;)V	a	removeButton
		p	1	button	button
	m	(J)V	a	fetchServerData
		p	1	worldId	worldId
	m	(I)V	a	addSlotButton
		p	1	slotIndex	slotIndex
	m	(Ldhl;IIIII)V	b	drawExpiring
	m	(Ldni;)V	b	addButton
		p	1	button	button
	m	(I)I	b	buttonLeft
		p	1	i	i
	m	(ILdip;)V	b	switchToEmptySlot
		p	1	selectedSlot	selectedSlot
		p	2	serverData	serverData
	m	(II)I	b	buttonCenter
		p	1	i	i
		p	2	total	total
	m	(I)I	c	frame
		p	1	ordinal	ordinal
	m	(Ldhl;IIII)V	c	drawServerStatus
	m	()Ldjr;	c	getNewScreen
	m	(Ldhl;IIII)V	d	drawExpired
	m	(Ldhl;IIII)V	e	drawOpen
	m	(Ldhl;IIII)V	f	drawClosed
	m	()V	i	backButtonClicked
	m	()V	k	disableButtons
	m	()V	l	switchToMinigame
	m	()Z	m	isMinigame
	m	()V	n	hideRegularButtons
	m	()V	v	hideMinigameButtons
c	djs	com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	f	Lmr;	b	title1
	f	Lmr;	c	title2
	f	I	p	delayTicker
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lmr;Lmr;)V	<init>	<init>
		p	2	title1	title1
		p	3	title2	title2
c	djt	com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	f	Ldip;	a	server
	f	Ldhv;	b	parent
	f	Ldnp;	c	nameBox
	f	Ldnp;	p	descriptionBox
	f	Ldni;	q	createButton
	f	Leqf;	r	createRealmLabel
	m	(Ldip;Ldhv;)V	<init>	<init>
		p	1	server	server
		p	2	parent	parent
	m	()V	i	createWorld
	m	()Z	k	valid
c	dju	com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	f	Z	A	finished
	f	Z	B	extracting
	f	Ljava/lang/Long;	C	previousWrittenBytes
	f	Ljava/lang/Long;	D	previousTimeSnapshot
	f	J	E	bytesPersSecond
	f	I	F	animTick
	f	[Ljava/lang/String;	G	DOTS
	f	I	H	dotIndex
	f	Z	I	checked
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/locks/ReentrantLock;	b	downloadLock
	f	Ldqs;	c	parent
	f	Ldjc;	p	worldDownload
	f	Lmr;	q	downloadTitle
	f	Lcom/google/common/util/concurrent/RateLimiter;	r	narrationRateLimiter
	f	Ljava/lang/String;	t	worldName
	f	Ldju$a;	u	downloadStatus
	f	Lmr;	w	status
	f	Ljava/lang/String;	x	progress
	f	Z	y	cancelled
	f	Z	z	showDots
	m	(Ldqs;Ldjc;Ljava/lang/String;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;)V	<init>	<init>
		p	1	parent	parent
		p	2	worldDownload	worldDownload
		p	3	worldName	worldName
	m	(Ljava/lang/String;)J	a	getContentLength
		p	1	downloadLink	downloadLink
	m	(Ldhl;J)V	a	drawDownloadSpeed0
	m	(Ldhl;)V	b	drawDots
	m	(Ldhl;)V	c	drawProgressBar
	m	(Ldhl;)V	d	drawDownloadSpeed
	m	()V	i	checkDownloadSize
	m	()V	k	backButtonClicked
	m	()V	l	downloadSave
	m	()V	m	downloadCancelled
c	dju$a	com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	f	Ljava/lang/Long;	a	bytesWritten
	f	Ljava/lang/Long;	b	totalBytes
c	djv	com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	f	Ldqs;	a	parent
	f	Lmr;	b	line1
	f	Lmr;	c	line2
	m	(Lmr;Ldqs;)V	<init>	<init>
		p	1	line2	line2
		p	2	parent	parent
	m	(Lmr;Lmr;Ldqs;)V	<init>	<init>
		p	1	line1	line1
		p	2	line2	line2
		p	3	parent	parent
	m	(Ldjh;Ldqs;)V	<init>	<init>
		p	1	realmsServiceException	realmsServiceException
		p	2	parent	parent
	m	(Ldjh;)V	a	errorMessage
		p	1	realmsServiceException	realmsServiceException
	m	(Lmr;)V	a	errorMessage
		p	1	line2	line2
	m	(Lmr;Lmr;)V	a	errorMessage
		p	1	line1	line1
		p	2	line2	line2
c	djw	com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldip;	c	serverData
	f	Ldjr;	p	configureScreen
	f	Ldqs;	q	parent
	f	Ljava/lang/String;	r	errorMsg
	f	Z	s	showError
	m	(Ldjr;Ldqs;Ldip;)V	<init>	<init>
		p	1	configureScreen	configureScreen
		p	2	parent	parent
		p	3	serverData	serverData
	m	(Ljava/lang/String;)V	a	showError
		p	1	errorMsg	errorMsg
	m	()V	i	onInvite
c	djx	com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	f	Ldjx$a;	b	type
	f	Lmr;	c	line2
	f	Lmr;	p	line3
	f	Z	q	yesNoQuestion
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldjx$a;Lmr;Lmr;Z)V	<init>	<init>
		p	2	type	type
		p	5	yesNoQuestion	yesNoQuestion
c	djx$a	com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	f	Ldjx$a;	a	Warning
	f	Ldjx$a;	b	Info
	f	I	c	colorCode
	f	Ljava/lang/String;	d	text
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	text	text
		p	4	colorCode	colorCode
	m	(Ljava/lang/String;)Ldjx$a;	valueOf	valueOf
		p	0	name	name
c	djy	com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	f	[Ljava/lang/String;	a	symbols
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ldqs;	c	parent
	f	Ljava/lang/String;	p	title
	f	Z	q	error
	f	Lmr;	r	errorMessage
	f	Z	s	aborted
	f	I	t	animTicks
	f	Ldkz;	u	task
	f	I	v	buttonLength
	m	(Ldqs;Ldkz;)V	<init>	<init>
		p	1	parent	parent
		p	2	task	task
	m	()V	a	onError
	m	(Ljava/lang/String;)V	b	setTitle
		p	1	title	title
	m	()Z	c	aborted
	m	()V	i	cancelOrBackButtonClicked
c	djz	com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	f	Luh;	a	INVITE_ICON
	f	Luh;	b	TRIAL_ICON
	f	Ldjk;	p	REALMS_DATA_FETCHER
	f	I	q	numberOfPendingInvites
	f	Z	r	checkedMcoAvailability
	f	Z	s	trialAvailable
	f	Z	t	validClient
	f	Z	u	hasUnreadNews
	m	(Ldhl;II)V	a	drawIcons
		p	1	matrices	matrices
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	()V	l	checkIfMcoEnabled
c	dk	net/minecraft/command/arguments/ItemEnchantmentArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_ENCHANTMENT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	()Ldk;	a	itemEnchantment
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbnw;	a	getEnchantment
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lbnw;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dka	com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	f	Ldqs;	a	parent
	m	(Ldqs;)V	<init>	<init>
		p	1	parent	parent
c	dkb	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	ACCEPT_ICON
	f	Luh;	c	REJECT_ICON
	f	Ldqs;	p	parent
	f	Ljava/lang/String;	q	toolTip
	f	Z	r	loaded
	f	Ldkb$b;	s	pendingInvitationSelectionList
	f	Leqf;	t	titleLabel
	f	I	u	selectedInvite
	f	Ldni;	v	acceptButton
	f	Ldni;	w	rejectButton
	m	(Ldqs;)V	<init>	<init>
		p	1	parent	parent
	m	(I)V	a	updateList
		p	1	slot	slot
	m	(Ldhl;Ljava/lang/String;II)V	a	renderMousehoverTooltip
	m	(I)V	b	reject
		p	1	slot	slot
	m	(I)V	c	accept
		p	1	slot	slot
	m	(I)Z	d	shouldAcceptAndRejectButtonBeVisible
		p	1	invite	invite
	m	()V	i	updateButtonStates
c	dkb$a	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry
	f	Ldij;	b	mPendingInvite
	f	Ljava/util/List;	c	buttons
	m	(Ldkb;Ldij;)V	<init>	<init>
		p	2	pendingInvite	pendingInvite
	m	(Ldhl;Ldij;IIII)V	a	renderPendingInvitationItem
c	dkb$a$a	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$AcceptButton
c	dkb$a$b	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$RejectButton
c	dkb$b	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	m	(Ldkb$a;)V	a	setSelected
	m	(I)V	b	removeAtIndex
		p	1	index	index
	m	(I)V	c	selectInviteListItem
		p	1	item	item
c	dkc	com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	f	I	A	selectedInvitedIndex
	f	Ljava/lang/String;	B	selectedInvited
	f	I	C	player
	f	Z	D	stateChanged
	f	Leqf;	E	titleLabel
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	OP_ICON
	f	Luh;	c	USER_ICON
	f	Luh;	p	CROSS_PLAYER_ICON
	f	Luh;	q	OPTIONS_BACKGROUND
	f	Ljava/lang/String;	r	tooltipText
	f	Ldjr;	s	parent
	f	Ldip;	t	serverData
	f	Ldkc$b;	u	invitedObjectSelectionList
	f	I	v	column1_x
	f	I	w	column_width
	f	I	x	column2_x
	f	Ldni;	y	removeButton
	f	Ldni;	z	opdeopButton
	m	(Ldjr;Ldip;)V	<init>	<init>
		p	1	parent	parent
		p	2	serverData	serverData
	m	(Ldii;)V	a	updateOps
		p	1	ops	ops
	m	(Ldhl;Ljava/lang/String;II)V	a	renderMousehoverTooltip
		p	1	matrices	matrices
		p	2	text	text
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(Ldhl;IIII)V	c	drawRemoveIcon
	m	(Ldhl;IIII)V	d	drawOpped
	m	(Ldhl;IIII)V	e	drawNormal
	m	()V	i	updateButtonStates
	m	()V	k	backButtonClicked
	m	(I)Z	l	shouldRemoveAndOpdeopButtonBeVisible
		p	1	player	player
	m	(I)V	m	op
		p	1	index	index
	m	(I)V	n	deop
		p	1	index	index
	m	(I)V	o	uninvite
		p	1	index	index
	m	(I)V	p	deleteFromInvitedList
		p	1	selectedInvitedIndex	selectedInvitedIndex
c	dkc$a	com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionListEntry
	f	Ldim;	b	playerInfo
	m	(Ldkc;Ldim;)V	<init>	<init>
		p	2	playerInfo	playerInfo
	m	(Ldhl;Ldim;IIII)V	a	renderInvitedItem
		p	1	matrices	matrices
		p	2	playerInfo	playerInfo
		p	3	x	x
		p	4	y	y
		p	5	mouseX	mouseX
		p	6	mouseY	mouseY
c	dkc$b	com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	m	(Ldim;)V	a	addEntry
		p	1	playerInfo	playerInfo
	m	(Ldkc$a;)V	a	setSelected
	m	(I)V	b	selectInviteListItem
		p	1	item	item
c	dkd	com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	f	Ldke;	a	parent
	f	Leqf;	b	titleLabel
	f	Ldnp;	c	seedEdit
	f	Ljava/lang/Boolean;	p	generateStructures
	f	Ljava/lang/Integer;	q	levelTypeIndex
	m	(Ldke;Lmr;)V	<init>	<init>
		p	1	parent	parent
c	dke	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	f	Luh;	A	NEW_WORLD_TEXTURE
	f	Luh;	B	EXPERIENCE_TEXTURE
	f	Luh;	C	INSPIRATION_TEXTURE
	f	Ldke$b;	H	typeToReset
	f	I	a	slot
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ldqs;	c	parent
	f	Ldip;	p	serverData
	f	Leqf;	q	titleLabel
	f	Leqf;	r	subtitleLabel
	f	Lmr;	s	title
	f	Lmr;	t	subtitle
	f	Lmr;	u	buttonTitle
	f	I	v	subtitleColor
	f	Luh;	w	SLOT_FRAME_TEXTURE
	f	Luh;	x	UPLOAD_TEXTURE
	f	Luh;	y	ADVENTURE_TEXTURE
	f	Luh;	z	SURVIVAL_SPAWN_TEXTURE
	m	(Ldqs;Ldip;Ljava/lang/Runnable;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	parent	parent
	m	(Ldqs;Ldip;Lmr;Lmr;ILmr;Ljava/lang/Runnable;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	parent	parent
	m	(Ldhl;IILmr;Luh;ZZ)V	a	drawFrame
		p	1	matrices	matrices
		p	2	x	x
		p	3	y	y
		p	4	text	text
	m	(I)V	a	setSlot
		p	1	slot	slot
	m	(Ldke$c;)V	a	resetWorld
		p	1	resetWorldInfo	resetWorldInfo
	m	(Ljava/lang/Runnable;)V	a	switchSlot
		p	1	callback	callback
	m	(Ljava/lang/String;)V	a	setResetTitle
		p	1	title	title
	m	(Ldjd;)V	b	resetWorldWithTemplate
		p	1	template	template
	m	(I)I	b	frame
		p	1	i	i
	m	(Ldke$c;)V	b	triggerResetWorld
		p	1	resetWorldInfo	resetWorldInfo
	m	()V	i	switchSlot
c	dke$a	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	f	Luh;	b	image
	m	(Ldke;IILmr;Luh;Ldni$a;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
c	dke$b	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType
	f	Ldke$b;	a	NONE
	f	Ldke$b;	b	GENERATE
	f	Ldke$b;	c	UPLOAD
	f	Ldke$b;	d	ADVENTURE
	f	Ldke$b;	e	SURVIVAL_SPAWN
	f	Ldke$b;	f	EXPERIENCE
	f	Ldke$b;	g	INSPIRATION
	m	(Ljava/lang/String;)Ldke$b;	valueOf	valueOf
		p	0	name	name
c	dke$c	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo
	f	Ljava/lang/String;	a	seed
	f	I	b	levelType
	f	Z	c	generateStructures
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	1	seed	seed
		p	2	levelType	levelType
		p	3	generateStructures	generateStructures
c	dkf	com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback
	m	(Ldjd;)V	a	callback
		p	1	template	template
c	dkg	com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/text/DateFormat;	b	DATE_FORMAT
	f	Ldke;	c	parent
	f	J	p	worldId
	f	I	q	slotId
	f	Ldni;	r	uploadButton
	f	Ljava/util/List;	s	levelList
	f	I	t	selectedWorld
	f	Ldkg$b;	u	worldSelectionList
	f	Ljava/lang/String;	v	worldLang
	f	Ljava/lang/String;	w	conversionLang
	f	Leqf;	x	titleLabel
	f	Leqf;	y	subtitleLabel
	m	(JILdke;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slotId	slotId
		p	4	parent	parent
	m	()V	i	loadLevelList
	m	()V	k	upload
c	dkg$a	com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldListEntry
	m	(Ldhl;Ldaf;III)V	a	renderItem
c	dkg$b	com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	m	(Ldaf;)V	a	addEntry
	m	(Ldkg$a;)V	a	setSelected
c	dkh	com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	f	I	A	clicks
	f	[Lmr;	B	warning
	f	Ljava/lang/String;	C	warningURL
	f	Z	D	displayWarning
	f	Z	E	hoverWarning
	f	Ljava/util/List;	F	noTemplatesMessage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	LINK_ICONS
	f	Luh;	c	TRAILER_ICONS
	f	Luh;	p	SLOT_FRAME
	f	Ldkf;	q	parent
	f	Ldkh$b;	r	templateList
	f	I	s	selectedTemplate
	f	Lmr;	t	title
	f	Ldni;	u	selectButton
	f	Ldni;	v	trailerButton
	f	Ldni;	w	publisherButton
	f	Ljava/lang/String;	x	toolTip
	f	Ljava/lang/String;	y	currentLink
	f	Ldip$c;	z	worldType
	m	(Ldkf;Ldip$c;Ldje;)V	<init>	<init>
		p	1	parent	parent
		p	2	worldType	worldType
		p	3	list	list
	m	(Ldkf;Ldip$c;)V	<init>	<init>
		p	1	parent	parent
		p	2	worldType	worldType
	m	(Lmr;)V	a	setTitle
		p	1	title	title
	m	([Lmr;)V	a	setWarning
	m	(Ldhl;Ljava/lang/String;II)V	a	renderMousehoverTooltip
	m	(Ldje;)V	a	setPagination
	m	()V	i	updateButtonStates
	m	()Z	k	shouldSelectButtonBeActive
	m	()Z	l	shouldPublisherBeVisible
	m	()Z	n	shouldTrailerBeVisible
	m	()V	v	backButtonClicked
	m	()V	w	selectTemplate
	m	()V	y	onTrailer
	m	()V	z	onPublish
c	dkh$a	com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry
	f	Ldjd;	b	mTemplate
	m	(Ldkh;Ldjd;)V	<init>	<init>
		p	2	template	template
	m	(Ldhl;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	drawIcons
	m	(Ldhl;IIIILdjd;)V	a	drawImage
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(Ldhl;Ldjd;IIII)V	a	renderWorldTemplateItem
c	dkh$b	com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	m	(Ldkh;Ljava/lang/Iterable;)V	<init>	<init>
		p	2	templates	templates
	m	(Ldkh;)V	<init>	<init>
		p	1	screen	screen
	m	(Ldjd;)V	a	addEntry
		p	1	template	template
	m	(Ldkh$a;)V	a	setSelected
	m	(I)Ldjd;	b	getItem
		p	1	index	index
	m	()Z	f	isEmpty
	m	()Ljava/util/List;	g	getValues
c	dki	com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	f	Ldjr;	a	parent
	f	Ldip;	b	serverData
	f	Ldni;	c	doneButton
	f	Ldnp;	p	descEdit
	f	Ldnp;	q	nameEdit
	f	Leqf;	r	titleLabel
	m	(Ldjr;Ldip;)V	<init>	<init>
		p	1	parent	parent
		p	2	serverData	serverData
	m	()V	a	save
c	dkj	com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	f	Ljava/lang/Boolean;	A	pvp
	f	Ljava/lang/Boolean;	B	spawnNPCs
	f	Ljava/lang/Boolean;	C	spawnAnimals
	f	Ljava/lang/Boolean;	D	spawnMonsters
	f	Ljava/lang/Integer;	E	spawnProtection
	f	Ljava/lang/Boolean;	F	commandBlocks
	f	Ljava/lang/Boolean;	G	forceGameMode
	f	Ldni;	H	pvpButton
	f	Ldni;	I	spawnAnimalsButton
	f	Ldni;	J	spawnMonstersButton
	f	Ldni;	K	spawnNPCsButton
	f	Ldkj$a;	L	spawnProtectionButton
	f	Ldni;	M	commandBlocksButton
	f	Ldni;	N	gameModeButton
	f	Leqf;	O	titleLabel
	f	Leqf;	P	toastMessage
	f	[Lmr;	a	DIFFICULTIES
	f	[Lmr;	b	GAME_MODES
	f	Ldjr;	c	parent
	f	Ldnp;	r	nameEdit
	f	I	s	column1_x
	f	I	t	column_width
	f	I	u	column2_x
	f	Ldiv;	v	options
	f	Ldip$c;	w	worldType
	f	I	x	activeSlot
	f	I	y	difficultyIndex
	f	I	z	gameModeIndex
	m	(Ldjr;Ldiv;Ldip$c;I)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
		p	3	worldType	worldType
		p	4	activeSlot	activeSlot
	m	(Z)Lmr;	c	getWorldConfigureMessage
		p	0	enabled	enabled
	m	()Lmr;	i	difficultyTitle
	m	()Lmr;	k	gameModeTitle
	m	()Lmr;	l	pvpTitle
	m	()Lmr;	m	spawnAnimalsTitle
	m	()Lmr;	n	spawnMonstersTitle
	m	()Lmr;	v	spawnNPCsTitle
	m	()Lmr;	w	commandBlocksTitle
	m	()Lmr;	x	forceGameModeTitle
	m	()Ljava/lang/String;	y	getSlotName
	m	()V	z	saveSettings
c	dkj$a	com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	f	D	c	min
	f	D	d	max
	m	(Ldkj;IIIIFF)V	<init>	<init>
		p	2	id	id
		p	3	x	x
		p	4	y	y
		p	5	width	width
		p	6	min	min
		p	7	max	max
c	dkk	com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldqs;	b	parent
	f	Ldip;	c	serverData
	f	Ldqs;	p	mainScreen
	f	Ljava/lang/String;	q	subscriptionTitle
	f	Ljava/lang/String;	r	subscriptionStartLabelText
	f	Ljava/lang/String;	s	timeLeftLabelText
	f	Ljava/lang/String;	t	daysLeftLabelText
	f	I	u	daysLeft
	f	Ljava/lang/String;	v	startDate
	f	Ldiz$a;	w	type
	m	(Ldqs;Ldip;Ldqs;)V	<init>	<init>
		p	1	parent	parent
		p	2	serverData	serverData
		p	3	mainScreen	mainScreen
	m	(I)Ljava/lang/String;	a	daysLeftPresentation
		p	1	daysLeft	daysLeft
	m	(J)V	a	getSubscription
		p	1	worldId	worldId
	m	(J)Ljava/lang/String;	b	localPresentation
		p	1	cetTime	cetTime
c	dkl	com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldqs;	b	parent
	f	Ldhv;	c	mainScreen
	f	Ldip;	p	realmsServer
	f	Z	q	onLink
	f	Ljava/lang/String;	r	realmsToSUrl
	m	(Ldqs;Ldhv;Ldip;)V	<init>	<init>
		p	1	parent	parent
		p	2	mainScreen	mainScreen
		p	3	realmsServer	realmsServer
	m	()V	i	agreedToTos
c	dkm	com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	f	Z	A	showDots
	f	Z	B	uploadStarted
	f	Ldni;	C	backButton
	f	Ldni;	D	cancelButton
	f	I	E	animTick
	f	Ljava/lang/Long;	F	previousWrittenBytes
	f	Ljava/lang/Long;	G	previousTimeSnapshot
	f	J	H	bytesPersSecond
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/locks/ReentrantLock;	b	UPLOAD_LOCK
	f	[Ljava/lang/String;	c	DOTS
	f	Ldke;	p	parent
	f	Ldaf;	q	selectedLevel
	f	J	r	worldId
	f	I	s	slotId
	f	Ldie;	t	uploadStatus
	f	Lcom/google/common/util/concurrent/RateLimiter;	u	narrationRateLimiter
	f	Lmr;	w	status
	f	Ljava/lang/String;	x	progress
	f	Z	y	cancelled
	f	Z	z	uploadFinished
	m	(JILdke;Ldaf;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slotId	slotId
		p	4	parent	parent
	m	(Ljava/io/File;)Z	a	verify
		p	1	archive	archive
	m	(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V	a	addFileToTarGz
		p	1	tOut	tOut
		p	2	path	path
		p	3	base	base
		p	4	root	root
	m	(Ldhl;J)V	a	drawUploadSpeed0
	m	(Ljava/io/File;)Ljava/io/File;	b	tarGzipArchive
		p	1	pathToDirectoryFile	pathToDirectoryFile
	m	(Ldhl;)V	b	drawDots
	m	(Ldhl;)V	c	drawProgressBar
	m	(Ldhl;)V	d	drawUploadSpeed
	m	()V	i	onBack
	m	()V	k	onCancel
	m	()V	l	upload
	m	()V	m	uploadCancelled
c	dkn	com/mojang/realmsclient/gui/screens/UploadResult
	f	I	a	statusCode
	f	Ljava/lang/String;	b	errorMessage
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	statusCode	statusCode
		p	2	errorMessage	errorMessage
c	dkn$a	com/mojang/realmsclient/gui/screens/UploadResult$Builder
	f	I	a	statusCode
	f	Ljava/lang/String;	b	errorMessage
	m	(I)Ldkn$a;	a	withStatusCode
		p	1	statusCode	statusCode
	m	()Ldkn;	a	build
	m	(Ljava/lang/String;)Ldkn$a;	a	withErrorMessage
		p	1	errorMessage	errorMessage
c	dko	com/mojang/realmsclient/util/JsonUtils
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;J)J	a	getLongOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	a	getStringOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date;	a	getDateOr
		p	0	key	key
		p	1	node	node
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;I)I	a	getIntOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z	a	getBooleanOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
c	dkp	com/mojang/realmsclient/util/RealmsPersistence
	f	Ldih;	a	CHECKED_GSON
	m	()Ldkp$a;	a	readFile
	m	(Ldkp$a;)V	a	writeFile
		p	0	data	data
	m	()Ljava/io/File;	b	getFile
c	dkp$a	com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	f	Ljava/lang/String;	a	newsLink
	f	Z	b	hasUnreadNews
c	dkq	com/mojang/realmsclient/util/RealmsTextureManager
	f	Ljava/util/Map;	a	textures
	f	Ljava/util/Map;	b	skinFetchStatus
	f	Ljava/util/Map;	c	fetchedSkins
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	withBoundFace
		p	0	uuid	uuid
		p	1	r	r
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	bindWorldTemplate
		p	0	id	id
		p	1	image	image
	m	(Ljava/util/UUID;)V	a	bindDefaultFace
		p	0	uuid	uuid
	m	(Ljava/lang/String;)V	a	bindFace
		p	0	uuid	uuid
	m	(Ljava/lang/String;Ljava/lang/String;)I	b	getTextureId
		p	0	id	id
		p	1	image	image
c	dkq$a	com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	f	Ljava/lang/String;	a	image
	f	I	b	textureId
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	image	image
		p	2	textureId	textureId
c	dkr	com/mojang/realmsclient/util/RealmsUtil
	f	Lcom/google/common/cache/LoadingCache;	a	gameProfileCache
	f	Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;	b	authenticationService
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	m	(J)Ljava/lang/String;	a	convertToAgePresentation
	m	(Ljava/lang/String;)Ljava/lang/String;	a	uuidToName
		p	0	uuid	uuid
	m	(Ljava/lang/String;)Ljava/util/Map;	b	getTextures
		p	0	uuid	uuid
c	dkr$1	com/mojang/realmsclient/util/RealmsUtil$1
	m	(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	a	load
c	dks	com/mojang/realmsclient/util/SkinProcessor
	f	[I	a	pixels
	f	I	b	width
	f	I	c	height
	m	(Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage;	a	process
		p	1	image	image
	m	(IIII)V	a	doNotchTransparencyHack
		p	1	x0	x0
		p	2	y0	y0
		p	3	x1	x1
		p	4	y1	y1
	m	(IIII)V	b	setNoAlpha
		p	1	x0	x0
		p	2	y0	y0
		p	3	x1	x1
		p	4	y1	y1
c	dkt	com/mojang/realmsclient/util/TextRenderingUtils
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	insertLinks
		p	0	lines	lines
		p	1	links	links
	m	(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;	a	decompose
		p	0	text	text
		p	1	links	links
	m	(Ljava/lang/String;[Ldkt$b;)Ljava/util/List;	a	decompose
		p	0	text	text
		p	1	links	links
	m	(Ljava/lang/String;)Ljava/util/List;	a	lineBreak
		p	0	text	text
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;	a	split
		p	0	line	line
		p	1	delimiter	delimiter
c	dkt$a	com/mojang/realmsclient/util/TextRenderingUtils$Line
	f	Ljava/util/List;	a	segments
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	segments	segments
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dkt$b	com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	f	Ljava/lang/String;	a	fullText
	f	Ljava/lang/String;	b	linkTitle
	f	Ljava/lang/String;	c	linkUrl
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	fullText	fullText
		p	2	linkTitle	linkTitle
		p	3	linkUrl	linkUrl
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	fullText	fullText
	m	()Ljava/lang/String;	a	renderedText
	m	(Ljava/lang/String;Ljava/lang/String;)Ldkt$b;	a	link
		p	0	linkTitle	linkTitle
		p	1	linkUrl	linkUrl
	m	(Ljava/lang/String;)Ldkt$b;	a	text
		p	0	fullText	fullText
	m	()Z	b	isLink
	m	()Ljava/lang/String;	c	getLinkUrl
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dku	com/mojang/realmsclient/util/UploadTokenCache
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	tokenCache
	m	(JLjava/lang/String;)V	a	put
		p	0	wid	wid
		p	2	token	token
	m	(J)Ljava/lang/String;	a	get
		p	0	worldId	worldId
	m	(J)V	b	invalidate
		p	0	world	world
c	dkv	net/minecraft/realms/CloseServerTask
	f	Ldip;	c	serverData
	f	Ldjr;	d	configureScreen
	m	(Ldip;Ldjr;)V	<init>	<init>
		p	1	realmsServer	realmsServer
		p	2	configureWorldScreen	configureWorldScreen
c	dkw	net/minecraft/realms/RealmsConnectTask
	f	Leqe;	c	realmsConnect
	f	Ldiq;	d	a
	m	(Ldqs;Ldiq;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	address	address
c	dkx	net/minecraft/realms/DownloadTask
	f	J	c	worldId
	f	I	d	slot
	f	Ldqs;	e	lastScreen
	f	Ljava/lang/String;	f	downloadName
	m	(JILjava/lang/String;Ldqs;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slot	slot
		p	4	downloadName	downloadName
		p	5	lastScreen	lastScreen
c	dky	net/minecraft/realms/RealmsGetServerDetailsTask
	f	Ldip;	c	server
	f	Ldqs;	d	lastScreen
	f	Ldhv;	e	mainScreen
	f	Ljava/util/concurrent/locks/ReentrantLock;	f	connectLock
	m	(Ldhv;Ldqs;Ldip;Ljava/util/concurrent/locks/ReentrantLock;)V	<init>	<init>
		p	1	mainScreen	mainScreen
		p	2	lastScreen	lastScreen
		p	3	server	server
		p	4	connectLock	connectLock
	m	(I)V	b	sleep
		p	1	sleepTimeSeconds	sleepTimeSeconds
c	dkz	com/mojang/realmsclient/gui/LongRunningTask
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldjy;	b	longRunningMcoTaskScreen
	m	(Ldjy;)V	a	setScreen
		p	1	longRunningMcoTaskScreen	longRunningMcoTaskScreen
	m	(Ldqs;)V	a	setScreen
		c	Moved from Realms in 20w10a.
		p	0	screen	screen
	m	()V	a	abortTask
	m	(I)V	a	pause
		c	Moved from RealmsTasks in 20w10a.
		p	0	seconds	seconds
	m	(Ljava/lang/String;)V	b	setTitle
		p	1	title	title
	m	()V	b	tick
	m	()Z	c	aborted
	m	()V	d	init
c	dl	net/minecraft/command/arguments/MessageArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Ldl$a;	a	parse
	m	()Ldl;	a	message
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lmr;	a	getMessage
		p	0	command	command
		p	1	name	name
c	dl$a	net/minecraft/command/arguments/MessageArgumentType$MessageFormat
	f	Ljava/lang/String;	a	contents
	f	[Ldl$b;	b	selectors
	m	(Lcz;Z)Lmr;	a	format
	m	(Lcom/mojang/brigadier/StringReader;Z)Ldl$a;	a	parse
c	dl$b	net/minecraft/command/arguments/MessageArgumentType$MessageSelector
	f	I	a	start
	f	I	b	end
	f	Lez;	c	selector
	m	()I	a	getStart
	m	(Lcz;)Lmr;	a	format
	m	()I	b	getEnd
c	dla	net/minecraft/realms/OpenServerTask
	f	Ldip;	c	serverData
	f	Ldqs;	d	returnScreen
	f	Z	e	join
	f	Ldhv;	f	mainScreen
	m	(Ldip;Ldqs;Ldhv;Z)V	<init>	<init>
		p	1	realmsServer	realmsServer
		p	2	returnScreen	returnScreen
		p	3	mainScreen	mainScreen
		p	4	join	join
c	dlb	net/minecraft/realms/ResettingWorldTask
	f	Ljava/lang/String;	c	seed
	f	Ldjd;	d	worldTemplate
	f	I	e	levelType
	f	Z	f	generateStructures
	f	J	g	serverId
	f	Ljava/lang/String;	h	title
	f	Ljava/lang/Runnable;	i	callback
	m	(Ljava/lang/String;Ldjd;IZJLjava/lang/String;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	seed	seed
		p	2	worldTemplate	worldTemplate
		p	3	levelType	levelType
		p	4	generateStructures	generateStructures
		p	5	serverId	serverId
		p	7	title	title
		p	8	callback	callback
c	dlc	net/minecraft/realms/RestoreTask
	f	Ldif;	c	backup
	f	J	d	worldId
	f	Ldjr;	e	lastScreen
	m	(Ldif;JLdjr;)V	<init>	<init>
		p	1	backup	backup
		p	2	worldId	worldId
		p	4	lastScreen	lastScreen
c	dld	net/minecraft/realms/SwitchMinigameTask
	f	J	c	worldId
	f	Ldjd;	d	worldTemplate
	f	Ldjr;	e	lastScreen
	m	(JLdjd;Ldjr;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	worldTemplate	worldTemplate
		p	4	lastScreen	lastScreen
c	dle	net/minecraft/realms/SwitchSlotTask
	f	J	c	worldId
	f	I	d	slot
	f	Ljava/lang/Runnable;	e	callback
	m	(JILjava/lang/Runnable;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slot	slot
		p	4	callback	callback
c	dlf	net/minecraft/realms/WorldCreationTask
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	d	motd
	f	J	e	worldId
	f	Ldqs;	f	lastScreen
	m	(JLjava/lang/String;Ljava/lang/String;Ldqs;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	name	name
		p	4	motd	motd
		p	5	lastScreen	lastScreen
c	dlg	net/minecraft/client/options/AoOption
	f	[Ldlg;	d	OPTIONS
	f	I	e	value
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	value	value
		p	4	translationKey	translationKey
	m	()I	a	getValue
	m	(I)Ldlg;	a	getOption
	m	()Ljava/lang/String;	b	getTranslationKey
c	dlh	net/minecraft/client/options/AttackIndicator
	f	[Ldlh;	d	VALUES
	f	I	e	id
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	translationKey	translationKey
	m	()I	a	getId
	m	(I)Ldlh;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	b	getTranslationKey
c	dli	net/minecraft/client/options/BooleanOption
	f	Ljava/util/function/Predicate;	V	getter
	f	Ljava/util/function/BiConsumer;	W	setter
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1	key	key
		p	2	getter	getter
		p	3	setter	setter
	m	(Ldmb;Ldni;)V	a	method_19786
		p	2	button	button
	m	(Ldmb;Ljava/lang/String;)V	a	set
		p	1	options	options
		p	2	value	value
	m	(Ldmb;Z)V	a	set
		p	1	options	options
		p	2	value	value
	m	(Ldmb;)V	a	set
		p	1	options	options
	m	(Ldmb;)Z	b	get
		p	1	options	options
	m	(Ldmb;)Lmr;	c	getDisplayString
		p	1	options	options
c	dlj	net/minecraft/client/render/Camera
	f	Z	a	ready
	f	Lbpg;	b	area
	f	Laom;	c	focusedEntity
	f	Ldem;	d	pos
	f	Lfu$a;	e	blockPos
	f	Lg;	f	horizontalPlane
	f	Lg;	g	verticalPlane
	f	Lg;	h	diagonalPlane
	f	F	i	pitch
	f	F	j	yaw
	f	Ld;	k	rotation
	f	Z	l	thirdPerson
	f	Z	m	inverseView
	f	F	n	cameraY
	f	F	o	lastCameraY
	m	(Lbpg;Laom;ZZF)V	a	update
		p	1	area	area
		p	2	focusedEntity	focusedEntity
		p	3	thirdPerson	thirdPerson
		p	4	inverseView	inverseView
		p	5	tickDelta	tickDelta
	m	(Ldem;)V	a	setPos
		p	1	pos	pos
	m	()V	a	updateEyeHeight
	m	(FF)V	a	setRotation
		p	1	yaw	yaw
		p	2	pitch	pitch
	m	(D)D	a	clipToSpace
		p	1	desiredCameraDistance	desiredCameraDistance
	m	(DDD)V	a	moveBy
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Ldem;	b	getPos
	m	(DDD)V	b	setPos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Lfu;	c	getBlockPos
	m	()F	d	getPitch
	m	()F	e	getYaw
	m	()Ld;	f	getRotation
	m	()Laom;	g	getFocusedEntity
	m	()Z	h	isReady
	m	()Z	i	isThirdPerson
	m	()Lcxa;	k	getSubmergedFluidState
	m	()Lg;	l	getHorizontalPlane
	m	()Lg;	m	getVerticalPlane
	m	()V	o	reset
c	dlk	net/minecraft/client/recipebook/ClientRecipeBook
	f	Lbmv;	l	manager
	f	Ljava/util/Map;	m	resultsByGroup
	f	Ljava/util/List;	n	orderedResults
	m	(Lbmv;)V	<init>	<init>
		p	1	manager	manager
	m	(Ldme;Ldtr;)V	a	addGroupResults
		p	1	group	group
		p	2	results	results
	m	(Ldme;)Ljava/util/List;	a	getResultsForGroup
		p	1	category	category
	m	(Ldme;)Ldtr;	b	addGroup
		p	1	group	group
	m	(Lbhp;)Ljava/util/List;	b	getGroups
		p	0	handler	handler
	m	(Lbmu;)Ldme;	g	getGroupForRecipe
	m	()V	i	reload
	m	()Ljava/util/List;	j	getOrderedResults
c	dll	net/minecraft/client/options/CloudRenderMode
	f	[Ldll;	d	RENDER_MODES
	f	I	e	value
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	value	value
		p	4	translationKey	translationKey
	m	()I	a	getValue
	m	(I)Ldll;	a	getOption
		p	0	id	id
	m	()Ljava/lang/String;	b	getTranslationKey
c	dlm	net/minecraft/client/util/TextCollector
	m	(Lmu;)V	a	add
	m	()Lmu;	a	getRawCombined
	m	()Lmu;	b	getCombined
c	dln	net/minecraft/client/options/CyclingOption
	f	Ljava/util/function/BiConsumer;	V	setter
	f	Ljava/util/function/BiFunction;	W	messageProvider
	m	(Ljava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	1	key	key
		p	2	setter	setter
		p	3	messageProvider	messageProvider
	m	(Ldmb;I)V	a	cycle
		p	1	options	options
		p	2	amount	amount
	m	(Ldmb;Ldni;)V	a	method_19787
		p	2	button	button
	m	(Ldmb;)Lmr;	c	getMessage
		p	1	options	options
c	dlo	net/minecraft/client/network/DataQueryHandler
	f	Ldyn;	a	networkHandler
	f	I	b	expectedTransactionId
	f	Ljava/util/function/Consumer;	c	callback
	m	(Ldyn;)V	<init>	<init>
		p	1	networkHandler	networkHandler
	m	(ILle;)Z	a	handleQueryResponse
		p	1	transactionId	transactionId
		p	2	tag	tag
	m	(ILjava/util/function/Consumer;)V	a	queryEntityNbt
		p	1	entityNetworkId	entityNetworkId
		p	2	callback	callback
	m	(Ljava/util/function/Consumer;)I	a	nextQuery
		p	1	callback	callback
	m	(Lfu;Ljava/util/function/Consumer;)V	a	queryBlockNbt
		p	1	pos	pos
		p	2	callback	callback
c	dlp	net/minecraft/client/options/FullScreenOption
c	dlq	net/minecraft/client/MinecraftClientGame
	f	Ldlx;	a	client
	f	Lcom/mojang/bridge/launcher/Launcher;	b	launcher
	f	Lcom/mojang/bridge/launcher/SessionEventListener;	c	listener
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	()V	a	onStartGameSession
	m	()V	b	onLeaveGameSession
	m	(Lcom/mojang/bridge/launcher/SessionEventListener;)V	setSessionEventListener	setSessionEventListener
		p	1	listener	listener
c	dlq$a	net/minecraft/client/MinecraftClientGame$PerformanceMetricsImpl
	f	I	a	minTime
	f	I	b	maxTime
	f	I	c	averageTime
	f	I	d	sampleCount
	m	(IIII)V	<init>	<init>
		p	1	minTime	minTime
		p	2	maxTime	maxTime
		p	3	averageTime	averageTime
		p	4	sampleCount	sampleCount
c	dlr	net/minecraft/client/options/GraphicsMode
	f	[Ldlr;	d	VALUES
	f	I	e	id
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	translationKey	translationKey
	m	(I)Ldlr;	a	byId
		p	0	id	id
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getTranslationKey
	m	()Ldlr;	c	next
c	dls	net/minecraft/client/gui/hud/ChatHudLine
	f	I	a	creationTick
	f	Lmu;	b	text
	f	I	c	id
	m	(ILmu;I)V	<init>	<init>
		p	1	creationTick	creationTick
		p	3	id	id
	m	()Lmu;	a	getText
	m	()I	b	getCreationTick
	m	()I	c	getId
c	dlt	net/minecraft/client/options/HotbarStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	file
	f	Lcom/mojang/datafixers/DataFixer;	c	dataFixer
	f	[Lebh;	d	entries
	f	Z	e	loaded
	m	()V	a	save
	m	(I)Lebh;	a	getSavedHotbar
		p	1	i	i
	m	()V	b	load
c	dlu	net/minecraft/client/options/KeyBinding
	f	Ljava/util/Map;	a	keysById
	f	Ljava/util/Map;	b	keyToBindings
	f	Ljava/util/Set;	c	keyCategories
	f	Ljava/util/Map;	d	categoryOrderMap
	f	Ljava/lang/String;	e	translationKey
	f	Ldgn$a;	f	defaultKey
	f	Ljava/lang/String;	g	category
	f	Ldgn$a;	h	boundKey
	f	Z	i	pressed
	f	I	j	timesPressed
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	1	translationKey	translationKey
		p	2	code	code
		p	3	category	category
	m	(Ljava/lang/String;Ldgn$b;ILjava/lang/String;)V	<init>	<init>
		p	1	translationKey	translationKey
		p	2	type	type
		p	3	code	code
		p	4	category	category
	m	(Ldlu;)I	a	compareTo
	m	(Ldgn$a;Z)V	a	setKeyPressed
		p	0	key	key
		p	1	pressed	pressed
	m	(Z)V	a	setPressed
		p	1	pressed	pressed
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	a	getLocalizedName
		p	0	id	id
	m	()V	a	updatePressedStates
	m	(Ldgn$a;)V	a	onKeyPressed
		p	0	key	key
	m	(II)Z	a	matchesKey
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
	m	(I)Z	a	matchesMouse
		p	1	code	code
	m	()V	b	unpressAll
	m	(Ldlu;)Z	b	equals
		p	1	other	other
	m	(Ldgn$a;)V	b	setBoundKey
		p	1	boundKey	boundKey
	m	()V	c	updateKeysByCode
	m	(Ljava/lang/Object;)I	compareTo	compareTo
		p	1	other	other
	m	()Z	d	isPressed
	m	()Ljava/lang/String;	e	getCategory
	m	()Z	f	wasPressed
	m	()Ljava/lang/String;	g	getTranslationKey
	m	()Ldgn$a;	h	getDefaultKey
	m	()Z	i	isUnbound
	m	()Lmr;	j	getBoundKeyLocalizedText
	m	()Z	k	isDefault
	m	()Ljava/lang/String;	l	getBoundKeyTranslationKey
	m	()V	m	reset
c	dlv	net/minecraft/client/Keyboard
	f	Ldlx;	a	client
	f	Z	b	repeatEvents
	f	Ldgg;	c	clipboard
	f	J	d	debugCrashStartTime
	f	J	e	debugCrashLastLogTime
	f	J	f	debugCrashElapsedTime
	f	Z	g	switchF3State
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(JIIII)V	a	onKey
		p	1	window	window
		p	3	key	key
		p	4	scancode	scancode
	m	(JII)V	a	onChar
		p	1	window	window
	m	(J)V	a	setup
	m	(Ljava/lang/String;)V	a	setClipboard
	m	(ZZ)V	a	copyLookAt
	m	(Lcfj;Lfu;Lle;)V	a	copyBlock
	m	()Ljava/lang/String;	a	getClipboard
	m	(Luh;Ldem;Lle;)V	a	copyEntity
	m	(Z)V	a	enableRepeatEvents
		p	1	repeatEvents	repeatEvents
	m	(Ljava/lang/String;[Ljava/lang/Object;)V	a	debugWarn
	m	(I)Z	b	processF3
		p	1	key	key
	m	(Ljava/lang/String;[Ljava/lang/Object;)V	b	debugError
	m	()V	b	pollDebugCrash
c	dlw	net/minecraft/client/options/LogarithmicOption
c	dlx	net/minecraft/client/MinecraftClient
	f	Ljava/lang/String;	A	fpsDebugString
	f	Z	C	debugChunkInfo
	f	Z	D	debugChunkOcclusion
	f	Z	E	chunkCullingEnabled
	f	Ldlx;	F	instance
	f	Lorg/apache/logging/log4j/Logger;	G	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	H	COMPLETED_UNIT_FUTURE
	f	Ljava/io/File;	I	resourcePackDir
	f	Lcom/mojang/authlib/properties/PropertyMap;	J	sessionPropertyMap
	f	Lelw;	K	textureManager
	f	Lcom/mojang/datafixers/DataFixer;	L	dataFixer
	f	Lecn;	M	windowProvider
	f	Ldgy;	N	window
	f	Ldmj;	O	renderTickCounter
	f	Lano;	P	snooper
	f	Lecf;	Q	bufferBuilders
	f	Legm;	R	entityRenderDispatcher
	f	Lehh;	S	itemRenderer
	f	Lebv;	T	heldItemRenderer
	f	Leou;	U	searchManager
	f	Ldml;	V	session
	f	Ljava/util/concurrent/atomic/AtomicReference;	W	worldGenProgressTracker
	f	Ldlt;	X	creativeHotbarStorage
	f	Ljava/lang/String;	Y	gameVersion
	f	Ljava/lang/String;	Z	versionType
	f	Z	a	IS_SYSTEM_MAC
	f	Lepx;	aA	tutorialManager
	f	Leoz;	aB	server
	f	Ldys;	aC	currentServerEntry
	f	Lme;	aD	connection
	f	Z	aE	isIntegratedServerRunning
	f	I	aF	itemUseCooldown
	f	Z	aG	paused
	f	F	aH	pausedTickDelta
	f	J	aI	lastMetricsSampleTime
	f	J	aJ	nextDebugInfoUpdateTime
	f	I	aK	fpsCounter
	f	Z	aL	connectedToRealms
	f	Ljava/lang/Thread;	aM	thread
	f	Z	aN	running
	f	Lj;	aO	crashReport
	f	I	aP	currentFps
	f	Z	aQ	windowFocused
	f	Ljava/util/Queue;	aR	renderTaskQueue
	f	Ljava/util/concurrent/CompletableFuture;	aS	resourceReloadFuture
	f	Lami;	aT	profiler
	f	I	aU	trackingTick
	f	Lamc;	aV	tickTimeTracker
	f	Lamh;	aW	tickProfilerResult
	f	Ljava/lang/String;	aX	openProfilerSection
	f	Ljava/net/Proxy;	aa	netProxy
	f	Ldae;	ab	levelStorage
	f	Z	ac	is64Bit
	f	Z	ad	isDemo
	f	Z	ae	multiplayerEnabled
	f	Z	af	onlineChatEnabled
	f	Laba;	ag	resourceManager
	f	Lema;	ah	builtinPackProvider
	f	Laar;	ai	resourcePackManager
	f	Lems;	aj	languageManager
	f	Ldmn;	ak	blockColors
	f	Ldmr;	al	itemColors
	f	Ldgf;	am	framebuffer
	f	Lepn;	an	soundManager
	f	Lepi;	ao	musicTracker
	f	Ldos;	ap	fontManager
	f	Lemn;	aq	splashTextLoader
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	as	sessionService
	f	Lemm;	at	skinProvider
	f	Lenm;	au	bakedModelManager
	f	Lecq;	av	blockRenderManager
	f	Lemk;	aw	paintingManager
	f	Lemi;	ax	statusEffectSpriteManager
	f	Ldoo;	ay	toastManager
	f	Ldlq;	az	game
	f	Luh;	b	DEFAULT_FONT_ID
	f	Luh;	c	UNICODE_FONT_ID
	f	Luh;	d	ALT_TEXT_RENDERER_ID
	f	Lebx;	e	worldRenderer
	f	Leab;	f	particleManager
	f	Ldmt;	g	textRenderer
	f	Lebs;	h	gameRenderer
	f	Lefa;	i	debugRenderer
	f	Ldmu;	j	inGameHud
	f	Ldmb;	k	options
	f	Ldly;	l	mouse
	f	Ldlv;	m	keyboard
	f	Ljava/io/File;	n	runDirectory
	f	Lads;	o	metricsData
	f	[B	p	memoryReservedForCrash
	f	Ldyp;	q	interactionManager
	f	Ldym;	r	world
	f	Lebf;	s	player
	f	Laom;	t	cameraEntity
	f	Laom;	u	targetedEntity
	f	Ldej;	v	crosshairTarget
	f	I	w	attackCooldown
	f	Z	x	skipGameRender
	f	Ldqs;	y	currentScreen
	f	Ldql;	z	overlay
	m	(Ldus;)V	<init>	<init>
		p	1	args	args
	m	()Z	A	isAmbientOcclusionEnabled
	m	()Ldlx;	B	getInstance
	m	()Ljava/util/concurrent/CompletableFuture;	C	reloadResourcesConcurrently
	m	()Ldys;	D	getCurrentServerEntry
	m	()Z	E	isInSingleplayer
	m	()Z	F	isIntegratedServerRunning
	m	()Leoz;	G	getServer
		c	Gets this client's own integrated server.\n\n<p>The integrated server is only present when a local single player world is open.
	m	()Lano;	H	getSnooper
	m	()Ldml;	I	getSession
	m	()Lcom/mojang/authlib/properties/PropertyMap;	J	getSessionProperties
	m	()Ljava/net/Proxy;	K	getNetworkProxy
	m	()Lelw;	L	getTextureManager
	m	()Labc;	M	getResourceManager
	m	()Laar;	N	getResourcePackManager
	m	()Lema;	O	getResourcePackDownloader
	m	()Ljava/io/File;	P	getResourcePackDir
	m	()Lems;	Q	getLanguageManager
	m	()Z	R	is64Bit
	m	()Z	T	isPaused
	m	()Lepn;	V	getSoundManager
	m	()Laci;	W	getMusicType
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	X	getSessionService
	m	()Lemm;	Y	getSkinProvider
	m	()Laom;	Z	getCameraEntity
	m	(I)V	a	handleProfilerKeyPress
		p	1	digit	digit
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Laae;Laaj;Laap$b;Laas;)Leml;	a	createResourcePackProfile
	m	(Ljava/lang/String;Lbqe;Lgm$a;Lcix;)V	a	method_29607
		p	1	worldName	worldName
		p	2	levelInfo	levelInfo
		p	3	registryTracker	registryTracker
		p	4	generatorOptions	generatorOptions
	m	(Ldym;)V	a	joinWorld
		p	1	world	world
	m	(Ljava/lang/String;)V	a	startIntegratedServer
		p	1	worldName	worldName
	m	(Luh;)Ljava/util/function/Function;	a	getSpriteAtlas
	m	(Ldhl;Lamh;)V	a	drawProfilerResults
	m	(IJ)V	a	handleGlErrorByDisableVsync
		p	1	error	error
		p	2	description	description
	m	(Ldqs;)V	a	openScreen
		p	1	screen	screen
	m	(Ljava/util/UUID;)Z	a	shouldBlockMessages
		c	Checks if the client should block messages from the {@code sender}.\n\n<p>If true, messages will not be displayed in chat and narrator will not process\nthem.
		p	1	sender	sender
	m	(ZLaml;)V	a	startMonitor
		p	1	active	active
		p	2	monitor	monitor
	m	(Ljava/lang/String;Lgm$a;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLdlx$a;)V	a	startIntegratedServer
		p	1	worldName	worldName
		p	2	registryTracker	registryTracker
		p	5	safeMode	safeMode
	m	(Lbki;Lcdl;)Lbki;	a	addBlockEntityNbt
		p	1	stack	stack
		p	2	blockEntity	blockEntity
	m	(Lems;Ljava/lang/String;Ldmb;Lj;)V	a	addSystemDetailsToCrashReport
		p	0	languageManager	languageManager
		p	1	version	version
		p	2	options	options
		p	3	report	report
	m	(Lgm$a;Ldae$a;Ldlx$b;Ldal;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Labl;Ljava/lang/Thread;)Leoz;	a	method_29603
		p	1	registryTracker	registryTracker
		p	2	session	session
		p	4	saveProperties	saveProperties
		p	5	sessionService	sessionService
		p	6	profileRepository	profileRepository
		p	7	userCache	userCache
		p	8	serverThread	serverThread
	m	(Ljava/lang/Throwable;)V	a	handleResourceReloadException
		p	1	throwable	throwable
	m	(Leou$a;)Leor;	a	getSearchableContainer
		p	1	key	key
	m	(Laom;)V	a	setCameraEntity
		p	1	entity	entity
	m	(Lj;)V	a	setCrashReport
	m	(Ldql;)V	a	setOverlay
		p	1	overlay	overlay
	m	(Ldae$a;Lgm$a;Labc;Lbpn;)Ldal;	a	createSaveProperties
		p	0	session	session
		p	1	registryTracker	registryTracker
		p	2	resourceManager	resourceManager
	m	(Ldys;)V	a	setCurrentServerEntry
	m	()Z	aA	shouldRenderAsync
	m	()Ldgy;	aB	getWindow
	m	()Lecf;	aC	getBufferBuilders
	m	()Ljava/lang/String;	aD	getWindowTitle
	m	()V	aE	initializeSearchableContainers
	m	()Z	aF	checkIs64Bit
	m	()V	aG	checkGameData
	m	()Z	aH	shouldMonitorTickDuration
	m	()I	aI	getFramerateLimit
	m	()V	aJ	doAttack
	m	()V	aK	doItemUse
	m	()V	aL	handleInputEvents
	m	()V	aM	doItemPick
	m	()Ljava/lang/String;	aN	getCurrentAction
	m	()Lecq;	aa	getBlockRenderManager
	m	()Legm;	ab	getEntityRenderManager
	m	()Lehh;	ac	getItemRenderer
	m	()Lebv;	ad	getHeldItemRenderer
	m	()Lads;	af	getMetricsData
	m	()Z	ag	isConnectedToRealms
	m	()Lcom/mojang/datafixers/DataFixer;	ah	getDataFixer
	m	()F	ai	getTickDelta
	m	()F	aj	getLastFrameDuration
	m	()Ldmn;	ak	getBlockColors
	m	()Z	al	hasReducedDebugInfo
	m	()Ldoo;	am	getToastManager
	m	()Lepx;	an	getTutorialManager
	m	()Z	ao	isWindowFocused
	m	()Ldlt;	ap	getCreativeHotbarStorage
	m	()Lenm;	aq	getBakedModelManager
	m	()Lemk;	ar	getPaintingManager
	m	()Lemi;	as	getStatusEffectSpriteManager
	m	()Lami;	av	getProfiler
	m	()Ldlq;	aw	getGame
	m	()Lemn;	ay	getSplashTextLoader
	m	()Ldql;	az	getOverlay
	m	(I)V	b	resetMipmapLevels
		p	1	mipmapLevels	mipmapLevels
	m	(Ldym;)V	b	setWorld
		p	1	world	world
	m	(Lj;)V	b	printCrashReport
	m	(Z)V	b	initFont
		p	1	forcesUnicode	forcesUnicode
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	b	createV3ResourcePackFactory
	m	(Ldqs;)V	b	disconnect
		p	1	screen	screen
	m	(ZLaml;)V	b	endMonitor
		p	1	active	active
		p	2	monitor	monitor
	m	()V	c	updateWindowTitle
	m	(Z)V	c	openPauseMenu
		p	1	pause	pause
	m	(Lj;)Lj;	c	addDetailsToCrashReport
		p	1	report	report
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	c	createV4ResourcePackFactory
	m	(Z)V	d	setConnectedToRealms
		p	1	connectedToRealms	connectedToRealms
	m	()Z	d	isModded
		c	Checks if this client is modded.\n\n<p>This checks the client's brand and if the MinecraftClient's class is still signed.
	m	(Ldqs;)V	d	reset
		p	1	screen	screen
	m	()V	e	run
	m	(Z)V	e	render
		p	1	tick	tick
	m	(Z)V	f	handleBlockBreaking
	m	()Ldgf;	f	getFramebuffer
	m	()Ljava/lang/String;	g	getGameVersion
	m	()Ljava/lang/String;	h	getVersionType
	m	()Z	i	forcesUnicodeFont
	m	()Ljava/util/concurrent/CompletableFuture;	j	reloadResources
	m	()Ldae;	k	getLevelStorage
	m	()V	l	stop
	m	()V	m	cleanUpAfterCrash
	m	()V	n	scheduleStop
	m	()Z	o	isRunning
	m	()Lepi;	p	getMusicTracker
	m	()V	q	tick
	m	()V	r	disconnect
	m	()Z	s	isMultiplayerEnabled
	m	()Z	t	isOnlineChatEnabled
	m	()Z	u	isDemo
	m	()Ldyn;	v	getNetworkHandler
	m	()Z	w	isHudEnabled
	m	()Z	y	isFancyGraphicsOrBetter
	m	()Z	z	isFabulousGraphicsOrBetter
c	dlx$a	net/minecraft/client/MinecraftClient$WorldLoadAction
c	dlx$b	net/minecraft/client/MinecraftClient$IntegratedResourceManager
	f	Laar;	a	resourcePackManager
	f	Luw;	b	serverResourceManager
	f	Ldal;	c	saveProperties
	m	(Laar;Luw;Ldal;)V	<init>	<init>
		p	1	resourcePackManager	resourcePackManager
		p	2	serverResourceManager	serverResourceManager
		p	3	saveProperties	saveProperties
	m	()Laar;	a	getResourcePackManager
	m	()Luw;	b	getServerResourceManager
	m	()Ldal;	c	getSaveProperties
c	dly	net/minecraft/client/Mouse
	f	Ldlx;	a	client
	f	Z	b	leftButtonClicked
	f	Z	c	middleButtonClicked
	f	Z	d	rightButtonClicked
	f	D	e	x
	f	D	f	y
	f	I	g	controlLeftTicks
	f	I	h	activeButton
	f	Z	i	hasResolutionChanged
	f	D	k	glfwTime
	f	Laef;	l	cursorXSmoother
	f	Laef;	m	cursorYSmoother
	f	D	n	cursorDeltaX
	f	D	o	cursorDeltaY
	f	D	p	eventDeltaWheel
	f	D	q	lastMouseUpdateTime
	f	Z	r	isCursorLocked
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	()V	a	updateMouse
	m	(JIII)V	a	onMouseButton
		p	1	window	window
		p	3	button	button
		p	4	action	action
		p	5	mods	mods
	m	(J)V	a	setup
	m	(JDD)V	a	onMouseScroll
		c	Called when a mouse is used to scroll.
		p	1	window	window
			c	the window handle
		p	3	horizontal	horizontal
			c	the horizontal scroll distance
		p	5	vertical	vertical
			c	the vertical scroll distance
	m	(JDD)V	b	onCursorPos
		p	1	window	window
		p	3	x	x
		p	5	y	y
	m	()Z	b	wasLeftButtonClicked
	m	()Z	d	wasRightButtonClicked
	m	()D	e	getX
	m	()D	f	getY
	m	()V	g	onResolutionChanged
	m	()Z	h	isCursorLocked
	m	()V	i	lockCursor
	m	()V	j	unlockCursor
c	dlz	net/minecraft/client/options/NarratorOption
	f	[Ldlz;	e	VALUES
	f	I	f	id
	f	Lmr;	g	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	translationKey	translationKey
	m	(I)Ldlz;	a	byId
		p	0	id	id
	m	()I	a	getId
	m	()Lmr;	b	getTranslationKey
c	dm	net/minecraft/command/arguments/MobEffectArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_EFFECT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Laoe;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laoe;	a	getMobEffect
	m	()Ldm;	a	mobEffect
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dma	net/minecraft/client/options/Option
	f	Ldln;	A	CLOUDS
	f	Ldln;	B	TEXT_BACKGROUND
	f	Ldli;	C	AUTO_JUMP
	f	Ldli;	D	AUTO_SUGGESTIONS
	f	Ldli;	E	CHAT_COLOR
	f	Ldli;	F	CHAT_LINKS
	f	Ldli;	G	CHAT_LINKS_PROMPT
	f	Ldli;	H	DISCRETE_MOUSE_SCROLL
	f	Ldli;	I	VSYNC
	f	Ldli;	J	ENTITY_SHADOWS
	f	Ldli;	K	FORCE_UNICODE_FONT
	f	Ldli;	L	INVERT_MOUSE
	f	Ldli;	M	REALMS_NOTIFICATIONS
	f	Ldli;	N	REDUCED_DEBUG_INFO
	f	Ldli;	O	SUBTITLES
	f	Ldli;	P	SNOOPER
	f	Ldln;	Q	SNEAK_TOGGLED
	f	Ldln;	R	SPRINT_TOGGLED
	f	Ldli;	S	TOUCHSCREEN
	f	Ldli;	T	FULLSCREEN
	f	Ldli;	U	VIEW_BOBBING
	f	Lmr;	V	FAST_GRAPHICS_TOOLTIP
	f	Lmr;	W	FABULOUS_GRAPHICS_TOOLTIP
	f	Lmr;	X	FANCY_GRAPHICS_TOOLTIP
	f	Ljava/lang/String;	Y	key
	f	Ljava/util/Optional;	Z	tooltip
	f	Ldmd;	a	BIOME_BLEND_RADIUS
	f	Ldmd;	b	CHAT_HEIGHT_FOCUSED
	f	Ldmd;	c	SATURATION
	f	Ldmd;	d	CHAT_OPACITY
	f	Ldmd;	e	CHAT_SCALE
	f	Ldmd;	f	CHAT_WIDTH
	f	Ldmd;	g	CHAT_LINE_SPACING
	f	Ldmd;	h	CHAT_DELAY_INSTANT
	f	Ldmd;	i	FOV
	f	Ldmd;	j	FRAMERATE_LIMIT
	f	Ldmd;	k	GAMMA
	f	Ldmd;	l	MIPMAP_LEVELS
	f	Ldmd;	m	MOUSE_WHEEL_SENSITIVITY
	f	Ldli;	n	RAW_MOUSE_INPUT
	f	Ldmd;	o	RENDER_DISTANCE
	f	Ldmd;	p	ENTITY_DISTANCE_SCALING
	f	Ldmd;	q	SENSITIVITY
	f	Ldmd;	r	TEXT_BACKGROUND_OPACITY
	f	Ldln;	s	AO
	f	Ldln;	t	ATTACK_INDICATOR
	f	Ldln;	u	VISIBILITY
	f	Ldln;	v	GRAPHICS
	f	Ldln;	w	GUI_SCALE
	f	Ldln;	x	MAIN_HAND
	f	Ldln;	y	NARRATOR
	f	Ldln;	z	PARTICLES
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Ljava/util/List;)V	a	setTooltip
		p	1	tooltip	tooltip
	m	()Lmx;	a	getDisplayPrefix
	m	(Ldmb;III)Ldng;	a	createButton
		p	1	options	options
		p	2	x	x
		p	3	y	y
		p	4	width	width
	m	()Ljava/util/Optional;	b	getTooltip
	m	(Ldmb;Ldln;)Lmr;	i	method_18550
		p	0	options	options
	m	(Ldmb;Ljava/lang/Integer;)V	i	method_18554
		p	0	options	options
		p	1	count	count
c	dmb	net/minecraft/client/options/GameOptions
	f	I	A	mipmapLevels
	f	Z	B	useNativeTransport
	f	Ldlh;	C	attackIndicator
	f	Lepz;	D	tutorialStep
	f	I	E	biomeBlendRadius
	f	D	F	mouseWheelSensitivity
	f	Z	G	rawMouseInput
	f	I	H	glDebugVerbosity
	f	Z	I	autoJump
	f	Z	J	autoSuggestions
	f	Z	K	chatColors
	f	Z	L	chatLinks
	f	Z	M	chatLinksPrompt
	f	Z	N	enableVsync
	f	Z	O	entityShadows
	f	Z	P	forceUnicodeFont
	f	Z	Q	invertYMouse
	f	Z	R	discreteMouseScroll
	f	Z	S	realmsNotifications
	f	Z	T	reducedDebugInfo
	f	Z	U	snooperEnabled
	f	Z	V	showSubtitles
	f	Z	W	backgroundForChatOnly
	f	Z	X	touchscreen
	f	Z	Y	fullscreen
	f	Z	Z	bobView
	f	D	a	mouseSensitivity
	f	Ldlu;	aA	keySaveToolbarActivator
	f	Ldlu;	aB	keyLoadToolbarActivator
	f	[Ldlu;	aC	keysAll
	f	Ldlx;	aD	client
	f	Land;	aE	difficulty
	f	Z	aF	hudHidden
	f	I	aG	perspective
	f	Z	aH	debugEnabled
	f	Z	aI	debugProfilerEnabled
	f	Z	aJ	debugTpsEnabled
	f	Ljava/lang/String;	aK	lastServer
	f	Z	aL	smoothCameraEnabled
	f	D	aM	fov
	f	D	aN	gamma
	f	I	aO	guiScale
	f	Ldmc;	aP	particles
	f	Ldlz;	aQ	narrator
	f	Ljava/lang/String;	aR	language
	f	Lorg/apache/logging/log4j/Logger;	aT	LOGGER
	f	Lcom/google/gson/Gson;	aU	GSON
	f	Lcom/google/gson/reflect/TypeToken;	aV	STRING_LIST_TYPE
	f	Lcom/google/common/base/Splitter;	aW	COLON_SPLITTER
	f	Ljava/util/Set;	aX	enabledPlayerModelParts
	f	Ljava/util/Map;	aY	soundVolumeLevels
	f	Ljava/io/File;	aZ	optionsFile
	f	Z	aa	sneakToggled
	f	Z	ab	sprintToggled
	f	Z	ac	skipMultiplayerWarning
	f	Ldlu;	ad	keyForward
	f	Ldlu;	ae	keyLeft
	f	Ldlu;	af	keyBack
	f	Ldlu;	ag	keyRight
	f	Ldlu;	ah	keyJump
	f	Ldlu;	ai	keySneak
	f	Ldlu;	aj	keySprint
	f	Ldlu;	ak	keyInventory
	f	Ldlu;	al	keySwapHands
	f	Ldlu;	am	keyDrop
	f	Ldlu;	an	keyUse
	f	Ldlu;	ao	keyAttack
	f	Ldlu;	ap	keyPickItem
	f	Ldlu;	aq	keyChat
	f	Ldlu;	ar	keyPlayerList
	f	Ldlu;	as	keyCommand
	f	Ldlu;	at	keyScreenshot
	f	Ldlu;	au	keyTogglePerspective
	f	Ldlu;	av	keySmoothCamera
	f	Ldlu;	aw	keyFullscreen
	f	Ldlu;	ax	keySpectatorOutlines
	f	Ldlu;	ay	keyAdvancements
	f	[Ldlu;	az	keysHotbar
	f	I	b	viewDistance
	f	F	c	entityDistanceScaling
	f	I	d	maxFps
	f	Ldll;	e	cloudRenderMode
	f	Ldlr;	f	graphicsMode
	f	Ldlg;	g	ao
	f	Ljava/util/List;	h	resourcePacks
	f	Ljava/util/List;	i	incompatibleResourcePacks
	f	Lbea;	j	chatVisibility
	f	D	k	chatOpacity
	f	D	l	chatLineSpacing
	f	D	m	textBackgroundOpacity
	f	Ljava/lang/String;	n	fullscreenResolution
	f	Z	o	hideServerAddress
	f	Z	p	advancedItemTooltips
	f	Z	q	pauseOnLostFocus
	f	Laou;	r	mainArm
	f	I	s	overrideWidth
	f	I	t	overrideHeight
	f	Z	u	heldItemTooltips
	f	D	v	chatScale
	f	D	w	chatWidth
	f	D	x	chatHeightUnfocused
	f	D	y	chatHeightFocused
	f	D	z	chatDelay
	m	(Ldlx;Ljava/io/File;)V	<init>	<init>
		p	1	client	client
		p	2	optionsFile	optionsFile
	m	()V	a	load
	m	(Lbed;)V	a	togglePlayerModelPart
		p	1	part	part
	m	(I)I	a	getTextBackgroundColor
		p	1	fallbackColor	fallbackColor
	m	(Lacm;F)V	a	setSoundVolume
		p	1	category	category
		p	2	volume	volume
	m	(Lle;)Lle;	a	update
		p	1	tag	tag
	m	(Ldlu;Ldgn$a;)V	a	setKeyCode
		p	1	key	key
		p	2	code	code
	m	(Ljava/lang/String;)F	a	parseFloat
	m	(Lacm;)F	a	getSoundVolume
		p	1	category	category
	m	(Laar;)V	a	addResourcePackProfilesToManager
		p	1	manager	manager
	m	(F)F	a	getTextBackgroundOpacity
		p	1	fallback	fallback
	m	(Lbed;Z)V	a	setPlayerModelPart
		p	1	part	part
		p	2	enabled	enabled
	m	(F)I	b	getTextBackgroundColor
		p	1	fallbackOpacity	fallbackOpacity
	m	()V	b	write
	m	()V	c	onPlayerModelPartChange
	m	()Ljava/util/Set;	d	getEnabledPlayerModelParts
	m	()Ldll;	e	getCloudRenderMode
	m	()Z	f	shouldUseNativeTransport
c	dmc	net/minecraft/client/options/ParticlesOption
	f	[Ldmc;	d	VALUES
	f	I	e	id
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	translationKey	translationKey
	m	(I)Ldmc;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	a	getTranslationKey
	m	()I	b	getId
c	dmd	net/minecraft/client/options/DoubleOption
	f	F	V	step
	f	D	W	min
	f	D	X	max
	f	Ljava/util/function/Function;	Y	getter
	f	Ljava/util/function/BiConsumer;	Z	setter
	f	Ljava/util/function/BiFunction;	aa	displayStringGetter
	m	(Ljava/lang/String;DDFLjava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	1	key	key
		p	2	min	min
		p	4	max	max
		p	6	step	step
		p	7	getter	getter
		p	8	setter	setter
		p	9	displayStringGetter	displayStringGetter
	m	(Ldmb;D)V	a	set
		p	1	options	options
		p	2	value	value
	m	(F)V	a	setMax
		p	1	max	max
	m	(Ldmb;)D	a	get
		p	1	options	options
	m	(D)D	a	getRatio
		p	1	value	value
	m	(D)D	b	getValue
		p	1	ratio	ratio
	m	()D	c	getMin
	m	(Ldmb;)Lmr;	c	getDisplayString
		p	1	options	options
	m	(D)D	c	adjust
		p	1	value	value
	m	()D	d	getMax
c	dme	net/minecraft/client/recipebook/RecipeBookGroup
	f	Ljava/util/List;	s	icons
	m	(Ljava/lang/String;I[Lbki;)V	<init>	<init>
		p	3	entries	entries
	m	()Ljava/util/List;	a	getIcons
c	dmf	net/minecraft/client/util/ScreenshotUtils
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/text/DateFormat;	b	DATE_FORMAT
	m	(Ljava/io/File;)Ljava/io/File;	a	getScreenshotFilename
		p	0	directory	directory
	m	(Ljava/io/File;Ljava/lang/String;IILdgf;Ljava/util/function/Consumer;)V	a	saveScreenshot
		p	0	gameDirectory	gameDirectory
		p	1	fileName	fileName
		p	2	framebufferWidth	framebufferWidth
		p	3	framebufferHeight	framebufferHeight
		p	4	framebuffer	framebuffer
		p	5	messageReceiver	messageReceiver
	m	(IILdgf;)Ldgs;	a	takeScreenshot
		p	0	width	width
		p	1	height	height
		p	2	framebuffer	framebuffer
	m	(Ljava/io/File;IILdgf;Ljava/util/function/Consumer;)V	a	saveScreenshot
		p	0	gameDirectory	gameDirectory
		p	1	framebufferWidth	framebufferWidth
		p	2	framebufferHeight	framebufferHeight
		p	3	framebuffer	framebuffer
		p	4	messageReceiver	messageReceiver
	m	(Ljava/io/File;Ljava/lang/String;IILdgf;Ljava/util/function/Consumer;)V	b	saveScreenshotInner
		p	0	gameDirectory	gameDirectory
		p	1	fileName	fileName
		p	2	framebufferWidth	framebufferWidth
		p	3	framebufferHeight	framebufferHeight
		p	4	framebuffer	framebuffer
		p	5	messageReceiver	messageReceiver
c	dmg	net/minecraft/client/ClientGameSession
	f	I	a	playerCount
	f	Z	b	remoteServer
	f	Ljava/lang/String;	c	difficulty
	f	Ljava/lang/String;	d	gameMode
	f	Ljava/util/UUID;	e	sessionId
c	dmh	net/minecraft/client/font/TextVisitFactory
	c	A utility class for visiting the characters of strings, handling surrogate\ncode points and formatting codes.
	f	Ljava/util/Optional;	a	VISIT_TERMINATED
	m	(Ljava/lang/String;ILnb;Lnb;Ldmh$a;)Z	a	visitFormatted
		c	Visits the code points of a string, applying the formatting codes within.\n\n<p>The visit is in forward direction.</p>\n\n@return {@code true} if the full string was visited, or {@code false} indicating\nthe {@code visitor} terminated half-way
		p	0	text	text
			c	the string visited
		p	1	startIndex	startIndex
			c	the starting index of the visit
		p	2	startingStyle	startingStyle
			c	the style of the string when the visit starts
		p	3	resetStyle	resetStyle
			c	the style to reset to when a {@code §r} formatting code is encountered
		p	4	visitor	visitor
			c	the visitor
	m	(Lnb;Ldmh$a;IC)Z	a	visitRegularCharacter
		p	0	style	style
		p	1	visitor	visitor
		p	2	index	index
		p	3	c	c
	m	(Lmu;Lnb;Ldmh$a;)Z	a	visitFormatted
		c	Visits the code points for every literal string and the formatting codes\nsupplied by the renderable.\n\n<p>The visit is in forward direction.</p>\n\n@return {@code true} if the full string was visited, or {@code false} indicating\nthe {@code visitor} terminated half-way\n@see StringRenderable#visit(StringRenderable.StyledVisitor, Style)
		p	0	text	text
		p	1	style	style
		p	2	visitor	visitor
	m	(Ljava/lang/String;ILnb;Ldmh$a;)Z	a	visitFormatted
		c	Visits the code points of a string, applying the formatting codes within.\n\n<p>The visit is in forward direction.</p>\n\n@return {@code true} if the full string was visited, or {@code false} indicating\nthe {@code visitor} terminated half-way
		p	0	text	text
			c	the string visited
		p	1	startIndex	startIndex
			c	the starting index of the visit
		p	2	style	style
			c	the style of the string
		p	3	visitor	visitor
	m	(Ljava/lang/String;)Ljava/lang/String;	a	validateSurrogates
		c	Returns a new string that has all surrogate characters within validated\nfrom an original string.
		p	0	text	text
			c	the original string
	m	(Ljava/lang/String;Lnb;Ldmh$a;)Z	a	visitForwards
		c	Visits the code points of a string in forward (left to right) direction.\n\n@return {@code true} if the full string was visited, or {@code false} indicating\nthe {@code visitor} terminated half-way
		p	0	text	text
			c	the string
		p	1	style	style
			c	the style of the string
		p	2	visitor	visitor
			c	the visitor of characters
	m	(Ljava/lang/String;Lnb;Ldmh$a;)Z	b	visitBackwards
		c	Visits the code points of a string in backward (right to left) direction.\n\n@return {@code true} if the full string was visited, or {@code false} indicating\nthe {@code visitor} terminated half-way
		p	0	text	text
			c	the string
		p	1	style	style
			c	the style of the string
		p	2	visitor	visitor
			c	the visitor
	m	(Ljava/lang/String;Lnb;Ldmh$a;)Z	c	visitFormatted
		c	Visits the code points of a string, applying the formatting codes within.\n\n<p>The visit is in forward direction.</p>\n\n@return {@code true} if the full string was visited, or {@code false} indicating\nthe {@code visitor} terminated half-way
		p	0	text	text
			c	the string visited
		p	1	style	style
			c	the style of the string
		p	2	visitor	visitor
			c	the visitor
c	dmh$a	net/minecraft/client/font/TextVisitFactory$CharacterVisitor
	c	A visitor for single characters in a string.
	m	(ILnb;I)Z	onChar	onChar
		c	Visits a single character.\n\n<p>Multiple surrogate characters are converted into one single {@code\ncodePoint} when passed into this method.</p>\n\n@return {@code true} to continue visiting other characters, or {@code false} to terminate the visit
		p	1	index	index
			c	the current index of the character
		p	2	style	style
			c	the style of the character, containing formatting and font information
		p	3	codePoint	codePoint
			c	the code point of the character
c	dmi	net/minecraft/client/font/TextHandler
	f	Ldmi$f;	a	widthRetriever
	m	(Ldmi$f;)V	<init>	<init>
		p	1	widthRetriever	widthRetriever
	m	(Ljava/lang/String;ILnb;)I	a	getTrimmedLength
		c	Returns the length of a string when it is trimmed to be at most {@code\nmaxWidth} wide.
		p	1	text	text
			c	the string to trim
		p	2	maxWidth	maxWidth
			c	the max width of the trimmed string
		p	3	style	style
			c	the style of the trimmed string
	m	(Ljava/lang/String;ILnb;ZLdmi$d;)V	a	wrapLines
		p	1	text	text
		p	2	maxWidth	maxWidth
		p	3	style	style
		p	4	retainTrailingWordSplit	retainTrailingWordSplit
		p	5	consumer	consumer
	m	(Lmu;I)Lnb;	a	trimToWidth
		c	Trim a text to be at most {@code maxWidth} wide.\n\n@return the trimmed text
		p	1	text	text
		p	2	maxWidth	maxWidth
			c	the max width of the trimmed text
	m	(Ljava/lang/String;IIZ)I	a	moveCursorByWords
		p	0	text	text
		p	1	offset	offset
		p	2	cursor	cursor
		p	3	consumeSpaceOrBreak	consumeSpaceOrBreak
	m	(Lmu;ILnb;)Lmu;	a	trimToWidth
		p	1	text	text
		p	2	width	width
		p	3	style	style
	m	(Lmu;)F	a	getWidth
		c	Returns the width of a text.
		p	1	text	text
	m	(Ljava/lang/String;)F	a	getWidth
		c	Returns the width of a string.
		p	1	text	text
	m	(Ljava/lang/String;ILnb;)Ljava/lang/String;	b	trimToWidth
		c	Trim a string to be at most {@code maxWidth} wide.\n\n@return the trimmed string
		p	1	text	text
			c	the string to trim
		p	2	maxWidth	maxWidth
			c	the max width of the trimmed string
		p	3	style	style
			c	the style of the trimmed string
	m	(Lmu;ILnb;)Ljava/util/List;	b	wrapLines
		p	2	maxWidth	maxWidth
	m	(Ljava/lang/String;ILnb;)Ljava/lang/String;	c	trimToWidthBackwards
		c	Trim a string from right to left to be at most {@code maxWidth} wide.\n\n@return the trimmed string
		p	1	text	text
			c	the string to trim
		p	2	maxWidth	maxWidth
			c	the max width of the trimmed string
		p	3	style	style
			c	the style of the trimmed string
	m	(Ljava/lang/String;ILnb;)Ljava/util/List;	g	wrapLines
		p	1	text	text
		p	2	maxWidth	maxWidth
		p	3	style	style
c	dmi$1	net/minecraft/client/font/TextHandler$1
	f	Ldlm;	c	collector
c	dmi$a	net/minecraft/client/font/TextHandler$LineWrappingCollector
	f	Ljava/util/List;	a	parts
	f	Ljava/lang/String;	b	joined
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	parts	parts
	m	(IILnb;)Lmu;	a	collectLine
		p	1	lineLength	lineLength
		p	2	skippedLength	skippedLength
		p	3	style	style
	m	()Lmu;	a	collectRemainers
	m	(I)C	a	charAt
		p	1	index	index
c	dmi$b	net/minecraft/client/font/TextHandler$LineBreakingVisitor
	f	F	b	maxWidth
	f	I	c	endIndex
	f	Lnb;	d	endStyle
	f	Z	e	nonEmpty
	f	F	f	totalWidth
	f	I	g	lastSpaceBreak
	f	Lnb;	h	lastSpaceStyle
	f	I	i	count
	f	I	j	startOffset
	m	(Ldmi;F)V	<init>	<init>
		p	2	maxWidth	maxWidth
	m	(I)V	a	offset
		p	1	extraOffset	extraOffset
	m	(ILnb;)Z	a	breakLine
		p	1	finishIndex	finishIndex
		p	2	finishStyle	finishStyle
	m	()I	a	getEndingIndex
	m	()Lnb;	b	getEndingStyle
	m	()Z	c	hasLineBreak
c	dmi$c	net/minecraft/client/font/TextHandler$StyledString
	f	Ljava/lang/String;	a	literal
	f	Lnb;	d	style
	m	(Ljava/lang/String;Lnb;)V	<init>	<init>
		p	1	literal	literal
		p	2	style	style
c	dmi$d	net/minecraft/client/font/TextHandler$LineWrappingConsumer
	c	A consumer of the line-breaking information.
	m	(Lnb;II)V	accept	accept
		c	Accepts the information on a line-wrap segment.
		p	1	style	style
			c	the style of this line segment
		p	2	start	start
			c	the start index of this segment in the original string, inclusive
		p	3	end	end
			c	the end index of this segment in the original string, exclusive
c	dmi$e	net/minecraft/client/font/TextHandler$WidthLimitingVisitor
	f	F	b	widthLeft
	f	I	c	length
	m	(Ldmi;F)V	<init>	<init>
		p	2	maxWidth	maxWidth
	m	()I	a	getLength
	m	()V	b	resetLength
c	dmi$f	net/minecraft/client/font/TextHandler$WidthRetriever
	c	A retriever of character width.
	m	(ILnb;)F	getWidth	getWidth
		c	Returns the width of a character.
		p	1	codePoint	codePoint
			c	the character's code point
		p	2	style	style
			c	the style of the character, carrying font and formatting information
c	dmj	net/minecraft/client/render/RenderTickCounter
	f	F	a	tickDelta
	f	F	b	lastFrameDuration
	f	J	c	prevTimeMillis
	f	F	d	tickTime
	m	(FJ)V	<init>	<init>
		p	1	tps	tps
		p	2	timeMillis	timeMillis
	m	(J)I	a	beginRenderTick
		p	1	timeMillis	timeMillis
c	dmk	net/minecraft/client/options/StickyKeyBinding
	f	Ljava/util/function/BooleanSupplier;	a	toggleGetter
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1	id	id
		p	2	code	code
		p	3	category	category
		p	4	toggleGetter	toggleGetter
c	dml	net/minecraft/client/util/Session
	f	Ljava/lang/String;	a	username
	f	Ljava/lang/String;	b	uuid
	f	Ljava/lang/String;	c	accessToken
	f	Ldml$a;	d	accountType
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	username	username
		p	2	uuid	uuid
		p	3	accessToken	accessToken
		p	4	accountType	accountType
	m	()Ljava/lang/String;	a	getSessionId
	m	()Ljava/lang/String;	b	getUuid
	m	()Ljava/lang/String;	c	getUsername
	m	()Ljava/lang/String;	d	getAccessToken
	m	()Lcom/mojang/authlib/GameProfile;	e	getProfile
c	dml$a	net/minecraft/client/util/Session$AccountType
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Ldml$a;	a	byName
c	dmm	net/minecraft/client/color/block/BlockColorProvider
	m	(Lcfj;Lbpe;Lfu;I)I	getColor	getColor
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	tintIndex	tintIndex
c	dmn	net/minecraft/client/color/block/BlockColors
	f	Lge;	a	providers
	f	Ljava/util/Map;	b	properties
	m	(Lcfj;Lbqb;Lfu;)I	a	getColor
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lcfj;Lbpe;Lfu;I)I	a	getColor
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	tint	tint
	m	(Lcgl;[Lbvr;)V	a	registerColorProperty
		p	1	property	property
		p	2	blocks	blocks
	m	(Ljava/util/Set;[Lbvr;)V	a	registerColorProperties
		p	1	properties	properties
		p	2	blocks	blocks
	m	(Ldmm;[Lbvr;)V	a	registerColorProvider
		p	1	provider	provider
		p	2	blocks	blocks
	m	(Lbvr;)Ljava/util/Set;	a	getProperties
		p	1	block	block
	m	()Ldmn;	a	create
	m	(Lcfj;Lbpe;Lfu;I)I	b	method_1684
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	c	method_1696
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	d	method_1698
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	e	method_1685
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	f	method_1688
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	g	method_1694
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	h	method_1692
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	i	method_1687
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	j	method_1695
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	k	method_1693
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lcfj;Lbpe;Lfu;I)I	l	method_1686
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	tintIndex	tintIndex
c	dmo	net/minecraft/client/world/BiomeColorCache
	f	Ljava/lang/ThreadLocal;	a	last
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	b	colors
	f	Ljava/util/concurrent/locks/ReentrantReadWriteLock;	c	lock
	m	(Lfu;Ljava/util/function/IntSupplier;)I	a	getBiomeColor
		p	1	pos	pos
		p	2	colorFactory	colorFactory
	m	()V	a	reset
	m	(II)V	a	reset
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(II)[I	b	getColorArray
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
c	dmo$a	net/minecraft/client/world/BiomeColorCache$Last
	f	I	a	x
	f	I	b	z
	f	[I	c	colors
c	dmq	net/minecraft/client/color/item/ItemColorProvider
	m	(Lbki;I)I	getColor	getColor
		p	1	stack	stack
		p	2	tintIndex	tintIndex
c	dmr	net/minecraft/client/color/item/ItemColors
	f	Lge;	a	providers
	m	(Ldmn;)Ldmr;	a	create
		p	0	blockColors	blockColors
	m	(Lbki;I)I	a	getColorMultiplier
		p	1	item	item
		p	2	tintIndex	tintIndex
	m	(Lblh;Lbki;I)I	a	method_1699
		p	1	stack	stack
		p	2	tintIndex	tintIndex
	m	(Ldmn;Lbki;I)I	a	method_1702
		p	1	stack	stack
		p	2	tintIndex	tintIndex
	m	(Ldmq;[Lbqa;)V	a	register
		p	1	mapper	mapper
		p	2	items	items
	m	(Lbki;I)I	b	method_1709
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lbki;I)I	c	method_1703
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lbki;I)I	d	method_1705
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lbki;I)I	e	method_1700
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lbki;I)I	f	method_1701
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lbki;I)I	g	method_1707
		p	0	stack	stack
		p	1	tintIndex	tintIndex
c	dmt	net/minecraft/client/font/TextRenderer
	f	I	a	fontHeight
	f	Ljava/util/Random;	b	random
	f	Lg;	c	FORWARD_SHIFT
	f	Ljava/util/function/Function;	d	fontStorageAccessor
	f	Ldmi;	e	handler
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	fontStorageAccessor	fontStorageAccessor
	m	(Ldhl;Ljava/lang/String;FFIZ)I	a	drawWithShadow
		p	1	matrices	matrices
		p	2	text	text
		p	3	x	x
		p	4	y	y
		p	5	color	color
		p	6	rightToLeft	rightToLeft
	m	(Ldhl;Ljava/lang/String;FFI)I	a	drawWithShadow
		p	1	matrices	matrices
		p	2	text	text
		p	3	x	x
		p	4	y	y
		p	5	color	color
	m	(Lmu;IIII)V	a	drawTrimmed
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	maxWidth	maxWidth
		p	5	color	color
	m	(Lmu;FFILb;Z)I	a	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	matrix	matrix
		p	6	shadow	shadow
	m	(Lmu;I)Lmu;	a	trimToWidth
		p	1	text	text
		p	2	width	width
	m	(Ljava/lang/String;FFILb;ZZ)I	a	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	matrix	matrix
		p	6	shadow	shadow
		p	7	mirror	mirror
	m	(Luh;)Ldot;	a	getFontStorage
		p	1	id	id
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	trimToWidth
		p	1	text	text
		p	2	maxWidth	maxWidth
		p	3	backwards	backwards
	m	(Ljava/lang/String;FFIZLb;Lebz;ZII)I	a	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumers	vertexConsumers
		p	8	seeThrough	seeThrough
		p	9	backgroundColor	backgroundColor
		p	10	light	light
	m	(Ldhl;Lmu;FFI)I	a	drawWithShadow
		p	1	matrices	matrices
		p	2	text	text
		p	3	x	x
		p	4	y	y
		p	5	color	color
	m	(I)I	a	tweakTransparency
		p	0	argb	argb
	m	(Lmu;)I	a	getWidth
	m	()Z	a	isRightToLeft
	m	(Lmu;FFIZLb;Lebz;ZII)I	a	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumers	vertexConsumers
		p	8	seeThrough	seeThrough
		p	9	backgroundColor	backgroundColor
		p	10	light	light
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	trimToWidth
		p	1	text	text
		p	2	maxWidth	maxWidth
	m	(Ljava/lang/String;FFIZLb;Lebz;ZIIZ)I	a	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumers	vertexConsumers
		p	8	seeThrough	seeThrough
		p	9	backgroundColor	backgroundColor
		p	10	light	light
		p	11	rightToLeft	rightToLeft
	m	(Ldow;ZZFFFLb;Ldhp;FFFFI)V	a	drawGlyph
		p	1	glyphRenderer	glyphRenderer
		p	2	bold	bold
		p	3	italic	italic
		p	4	weight	weight
		p	5	x	x
		p	6	y	y
		p	7	matrix	matrix
		p	8	vertexConsumer	vertexConsumer
		p	9	red	red
		p	10	green	green
		p	11	blue	blue
		p	12	alpha	alpha
		p	13	light	light
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mirror
		p	1	text	text
	m	(Ljava/lang/String;I)I	b	getStringBoundedHeight
		p	1	text	text
		p	2	maxWidth	maxWidth
	m	(Ljava/lang/String;FFIZLb;Lebz;ZIIZ)I	b	drawInternal
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumers	vertexConsumers
		p	8	seeThrough	seeThrough
		p	9	backgroundColor	backgroundColor
		p	10	light	light
		p	11	mirror	mirror
	m	(Lmu;I)Ljava/util/List;	b	wrapLines
		p	1	text	text
		p	2	width	width
	m	(Ljava/lang/String;)I	b	getWidth
		p	1	text	text
	m	(Lmu;FFIZLb;Lebz;ZII)I	b	drawInternal
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumerProvider	vertexConsumerProvider
		p	8	seeThrough	seeThrough
		p	9	backgroundColor	backgroundColor
		p	10	light	light
	m	()Ldmi;	b	getTextHandler
	m	(Ldhl;Lmu;FFI)I	b	draw
		p	1	matrices	matrices
		p	2	text	text
		p	3	x	x
		p	4	y	y
		p	5	color	color
	m	(Ldhl;Ljava/lang/String;FFI)I	b	draw
		p	1	matrices	matrices
		p	2	text	text
		p	3	x	x
		p	4	y	y
		p	5	color	color
	m	(Ljava/lang/String;FFIZLb;Lebz;ZII)F	b	drawLayer
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumerProvider	vertexConsumerProvider
		p	8	seeThrough	seeThrough
		p	9	underlineColor	underlineColor
		p	10	light	light
	m	(Lmu;FFIZLb;Lebz;ZII)F	c	drawLayer
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumerProvider	vertexConsumerProvider
		p	8	seeThrough	seeThrough
		p	9	underlineColor	underlineColor
		p	10	light	light
c	dmt$a	net/minecraft/client/font/TextRenderer$ShadowDrawer
	f	Lebz;	a	vertexConsumers
	f	Z	c	shadow
	f	F	d	brightnessMultiplier
	f	F	e	red
	f	F	f	green
	f	F	g	blue
	f	F	h	alpha
	f	Lb;	i	matrix
	f	Z	j	seeThrough
	f	I	k	light
	f	F	l	x
	f	F	m	y
	f	Ljava/util/List;	n	rectangles
	m	(Ldmt;Lebz;FFIZLb;ZI)V	<init>	<init>
		p	2	vertexConsumers	vertexConsumers
		p	3	x	x
		p	4	y	y
		p	5	color	color
		p	6	shadow	shadow
		p	7	matrix	matrix
		p	8	seeThrough	seeThrough
		p	9	light	light
	m	(Ldow$a;)V	a	addRectangle
		p	1	rectangle	rectangle
	m	(IF)F	a	drawLayer
		p	1	underlineColor	underlineColor
		p	2	x	x
c	dmu	net/minecraft/client/gui/hud/InGameHud
	f	I	A	titleRemainTicks
	f	I	B	titleFadeOutTicks
	f	I	C	lastHealthValue
	f	I	D	renderHealthValue
	f	J	E	lastHealthCheckTime
	f	J	F	heartJumpEndTick
	f	I	G	scaledWidth
	f	I	H	scaledHeight
	f	Ljava/util/Map;	I	listeners
	f	F	a	vignetteDarkness
	f	Luh;	b	VIGNETTE_TEX
	f	Luh;	c	WIDGETS_TEX
	f	Luh;	d	PUMPKIN_BLUR
	f	Ljava/util/Random;	e	random
	f	Ldlx;	i	client
	f	Lehh;	j	itemRenderer
	f	Ldnj;	k	chatHud
	f	I	l	ticks
	f	Lmr;	m	overlayMessage
	f	I	n	overlayRemaining
	f	Z	o	overlayTinted
	f	I	p	heldItemTooltipFade
	f	Lbki;	q	currentStack
	f	Ldno;	r	debugHud
	f	Ldnz;	s	subtitlesHud
	f	Ldoi;	t	spectatorHud
	f	Ldnw;	u	playerListHud
	f	Ldnh;	v	bossBarHud
	f	I	w	titleTotalTicks
	f	Lmr;	x	title
	f	Lmr;	y	subtitle
	f	I	z	titleFadeInTicks
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Ldhl;Ldmt;III)V	a	drawTextBackground
	m	(Ldej;)Z	a	shouldRenderSpectatorCrosshair
	m	(F)V	a	renderPortalOverlay
	m	(I)I	a	getHeartRows
		p	1	heartCount	heartCount
	m	(Lmr;Lmr;III)V	a	setTitles
	m	(Ldhl;I)V	a	renderMountJumpBar
	m	(Ldhl;)V	a	renderStatusEffectOverlay
	m	(Laoy;)I	a	getHeartCount
		p	1	entity	entity
	m	()V	a	setDefaultTitleFade
	m	(Ldhl;Ldfj;)V	a	renderScoreboardSidebar
	m	(FLdhl;)V	a	renderHotbar
	m	(Ldhl;F)V	a	render
	m	(Lmo;Lmr;Ljava/util/UUID;)V	a	addChatMessage
		p	1	type	type
		p	2	text	text
		p	3	senderUuid	senderUuid
	m	(IIFLbec;Lbki;)V	a	renderHotbarItem
	m	(Lmr;)V	a	setRecordPlayingOverlay
	m	(Lmr;Z)V	a	setOverlayMessage
		p	1	message	message
		p	2	tinted	tinted
	m	(Laom;)V	a	updateVignetteDarkness
		p	1	entity	entity
	m	(Ldhl;I)V	b	renderExperienceBar
	m	()V	b	tick
	m	(Laom;)V	b	renderVignetteOverlay
	m	(Ldhl;)V	b	renderHeldItemTooltip
	m	(Ldhl;)V	c	renderDemoTimer
	m	()Ldnj;	c	getChatHud
	m	()I	d	getTicks
	m	(Ldhl;)V	d	renderCrosshair
	m	(Ldhl;)V	e	renderStatusBars
	m	()Ldmt;	e	getFontRenderer
	m	()Ldoi;	f	getSpectatorHud
	m	(Ldhl;)V	f	renderMountHealth
	m	()Ldnw;	g	getPlayerListWidget
	m	()V	h	clear
	m	()Ldnh;	i	getBossBarHud
	m	()V	j	resetDebugHudChunk
	m	()Lbec;	k	getCameraPlayer
	m	()Laoy;	l	getRiddenEntity
	m	()V	m	renderPumpkinOverlay
c	dmv	net/minecraft/client/gui/DrawableHelper
	f	I	a	zOffset
		c	The z offset used by {@link DrawableHelper}.
	f	Luh;	f	BACKGROUND_TEXTURE
		c	The texture used by options for background.
	f	Luh;	g	STATS_ICON_TEXTURE
		c	The texture of icons used in the stats screen.
	f	Luh;	h	GUI_ICONS_TEXTURE
		c	The texture of various icons and widgets used for rendering ingame indicators.
	m	(Ldhl;Ldmt;Ljava/lang/String;III)V	a	drawCenteredString
		p	1	matrices	matrices
		p	2	textRenderer	textRenderer
		p	3	text	text
		p	4	x	x
		p	5	y	y
		p	6	color	color
	m	(Ldhl;IIIIFFIIII)V	a	drawTexture
		c	Draws a textured rectangle from a region in a texture.
		p	0	matrices	matrices
			c	the matrix stack used for rendering
		p	1	x	x
			c	the X coordinate of the rectangle
		p	2	y	y
			c	the Y coordinate of the rectangle
		p	3	width	width
			c	the width of the rectangle
		p	4	height	height
			c	the height of the rectangle
		p	5	u	u
			c	the left-most coordinate of the texture region
		p	6	v	v
			c	the top-most coordinate of the texture region
		p	7	regionWidth	regionWidth
			c	the width of the texture region
		p	8	regionHeight	regionHeight
			c	the height of the texture region
		p	9	textureWidth	textureWidth
			c	the width of the entire texture
		p	10	textureHeight	textureHeight
			c	the height of the entire texture
	m	(Lb;IIIIIFFFF)V	a	drawTexturedQuad
		p	0	matrices	matrices
		p	1	x0	x0
		p	2	x1	x1
		p	3	y0	y0
		p	4	y1	y1
		p	5	z	z
		p	6	u0	u0
		p	7	u1	u1
		p	8	v0	v0
		p	9	v1	v1
	m	(Ldhl;IIIIIIIFFII)V	a	drawTexture
		p	0	matrices	matrices
		p	1	x0	x0
		p	2	y0	y0
		p	3	x1	x1
		p	4	y1	y1
		p	5	z	z
		p	6	regionWidth	regionWidth
		p	7	regionHeight	regionHeight
		p	8	u	u
		p	9	v	v
		p	10	textureWidth	textureWidth
		p	11	textureHeight	textureHeight
	m	(Ldhl;IIIIILelv;)V	a	drawSprite
		p	0	matrices	matrices
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	width	width
		p	5	height	height
		p	6	sprite	sprite
	m	(Ldhl;IIII)V	a	drawHorizontalLine
		p	1	matrices	matrices
		p	2	x1	x1
		p	3	x2	x2
		p	4	y	y
		p	5	color	color
	m	(Ldhl;IIFFIIII)V	a	drawTexture
		c	Draws a textured rectangle from a region in a texture.\n\n<p>The width and height of the region are the same as\nthe dimensions of the rectangle.
		p	0	matrices	matrices
			c	the matrix stack used for rendering
		p	1	x	x
			c	the X coordinate of the rectangle
		p	2	y	y
			c	the Y coordinate of the rectangle
		p	3	u	u
			c	the left-most coordinate of the texture region
		p	4	v	v
			c	the top-most coordinate of the texture region
		p	5	width	width
			c	the width of the rectangle
		p	6	height	height
			c	the height of the rectangle
		p	7	textureWidth	textureWidth
			c	the width of the entire texture
		p	8	textureHeight	textureHeight
			c	the height of the entire texture
	m	(Ldhl;IIIII)V	a	fill
		p	0	matrices	matrices
		p	1	x1	x1
		p	2	y1	y1
		p	3	x2	x2
		p	4	y2	y2
		p	5	color	color
	m	(Lb;IIIII)V	a	fill
		p	0	matrix	matrix
		p	1	x1	x1
		p	2	y1	y1
		p	3	x2	x2
		p	4	y2	y2
		p	5	color	color
	m	(Ldhl;IIIIII)V	a	fillGradient
		p	1	matrices	matrices
		p	2	xStart	xStart
		p	3	yStart	yStart
		p	4	xEnd	xEnd
		p	5	yEnd	yEnd
		p	6	colorStart	colorStart
		p	7	colorEnd	colorEnd
	m	(Ldhl;IIIFFIIII)V	a	drawTexture
		c	Draws a textured rectangle from a region in a texture.\n\n<p>The width and height of the region are the same as\nthe dimensions of the rectangle.
		p	0	matrices	matrices
			c	the matrix stack used for rendering
		p	1	x	x
			c	the X coordinate of the rectangle
		p	2	y	y
			c	the Y coordinate of the rectangle
		p	3	z	z
			c	the Z coordinate of the rectangle
		p	4	u	u
			c	the left-most coordinate of the texture region
		p	5	v	v
			c	the top-most coordinate of the texture region
		p	6	width	width
			c	the width of the rectangle
		p	7	height	height
			c	the height of the rectangle
		p	8	textureHeight	textureHeight
			c	the height of the entire texture
		p	9	textureWidth	textureWidth
			c	the width of the entire texture
	m	(Ldhl;Ldmt;Lmu;III)V	a	drawCenteredText
		p	1	matrices	matrices
		p	2	textRenderer	textRenderer
		p	4	x	x
		p	5	y	y
		p	6	color	color
	m	(Lb;Ldhg;IIIIIII)V	a	fillGradient
		p	2	xStart	xStart
		p	3	yStart	yStart
		p	4	xEnd	xEnd
		p	5	yEnd	yEnd
	m	(Ldhl;IIIIII)V	b	drawTexture
		c	Draws a textured rectangle from a region in a 256x256 texture.\n\n<p>The Z coordinate of the rectangle is {@link #zOffset}.\n\n<p>The width and height of the region are the same as\nthe dimensions of the rectangle.
		p	1	matrices	matrices
			c	the matrix stack used for rendering
		p	2	x	x
			c	the X coordinate of the rectangle
		p	3	y	y
			c	the Y coordinate of the rectangle
		p	4	u	u
			c	the left-most coordinate of the texture region
		p	5	v	v
			c	the top-most coordinate of the texture region
		p	6	width	width
			c	the width
		p	7	height	height
			c	the height
	m	(Ldhl;IIII)V	b	drawVerticalLine
		p	1	matrices	matrices
		p	2	x	x
		p	3	y1	y1
		p	4	y2	y2
		p	5	color	color
	m	(Ldhl;Ldmt;Lmu;III)V	b	drawTextWithShadow
		p	1	matrices	matrices
		p	2	textRenderer	textRenderer
		p	4	x	x
		p	5	y	y
		p	6	color	color
	m	(Ldhl;Ldmt;Ljava/lang/String;III)V	c	drawStringWithShadow
		p	1	matrices	matrices
		p	2	textRenderer	textRenderer
		p	3	text	text
		p	4	x	x
		p	5	y	y
		p	6	color	color
	m	(I)V	e	setZOffset
		p	1	zOffset	zOffset
	m	()I	o	getZOffset
c	dmw	net/minecraft/client/gui/MapRenderer
	f	Luh;	a	MAP_ICONS_TEXTURE
	f	Lelw;	c	textureManager
	f	Ljava/util/Map;	d	mapTextures
	m	(Ldmw$a;)Lczv;	a	getState
		p	1	texture	texture
	m	()V	a	clearStateTextures
	m	(Ldhl;Lebz;Lczv;ZI)V	a	draw
	m	(Ljava/lang/String;)Ldmw$a;	a	getTexture
	m	(Lczv;)V	a	updateTexture
	m	(Lczv;)Ldmw$a;	b	getMapTexture
c	dmw$a	net/minecraft/client/gui/MapRenderer$MapTexture
	f	Lczv;	b	mapState
	f	Lell;	c	texture
	m	(Ldhl;Lebz;ZI)V	a	draw
	m	()V	a	updateTexture
c	dmx	net/minecraft/client/gui/ClientChatListener
	m	(Lmo;Lmr;Ljava/util/UUID;)V	a	onChatMessage
		p	1	messageType	messageType
		p	2	message	message
		p	3	senderUuid	senderUuid
c	dmy	net/minecraft/client/util/NarratorManager
	f	Lmr;	a	EMPTY
	f	Ldmy;	b	INSTANCE
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lcom/mojang/text2speech/Narrator;	d	narrator
	m	()Z	a	isActive
	m	(Ldlz;)V	a	addToast
		p	1	option	option
	m	(Ljava/lang/String;)V	a	narrate
		p	1	text	text
	m	(ZLjava/lang/String;)V	a	narrate
		p	1	interrupt	interrupt
		p	2	message	message
	m	()V	b	clear
	m	()V	c	destroy
	m	()Ldlz;	d	getNarratorOption
c	dmz	net/minecraft/client/gui/GameInfoChatListener
	f	Ldlx;	a	client
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	dn	net/minecraft/command/arguments/NbtPathArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_PATH_NODE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	NOTHING_FOUND_EXCEPTION
	f	Ljava/util/Collection;	c	EXAMPLES
	m	()Ldn;	a	nbtPath
	m	(Lcom/mojang/brigadier/StringReader;)Ldn$h;	a	parse
	m	(C)Z	a	isNameCharacter
		p	0	c	c
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Ldn$i;	a	readCompoundChildNode
		p	0	reader	reader
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;Z)Ldn$i;	a	parseNode
		p	0	reader	reader
		p	1	root	root
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldn$h;	a	getNbtPath
		p	0	context	context
		p	1	name	name
	m	(Lle;)Ljava/util/function/Predicate;	b	getPredicate
		p	0	filter	filter
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readName
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
		p	1	reader	reader
c	dn$a	net/minecraft/command/arguments/NbtPathArgumentType$AllListElementNode
	f	Ldn$a;	a	INSTANCE
c	dn$b	net/minecraft/command/arguments/NbtPathArgumentType$NamedNode
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
c	dn$c	net/minecraft/command/arguments/NbtPathArgumentType$IndexedListElementNode
	f	I	a	index
	m	(I)V	<init>	<init>
		p	1	index	index
c	dn$e	net/minecraft/command/arguments/NbtPathArgumentType$FilteredListElementNode
	f	Lle;	a	filter
	f	Ljava/util/function/Predicate;	b	predicate
	m	(Lle;)V	<init>	<init>
		p	1	filter	filter
c	dn$f	net/minecraft/command/arguments/NbtPathArgumentType$FilteredNamedNode
	f	Ljava/lang/String;	a	name
	f	Lle;	b	filter
	f	Ljava/util/function/Predicate;	c	predicate
	m	(Ljava/lang/String;Lle;)V	<init>	<init>
		p	1	name	name
		p	2	filter	filter
c	dn$g	net/minecraft/command/arguments/NbtPathArgumentType$FilteredRootNode
	f	Ljava/util/function/Predicate;	a	matcher
	m	(Lle;)V	<init>	<init>
		p	1	filter	filter
c	dn$h	net/minecraft/command/arguments/NbtPathArgumentType$NbtPath
	f	Ljava/lang/String;	a	string
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	nodeEndIndices
	f	[Ldn$i;	c	nodes
	m	(Ljava/lang/String;[Ldn$i;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1	string	string
		p	2	nodes	nodes
		p	3	nodeEndIndices	nodeEndIndices
	m	(Ldn$i;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNothingFoundException
		p	1	node	node
	m	(Llu;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrInit
		p	1	tag	tag
		p	2	source	source
	m	(Llu;)Ljava/util/List;	a	get
		p	1	tag	tag
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	forEach
		p	0	tags	tags
		p	1	operation	operation
	m	(Llu;Ljava/util/function/Supplier;)I	b	put
		p	1	tag	tag
		p	2	source	source
	m	(Llu;)I	b	count
		p	1	tag	tag
	m	(Llu;)I	c	remove
		p	1	tag	tag
	m	(Llu;)Ljava/util/List;	d	getTerminals
		p	1	start	start
c	dn$i	net/minecraft/command/arguments/NbtPathArgumentType$PathNode
	m	(Ljava/util/List;)Ljava/util/List;	a	get
		p	1	tags	tags
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	process
		p	1	tags	tags
		p	2	action	action
	m	(Llu;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrInit
		p	1	current	current
		p	2	source	source
		p	3	results	results
	m	(Llu;Ljava/util/List;)V	a	get
		p	1	current	current
		p	2	results	results
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrInit
		p	1	tags	tags
		p	2	supplier	supplier
	m	(Ljava/util/function/Supplier;Llu;Ljava/util/List;)V	a	method_9379
		p	2	current	current
		p	3	results	results
	m	(Llu;)I	a	clear
		p	1	current	current
	m	(Llu;Ljava/util/function/Supplier;)I	a	set
		p	1	current	current
		p	2	source	source
	m	()Llu;	a	init
c	dna	net/minecraft/client/gui/hud/ChatListenerHud
	f	Ldlx;	a	client
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	dnc	net/minecraft/client/gui/widget/AbstractPressableButtonWidget
	m	()V	b	onPress
c	dnd	net/minecraft/client/gui/widget/OptionSliderWidget
	f	Ldmb;	a	options
	m	(Ldmb;IIIID)V	<init>	<init>
		p	1	options	options
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	value	value
c	dne	net/minecraft/client/gui/widget/EntryListWidget
	f	Ljava/util/List;	a	children
	f	Ldlx;	b	client
	f	I	c	itemHeight
	f	I	d	width
	f	I	e	height
	f	I	i	top
	f	I	j	bottom
	f	I	k	right
	f	I	l	left
	f	Z	m	centerListVertically
	f	I	n	headerHeight
	f	D	o	scrollAmount
	f	Z	p	renderSelection
	f	Z	q	renderHeader
	f	Z	r	scrolling
	f	Ldne$a;	s	selected
	m	(Ldlx;IIIII)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
		p	4	top	top
		p	5	bottom	bottom
		p	6	itemHeight	itemHeight
	m	(Ldhl;)V	a	renderBackground
		p	1	matrices	matrices
	m	(Ldne$a;)V	a	setSelected
		p	1	entry	entry
	m	(Ldne$b;)V	a	moveSelection
		p	1	direction	direction
	m	(IIII)V	a	updateSize
		p	1	width	width
		p	2	height	height
		p	3	top	top
		p	4	bottom	bottom
	m	(Ldhl;IILdhn;)V	a	renderHeader
		p	1	matrices	matrices
		p	2	x	x
		p	3	y	y
	m	(Ldhl;II)V	a	renderDecorations
	m	(Ldhl;IIIIF)V	a	renderList
		p	1	matrices	matrices
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
		p	6	delta	delta
	m	(ZI)V	a	setRenderHeader
		p	1	renderHeader	renderHeader
		p	2	headerHeight	headerHeight
	m	(I)V	a	scroll
		p	1	amount	amount
	m	(II)V	a	clickedHeader
		p	1	x	x
		p	2	y	y
	m	(Ldne$b;Ljava/util/function/Predicate;)V	a	moveSelectionIf
		c	Moves the selection in the specified direction until the predicate returns true.
		p	1	direction	direction
			c	The direction to move the selection.
	m	(D)V	a	setScrollAmount
		p	1	amount	amount
	m	(DD)Ldne$a;	a	getEntryAtPosition
		p	1	x	x
		p	3	y	y
	m	(Z)V	a	setRenderSelection
		p	1	renderSelection	renderSelection
	m	(Ljava/util/Collection;)V	a	replaceEntries
		p	1	newEntries	newEntries
	m	(DDI)V	b	updateScrollingState
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	()Z	b	isFocused
	m	(I)I	b	getRowBottom
		p	1	index	index
	m	(Ldne$a;)I	b	addEntry
		p	1	entry	entry
	m	(Ldne$a;)V	c	centerScrollOn
		p	1	entry	entry
	m	()I	c	getMaxPosition
	m	(I)Ldne$a;	d	getEntry
		p	1	index	index
	m	()I	d	getRowWidth
	m	(Ldne$a;)V	d	ensureVisible
		p	1	entry	entry
	m	()I	e	getScrollbarPositionX
	m	(Ldne$a;)Z	e	removeEntry
		p	1	entry	entry
	m	(I)Z	f	isSelectedItem
		p	1	index	index
	m	()I	f	getMaxScroll
	m	(Ldne$a;)Z	g	method_30014
		p	0	entry	entry
	m	(I)V	g	setLeftPos
		p	1	left	left
	m	(I)I	h	getRowTop
		p	1	index	index
	m	()Ldne$a;	h	getSelected
	m	()Ldne$a;	i	getFocused
	m	(I)Ldne$a;	i	remove
		p	1	index	index
	m	()V	k	clearEntries
	m	()I	l	getItemCount
	m	()D	m	getScrollAmount
	m	()I	q	getRowLeft
c	dne$a	net/minecraft/client/gui/widget/EntryListWidget$Entry
	f	Ldne;	a	list
	m	(Ldhl;IIIIIIIZF)V	a	render
		p	1	matrices	matrices
		p	2	index	index
		p	3	y	y
		p	4	x	x
		p	5	entryWidth	entryWidth
		p	6	entryHeight	entryHeight
		p	7	mouseX	mouseX
		p	8	mouseY	mouseY
		p	9	hovered	hovered
		p	10	tickDelta	tickDelta
c	dne$b	net/minecraft/client/gui/widget/EntryListWidget$MoveDirection
	c	Represents the direction in which the selection is moved.
	f	Ldne$b;	a	UP
	f	Ldne$b;	b	DOWN
c	dne$c	net/minecraft/client/gui/widget/EntryListWidget$Entries
	f	Ljava/util/List;	b	entries
	m	(I)Ldne$a;	a	get
	m	(ILdne$a;)Ldne$a;	a	set
	m	(ILjava/lang/Object;)V	add	add
		p	1	index	index
		p	2	entry	entry
	m	(ILdne$a;)V	b	add
	m	(I)Ldne$a;	b	remove
	m	(I)Ljava/lang/Object;	get	get
		p	1	index	index
	m	(I)Ljava/lang/Object;	remove	remove
		p	1	index	index
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
		p	2	entry	entry
c	dnf	net/minecraft/client/gui/widget/SliderWidget
	f	D	b	value
	m	(IIIILmr;D)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	6	value	value
	m	(D)V	a	setValueFromMouse
		p	1	mouseX	mouseX
	m	()V	a	applyValue
	m	(D)V	b	setValue
		p	1	mouseX	mouseX
	m	()V	b	updateMessage
c	dng	net/minecraft/client/gui/widget/AbstractButtonWidget
	f	Lmr;	a	message
	f	Z	b	wasHovered
	f	Z	c	focused
	f	Luh;	i	WIDGETS_LOCATION
	f	I	j	width
	f	I	k	height
	f	I	l	x
	f	I	m	y
	f	Z	n	hovered
	f	Z	o	active
	f	Z	p	visible
	f	F	q	alpha
	f	J	r	nextNarration
	m	(IIIILmr;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	message	message
	m	(Ldhl;II)V	a	renderToolTip
		p	1	matrices	matrices
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DDDD)V	a	onDrag
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	deltaX	deltaX
		p	7	deltaY	deltaY
	m	(Lepn;)V	a	playDownSound
		p	1	soundManager	soundManager
	m	(I)Z	a	isValidClickButton
		p	1	button	button
	m	(F)V	a	setAlpha
		p	1	value	value
	m	(Z)I	a	getYImage
		p	1	isHovered	isHovered
	m	(Ldhl;Ldlx;II)V	a	renderBg
		p	1	matrices	matrices
		p	2	client	client
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(DD)V	a	onClick
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Lmr;)V	a	setMessage
	m	(DD)V	a_	onRelease
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(I)V	b	setWidth
		p	1	value	value
	m	(Ldhl;IIF)V	b	renderButton
		p	1	matrices	matrices
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
		p	4	delta	delta
	m	(DD)Z	c	clicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	()Lmx;	c	getNarrationMessage
	m	(I)V	c	queueNarration
		p	1	delay	delay
	m	(Z)V	c	onFocusedChanged
	m	(Z)V	d	setFocused
		p	1	focused	focused
	m	()I	e	getHeight
	m	()V	f	narrate
	m	()Z	g	isHovered
	m	()I	h	getWidth
	m	()Lmr;	i	getMessage
	m	()Z	j	isFocused
c	dnh	net/minecraft/client/gui/hud/BossBarHud
	f	Luh;	a	BAR_TEX
	f	Ldlx;	b	client
	f	Ljava/util/Map;	c	bossBars
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	()V	a	clear
	m	(Ldhl;IILamw;)V	a	renderBossBar
	m	(Ldhl;)V	a	render
	m	(Lny;)V	a	handlePacket
		p	1	packet	packet
	m	()Z	c	shouldPlayDragonMusic
	m	()Z	d	shouldDarkenSky
	m	()Z	e	shouldThickenFog
c	dni	net/minecraft/client/gui/widget/ButtonWidget
	f	Ldni$b;	s	EMPTY
	f	Ldni$a;	t	onPress
	f	Ldni$b;	u	tooltipSupplier
	m	(IIIILmr;Ldni$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	message	message
		p	6	onPress	onPress
	m	(IIIILmr;Ldni$a;Ldni$b;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	message	message
		p	6	onPress	onPress
		p	7	tooltipSupplier	tooltipSupplier
	m	(Ldni;Ldhl;II)V	a	method_29045
		p	0	button	button
		p	1	matrices	matrices
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
c	dni$a	net/minecraft/client/gui/widget/ButtonWidget$PressAction
	m	(Ldni;)V	onPress	onPress
		p	1	button	button
c	dni$b	net/minecraft/client/gui/widget/ButtonWidget$TooltipSupplier
	m	(Ldni;Ldhl;II)V	onTooltip	onTooltip
		p	1	button	button
		p	2	matrices	matrices
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
c	dnj	net/minecraft/client/gui/hud/ChatHud
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldlx;	b	client
	f	Ljava/util/List;	c	messageHistory
	f	Ljava/util/List;	d	messages
	f	Ljava/util/List;	e	visibleMessages
	f	I	j	scrolledLines
	f	Z	k	hasUnreadNewMessages
	m	(Ljava/lang/String;)V	a	addToMessageHistory
		p	1	message	message
	m	(Z)V	a	clear
		p	1	clearHistory	clearHistory
	m	(D)V	a	scroll
		p	1	amount	amount
	m	(Lmr;)V	a	addMessage
		p	1	message	message
	m	(Lmr;I)V	a	addMessage
		p	1	message	message
		p	2	messageId	messageId
	m	()V	a	reset
	m	(I)V	a	removeMessage
		p	1	messageId	messageId
	m	(Lmu;IIZ)V	a	addMessage
		p	2	messageId	messageId
		p	3	timestamp	timestamp
	m	(Ldhl;I)V	a	render
	m	(DD)Lnb;	b	getText
		p	1	x	x
		p	3	y	y
	m	(D)I	b	getWidth
		p	0	widthOption	widthOption
	m	(I)D	b	getMessageOpacityMultiplier
		p	0	age	age
	m	()Ljava/util/List;	b	getMessageHistory
	m	()V	c	resetScroll
	m	(D)I	c	getHeight
		p	0	heightOption	heightOption
	m	()Z	d	isChatFocused
	m	()I	e	getWidth
	m	()I	f	getHeight
	m	()D	g	getChatScale
	m	()I	h	getVisibleLineCount
c	dnk	net/minecraft/client/gui/widget/CheckboxWidget
	f	Luh;	a	TEXTURE
	f	Z	b	checked
	m	(IIIILmr;Z)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	6	checked	checked
	m	()Z	a	isChecked
c	dnl	net/minecraft/client/gui/screen/CommandSuggestor
	f	Ljava/util/regex/Pattern;	a	BACKSLASH_S_PATTERN
	f	Ldlx;	b	client
	f	Ldqs;	c	owner
	f	Ldnp;	d	textField
	f	Ldmt;	e	textRenderer
	f	Z	f	slashRequired
	f	Z	g	suggestingWhenEmpty
	f	I	h	inWindowIndexOffset
	f	I	i	maxSuggestionSize
	f	Z	j	chatScreenSized
	f	I	k	color
	f	Ljava/util/List;	l	messages
	f	I	m	x
	f	I	n	width
	f	Lcom/mojang/brigadier/ParseResults;	o	parse
	f	Ljava/util/concurrent/CompletableFuture;	p	pendingSuggestions
	f	Ldnl$a;	q	window
	f	Z	r	windowActive
	f	Z	s	completingSuggestions
	m	(Ldlx;Ldqs;Ldnp;Ldmt;ZZIIZI)V	<init>	<init>
		p	1	client	client
		p	2	owner	owner
		p	3	textField	textField
		p	4	textRenderer	textRenderer
		p	5	slashRequired	slashRequired
		p	6	suggestingWhenEmpty	suggestingWhenEmpty
		p	7	inWindowIndexOffset	inWindowIndexOffset
		p	8	maxSuggestionSize	maxSuggestionSize
		p	9	chatScreenSized	chatScreenSized
		p	10	color	color
	m	(DDI)Z	a	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	()V	a	refresh
	m	(Z)V	a	setWindowActive
		p	1	windowActive	windowActive
	m	(Ldhl;II)V	a	render
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	provideRenderText
		p	1	original	original
		p	2	firstCharacterIndex	firstCharacterIndex
	m	(III)Z	a	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(Li;)V	a	showUsages
		p	1	formatting	formatting
	m	(D)Z	a	mouseScrolled
		p	1	amount	amount
	m	(Ljava/lang/String;)I	a	getLastPlayerNameStart
		p	0	input	input
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Ljava/lang/String;	a	highlight
		p	0	parse	parse
		p	1	original	original
		p	2	firstCharacterIndex	firstCharacterIndex
	m	(Z)V	b	showSuggestions
		p	1	narrateFirstSuggestion	narrateFirstSuggestion
	m	()V	b	show
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	getSuggestionSuffix
		p	0	original	original
		p	1	suggestion	suggestion
c	dnl$a	net/minecraft/client/gui/screen/CommandSuggestor$SuggestionWindow
	f	Lece;	b	area
	f	Ljava/lang/String;	c	typedText
	f	I	e	inWindowIndex
	f	I	f	selection
	f	Ldel;	g	mouse
	f	Z	h	completed
	f	I	i	lastNarrationIndex
	m	(Ldnl;IIILjava/util/List;Z)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	6	narrateFirstSuggestion	narrateFirstSuggestion
	m	(I)V	a	scroll
		p	1	offset	offset
	m	()V	a	complete
	m	(Ldhl;II)V	a	render
	m	(D)Z	a	mouseScrolled
		p	1	amount	amount
	m	(III)Z	a	mouseClicked
		p	1	x	x
		p	2	y	y
		p	3	button	button
	m	(III)Z	b	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	()V	b	discard
	m	(I)V	b	select
		p	1	index	index
	m	()Ljava/lang/String;	c	getNarration
c	dnm	net/minecraft/client/util/ChatMessages
	m	(Lmu;ILdmt;)Ljava/util/List;	a	breakRenderedChatMessageLines
		p	1	width	width
		p	2	textRenderer	textRenderer
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getRenderedChatMessage
		p	0	message	message
c	dnn	net/minecraft/client/gui/widget/ElementListWidget
c	dnn$a	net/minecraft/client/gui/widget/ElementListWidget$Entry
	f	Ldof;	a	focused
	f	Z	b	dragging
c	dno	net/minecraft/client/gui/hud/DebugHud
	f	Ljava/util/Map;	a	HEIGHT_MAP_TYPES
	f	Ldlx;	b	client
	f	Ldmt;	c	fontRenderer
	f	Ldej;	d	blockHit
	f	Ldej;	e	fluidHit
	f	Lbph;	i	pos
	f	Lchj;	j	chunk
	f	Ljava/util/concurrent/CompletableFuture;	k	chunkFuture
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	propertyToString
		p	1	propEntry	propEntry
	m	(J)J	a	toMiB
		p	0	bytes	bytes
	m	(IIII)I	a	getMetricsLineColor
		p	1	value	value
		p	2	greenValue	greenValue
		p	3	yellowValue	yellowValue
		p	4	redValue	redValue
	m	()V	a	resetChunk
	m	(Ldhl;Lads;IIZ)V	a	drawMetricsData
	m	(Ldhl;)V	a	render
	m	(IIF)I	a	interpolateColor
		p	1	color1	color1
		p	2	color2	color2
		p	3	dt	dt
	m	()Ljava/util/List;	b	getLeftText
	m	(Ldhl;)V	b	renderLeftText
	m	()Ljava/util/List;	c	getRightText
	m	(Ldhl;)V	c	renderRightText
	m	()Lzd;	d	getServerWorld
	m	()Lbqb;	f	getWorld
	m	()Lchj;	g	getChunk
	m	()Lchj;	h	getClientChunk
c	dnp	net/minecraft/client/gui/widget/TextFieldWidget
	f	Ljava/lang/String;	A	suggestion
	f	Ljava/util/function/Consumer;	B	changedListener
	f	Ljava/util/function/Predicate;	C	textPredicate
	f	Ljava/util/function/BiFunction;	D	renderTextProvider
	f	Ldmt;	a	textRenderer
	f	Ljava/lang/String;	b	text
	f	I	c	maxLength
	f	I	d	focusedTicks
	f	Z	e	focused
	f	Z	s	focusUnlocked
	f	Z	t	editable
	f	Z	u	selecting
	f	I	v	firstCharacterIndex
	f	I	w	selectionStart
	f	I	x	selectionEnd
	f	I	y	editableColor
	f	I	z	uneditableColor
	m	(Ldmt;IIIILdnp;Lmr;)V	<init>	<init>
		p	1	textRenderer	textRenderer
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	copyFrom	copyFrom
	m	(Ldmt;IIIILmr;)V	<init>	<init>
		p	1	textRenderer	textRenderer
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
	m	(Ljava/util/function/BiFunction;)V	a	setRenderTextProvider
		p	1	renderTextProvider	renderTextProvider
	m	(Ljava/util/function/Consumer;)V	a	setChangedListener
		p	1	changedListener	changedListener
	m	(Ljava/lang/String;)V	a	setText
		p	1	text	text
	m	(II)I	a	getWordSkipPosition
		p	1	wordOffset	wordOffset
		p	2	cursorPosition	cursorPosition
	m	()V	a	tick
	m	(IIII)V	a	drawSelectionHighlight
		p	1	x1	x1
		p	2	y1	y1
		p	3	x2	x2
		p	4	y2	y2
	m	(IIZ)I	a	getWordSkipPosition
		p	1	wordOffset	wordOffset
		p	2	cursorPosition	cursorPosition
		p	3	skipOverSpaces	skipOverSpaces
	m	(Ljava/util/function/Predicate;)V	a	setTextPredicate
		p	1	textPredicate	textPredicate
	m	()Ljava/lang/String;	b	getText
	m	(Ljava/lang/String;)V	b	write
	m	(Ljava/lang/String;)V	c	setSuggestion
		p	1	suggestion	suggestion
	m	(I)V	d	eraseWords
		p	1	wordOffset	wordOffset
	m	()Ljava/lang/String;	d	getSelectedText
	m	(Ljava/lang/String;)V	d	onChanged
		p	1	newText	newText
	m	(Z)V	e	setSelected
		p	1	selected	selected
	m	(Z)V	f	setHasBorder
		p	1	hasBorder	hasBorder
	m	(I)V	f	eraseCharacters
		p	1	characterOffset	characterOffset
	m	(I)I	g	getWordSkipPosition
		p	1	wordOffset	wordOffset
	m	(Z)V	g	setEditable
		p	1	editable	editable
	m	(I)V	h	moveCursor
		p	1	offset	offset
	m	(Z)V	h	setFocusUnlocked
		p	1	focusUnlocked	focusUnlocked
	m	(Z)V	i	setVisible
		p	1	visible	visible
	m	(I)V	i	setCursor
		p	1	cursor	cursor
	m	(I)V	j	setSelectionStart
		p	1	cursor	cursor
	m	(I)V	k	setMaxLength
		p	1	maxLength	maxLength
	m	()V	k	setCursorToStart
	m	()V	l	setCursorToEnd
	m	(I)V	l	setEditableColor
		p	1	color	color
	m	()Z	m	isActive
	m	(I)V	m	setUneditableColor
		p	1	color	color
	m	(I)V	n	setSelectionEnd
	m	()I	n	getCursor
	m	(I)I	o	getCharacterX
		p	1	index	index
	m	()I	p	getInnerWidth
	m	(I)V	p	setX
		p	1	x	x
	m	()Z	q	isVisible
	m	(I)V	q	erase
		p	1	offset	offset
	m	()I	r	getMaxLength
	m	()Z	s	hasBorder
	m	()Z	t	isEditable
c	dnq	net/minecraft/client/gui/widget/TexturedButtonWidget
	f	Luh;	a	texture
	f	I	b	u
	f	I	c	v
	f	I	d	hoveredVOffset
	f	I	e	textureWidth
	f	I	v	textureHeight
	m	(IIIIIIILuh;IILdni$a;Lmr;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	u	u
		p	6	v	v
		p	7	hoveredVOffset	hoveredVOffset
		p	8	texture	texture
		p	9	textureWidth	textureWidth
		p	10	textureHeight	textureHeight
		p	11	pressAction	pressAction
	m	(IIIIIIILuh;IILdni$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	u	u
		p	6	v	v
		p	7	hoveredVOffset	hoveredVOffset
		p	8	texture	texture
		p	9	textureWidth	textureWidth
		p	10	textureHeight	textureHeight
		p	11	pressAction	pressAction
	m	(IIIIIIILuh;Ldni$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	u	u
		p	6	v	v
		p	7	hoveredVOffset	hoveredVOffset
		p	8	texture	texture
		p	9	pressAction	pressAction
	m	(II)V	a	setPos
		p	1	x	x
		p	2	y	y
c	dnr	net/minecraft/client/gui/hud/ClientBossBar
	f	F	h	healthLatest
	f	J	i	timeHealthSet
	m	(Lny;)V	<init>	<init>
		p	1	packet	packet
	m	(Lny;)V	a	handlePacket
		p	1	packet	packet
c	dns	net/minecraft/client/gui/widget/LockButtonWidget
	f	Z	a	locked
	m	(IILdni$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	action	action
	m	()Z	a	isLocked
	m	(Z)V	e	setLocked
		p	1	locked	locked
c	dns$a	net/minecraft/client/gui/widget/LockButtonWidget$IconLocation
	f	I	g	u
	f	I	h	v
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	1	v	v
	m	()I	a	getU
	m	()I	b	getV
c	dnt	net/minecraft/client/gui/widget/AlwaysSelectedEntryListWidget
	f	Z	a	inFocus
c	dnt$a	net/minecraft/client/gui/widget/AlwaysSelectedEntryListWidget$Entry
c	dnu	net/minecraft/client/gui/widget/OptionButtonWidget
	f	Ldma;	a	option
	m	(IIIILdma;Lmr;Ldni$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	option	option
		p	7	pressAction	pressAction
	m	()Ldma;	a	getOption
c	dnv	net/minecraft/client/gui/widget/ButtonListWidget
	m	([Ldma;)V	a	addAll
		p	1	options	options
	m	(Ldma;Ldma;)V	a	addOptionEntry
		p	1	firstOption	firstOption
		p	2	secondOption	secondOption
	m	(Ldma;)I	a	addSingleOptionEntry
		p	1	option	option
	m	(DD)Ljava/util/Optional;	c	getHoveredButton
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
c	dnv$a	net/minecraft/client/gui/widget/ButtonListWidget$ButtonEntry
	f	Ljava/util/List;	a	buttons
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	buttons	buttons
	m	(Ldmb;ILdma;Ldma;)Ldnv$a;	a	create
		p	0	options	options
		p	1	width	width
		p	2	firstOption	firstOption
		p	3	secondOption	secondOption
	m	(ILdhl;IIFLdng;)V	a	method_18622
		p	5	button	button
	m	(Ldmb;ILdma;)Ldnv$a;	a	create
		p	0	options	options
		p	1	width	width
		p	2	option	option
c	dnw	net/minecraft/client/gui/hud/PlayerListHud
	f	Lcom/google/common/collect/Ordering;	a	ENTRY_ORDERING
	f	Ldlx;	b	client
	f	Ldmu;	c	inGameHud
	f	Lmr;	d	footer
	f	Lmr;	e	header
	f	J	i	showTime
	f	Z	j	visible
	m	(Ldlx;Ldmu;)V	<init>	<init>
		p	1	client	client
		p	2	inGameHud	inGameHud
	m	(Z)V	a	tick
		p	1	visible	visible
	m	()V	a	clear
	m	(Ldhl;IIILdyq;)V	a	renderLatencyIcon
	m	(Lmr;)V	a	setFooter
		p	1	footer	footer
	m	(Ldfj;ILjava/lang/String;IILdyq;Ldhl;)V	a	renderScoreboardObjective
	m	(Ldhl;ILdfm;Ldfj;)V	a	render
	m	(Ldyq;)Lmr;	a	getPlayerName
	m	(Lmr;)V	b	setHeader
		p	1	header	header
c	dnw$a	net/minecraft/client/gui/hud/PlayerListHud$EntryOrderComparator
	m	(Ldyq;Ldyq;)I	a	compare
c	dnx	net/minecraft/client/gui/widget/DoubleOptionSliderWidget
	f	Ldmd;	c	option
	m	(Ldmb;IIIILdmd;)V	<init>	<init>
		p	1	gameOptions	gameOptions
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	option	option
c	dny	net/minecraft/client/gui/widget/ToggleButtonWidget
	f	Luh;	a	texture
	f	Z	b	toggled
	f	I	c	u
	f	I	d	v
	f	I	e	pressedUOffset
	f	I	s	hoverVOffset
	m	(IIIIZ)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	toggled	toggled
	m	()Z	a	isToggled
	m	(IIIILuh;)V	a	setTextureUV
		p	1	u	u
		p	2	v	v
		p	3	pressedUOffset	pressedUOffset
		p	4	hoverVOffset	hoverVOffset
		p	5	texture	texture
	m	(II)V	a	setPos
		p	1	x	x
		p	2	y	y
	m	(Z)V	e	setToggled
		p	1	toggled	toggled
c	dnz	net/minecraft/client/gui/hud/SubtitlesHud
	f	Ldlx;	a	client
	f	Ljava/util/List;	b	entries
	f	Z	c	enabled
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Ldhl;)V	a	render
c	dnz$a	net/minecraft/client/gui/hud/SubtitlesHud$SubtitleEntry
	f	Lmr;	b	text
	f	J	c	time
	f	Ldem;	d	pos
	m	(Ldnz;Lmr;Ldem;)V	<init>	<init>
		p	3	pos	pos
	m	(Ldem;)V	a	reset
		p	1	pos	pos
	m	()Lmr;	a	getText
	m	()J	b	getTime
	m	()Ldem;	c	getPosition
c	doa	net/minecraft/client/gui/screen/TickableElement
	m	()V	d	tick
c	dob	net/minecraft/client/gui/widget/SoundSliderWidget
	f	Lacm;	c	category
	m	(Ldlx;IILacm;I)V	<init>	<init>
		p	1	client	client
		p	2	x	x
		p	3	y	y
		p	4	category	category
		p	5	width	width
c	doc	net/minecraft/client/gui/Drawable
	m	(Ldhl;IIF)V	a	render
		p	1	matrices	matrices
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
		p	4	delta	delta
c	dod	net/minecraft/client/gui/AbstractParentElement
	f	Ldof;	a	focused
	f	Z	b	isDragging
c	doe	net/minecraft/client/gui/ParentElement
	m	(Ldof;)V	a	setFocused
		p	1	focused	focused
	m	()Ljava/util/List;	av_	children
	m	()Z	aw_	isDragging
	m	(Ldof;)V	b	setInitialFocus
		p	1	element	element
	m	(Z)V	b_	setDragging
		p	1	dragging	dragging
	m	(Ldof;)V	c	focusOn
		p	1	element	element
	m	(DD)Ljava/util/Optional;	d	hoveredElement
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	()Ldof;	r	getFocused
c	dof	net/minecraft/client/gui/Element
	m	(CI)Z	a	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(DDI)Z	a	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	a	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(III)Z	a	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDD)Z	a	mouseScrolled
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	amount	amount
	m	(DD)Z	b	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(III)Z	b	keyReleased
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	c	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(Z)Z	c_	changeFocus
		p	1	lookForwards	lookForwards
	m	(DD)V	e	mouseMoved
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
c	doi	net/minecraft/client/gui/hud/SpectatorHud
	f	Luh;	a	SPECTATOR_TEX
	f	Luh;	b	WIDGETS_TEX
	f	Ldlx;	c	client
	f	J	d	lastInteractionTime
	f	Lduj;	e	spectatorMenu
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	()Z	a	isOpen
	m	(I)V	a	selectSlot
		p	1	slot	slot
	m	(Ldhl;F)V	a	render
	m	(Ldhl;FIILdun;)V	a	renderSpectatorMenu
	m	(Ldhl;)V	a	render
	m	(Ldhl;IIFFLdul;)V	a	renderSpectatorCommand
	m	(D)V	a	cycleSlot
		p	1	offset	offset
	m	()V	b	useSelectedCommand
	m	()F	c	getSpectatorMenuHeight
c	dok	net/minecraft/client/toast/AdvancementToast
	f	Lw;	c	advancement
	f	Z	d	soundPlayed
	m	(Lw;)V	<init>	<init>
		p	1	advancement	advancement
c	dol	net/minecraft/client/toast/RecipeToast
	f	Ljava/util/List;	c	recipes
	f	J	d	startTime
	f	Z	e	justUpdated
	m	(Lbmu;)V	<init>	<init>
		p	1	recipes	recipes
	m	(Lbmu;)V	a	addRecipes
		p	1	recipes	recipes
	m	(Ldoo;Lbmu;)V	a	show
		p	0	manager	manager
		p	1	recipes	recipes
c	dom	net/minecraft/client/toast/SystemToast
	f	Ldom$a;	c	type
	f	Lmu;	d	title
	f	J	f	startTime
	f	Z	g	justUpdated
	m	(Lmr;Lmr;)V	a	setContent
		p	1	title	title
		p	2	description	description
	m	(Ldoo;Ldom$a;Lmr;Lmr;)V	a	add
		p	0	manager	manager
		p	1	type	type
		p	2	title	title
		p	3	description	description
	m	(Ldlx;Ljava/lang/String;)V	a	addWorldAccessFailureToast
		p	0	client	client
		p	1	worldName	worldName
	m	()Ldom$a;	b	getType
	m	(Ldoo;Ldom$a;Lmr;Lmr;)V	b	show
		p	0	manager	manager
		p	1	type	type
		p	2	title	title
		p	3	description	description
	m	(Ldlx;Ljava/lang/String;)V	b	addWorldDeleteFailureToast
		p	0	client	client
		p	1	worldName	worldName
c	dom$a	net/minecraft/client/toast/SystemToast$Type
c	don	net/minecraft/client/toast/Toast
	f	Luh;	a	TOASTS_TEX
	f	Ljava/lang/Object;	b	TYPE
	m	(Ldhl;Ldoo;J)Ldon$a;	a	draw
		p	1	matrices	matrices
		p	2	manager	manager
		p	3	startTime	startTime
	m	()Ljava/lang/Object;	c	getType
c	don$a	net/minecraft/client/toast/Toast$Visibility
	f	Lack;	c	sound
	m	(Ljava/lang/String;ILack;)V	<init>	<init>
		p	3	sound	sound
	m	(Lepn;)V	a	playSound
		p	1	soundManager	soundManager
c	doo	net/minecraft/client/toast/ToastManager
	f	Ldlx;	a	client
	f	[Ldoo$a;	b	visibleEntries
	f	Ljava/util/Deque;	c	toastQueue
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	()V	a	clear
	m	(Ljava/lang/Class;Ljava/lang/Object;)Ldon;	a	getToast
		p	1	toastClass	toastClass
		p	2	type	type
	m	(Ldhl;)V	a	draw
		p	1	matrices	matrices
	m	(Ldon;)V	a	add
		p	1	toast	toast
	m	()Ldlx;	b	getGame
c	doo$a	net/minecraft/client/toast/ToastManager$Entry
	f	Ldon;	b	instance
	f	Ldon$a;	e	visibility
	m	(Ldoo;Ldon;)V	<init>	<init>
		p	1	instance	instance
		p	2	toast	toast
	m	(J)F	a	getDisappearProgress
		p	1	time	time
	m	()Ldon;	a	getInstance
	m	(IILdhl;)Z	a	draw
		p	1	x	x
		p	2	y	y
		p	3	matrices	matrices
c	dop	net/minecraft/client/toast/TutorialToast
	f	Ldop$a;	c	type
	f	Lmr;	d	title
	f	Lmr;	e	description
	f	Ldon$a;	f	visibility
	f	J	g	lastTime
	f	F	h	lastProgress
	f	F	i	progress
	f	Z	j	hasProgressBar
	m	(Ldop$a;Lmr;Lmr;Z)V	<init>	<init>
		p	1	type	type
		p	2	title	title
		p	3	description	description
		p	4	hasProgressBar	hasProgressBar
	m	(F)V	a	setProgress
		p	1	progress	progress
	m	()V	b	hide
c	dop$a	net/minecraft/client/toast/TutorialToast$Type
	f	I	f	textureSlotX
	f	I	g	textureSlotY
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3	textureSlotX	textureSlotX
		p	4	textureSlotY	textureSlotY
	m	(Ldhl;Ldmv;II)V	a	drawIcon
		p	1	matrices	matrices
		p	2	helper	helper
		p	3	x	x
		p	4	y	y
c	dor	net/minecraft/client/font/BlankFont
c	dos	net/minecraft/client/font/FontManager
	f	Luh;	a	MISSING_STORAGE_ID
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ldot;	c	missingStorage
	f	Ljava/util/Map;	d	fontStorages
	f	Lelw;	e	textureManager
	f	Ljava/util/Map;	f	idOverrides
	f	Laax;	g	resourceReloadListener
	m	(Lelw;)V	<init>	<init>
		p	1	manager	manager
	m	()Ldmt;	a	createTextRenderer
	m	(Ljava/util/Map;)V	a	setIdOverrides
		p	1	overrides	overrides
	m	()Laax;	b	getResourceReloadListener
c	dos$1	net/minecraft/client/font/FontManager$1
	m	(Ljava/util/Map;Labc;Lami;)V	a	apply
	m	(Labc;Lami;)Ljava/util/Map;	a	prepare
c	dot	net/minecraft/client/font/FontStorage
	f	Ldox;	a	EMPTY_GLYPH_RENDERER
	f	Ldfz;	b	SPACE
	f	Ljava/util/Random;	c	RANDOM
	f	Lelw;	d	textureManager
	f	Luh;	e	id
	f	Ldow;	f	blankGlyphRenderer
	f	Ldow;	g	whiteRectangleGlyphRenderer
	f	Ljava/util/List;	h	fonts
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	i	glyphRendererCache
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	j	glyphCache
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	k	charactersByWidth
	f	Ljava/util/List;	l	glyphAtlases
	m	(Lelw;Luh;)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	id	id
	m	()Ldow;	a	getRectangleRenderer
	m	(I)Ldfz;	a	getGlyph
	m	(Ldfz;)Ldow;	a	getObfuscatedGlyphRenderer
		p	1	glyph	glyph
	m	(Ljava/util/List;)V	a	setFonts
		p	1	fonts	fonts
	m	(Ldgb;)Ldow;	a	getGlyphRenderer
		p	1	c	c
	m	(I)Ldow;	b	getGlyphRenderer
	m	()V	c	closeGlyphAtlases
	m	(I)Ldgb;	c	getRenderableGlyph
c	dou	net/minecraft/client/font/GlyphAtlasTexture
	f	Luh;	d	id
	f	Z	g	hasColor
	f	Ldou$a;	h	rootSlot
	m	(Luh;Z)V	<init>	<init>
		p	1	id	id
		p	2	hasColor	hasColor
	m	()Luh;	a	getId
	m	(Ldgb;)Ldow;	a	getGlyphRenderer
		p	1	glyph	glyph
c	dou$a	net/minecraft/client/font/GlyphAtlasTexture$Slot
	f	I	a	x
	f	I	b	y
	f	I	c	width
	f	I	d	height
	f	Ldou$a;	e	subSlot1
	f	Ldou$a;	f	subSlot2
	f	Z	g	occupied
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Ldgb;)Ldou$a;	a	findSlotFor
		p	1	glyph	glyph
c	dov	net/minecraft/client/util/SelectionManager
	f	Ljava/util/function/Supplier;	a	stringGetter
	f	Ljava/util/function/Consumer;	b	stringSetter
	f	Ljava/util/function/Supplier;	c	clipboardGetter
	f	Ljava/util/function/Consumer;	d	clipboardSetter
	f	Ljava/util/function/Predicate;	e	stringFilter
	f	I	f	selectionStart
	f	I	g	selectionEnd
	m	(Ldlx;)Ljava/util/function/Supplier;	a	makeClipboardGetter
		p	0	client	client
	m	(C)Z	a	insert
		p	1	c	c
	m	()V	a	cut
	m	(Z)V	a	updateSelectionRange
		p	1	shiftDown	shiftDown
	m	(I)Z	a	handleSpecialKey
		p	1	keyCode	keyCode
	m	(Ldlx;Ljava/lang/String;)V	a	setClipboard
		p	0	client	client
	m	(IZ)V	a	moveCursor
		p	1	offset	offset
		p	2	shiftDown	shiftDown
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	insert
		p	1	string	string
		p	2	insertion	insertion
	m	(Ljava/lang/String;)V	a	insert
	m	()V	b	paste
	m	(Ldlx;)Ljava/lang/String;	b	getClipboard
		p	0	client	client
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getSelectedText
	m	(IZ)V	b	moveCursorPastWord
		p	1	offset	offset
		p	2	shiftDown	shiftDown
	m	(Ljava/lang/String;)Ljava/lang/String;	c	deleteSelectedText
	m	()V	c	copy
	m	(Ldlx;)Ljava/util/function/Consumer;	c	makeClipboardSetter
		p	0	client	client
	m	(I)V	d	delete
		p	1	cursorOffset	cursorOffset
	m	()V	d	selectAll
	m	()V	f	moveCaretToEnd
	m	()I	g	getSelectionStart
	m	()I	h	getSelectionEnd
c	dow	net/minecraft/client/font/GlyphRenderer
	f	F	c	uMin
	f	F	d	uMax
	f	F	e	vMin
	f	F	f	vMax
	f	F	g	xMin
	f	F	h	xMax
	f	F	i	yMin
	f	F	j	yMax
	m	(ZFFLb;Ldhp;FFFFI)V	a	draw
		p	1	italic	italic
		p	2	x	x
		p	3	y	y
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
		p	9	alpha	alpha
		p	10	light	light
	m	(Ldow$a;Lb;Ldhp;I)V	a	drawRectangle
		p	1	rectangle	rectangle
		p	2	matrix	matrix
		p	3	vertexConsumer	vertexConsumer
		p	4	light	light
c	dow$a	net/minecraft/client/font/GlyphRenderer$Rectangle
	f	F	a	xMin
	f	F	b	yMin
	f	F	c	xMax
	f	F	d	yMax
	f	F	e	zIndex
	f	F	f	red
	f	F	g	green
	f	F	h	blue
	f	F	i	alpha
	m	(FFFFFFFFF)V	<init>	<init>
		p	1	xMin	xMin
		p	2	yMin	yMin
		p	3	xMax	xMax
		p	4	yMax	yMax
		p	5	zIndex	zIndex
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
		p	9	alpha	alpha
c	dox	net/minecraft/client/font/EmptyGlyphRenderer
c	doy	net/minecraft/client/font/BlankGlyph
	f	Ldgs;	b	IMAGE
c	doz	net/minecraft/client/font/WhiteRectangleGlyph
	f	Ldgs;	b	IMAGE
c	dp	net/minecraft/command/arguments/NbtTagArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Llu;	a	getTag
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Llu;	a	parse
	m	()Ldp;	a	nbtTag
c	dpc	net/minecraft/client/font/TextureFont
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldgs;	b	image
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	glyphs
	m	(Ldgs;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;)V	<init>	<init>
		p	1	image	image
c	dpc$a	net/minecraft/client/font/TextureFont$Loader
	f	Luh;	a	filename
	f	Ljava/util/List;	b	chars
	f	I	c	height
	f	I	d	ascent
	m	(Luh;IILjava/util/List;)V	<init>	<init>
		p	1	id	id
		p	2	height	height
		p	3	ascent	ascent
		p	4	chars	chars
	m	(Lcom/google/gson/JsonObject;)Ldpc$a;	a	fromJson
		p	0	json	json
	m	(Ldgs;IIII)I	a	findCharacterStartX
		p	1	image	image
		p	2	characterWidth	characterWidth
		p	3	characterHeight	characterHeight
		p	4	charPosX	charPosX
		p	5	charPosY	charPosY
c	dpc$b	net/minecraft/client/font/TextureFont$TextureFontGlyph
	f	F	a	scaleFactor
	f	Ldgs;	b	image
	f	I	c	x
	f	I	d	y
	f	I	e	width
	f	I	f	height
	f	I	g	advance
	f	I	h	ascent
	m	(FLdgs;IIIIII)V	<init>	<init>
		p	1	scaleFactor	scaleFactor
		p	2	image	image
		p	3	x	x
		p	4	y	y
		p	5	width	width
		p	6	height	height
		p	7	advance	advance
		p	8	ascent	ascent
c	dpd	net/minecraft/client/font/FontLoader
	m	(Labc;)Ldga;	a	load
		p	1	manager	manager
c	dpe	net/minecraft/client/font/FontType
	f	Ljava/util/Map;	d	REGISTRY
	f	Ljava/lang/String;	e	id
	f	Ljava/util/function/Function;	f	loaderFactory
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	3	id	id
		p	4	factory	factory
	m	(Lcom/google/gson/JsonObject;)Ldpd;	a	createLoader
		p	1	json	json
	m	(Ljava/lang/String;)Ldpe;	a	byId
		p	0	id	id
c	dpf	net/minecraft/client/font/UnicodeTextureFont
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Labc;	b	resourceManager
	f	[B	c	sizes
	f	Ljava/lang/String;	d	template
	f	Ljava/util/Map;	e	images
	m	(Labc;[BLjava/lang/String;)V	<init>	<init>
		p	1	resourceManager	resourceManager
		p	2	sizes	sizes
		p	3	template	template
	m	(B)I	a	getStart
		p	0	size	size
	m	(Luh;)Ldgs;	a	getGlyphImage
		p	1	glyphId	glyphId
	m	(I)Luh;	b	getImageId
	m	(B)I	b	getEnd
		p	0	size	size
c	dpf$a	net/minecraft/client/font/UnicodeTextureFont$Loader
	f	Luh;	a	sizes
	f	Ljava/lang/String;	b	template
	m	(Luh;Ljava/lang/String;)V	<init>	<init>
		p	1	sizes	sizes
		p	2	template	template
	m	(Lcom/google/gson/JsonObject;)Ldpd;	a	fromJson
		p	0	json	json
c	dpf$b	net/minecraft/client/font/UnicodeTextureFont$UnicodeTextureGlyph
	f	I	a	width
	f	I	b	height
	f	I	c	unpackSkipPixels
	f	I	d	unpackSkipRows
	f	Ldgs;	e	image
	m	(IIIILdgs;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	image	image
c	dpg	net/minecraft/client/font/TrueTypeFontLoader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	filename
	f	F	c	size
	f	F	d	oversample
	f	F	e	shiftX
	f	F	f	shiftY
	f	Ljava/lang/String;	g	excludedCharacters
	m	(Luh;FFFFLjava/lang/String;)V	<init>	<init>
		p	1	filename	filename
		p	2	size	size
		p	3	oversample	oversample
		p	4	shiftX	shiftX
		p	5	shiftY	shiftY
		p	6	excludedCharacters	excludedCharacters
	m	(Lcom/google/gson/JsonObject;)Ldpd;	a	fromJson
		p	0	json	json
c	dpj	net/minecraft/client/gui/screen/options/AccessibilityOptionsScreen
	f	[Ldma;	c	OPTIONS
	f	Ldng;	p	narratorButton
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	()V	c	setNarratorMessage
c	dpk	net/minecraft/client/gui/screen/NoticeScreen
	f	Lmr;	a	notice
	f	Lmr;	b	buttonString
	f	Ljava/lang/Runnable;	c	actionHandler
	f	Ljava/util/List;	p	noticeLines
	m	(Ljava/lang/Runnable;Lmr;Lmr;)V	<init>	<init>
		p	1	actionHandler	actionHandler
		p	2	title	title
		p	3	notice	notice
	m	(Ljava/lang/Runnable;Lmr;Lmr;Lmr;)V	<init>	<init>
		p	1	actionHandler	actionHandler
		p	2	title	title
		p	3	notice	notice
c	dpl	net/minecraft/client/gui/screen/BackupPromptScreen
	f	Ldpl$a;	a	callback
	f	Ldqs;	b	parent
	f	Lmr;	c	subtitle
	f	Z	p	showEraseCacheCheckbox
	f	Ljava/util/List;	q	wrappedText
	f	Ldnk;	r	eraseCacheCheckbox
	m	(Ldqs;Ldpl$a;Lmr;Lmr;Z)V	<init>	<init>
		p	1	parent	parent
		p	2	callback	callback
		p	3	title	title
		p	4	subtitle	subtitle
		p	5	showEraseCacheCheckBox	showEraseCacheCheckBox
c	dpl$a	net/minecraft/client/gui/screen/BackupPromptScreen$Callback
c	dpm	net/minecraft/client/gui/screen/options/ChatOptionsScreen
	f	[Ldma;	c	OPTIONS
	f	Ldng;	p	narratorOptionButton
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
	m	()V	f	setNarratorMessage
c	dpn	net/minecraft/client/gui/screen/ChatScreen
	f	Ldnp;	a	chatField
	f	I	c	messageHistorySize
	f	Ljava/lang/String;	p	originalChatText
	f	Ldnl;	q	commandSuggestor
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	originalChatText	originalChatText
	m	(I)V	a	setChatFromHistory
	m	(Ljava/lang/String;)V	a	onChatFieldUpdate
		p	1	chatText	chatText
	m	(Ljava/lang/String;)V	b	setText
		p	1	text	text
c	dpo	net/minecraft/client/gui/screen/ConfirmChatLinkScreen
	f	Lmr;	p	warning
	f	Lmr;	q	copy
	f	Ljava/lang/String;	r	link
	f	Z	s	drawWarning
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ljava/lang/String;Z)V	<init>	<init>
		p	1	callback	callback
		p	2	link	link
		p	3	trusted	trusted
	m	()V	g	copyToClipboard
c	dpp	net/minecraft/client/gui/screen/ConfirmScreen
	f	Lmr;	a	yesTranslated
	f	Lmr;	b	noTranslated
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	c	callback
	f	Lmr;	p	message
	f	Ljava/util/List;	q	messageSplit
	f	I	r	buttonEnableTimer
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lmr;Lmr;)V	<init>	<init>
		p	1	callback	callback
		p	2	title	title
		p	3	message	message
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lmr;Lmr;Lmr;Lmr;)V	<init>	<init>
		p	1	callback	callback
		p	2	title	title
		p	3	message	message
	m	(I)V	a	disableButtons
c	dpq	net/minecraft/client/gui/screen/ConnectScreen
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	CONNECTOR_THREADS_COUNT
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lme;	c	connection
	f	Z	p	connectingCancelled
	f	Ldqs;	q	parent
	f	Lmr;	r	status
	f	J	s	narratorTimer
	m	(Ldqs;Ldlx;Ldys;)V	<init>	<init>
		p	1	parent	parent
		p	2	client	client
		p	3	entry	entry
	m	(Ldqs;Ldlx;Ljava/lang/String;I)V	<init>	<init>
		p	1	parent	parent
		p	2	client	client
		p	3	address	address
		p	4	port	port
	m	(Ljava/lang/String;I)V	a	connect
		p	1	address	address
		p	2	port	port
	m	(Lmr;)V	a	setStatus
		p	1	status	status
c	dpr	net/minecraft/client/gui/screen/CustomizeBuffetLevelScreen
	f	Ldpr$a;	c	biomeSelectionList
	f	Ldni;	q	confirmButton
	m	()V	i	refreshConfirmButton
c	dpr$a	net/minecraft/client/gui/screen/CustomizeBuffetLevelScreen$BuffetBiomesListWidget
	m	(Ldpr$a$a;)V	a	setSelected
c	dpr$a$a	net/minecraft/client/gui/screen/CustomizeBuffetLevelScreen$BuffetBiomesListWidget$BuffetBiomeItem
c	dps	net/minecraft/client/gui/screen/CustomizeFlatLevelScreen
	f	Ldqs;	a	parent
	f	Lcra;	c	config
	f	Lmr;	p	tileText
	f	Lmr;	q	heightText
	f	Ldps$a;	r	layers
	f	Ldni;	s	widgetButtonRemoveLayer
c	dps$a	net/minecraft/client/gui/screen/CustomizeFlatLevelScreen$SuperflatLayersListWidget
	m	(Ldps$a$a;)V	a	setSelected
c	dps$a$a	net/minecraft/client/gui/screen/CustomizeFlatLevelScreen$SuperflatLayersListWidget$SuperflatLayerItem
c	dpt	net/minecraft/client/gui/screen/pack/DataPackScreen
	f	Luh;	a	UNKNOWN_PACK_TEXTURE
	m	(Ldqs;Laar;Ljava/util/function/Consumer;Ljava/io/File;)V	<init>	<init>
		p	1	parent	parent
c	dpu	net/minecraft/client/gui/screen/DatapackFailureScreen
	f	Ljava/util/List;	a	wrappedText
c	dpv	net/minecraft/client/gui/screen/DeathScreen
	f	I	a	ticksSinceDeath
	f	Lmr;	b	message
	f	Z	c	isHardcore
	m	(Lmr;Z)V	<init>	<init>
		p	1	message	message
		p	2	isHardcore	isHardcore
	m	(I)Lnb;	a	getTextComponentUnderMouse
		p	1	mouseX	mouseX
	m	(Z)V	c	onConfirmQuit
		p	1	quit	quit
	m	()V	i	quitLevel
c	dpw	net/minecraft/client/gui/screen/DemoScreen
	f	Luh;	a	DEMO_BG
	m	(Ldni;)V	a	method_19810
		p	1	buttonWidget	buttonWidget
	m	(Ldni;)V	b	method_19811
		p	0	buttonWidget	buttonWidget
c	dpx	net/minecraft/client/gui/screen/DirectConnectScreen
	f	Ldni;	a	selectServerButton
	f	Ldys;	b	serverEntry
	f	Ldnp;	c	addressField
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	p	callback
	f	Ldqs;	q	parent
	m	(Ldqs;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldys;)V	<init>	<init>
		p	1	parent	parent
		p	2	callback	callback
		p	3	server	server
	m	(Ljava/lang/String;)V	a	method_19376
		p	1	text	text
	m	()V	i	saveAndClose
	m	()V	k	onAddressFieldChanged
c	dpy	net/minecraft/client/gui/screen/DisconnectedScreen
	f	Lmr;	a	reason
	f	Ljava/util/List;	b	reasonFormatted
	f	Ldqs;	c	parent
	f	I	p	reasonHeight
	m	(Ldqs;Ljava/lang/String;Lmr;)V	<init>	<init>
		p	1	parent	parent
		p	2	title	title
		p	3	reason	reason
c	dpz	net/minecraft/client/gui/screen/AddServerScreen
	f	Ldni;	a	buttonAdd
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	b	callback
	f	Ldys;	c	server
	f	Ldnp;	p	addressField
	f	Ldnp;	q	serverNameField
	f	Ldni;	r	resourcePackOptionButton
	f	Ldqs;	s	parent
	f	Ljava/util/function/Predicate;	t	addressTextFilter
	m	(Ldqs;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldys;)V	<init>	<init>
		p	1	parent	parent
		p	2	callback	callback
		p	3	server	server
	m	(Ljava/lang/String;)V	a	onClose
		p	1	text	text
	m	()V	i	addAndClose
	m	()V	k	updateButtonActiveState
c	dq	net/minecraft/command/arguments/ObjectiveArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	LONG_NAME_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_OBJECTIVE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	READONLY_OBJECTIVE_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldfj;	a	getObjective
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	()Ldq;	a	objective
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldfj;	b	getWritableObjective
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dqa	net/minecraft/client/gui/screen/FatalErrorScreen
	f	Lmr;	a	message
	m	(Lmr;Lmr;)V	<init>	<init>
		p	1	title	title
c	dqb	net/minecraft/client/gui/screen/SaveLevelScreen
c	dqc	net/minecraft/client/gui/screen/SleepingChatScreen
	m	()V	i	stopSleeping
c	dqd	net/minecraft/client/gui/screen/options/LanguageOptionsScreen
	f	Ldqd$a;	c	languageSelectionList
	f	Lems;	p	languageManager
	f	Ldnu;	q	forceUnicodeButton
	f	Ldni;	r	doneButton
	m	(Ldqs;Ldmb;Lems;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
		p	3	languageManager	languageManager
c	dqd$a	net/minecraft/client/gui/screen/options/LanguageOptionsScreen$LanguageSelectionListWidget
	m	(Ldqd;Ldlx;)V	<init>	<init>
		p	2	client	client
	m	(Ldqd$a$a;)V	a	setSelected
c	dqd$a$a	net/minecraft/client/gui/screen/options/LanguageOptionsScreen$LanguageSelectionListWidget$LanguageEntry
	f	Lemr;	b	languageDefinition
	m	(Ldqd$a;Lemr;)V	<init>	<init>
		p	2	languageDefinition	languageDefinition
	m	()V	a	onPressed
c	dqe	net/minecraft/client/gui/screen/LevelLoadingScreen
	f	Lzq;	a	progressProvider
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	STATUS_TO_COLOR
	m	(Lzq;)V	<init>	<init>
		p	1	progressProvider	progressProvider
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	method_17537
		p	0	map	map
	m	(Ldhl;Lzq;IIII)V	a	drawChunkMap
c	dqf	net/minecraft/client/gui/screen/SplashScreen
	f	Luh;	a	LOGO
	f	Ldlx;	d	client
	f	Laaz;	e	reloadMonitor
	f	Ljava/util/function/Consumer;	i	exceptionHandler
	f	Z	j	reloading
	f	F	k	progress
	f	J	l	applyCompleteTime
	f	J	m	prepareCompleteTime
	m	(Ldlx;Laaz;Ljava/util/function/Consumer;Z)V	<init>	<init>
		p	1	client	client
		p	2	monitor	monitor
		p	3	exceptionHandler	exceptionHandler
		p	4	reloading	reloading
	m	(Ldlx;)V	a	init
		p	0	client	client
	m	(Ldhl;IIIIF)V	a	renderProgressBar
c	dqf$a	net/minecraft/client/gui/screen/SplashScreen$LogoTexture
c	dqg	net/minecraft/client/gui/screen/ingame/HandledScreens
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	PROVIDERS
	m	(Lbhk;Ldqg$a;)V	a	register
		p	0	type	type
		p	1	provider	provider
	m	(Lbhk;)Ldqg$a;	a	getProvider
		p	0	type	type
	m	()Z	a	validateScreens
	m	(Lbhk;Ldlx;ILmr;)V	a	open
		p	0	type	type
		p	1	client	client
		p	2	id	id
		p	3	title	title
c	dqg$a	net/minecraft/client/gui/screen/ingame/HandledScreens$Provider
	m	(Lmr;Lbhk;Ldlx;I)V	a	open
		p	1	name	name
		p	2	type	type
		p	3	client	client
		p	4	id	id
	m	(Lbgi;Lbeb;Lmr;)Ldqs;	create	create
		p	1	handler	handler
		p	2	playerInventory	playerInventory
		p	3	title	title
c	dqh	net/minecraft/client/gui/screen/options/MouseOptionsScreen
	f	Ldnv;	c	buttonList
	f	[Ldma;	p	OPTIONS
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
c	dqi	net/minecraft/client/gui/screen/options/OptionsScreen
	f	[Ldma;	a	OPTIONS
	f	Ldqs;	b	parent
	f	Ldmb;	c	settings
	f	Ldni;	p	difficultyButton
	f	Ldns;	q	lockDifficultyButton
	f	Land;	r	difficulty
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	(Land;)Lmr;	a	getDifficultyButtonText
		p	1	difficulty	difficulty
	m	(Z)V	c	lockDifficulty
		p	1	difficultyLocked	difficultyLocked
c	dqj	net/minecraft/client/gui/screen/options/GameOptionsScreen
	f	Ldqs;	a	parent
	f	Ldmb;	b	gameOptions
	m	(Ldqs;Ldmb;Lmr;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
		p	3	title	title
c	dqk	net/minecraft/client/gui/screen/OutOfMemoryScreen
c	dql	net/minecraft/client/gui/screen/Overlay
	m	()Z	a	pausesGame
c	dqm	net/minecraft/client/gui/screen/GameMenuScreen
	f	Z	a	showMenu
	m	(Z)V	<init>	<init>
		p	1	showMenu	showMenu
	m	()V	i	initWidgets
c	dqn	net/minecraft/client/gui/screen/GraphicsConfirmationScreen
	f	Lmu;	a	message
	f	Lcom/google/common/collect/ImmutableList;	b	choiceButtons
	f	Ljava/util/List;	c	lines
	m	(Lmr;Ljava/util/List;Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
		p	1	title	title
		p	2	messageParts	messageParts
		p	3	choiceButtons	choiceButtons
c	dqn$a	net/minecraft/client/gui/screen/GraphicsConfirmationScreen$ChoiceButton
	f	Lmr;	a	message
	f	Ldni$a;	b	pressAction
	m	(Lmr;Ldni$a;)V	<init>	<init>
		p	1	message	message
		p	2	pressAction	pressAction
c	dqo	net/minecraft/client/gui/screen/PresetsScreen
	f	Ljava/util/List;	b	presets
	f	Ldps;	c	parent
	f	Lmr;	p	shareText
	f	Lmr;	q	listText
	f	Ldqo$b;	r	listWidget
	f	Ldni;	s	selectPresetButton
	f	Ldnp;	t	customPresetField
	m	(Ldps;)V	<init>	<init>
		p	1	parent	parent
	m	(Lmr;Lbqa;Lbre;Ljava/util/List;ZZZ[Lcqz;)V	a	addPreset
		p	1	icon	icon
		p	2	biome	biome
		p	3	structures	structures
	m	(Z)V	c	updateSelectButton
		p	1	hasSelected	hasSelected
c	dqo$a	net/minecraft/client/gui/screen/PresetsScreen$SuperflatPreset
	f	Lbke;	a	icon
	f	Lmr;	b	name
	m	(Lbke;Lmr;Lcra;)V	<init>	<init>
		p	1	icon	icon
c	dqo$b	net/minecraft/client/gui/screen/PresetsScreen$SuperflatPresetsListWidget
	m	(Ldqo$b$a;)V	a	setSelected
c	dqo$b$a	net/minecraft/client/gui/screen/PresetsScreen$SuperflatPresetsListWidget$SuperflatPresetEntry
	m	()V	a	setPreset
c	dqp	net/minecraft/client/gui/screen/ProgressScreen
	f	Lmr;	a	title
	f	Lmr;	b	task
	f	I	c	progress
	f	Z	p	done
c	dqq	net/minecraft/client/gui/screen/DownloadingTerrainScreen
c	dqr	net/minecraft/client/gui/screen/pack/ResourcePackScreen
	m	(Ldqs;Laar;Ljava/util/function/Consumer;Ljava/io/File;)V	<init>	<init>
		p	1	parent	parent
c	dqs	net/minecraft/client/gui/screen/Screen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	ALLOWED_PROTOCOLS
	f	Ljava/net/URI;	c	clickedLink
	f	Lmr;	d	title
	f	Ljava/util/List;	e	children
	f	Ldlx;	i	client
	f	Lehh;	j	itemRenderer
	f	I	k	width
	f	I	l	height
	f	Ljava/util/List;	m	buttons
	f	Z	n	passEvents
	f	Ldmt;	o	textRenderer
	m	(Lmr;)V	<init>	<init>
		p	1	title	title
	m	(Ldhl;Lnb;II)V	a	renderTextHoverEffect
		p	1	matrices	matrices
	m	(Lnb;)Z	a	handleTextClick
	m	(Ldhl;)V	a	renderBackground
		c	Renders the background of this screen.\n\n<p>If the client is in a world, renders the translucent background gradient.\nOtherwise {@linkplain #renderBackgroundTexture(int) renders the background texture}.
		p	1	matrices	matrices
	m	(Ldng;)Ldng;	a	addButton
		p	1	button	button
	m	(Ljava/lang/String;Z)V	a	insertText
		p	1	text	text
		p	2	override	override
	m	(Ldhl;I)V	a	renderBackground
		c	Renders the background of this screen.\n\n<p>If the client is in a world, renders the translucent background gradient.\nOtherwise {@linkplain #renderBackgroundTexture(int) renders the background texture}.
		p	1	matrices	matrices
		p	2	vOffset	vOffset
			c	an offset applied to the V coordinate of the background texture
	m	(Ljava/net/URI;)V	a	openLink
		p	1	link	link
	m	(Ldhl;Lmu;II)V	a	renderTooltip
		p	1	matrices	matrices
		p	3	x	x
		p	4	y	y
	m	(Ldlx;II)V	a	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
	m	(Lbki;)Ljava/util/List;	a	getTooltipFromItem
		p	1	stack	stack
	m	(Ljava/lang/String;CI)Z	a	isValidCharacterForName
		p	1	name	name
		p	2	character	character
		p	3	cursorPos	cursorPos
	m	(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V	a	wrapScreenError
		p	0	task	task
		p	1	errorTitle	errorTitle
		p	2	screenName	screenName
	m	(Ldhl;Lbki;II)V	a	renderTooltip
		p	1	matrices	matrices
		p	2	stack	stack
		p	3	x	x
		p	4	y	y
	m	()Ljava/lang/String;	as_	getNarrationMessage
	m	()Z	at_	shouldCloseOnEsc
	m	()V	au_	onClose
	m	()Z	ax_	isPauseScreen
	m	(Ldlx;II)V	b	init
		p	1	client	client
		p	2	width	width
		p	3	height	height
	m	()V	b	init
	m	(Ljava/lang/String;Z)V	b	sendMessage
		p	1	message	message
		p	2	toHud	toHud
	m	(Ldhl;Ljava/util/List;II)V	b	renderTooltip
		p	1	matrices	matrices
		p	2	lines	lines
		p	3	x	x
		p	4	y	y
	m	(Z)V	c	confirmLink
		p	1	open	open
	m	(Ljava/lang/String;)V	c	sendMessage
		p	1	message	message
	m	(Ldof;)Ldof;	d	addChild
		p	1	child	child
	m	()V	e	removed
	m	(I)V	f	renderBackgroundTexture
		c	Renders the fullscreen {@linkplain #BACKGROUND_TEXTURE background texture} of this screen.
		p	1	vOffset	vOffset
			c	an offset applied to the V coordinate of the background texture
	m	(I)Z	g	isCut
		p	0	code	code
	m	(I)Z	h	isPaste
		p	0	code	code
	m	(I)Z	i	isCopy
		p	0	code	code
	m	(I)Z	j	isSelectAll
		p	0	code	code
	m	()Lmr;	p	getTitle
	m	()Z	q	hasControlDown
	m	()Z	s	hasShiftDown
	m	()Z	t	hasAltDown
c	dqt	net/minecraft/client/gui/screen/OpenToLanScreen
	f	Ldqs;	a	parent
	f	Ldni;	b	buttonAllowCommands
	f	Ldni;	c	buttonGameMode
	f	Ljava/lang/String;	p	gameMode
	f	Z	q	allowCommands
	m	(Ldqs;)V	<init>	<init>
		p	1	parent	parent
	m	()V	i	updateButtonText
c	dqu	net/minecraft/client/gui/screen/options/SkinOptionsScreen
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	(Lbed;)Lmr;	a	getPlayerModelPartDisplayString
		p	1	part	part
c	dqv	net/minecraft/client/gui/screen/options/SoundOptionsScreen
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
c	dqw	net/minecraft/client/gui/screen/TitleScreen
	f	Z	A	doBackgroundFade
	f	J	B	backgroundFadeStart
	f	Lebn;	a	PANORAMA_CUBE_MAP
	f	Luh;	c	PANORAMA_OVERLAY
	f	Luh;	p	ACCESSIBILITY_ICON_TEXTURE
	f	Z	q	isMinceraft
	f	Ljava/lang/String;	r	splashText
	f	Ldni;	s	buttonResetDemo
	f	Luh;	t	MINECRAFT_TITLE_TEXTURE
	f	Luh;	u	EDITION_TITLE_TEXTURE
	f	Z	v	realmsNotificationsInitialized
	f	Ldqs;	w	realmsNotificationGui
	f	I	x	copyrightTextWidth
	f	I	y	copyrightTextX
	f	Lecb;	z	backgroundRenderer
	m	(Z)V	<init>	<init>
		p	1	doBackgroundFade	doBackgroundFade
	m	(Lelw;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadTexturesAsync
	m	(II)V	b	initWidgetsNormal
		p	1	y	y
		p	2	spacingY	spacingY
	m	(II)V	c	initWidgetsDemo
		p	1	y	y
		p	2	spacingY	spacingY
	m	(Z)V	c	onDemoDeletionConfirmed
		p	1	delete	delete
	m	()Z	i	areRealmsNotificationsEnabled
	m	()V	k	switchToRealms
c	dqx	net/minecraft/client/gui/screen/VideoOptionsScreen
	f	Lmr;	c	GRAPHICS_FABULOUS_TEXT
	f	Lmr;	p	GRAPHICS_WARNING_MESSAGE_TEXT
	f	Lmr;	q	GRAPHICS_WARNING_TITLE_TEXT
	f	Lmr;	r	GRAPHICS_WARNING_ACCEPT_TEXT
	f	Lmr;	s	GRAPHICS_WARNING_CANCEL_TEXT
	f	Lmr;	t	NEWLINE_TEXT
	f	[Ldma;	u	OPTIONS
	f	Ljava/util/List;	v	tooltip
	f	Ldnv;	w	list
	f	I	y	mipmapLevels
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
	m	(Ldni;)V	a	method_30052
		p	1	button	button
	m	(Ljava/util/List;)V	b	method_30054
		p	1	tooltip	tooltip
	m	(Ldni;)V	b	method_30053
		p	1	button	button
	m	(Ldni;)V	c	method_19865
		p	1	button	button
c	dqy	net/minecraft/client/gui/screen/CreditsScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Luh;	b	MINECRAFT_TITLE_TEXTURE
	f	Luh;	c	EDITION_TITLE_TEXTURE
	f	Luh;	p	VIGNETTE_TEXTURE
	f	Z	r	endCredits
	f	Ljava/lang/Runnable;	s	finishAction
	f	F	t	time
	f	Ljava/util/List;	u	credits
	f	I	w	creditsHeight
	f	F	x	speed
	m	(ZLjava/lang/Runnable;)V	<init>	<init>
		p	1	endCredits	endCredits
		p	2	finishAction	finishAction
	m	(IIF)V	a	renderBackground
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	tickDelta	tickDelta
	m	()V	i	close
c	dqz	net/minecraft/client/gui/screen/StatsScreen
	f	Ldqs;	a	parent
	f	Ldqz$a;	c	generalStats
	f	Ldqz$b;	p	itemStats
	f	Ldqz$c;	q	mobStats
	f	Lacv;	r	statHandler
	f	Ldnt;	s	selectedList
	f	Z	t	downloadingStats
	m	(Ldqs;Lacv;)V	<init>	<init>
		p	1	parent	parent
		p	2	statHandler	statHandler
	m	(I)I	a	getColumnX
		p	1	index	index
	m	(Ldhl;IILbke;)V	a	renderStatItem
	m	(Ldnt;)V	a	selectStatList
		p	1	list	list
	m	(Ldhl;IIII)V	c	renderIcon
	m	()V	i	createLists
	m	()V	k	createButtons
	m	()Ldnt;	m	getSelectedStatList
c	dqz$a	net/minecraft/client/gui/screen/StatsScreen$GeneralStatsListWidget
c	dqz$a$a	net/minecraft/client/gui/screen/StatsScreen$GeneralStatsListWidget$Entry
	f	Lacr;	b	stat
	m	(Ldqz$a;Lacr;)V	<init>	<init>
		p	2	stat	stat
c	dqz$b	net/minecraft/client/gui/screen/StatsScreen$ItemStatsListWidget
	f	Ljava/util/List;	a	blockStatTypes
	f	Ljava/util/List;	o	itemStatTypes
	f	I	p	selectedHeaderColumn
	f	Ljava/util/List;	q	items
	f	Ljava/util/Comparator;	r	comparator
	f	Lact;	s	selectedStatType
	f	[I	v	HEADER_ICON_SPRITE_INDICES
	m	(Ldqz;Ldlx;)V	<init>	<init>
		p	2	client	client
	m	(Lact;)V	a	selectStatType
		p	1	statType	statType
	m	(I)Lact;	a	getStatType
		p	1	headerColumn	headerColumn
	m	(Lbke;)Lmr;	a	getText
		p	1	item	item
	m	(Ldhl;Lmr;II)V	a	render
	m	(Lact;)I	b	getHeaderIndex
		p	1	statType	statType
c	dqz$b$a	net/minecraft/client/gui/screen/StatsScreen$ItemStatsListWidget$ItemComparator
	m	(Lbke;Lbke;)I	a	compare
c	dqz$b$b	net/minecraft/client/gui/screen/StatsScreen$ItemStatsListWidget$Entry
	m	(Ldhl;Lacr;IIZ)V	a	render
c	dqz$c	net/minecraft/client/gui/screen/StatsScreen$EntityStatsListWidget
c	dqz$c$a	net/minecraft/client/gui/screen/StatsScreen$EntityStatsListWidget$Entry
	f	Laoq;	b	entityType
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	getKilledString
		p	1	entityName	entityName
		p	2	killCount	killCount
	m	(Ljava/lang/String;I)Ljava/lang/String;	b	getKilledByString
		p	1	entityName	entityName
		p	2	killCount	killCount
c	dr	net/minecraft/command/arguments/ObjectiveCriteriaArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_CRITERIA_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldfp;	a	getCriteria
	m	(Lact;Ljava/lang/Object;)Ljava/lang/String;	a	getStatName
		p	1	stat	stat
		p	2	value	value
	m	()Ldr;	a	objectiveCriteria
	m	(Lcom/mojang/brigadier/StringReader;)Ldfp;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dra	net/minecraft/client/gui/screen/StatsListener
	f	[Ljava/lang/String;	b	PROGRESS_BAR_STAGES
	m	()V	l	onStatsReady
c	drc	net/minecraft/client/gui/screen/advancement/AdvancementTab
	f	Ldlx;	a	client
	f	Ldrg;	b	screen
	f	Ldrd;	c	type
	f	I	d	index
	f	Lw;	e	root
	f	Laf;	i	display
	f	Lbki;	j	icon
	f	Lmr;	k	title
	f	Ldre;	l	rootWidget
	f	Ljava/util/Map;	m	widgets
	f	D	n	originX
	f	D	o	originY
	f	I	p	minPanX
	f	I	q	minPanY
	f	I	r	maxPanX
	f	I	s	maxPanY
	f	F	t	alpha
	f	Z	u	initialized
	m	(Ldlx;Ldrg;Ldrd;ILw;Laf;)V	<init>	<init>
		p	1	client	client
		p	2	screen	screen
		p	3	type	type
		p	4	index	index
		p	5	root	root
		p	6	display	display
	m	(IILehh;)V	a	drawIcon
		p	1	x	x
		p	2	y	y
		p	3	itemRenderer	itemRenderer
	m	(Ldhl;IIZ)V	a	drawBackground
	m	(IIDD)Z	a	isClickOnTab
		p	1	screenX	screenX
		p	2	screenY	screenY
		p	3	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(Ldlx;Ldrg;ILw;)Ldrc;	a	create
		p	0	minecraft	minecraft
		p	1	screen	screen
		p	2	index	index
		p	3	root	root
	m	(Lw;)V	a	addAdvancement
		p	1	advancement	advancement
	m	(Ldre;Lw;)V	a	addWidget
		p	1	widget	widget
		p	2	advancement	advancement
	m	(DD)V	a	move
		p	1	offsetX	offsetX
		p	3	offsetY	offsetY
	m	(Ldhl;)V	a	render
	m	(Lw;)Ldre;	b	getWidget
		p	1	advancement	advancement
	m	()Lw;	c	getRoot
	m	(Ldhl;IIII)V	c	drawWidgetTooltip
	m	()Lmr;	d	getTitle
	m	()Ldrg;	f	getScreen
c	drd	net/minecraft/client/gui/screen/advancement/AdvancementTabType
	f	I	e	u
	f	I	f	v
	f	I	g	width
	f	I	h	height
	f	I	i	tabCount
	m	(Ljava/lang/String;IIIIII)V	<init>	<init>
		p	3	u	u
		p	4	v	v
		p	5	width	width
		p	6	height	height
		p	7	tabCount	tabCount
	m	(IIILehh;Lbki;)V	a	drawIcon
		p	1	x	x
		p	2	y	y
		p	3	index	index
		p	4	itemRenderer	itemRenderer
		p	5	icon	icon
	m	()I	a	getTabCount
	m	(Ldhl;Ldmv;IIZI)V	a	drawBackground
	m	(I)I	a	getTabX
		p	1	index	index
	m	(IIIDD)Z	a	isClickOnTab
		p	1	screenX	screenX
		p	2	screenY	screenY
		p	3	index	index
		p	4	mouseX	mouseX
		p	6	mouseY	mouseY
	m	(I)I	b	getTabY
		p	1	index	index
c	dre	net/minecraft/client/gui/screen/advancement/AdvancementWidget
	f	Luh;	a	WIDGETS_TEX
	f	Ldrc;	c	tab
	f	Lw;	d	advancement
	f	Laf;	e	display
	f	Lmu;	i	title
	f	I	j	width
	f	Ljava/util/List;	k	description
	f	Ldlx;	l	client
	f	Ldre;	m	parent
	f	Ljava/util/List;	n	children
	f	Ly;	o	progress
	f	I	p	xPos
	f	I	q	yPos
	m	(Ldrc;Ldlx;Lw;Laf;)V	<init>	<init>
		p	1	tab	tab
		p	2	client	client
		p	3	advancement	advancement
		p	4	display	display
	m	(Ly;)V	a	setProgress
		p	1	progress	progress
	m	(Lw;)Ldre;	a	getParent
		p	1	advancement	advancement
	m	(Ldre;)V	a	addChild
		p	1	widget	widget
	m	(Lmr;I)Ljava/util/List;	a	wrapDescription
		p	2	width	width
	m	(Ldhl;IIZ)V	a	renderLines
	m	(Ldhl;II)V	a	renderWidgets
	m	(Ldhl;IIFII)V	a	drawTooltip
		p	5	y	y
	m	(IIII)Z	a	shouldRender
		p	1	originX	originX
		p	2	originY	originY
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	()V	b	addToTree
	m	()I	c	getY
	m	()I	d	getX
c	drf	net/minecraft/client/gui/screen/advancement/AdvancementObtainedStatus
	f	I	c	spriteIndex
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	spriteIndex	spriteIndex
	m	()I	a	getSpriteIndex
c	drg	net/minecraft/client/gui/screen/advancement/AdvancementsScreen
	f	Luh;	a	WINDOW_TEXTURE
	f	Luh;	b	TABS_TEXTURE
	f	Ldyj;	c	advancementHandler
	f	Ljava/util/Map;	p	tabs
	f	Ldrc;	q	selectedTab
	f	Z	r	movingTab
	m	(Ldyj;)V	<init>	<init>
		p	1	advancementHandler	advancementHandler
	m	(Ldhl;II)V	a	drawWidgets
	m	(Ldhl;IIII)V	c	drawAdvancementTree
		p	2	mouseY	mouseY
	m	(Ldhl;IIII)V	d	drawWidgetTooltip
	m	(Lw;)Ldre;	f	getAdvancementWidget
		p	1	advancement	advancement
	m	(Lw;)Ldrc;	g	getTab
		p	1	advancement	advancement
c	dri	net/minecraft/client/gui/screen/options/ControlsListWidget
	f	Ldrj;	a	parent
	f	I	o	maxKeyNameLength
	m	(Ldrj;Ldlx;)V	<init>	<init>
		p	1	parent	parent
		p	2	client	client
c	dri$a	net/minecraft/client/gui/screen/options/ControlsListWidget$CategoryEntry
	f	Lmr;	b	text
	f	I	c	textWidth
	m	(Ldri;Lmr;)V	<init>	<init>
		p	2	text	text
c	dri$b	net/minecraft/client/gui/screen/options/ControlsListWidget$Entry
c	dri$c	net/minecraft/client/gui/screen/options/ControlsListWidget$KeyBindingEntry
	f	Ldlu;	b	binding
	f	Lmr;	c	bindingName
	f	Ldni;	d	editButton
	f	Ldni;	e	resetButton
	m	(Ldri;Ldlu;Lmr;)V	<init>	<init>
		p	2	binding	binding
		p	3	text	text
c	drj	net/minecraft/client/gui/screen/options/ControlsOptionsScreen
	f	Ldlu;	c	focusedBinding
	f	J	p	time
	f	Ldri;	q	keyBindingListWidget
	f	Ldni;	r	resetButton
	m	(Ldqs;Ldmb;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
c	drl	net/minecraft/client/gui/screen/GameModeSelectionScreen
	f	Luh;	a	TEXTURE
	f	I	b	UI_WIDTH
	f	Ljava/util/Optional;	p	currentGameMode
	f	Ljava/util/Optional;	q	gameMode
	f	I	r	lastMouseX
	f	I	s	lastMouseY
	f	Z	t	mouseUsedForSelection
	f	Ljava/util/List;	u	gameModeButtons
	m	(Ldlx;Ljava/util/Optional;)V	a	apply
		p	0	client	client
		p	1	gameMode	gameMode
	m	()V	l	apply
	m	()Z	m	checkForClose
c	drl$a	net/minecraft/client/gui/screen/GameModeSelectionScreen$GameMode
	f	[Ldrl$a;	e	VALUES
	f	Lmr;	f	text
	f	Ljava/lang/String;	g	command
	f	Lbki;	h	icon
	m	(Ljava/lang/String;ILmr;Ljava/lang/String;Lbki;)V	<init>	<init>
		p	4	command	command
		p	5	icon	icon
	m	()Lmr;	a	getText
	m	(Lehh;II)V	a	renderIcon
		p	2	x	x
		p	3	y	y
	m	()Ljava/lang/String;	b	getCommand
	m	(Lbpy;)Ljava/util/Optional;	b	of
	m	()Ljava/util/Optional;	c	next
c	drl$b	net/minecraft/client/gui/screen/GameModeSelectionScreen$ButtonWidget
	f	Ldrl$a;	b	gameMode
	f	Z	c	selected
	m	(Ldrl;Ldrl$a;II)V	<init>	<init>
		p	3	x	x
		p	4	y	y
	m	(Ldhl;Lelw;)V	a	drawBackground
		p	1	matrices	matrices
	m	(Ldhl;Lelw;)V	b	drawSelectionBox
		p	1	matrices	matrices
	m	(Z)V	e	setSelected
		p	1	selected	selected
c	drm	net/minecraft/client/gui/screen/ingame/AbstractCommandBlockScreen
	f	Ldnp;	a	consoleCommandTextField
	f	Ldnp;	b	previousOutputTextField
	f	Ldni;	c	doneButton
	f	Ldni;	p	cancelButton
	f	Ldni;	q	toggleTrackingOutputButton
	f	Z	r	trackingOutput
	f	Ldnl;	s	commandSuggestor
	m	(Ljava/lang/String;)V	a	onCommandChanged
		p	1	text	text
	m	(Lbpc;)V	a	syncSettingsToServer
		p	1	commandExecutor	commandExecutor
	m	()Lbpc;	i	getCommandExecutor
	m	()I	k	getTrackOutputButtonHeight
	m	()V	l	updateTrackedOutput
	m	()V	m	commitAndClose
c	drn	net/minecraft/client/gui/screen/ingame/HandledScreen
	f	Lbhw;	A	touchDragSlotStart
	f	Lbhw;	B	touchDropOriginSlot
	f	Lbhw;	C	touchHoveredSlot
	f	Lbhw;	D	lastClickedSlot
	f	Z	E	touchIsRightClickDrag
	f	Lbki;	F	touchDragStack
	f	I	G	touchDropX
	f	I	H	touchDropY
	f	J	I	touchDropTime
	f	Lbki;	J	touchDropReturningStack
	f	J	K	touchDropTimer
	f	I	L	heldButtonType
	f	I	M	heldButtonCode
	f	Z	N	cancelNextRelease
	f	I	O	draggedStackRemainder
	f	J	P	lastButtonClickTime
	f	I	Q	lastClickedButton
	f	Z	R	isDoubleClicking
	f	Lbki;	S	quickMovingStack
	f	Luh;	a	BACKGROUND_TEXTURE
	f	I	b	backgroundWidth
	f	I	c	backgroundHeight
	f	I	p	titleX
	f	I	q	titleY
	f	I	r	playerInventoryTitleX
	f	I	s	playerInventoryTitleY
	f	Lbgi;	t	handler
	f	Lbeb;	u	playerInventory
	f	Lbhw;	v	focusedSlot
	f	I	w	x
	f	I	x	y
	f	Ljava/util/Set;	y	cursorDragSlots
	f	Z	z	isCursorDragging
	m	(Lbgi;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
	m	(Lbhw;DD)Z	a	isPointOverSlot
		p	1	slot	slot
		p	2	pointX	pointX
		p	4	pointY	pointY
	m	(Ldhl;FII)V	a	drawBackground
		p	1	matrices	matrices
		p	2	delta	delta
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(Ldhl;Lbhw;)V	a	drawSlot
		p	1	matrices	matrices
		p	2	slot	slot
	m	(DD)Lbhw;	a	getSlotAt
		p	1	xPosition	xPosition
		p	3	yPosition	yPosition
	m	(Lbki;IILjava/lang/String;)V	a	drawItem
		p	1	stack	stack
		p	2	xPosition	xPosition
		p	3	yPosition	yPosition
		p	4	amountText	amountText
	m	(DDIII)Z	a	isClickOutsideBounds
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	left	left
		p	6	top	top
		p	7	button	button
	m	(Ldhl;II)V	a	drawMouseoverTooltip
		p	1	matrices	matrices
		p	2	x	x
		p	3	y	y
	m	(IIIIDD)Z	a	isPointWithinBounds
		p	1	xPosition	xPosition
		p	2	yPosition	yPosition
		p	3	width	width
		p	4	height	height
		p	5	pointX	pointX
		p	7	pointY	pointY
	m	(Lbhw;IILbgq;)V	a	onMouseClick
		c	@see net.minecraft.screen.ScreenHandler#onSlotClick(int, int, net.minecraft.screen.slot.SlotActionType, net.minecraft.entity.player.PlayerEntity)
		p	1	slot	slot
		p	2	invSlot	invSlot
		p	3	clickData	clickData
		p	4	actionType	actionType
	m	(II)Z	b	handleHotbarKeyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
	m	(Ldhl;II)V	b	drawForeground
		p	1	matrices	matrices
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	()V	m	calculateOffset
c	dro	net/minecraft/client/gui/screen/ingame/AbstractFurnaceScreen
	f	Ldtj;	A	recipeBook
	f	Luh;	B	RECIPE_BUTTON_TEXTURE
	f	Z	C	narrow
	f	Luh;	D	background
	m	(Lbgj;Ldtj;Lbeb;Lmr;Luh;)V	<init>	<init>
		p	1	handler	handler
		p	2	recipeBook	recipeBook
		p	3	inventory	inventory
		p	4	title	title
		p	5	background	background
	m	(Ldni;)V	a	method_19877
		p	1	buttonWidget	buttonWidget
c	drp	net/minecraft/client/gui/screen/ingame/AnvilScreen
	f	Luh;	A	TEXTURE
	f	Ldnp;	B	nameField
	m	(Lbgk;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
	m	(Ljava/lang/String;)V	a	onRenamed
		p	1	name	name
c	drq	net/minecraft/client/gui/screen/ingame/BeaconScreen
	f	Luh;	A	TEXTURE
	f	Ldrq$b;	B	doneButton
	f	Z	C	consumeGem
	f	Laoe;	D	primaryEffect
	f	Laoe;	E	secondaryEffect
	m	(Lbgl;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	drq$a	net/minecraft/client/gui/screen/ingame/BeaconScreen$CancelButtonWidget
	m	(Ldrq;II)V	<init>	<init>
		p	2	x	x
		p	3	y	y
c	drq$b	net/minecraft/client/gui/screen/ingame/BeaconScreen$DoneButtonWidget
	m	(Ldrq;II)V	<init>	<init>
		p	2	x	x
		p	3	y	y
c	drq$c	net/minecraft/client/gui/screen/ingame/BeaconScreen$EffectButtonWidget
	f	Laoe;	b	effect
	f	Lelv;	c	sprite
	f	Z	d	primary
	m	(Ldrq;IILaoe;Z)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	statusEffect	statusEffect
		p	5	primary	primary
c	drq$d	net/minecraft/client/gui/screen/ingame/BeaconScreen$BaseButtonWidget
	f	Z	a	disabled
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	y	y
	m	()Z	a	isDisabled
	m	(Ldhl;)V	a	renderExtra
	m	(Z)V	e	setDisabled
		p	1	disabled	disabled
c	drq$e	net/minecraft/client/gui/screen/ingame/BeaconScreen$IconButtonWidget
	f	I	a	u
	f	I	b	v
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	u	u
		p	4	v	v
c	drr	net/minecraft/client/gui/screen/ingame/BlastFurnaceScreen
	f	Luh;	B	TEXTURE
	m	(Lbgm;Lbeb;Lmr;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
c	drs	net/minecraft/client/gui/screen/ingame/BookEditScreen
	f	Ldni;	A	doneButton
	f	Ldni;	B	signButton
	f	Ldni;	C	finalizeButton
	f	Ldni;	D	cancelButton
	f	Lanf;	E	hand
	f	Ldrs$a;	F	pageContent
	f	Lbec;	a	player
	f	Lbki;	b	itemStack
	f	Z	c	dirty
	f	Z	p	signing
	f	I	q	tickCounter
	f	I	r	currentPage
	f	Ljava/util/List;	s	pages
	f	Ljava/lang/String;	t	title
	f	J	w	lastClickTime
	f	I	x	lastClickIndex
	f	Ldsr;	y	nextPageButton
	f	Ldsr;	z	previousPageButton
	m	(Lbec;Lbki;Lanf;)V	<init>	<init>
		p	2	itemStack	itemStack
		p	3	hand	hand
	m	()Ljava/lang/String;	A	getCurrentPageContent
	m	()Ldrs$a;	B	getPageContent
	m	()V	C	invalidatePageContent
	m	()Ldrs$a;	E	createPageContent
	m	(Ljava/lang/String;)V	b	setPageContent
		p	1	newContent	newContent
	m	(Z)V	c	finalizeBook
		p	1	signBook	signBook
	m	(III)Z	d	keyPressedSignMode
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(Ljava/lang/String;)I	d	getStringWidth
		p	1	text	text
	m	()I	k	countPages
	m	()V	l	openPreviousPage
	m	()V	m	openNextPage
	m	()V	n	updateButtons
	m	()V	u	removeEmptyPages
	m	()V	v	appendNewPage
	m	()V	y	moveCursorToTop
	m	()V	z	moveCursorToBottom
c	drs$a	net/minecraft/client/gui/screen/ingame/BookEditScreen$PageContent
	f	Ldrs$a;	a	EMPTY
	f	Ljava/lang/String;	b	pageContent
	f	Ldrs$c;	c	position
	f	[Ldrs$b;	f	lines
	m	(Ljava/lang/String;Ldrs$c;Z[I[Ldrs$b;[Lece;)V	<init>	<init>
		p	1	pageContent	pageContent
		p	5	lines	lines
c	drs$b	net/minecraft/client/gui/screen/ingame/BookEditScreen$Line
	f	Lnb;	a	style
	f	Ljava/lang/String;	b	content
	f	Lmr;	c	text
	f	I	d	x
	f	I	e	y
	m	(Lnb;Ljava/lang/String;II)V	<init>	<init>
		p	2	content	content
		p	3	x	x
		p	4	y	y
c	drs$c	net/minecraft/client/gui/screen/ingame/BookEditScreen$Position
	f	I	a	x
	f	I	b	y
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	y	y
c	drt	net/minecraft/client/gui/screen/ingame/BookScreen
	f	Ldrt$a;	a	EMPTY_PROVIDER
	f	Luh;	b	BOOK_TEXTURE
	f	Ldrt$a;	c	contents
	f	I	p	pageIndex
	f	Ljava/util/List;	q	cachedPage
	f	I	r	cachedPageIndex
	f	Ldsr;	s	nextPageButton
	f	Ldsr;	t	previousPageButton
	f	Z	u	pageTurnSound
	m	(Ldrt$a;)V	<init>	<init>
		p	1	pageProvider	pageProvider
	m	(Ldrt$a;Z)V	<init>	<init>
		p	1	contents	contents
		p	2	playPageTurnSound	playPageTurnSound
	m	(Ldrt$a;)V	a	setPageProvider
		p	1	pageProvider	pageProvider
	m	(Lle;)Ljava/util/List;	a	readPages
		p	0	tag	tag
	m	(DD)Lnb;	a	getTextAt
		p	1	x	x
		p	3	y	y
	m	(Ljava/lang/String;)I	a	getStringWidth
		p	1	string	string
	m	(I)Z	a	setPage
		p	1	index	index
	m	(I)Z	b	jumpToPage
		p	1	page	page
	m	()I	i	getPageCount
	m	()V	k	addCloseButton
	m	()V	l	addPageButtons
	m	()V	m	goToPreviousPage
	m	()V	n	goToNextPage
	m	()V	u	updatePageButtons
c	drt$a	net/minecraft/client/gui/screen/ingame/BookScreen$Contents
	m	()I	a	getPageCount
	m	(I)Lmu;	a	getPageUnchecked
		p	1	index	index
	m	(Lbki;)Ldrt$a;	a	create
		p	0	stack	stack
	m	(I)Lmu;	b	getPage
		p	1	index	index
c	drt$b	net/minecraft/client/gui/screen/ingame/BookScreen$WritableBookContents
	f	Ljava/util/List;	a	pages
	m	(Lbki;)V	<init>	<init>
		p	1	stack	stack
	m	(Lbki;)Ljava/util/List;	b	getPages
		p	0	stack	stack
c	drt$c	net/minecraft/client/gui/screen/ingame/BookScreen$WrittenBookContents
	f	Ljava/util/List;	a	pages
	m	(Lbki;)V	<init>	<init>
		p	1	stack	stack
	m	(Lbki;)Ljava/util/List;	b	getPages
		p	0	stack	stack
c	dru	net/minecraft/client/gui/screen/ingame/BrewingStandScreen
	f	Luh;	A	TEXTURE
	f	[I	B	BUBBLE_PROGRESS
	m	(Lbgn;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	drv	net/minecraft/client/gui/screen/ingame/CartographyTableScreen
	f	Luh;	A	TEXTURE
	m	(Lbgo;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
	m	(Lczv;IIF)V	a	drawMap
		p	1	state	state
		p	2	x	x
		p	3	y	y
		p	4	size	size
	m	(Ldhl;Lczv;ZZZZ)V	a	drawMap
c	drw	net/minecraft/client/gui/screen/ingame/CommandBlockScreen
	f	Lcdq;	s	blockEntity
	f	Ldni;	t	modeButton
	f	Ldni;	u	conditionalModeButton
	f	Ldni;	v	redstoneTriggerButton
	f	Lcdq$a;	w	mode
	f	Z	x	conditional
	f	Z	y	autoActivate
	m	(Lcdq;)V	<init>	<init>
		p	1	blockEntity	blockEntity
	m	()V	n	updateCommandBlock
	m	()V	u	updateMode
	m	()V	v	cycleType
	m	()V	w	updateConditionalMode
	m	()V	x	updateActivationMode
c	drx	net/minecraft/client/gui/screen/ingame/GenericContainerScreen
	f	Luh;	A	TEXTURE
	f	I	B	rows
	m	(Lbgp;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	dry	net/minecraft/client/gui/screen/ingame/CraftingScreen
	f	Luh;	A	TEXTURE
	f	Luh;	B	RECIPE_BUTTON_TEXTURE
	f	Ldtn;	C	recipeBook
	f	Z	D	isNarrow
	m	(Lbgv;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	drz	net/minecraft/client/gui/screen/ingame/CreativeInventoryListener
	f	Ldlx;	a	client
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	ds	net/minecraft/command/arguments/OperationArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	DIVISION_ZERO_EXCEPTION
	m	()Lds;	a	operation
	m	(Lcom/mojang/brigadier/StringReader;)Lds$a;	a	parse
	m	(Ljava/lang/String;)Lds$a;	a	getOperator
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lds$a;	a	getOperation
	m	(Ljava/lang/String;)Lds$b;	b	getIntOperator
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	ds$a	net/minecraft/command/arguments/OperationArgumentType$Operation
c	ds$b	net/minecraft/command/arguments/OperationArgumentType$IntOperator
c	dsa	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen
	f	Luh;	B	TEXTURE
	f	Lanm;	C	inventory
	f	I	D	selectedTab
	f	F	E	scrollPosition
	f	Z	F	scrolling
	f	Ldnp;	G	searchBox
	f	Ljava/util/List;	H	slots
	f	Lbhw;	I	deleteItemSlot
	f	Ldrz;	J	listener
	f	Z	K	ignoreTypedCharacter
	f	Z	L	lastClickOutsideBounds
	f	Ljava/util/Map;	M	searchResultTags
	m	(Lbec;)V	<init>	<init>
		p	1	player	player
	m	(Lbiy;DD)Z	a	isClickInTab
		p	1	group	group
		p	2	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(DD)Z	a	isClickInScrollbar
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Lbhw;)Z	a	isCreativeInventorySlot
		p	1	slot	slot
	m	(Ldhl;Lbiy;II)Z	a	renderTabTooltipIfHovered
	m	(Lbiy;)V	a	setSelectedTab
		p	1	group	group
	m	(Ljava/lang/String;)V	a	searchForTags
	m	(Ldhl;Lbiy;)V	a	renderTabIcon
	m	(Ldlx;IZZ)V	a	onHotbarKeyPress
		p	0	client	client
		p	1	index	index
		p	2	restore	restore
		p	3	save	save
	m	()I	l	getSelectedTab
	m	()V	n	search
	m	()Z	u	hasScrollbar
c	dsa$a	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen$LockableSlot
c	dsa$b	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen$CreativeScreenHandler
	f	Lgi;	c	itemList
	m	(F)V	a	scrollItems
		p	1	position	position
	m	()Z	e	shouldShowScrollbar
c	dsa$c	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen$CreativeSlot
	f	Lbhw;	a	slot
	m	(Lbhw;III)V	<init>	<init>
		p	1	slot	slot
		p	2	invSlot	invSlot
		p	3	x	x
		p	4	y	y
c	dsb	net/minecraft/client/gui/screen/ingame/Generic3x3ContainerScreen
	f	Luh;	A	TEXTURE
	m	(Lbgx;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	dsc	net/minecraft/client/gui/screen/ingame/AbstractInventoryScreen
	f	Z	A	drawStatusEffects
	m	(Ldhl;IILjava/lang/Iterable;)V	a	drawStatusEffectBackgrounds
	m	(Ldhl;)V	b	drawStatusEffects
	m	(Ldhl;IILjava/lang/Iterable;)V	b	drawStatusEffectSprites
	m	(Ldhl;IILjava/lang/Iterable;)V	c	drawStatusEffectDescriptions
	m	()V	k	applyStatusEffectOffset
c	dsd	net/minecraft/client/gui/screen/ingame/EnchantingPhrases
	f	Ldsd;	c	INSTANCE
	f	Ljava/util/Random;	d	random
	f	[Ljava/lang/String;	e	phrases
	m	(Ldmt;I)Lmu;	a	generatePhrase
		p	1	fontRenderer	fontRenderer
		p	2	width	width
	m	()Ldsd;	a	getInstance
	m	(J)V	a	setSeed
		p	1	seed	seed
c	dse	net/minecraft/client/gui/screen/ingame/EnchantmentScreen
	f	I	A	ticks
	f	F	B	nextPageAngle
	f	F	C	pageAngle
	f	F	D	approximatePageAngle
	f	F	E	pageRotationSpeed
	f	F	F	nextPageTurningSpeed
	f	F	G	pageTurningSpeed
	f	Luh;	H	TEXTURE
	f	Luh;	I	BOOK_TEXTURE
	f	Ldvh;	J	BOOK_MODEL
	f	Ljava/util/Random;	K	random
	f	Lbki;	L	stack
	m	(Lbgy;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
	m	()V	k	doTick
c	dsf	net/minecraft/client/gui/screen/ingame/FurnaceScreen
	f	Luh;	B	TEXTURE
	m	(Lbha;Lbeb;Lmr;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
c	dsg	net/minecraft/client/gui/screen/ingame/GrindstoneScreen
	f	Luh;	A	TEXTURE
	m	(Lbhc;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	dsh	net/minecraft/client/gui/screen/ingame/HopperScreen
	f	Luh;	A	TEXTURE
	m	(Lbhd;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	dsi	net/minecraft/client/gui/screen/ingame/HorseScreen
	f	Luh;	A	TEXTURE
	f	Lazm;	B	entity
	f	F	C	mouseX
	f	F	D	mouseY
	m	(Lbhe;Lbeb;Lazm;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	entity	entity
c	dsj	net/minecraft/client/gui/screen/ingame/InventoryScreen
	f	Luh;	B	RECIPE_BUTTON_TEXTURE
	f	F	C	mouseX
	f	F	D	mouseY
	f	Ldtn;	E	recipeBook
	f	Z	F	isOpen
	f	Z	G	isNarrow
	f	Z	H	isMouseDown
	m	(Lbec;)V	<init>	<init>
		p	1	player	player
	m	(IIIFFLaoy;)V	a	drawEntity
		p	0	x	x
		p	1	y	y
		p	2	size	size
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
		p	5	entity	entity
c	dsk	net/minecraft/client/gui/screen/ingame/ForgingScreen
	f	Luh;	A	texture
	m	(Lbhg;Lbeb;Lmr;Luh;)V	<init>	<init>
		p	1	handler	handler
		p	2	playerInventory	playerInventory
		p	3	title	title
		p	4	texture	texture
	m	(Ldhl;IIF)V	b	renderForeground
		p	2	mouseY	mouseY
	m	()V	k	setup
c	dsl	net/minecraft/client/gui/screen/ingame/JigsawBlockScreen
	f	Lceb;	a	jigsaw
	f	Ldnp;	b	nameField
	f	Ldnp;	c	targetField
	f	Ldnp;	p	poolField
	f	Ldnp;	q	finalStateField
	f	I	r	generationDepth
	f	Z	s	keepJigsaws
	f	Ldni;	t	jointRotationButton
	f	Ldni;	u	doneButton
	f	Lceb$a;	v	joint
	m	(Lceb;)V	<init>	<init>
		p	1	jigsaw	jigsaw
	m	()V	i	onDone
	m	()V	k	onCancel
	m	()V	l	updateServer
	m	()V	m	generate
	m	()V	n	updateDoneButtonState
	m	()Lmr;	u	getLocalizedJointName
c	dsm	net/minecraft/client/gui/screen/ingame/LecternScreen
	f	Lbhh;	c	container
	f	Lbgt;	p	listener
	m	(Lbhh;Lbeb;Lmr;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(I)V	c	sendButtonPressPacket
		p	1	id	id
	m	()Lbhh;	u	getScreenHandler
	m	()V	v	updatePageProvider
	m	()V	w	updatePage
c	dsn	net/minecraft/client/gui/screen/ingame/LoomScreen
	f	Luh;	A	TEXTURE
	f	I	B	PATTERN_BUTTON_ROW_COUNT
	f	Ldyg;	C	bannerField
	f	Lbki;	E	banner
	f	Lbki;	F	dye
	f	Lbki;	G	pattern
	f	Z	H	canApplyDyePattern
	f	Z	I	canApplySpecialPattern
	f	Z	J	hasTooManyPatterns
	f	F	K	scrollPosition
	f	Z	L	scrollbarClicked
	f	I	M	firstPatternButtonId
	m	(Lbhi;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
	m	()V	k	onInventoryChanged
c	dso	net/minecraft/client/gui/screen/ingame/ScreenHandlerProvider
	m	()Lbgi;	i	getScreenHandler
c	dsp	net/minecraft/client/gui/screen/ingame/MerchantScreen
	f	Luh;	A	TEXTURE
	f	I	B	selectedIndex
	f	[Ldsp$a;	C	offers
	f	I	D	indexStartOffset
	f	Z	E	scrolling
	m	(Lbhm;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
	m	(Ldhl;IILboz;)V	a	drawLevelInfo
	m	(I)Z	a	canScroll
		p	1	listSize	listSize
	m	()V	k	syncRecipeIndex
c	dsp$a	net/minecraft/client/gui/screen/ingame/MerchantScreen$WidgetButtonPage
	f	I	a	index
	m	()I	a	getIndex
c	dsq	net/minecraft/client/gui/screen/ingame/MinecartCommandBlockScreen
	f	Lbpc;	s	commandExecutor
	m	(Lbpc;)V	<init>	<init>
		p	1	commandExecutor	commandExecutor
c	dsr	net/minecraft/client/gui/widget/PageTurnWidget
	f	Z	a	isNextPageButton
	f	Z	b	playPageTurnSound
	m	(IIZLdni$a;Z)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	isNextPageButton	isNextPageButton
		p	4	action	action
		p	5	playPageTurnSound	playPageTurnSound
c	dss	net/minecraft/client/gui/screen/ingame/ShulkerBoxScreen
	f	Luh;	A	TEXTURE
	m	(Lbht;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
c	dst	net/minecraft/client/gui/screen/ingame/SignEditScreen
	f	Lceh;	b	sign
	f	I	c	ticksSinceOpened
	f	I	p	currentRow
	f	Ldov;	q	selectionManager
	m	()V	i	finishEditing
c	dsu	net/minecraft/client/gui/screen/ingame/SmithingScreen
	f	Luh;	A	TEXTURE
	m	(Lbhx;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	playerInventory	playerInventory
		p	3	title	title
c	dsv	net/minecraft/client/gui/screen/ingame/SmokerScreen
	f	Luh;	B	TEXTURE
	m	(Lbhy;Lbeb;Lmr;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
c	dsw	net/minecraft/client/gui/screen/ingame/StonecutterScreen
	f	Luh;	A	TEXTURE
	f	F	B	scrollAmount
	f	Z	C	mouseClicked
	f	I	D	scrollOffset
	f	Z	E	canCraft
	m	(Lbia;Lbeb;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	inventory	inventory
		p	3	title	title
	m	(Ldhl;IIIII)V	b	renderRecipeBackground
	m	(III)V	c	renderRecipeIcons
		p	1	x	x
		p	2	y	y
		p	3	scrollOffset	scrollOffset
	m	()I	k	getMaxScroll
	m	()Z	l	shouldScroll
	m	()V	m	onInventoryChange
c	dsx	net/minecraft/client/gui/screen/ingame/StructureBlockScreen
	f	Ldnp;	A	inputIntegrity
	f	Ldnp;	B	inputSeed
	f	Ldnp;	C	inputMetadata
	f	Ldni;	D	buttonDone
	f	Ldni;	E	buttonCancel
	f	Ldni;	F	buttonSave
	f	Ldni;	G	buttonLoad
	f	Ldni;	H	buttonRotate0
	f	Ldni;	I	buttonRotate90
	f	Ldni;	J	buttonRotate180
	f	Ldni;	K	buttonRotate270
	f	Ldni;	L	buttonMode
	f	Ldni;	M	buttonDetect
	f	Ldni;	N	buttonEntities
	f	Ldni;	O	buttonMirror
	f	Ldni;	P	buttonShowAir
	f	Ldni;	Q	buttonShowBoundingBox
	f	Ljava/text/DecimalFormat;	R	decimalFormat
	f	Lcel;	a	structureBlock
	f	Lbzj;	b	mirror
	f	Lcap;	c	rotation
	f	Lcgq;	p	mode
	f	Z	q	ignoreEntities
	f	Z	r	showAir
	f	Z	s	showBoundingBox
	f	Ldnp;	t	inputName
	f	Ldnp;	u	inputPosX
	f	Ldnp;	v	inputPosY
	f	Ldnp;	w	inputPosZ
	f	Ldnp;	x	inputSizeX
	f	Ldnp;	y	inputSizeY
	f	Ldnp;	z	inputSizeZ
	m	(Lcel;)V	<init>	<init>
		p	1	structureBlock	structureBlock
	m	(Ljava/lang/String;)J	a	parseLong
	m	(Ljava/lang/String;)F	b	parseFloat
	m	(Ljava/lang/String;)I	d	parseInt
	m	()V	i	done
	m	()V	k	cancel
	m	()V	l	updateIgnoreEntitiesButton
	m	()V	m	updateShowAirButton
	m	()V	n	updateShowBoundingBoxButton
	m	()V	u	updateMirrorButton
	m	()V	v	updateRotationButton
	m	()V	w	updateMode
c	dt	net/minecraft/command/arguments/ParticleArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_PARTICLE_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	()Ldt;	a	particle
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhf;	a	getParticle
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lhf;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lhg;)Lhf;	a	readParameters
		p	0	reader	reader
		p	1	type	type
	m	(Lcom/mojang/brigadier/StringReader;)Lhf;	b	readParameters
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dta	net/minecraft/client/gui/screen/multiplayer/MultiplayerScreen
	f	Ldtc;	a	serverListWidget
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ldyu;	c	serverListPinger
	f	Ldqs;	p	parent
	f	Ldyt;	q	serverList
	f	Ldni;	r	buttonEdit
	f	Ldni;	s	buttonJoin
	f	Ldni;	t	buttonDelete
	f	Ljava/util/List;	u	tooltipText
	f	Ldys;	v	selectedEntry
	f	Lepb$b;	w	lanServers
	f	Lepb$a;	x	lanServerDetector
	f	Z	y	initialized
	m	(Ldqs;)V	<init>	<init>
		p	1	parent	parent
	m	(Ldtc$a;)V	a	select
		p	1	entry	entry
	m	(Ldys;)V	a	connect
		p	1	entry	entry
	m	(Ljava/util/List;)V	b	setTooltip
	m	(Z)V	c	removeEntry
		p	1	confirmedAction	confirmedAction
	m	(Z)V	d	editEntry
		p	1	confirmedAction	confirmedAction
	m	(Z)V	e	addEntry
		p	1	confirmedAction	confirmedAction
	m	(Z)V	f	directConnect
		p	1	confirmedAction	confirmedAction
	m	()V	i	connect
	m	()V	k	updateButtonActivationStates
	m	()Ldyu;	l	getServerListPinger
	m	()Ldyt;	m	getServerList
	m	()V	n	refresh
c	dtb	net/minecraft/client/gui/screen/multiplayer/MultiplayerWarningScreen
	f	Ldqs;	a	parent
	f	Lmr;	b	header
	f	Lmr;	c	message
	f	Lmr;	p	checkMessage
	f	Lmr;	q	proceedText
	f	Ldnk;	r	checkbox
	f	Ljava/util/List;	s	lines
	m	(Ldqs;)V	<init>	<init>
		p	1	parent	parent
c	dtc	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadPoolExecutor;	o	SERVER_PINGER_THREAD_POOL
	f	Luh;	p	UNKNOWN_SERVER_TEXTURE
	f	Luh;	q	SERVER_SELECTION_TEXTURE
	f	Ldta;	r	screen
	f	Ljava/util/List;	s	servers
	f	Ldtc$a;	t	scanningEntry
	f	Ljava/util/List;	u	lanServers
	m	(Ldta;Ldlx;IIIII)V	<init>	<init>
		p	1	screen	screen
		p	2	client	client
		p	3	width	width
		p	4	height	height
		p	5	top	top
		p	6	bottom	bottom
		p	7	entryHeight	entryHeight
	m	(Ldtc$a;)V	a	setSelected
	m	(Ljava/util/List;)V	a	setLanServers
		p	1	lanServers	lanServers
	m	(Ldyt;)V	a	setServers
		p	1	servers	servers
	m	()V	u	updateEntries
c	dtc$a	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$Entry
c	dtc$b	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$ScanningEntry
	f	Ldlx;	a	client
c	dtc$c	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$LanServerEntry
	f	Ldlx;	a	client
	f	Lepa;	b	server
	f	Ldta;	c	screen
	f	J	d	time
	m	(Ldta;Lepa;)V	<init>	<init>
		p	1	screen	screen
		p	2	server	server
	m	()Lepa;	a	getLanServerEntry
c	dtc$d	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$ServerEntry
	f	Ldta;	b	screen
	f	Ldlx;	c	client
	f	Ldys;	d	server
	f	Luh;	e	iconTextureId
	f	Ljava/lang/String;	f	iconUri
	f	Lell;	g	icon
	f	J	h	time
	m	(Ldtc;Ldta;Ldys;)V	<init>	<init>
		p	2	screen	screen
		p	3	server	server
	m	(II)V	a	swapEntries
		p	1	i	i
		p	2	j	j
	m	(Ldhl;IILuh;)V	a	draw
	m	()Ldys;	b	getServer
c	dtf	net/minecraft/client/gui/screen/pack/ResourcePackOrganizer
	f	Ljava/util/List;	b	enabledPacks
	f	Ljava/util/List;	c	disabledPacks
	f	Ljava/util/function/BiConsumer;	d	renderer
	f	Ljava/lang/Runnable;	e	updateCallback
	f	Ljava/util/function/Consumer;	f	applier
	m	(Ljava/lang/Runnable;Ljava/util/function/BiConsumer;Laar;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	updateCallback	updateCallback
		p	2	renderer	renderer
	m	()Ljava/util/stream/Stream;	a	getDisabledPacks
	m	()Ljava/util/stream/Stream;	b	getEnabledPacks
	m	()V	c	apply
c	dtf$a	net/minecraft/client/gui/screen/pack/ResourcePackOrganizer$Pack
	m	(Lelw;)V	a	render
		p	1	textureManager	textureManager
	m	()Laaq;	a	getCompatibility
	m	()Lmr;	b	getDisplayName
	m	()Lmr;	c	getDescription
	m	()Laas;	d	getSource
	m	()Lmu;	e	getDecoratedDescription
	m	()Z	f	isPinned
	m	()Z	g	isAlwaysEnabled
	m	()V	h	enable
	m	()V	i	disable
	m	()V	j	moveTowardStart
	m	()V	k	moveTowardEnd
	m	()Z	l	isEnabled
	m	()Z	m	canBeEnabled
	m	()Z	n	canBeDisabled
	m	()Z	o	canMoveTowardStart
	m	()Z	p	canMoveTowardEnd
c	dtf$b	net/minecraft/client/gui/screen/pack/ResourcePackOrganizer$AbstractPack
	f	Laap;	b	profile
	m	(Ldtf;Laap;)V	<init>	<init>
		p	2	profile	profile
	m	(I)V	a	move
		p	1	offset	offset
	m	()Ljava/util/List;	q	getCurrentList
	m	()Ljava/util/List;	r	getOppositeList
	m	()V	s	toggle
c	dtf$c	net/minecraft/client/gui/screen/pack/ResourcePackOrganizer$EnabledPack
c	dtf$d	net/minecraft/client/gui/screen/pack/ResourcePackOrganizer$DisabledPack
c	dtg	net/minecraft/client/gui/screen/pack/AbstractPackScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lmr;	b	DROP_INFO
	f	Lmr;	c	FOLDER_INFO
	f	Ldtf;	p	organizer
	f	Ldqs;	q	parent
	f	Z	r	shouldSave
	f	Ldth;	s	availablePackList
	f	Ldth;	t	selectedPackList
	f	Ldni;	v	doneButton
	m	(Ldqs;Lne;Ljava/util/function/Function;Ljava/io/File;)V	<init>	<init>
		p	1	parent	parent
		p	2	title	title
	m	(Ldth;Ljava/util/stream/Stream;)V	a	updatePackList
		p	1	widget	widget
		p	2	packs	packs
	m	()V	i	updatePackLists
c	dth	net/minecraft/client/gui/screen/pack/PackListWidget
	f	Luh;	a	RESOURCE_PACKS_TEXTURE
	f	Lmr;	o	INCOMPATIBLE
	f	Lmr;	p	INCOMPATIBLE_CONFIRM
	f	Lmr;	q	title
	m	(Ldlx;IILmr;)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
		p	4	title	title
c	dth$a	net/minecraft/client/gui/screen/pack/PackListWidget$ResourcePackEntry
	f	Ldlx;	a	client
	f	Ldqs;	b	screen
	f	Ldth;	c	widget
	f	Ldtf$a;	d	pack
	m	(Ldlx;Ldth;Ldqs;Ldtf$a;)V	<init>	<init>
		p	1	client	client
		p	2	widget	widget
		p	3	screen	screen
		p	4	pack	pack
	m	()Z	a	isSelectable
c	dtj	net/minecraft/client/gui/screen/recipebook/AbstractFurnaceRecipeBookScreen
	f	Ljava/util/Iterator;	l	fuelIterator
	f	Ljava/util/Set;	m	fuels
	f	Lbhw;	n	outputSlot
	f	Lbke;	o	currentItem
	f	F	p	frameTime
	m	(Z)V	a	setFilteringCraftable
		p	1	filteringCraftable	filteringCraftable
	m	()Z	b	isFilteringCraftable
	m	(Z)V	d	setGuiOpen
		p	1	opened	opened
	m	()Z	d	isGuiOpen
	m	()Lmr;	g	getToggleCraftableButtonText
	m	()Ljava/util/Set;	h	getAllowedFuels
	m	()Lbke;	n	getItem
c	dtk	net/minecraft/client/gui/screen/recipebook/BlastFurnaceRecipeBookScreen
c	dtl	net/minecraft/client/gui/screen/recipebook/RecipeBookGhostSlots
	f	Lbmu;	a	recipe
	f	Ljava/util/List;	b	slots
	f	F	c	time
	m	(Lbmr;II)V	a	addSlot
		p	1	ingredient	ingredient
		p	2	x	x
		p	3	y	y
	m	(Lbmu;)V	a	setRecipe
		p	1	recipe	recipe
	m	(Ldhl;Ldlx;IIZF)V	a	draw
	m	()V	a	reset
	m	(I)Ldtl$a;	a	getSlot
		p	1	index	index
	m	()I	b	getSlotCount
	m	()Lbmu;	c	getRecipe
c	dtl$a	net/minecraft/client/gui/screen/recipebook/RecipeBookGhostSlots$GhostInputSlot
	f	Lbmr;	b	ingredient
	f	I	c	x
	f	I	d	y
	m	(Ldtl;Lbmr;II)V	<init>	<init>
		p	2	ingredient	ingredient
		p	3	x	x
		p	4	y	y
	m	()I	a	getX
	m	()I	b	getY
	m	()Lbki;	c	getCurrentItemStack
c	dtm	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget
	f	Luh;	a	BG_TEX
	f	Ljava/util/List;	b	alternativeButtons
	f	Z	c	visible
	f	I	d	buttonX
	f	I	e	buttonY
	f	Ldlx;	i	client
	f	Ldtr;	j	resultCollection
	f	Lbmu;	k	lastClickedRecipe
	f	F	l	time
	f	Z	m	furnace
	m	(Z)V	a	setVisible
		p	1	visible	visible
	m	(Ldlx;Ldtr;IIIIF)V	a	showAlternativesForResult
		p	1	client	client
		p	2	results	results
		p	3	buttonX	buttonX
		p	4	buttonY	buttonY
		p	5	areaCenterX	areaCenterX
		p	6	areaCenterY	areaCenterY
		p	7	delta	delta
	m	()Ldtr;	a	getResults
	m	()Lbmu;	b	getLastClickedRecipe
	m	()Z	c	isVisible
	m	(Ldhl;IIIIII)V	c	renderGrid
c	dtm$a	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget$AlternativeButtonWidget
	f	Ljava/util/List;	a	slots
	f	Lbmu;	c	recipe
	f	Z	d	isCraftable
	m	(Ldtm;IILbmu;Z)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	recipe	recipe
		p	5	isCraftable	isCraftable
	m	(Lbmu;)V	a	alignRecipe
c	dtm$a$a	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget$AlternativeButtonWidget$InputSlot
	f	[Lbki;	a	stacks
	f	I	b	y
	f	I	c	x
	m	(Ldtm$a;II[Lbki;)V	<init>	<init>
		p	2	y	y
		p	3	x	x
		p	4	stacks	stacks
c	dtm$b	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget$FurnaceAlternativeButtonWidget
c	dtn	net/minecraft/client/gui/screen/recipebook/RecipeBookWidget
	f	Luh;	a	TEXTURE
	f	Ldtl;	b	ghostSlots
	f	Ldny;	c	toggleCraftableButton
	f	Lbhp;	d	craftingScreenHandler
	f	Ldlx;	e	client
	f	Ldlk;	i	recipeBook
	f	Ldto;	j	recipesArea
	f	Lbee;	k	recipeFinder
	f	I	m	leftOffset
	f	I	n	parentWidth
	f	I	o	parentHeight
	f	Ljava/util/List;	p	tabButtons
	f	Ldtp;	q	currentTab
	f	Ldnp;	r	searchField
	f	Ljava/lang/String;	s	searchText
	f	I	t	cachedInvChangeCount
	f	Z	u	searching
	m	(Lbmu;Ljava/util/List;)V	a	showGhostRecipe
		p	1	recipe	recipe
		p	2	slots	slots
	m	(DDIIIII)Z	a	isClickOutsideBounds
	m	(Lbhw;)V	a	slotClicked
		p	1	slot	slot
	m	(IILdlx;ZLbhp;)V	a	initialize
		p	1	parentWidth	parentWidth
		p	2	parentHeight	parentHeight
		p	3	client	client
		p	4	isNarrow	isNarrow
		p	5	craftingScreenHandler	craftingScreenHandler
	m	(ZII)I	a	findLeftEdge
		p	1	narrow	narrow
		p	2	width	width
		p	3	parentWidth	parentWidth
	m	(Ljava/lang/String;)V	a	triggerPirateSpeakEasterEgg
	m	(Z)V	a	refreshResults
		p	1	resetCurrentPage	resetCurrentPage
	m	(Ldhl;IIZF)V	a	drawGhostSlots
	m	()Z	a	toggleFilteringCraftable
	m	()V	b	refreshTabButtons
	m	()Z	c	isOpen
	m	(Ldhl;IIII)V	c	drawTooltip
	m	(Z)V	c	setOpen
		p	1	opened	opened
	m	(Ldhl;IIII)V	d	drawGhostSlotTooltip
	m	()V	d	refreshInputs
	m	()V	e	setBookButtonTexture
	m	(Z)V	e	reset
		p	1	isNarrow	isNarrow
	m	()Lmr;	f	getCraftableButtonText
	m	()V	g	refreshSearchResults
	m	()Z	h	isWide
	m	()V	i	close
	m	()V	j	toggleOpen
	m	()V	k	update
	m	()V	l	refresh
	m	()V	m	sendBookDataPacket
c	dto	net/minecraft/client/gui/screen/recipebook/RecipeBookResults
	f	Ljava/util/List;	a	resultButtons
	f	Ldtq;	b	hoveredResultButton
	f	Ldtm;	c	alternatesWidget
	f	Ldlx;	d	client
	f	Ljava/util/List;	e	recipeDisplayListeners
	f	Ljava/util/List;	f	resultCollections
	f	Ldny;	g	nextPageButton
	f	Ldny;	h	prevPageButton
	f	I	i	pageCount
	f	I	j	currentPage
	f	Laco;	k	recipeBook
	f	Lbmu;	l	lastClickedRecipe
	f	Ldtr;	m	resultCollection
	m	(Ljava/util/List;Z)V	a	setResults
		p	2	resetCurrentPage	resetCurrentPage
	m	(Ldtn;)V	a	setGui
	m	(DDIIIII)Z	a	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	areaLeft	areaLeft
		p	7	areaTop	areaTop
		p	8	areaWidth	areaWidth
		p	9	areaHeight	areaHeight
	m	(Ldlx;II)V	a	initialize
		p	2	parentLeft	parentLeft
		p	3	parentTop	parentTop
	m	(Ldhl;IIIIF)V	a	draw
	m	()Lbmu;	a	getLastClickedRecipe
	m	(Ldhl;II)V	a	drawTooltip
	m	(Ljava/util/List;)V	a	onRecipesDisplayed
	m	()Ldtr;	b	getLastClickedResults
	m	()V	c	hideAlternates
	m	()Ldlx;	d	getMinecraftClient
	m	()Laco;	e	getRecipeBook
	m	()V	f	refreshResultButtons
	m	()V	g	hideShowPageButtons
c	dtp	net/minecraft/client/gui/screen/recipebook/RecipeGroupButtonWidget
	f	Ldme;	t	category
	f	F	u	bounce
	m	(Ldme;)V	<init>	<init>
		p	1	category	category
	m	(Ldlk;)Z	a	hasKnownRecipes
		p	1	recipeBook	recipeBook
	m	(Ldlx;)V	a	checkForNewRecipes
		p	1	client	client
	m	(Lehh;)V	a	renderIcons
		p	1	itemRenderer	itemRenderer
	m	()Ldme;	b	getCategory
c	dtq	net/minecraft/client/gui/screen/recipebook/AnimatedResultButton
	f	Luh;	a	BG_TEX
	f	Lbhp;	b	craftingScreenHandler
	f	Laco;	c	recipeBook
	f	Ldtr;	d	results
	f	F	e	time
	f	F	s	bounce
	f	I	t	currentResultIndex
	m	(Ldtr;Ldto;)V	a	showResultCollection
	m	(Ldqs;)Ljava/util/List;	a	getTooltip
		p	1	screen	screen
	m	()Ldtr;	a	getResultCollection
	m	(II)V	a	setPos
		p	1	x	x
		p	2	y	y
	m	()Z	b	hasResults
	m	()Lbmu;	d	currentRecipe
	m	()Ljava/util/List;	k	getResults
c	dtr	net/minecraft/client/gui/screen/recipebook/RecipeResultCollection
	f	Ljava/util/List;	a	recipes
	f	Ljava/util/Set;	b	craftableRecipes
	f	Ljava/util/Set;	c	fittingRecipes
	f	Ljava/util/Set;	d	unlockedRecipes
	f	Z	e	singleOutput
	m	(Laco;)V	a	initialize
		p	1	recipeBook	recipeBook
	m	(Lbee;IILaco;)V	a	computeCraftables
		p	1	recipeFinder	recipeFinder
		p	2	gridWidth	gridWidth
		p	3	gridHeight	gridHeight
		p	4	recipeBook	recipeBook
	m	()Z	a	isInitialized
	m	(Z)Ljava/util/List;	a	getResults
		p	1	craftableOnly	craftableOnly
	m	(Lbmu;)Z	a	isCraftable
		p	1	recipe	recipe
	m	(Lbmu;)V	b	addRecipe
		p	1	recipe	recipe
	m	(Z)Ljava/util/List;	b	getRecipes
		p	1	craftable	craftable
	m	()Z	b	hasCraftableRecipes
	m	()Z	c	hasFittingRecipes
	m	()Ljava/util/List;	d	getAllRecipes
	m	()Z	e	hasSingleOutput
c	dts	net/minecraft/client/gui/screen/recipebook/RecipeDisplayListener
	m	(Ljava/util/List;)V	a	onRecipesDisplayed
		p	1	recipes	recipes
c	dtt	net/minecraft/client/gui/screen/recipebook/RecipeBookProvider
	m	()V	ay_	refreshRecipeBook
	m	()Ldtn;	l	getRecipeBookWidget
c	dtu	net/minecraft/client/gui/screen/recipebook/FurnaceRecipeBookScreen
c	dtv	net/minecraft/client/gui/screen/recipebook/SmokerRecipeBookScreen
c	dty	net/minecraft/client/gui/screen/world/CreateWorldScreen
	f	Z	A	moreOptionsOpen
	f	Ldni;	B	createLevelButton
	f	Ldni;	C	gameModeSwitchButton
	f	Ldni;	E	moreOptionsButton
	f	Ldni;	F	gameRulesButton
	f	Ldni;	H	enableCheatsButton
	f	Lmr;	I	firstGameModeDescriptionLine
	f	Lmr;	J	secondGameModeDescriptionLine
	f	Ljava/lang/String;	K	levelName
	f	Lbpx;	L	gameRules
	f	Z	a	hardcore
	f	Ldud;	c	moreOptionsDialog
	f	Ldqs;	q	parent
	f	Ldnp;	r	levelNameField
	f	Ljava/lang/String;	s	saveDirectoryName
	f	Ldty$b;	t	currentMode
	f	Ldty$b;	u	lastMode
	f	Z	x	cheatsEnabled
	f	Z	y	tweakedCheats
	m	(Ldqs;)V	<init>	<init>
		p	1	parent	parent
	m	(Ldty$b;)V	a	tweakDefaultsTo
	m	(Z)V	c	setMoreOptionsOpen
		p	1	moreOptionsOpen	moreOptionsOpen
	m	()V	i	setMoreOptionsOpen
	m	()V	l	updateSettingsLabels
	m	()V	m	updateSaveFolderName
	m	()V	n	createLevel
	m	()V	u	toggleMoreOptions
c	dty$a	net/minecraft/client/gui/screen/world/CreateWorldScreen$WorldCreationException
c	dty$b	net/minecraft/client/gui/screen/world/CreateWorldScreen$Mode
	f	Ljava/lang/String;	e	translationSuffix
	f	Lbpy;	f	defaultGameMode
	m	(Ljava/lang/String;ILjava/lang/String;Lbpy;)V	<init>	<init>
		p	3	translationSuffix	translationSuffix
		p	4	defaultGameMode	defaultGameMode
c	dtz	net/minecraft/client/gui/screen/world/EditGameRulesScreen
	f	Ljava/util/function/Consumer;	a	ruleSaver
	f	Ldtz$g;	b	ruleListWidget
	f	Ljava/util/Set;	c	invalidRuleWidgets
	f	Ldni;	p	doneButton
	f	Ljava/util/List;	q	tooltip
	f	Lbpx;	r	gameRules
	m	(Lbpx;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	gameRules	gameRules
		p	2	ruleSaveConsumer	ruleSaveConsumer
	m	(Ldtz$f;)V	a	markInvalid
		p	1	ruleWidget	ruleWidget
	m	(Ldtz$f;)V	b	markValid
		p	1	ruleWidget	ruleWidget
	m	(Ljava/util/List;)V	b	setTooltipDescription
		p	1	description	description
	m	()V	i	updateDoneButton
c	dtz$a	net/minecraft/client/gui/screen/world/EditGameRulesScreen$BooleanRuleWidget
	f	Ldni;	e	toggleButton
	m	(Ldtz;Lmr;Ljava/util/List;Ljava/lang/String;Lbpx$a;)V	<init>	<init>
		p	2	name	name
		p	3	description	description
		p	4	ruleName	ruleName
	m	(Lmr;Z)Lmx;	a	createBooleanRuleText
		p	1	text	text
		p	2	value	value
c	dtz$b	net/minecraft/client/gui/screen/world/EditGameRulesScreen$RuleCategoryWidget
	f	Lmr;	b	name
	m	(Ldtz;Lmr;)V	<init>	<init>
		p	2	text	text
c	dtz$c	net/minecraft/client/gui/screen/world/EditGameRulesScreen$RuleWidgetFactory
	m	(Lmr;Ljava/util/List;Ljava/lang/String;Lbpx$g;)Ldtz$f;	create	create
		p	1	name	name
		p	2	description	description
		p	3	ruleName	ruleName
		p	4	rule	rule
c	dtz$d	net/minecraft/client/gui/screen/world/EditGameRulesScreen$NamedRuleWidget
	f	Ljava/util/List;	a	name
	f	Ljava/util/List;	b	children
	m	(Ldtz;Ljava/util/List;Lmr;)V	<init>	<init>
		p	2	description	description
		p	3	name	name
	m	(Ldhl;II)V	a	drawName
		p	1	matrices	matrices
		p	2	x	x
		p	3	y	y
c	dtz$e	net/minecraft/client/gui/screen/world/EditGameRulesScreen$IntRuleWidget
	f	Ldnp;	e	valueWidget
	m	(Ldtz;Lmr;Ljava/util/List;Ljava/lang/String;Lbpx$d;)V	<init>	<init>
		p	2	name	name
		p	3	description	description
		p	4	ruleName	ruleName
		p	5	rule	rule
c	dtz$f	net/minecraft/client/gui/screen/world/EditGameRulesScreen$AbstractRuleWidget
	f	Ljava/util/List;	a	description
	m	(Ldtz;Ljava/util/List;)V	<init>	<init>
		p	2	description	description
c	dtz$g	net/minecraft/client/gui/screen/world/EditGameRulesScreen$RuleListWidget
c	dtz$g$1	net/minecraft/client/gui/screen/world/EditGameRulesScreen$RuleListWidget$1
	m	(Lbpx$e;Ldtz$c;)V	a	createRuleWidget
		p	1	key	key
		p	2	widgetFactory	widgetFactory
c	du	net/minecraft/command/arguments/NumberRangeArgumentType
	m	()Ldu$b;	a	numberRange
c	du$a	net/minecraft/command/arguments/NumberRangeArgumentType$FloatRangeArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lbx$c;	a	parse
c	du$a$a	net/minecraft/command/arguments/NumberRangeArgumentType$FloatRangeArgumentType$Serializer
	m	(Lmg;)Ldu$a;	a	fromPacket
c	du$b	net/minecraft/command/arguments/NumberRangeArgumentType$IntRangeArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lbx$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbx$d;	a	getRangeArgument
c	du$b$a	net/minecraft/command/arguments/NumberRangeArgumentType$IntRangeArgumentType$Serializer
	m	(Lmg;)Ldu$b;	a	fromPacket
c	du$c	net/minecraft/command/arguments/NumberRangeArgumentType$NumberSerializer
	m	(Ldu;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Ldu;Lmg;)V	a	toPacket
c	dua	net/minecraft/client/gui/screen/world/EditWorldScreen
	f	Ldni;	c	saveButton
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	p	callback
	f	Ldnp;	q	levelNameTextField
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldae$a;)V	<init>	<init>
		p	1	callback	callback
	m	(Ldae$a;)Z	a	backupLevel
	m	()V	i	commit
c	dub	net/minecraft/client/gui/screen/world/OptimizeWorldScreen
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	DIMENSION_COLORS
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	c	callback
	f	Lamu;	p	updater
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Ldae$a;Lbqe;ZLcom/google/common/collect/ImmutableSet;)V	<init>	<init>
		p	1	callback	callback
c	duc	net/minecraft/client/gui/screen/world/SelectWorldScreen
	f	Ldqs;	a	parent
	f	Ldnp;	b	searchBox
	f	Ljava/util/List;	c	tooltipText
	f	Ldni;	p	deleteButton
	f	Ldni;	q	selectButton
	f	Ldni;	r	editButton
	f	Ldni;	s	recreateButton
	f	Lduf;	t	levelList
	m	(Ldqs;)V	<init>	<init>
		p	1	parent	parent
	m	(Ljava/util/List;)V	b	setTooltip
	m	(Z)V	c	worldSelected
		p	1	active	active
c	dud	net/minecraft/client/gui/screen/world/MoreOptionsDialog
	f	Ldni;	a	bonusItemsButton
	f	Lmr;	d	AMPLIFIED_INFO_TEXT
	f	Ldmt;	e	textRenderer
	f	I	f	parentWidth
	f	Ldnp;	g	seedTextField
	f	Ldni;	h	mapFeaturesButton
	f	Ldni;	i	mapTypeButton
	f	Ldni;	j	customizeTypeButton
	f	Lcix;	m	generatorOptions
	f	Ljava/lang/String;	o	seedText
	m	(Ljava/lang/String;)Ljava/util/OptionalLong;	a	tryParseLong
	m	(Z)Lcix;	a	getGeneratorOptions
		p	1	hardcore	hardcore
	m	(Ldty;Ldlx;Ldmt;)V	a	method_28092
		p	1	parent	parent
		p	2	client	client
		p	3	textRenderer	textRenderer
	m	()Z	a	isDebugWorld
	m	(Lcix;)V	a	setGeneratorOptions
	m	(Z)V	b	setVisible
		p	1	visible	visible
c	due	net/minecraft/client/world/GeneratorType
	f	Ldue;	a	DEFAULT
	f	Ldue;	b	AMPLIFIED
	f	Ljava/util/List;	c	VALUES
	f	Ldue;	e	FLAT
	f	Ldue;	f	LARGE_BIOMES
	f	Ldue;	g	SINGLE_BIOME_SURFACE
	f	Ldue;	h	SINGLE_BIOME_CAVES
	f	Ldue;	i	SINGLE_BIOME_FLOATING_ISLANDS
	f	Ldue;	j	DEBUG_ALL_BLOCK_STATES
	f	Lmr;	k	translationKey
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	translationKey	translationKey
	m	()Lmr;	a	getTranslationKey
c	due$a	net/minecraft/client/world/GeneratorType$ScreenProvider
c	duf	net/minecraft/client/gui/screen/world/WorldListWidget
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/text/DateFormat;	o	DATE_FORMAT
	f	Luh;	p	UNKNOWN_SERVER_LOCATION
	f	Luh;	q	WORLD_SELECTION_LOCATION
	f	Lduc;	r	parent
	f	Ljava/util/List;	s	levels
	m	(Lduc;Ldlx;IIIIILjava/util/function/Supplier;Lduf;)V	<init>	<init>
		p	1	parent	parent
		p	2	client	client
		p	3	width	width
		p	4	height	height
		p	5	top	top
		p	6	bottom	bottom
		p	7	itemHeight	itemHeight
		p	8	searchFilter	searchFilter
		p	9	list	list
	m	(Ljava/util/function/Supplier;Z)V	a	filter
		p	2	load	load
	m	(Lduf$a;)V	a	setSelected
	m	()Lduc;	g	getParent
c	duf$a	net/minecraft/client/gui/screen/world/WorldListWidget$Entry
	f	Ldlx;	b	client
	f	Lduc;	c	screen
	f	Ldaf;	d	level
	f	Luh;	e	iconLocation
	f	Ljava/io/File;	f	iconFile
	f	Lell;	g	icon
	f	J	h	time
	m	(Lduf;Lduf;Ldaf;Ldae;)V	<init>	<init>
		p	2	levelList	levelList
		p	3	level	level
		p	4	levelStorage	levelStorage
	m	()V	a	play
	m	()V	b	delete
	m	()V	c	edit
	m	()V	d	recreate
	m	()V	e	start
	m	()Lell;	g	getIconTexture
c	duh	net/minecraft/client/gui/hud/spectator/TeleportToSpecificPlayerSpectatorCommand
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
	f	Luh;	b	skinId
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	gameProfile	gameProfile
c	dui	net/minecraft/client/gui/hud/spectator/RootSpectatorCommandGroup
	f	Ljava/util/List;	a	elements
c	duj	net/minecraft/client/gui/hud/spectator/SpectatorMenu
	f	Ldul;	a	BLANK_COMMAND
	f	Ldul;	b	CLOSE_COMMAND
	f	Ldul;	c	PREVIOUS_PAGE_COMMAND
	f	Ldul;	d	NEXT_PAGE_COMMAND
	f	Ldul;	e	DISABLED_NEXT_PAGE_COMMAND
	f	Ldum;	f	closeCallback
	f	Lduk;	g	currentGroup
	f	I	h	selectedSlot
	f	I	i	page
	m	(Ldum;)V	<init>	<init>
		p	1	closeCallback	closeCallback
	m	(Lduk;)V	a	selectElement
		p	1	group	group
	m	(I)Ldul;	a	getCommand
		p	1	slot	slot
	m	()Ljava/util/List;	a	getCommands
	m	()Ldul;	b	getSelectedCommand
	m	(I)V	b	useCommand
		p	1	slot	slot
	m	()Lduk;	c	getCurrentGroup
	m	()V	d	close
	m	()I	e	getSelectedSlot
	m	()Ldun;	f	getCurrentState
c	duj$a	net/minecraft/client/gui/hud/spectator/SpectatorMenu$CloseSpectatorMenuCommand
c	duj$b	net/minecraft/client/gui/hud/spectator/SpectatorMenu$ChangePageSpectatorMenuCommand
	f	I	a	direction
	f	Z	b	enabled
	m	(IZ)V	<init>	<init>
		p	1	direction	direction
		p	2	enabled	enabled
c	duk	net/minecraft/client/gui/hud/spectator/SpectatorMenuCommandGroup
	m	()Ljava/util/List;	a	getCommands
	m	()Lmr;	b	getPrompt
c	dul	net/minecraft/client/gui/hud/spectator/SpectatorMenuCommand
	m	(Ldhl;FI)V	a	renderIcon
	m	(Lduj;)V	a	use
		p	1	menu	menu
	m	()Z	aA_	isEnabled
	m	()Lmr;	az_	getName
c	dum	net/minecraft/client/gui/hud/spectator/SpectatorMenuCloseCallback
	m	(Lduj;)V	a	close
		p	1	menu	menu
c	dun	net/minecraft/client/gui/hud/spectator/SpectatorMenuState
	f	Lduk;	a	group
	f	Ljava/util/List;	b	commands
	f	I	c	selectedSlot
	m	(Lduk;Ljava/util/List;I)V	<init>	<init>
		p	1	group	group
		p	2	commands	commands
		p	3	selectedSlot	selectedSlot
	m	(I)Ldul;	a	getCommand
		p	1	slot	slot
	m	()I	b	getSelectedSlot
c	duo	net/minecraft/client/gui/hud/spectator/TeleportSpectatorMenu
	f	Lcom/google/common/collect/Ordering;	a	ORDERING
	f	Ljava/util/List;	b	elements
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1	entries	entries
c	dup	net/minecraft/client/gui/hud/spectator/TeamTeleportSpectatorMenu
	f	Ljava/util/List;	a	commands
c	dup$a	net/minecraft/client/gui/hud/spectator/TeamTeleportSpectatorMenu$TeleportToSpecificTeamCommand
	f	Ldfk;	b	team
	f	Luh;	c	skinId
	f	Ljava/util/List;	d	scoreboardEntries
c	dus	net/minecraft/client/RunArgs
	f	Ldus$d;	a	network
	f	Ldgi;	b	windowSettings
	f	Ldus$a;	c	directories
	f	Ldus$b;	d	game
	f	Ldus$c;	e	autoConnect
	m	(Ldus$d;Ldgi;Ldus$a;Ldus$b;Ldus$c;)V	<init>	<init>
		p	1	network	network
		p	2	windowSettings	windowSettings
		p	3	dirs	dirs
		p	4	game	game
		p	5	autoConnect	autoConnect
c	dus$a	net/minecraft/client/RunArgs$Directories
	f	Ljava/io/File;	a	runDir
	f	Ljava/io/File;	b	resourcePackDir
	f	Ljava/io/File;	c	assetDir
	f	Ljava/lang/String;	d	assetIndex
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V	<init>	<init>
		p	1	runDir	runDir
		p	2	resPackDir	resPackDir
		p	3	assetDir	assetDir
		p	4	assetIndex	assetIndex
	m	()Lelz;	a	getResourceIndex
c	dus$b	net/minecraft/client/RunArgs$Game
	f	Z	a	demo
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	versionType
	f	Z	d	multiplayerDisabled
	f	Z	e	onlineChatDisabled
	m	(ZLjava/lang/String;Ljava/lang/String;ZZ)V	<init>	<init>
		p	1	demo	demo
		p	2	version	version
		p	3	versionType	versionType
		p	4	multiplayerDisabled	multiplayerDisabled
		p	5	onlineChatDisabled	onlineChatDisabled
c	dus$c	net/minecraft/client/RunArgs$AutoConnect
	f	Ljava/lang/String;	a	serverAddress
	f	I	b	serverPort
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	serverAddress	serverAddress
		p	2	serverPort	serverPort
c	dus$d	net/minecraft/client/RunArgs$Network
	f	Ldml;	a	session
	f	Lcom/mojang/authlib/properties/PropertyMap;	c	profileProperties
	f	Ljava/net/Proxy;	d	netProxy
	m	(Ldml;Lcom/mojang/authlib/properties/PropertyMap;Lcom/mojang/authlib/properties/PropertyMap;Ljava/net/Proxy;)V	<init>	<init>
		p	1	session	session
		p	3	profileProperties	profileProperties
		p	4	proxy	proxy
c	dut	net/minecraft/client/util/GlException
c	dux	net/minecraft/client/render/entity/model/AbstractZombieModel
	m	(Lbcb;)Z	a	isAttacking
	m	(Lbcb;FFFFF)V	a	setAngles
c	duy	net/minecraft/client/render/entity/model/AnimalModel
	f	Z	a	headScaled
	f	F	b	childHeadYOffset
	f	F	f	childHeadZOffset
	f	F	g	invertedChildHeadScale
	f	F	h	invertedChildBodyScale
	f	F	i	childBodyYOffset
	m	(ZFF)V	<init>	<init>
		p	1	headScaled	headScaled
		p	2	childHeadYOffset	childHeadYOffset
		p	3	childHeadZOffset	childHeadZOffset
	m	(Ljava/util/function/Function;ZFFFFF)V	<init>	<init>
		p	2	headScaled	headScaled
		p	3	childHeadYOffset	childHeadYOffset
		p	4	childHeadZOffset	childHeadZOffset
		p	5	invertedChildHeadScale	invertedChildHeadScale
		p	6	invertedChildBodyScale	invertedChildBodyScale
		p	7	childBodyYOffset	childBodyYOffset
	m	(ZFFFFF)V	<init>	<init>
		p	1	headScaled	headScaled
		p	2	childHeadYOffset	childHeadYOffset
		p	3	childHeadZOffset	childHeadZOffset
		p	4	invertedChildHeadScale	invertedChildHeadScale
		p	5	invertedChildBodyScale	invertedChildBodyScale
		p	6	childBodyYOffset	childBodyYOffset
	m	()Ljava/lang/Iterable;	a	getHeadParts
	m	()Ljava/lang/Iterable;	b	getBodyParts
c	duz	net/minecraft/client/render/entity/model/CrossbowPosing
	m	(Ldyg;Ldyg;Ldyg;Z)V	a	hold
		p	0	holdingArm	holdingArm
		p	1	otherArm	otherArm
		p	2	head	head
		p	3	rightArmed	rightArmed
	m	(Ldyg;Ldyg;Laoy;Z)V	a	charge
		p	0	holdingArm	holdingArm
		p	1	pullingArm	pullingArm
		p	2	actor	actor
		p	3	rightArmed	rightArmed
c	dv	net/minecraft/command/arguments/IdentifierArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_ADVANCEMENT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_RECIPE_EXCEPTION
	m	()Ldv;	a	identifier
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lw;	a	getAdvancementArgument
	m	(Lcom/mojang/brigadier/StringReader;)Luh;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbmu;	b	getRecipeArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Luh;	e	getIdentifier
		p	0	context	context
		p	1	name	name
c	dva	net/minecraft/client/render/entity/model/ModelWithArms
	m	(Laou;Ldhl;)V	a	setArmAngle
		p	1	arm	arm
		p	2	matrices	matrices
c	dvb	net/minecraft/client/render/entity/model/ArmorStandArmorEntityModel
	m	(FII)V	<init>	<init>
		p	1	scale	scale
		p	2	textureWidth	textureWidth
		p	3	textureHeight	textureHeight
	m	(Lbay;FFFFF)V	a	setAngles
c	dvc	net/minecraft/client/render/entity/model/ArmorStandEntityModel
	f	Ldyg;	a	rightTorso
	f	Ldyg;	b	leftTorso
	f	Ldyg;	t	hip
	f	Ldyg;	u	plate
	m	(Lbay;FFF)V	a	animateModel
	m	(Lbay;FFFFF)V	setAngles	setAngles
c	dvd	net/minecraft/client/render/entity/model/BatEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	body
	f	Ldyg;	f	rightWing
	f	Ldyg;	g	leftWing
	f	Ldyg;	h	rightWingTip
	f	Ldyg;	i	leftWingTip
	m	(Layf;FFFFF)V	a	setAngles
c	dve	net/minecraft/client/render/entity/model/BeeEntityModel
	f	Ldyg;	a	body
	f	Ldyg;	b	torso
	f	Ldyg;	f	rightWing
	f	Ldyg;	g	leftWing
	f	Ldyg;	h	frontLegs
	f	Ldyg;	i	middleLegs
	f	Ldyg;	j	backLegs
	f	Ldyg;	k	stinger
	f	Ldyg;	l	leftAntenna
	f	Ldyg;	m	rightAntenna
	f	F	n	bodyPitch
	m	(Layl;FFF)V	a	animateModel
	m	(Layl;FFFFF)V	a	setAngles
c	dvf	net/minecraft/client/render/entity/model/BlazeEntityModel
	f	[Ldyg;	a	rods
	f	Ldyg;	b	head
	f	Lcom/google/common/collect/ImmutableList;	f	parts
c	dvg	net/minecraft/client/render/entity/model/BoatEntityModel
	f	[Ldyg;	a	paddles
	f	Ldyg;	b	bottom
	f	Lcom/google/common/collect/ImmutableList;	f	parts
	m	(Lbft;IF)V	a	setPaddleAngle
		p	1	boat	boat
		p	2	paddle	paddle
		p	3	angle	angle
	m	(Z)Ldyg;	a	makePaddle
		p	1	isLeft	isLeft
	m	(Lbft;FFFFF)V	a	setAngles
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
	m	()Ldyg;	c	getBottom
c	dvh	net/minecraft/client/render/entity/model/BookModel
	f	Ldyg;	a	leftCover
	f	Ldyg;	b	rightCover
	f	Ldyg;	c	leftBlock
	f	Ldyg;	d	rightBlock
	f	Ldyg;	e	leftPage
	f	Ldyg;	f	rightPage
	f	Ldyg;	g	spine
	f	Ljava/util/List;	h	parts
	m	(FFFF)V	a	setPageAngles
	m	(Ldhl;Ldhp;IIFFFF)V	b	method_24184
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	light	light
		p	4	overlay	overlay
		p	5	red	red
		p	6	green	green
		p	7	blue	blue
		p	8	alpha	alpha
c	dvi	net/minecraft/client/render/entity/model/CatEntityModel
	f	F	m	sleepAnimation
	f	F	n	tailCurlAnimation
	f	F	o	headDownAnimation
	m	(Laym;FFF)V	a	animateModel
	m	(Laym;FFFFF)V	a	setAngles
c	dvj	net/minecraft/client/render/entity/model/DonkeyEntityModel
	f	Ldyg;	f	leftChest
	f	Ldyg;	g	rightChest
	m	(Lazl;FFFFF)V	a	setAngles
c	dvk	net/minecraft/client/render/entity/model/ChickenEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	torso
	f	Ldyg;	f	rightLeg
	f	Ldyg;	g	leftLeg
	f	Ldyg;	h	rightWing
	f	Ldyg;	i	leftWing
	f	Ldyg;	j	beak
	f	Ldyg;	k	wattle
c	dvl	net/minecraft/client/render/entity/model/CodEntityModel
	f	Ldyg;	a	body
	f	Ldyg;	b	topFin
	f	Ldyg;	f	head
	f	Ldyg;	g	face
	f	Ldyg;	h	rightFin
	f	Ldyg;	i	leftFin
	f	Ldyg;	j	tail
c	dvm	net/minecraft/client/render/entity/model/TintableAnimalModel
	f	F	a	redMultiplier
	f	F	b	greenMultiplier
	f	F	f	blueMultiplier
	m	(FFF)V	a	setColorMultiplier
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
c	dvn	net/minecraft/client/render/entity/model/TintableCompositeModel
	f	F	a	redMultiplier
	f	F	b	greenMultiplier
	f	F	f	blueMultiplier
	m	(FFF)V	a	setColorMultiplier
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
c	dvo	net/minecraft/client/render/entity/model/CowEntityModel
	m	()Ldyg;	c	getHead
c	dvp	net/minecraft/client/render/entity/model/CreeperEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	helmet
	f	Ldyg;	f	torso
	f	Ldyg;	g	rightBackLeg
	f	Ldyg;	h	leftBackLeg
	f	Ldyg;	i	rightFrontLeg
	f	Ldyg;	j	leftFrontLeg
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dvq	net/minecraft/client/render/entity/model/DolphinEntityModel
	f	Ldyg;	a	body
	f	Ldyg;	b	tail
	f	Ldyg;	f	flukes
c	dvr	net/minecraft/client/render/entity/model/DrownedEntityModel
	m	(Lbcu;FFFFF)V	a	setAngles
	m	(Lbcu;FFF)V	a	animateModel
c	dvs	net/minecraft/client/render/entity/model/ElytraEntityModel
	m	(Laoy;FFFFF)V	a	setAngles
c	dvt	net/minecraft/client/render/entity/model/EndermanEntityModel
	f	Z	a	carryingBlock
	f	Z	b	angry
	m	(Laoy;FFFFF)V	setAngles	setAngles
c	dvu	net/minecraft/client/render/entity/model/EndermiteEntityModel
c	dvv	net/minecraft/client/render/entity/model/EntityModel
	f	F	c	handSwingProgress
	f	Z	d	riding
	f	Z	e	child
	m	(Laom;FFF)V	a	animateModel
		p	1	entity	entity
		p	2	limbAngle	limbAngle
		p	3	limbDistance	limbDistance
		p	4	tickDelta	tickDelta
	m	(Laom;FFFFF)V	a	setAngles
		p	1	entity	entity
		p	2	limbAngle	limbAngle
		p	3	limbDistance	limbDistance
		p	4	animationProgress	animationProgress
		p	5	headYaw	headYaw
		p	6	headPitch	headPitch
	m	(Ldvv;)V	a	copyStateTo
		p	1	copy	copy
c	dvw	net/minecraft/client/render/entity/model/EvokerFangsEntityModel
c	dvx	net/minecraft/client/render/entity/model/FoxEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	rightEar
	f	Ldyg;	f	leftEar
	f	Ldyg;	g	nose
	f	Ldyg;	h	torso
	f	Ldyg;	i	rightBackLeg
	f	Ldyg;	j	leftBackLeg
	f	Ldyg;	k	rightFrontLeg
	f	Ldyg;	l	leftFrontLeg
	f	Ldyg;	m	tail
	m	(Lays;FFF)V	a	animateModel
	m	(Lays;FFFFF)V	a	setAngles
c	dvy	net/minecraft/client/render/entity/model/GhastEntityModel
c	dvz	net/minecraft/client/render/entity/model/GiantEntityModel
	m	(FZ)V	<init>	<init>
		p	1	scale	scale
	m	(Lbbw;)Z	a	isAttacking
c	dw	net/minecraft/command/arguments/ScoreHolderArgumentType
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	EMPTY_SCORE_HOLDER_EXCEPTION
	f	Z	d	multiple
	m	(Z)V	<init>	<init>
		p	1	multiple	multiple
	m	(Lcom/mojang/brigadier/StringReader;)Ldw$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getScoreHolder
		p	0	context	context
		p	1	name	name
	m	()Ldw;	a	scoreHolder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getScoreHolders
		p	0	context	context
		p	1	name	name
		p	2	players	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getScoreHolders
		p	0	context	context
		p	1	name	name
	m	()Ldw;	b	scoreHolders
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getScoreboardScoreHolders
		p	0	context	context
		p	1	name	name
c	dw$a	net/minecraft/command/arguments/ScoreHolderArgumentType$ScoreHolder
	m	(Lcz;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1	source	source
c	dw$b	net/minecraft/command/arguments/ScoreHolderArgumentType$SelectorScoreHolder
	f	Lez;	a	selector
c	dw$c	net/minecraft/command/arguments/ScoreHolderArgumentType$Serializer
	m	(Ldw;Lmg;)V	a	toPacket
	m	(Ldw;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lmg;)Ldw;	a	fromPacket
c	dwa	net/minecraft/client/render/entity/model/GuardianEntityModel
	f	Ldyg;	j	body
	f	Ldyg;	k	eye
	m	(Lbbx;FFFFF)V	a	setAngles
c	dwb	net/minecraft/client/render/entity/model/ModelWithHead
	m	()Ldyg;	c	getHead
c	dwc	net/minecraft/client/render/entity/model/HoglinEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	rightEar
	f	Ldyg;	f	leftEar
	f	Ldyg;	g	torso
	m	(Laoz;FFFFF)V	a	setAngles
c	dwd	net/minecraft/client/render/entity/model/HorseEntityModel
	f	Ldyg;	a	torso
	f	Ldyg;	b	head
	f	Ldyg;	f	leftBackLeg
	f	Ldyg;	g	rightBackLeg
	f	Ldyg;	h	leftFrontLeg
	f	Ldyg;	i	rightFrontLeg
	f	Ldyg;	n	tail
	m	(F)V	<init>	<init>
		p	1	scale	scale
	m	(Lazm;FFF)V	a	animateModel
	m	(Lazm;FFFFF)V	a	setAngles
c	dwe	net/minecraft/client/render/entity/model/SkullOverlayEntityModel
	f	Ldyg;	b	skullOverlay
c	dwf	net/minecraft/client/render/entity/model/BipedEntityModel
	f	Ldyg;	f	head
	f	Ldyg;	g	helmet
	f	Ldyg;	h	torso
	f	Ldyg;	i	rightArm
	f	Ldyg;	j	leftArm
	f	Ldyg;	k	rightLeg
	f	Ldyg;	l	leftLeg
	f	Ldwf$a;	m	leftArmPose
	f	Ldwf$a;	n	rightArmPose
	f	Z	o	isSneaking
	f	F	p	leaningPitch
	m	(Ljava/util/function/Function;FFII)V	<init>	<init>
		p	1	texturedLayerFactory	texturedLayerFactory
		p	2	scale	scale
		p	3	pivotY	pivotY
		p	4	textureWidth	textureWidth
		p	5	textureHeight	textureHeight
	m	(FFII)V	<init>	<init>
		p	1	scale	scale
		p	2	pivotY	pivotY
		p	3	textureWidth	textureWidth
		p	4	textureHeight	textureHeight
	m	(F)V	<init>	<init>
		p	1	scale	scale
	m	(Laoy;FFF)V	a	animateModel
	m	(Ldwf;)V	a	setAttributes
	m	(Laoy;FFFFF)V	a	setAngles
	m	(FFF)F	a	lerpAngle
	m	(Laoy;)Laou;	a	getPreferredArm
		p	1	entity	entity
	m	(Laou;)Ldyg;	a	getArm
		p	1	arm	arm
	m	(Z)V	d_	setVisible
		p	1	visible	visible
c	dwf$a	net/minecraft/client/render/entity/model/BipedEntityModel$ArmPose
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	1	name	name
		p	2	id	id
c	dwg	net/minecraft/client/render/entity/model/IllagerEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	hat
	f	Ldyg;	f	torso
	f	Ldyg;	g	arms
	f	Ldyg;	h	rightLeg
	f	Ldyg;	i	leftLeg
	f	Ldyg;	j	rightAttackingArm
	f	Ldyg;	k	leftAttackingArm
	m	(FFII)V	<init>	<init>
		p	1	scale	scale
		p	2	pivotY	pivotY
		p	3	textureWidth	textureWidth
		p	4	textureHeight	textureHeight
	m	(Lbbj;FFFFF)V	a	setAngles
c	dwh	net/minecraft/client/render/entity/model/IronGolemEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	torso
	f	Ldyg;	f	rightArm
	f	Ldyg;	g	leftArm
	f	Ldyg;	h	rightLeg
	f	Ldyg;	i	leftLeg
	m	(Layt;FFF)V	a	animateModel
	m	(Layt;FFFFF)V	a	setAngles
	m	()Ldyg;	b	getRightArm
c	dwi	net/minecraft/client/render/entity/model/MagmaCubeEntityModel
	f	Ldyg;	b	innerCube
	m	(Lbck;FFFFF)V	a	setAngles
	m	(Lbck;FFF)V	a	animateModel
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
c	dwj	net/minecraft/client/render/entity/model/LeashKnotEntityModel
	f	Ldyg;	a	leashKnot
c	dwk	net/minecraft/client/render/entity/model/CompositeEntityModel
	m	()Ljava/lang/Iterable;	a	getParts
c	dwl	net/minecraft/client/render/entity/model/LlamaEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	torso
	f	Ldyg;	f	rightBackLeg
	f	Ldyg;	g	leftBackLeg
	f	Ldyg;	h	rightFrontLeg
	f	Ldyg;	i	leftFrontLeg
	f	Ldyg;	j	rightChest
	f	Ldyg;	k	leftChest
	m	(F)V	<init>	<init>
		p	1	scale	scale
	m	(Lazl;FFFFF)V	a	setAngles
c	dwm	net/minecraft/client/render/entity/model/LlamaSpitEntityModel
	f	Ldyg;	a	spit
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dwn	net/minecraft/client/render/entity/model/MinecartEntityModel
c	dwo	net/minecraft/client/model/Model
	f	Ljava/util/function/Function;	q	layerFactory
	f	I	r	textureWidth
	f	I	s	textureHeight
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	layerFactory	layerFactory
	m	(Luh;)Lech;	a	getLayer
		p	1	texture	texture
	m	(Ldhl;Ldhp;IIFFFF)V	a	render
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	light	light
		p	4	overlay	overlay
		p	5	red	red
		p	6	green	green
		p	7	blue	blue
		p	8	alpha	alpha
	m	(Ljava/lang/Object;)V	accept	accept
		p	1	part	part
	m	(Ldyg;)V	b	accept
c	dwp	net/minecraft/client/model/ModelUtil
	m	(FFF)F	a	interpolateAngle
		p	0	angle1	angle1
		p	1	angle2	angle2
		p	2	progress	progress
c	dwq	net/minecraft/client/render/entity/model/OcelotEntityModel
	f	Ldyg;	a	leftBackLeg
	f	Ldyg;	b	rightBackLeg
	f	Ldyg;	f	leftFrontLeg
	f	Ldyg;	g	rightFrontLeg
	f	Ldyg;	h	upperTail
	f	Ldyg;	i	lowerTail
	f	Ldyg;	j	head
	f	Ldyg;	k	torso
	f	I	l	animationState
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dwr	net/minecraft/client/render/entity/model/PandaEntityModel
	f	F	j	scaredAnimationProgress
	f	F	k	lieOnBackAnimationProgress
	f	F	l	playAnimationProgress
	m	(IF)V	<init>	<init>
		p	1	legHeight	legHeight
		p	2	scale	scale
	m	(Layw;FFFFF)V	a	setAngles
	m	(Layw;FFF)V	a	animateModel
c	dws	net/minecraft/client/render/entity/model/ParrotEntityModel
	f	Ldyg;	a	torso
	f	Ldyg;	b	tail
	f	Ldyg;	f	leftWing
	f	Ldyg;	g	rightWing
	f	Ldyg;	h	head
	f	Ldyg;	i	forehead
	f	Ldyg;	j	innerBeak
	f	Ldyg;	k	outerBeak
	f	Ldyg;	l	headFeathers
	f	Ldyg;	m	leftLeg
	f	Ldyg;	n	rightLeg
	m	(Layx;FFFFF)V	a	setAngles
	m	(Layx;)Ldws$a;	a	getPose
		p	0	parrot	parrot
	m	(Ldws$a;IFFFFF)V	a	setAngles
		p	1	pose	pose
		p	2	danceAngle	danceAngle
		p	3	limbAngle	limbAngle
		p	4	limbDistance	limbDistance
		p	5	age	age
		p	6	headYaw	headYaw
		p	7	headPitch	headPitch
	m	(Layx;FFF)V	a	animateModel
	m	(Ldws$a;)V	a	animateModel
		p	1	pose	pose
	m	(Ldhl;Ldhp;IIFFFFI)V	a	poseOnShoulder
		p	1	matrices	matrices
		p	2	vertexConsumer	vertexConsumer
		p	3	light	light
		p	4	overlay	overlay
		p	5	limbAngle	limbAngle
		p	6	limbDistance	limbDistance
		p	7	headYaw	headYaw
		p	8	headPitch	headPitch
		p	9	danceAngle	danceAngle
c	dws$a	net/minecraft/client/render/entity/model/ParrotEntityModel$Pose
c	dwt	net/minecraft/client/render/entity/model/PhantomEntityModel
	f	Ldyg;	a	body
	f	Ldyg;	b	leftWing
	f	Ldyg;	f	leftWingTip
	f	Ldyg;	g	rightWing
	f	Ldyg;	h	rightWingTip
	f	Ldyg;	i	tail
	f	Ldyg;	j	lowerTail
c	dwu	net/minecraft/client/render/entity/model/PigEntityModel
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dwv	net/minecraft/client/render/entity/model/PiglinEntityModel
	f	Ldyg;	a	rightEar
		c	Maybe the ears are swapped
	f	Ldyg;	b	leftEar
	m	(FII)V	<init>	<init>
		p	1	scale	scale
		p	2	textureWidth	textureWidth
		p	3	textureHeight	textureHeight
	m	(Laoz;F)V	a	method_29353
	m	(Laoz;FFFFF)V	a	setAngles
c	dww	net/minecraft/client/render/entity/model/PlayerEntityModel
	f	Ljava/util/List;	a	parts
	f	Ldyg;	b	cape
	f	Ldyg;	t	leftSleeve
	f	Ldyg;	u	rightSleeve
	f	Ldyg;	v	leftPantLeg
	f	Ldyg;	w	rightPantLeg
	f	Ldyg;	x	jacket
	f	Ldyg;	y	ears
	f	Z	z	thinArms
	m	(FZ)V	<init>	<init>
		p	1	scale	scale
		p	2	thinArms	thinArms
	m	(Ljava/util/Random;)Ldyg;	a	getRandomPart
		p	1	random	random
	m	(Ldhl;Ldhp;II)V	a	renderEars
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	light	light
		p	4	overlay	overlay
	m	(Ldyg;)V	accept	accept
	m	(Ldhl;Ldhp;II)V	b	renderCape
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	light	light
		p	4	overlay	overlay
	m	(Laoy;FFFFF)V	setAngles	setAngles
c	dwx	net/minecraft/client/render/entity/model/PolarBearEntityModel
	m	(Layz;FFFFF)V	a	setAngles
c	dwy	net/minecraft/client/render/entity/model/LargePufferfishEntityModel
c	dwz	net/minecraft/client/render/entity/model/MediumPufferfishEntityModel
c	dx	net/minecraft/command/arguments/ScoreboardSlotArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_SLOT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getScoreboardSlot
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	()Ldx;	a	scoreboardSlot
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dxa	net/minecraft/client/render/entity/model/SmallPufferfishEntityModel
c	dxb	net/minecraft/client/render/entity/model/QuadrupedEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	torso
	f	Ldyg;	f	backRightLeg
	f	Ldyg;	g	backLeftLeg
	f	Ldyg;	h	frontRightLeg
	f	Ldyg;	i	frontLeftLeg
	m	(IFZFFFFI)V	<init>	<init>
		p	1	legHeight	legHeight
		p	2	scale	scale
		p	3	headScaled	headScaled
		p	4	childHeadYOffset	childHeadYOffset
		p	5	childHeadZOffset	childHeadZOffset
		p	6	invertedChildHeadScale	invertedChildHeadScale
		p	7	invertedChildBodyScale	invertedChildBodyScale
		p	8	childBodyYOffset	childBodyYOffset
c	dxc	net/minecraft/client/render/entity/model/RabbitEntityModel
	f	Ldyg;	a	leftFoot
	f	Ldyg;	b	rightFoot
	f	Ldyg;	f	leftBackLeg
	f	Ldyg;	g	rightBackLeg
	f	Ldyg;	h	torso
	f	Ldyg;	i	leftFrontLeg
	f	Ldyg;	j	rightFrontLeg
	f	Ldyg;	k	head
	f	Ldyg;	l	rightEar
	f	Ldyg;	m	leftEar
	f	Ldyg;	n	tail
	f	Ldyg;	o	nose
	m	(Lazb;FFF)V	a	animateModel
	m	(Lazb;FFFFF)V	a	setAngles
c	dxd	net/minecraft/client/render/entity/model/RavagerEntityModel
	f	Ldyg;	b	jaw
	f	Ldyg;	f	torso
	f	Ldyg;	g	rightBackLeg
	f	Ldyg;	h	leftBackLeg
	f	Ldyg;	i	rightFrontLeg
	f	Ldyg;	j	leftFrontLeg
	m	(Lbcg;FFF)V	a	animateModel
	m	(Lbcg;FFFFF)V	a	setAngles
c	dxe	net/minecraft/client/render/entity/model/SalmonEntityModel
	f	Ldyg;	a	torso
	f	Ldyg;	b	tail
	f	Ldyg;	f	head
	f	Ldyg;	g	rightFin
	f	Ldyg;	h	leftFin
c	dxf	net/minecraft/client/render/entity/model/SheepWoolEntityModel
	m	(Lazd;FFFFF)V	a	setAngles
	m	(Lazd;FFF)V	a	animateModel
c	dxg	net/minecraft/client/render/entity/model/SheepEntityModel
	m	(Lazd;FFFFF)V	a	setAngles
	m	(Lazd;FFF)V	a	animateModel
c	dxh	net/minecraft/client/render/entity/model/ShieldEntityModel
c	dxi	net/minecraft/client/render/entity/model/ShulkerBulletEntityModel
	f	Ldyg;	a	bullet
c	dxj	net/minecraft/client/render/entity/model/ShulkerEntityModel
	f	Ldyg;	a	bottomShell
	f	Ldyg;	b	topShell
	f	Ldyg;	f	head
	m	(Lbch;FFFFF)V	a	setAngles
	m	()Ldyg;	b	getBottomShell
	m	()Ldyg;	c	getTopShell
	m	()Ldyg;	d	getHead
c	dxk	net/minecraft/client/render/entity/model/SilverfishEntityModel
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
c	dxl	net/minecraft/client/render/entity/model/SkeletonEntityModel
	m	(FZ)V	<init>	<init>
		p	1	stretch	stretch
		p	2	isClothing	isClothing
	m	(Laoz;FFFFF)V	a	setAngles
	m	(Laoz;FFF)V	a	animateModel
c	dxm	net/minecraft/client/render/entity/model/SkullEntityModel
	f	Ldyg;	a	skull
	m	(IIII)V	<init>	<init>
		p	1	textureU	textureU
		p	2	textureV	textureV
		p	3	textureWidth	textureWidth
		p	4	textureHeight	textureHeight
c	dxn	net/minecraft/client/render/entity/model/SlimeEntityModel
	f	Ldyg;	a	innerCube
	f	Ldyg;	b	rightEye
	f	Ldyg;	f	leftEye
	f	Ldyg;	g	mouth
	m	(I)V	<init>	<init>
		p	1	size	size
c	dxo	net/minecraft/client/render/entity/model/SnowmanEntityModel
	f	Ldyg;	a	middleSnowball
	f	Ldyg;	b	bottomSnowball
	f	Ldyg;	f	topSnowball
	f	Ldyg;	g	leftArm
	f	Ldyg;	h	rightArm
	m	()Ldyg;	b	getTopSnowball
c	dxp	net/minecraft/client/render/entity/model/SpiderEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	b	thorax
	f	Ldyg;	f	abdomen
	f	Ldyg;	g	rightBackLeg
	f	Ldyg;	h	leftBackLeg
	f	Ldyg;	i	rightBackMiddleLeg
	f	Ldyg;	j	leftBackMiddleLeg
	f	Ldyg;	k	rightFrontMiddleLeg
	f	Ldyg;	l	leftFrontMiddleLeg
	f	Ldyg;	m	rightFrontLeg
	f	Ldyg;	n	leftFrontLeg
c	dxq	net/minecraft/client/render/entity/model/SquidEntityModel
	f	Ldyg;	a	head
c	dxr	net/minecraft/client/render/entity/model/StriderEntityModel
	m	(Lbco;FFFFF)V	a	setAngles
c	dxs	net/minecraft/client/render/entity/model/TridentEntityModel
	f	Luh;	a	TEXTURE
c	dxt	net/minecraft/client/render/entity/model/SmallTropicalFishEntityModel
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dxu	net/minecraft/client/render/entity/model/LargeTropicalFishEntityModel
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dxv	net/minecraft/client/render/entity/model/TurtleEntityModel
	f	Ldyg;	j	tail
	m	(F)V	<init>	<init>
		p	1	scale	scale
	m	(Lazi;FFFFF)V	a	setAngles
c	dxw	net/minecraft/client/render/entity/model/VexEntityModel
	f	Ldyg;	a	leftWing
	f	Ldyg;	b	rightWing
	m	(Lbcp;FFFFF)V	a	setAngles
c	dxx	net/minecraft/client/render/entity/model/ModelWithHat
	m	(Z)V	a	setHatVisible
		p	1	visible	visible
c	dxy	net/minecraft/client/render/entity/model/VillagerResemblingModel
	f	Ldyg;	a	head
	f	Ldyg;	g	torso
	f	Ldyg;	h	robe
	f	Ldyg;	i	arms
	f	Ldyg;	j	rightLeg
	f	Ldyg;	k	leftLeg
	f	Ldyg;	l	nose
	m	(FII)V	<init>	<init>
		p	1	scale	scale
		p	2	textureWidth	textureWidth
		p	3	textureHeight	textureHeight
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dxz	net/minecraft/client/render/entity/model/WitchEntityModel
	f	Z	m	liftingNose
	f	Ldyg;	n	mole
	m	()Ldyg;	b	getNose
	m	(Z)V	b	setLiftingNose
c	dy	net/minecraft/command/arguments/ItemSlotArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_SLOT_EXCEPTION
	f	Ljava/util/Map;	c	slotNamesToSlotCommandId
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getItemSlot
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	()Ldy;	a	itemSlot
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dya	net/minecraft/client/render/entity/model/WitherEntityModel
	m	(F)V	<init>	<init>
		p	1	scale	scale
	m	(Lbaw;FFF)V	a	animateModel
	m	(Lbaw;FFFFF)V	a	setAngles
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
c	dyb	net/minecraft/client/render/entity/model/WolfEntityModel
	f	Ldyg;	a	head
	f	Ldyg;	f	torso
	f	Ldyg;	g	rightBackLeg
	f	Ldyg;	h	leftBackLeg
	f	Ldyg;	i	rightFrontLeg
	f	Ldyg;	j	leftFrontLeg
	f	Ldyg;	k	tail
	f	Ldyg;	m	neck
	m	(Lazk;FFFFF)V	a	setAngles
	m	(Lazk;FFF)V	a	animateModel
c	dyc	net/minecraft/client/render/entity/model/ZombieEntityModel
	m	(FZ)V	<init>	<init>
		p	1	scale	scale
	m	(Lbcu;)Z	a	isAttacking
c	dyd	net/minecraft/client/render/entity/model/ZombieVillagerEntityModel
	f	Ldyg;	a	hat
	m	(FZ)V	<init>	<init>
		p	1	scale	scale
	m	(Lbcu;FFFFF)V	a	setAngles
c	dye	net/minecraft/client/render/entity/model/DragonHeadEntityModel
	f	Ldyg;	b	head
	f	Ldyg;	c	jaw
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dyg	net/minecraft/client/model/ModelPart
	f	F	a	pivotX
	f	F	b	pivotY
	f	F	c	pivotZ
	f	F	d	pitch
	f	F	e	yaw
	f	F	f	roll
	f	Z	g	mirror
	f	Z	h	visible
	f	F	i	textureWidth
	f	F	j	textureHeight
	f	I	k	textureOffsetU
	f	I	l	textureOffsetV
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	m	cuboids
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	n	children
	m	(Ldwo;)V	<init>	<init>
		p	1	model	model
	m	(IIII)V	<init>	<init>
		p	1	textureWidth	textureWidth
		p	2	textureHeight	textureHeight
		p	3	textureOffsetU	textureOffsetU
		p	4	textureOffsetV	textureOffsetV
	m	(Ldwo;II)V	<init>	<init>
		p	1	model	model
		p	2	textureOffsetU	textureOffsetU
		p	3	textureOffsetV	textureOffsetV
	m	(Ldhl;Ldhp;II)V	a	render
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	light	light
		p	4	overlay	overlay
	m	(Ldhl;)V	a	rotate
		p	1	matrix	matrix
	m	(FFFFFF)Ldyg;	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
	m	(Ljava/lang/String;FFFIIIFII)Ldyg;	a	addCuboid
		p	1	name	name
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	sizeX	sizeX
		p	6	sizeY	sizeY
		p	7	sizeZ	sizeZ
		p	8	extra	extra
		p	9	textureOffsetU	textureOffsetU
		p	10	textureOffsetV	textureOffsetV
	m	(FFFFFFFZ)V	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	extra	extra
		p	8	mirror	mirror
	m	(FFF)V	a	setPivot
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(IIFFFFFFFFFZZ)V	a	addCuboid
		p	1	u	u
		p	2	v	v
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	extraX	extraX
		p	10	extraY	extraY
		p	11	extraZ	extraZ
		p	12	mirror	mirror
	m	(FFFFFFF)V	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	extra	extra
	m	(FFFFFFFFF)V	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	extraX	extraX
		p	8	extraY	extraY
		p	9	extraZ	extraZ
	m	(Ldyg;)V	a	copyPositionAndRotation
	m	(II)Ldyg;	a	setTextureOffset
		p	1	textureOffsetU	textureOffsetU
		p	2	textureOffsetV	textureOffsetV
	m	(FFFFFFZ)Ldyg;	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	mirror	mirror
	m	(Ldhl;Ldhp;IIFFFF)V	a	render
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	light	light
		p	4	overlay	overlay
		p	5	red	red
		p	6	green	green
		p	7	blue	blue
		p	8	alpha	alpha
	m	(Ldhl$a;Ldhp;IIFFFF)V	a	renderCuboids
		p	1	matrices	matrices
		p	2	vertexConsumer	vertexConsumer
		p	3	light	light
		p	4	overlay	overlay
		p	5	red	red
		p	6	green	green
		p	7	blue	blue
		p	8	alpha	alpha
	m	(Ljava/util/Random;)Ldyg$a;	a	getRandomCuboid
		p	1	random	random
	m	(Ldyg;)V	b	addChild
		p	1	part	part
	m	(II)Ldyg;	b	setTextureSize
		p	1	width	width
		p	2	height	height
c	dyg$a	net/minecraft/client/model/ModelPart$Cuboid
	f	F	a	minX
	f	F	b	minY
	f	F	c	minZ
	f	F	d	maxX
	f	F	e	maxY
	f	F	f	maxZ
	f	[Ldyg$b;	g	sides
	m	(IIFFFFFFFFFZFF)V	<init>	<init>
		p	1	u	u
		p	2	v	v
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	extraX	extraX
		p	10	extraY	extraY
		p	11	extraZ	extraZ
		p	12	mirror	mirror
		p	13	textureWidth	textureWidth
		p	14	textureHeight	textureHeight
c	dyg$b	net/minecraft/client/model/ModelPart$Quad
	f	[Ldyg$c;	a	vertices
	f	Lg;	b	direction
	m	([Ldyg$c;FFFFFFZLfz;)V	<init>	<init>
		p	1	vertices	vertices
		p	2	u1	u1
		p	3	v1	v1
		p	4	u2	u2
		p	5	v2	v2
		p	6	squishU	squishU
		p	7	squishV	squishV
		p	8	flip	flip
		p	9	direction	direction
c	dyg$c	net/minecraft/client/model/ModelPart$Vertex
	f	Lg;	a	pos
	f	F	b	u
	f	F	c	v
	m	(Lg;FF)V	<init>	<init>
		p	1	pos	pos
		p	2	u	u
		p	3	v	v
	m	(FFFFF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	u	u
		p	5	v	v
	m	(FF)Ldyg$c;	a	remap
		p	1	u	u
		p	2	v	v
c	dyj	net/minecraft/client/network/ClientAdvancementManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldlx;	b	client
	f	Lx;	c	manager
	f	Ljava/util/Map;	d	advancementProgresses
	f	Ldyj$a;	e	listener
	f	Lw;	f	selectedTab
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Lw;Z)V	a	selectTab
		p	1	tab	tab
		p	2	local	local
	m	(Lqs;)V	a	onAdvancements
		p	1	packet	packet
	m	(Ldyj$a;)V	a	setListener
		p	1	listener	listener
	m	()Lx;	a	getManager
c	dyj$a	net/minecraft/client/network/ClientAdvancementManager$Listener
	m	(Lw;Ly;)V	a	setProgress
		p	1	advancement	advancement
		p	2	progress	progress
	m	(Lw;)V	e	selectTab
		p	1	advancement	advancement
c	dyk	net/minecraft/client/world/ClientChunkManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lchj;	b	emptyChunk
	f	Lcwr;	c	lightingProvider
	f	Ldyk$a;	d	chunks
	f	Ldym;	e	world
	m	(Ldym;I)V	<init>	<init>
		p	1	world	world
		p	2	loadDistance	loadDistance
	m	(I)V	a	updateLoadDistance
		p	1	loadDistance	loadDistance
	m	(IILcgz;Lmg;Lle;IZ)Lchj;	a	loadChunkFromPacket
		p	1	x	x
		p	2	z	z
		p	3	biomes	biomes
		p	4	buf	buf
		p	5	tag	tag
		p	6	verticalStripBitmask	verticalStripBitmask
		p	7	complete	complete
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lchj;II)Z	a	positionEquals
		p	0	chunk	chunk
		p	1	x	x
		p	2	y	y
	m	(IILchc;Z)Lchj;	b	getChunk
	m	(I)I	b	getChunkMapRadius
		p	0	loadDistance	loadDistance
	m	(II)V	d	unload
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(II)V	e	setChunkMapCenter
		p	1	x	x
		p	2	z	z
	m	()I	h	getLoadedChunkCount
c	dyk$a	net/minecraft/client/world/ClientChunkManager$ClientChunkMap
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	b	chunks
	f	I	c	radius
	f	I	d	diameter
	f	I	e	centerChunkX
	f	I	f	centerChunkZ
	f	I	g	loadedChunkCount
	m	(Ldyk;I)V	<init>	<init>
		p	2	loadDistance	loadDistance
	m	(II)I	a	getIndex
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(ILchj;Lchj;)Lchj;	a	compareAndSet
		p	1	index	index
		p	2	expect	expect
		p	3	update	update
	m	(I)Lchj;	a	getChunk
		p	1	index	index
	m	(ILchj;)V	a	set
		p	1	index	index
		p	2	chunk	chunk
	m	(II)Z	b	isInRadius
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
c	dyl	net/minecraft/client/network/ClientLoginNetworkHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldlx;	b	client
	f	Ldqs;	c	parentGui
	f	Ljava/util/function/Consumer;	d	statusConsumer
	f	Lme;	e	connection
	f	Lcom/mojang/authlib/GameProfile;	f	profile
	m	(Lme;Ldlx;Ldqs;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	connection	connection
		p	2	client	client
		p	3	parentGui	parentGui
		p	4	statusConsumer	statusConsumer
	m	(Ljava/lang/String;)Lmr;	a	joinServerSession
		p	1	serverId	serverId
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	b	getSessionService
c	dym	net/minecraft/client/world/ClientWorld
	f	Ldfm;	A	scoreboard
	f	Ljava/util/Map;	B	mapStates
	f	I	C	lightningTicksLeft
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;	D	colorCache
	f	Ldyk;	E	chunkManager
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	regularEntities
	f	Ldyn;	b	netHandler
	f	Lebx;	c	worldRenderer
	f	Ldym$a;	d	clientWorldProperties
	f	Lebo;	x	skyProperties
	f	Ldlx;	y	client
	f	Ljava/util/List;	z	players
	m	(Lchj;)V	a	unloadBlockEntities
		p	1	chunk	chunk
	m	(Lfu;Lcfj;Lhf;Z)V	a	addParticle
		p	1	pos	pos
		p	2	state	state
		p	3	parameters	parameters
	m	(DDDDDLhf;)V	a	addParticle
		p	1	minX	minX
		p	3	maxX	maxX
		p	5	minZ	minZ
		p	7	maxZ	maxZ
		p	9	y	y
		p	11	parameters	parameters
	m	(Ldfm;)V	a	setScoreboard
		p	1	scoreboard	scoreboard
	m	(ILaom;)V	a	addEntity
		p	1	id	id
		p	2	entity	entity
	m	(Lfu;Lhf;Ldfg;D)V	a	addParticle
		p	1	pos	pos
		p	2	parameters	parameters
		p	3	shape	shape
		p	4	y	y
	m	(Lfu;Lack;Lacm;FFZ)V	a	playSound
		p	1	pos	pos
		p	2	sound	sound
		p	3	category	category
		p	4	volume	volume
		p	5	pitch	pitch
		p	6	useDistance	useDistance
	m	(ILebc;)V	a	addPlayer
		p	1	id	id
		p	2	player	player
	m	(IIIILjava/util/Random;ZLfu$a;)V	a	randomBlockDisplayTick
		p	1	xCenter	xCenter
		p	2	yCenter	yCenter
		p	3	zCenter	zCenter
		p	4	radius	radius
		p	5	random	random
		p	6	spawnBarrierParticles	spawnBarrierParticles
		p	7	pos	pos
	m	()Lebo;	a	getSkyProperties
	m	(Lfu;)V	a	setSpawnPos
		p	1	pos	pos
	m	(Laom;Laom;)V	a	tickPassenger
		p	1	entity	entity
		p	2	passenger	passenger
	m	(Laom;)V	a	tickEntity
		p	1	entity	entity
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lchj;)V	b	addEntitiesToChunk
		p	1	chunk	chunk
	m	(Lfu;Lcfj;)V	b	setBlockStateWithoutNeighborUpdates
		p	1	pos	pos
		p	2	state	state
	m	(Laom;)V	b	checkChunk
		p	1	entity	entity
	m	(Lfu;Lnet/minecraft/world/level/ColorResolver;)I	b	calculateColor
		p	1	pos	pos
		p	2	colorResolver	colorResolver
	m	(J)V	b	setTimeOfDay
	m	()Ljava/lang/Iterable;	b	getEntities
	m	(ILaom;)V	b	addEntityPrivate
		p	1	id	id
		p	2	entity	entity
	m	(III)V	c	doRandomBlockDisplayTicks
		p	1	xCenter	xCenter
		p	2	yCenter	yCenter
		p	3	zCenter	zCenter
	m	(III)V	d	scheduleBlockRenders
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)V	d	removeEntity
		p	1	entityId	entityId
	m	(Laom;)V	d	finishRemovingEntity
		p	1	entity	entity
	m	(II)V	e	resetChunkColor
	m	()V	g	tickEntities
	m	()V	h	reloadColor
	m	(F)Ldem;	h	getCloudsColor
		p	1	tickDelta	tickDelta
	m	()I	i	getRegularEntityCount
	m	()V	j	finishRemovingEntities
	m	()Ldyk;	k	getChunkManager
	m	()I	s	getLightningTicksLeft
	m	()Lfu;	u	getSpawnPos
	m	()Ldym$a;	v	getLevelProperties
	m	()V	x	tickTime
c	dym$a	net/minecraft/client/world/ClientWorld$Properties
	f	Z	a	hardcore
	f	Lbpx;	b	gameRules
	f	Z	c	flatWorld
	f	I	d	spawnX
	f	I	e	spawnY
	f	I	f	spawnZ
	f	J	g	time
	f	J	h	timeOfDay
	f	Z	i	raining
	f	Land;	j	difficulty
	f	Z	k	difficultyLocked
	m	(Land;ZZ)V	<init>	<init>
		p	1	difficulty	difficulty
		p	2	hardcore	hardcore
		p	3	flatWorld	flatWorld
	m	(Z)V	a	setDifficultyLocked
		p	1	difficultyLocked	difficultyLocked
	m	(J)V	a	setTime
		p	1	difficulty	difficulty
	m	(Land;)V	a	setDifficulty
		p	1	difficulty	difficulty
	m	(J)V	b	setTimeOfDay
		p	1	time	time
	m	()D	f	getSkyDarknessHeight
	m	()D	g	getHorizonShadingRatio
c	dyn	net/minecraft/client/network/ClientPlayNetworkHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lme;	b	connection
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Ldqs;	d	loginScreen
	f	Ldlx;	e	client
	f	Ldym;	f	world
	f	Ldym$a;	g	worldProperties
	f	Z	h	positionLookSetup
	f	Ljava/util/Map;	i	playerListEntries
	f	Ldyj;	j	advancementHandler
	f	Ldyo;	k	commandSource
	f	Ladh;	l	tagManager
	f	Ldlo;	m	dataQueryHandler
	f	I	n	chunkLoadDistance
	f	Ljava/util/Random;	o	random
	f	Lcom/mojang/brigadier/CommandDispatcher;	p	commandDispatcher
	f	Lbmv;	q	recipeManager
	f	Ljava/util/UUID;	r	sessionId
	f	Ljava/util/Set;	s	worldKeys
	f	Lgm;	t	registryTracker
	m	(Ldlx;Ldqs;Lme;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	client	client
		p	2	screen	screen
		p	3	connection	connection
		p	4	profile	profile
	m	(Lsd$a;)V	a	sendResourcePackStatus
		p	1	packStatus	packStatus
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	feedbackAfterDownload
		p	1	downloadFuture	downloadFuture
	m	(Ljava/util/UUID;)Ldyq;	a	getPlayerListEntry
		p	1	uuid	uuid
	m	(Ljava/lang/String;)Ldyq;	a	getPlayerListEntry
		p	1	profileName	profileName
	m	(IILcwr;Lbqi;IILjava/util/Iterator;Z)V	a	updateLighting
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	provider	provider
		p	4	type	type
		p	5	mask	mask
		p	6	filledMask	filledMask
		p	7	updates	updates
	m	(Lni;)V	a	sendPacket
		c	Sends a packet to the server.
		p	1	packet	packet
			c	the packet to send
	m	(Lbec;)Lbki;	a	getActiveTotemOfUndying
		p	0	player	player
	m	(Ljava/lang/String;)Z	b	validateResourcePackUrl
		p	1	url	url
	m	()Ldyo;	b	getCommandSource
	m	()V	c	clearWorld
	m	()Lbmv;	d	getRecipeManager
	m	()Ljava/util/Collection;	e	getPlayerList
	m	()Lcom/mojang/authlib/GameProfile;	f	getProfile
	m	()Ldyj;	g	getAdvancementHandler
	m	()Lcom/mojang/brigadier/CommandDispatcher;	h	getCommandDispatcher
	m	()Ldym;	i	getWorld
	m	()Ladh;	j	getTagManager
	m	()Ldlo;	k	getDataQueryHandler
	m	()Ljava/util/UUID;	l	getSessionId
	m	()Ljava/util/Set;	m	getWorldKeys
	m	()Lgm;	n	getRegistryTracker
c	dyo	net/minecraft/client/network/ClientCommandSource
	f	Ldyn;	a	networkHandler
	f	Ldlx;	b	client
	f	I	c	completionId
	f	Ljava/util/concurrent/CompletableFuture;	d	pendingCompletion
	m	(Ldyn;Ldlx;)V	<init>	<init>
		p	1	networkHandler	networkHandler
		p	2	client	client
	m	(D)Ljava/lang/String;	a	format
		p	0	d	d
	m	(I)Ljava/lang/String;	a	format
		p	0	i	i
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	a	onCommandSuggestions
		p	1	completionId	completionId
		p	2	suggestions	suggestions
c	dyp	net/minecraft/client/network/ClientPlayerInteractionManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldlx;	b	client
	f	Ldyn;	c	networkHandler
	f	Lfu;	d	currentBreakingPos
	f	Lbki;	e	selectedStack
	f	F	f	currentBreakingProgress
	f	F	g	blockBreakingSoundCooldown
	f	I	h	blockBreakingCooldown
	f	Z	i	breakingBlock
	f	Lbpy;	j	gameMode
	f	Lbpy;	k	previousGameMode
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;	l	unacknowledgedPlayerActions
	f	I	m	lastSelectedSlot
	m	(Ldlx;Ldyn;)V	<init>	<init>
		p	1	client	client
		p	2	networkHandler	networkHandler
	m	(Lfu;Lfz;)Z	a	attackBlock
		p	1	pos	pos
		p	2	direction	direction
	m	(Lfu;)Z	a	breakBlock
		p	1	pos	pos
	m	(Lbec;)V	a	copyAbilities
		p	1	player	player
	m	(Lbki;I)V	a	clickCreativeStack
		p	1	stack	stack
		p	2	slotId	slotId
	m	()Z	a	hasStatusBars
	m	(Ldym;Lacv;Ldlk;ZZ)Lebf;	a	createPlayer
		p	1	world	world
		p	2	stateHandler	stateHandler
		p	3	recipeBook	recipeBook
	m	(Ldym;Lfu;Lcfj;Lry$a;Z)V	a	processPlayerActionResponse
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	action	action
		p	5	approved	approved
	m	(Lbec;Laom;Ldei;Lanf;)Lang;	a	interactEntityAtLocation
		p	1	player	player
		p	3	hitResult	hitResult
	m	(I)V	a	pickFromInventory
		p	1	slot	slot
	m	(Lbec;Lbqb;Lanf;)Lang;	a	interactItem
		p	1	player	player
		p	2	world	world
		p	3	hand	hand
	m	(ILbmu;Z)V	a	clickRecipe
		p	1	syncId	syncId
		p	2	recipe	recipe
		p	3	craftAll	craftAll
	m	(Lbki;)V	a	dropCreativeStack
		p	1	stack	stack
	m	(Lry$a;Lfu;Lfz;)V	a	sendPlayerAction
		p	1	action	action
		p	2	pos	pos
		p	3	direction	direction
	m	(Lbec;Laom;)V	a	attackEntity
		p	1	player	player
		p	2	target	target
	m	(IIILbgq;Lbec;)Lbki;	a	clickSlot
		c	@see net.minecraft.screen.ScreenHandler#onSlotClick(int, int, net.minecraft.screen.slot.SlotActionType, net.minecraft.entity.player.PlayerEntity)
		p	1	syncId	syncId
		p	2	slotId	slotId
		p	3	clickData	clickData
		p	4	actionType	actionType
		p	5	player	player
	m	(Lbec;Laom;Lanf;)Lang;	a	interactEntity
		p	1	player	player
		p	2	entity	entity
		p	3	hand	hand
	m	(II)V	a	clickButton
		p	1	syncId	syncId
		p	2	buttonId	buttonId
	m	(Lebf;Ldym;Lanf;Ldeh;)Lang;	a	interactBlock
		p	1	player	player
		p	2	world	world
		p	3	hand	hand
		p	4	hitResult	hitResult
	m	(Lbpy;)V	b	setGameMode
		p	1	gameMode	gameMode
	m	()V	b	cancelBlockBreaking
	m	(Lbec;)V	b	stopUsingItem
		p	1	player	player
	m	(Lfu;Lfz;)Z	b	updateBlockBreakingProgress
		p	1	pos	pos
		p	2	direction	direction
	m	(Lfu;)Z	b	isCurrentlyBreaking
		p	1	pos	pos
	m	()F	c	getReachDistance
	m	()V	d	tick
	m	()Z	e	hasExperienceBar
	m	()Z	f	hasLimitedAttackSpeed
	m	()Z	g	hasCreativeInventory
	m	()Z	h	hasExtendedReach
	m	()Z	i	hasRidingInventory
	m	()Z	j	isFlyingLocked
	m	()Lbpy;	k	getPreviousGameMode
	m	()Lbpy;	l	getCurrentGameMode
	m	()Z	m	isBreakingBlock
	m	()V	n	syncSelectedSlot
c	dyq	net/minecraft/client/network/PlayerListEntry
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Map;	b	textures
	f	Lbpy;	c	gameMode
	f	I	d	latency
	f	Z	e	texturesLoaded
	f	Ljava/lang/String;	f	model
	f	Lmr;	g	displayName
	m	(Lpi$b;)V	<init>	<init>
		p	1	playerListPacketEntry	playerListPacketEntry
	m	(Lmr;)V	a	setDisplayName
		p	1	displayName	displayName
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	(Lbpy;)V	a	setGameMode
	m	(I)V	a	setLatency
		p	1	latency	latency
	m	()Lbpy;	b	getGameMode
	m	()I	c	getLatency
	m	()Z	e	hasSkinTexture
		c	Checks if the player represented by this entry has a custom skin.\n\n<p>If the player has the default skin, this will return false.
	m	()Ljava/lang/String;	f	getModel
	m	()Luh;	g	getSkinTexture
	m	()Luh;	h	getCapeTexture
	m	()Luh;	i	getElytraTexture
	m	()Ldfk;	j	getScoreboardTeam
	m	()V	k	loadTextures
	m	()Lmr;	l	getDisplayName
c	dyr	net/minecraft/network/ServerAddress
	f	Ljava/lang/String;	a	address
	f	I	b	port
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	address	address
	m	()Ljava/lang/String;	a	getAddress
	m	(Ljava/lang/String;I)I	a	portOrDefault
		p	0	port	port
		p	1	def	def
	m	(Ljava/lang/String;)Ldyr;	a	parse
		p	0	address	address
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	resolveServer
		p	0	address	address
	m	()I	b	getPort
c	dys	net/minecraft/client/network/ServerInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	address
	f	Lmr;	c	playerCountLabel
	f	Lmr;	d	label
	f	J	e	ping
	f	I	f	protocolVersion
	f	Lmr;	g	version
	f	Z	h	online
	f	Ljava/util/List;	i	playerListSummary
	f	Ldys$a;	j	resourcePackState
	f	Ljava/lang/String;	k	icon
	f	Z	l	local
	m	(Ljava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
		p	1	name	name
		p	2	address	address
		p	3	local	local
	m	(Ljava/lang/String;)V	a	setIcon
	m	(Lle;)Ldys;	a	deserialize
		p	0	tag	tag
	m	()Lle;	a	serialize
	m	(Ldys$a;)V	a	setResourcePackState
	m	(Ldys;)V	a	copyFrom
	m	()Ldys$a;	b	getResourcePack
	m	()Ljava/lang/String;	c	getIcon
	m	()Z	d	isLocal
c	dys$a	net/minecraft/client/network/ServerInfo$ResourcePackState
	f	Lmr;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Lmr;	a	getName
c	dyt	net/minecraft/client/options/ServerList
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldlx;	b	client
	f	Ljava/util/List;	c	servers
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(II)V	a	swapEntries
		p	1	index1	index1
	m	()V	a	loadFile
	m	(ILdys;)V	a	set
		p	1	index	index
	m	(Ldys;)V	a	remove
	m	(I)Ldys;	a	get
	m	(Ldys;)V	b	add
	m	()V	b	saveFile
	m	(Ldys;)V	c	updateServerListEntry
		p	0	e	e
	m	()I	c	size
c	dyu	net/minecraft/client/network/MultiplayerServerListPinger
	f	Lcom/google/common/base/Splitter;	a	ZERO_SPLITTER
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/List;	c	clientConnections
	m	(Ldys;Ljava/lang/Runnable;)V	a	add
		p	1	entry	entry
	m	(Ldys;)V	a	ping
	m	()V	a	tick
	m	()V	b	cancel
	m	()Lorg/apache/logging/log4j/Logger;	c	getLogger
	m	()Lcom/google/common/base/Splitter;	d	getZeroSplitter
c	dyu$1	net/minecraft/client/network/MultiplayerServerListPinger$1
	f	Z	e	sentQuery
	f	Z	f	received
	f	J	g	startTime
c	dyu$2	net/minecraft/client/network/MultiplayerServerListPinger$2
c	dyu$2$1	net/minecraft/client/network/MultiplayerServerListPinger$2$1
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	channelRead0
c	dyx	net/minecraft/client/particle/AshParticle
	m	(Ldym;DDDDDDFLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	scaleMultiplier	scaleMultiplier
		p	15	spriteProvider	spriteProvider
c	dyx$a	net/minecraft/client/particle/AshParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dyy	net/minecraft/client/particle/SweepAttackParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	scaleMultiplier	scaleMultiplier
		p	10	spriteProvider	spriteProvider
c	dyy$a	net/minecraft/client/particle/SweepAttackParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dyz	net/minecraft/client/particle/BarrierParticle
	m	(Ldym;DDDLbqa;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dyz$a	net/minecraft/client/particle/BarrierParticle$Factory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dz	net/minecraft/command/arguments/TeamArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_TEAM_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldfk;	a	getTeam
		p	0	context	context
		p	1	name	name
	m	()Ldz;	a	team
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dza	net/minecraft/client/particle/AscendingParticle
	f	Leap;	a	spriteProvider
	f	D	b	ascendingAcceleration
	m	(Ldym;DDDFFFDDDFLeap;FIDZ)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	randomVelocityXMultiplier	randomVelocityXMultiplier
		p	9	randomVelocityYMultiplier	randomVelocityYMultiplier
		p	10	randomVelocityZMultiplier	randomVelocityZMultiplier
		p	11	velocityX	velocityX
		p	13	velocityY	velocityY
		p	15	velocityZ	velocityZ
		p	17	scaleMultiplier	scaleMultiplier
		p	18	spriteProvider	spriteProvider
		p	19	colorMultiplier	colorMultiplier
		p	20	baseMaxAge	baseMaxAge
		p	21	ascendingAcceleration	ascendingAcceleration
		p	23	collidesWithWorld	collidesWithWorld
c	dzb	net/minecraft/client/particle/CrackParticle
	f	F	a	sampleU
	f	F	b	sampleV
	m	(Ldym;DDDLbki;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	stack	stack
	m	(Ldym;DDDDDDLbki;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	14	stack	stack
c	dzb$a	net/minecraft/client/particle/CrackParticle$ItemFactory
	m	(Lhe;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzb$b	net/minecraft/client/particle/CrackParticle$SlimeballFactory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzb$c	net/minecraft/client/particle/CrackParticle$SnowballFactory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzc	net/minecraft/client/particle/BubbleColumnUpParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzc$a	net/minecraft/client/particle/BubbleColumnUpParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzd	net/minecraft/client/particle/WaterBubbleParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzd$a	net/minecraft/client/particle/WaterBubbleParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dze	net/minecraft/client/particle/BubblePopParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	dze$a	net/minecraft/client/particle/BubblePopParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzf	net/minecraft/client/particle/CampfireSmokeParticle
	m	(Ldym;DDDDDDZ)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	signalFire	signalFire
c	dzf$a	net/minecraft/client/particle/CampfireSmokeParticle$CosySmokeFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzf$b	net/minecraft/client/particle/CampfireSmokeParticle$SignalSmokeFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzg	net/minecraft/client/particle/DamageParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzg$a	net/minecraft/client/particle/DamageParticle$DefaultFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzg$b	net/minecraft/client/particle/DamageParticle$EnchantedHitFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzg$c	net/minecraft/client/particle/DamageParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzh	net/minecraft/client/particle/DragonBreathParticle
	f	Z	a	reachedGround
	f	Leap;	b	spriteProvider
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	dzh$a	net/minecraft/client/particle/DragonBreathParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi	net/minecraft/client/particle/BlockLeakParticle
	f	Z	a	obsidianTear
	f	Lcwz;	b	fluid
	m	(Ldym;DDDLcwz;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
	m	()V	g	updateAge
	m	()V	h	updateVelocity
c	dzi$a	net/minecraft/client/particle/BlockLeakParticle$DrippingLava
	m	(Ldym;DDDLcwz;Lhf;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
		p	9	nextParticle	nextParticle
c	dzi$b	net/minecraft/client/particle/BlockLeakParticle$Dripping
	f	Lhf;	b	nextParticle
	m	(Ldym;DDDLcwz;Lhf;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
		p	9	nextParticle	nextParticle
c	dzi$c	net/minecraft/client/particle/BlockLeakParticle$Landing
	m	(Ldym;DDDLcwz;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
c	dzi$d	net/minecraft/client/particle/BlockLeakParticle$ContinuousFalling
	f	Lhf;	b	nextParticle
	m	(Ldym;DDDLcwz;Lhf;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
		p	9	nextParticle	nextParticle
c	dzi$e	net/minecraft/client/particle/BlockLeakParticle$Falling
	m	(Ldym;DDDLcwz;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
c	dzi$f	net/minecraft/client/particle/BlockLeakParticle$FallingHoney
	m	(Ldym;DDDLcwz;Lhf;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
c	dzi$g	net/minecraft/client/particle/BlockLeakParticle$FallingHoneyFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$h	net/minecraft/client/particle/BlockLeakParticle$DrippingHoneyFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$i	net/minecraft/client/particle/BlockLeakParticle$LandingHoneyFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$j	net/minecraft/client/particle/BlockLeakParticle$FallingLavaFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$k	net/minecraft/client/particle/BlockLeakParticle$DrippingLavaFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$l	net/minecraft/client/particle/BlockLeakParticle$LandingLavaFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$m	net/minecraft/client/particle/BlockLeakParticle$FallingNectarFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$n	net/minecraft/client/particle/BlockLeakParticle$FallingObsidianTearFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$o	net/minecraft/client/particle/BlockLeakParticle$DrippingObsidianTearFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$p	net/minecraft/client/particle/BlockLeakParticle$LandingObsidianTearFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$q	net/minecraft/client/particle/BlockLeakParticle$FallingWaterFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzi$r	net/minecraft/client/particle/BlockLeakParticle$DrippingWaterFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzj	net/minecraft/client/particle/RedDustParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDDDLhd;Leap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	15	spriteProvider	spriteProvider
c	dzj$a	net/minecraft/client/particle/RedDustParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhd;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzk	net/minecraft/client/particle/EnchantGlyphParticle
	f	D	D	startZ
	f	D	a	startX
	f	D	b	startY
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dzk$a	net/minecraft/client/particle/EnchantGlyphParticle$NautilusFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzk$b	net/minecraft/client/particle/EnchantGlyphParticle$EnchantFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzl	net/minecraft/client/particle/EndRodParticle
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	dzl$a	net/minecraft/client/particle/EndRodParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzm	net/minecraft/client/particle/ExplosionSmokeParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	14	spriteProvider	spriteProvider
c	dzm$a	net/minecraft/client/particle/ExplosionSmokeParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzn	net/minecraft/client/particle/BlockFallingDustParticle
	f	Leap;	b	spriteProvider
	m	(Ldym;DDDFFFLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	colorRed	colorRed
		p	9	colorGreen	colorGreen
		p	10	colorBlue	colorBlue
		p	11	spriteProvider	spriteProvider
c	dzn$a	net/minecraft/client/particle/BlockFallingDustParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhc;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzo	net/minecraft/client/particle/FireworksSparkParticle
c	dzo$a	net/minecraft/client/particle/FireworksSparkParticle$FlashFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzo$b	net/minecraft/client/particle/FireworksSparkParticle$Flash
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzo$c	net/minecraft/client/particle/FireworksSparkParticle$Explosion
	f	Z	D	flicker
	f	Leab;	E	particleManager
	f	Z	b	trail
	m	(Ldym;DDDDDDLeab;Leap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	particleManager	particleManager
		p	15	spriteProvider	spriteProvider
	m	(Z)V	a	setTrail
		p	1	trail	trail
	m	(Z)V	b	setFlicker
		p	1	flicker	flicker
c	dzo$d	net/minecraft/client/particle/FireworksSparkParticle$ExplosionFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzo$e	net/minecraft/client/particle/FireworksSparkParticle$FireworkParticle
	f	Llk;	B	explosions
	f	Z	C	flicker
	f	I	a	age
	f	Leab;	b	particleManager
	m	(Ldym;DDDDDDLeab;Lle;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	particleManager	particleManager
		p	15	tag	tag
	m	(DDDDDD[I[IZZ)V	a	addExplosionParticle
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	velocityX	velocityX
		p	9	velocityY	velocityY
		p	11	velocityZ	velocityZ
		p	13	colors	colors
		p	14	fadeColors	fadeColors
		p	15	trail	trail
		p	16	flicker	flicker
	m	(D[[D[I[IZZZ)V	a	explodeStar
		p	1	size	size
		p	3	pattern	pattern
		p	4	colors	colors
		p	5	fadeColors	fadeColors
		p	6	trail	trail
		p	7	flicker	flicker
		p	8	keepShape	keepShape
	m	([I[IZZ)V	a	explodeBurst
		p	1	colors	colors
		p	2	fadeColors	fadeColors
		p	3	trail	trail
		p	4	flocker	flocker
	m	(DI[I[IZZ)V	a	explodeBall
		p	1	size	size
		p	3	amount	amount
		p	4	colors	colors
		p	5	fadeColors	fadeColors
		p	6	trail	trail
		p	7	flicker	flicker
	m	()Z	c	isFar
c	dzp	net/minecraft/client/particle/FlameParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dzp$a	net/minecraft/client/particle/FlameParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzq	net/minecraft/client/particle/EmotionParticle
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzq$a	net/minecraft/client/particle/EmotionParticle$AngryVillagerFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzq$b	net/minecraft/client/particle/EmotionParticle$HeartFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzr	net/minecraft/client/particle/ExplosionLargeParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	10	spriteProvider	spriteProvider
c	dzr$a	net/minecraft/client/particle/ExplosionLargeParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzs	net/minecraft/client/particle/ExplosionEmitterParticle
	f	I	a	age_
	f	I	b	maxAge_
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzs$a	net/minecraft/client/particle/ExplosionEmitterParticle$Factory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzt	net/minecraft/client/particle/ItemPickupParticle
	f	Laom;	B	interactingEntity
	f	I	C	ticksExisted
	f	Legm;	D	dispatcher
	f	Lecf;	a	bufferStorage
	f	Laom;	b	itemEntity
	m	(Legm;Lecf;Ldym;Laom;Laom;)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	bufferStorage	bufferStorage
		p	3	world	world
		p	4	itemEntity	itemEntity
		p	5	interactingEntity	interactingEntity
	m	(Legm;Lecf;Ldym;Laom;Laom;Ldem;)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	bufferStorage	bufferStorage
		p	3	world	world
		p	5	interactingEntity	interactingEntity
		p	6	velocity	velocity
c	dzu	net/minecraft/client/particle/LargeFireSmokeParticle
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	dzu$a	net/minecraft/client/particle/LargeFireSmokeParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzv	net/minecraft/client/particle/LavaEmberParticle
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzv$a	net/minecraft/client/particle/LavaEmberParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzw	net/minecraft/client/particle/ElderGuardianAppearanceParticle
	f	Ldwo;	a	model
	f	Lech;	b	LAYER
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzw$a	net/minecraft/client/particle/ElderGuardianAppearanceParticle$Factory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzx	net/minecraft/client/particle/NoRenderParticle
c	dzy	net/minecraft/client/particle/NoteParticle
	m	(Ldym;DDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dzy$a	net/minecraft/client/particle/NoteParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	dzz	net/minecraft/client/particle/Particle
	f	F	A	prevAngle
	f	Ldeg;	a	EMPTY_BOUNDING_BOX
	f	Ldeg;	b	boundingBox
	f	Ldym;	c	world
	f	D	d	prevPosX
	f	D	e	prevPosY
	f	D	f	prevPosZ
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	D	j	velocityX
	f	D	k	velocityY
	f	D	l	velocityZ
	f	Z	m	onGround
	f	Z	n	collidesWithWorld
	f	Z	o	dead
	f	F	p	spacingXZ
	f	F	q	spacingY
	f	Ljava/util/Random;	r	random
	f	I	s	age
	f	I	t	maxAge
	f	F	u	gravityStrength
	f	F	v	colorRed
	f	F	w	colorGreen
	f	F	x	colorBlue
	f	F	y	colorAlpha
	f	F	z	angle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(F)I	a	getColorMultiplier
		p	1	tint	tint
	m	(FFF)V	a	setColor
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
	m	(DDD)V	a	move
		p	1	dx	dx
		p	3	dy	dy
		p	5	dz	dz
	m	(I)V	a	setMaxAge
		p	1	maxAge	maxAge
	m	(FF)V	a	setBoundingBoxSpacing
		p	1	spacingXZ	spacingXZ
		p	2	spacingY	spacingY
	m	(Ldhp;Ldlj;F)V	a	buildGeometry
		p	1	vertexConsumer	vertexConsumer
		p	2	camera	camera
		p	3	tickDelta	tickDelta
	m	(Ldeg;)V	a	setBoundingBox
	m	()V	a	tick
	m	()Lead;	b	getType
	m	(DDD)V	b	setPos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(F)Ldzz;	c	move
		p	1	speed	speed
	m	(F)Ldzz;	d	scale
		p	1	scale	scale
	m	(F)V	e	setColorAlpha
		p	1	alpha	alpha
	m	()I	i	getMaxAge
	m	()V	j	markDead
	m	()V	k	repositionFromBoundingBox
	m	()Z	l	isAlive
	m	()Ldeg;	m	getBoundingBox
c	e	net/minecraft/util/math/AxisTransformation
	f	[I	g	mappings
	f	La;	h	matrix
	f	[[Le;	i	COMBINATIONS
	m	(Ljava/lang/String;IIII)V	<init>	<init>
		p	3	xMapping	xMapping
		p	4	yMapping	yMapping
		p	5	zMapping	zMapping
	m	()La;	a	getMatrix
	m	(I)I	a	map
		p	1	oldAxis	oldAxis
	m	(Le;)Le;	a	prepend
		p	1	transformation	transformation
c	ea	net/minecraft/command/arguments/TimeArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_UNIT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	INVALID_COUNT_EXCEPTION
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	units
	m	()Lea;	a	time
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eaa	net/minecraft/client/particle/ParticleTextureData
	f	Ljava/util/List;	a	textureList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	textureList	textureList
	m	(Lcom/google/gson/JsonObject;)Leaa;	a	load
	m	()Ljava/util/List;	a	getTextureList
c	eab	net/minecraft/client/particle/ParticleManager
	f	Ldym;	a	world
	f	Ljava/util/List;	b	PARTICLE_TEXTURE_SHEETS
	f	Ljava/util/Map;	c	particles
	f	Ljava/util/Queue;	d	newEmitterParticles
	f	Lelw;	e	textureManager
	f	Ljava/util/Random;	f	random
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	g	factories
	f	Ljava/util/Queue;	h	newParticles
	f	Ljava/util/Map;	i	spriteAwareFactories
	f	Lelu;	j	particleAtlasTexture
	m	(Ldym;Lelw;)V	<init>	<init>
		p	1	world	world
		p	2	textureManager	textureManager
	m	(Laom;Lhf;I)V	a	addEmitter
		p	1	entity	entity
		p	2	parameters	parameters
		p	3	maxAge	maxAge
	m	(Ljava/util/Collection;)V	a	tickParticles
	m	(Lhg;Leab$b;)V	a	registerFactory
	m	(Laom;Lhf;)V	a	addEmitter
		p	1	entity	entity
		p	2	parameters	parameters
	m	(Ldhl;Lebz$a;Leby;Ldlj;F)V	a	renderParticles
	m	(Labc;Luh;Ljava/util/Map;)V	a	loadTextureList
		p	1	resourceManager	resourceManager
		p	2	id	id
		p	3	result	result
	m	()V	a	clearAtlas
	m	(Lhf;DDDDDD)Ldzz;	a	addParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lfu;Lfz;)V	a	addBlockBreakingParticles
		p	1	pos	pos
		p	2	direction	direction
	m	(Lhg;Leac;)V	a	registerFactory
		p	1	type	type
		p	2	factory	factory
	m	(Lfu;Lcfj;)V	a	addBlockBreakParticles
		p	1	pos	pos
		p	2	state	state
	m	(Ldym;)V	a	setWorld
		p	1	world	world
	m	(Ldzz;)V	a	addParticle
		p	1	particle	particle
	m	(Ldzz;)V	b	tickParticle
		p	1	particle	particle
	m	(Lhf;DDDDDD)Ldzz;	b	createParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	()V	b	tick
	m	()Ljava/lang/String;	d	getDebugString
	m	()V	e	registerDefaultFactories
c	eab$a	net/minecraft/client/particle/ParticleManager$SimpleSpriteProvider
	f	Ljava/util/List;	b	sprites
	m	(Ljava/util/List;)V	a	setSprites
		p	1	sprites	sprites
c	eab$b	net/minecraft/client/particle/ParticleManager$SpriteAwareFactory
	m	(Leap;)Leac;	create	create
		p	1	spriteProvider	spriteProvider
c	eac	net/minecraft/client/particle/ParticleFactory
	m	(Lhf;Ldym;DDDDDD)Ldzz;	a	createParticle
		p	1	parameters	parameters
		p	2	world	world
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
c	ead	net/minecraft/client/particle/ParticleTextureSheet
	f	Lead;	a	TERRAIN_SHEET
	f	Lead;	b	PARTICLE_SHEET_OPAQUE
	f	Lead;	c	PARTICLE_SHEET_TRANSLUCENT
	f	Lead;	d	PARTICLE_SHEET_LIT
	f	Lead;	e	CUSTOM
	f	Lead;	f	NO_RENDER
	m	(Ldhg;Lelw;)V	a	begin
	m	(Ldhn;)V	a	draw
c	eae	net/minecraft/client/particle/CloudParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	14	spriteProvider	spriteProvider
c	eae$a	net/minecraft/client/particle/CloudParticle$CloudFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eae$b	net/minecraft/client/particle/CloudParticle$SneezeFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eaf	net/minecraft/client/particle/PortalParticle
	f	D	D	startZ
	f	D	a	startX
	f	D	b	startY
c	eaf$a	net/minecraft/client/particle/PortalParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eag	net/minecraft/client/particle/ReversePortalParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	eag$a	net/minecraft/client/particle/ReversePortalParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eah	net/minecraft/client/particle/AbstractSlowingParticle
c	eai	net/minecraft/client/particle/AnimatedParticle
	f	F	D	resistance
	f	F	E	targetColorRed
	f	F	F	targetColorGreen
	f	F	G	targetColorBlue
	f	Z	H	changesColor
	f	Leap;	a	spriteProvider
	f	F	b	upwardsAcceleration
	m	(Ldym;DDDLeap;F)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	spriteProvider	spriteProvider
		p	9	upwardsAcceleration	upwardsAcceleration
	m	(I)V	b	setColor
		p	1	rgbHex	rgbHex
	m	(I)V	c	setTargetColor
		p	1	rgbHex	rgbHex
	m	(F)V	f	setResistance
		p	1	resistance	resistance
c	eaj	net/minecraft/client/particle/BillboardParticle
	f	F	B	scale
	m	(F)F	b	getSize
		p	1	tickDelta	tickDelta
	m	()F	c	getMinU
	m	()F	d	getMaxU
	m	()F	e	getMinV
	m	()F	f	getMaxV
c	eak	net/minecraft/client/particle/FireSmokeParticle
	m	(Ldym;DDDDDDFLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	scaleMultiplier	scaleMultiplier
		p	15	spriteProvider	spriteProvider
c	eak$a	net/minecraft/client/particle/FireSmokeParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eal	net/minecraft/client/particle/SoulParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	eal$a	net/minecraft/client/particle/SoulParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eam	net/minecraft/client/particle/SpellParticle
	f	Ljava/util/Random;	a	RANDOM
	f	Leap;	b	spriteProvider
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	eam$a	net/minecraft/client/particle/SpellParticle$EntityAmbientFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eam$b	net/minecraft/client/particle/SpellParticle$InstantFactory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eam$c	net/minecraft/client/particle/SpellParticle$EntityFactory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eam$d	net/minecraft/client/particle/SpellParticle$DefaultFactory
	f	Leap;	a	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eam$e	net/minecraft/client/particle/SpellParticle$WitchFactory
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	ean	net/minecraft/client/particle/SpitParticle
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	ean$a	net/minecraft/client/particle/SpitParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eao	net/minecraft/client/particle/WaterSplashParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	eao$a	net/minecraft/client/particle/WaterSplashParticle$SplashFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eap	net/minecraft/client/particle/SpriteProvider
	m	(Ljava/util/Random;)Lelv;	a	getSprite
		p	1	random	random
	m	(II)Lelv;	a	getSprite
c	eaq	net/minecraft/client/particle/SquidInkParticle
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	eaq$a	net/minecraft/client/particle/SquidInkParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	ear	net/minecraft/client/particle/WaterSuspendParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	ear$a	net/minecraft/client/particle/WaterSuspendParticle$CrimsonSporeFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	ear$b	net/minecraft/client/particle/WaterSuspendParticle$UnderwaterFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	ear$c	net/minecraft/client/particle/WaterSuspendParticle$WarpedSporeFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eas	net/minecraft/client/particle/SuspendParticle
	m	(Ldym;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	eas$a	net/minecraft/client/particle/SuspendParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eas$b	net/minecraft/client/particle/SuspendParticle$DolphinFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eas$c	net/minecraft/client/particle/SuspendParticle$HappyVillagerFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eas$d	net/minecraft/client/particle/SuspendParticle$MyceliumFactory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eat	net/minecraft/client/particle/BlockDustParticle
	f	F	D	sampleU
	f	F	E	sampleV
	f	Lcfj;	a	blockState
	f	Lfu;	b	blockPos
	m	(Ldym;DDDDDDLcfj;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	blockState	blockState
	m	(Lfu;)Leat;	a	setBlockPos
		p	1	blockPos	blockPos
	m	(Lfu;)V	b	updateColor
		p	1	blockPos	blockPos
	m	()Leat;	g	setBlockPosFromPosition
c	eat$a	net/minecraft/client/particle/BlockDustParticle$Factory
	m	(Lhc;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eau	net/minecraft/client/particle/SpriteBillboardParticle
	f	Lelv;	C	sprite
	m	(Leap;)V	a	setSprite
		p	1	spriteProvider	spriteProvider
	m	(Lelv;)V	a	setSprite
		p	1	sprite	sprite
	m	(Leap;)V	b	setSpriteForAge
		p	1	spriteProvider	spriteProvider
c	eav	net/minecraft/client/particle/TotemParticle
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	eav$a	net/minecraft/client/particle/TotemParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eaw	net/minecraft/client/particle/EmitterParticle
	f	I	B	maxEmitterAge
	f	Lhf;	C	parameters
	f	Laom;	a	entity
	f	I	b	emitterAge
	m	(Ldym;Laom;Lhf;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	parameters	parameters
	m	(Ldym;Laom;Lhf;ILdem;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	parameters	parameters
		p	4	maxEmitterAge	maxEmitterAge
		p	5	velocity	velocity
	m	(Ldym;Laom;Lhf;I)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	parameters	parameters
		p	4	maxEmitterAge	maxEmitterAge
c	eax	net/minecraft/client/particle/FishingParticle
	f	Leap;	a	spriteProvider
	m	(Ldym;DDDDDDLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	spriteProvider	spriteProvider
c	eax$a	net/minecraft/client/particle/FishingParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eay	net/minecraft/client/particle/CurrentDownParticle
	f	F	a	accelerationAngle
		c	The angle, in radians, of the horizontal acceleration of the particle.
	m	(Ldym;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	eay$a	net/minecraft/client/particle/CurrentDownParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eaz	net/minecraft/client/particle/RainSplashParticle
c	eaz$a	net/minecraft/client/particle/RainSplashParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	eb	net/minecraft/command/arguments/UuidArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_UUID
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljava/util/regex/Pattern;	c	VALID_CHARACTERS
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID;	a	parse
	m	()Leb;	a	uuid
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
		p	1	reader	reader
c	eba	net/minecraft/client/particle/WhiteAshParticle
	m	(Ldym;DDDDDDFLeap;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	scaleMultiplier	scaleMultiplier
		p	15	spriteProvider	spriteProvider
c	eba$a	net/minecraft/client/particle/WhiteAshParticle$Factory
	f	Leap;	a	spriteProvider
	m	(Leap;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lhi;Ldym;DDDDDD)Ldzz;	a	createParticle
c	ebc	net/minecraft/client/network/AbstractClientPlayerEntity
	f	F	a	elytraPitch
	f	F	b	elytraYaw
	f	F	c	elytraRoll
	f	Ldym;	d	clientWorld
	f	Ldyq;	e	cachedScoreboardEntry
	m	(Ldym;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	world	world
		p	2	profile	profile
	m	(Luh;Ljava/lang/String;)Lelm;	a	loadSkin
		p	0	id	id
		p	1	playerName	playerName
	m	()Z	c	canRenderCapeTexture
	m	(Ljava/lang/String;)Luh;	d	getSkinId
		p	0	playerName	playerName
	m	()Ldyq;	f	getPlayerListEntry
	m	()Z	n	hasSkinTexture
	m	()Luh;	o	getSkinTexture
	m	()Luh;	p	getCapeTexture
	m	()Z	q	canRenderElytraTexture
	m	()Luh;	r	getElytraTexture
	m	()Ljava/lang/String;	u	getModel
	m	()F	v	getSpeed
c	ebd	net/minecraft/client/input/Input
	f	F	a	movementSideways
	f	F	b	movementForward
	f	Z	c	pressingForward
	f	Z	d	pressingBack
	f	Z	e	pressingLeft
	f	Z	f	pressingRight
	f	Z	g	jumping
	f	Z	h	sneaking
	m	(Z)V	a	tick
	m	()Ldel;	a	getMovementInput
	m	()Z	b	hasForwardMovement
c	ebe	net/minecraft/client/input/KeyboardInput
	f	Ldmb;	i	settings
	m	(Ldmb;)V	<init>	<init>
		p	1	settings	settings
c	ebf	net/minecraft/client/network/ClientPlayerEntity
	c	Represents the client's own player entity.
	f	I	bQ	ticksLeftToDoubleTapSprint
	f	I	bR	ticksSinceSprintingChanged
	f	F	bS	renderYaw
	f	F	bT	renderPitch
	f	F	bU	lastRenderYaw
	f	F	bV	lastRenderPitch
	f	F	bW	nextNauseaStrength
	f	F	bX	lastNauseaStrength
	f	Lacv;	bY	statHandler
	f	Ldlk;	bZ	recipeBook
	f	Ljava/util/List;	ca	tickables
	f	I	cb	clientPermissionLevel
	f	D	cc	lastX
	f	D	cd	lastBaseY
	f	D	ce	lastZ
	f	F	cf	lastYaw
	f	F	cg	lastPitch
	f	Z	ch	lastOnGround
	f	Z	cj	lastIsHoldingSneakKey
	f	Z	ck	lastSprinting
	f	I	cl	ticksSinceLastPositionPacketSent
	f	Z	cm	healthInitialized
	f	Ljava/lang/String;	cn	serverBrand
	f	Z	cq	usingItem
	f	Lanf;	cr	activeHand
	f	Z	cs	riding
	f	Z	ct	autoJumpEnabled
	f	I	cu	ticksToNextAutojump
	f	I	cw	underwaterVisibilityTicks
	f	Z	cx	showsDeathScreen
	f	Ldyn;	e	networkHandler
	f	Lebd;	f	input
	f	Ldlx;	g	client
	m	(Ldlx;Ldym;Ldyn;Lacv;Ldlk;ZZ)V	<init>	<init>
		p	4	stats	stats
		p	5	recipeBook	recipeBook
	m	()V	A	openRidingInventory
	m	()Ljava/lang/String;	B	getServerBrand
	m	()Lacv;	D	getStatHandler
	m	()Ldlk;	F	getRecipeBook
	m	()Z	G	showsDeathScreen
	m	()Z	H	hasJumpingMount
	m	()Z	J	isHoldingSneakKey
	m	()Z	K	isCamera
	m	()Z	L	isRiding
	m	()Z	M	isAutoJumpEnabled
	m	()F	N	getUnderwaterVisibility
		c	Returns the color multiplier of vision in water, so that visibility in\nwater is reduced when the player just entered water.
	m	(I)V	a	setClientPermissionLevel
		p	1	clientPermissionLevel	clientPermissionLevel
	m	(FII)V	a	setExperience
		p	1	progress	progress
		p	2	total	total
		p	3	level	level
	m	(Lbmu;)V	a	onRecipeDisplayed
		p	1	recipe	recipe
	m	(Z)V	b	setShowsDeathScreen
		p	1	shouldShow	shouldShow
	m	()V	eW	sendMovementPackets
	m	()V	eX	updateNausea
	m	()Z	eY	shouldAutoJump
	m	()Z	eZ	hasMovementInput
		c	Returns whether the player has movement input.\n\n@return True if the player has movement input, else false.
	m	(Ljava/lang/String;)V	f	sendChatMessage
		p	1	message	message
	m	()Z	fa	isWalking
	m	(Ljava/lang/String;)V	g	setServerBrand
		p	1	serverBrand	serverBrand
	m	(Lfu;)Z	g	cannotFitAt
		p	1	pos	pos
	m	(FF)V	g	autoJump
		p	1	dx	dx
		p	2	dz	dz
	m	(F)V	s	updateHealth
		p	1	health	health
	m	()F	w	getMoodPercentage
		c	Returns the percentage for the biome mood sound for the debug HUD to\ndisplay.
	m	()V	x	closeScreen
	m	()V	z	startRidingJump
c	ebg	net/minecraft/client/network/OtherClientPlayerEntity
	c	Represents a player entity that is present on the client but is not the client's own player.
c	ebh	net/minecraft/client/options/HotbarStorageEntry
	f	Lgi;	a	delegate
	m	(Llk;)V	a	fromListTag
	m	()Llk;	a	toListTag
	m	()Ljava/util/List;	delegate	delegate
c	ebk	net/minecraft/client/color/world/BiomeColors
	f	Lnet/minecraft/world/level/ColorResolver;	a	GRASS_COLOR
	f	Lnet/minecraft/world/level/ColorResolver;	b	FOLIAGE_COLOR
	f	Lnet/minecraft/world/level/ColorResolver;	c	WATER_COLOR
	m	(Lbpe;Lfu;)I	a	getGrassColor
		p	0	world	world
		p	1	pos	pos
	m	(Lbpe;Lfu;Lnet/minecraft/world/level/ColorResolver;)I	a	getColor
		p	0	world	world
		p	1	pos	pos
		p	2	resolver	resolver
	m	(Lbpe;Lfu;)I	b	getFoliageColor
		p	0	world	world
		p	1	pos	pos
	m	(Lbpe;Lfu;)I	c	getWaterColor
		p	0	world	world
		p	1	pos	pos
c	ebl	net/minecraft/client/render/item/BuiltinModelItemRenderer
	f	Lebl;	a	INSTANCE
	f	[Lceg;	b	RENDER_SHULKER_BOX_DYED
	f	Lceg;	c	RENDER_SHULKER_BOX
	f	Lcdp;	d	renderChestNormal
	f	Lcdp;	e	renderChestTrapped
	f	Lcdx;	f	renderChestEnder
	f	Lcdc;	g	renderBanner
	f	Lcdh;	h	renderBed
	f	Lcds;	i	renderConduit
	f	Ldxh;	j	modelShield
	f	Ldxs;	k	modelTrident
	m	(Lbki;Ledf$b;Ldhl;Lebz;II)V	a	render
		p	1	stack	stack
c	ebm	net/minecraft/client/render/chunk/BlockBufferBuilderStorage
	f	Ljava/util/Map;	a	builders
	m	()V	a	clear
	m	(Lech;)Ldhg;	a	get
		p	1	layer	layer
	m	()V	b	reset
c	ebn	net/minecraft/client/gui/CubeMapRenderer
	f	[Luh;	a	faces
	m	(Luh;)V	<init>	<init>
		p	1	faces	faces
	m	(Ldlx;FFF)V	a	draw
		p	1	client	client
		p	2	x	x
		p	3	y	y
		p	4	alpha	alpha
	m	(Lelw;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadTexturesAsync
c	ebo	net/minecraft/client/render/SkyProperties
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	a	BY_DIMENSION_TYPE
	f	[F	b	rgba
	f	F	c	cloudsHeight
	f	Z	d	alternateSkyColor
	f	Lebo$d;	e	skyType
	f	Z	f	shouldRenderSky
	f	Z	g	darkened
	m	(FZLebo$d;ZZ)V	<init>	<init>
		p	1	cloudsHeight	cloudsHeight
		p	2	alternateSkyColor	alternateSkyColor
		p	3	skyType	skyType
		p	4	shouldRenderSky	shouldRenderSky
		p	5	darkened	darkened
	m	(Ldem;F)Ldem;	a	adjustSkyColor
		p	1	color	color
		p	2	sunHeight	sunHeight
	m	(Ljava/util/Optional;)Lebo;	a	byDimensionType
	m	(II)Z	a	useThickFog
		p	1	camX	camX
		p	2	camY	camY
	m	()F	a	getCloudsHeight
	m	(FF)[F	a	getSkyColor
		p	1	skyAngle	skyAngle
		p	2	tickDelta	tickDelta
	m	()Z	b	isAlternateSkyColor
	m	()Lebo$d;	c	getSkyType
	m	()Z	d	shouldRenderSky
	m	()Z	e	isDarkened
c	ebo$a	net/minecraft/client/render/SkyProperties$End
c	ebo$b	net/minecraft/client/render/SkyProperties$Nether
c	ebo$c	net/minecraft/client/render/SkyProperties$Overworld
c	ebo$d	net/minecraft/client/render/SkyProperties$SkyType
c	ebp	net/minecraft/client/gl/JsonGlProgram
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldha;	b	dummyUniform
	f	Lebp;	c	activeProgram
	f	I	d	activeProgramRef
	f	Ljava/util/Map;	e	samplerBinds
	f	Ljava/util/List;	f	samplerNames
	f	Ljava/util/List;	g	samplerShaderLocs
	f	Ljava/util/List;	h	uniformData
	f	Ljava/util/List;	i	uniformLocs
	f	Ljava/util/Map;	j	uniformByName
	f	I	k	programRef
	f	Ljava/lang/String;	l	name
	f	Z	m	uniformStateDirty
	f	Ldhb;	n	blendState
	f	Ljava/util/List;	o	attribLocs
	f	Ljava/util/List;	p	attribNames
	f	Ldhd;	q	vertexShader
	f	Ldhd;	r	fragmentShader
	m	(Labc;Ljava/lang/String;)V	<init>	<init>
		p	1	resource	resource
		p	2	name	name
	m	(Lcom/google/gson/JsonElement;)V	a	addSampler
	m	(Lcom/google/gson/JsonObject;)Ldhb;	a	deserializeBlendState
		p	0	json	json
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	bindSampler
		p	1	samplerName	samplerName
	m	(Ljava/lang/String;)Ldhf;	a	getUniformByName
		p	1	name	name
	m	(Labc;Ldhd$a;Ljava/lang/String;)Ldhd;	a	getShader
		p	0	resourceManager	resourceManager
		p	1	type	type
		p	2	name	name
	m	(Lcom/google/gson/JsonElement;)V	b	addUniform
	m	(Ljava/lang/String;)Ldha;	b	getUniformByNameOrDummy
		p	1	name	name
	m	()V	e	disable
	m	()V	f	enable
	m	()V	h	finalizeUniformsAndSamplers
c	ebq	net/minecraft/client/render/model/CubeFace
	f	[Lebq;	g	DIRECTION_LOOKUP
	f	[Lebq$b;	h	corners
	m	(Ljava/lang/String;I[Lebq$b;)V	<init>	<init>
		p	3	corners	corners
	m	(Lfz;)Lebq;	a	getFace
		p	0	direction	direction
	m	(I)Lebq$b;	a	getCorner
		p	1	corner	corner
c	ebq$a	net/minecraft/client/render/model/CubeFace$DirectionIds
	f	I	a	SOUTH
	f	I	b	UP
	f	I	c	EAST
	f	I	d	NORTH
	f	I	e	DOWN
	f	I	f	WEST
c	ebq$b	net/minecraft/client/render/model/CubeFace$Corner
	f	I	a	xSide
	f	I	b	ySide
	f	I	c	zSide
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	ebr	net/minecraft/client/render/BackgroundRenderer
	f	F	a	red
	f	F	b	green
	f	F	c	blue
	f	I	d	waterFogColor
	f	I	e	nextWaterFogColor
	f	J	f	lastWaterFogColorUpdateTime
	m	(Ldlj;FLdym;IF)V	a	render
		p	0	camera	camera
		p	1	tickDelta	tickDelta
		p	2	world	world
	m	(Ldlj;Lebr$a;FZ)V	a	applyFog
		p	0	camera	camera
		p	1	fogType	fogType
		p	2	viewDistance	viewDistance
		p	3	thickFog	thickFog
	m	()V	b	setFogBlack
c	ebr$a	net/minecraft/client/render/BackgroundRenderer$FogType
c	ebs	net/minecraft/client/render/GameRenderer
	f	F	A	floatingItemWidth
	f	F	B	floatingItemHeight
	f	Lecc;	C	shader
	f	[Luh;	D	SHADERS_LOCATIONS
	f	I	E	forcedShaderIndex
	f	Z	F	shadersEnabled
	f	Ldlj;	G	camera
	f	Lebv;	a	firstPersonRenderer
	f	I	b	SHADER_COUNT
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ldlx;	d	client
	f	Labc;	e	resourceContainer
	f	Ljava/util/Random;	f	random
	f	F	g	viewDistance
	f	Ldmw;	h	mapRenderer
	f	Lecf;	i	buffers
	f	I	j	ticks
	f	F	k	movementFovMultiplier
	f	F	l	lastMovementFovMultiplier
	f	F	m	skyDarkness
	f	F	n	lastSkyDarkness
	f	Z	o	renderHand
	f	Z	p	blockOutlineEnabled
	f	J	q	lastWorldIconUpdate
	f	J	r	lastWindowFocusedTime
	f	Leby;	s	lightmapTextureManager
	f	Lelp;	t	overlayTexture
	f	Z	u	renderingPanorama
	f	F	v	zoom
	f	F	w	zoomX
	f	F	x	zoomY
	f	Lbki;	y	floatingItem
	f	I	z	floatingItemTimeLeft
	m	(Ldlx;Labc;Lecf;)V	<init>	<init>
		p	1	client	client
	m	(F)V	a	updateTargetedEntity
		p	1	tickDelta	tickDelta
	m	(IIF)V	a	renderFloatingItem
		p	1	scaledWidth	scaledWidth
		p	2	scaledHeight	scaledHeight
		p	3	tickDelta	tickDelta
	m	(Ldlj;FZ)Lb;	a	getBasicProjectionMatrix
	m	(Lbki;)V	a	showFloatingItem
		p	1	floatingItem	floatingItem
	m	(Lb;)V	a	loadProjectionMatrix
	m	(Luh;)V	a	loadShader
	m	(Laoy;F)F	a	getNightVisionStrength
	m	(FJLdhl;)V	a	renderWorld
		p	1	tickDelta	tickDelta
		p	2	limitTime	limitTime
		p	4	matrix	matrix
	m	(II)V	a	onResized
	m	(FJZ)V	a	render
		p	1	tickDelta	tickDelta
		p	2	startTime	startTime
		p	4	tick	tick
	m	()V	a	disableShader
	m	(Ldhl;F)V	a	bobViewWhenHurt
	m	(Laom;)V	a	onCameraEntitySet
	m	(Ldhl;Ldlj;F)V	a	renderHand
		p	1	matrices	matrices
		p	2	camera	camera
		p	3	tickDelta	tickDelta
	m	(F)F	b	getSkyDarkness
		p	1	tickDelta	tickDelta
	m	()V	b	toggleShadersEnabled
	m	(Ldlj;FZ)D	b	getFov
		p	1	camera	camera
		p	2	tickDelta	tickDelta
		p	3	changingFov	changingFov
	m	(Ldhl;F)V	b	bobView
	m	()V	e	tick
	m	()Lecc;	f	getShader
	m	()V	g	reset
	m	()Ldmw;	h	getMapRenderer
	m	()F	j	getViewDistance
	m	()Ldlj;	k	getCamera
	m	()Leby;	l	getLightmapTextureManager
	m	()Lelp;	m	getOverlayTexture
	m	()V	n	updateMovementFovMultiplier
	m	()V	o	updateWorldIcon
	m	()Z	p	shouldRenderBlockOutline
c	ebt	net/minecraft/class_5407
	m	(Labc;Lami;)Lebt$class_5408;	a	prepare
	m	(Lebt$class_5408;Labc;Lami;)V	a	apply
c	ebu	net/minecraft/client/render/RenderLayers
	f	Ljava/util/Map;	a	BLOCKS
	f	Ljava/util/Map;	b	FLUIDS
	f	Z	c	fancyGraphicsOrBetter
	m	(Lcfj;Z)Lech;	a	getEntityBlockLayer
		p	0	state	state
	m	(Lcfj;)Lech;	a	getBlockLayer
		p	0	state	state
	m	(Z)V	a	setFancyGraphicsOrBetter
		p	0	fancyGraphicsOrBetter	fancyGraphicsOrBetter
	m	(Lbki;Z)Lech;	a	getItemLayer
		p	0	stack	stack
	m	(Lcxa;)Lech;	a	getFluidLayer
		p	0	state	state
c	ebv	net/minecraft/client/render/item/HeldItemRenderer
	f	Lech;	a	MAP_BACKGROUND
	f	Lech;	b	MAP_BACKGROUND_CHECKERBOARD
	f	Ldlx;	c	client
	f	Lbki;	d	mainHand
	f	Lbki;	e	offHand
	f	F	f	equipProgressMainHand
	f	F	g	prevEquipProgressMainHand
	f	F	h	equipProgressOffHand
	f	F	i	prevEquipProgressOffHand
	f	Legm;	j	renderManager
	f	Lehh;	k	itemRenderer
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Lanf;)V	a	resetEquipProgress
		p	1	hand	hand
	m	(Ldhl;FLaou;Lbki;)V	a	applyEatOrDrinkTransformation
		p	1	matrices	matrices
		p	2	tickDelta	tickDelta
		p	3	arm	arm
		p	4	stack	stack
	m	(FLdhl;Lebz$a;Lebf;I)V	a	renderItem
		p	1	tickDelta	tickDelta
		p	2	matrices	matrices
		p	3	vertexConsumers	vertexConsumers
		p	4	player	player
		p	5	light	light
	m	(Ldhl;Lebz;ILaou;)V	a	renderArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	arm	arm
	m	(Lebc;FFLanf;FLbki;FLdhl;Lebz;I)V	a	renderFirstPersonItem
		p	1	player	player
		p	2	tickDelta	tickDelta
		p	3	pitch	pitch
		p	4	hand	hand
		p	5	swingProgress	swingProgress
		p	6	item	item
		p	7	equipProgress	equipProgress
		p	8	matrices	matrices
		p	9	vertexConsumers	vertexConsumers
		p	10	light	light
	m	(Ldhl;Laou;F)V	a	applySwingOffset
		p	1	matrices	matrices
		p	2	arm	arm
		p	3	swingProgress	swingProgress
	m	(Ldhl;Lebz;IFFLaou;)V	a	renderArmHoldingItem
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	equipProgress	equipProgress
		p	5	swingProgress	swingProgress
		p	6	arm	arm
	m	(Ldhl;Lebz;IFFF)V	a	renderMapInBothHands
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	pitch	pitch
		p	5	equipProgress	equipProgress
		p	6	swingProgress	swingProgress
	m	(Laoy;Lbki;Ledf$b;ZLdhl;Lebz;I)V	a	renderItem
		p	1	entity	entity
		p	2	stack	stack
		p	3	renderMode	renderMode
		p	4	leftHanded	leftHanded
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
		p	7	light	light
	m	(Ldhl;Lebz;ILbki;)V	a	renderFirstPersonMap
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	swingProgress	swingProgress
		p	4	stack	stack
	m	(F)F	a	getMapAngle
		p	1	tickDelta	tickDelta
	m	()V	a	updateHeldItems
	m	(Ldhl;Lebz;IFLaou;FLbki;)V	a	renderMapInOneHand
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	equipProgress	equipProgress
		p	5	arm	arm
		p	6	swingProgress	swingProgress
		p	7	stack	stack
	m	(Ldhl;Laou;F)V	b	applyEquipOffset
		p	1	matrices	matrices
		p	2	arm	arm
		p	3	equipProgress	equipProgress
c	ebw	net/minecraft/client/render/item/ItemModels
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	modelIds
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	models
	f	Lenm;	c	modelManager
	m	(Lenm;)V	<init>	<init>
		p	1	modelManager	modelManager
	m	()Lenm;	a	getModelManager
	m	(Lbke;Lenn;)V	a	putModel
		p	1	item	item
		p	2	modelId	modelId
	m	(Lbki;)Lelv;	a	getSprite
		p	1	stack	stack
	m	(Lbke;)Lenh;	a	getModel
	m	(Lbqa;)Lelv;	a	getSprite
	m	()V	b	reloadModels
	m	(Lbke;)I	b	getModelId
	m	(Lbki;)Lenh;	b	getModel
		p	1	stack	stack
c	ebx	net/minecraft/client/render/WorldRenderer
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	A	blockBreakingInfos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	B	blockBreakingProgressions
	f	Ljava/util/Map;	C	playingSongs
	f	Ldgf;	D	entityOutlinesFramebuffer
	f	Lecc;	E	entityOutlineShader
	f	Ldgf;	F	translucentFramebuffer
	f	Ldgf;	G	entityFramebuffer
	f	Ldgf;	H	particlesFramebuffer
	f	Ldgf;	I	weatherFramebuffer
	f	Ldgf;	J	cloudsFramebuffer
	f	Lecc;	K	transparencyShader
	f	D	L	lastCameraChunkUpdateX
	f	D	M	lastCameraChunkUpdateY
	f	D	N	lastCameraChunkUpdateZ
	f	I	O	cameraChunkX
	f	I	P	cameraChunkY
	f	I	Q	cameraChunkZ
	f	D	R	lastCameraX
	f	D	S	lastCameraY
	f	D	T	lastCameraZ
	f	D	U	lastCameraPitch
	f	D	V	lastCameraYaw
	f	I	W	lastCloudsBlockX
	f	I	X	lastCloudsBlockY
	f	I	Y	lastCloudsBlockZ
	f	Ldem;	Z	lastCloudsColor
	f	[Lfz;	a	DIRECTIONS
	f	Ldll;	aa	lastCloudsRenderMode
	f	Leen;	ab	chunkBuilder
	f	Ldhq;	ac	vertexFormat
	f	I	ad	renderDistance
	f	I	ae	regularEntityCount
	f	I	af	blockEntityCount
	f	Z	ag	shouldCaptureFrustum
	f	Lees;	ah	capturedFrustum
	f	[Lh;	ai	capturedFrustumOrientation
	f	Ldht;	aj	capturedFrustumPosition
	f	D	ak	lastTranslucentSortX
	f	D	al	lastTranslucentSortY
	f	D	am	lastTranslucentSortZ
	f	Z	an	needsTerrainUpdate
	f	I	ao	frame
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Luh;	c	MOON_PHASES
	f	Luh;	d	SUN
	f	Luh;	e	CLOUDS
	f	Luh;	f	END_SKY
	f	Luh;	g	FORCEFIELD
	f	Luh;	h	RAIN
	f	Luh;	i	SNOW
	f	Ldlx;	j	client
	f	Lelw;	k	textureManager
	f	Legm;	l	entityRenderDispatcher
	f	Lecf;	m	bufferBuilders
	f	Ldym;	n	world
	f	Ljava/util/Set;	o	chunksToRebuild
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	p	visibleChunks
	f	Ljava/util/Set;	q	noCullingBlockEntities
	f	Lecm;	r	chunks
	f	Ldhq;	s	skyVertexFormat
	f	Ldho;	t	starsBuffer
	f	Ldho;	u	lightSkyBuffer
	f	Ldho;	v	darkSkyBuffer
	f	Z	w	cloudsDirty
	f	Ldho;	x	cloudsBuffer
	f	Leci;	y	chunkUpdateSmoother
	f	I	z	ticks
	m	(Ldlx;Lecf;)V	<init>	<init>
		p	1	client	client
		p	2	bufferBuilders	bufferBuilders
	m	(III)V	a	scheduleBlockRenders
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbpe;Lfu;)I	a	getLightmapCoordinates
		p	0	world	world
		p	1	pos	pos
	m	(ILfu;I)V	a	processGlobalEvent
		p	1	eventId	eventId
		p	2	pos	pos
	m	(Ldhg;)V	a	renderStars
		p	1	buffer	buffer
	m	(Ldhg;FZ)V	a	renderSkyHalf
		p	1	buffer	buffer
		p	2	y	y
		p	3	bottom	bottom
	m	(Lhf;DDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(IIIIII)V	a	scheduleBlockRenders
		p	1	minX	minX
		p	2	minY	minY
		p	3	minZ	minZ
		p	4	maxX	maxX
		p	5	maxY	maxY
		p	6	maxZ	maxZ
	m	(Lb;Lb;DDDLees;)V	a	captureFrustum
		p	1	modelMatrix	modelMatrix
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	frustum	frustum
	m	(Ldym;)V	a	setWorld
	m	(Leby;FDDD)V	a	renderWeather
		p	1	manager	manager
	m	(Ldhl;Ldhp;Ldeg;FFFF)V	a	drawBox
		c	Draws a box.\n\n<p>Note the coordinates the box spans are relative to current translation of the matrices.
		p	0	matrices	matrices
		p	1	vertexConsumer	vertexConsumer
		p	2	box	box
		p	3	red	red
		p	4	green	green
		p	5	blue	blue
		p	6	alpha	alpha
	m	(Lfu;Leen$c;Lfz;)Leen$c;	a	getAdjacentChunk
		p	1	pos	pos
		p	2	chunk	chunk
		p	3	direction	direction
	m	(Lyn;)V	a	removeBlockBreakingInfo
	m	(II)V	a	onResized
	m	()V	a	loadEntityOutlineShader
	m	(Ldlj;Lees;ZIZ)V	a	setupTerrain
		p	1	camera	camera
		p	2	frustum	frustum
		p	3	hasForcedFrustum	hasForcedFrustum
		p	4	frame	frame
		p	5	spectator	spectator
	m	(Lbqb;Lfu;Z)V	a	updateEntitiesForSong
		p	1	world	world
		p	2	pos	pos
		p	3	playing	playing
	m	(Lhf;ZDDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	shouldAlwaysSpawn	shouldAlwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	(Lbpg;Lfu;Lcfj;Lcfj;I)V	a	updateBlock
		p	1	world	world
		p	2	pos	pos
		p	3	oldState	oldState
		p	4	newState	newState
		p	5	flags	flags
	m	(Ldhl;)V	a	checkEmpty
		p	1	matrices	matrices
	m	(J)V	a	updateChunks
		p	1	limitTime	limitTime
	m	(Lfu;Z)V	a	scheduleSectionRender
		p	1	pos	pos
		p	2	important	important
	m	(Lfu;Lcfj;Lcfj;)V	a	scheduleBlockRerenderIfNeeded
		p	1	pos	pos
		p	2	old	old
		p	3	updated	updated
	m	(Ldhl;F)V	a	renderSky
		p	1	matrices	matrices
		p	2	tickDelta	tickDelta
	m	(Lbpe;Lcfj;Lfu;)I	a	getLightmapCoordinates
		p	0	world	world
		p	1	state	state
		p	2	pos	pos
	m	(Ldhl;Ldhp;DDDDDDFFFF)V	a	drawBox
		c	Draws a box spanning from [x1,y1,z1] to [x2,y2,z2].\n\n<p>Note the coordinates the box spans are relative to current translation of the matrices.
		p	0	matrices	matrices
		p	1	vertexConsumer	vertexConsumer
		p	2	x1	x1
		p	4	y1	y1
		p	6	z1	z1
		p	8	x2	x2
		p	10	y2	y2
		p	12	z2	z2
		p	14	red	red
		p	15	green	green
		p	16	blue	blue
		p	17	alpha	alpha
	m	(Ldhl;FDDD)V	a	renderClouds
		p	1	matrices	matrices
		p	2	tickDelta	tickDelta
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	(Ldhl;FJZLdlj;Lebs;Leby;Lb;)V	a	render
		p	1	matrices	matrices
		p	2	tickDelta	tickDelta
		p	3	limitTime	limitTime
		p	5	renderBlockOutline	renderBlockOutline
		p	6	camera	camera
		p	7	gameRenderer	gameRenderer
	m	(IIIZ)V	a	scheduleChunkRender
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	important	important
	m	(Laom;DDDFLdhl;Lebz;)V	a	renderEntity
		p	1	entity	entity
		p	2	cameraX	cameraX
		p	4	cameraY	cameraY
		p	6	cameraZ	cameraZ
		p	8	tickDelta	tickDelta
		p	9	matrices	matrices
		p	10	vertexConsumers	vertexConsumers
	m	(Lack;Lfu;)V	a	playSong
		p	1	song	song
		p	2	songPosition	songPosition
	m	(Ldhl;Ldhp;Laom;DDDLfu;Lcfj;)V	a	drawBlockOutline
	m	(Lbec;ILfu;I)V	a	processWorldEvent
		p	1	source	source
		p	2	eventId	eventId
		p	3	pos	pos
		p	4	data	data
	m	(Lech;Ldhl;DDD)V	a	renderLayer
	m	(Ldlj;)V	a	tickRainSplashing
		p	1	camera	camera
	m	(Ldhl;Ldhp;DDDDDDFFFFFFF)V	a	drawBox
		c	Draws a box spanning from [x1,y1,z1] to [x2,y2,z2].\nThe 3 axes centered at [x1,y1,z1] may be colored differently using xAxisRed, yAxisGreen, and zAxisBlue.\n\n<p>Note the coordinates the box spans are relative to current translation of the matrices.
		p	0	matrices	matrices
		p	1	vertexConsumer	vertexConsumer
		p	2	x1	x1
		p	4	y1	y1
		p	6	z1	z1
		p	8	x2	x2
		p	10	y2	y2
		p	12	z2	z2
		p	14	red	red
		p	15	green	green
		p	16	blue	blue
		p	17	alpha	alpha
		p	18	xAxisRed	xAxisRed
		p	19	yAxisGreen	yAxisGreen
		p	20	zAxisBlue	zAxisBlue
	m	(Lhf;ZZDDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	shouldAlwaysSpawn	shouldAlwaysSpawn
		p	3	isImportant	isImportant
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	velocityX	velocityX
		p	12	velocityY	velocityY
		p	14	velocityZ	velocityZ
	m	(Ldhg;DDDDDDFFFF)V	a	drawBox
		p	0	buffer	buffer
		p	1	x1	x1
		p	3	y1	y1
		p	5	z1	z1
		p	7	x2	x2
		p	9	y2	y2
		p	11	z2	z2
		p	13	red	red
		p	14	green	green
		p	15	blue	blue
		p	16	alpha	alpha
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	a	updateNoCullingBlockEntities
		p	1	removed	removed
		p	2	added	added
	m	(Ldhg;DDDLdem;)V	a	renderClouds
		p	1	builder	builder
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	color	color
	m	(Z)Ldmc;	a	getRandomParticleSpawnChance
		p	1	canSpawnOnMinimal	canSpawnOnMinimal
	m	(Lhf;ZZDDDDDD)Ldzz;	b	spawnParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	canSpawnOnMinimal	canSpawnOnMinimal
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	velocityX	velocityX
		p	12	velocityY	velocityY
		p	14	velocityZ	velocityZ
	m	(Lhf;ZDDDDDD)Ldzz;	b	spawnParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	()V	b	drawEntityOutlinesFramebuffer
	m	(ILfu;I)V	b	setBlockBreakingInfo
		p	1	entityId	entityId
		p	2	pos	pos
		p	3	stage	stage
	m	(Ldhl;)V	b	renderEndSky
		p	1	matrices	matrices
	m	(III)V	b	scheduleBlockRender
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ldhl;Ldhp;Ldfg;DDDFFFF)V	b	drawShapeOutline
	m	(Ldlj;)V	b	renderChunkDebugInfo
		p	1	camera	camera
	m	(Ldlj;)V	c	renderWorldBorder
		p	1	camera	camera
	m	()Z	d	canDrawEntityOutlines
	m	()V	e	reload
	m	()V	f	clearChunkRenderers
	m	()Ljava/lang/String;	g	getChunksDebugString
	m	()I	h	getCompletedChunkCount
	m	()Ljava/lang/String;	i	getEntitiesDebugString
	m	()V	l	tick
	m	()Z	n	isTerrainRenderComplete
	m	()V	o	scheduleTerrainUpdate
	m	()Ldgf;	p	getEntityOutlinesFramebuffer
	m	()Ldgf;	q	getTranslucentFramebuffer
	m	()Ldgf;	r	getEntityFramebuffer
	m	()Ldgf;	s	getParticlesFramebuffer
	m	()Ldgf;	t	getWeatherFramebuffer
	m	()Ldgf;	u	getCloudsFramebuffer
	m	()V	v	loadTransparencyShader
	m	()V	w	resetTransparencyShader
	m	()V	x	renderDarkSky
	m	()V	y	renderLightSky
	m	()V	z	renderStars
c	ebx$a	net/minecraft/client/render/WorldRenderer$ChunkInfo
	f	Leen$c;	b	chunk
	f	Lfz;	c	direction
	f	B	d	cullingState
	f	I	e	propagationLevel
	m	(Lebx;Leen$c;Lfz;I)V	<init>	<init>
		p	1	renderer	renderer
		p	2	chunk	chunk
		p	3	direction	direction
		p	4	propagationLevel	propagationLevel
	m	(Lfz;)Z	a	canCull
		p	1	from	from
	m	(BLfz;)V	a	updateCullingState
		p	1	parentCullingState	parentCullingState
		p	2	from	from
c	ebx$b	net/minecraft/client/render/WorldRenderer$ShaderException
c	eby	net/minecraft/client/render/LightmapTextureManager
	f	Lell;	a	texture
	f	Ldgs;	b	image
	f	Luh;	c	textureIdentifier
	f	Z	d	isDirty
	f	Lebs;	f	worldRenderer
	f	Ldlx;	g	client
	m	(F)V	a	update
		p	1	delta	delta
	m	(Lbqb;I)F	a	getBrightness
	m	(II)I	a	pack
		p	0	block	block
		p	1	sky	sky
	m	()V	a	tick
	m	(I)I	a	getBlockLightCoordinates
		p	0	light	light
	m	(I)I	b	getSkyLightCoordinates
		p	0	light	light
	m	()V	b	disable
	m	()V	c	enable
c	ebz	net/minecraft/client/render/VertexConsumerProvider
	m	(Ljava/util/Map;Ldhg;)Lebz$a;	a	immediate
		p	0	layerBuffers	layerBuffers
		p	1	fallbackBuffer	fallbackBuffer
	m	(Ldhg;)Lebz$a;	a	immediate
		p	0	buffer	buffer
	m	(Lech;)Ldhp;	getBuffer	getBuffer
		p	1	layer	layer
c	ebz$a	net/minecraft/client/render/VertexConsumerProvider$Immediate
	f	Ldhg;	a	fallbackBuffer
	f	Ljava/util/Map;	b	layerBuffers
	f	Ljava/util/Optional;	c	currentLayer
	f	Ljava/util/Set;	d	activeConsumers
	m	(Ldhg;Ljava/util/Map;)V	<init>	<init>
		p	1	fallbackBuffer	fallbackBuffer
		p	2	layerBuffers	layerBuffers
	m	(Lech;)V	a	draw
		p	1	layer	layer
	m	()V	a	draw
	m	(Lech;)Ldhg;	b	getBufferInternal
		p	1	layer	layer
c	ec	net/minecraft/command/arguments/BlockStateArgument
	f	Lcfj;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lle;	c	data
	m	(Lcfj;Ljava/util/Set;Lle;)V	<init>	<init>
		p	1	state	state
		p	2	properties	properties
		p	3	data	data
	m	()Lcfj;	a	getBlockState
	m	(Lcfn;)Z	a	test
	m	(Lzd;Lfu;I)Z	a	setBlockState
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	eca	net/minecraft/client/render/OutlineVertexConsumerProvider
	f	Lebz$a;	a	parent
	f	Lebz$a;	b	plainDrawer
	f	I	c	red
	f	I	d	green
	f	I	e	blue
	f	I	f	alpha
	m	(IIII)V	a	setColor
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	()V	a	draw
c	eca$a	net/minecraft/client/render/OutlineVertexConsumerProvider$OutlineVertexConsumer
	f	Ldhp;	g	delegate
	f	D	h	x
	f	D	i	y
	f	D	j	z
	f	F	k	u
	f	F	l	v
	m	(Ldhp;IIII)V	<init>	<init>
		p	1	delegate	delegate
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
c	ecb	net/minecraft/client/gui/RotatingCubeMapRenderer
	f	Ldlx;	a	client
	f	Lebn;	b	cubeMap
	f	F	c	time
	m	(Lebn;)V	<init>	<init>
		p	1	cubeMap	cubeMap
	m	(FF)V	a	render
		p	1	delta	delta
		p	2	alpha	alpha
c	ecc	net/minecraft/client/gl/ShaderEffect
	f	Ldgf;	a	mainTarget
	f	Labc;	b	resourceManager
	f	Ljava/lang/String;	c	name
	f	Ljava/util/List;	d	passes
	f	Ljava/util/Map;	e	targetsByName
	f	Ljava/util/List;	f	defaultSizedTargets
	f	Lb;	g	projectionMatrix
	f	I	h	width
	f	I	i	height
	f	F	j	time
	f	F	k	lastTickDelta
	m	(Lelw;Labc;Ldgf;Luh;)V	<init>	<init>
		p	3	framebuffer	framebuffer
		p	4	location	location
	m	(Lelw;Luh;)V	a	parseEffect
		p	2	location	location
	m	(Lelw;Lcom/google/gson/JsonElement;)V	a	parsePass
		p	2	jsonPass	jsonPass
	m	(Ljava/lang/String;II)V	a	addTarget
		p	1	name	name
		p	2	width	width
		p	3	height	height
	m	(F)V	a	render
		p	1	tickDelta	tickDelta
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Ldgf;	a	getSecondaryTarget
		p	1	name	name
	m	(II)V	a	setupDimensions
		p	1	targetsWidth	targetsWidth
		p	2	targetsHeight	targetsHeight
	m	(Ljava/lang/String;Ldgf;Ldgf;)Lecd;	a	addPass
		p	1	programName	programName
		p	2	source	source
		p	3	dest	dest
	m	(Lcom/google/gson/JsonElement;)V	a	parseTarget
		p	1	jsonTarget	jsonTarget
	m	()V	b	setupProjectionMatrix
	m	(Ljava/lang/String;)Ldgf;	b	getTarget
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;)V	b	parseUniform
		p	1	jsonUniform	jsonUniform
c	ecd	net/minecraft/client/gl/PostProcessShader
	f	Ldgf;	a	input
	f	Ldgf;	b	output
	f	Lebp;	c	program
	f	Ljava/util/List;	d	samplerValues
	f	Ljava/util/List;	e	samplerNames
	f	Ljava/util/List;	f	samplerWidths
	f	Ljava/util/List;	g	samplerHeights
	f	Lb;	h	projectionMatrix
	m	(Labc;Ljava/lang/String;Ldgf;Ldgf;)V	<init>	<init>
		p	1	resourceManager	resourceManager
		p	2	programName	programName
		p	3	input	input
		p	4	output	output
	m	(F)V	a	render
		p	1	time	time
	m	(Lb;)V	a	setProjectionMatrix
		p	1	projectionMatrix	projectionMatrix
	m	(Ljava/lang/String;Ljava/lang/Object;II)V	a	addAuxTarget
		p	1	name	name
		p	2	target	target
		p	3	width	width
		p	4	height	height
	m	()Lebp;	b	getProgram
c	ece	net/minecraft/client/util/Rect2i
	f	I	a	x
	f	I	b	y
	f	I	c	width
	f	I	d	height
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	()I	a	getX
	m	(II)Z	b	contains
		p	1	x	x
		p	2	y	y
	m	()I	b	getY
	m	()I	c	getWidth
	m	()I	d	getHeight
c	ecf	net/minecraft/client/render/BufferBuilderStorage
	f	Lebm;	a	blockBuilders
	f	Ljava/util/SortedMap;	b	entityBuilders
	f	Lebz$a;	c	entityVertexConsumers
	f	Lebz$a;	d	effectVertexConsumers
	f	Leca;	e	outlineVertexConsumers
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lech;)V	a	assignBufferBuilder
		p	0	builderStorage	builderStorage
		p	1	layer	layer
	m	()Lebm;	a	getBlockBufferBuilders
	m	()Lebz$a;	b	getEntityVertexConsumers
	m	()Lebz$a;	c	getEffectVertexConsumers
	m	()Leca;	d	getOutlineVertexConsumers
c	ecg	net/minecraft/client/render/RenderPhase
	f	Lecg$c;	A	ENABLE_CULLING
	f	Lecg$c;	B	DISABLE_CULLING
	f	Lecg$d;	C	ALWAYS_DEPTH_TEST
	f	Lecg$d;	D	EQUAL_DEPTH_TEST
	f	Lecg$d;	E	LEQUAL_DEPTH_TEST
	f	Lecg$r;	F	ALL_MASK
	f	Lecg$r;	G	COLOR_MASK
	f	Lecg$r;	H	DEPTH_MASK
	f	Lecg$g;	I	NO_LAYERING
	f	Lecg$g;	J	POLYGON_OFFSET_LAYERING
	f	Lecg$g;	K	VIEW_OFFSET_Z_LAYERING
	f	Lecg$f;	L	NO_FOG
	f	Lecg$f;	M	FOG
	f	Lecg$f;	N	BLACK_FOG
	f	Lecg$k;	O	MAIN_TARGET
	f	Lecg$k;	P	OUTLINE_TARGET
	f	Lecg$k;	Q	TRANSLUCENT_TARGET
	f	Lecg$k;	R	PARTICLES_TARGET
	f	Lecg$k;	S	WEATHER_TARGET
	f	Lecg$k;	T	CLOUDS_TARGET
	f	Lecg$k;	U	ITEM_TARGET
	f	Lecg$i;	V	FULL_LINE_WIDTH
	f	Ljava/lang/Runnable;	W	beginAction
	f	Ljava/lang/Runnable;	X	endAction
	f	Ljava/lang/String;	a	name
	f	Lecg$q;	b	NO_TRANSPARENCY
	f	Lecg$q;	c	ADDITIVE_TRANSPARENCY
	f	Lecg$q;	d	LIGHTNING_TRANSPARENCY
	f	Lecg$q;	e	GLINT_TRANSPARENCY
	f	Lecg$q;	f	GLINT_GUI_TRANSPARENCY
	f	Lecg$q;	g	CRUMBLING_TRANSPARENCY
	f	Lecg$q;	h	TRANSLUCENT_TRANSPARENCY
	f	Lecg$a;	i	ZERO_ALPHA
	f	Lecg$a;	j	ONE_TENTH_ALPHA
	f	Lecg$a;	k	HALF_ALPHA
	f	Lecg$n;	l	SHADE_MODEL
	f	Lecg$n;	m	SMOOTH_SHADE_MODEL
	f	Lecg$o;	n	MIPMAP_BLOCK_ATLAS_TEXTURE
	f	Lecg$o;	o	BLOCK_ATLAS_TEXTURE
	f	Lecg$o;	p	NO_TEXTURE
	f	Lecg$p;	q	DEFAULT_TEXTURING
	f	Lecg$p;	r	OUTLINE_TEXTURING
	f	Lecg$p;	s	GLINT_TEXTURING
	f	Lecg$p;	t	ENTITY_GLINT_TEXTURING
	f	Lecg$h;	u	ENABLE_LIGHTMAP
	f	Lecg$h;	v	DISABLE_LIGHTMAP
	f	Lecg$l;	w	ENABLE_OVERLAY_COLOR
	f	Lecg$l;	x	DISABLE_OVERLAY_COLOR
	f	Lecg$e;	y	ENABLE_DIFFUSE_LIGHTING
	f	Lecg$e;	z	DISABLE_DIFFUSE_LIGHTING
	m	(Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	name	name
		p	2	beginAction	beginAction
		p	3	endAction	endAction
	m	(F)V	a	setupGlintTexturing
		p	0	scale	scale
	m	()V	a	startDrawing
	m	()V	b	endDrawing
c	ecg$a	net/minecraft/client/render/RenderPhase$Alpha
	f	F	W	alpha
	m	(F)V	<init>	<init>
		p	1	alpha	alpha
c	ecg$b	net/minecraft/client/render/RenderPhase$Toggleable
	f	Z	W	enabled
c	ecg$c	net/minecraft/client/render/RenderPhase$Cull
	m	(Z)V	<init>	<init>
		p	1	culling	culling
c	ecg$d	net/minecraft/client/render/RenderPhase$DepthTest
	f	Ljava/lang/String;	W	depthFunction
		c	A string representation of the comparison function used by this {@code DepthTest} phase.\n@see org.lwjgl.opengl.GL11#glDepthFunc(int)
	f	I	X	func
c	ecg$e	net/minecraft/client/render/RenderPhase$DiffuseLighting
	m	(Z)V	<init>	<init>
		p	1	guiLighting	guiLighting
c	ecg$f	net/minecraft/client/render/RenderPhase$Fog
c	ecg$g	net/minecraft/client/render/RenderPhase$Layering
c	ecg$h	net/minecraft/client/render/RenderPhase$Lightmap
	m	(Z)V	<init>	<init>
		p	1	lightmap	lightmap
c	ecg$i	net/minecraft/client/render/RenderPhase$LineWidth
	f	Ljava/util/OptionalDouble;	W	width
c	ecg$j	net/minecraft/client/render/RenderPhase$OffsetTexturing
	f	F	W	x
	f	F	X	y
	m	(FF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
c	ecg$k	net/minecraft/client/render/RenderPhase$Target
c	ecg$l	net/minecraft/client/render/RenderPhase$Overlay
	m	(Z)V	<init>	<init>
		p	1	overlayColor	overlayColor
c	ecg$m	net/minecraft/client/render/RenderPhase$PortalTexturing
	f	I	W	layer
	m	(I)V	<init>	<init>
		p	1	layer	layer
c	ecg$n	net/minecraft/client/render/RenderPhase$ShadeModel
	f	Z	W	smooth
	m	(Z)V	<init>	<init>
		p	1	smooth	smooth
c	ecg$o	net/minecraft/client/render/RenderPhase$Texture
	f	Ljava/util/Optional;	W	id
	f	Z	X	bilinear
	f	Z	Y	mipmap
	m	(Luh;ZZ)V	<init>	<init>
		p	1	id	id
		p	2	bilinear	bilinear
		p	3	mipmap	mipmap
	m	()Ljava/util/Optional;	c	getId
c	ecg$p	net/minecraft/client/render/RenderPhase$Texturing
c	ecg$q	net/minecraft/client/render/RenderPhase$Transparency
c	ecg$r	net/minecraft/client/render/RenderPhase$WriteMaskState
	f	Z	W	color
	f	Z	X	depth
	m	(ZZ)V	<init>	<init>
		p	1	color	color
		p	2	depth	depth
c	ech	net/minecraft/client/render/RenderLayer
	f	Ldhq;	an	vertexFormat
	f	I	ao	drawMode
	f	I	ap	expectedBufferSize
	f	Z	aq	hasCrumbling
	f	Z	ar	translucent
	f	Ljava/util/Optional;	as	optionalThis
	m	(Ljava/lang/String;Ldhq;IIZZLjava/lang/Runnable;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	name	name
		p	2	vertexFormat	vertexFormat
		p	3	drawMode	drawMode
		p	4	expectedBufferSize	expectedBufferSize
		p	5	hasCrumbling	hasCrumbling
		p	6	translucent	translucent
		p	7	startAction	startAction
		p	8	endAction	endAction
	m	()Ljava/util/Optional;	A	asOptional
	m	()Lech$b;	B	createTranslucentPhaseData
	m	()Lech$b;	C	getItemPhaseData
	m	()Lech$b;	D	getTripwirePhaseData
	m	(Ljava/lang/String;Ldhq;IILech$b;)Lech$a;	a	of
		p	0	name	name
		p	1	vertexFormat	vertexFormat
		p	2	drawMode	drawMode
		p	3	expectedBufferSize	expectedBufferSize
		p	4	phaseData	phaseData
	m	(Luh;FF)Lech;	a	getEnergySwirl
		p	0	texture	texture
		p	1	x	x
		p	2	y	y
	m	(Luh;Lecg$c;)Lech;	a	getOutline
		p	0	texture	texture
		p	1	cull	cull
	m	(Luh;)Lech;	a	getArmorCutoutNoCull
		p	0	texture	texture
	m	(Luh;Z)Lech;	a	getEntityCutoutNoCull
		p	0	texture	texture
		p	1	affectsOutline	affectsOutline
	m	(Luh;F)Lech;	a	getEntityAlpha
		p	0	texture	texture
		p	1	alpha	alpha
	m	(I)Lech;	a	getEndPortal
		p	0	layer	layer
	m	(Ljava/lang/String;Ldhq;IIZZLech$b;)Lech$a;	a	of
		p	0	name	name
		p	1	vertexFormat	vertexFormat
		p	2	drawMode	drawMode
		p	3	expectedBufferSize	expectedBufferSize
		p	4	hasCrumbling	hasCrumbling
		p	5	translucent	translucent
		p	6	phases	phases
	m	(Ldhg;III)V	a	draw
		p	1	buffer	buffer
		p	2	cameraX	cameraX
		p	3	cameraY	cameraY
		p	4	cameraZ	cameraZ
	m	(Luh;)Lech;	b	getEntitySolid
		p	0	texture	texture
	m	(Luh;Z)Lech;	b	getEntityCutoutNoCullZOffset
		p	0	texture	texture
		p	1	affectsOutline	affectsOutline
	m	(Luh;Z)Lech;	c	getEntityTranslucent
		p	0	texture	texture
		p	1	affectsOutline	affectsOutline
	m	()Lech;	c	getSolid
	m	(Luh;)Lech;	c	getEntityCutout
		p	0	texture	texture
	m	(Luh;Z)Lech;	d	getBeaconBeam
		p	0	texture	texture
		p	1	translucent	translucent
	m	(Luh;)Lech;	d	getEntityCutoutNoCull
		p	0	texture	texture
	m	()Lech;	d	getCutoutMipped
	m	(Luh;)Lech;	e	getEntityCutoutNoCullZOffset
		p	0	texture	texture
	m	()Lech;	e	getCutout
	m	(Luh;)Lech;	f	getItemEntityTranslucentCull
		p	0	texture	texture
	m	()Lech;	f	getTranslucent
	m	(Luh;)Lech;	g	getEntityTranslucentCull
		p	0	texture	texture
	m	()Lech;	g	getTranslucentMovingBlock
	m	()Lech;	h	getTranslucentNoCrumbling
	m	(Luh;)Lech;	h	getEntityTranslucent
		p	0	texture	texture
	m	(Luh;)Lech;	i	getEntitySmoothCutout
		p	0	texture	texture
	m	()Lech;	i	getLeash
	m	(Luh;)Lech;	j	getEntityDecal
		p	0	texture	texture
	m	()Lech;	j	getWaterMask
	m	()Lech;	k	getArmorGlint
	m	(Luh;)Lech;	k	getEntityNoOutline
		p	0	texture	texture
	m	(Luh;)Lech;	l	getEntityShadow
		p	0	texture	texture
	m	()Lech;	l	getArmorEntityGlint
	m	(Luh;)Lech;	m	getEyes
		p	0	texture	texture
	m	()Lech;	m	getGlint
	m	(Luh;)Lech;	n	getOutline
		p	0	texture	texture
	m	()Lech;	n	getGlintDirect
	m	()Lech;	o	getEntityGlint
	m	(Luh;)Lech;	o	getBlockBreaking
		p	0	texture	texture
	m	()Lech;	p	getEntityGlintDirect
	m	(Luh;)Lech;	p	getText
		p	0	texture	texture
	m	(Luh;)Lech;	q	getTextSeeThrough
		p	0	texture	texture
	m	()Lech;	q	getLightning
	m	()Lech;	r	getTripwire
	m	()Lech;	s	getLines
	m	()Ljava/util/List;	t	getBlockLayers
	m	()I	u	getExpectedBufferSize
	m	()Ldhq;	v	getVertexFormat
	m	()I	w	getDrawMode
	m	()Ljava/util/Optional;	x	getAffectedOutline
	m	()Z	y	isOutline
	m	()Z	z	hasCrumbling
c	ech$a	net/minecraft/client/render/RenderLayer$MultiPhase
	f	Lit/unimi/dsi/fastutil/objects/ObjectOpenCustomHashSet;	X	CACHE
	f	Lech$b;	Y	phases
	f	I	Z	hash
	f	Ljava/util/Optional;	aa	affectedOutline
	f	Z	ab	outline
	m	(Ljava/lang/String;Ldhq;IIZZLech$b;)V	<init>	<init>
		p	1	name	name
		p	2	vertexFormat	vertexFormat
		p	3	drawMode	drawMode
		p	4	expectedBufferSize	expectedBufferSize
		p	5	hasCrumbling	hasCrumbling
		p	6	translucent	translucent
		p	7	phases	phases
	m	(Ljava/lang/String;Ldhq;IIZZLech$b;)Lech$a;	c	of
		p	0	name	name
		p	1	vertexFormat	vertexFormat
		p	2	drawMode	drawMode
		p	3	expectedBufferSize	expectedBufferSize
		p	4	hasCrumbling	hasCrumbling
		p	5	translucent	translucent
		p	6	phases	phases
c	ech$a$a	net/minecraft/client/render/RenderLayer$MultiPhase$HashStrategy
	m	(Lech$a;Lech$a;)Z	a	equals
	m	(Lech$a;)I	a	hashCode
c	ech$b	net/minecraft/client/render/RenderLayer$MultiPhaseParameters
	f	Lecg$o;	a	texture
	f	Lecg$q;	b	transparency
	f	Lecg$e;	c	diffuseLighting
	f	Lecg$n;	d	shadeModel
	f	Lecg$a;	e	alpha
	f	Lecg$d;	f	depthTest
	f	Lecg$c;	g	cull
	f	Lecg$h;	h	lightmap
	f	Lecg$l;	i	overlay
	f	Lecg$f;	j	fog
	f	Lecg$g;	k	layering
	f	Lecg$k;	l	target
	f	Lecg$p;	m	texturing
	f	Lecg$r;	n	writeMaskState
	f	Lecg$i;	o	lineWidth
	f	Lech$c;	p	outlineMode
	f	Lcom/google/common/collect/ImmutableList;	q	phases
	m	(Lecg$o;Lecg$q;Lecg$e;Lecg$n;Lecg$a;Lecg$d;Lecg$c;Lecg$h;Lecg$l;Lecg$f;Lecg$g;Lecg$k;Lecg$p;Lecg$r;Lecg$i;Lech$c;)V	<init>	<init>
		p	1	texture	texture
		p	2	transparency	transparency
		p	3	diffuseLighting	diffuseLighting
		p	4	shadeModel	shadeModel
		p	5	alpha	alpha
		p	6	depthTest	depthTest
		p	7	cull	cull
		p	8	lightmap	lightmap
		p	9	overlay	overlay
		p	10	fog	fog
		p	11	layering	layering
		p	12	target	target
		p	13	texturing	texturing
		p	14	writeMaskState	writeMaskState
		p	15	lineWidth	lineWidth
		p	16	outlineMode	outlineMode
	m	()Lech$b$a;	a	builder
c	ech$b$a	net/minecraft/client/render/RenderLayer$MultiPhaseParameters$Builder
	f	Lecg$o;	a	texture
	f	Lecg$q;	b	transparency
	f	Lecg$e;	c	diffuseLighting
	f	Lecg$n;	d	shadeModel
	f	Lecg$a;	e	alpha
	f	Lecg$d;	f	depthTest
	f	Lecg$c;	g	cull
	f	Lecg$h;	h	lightmap
	f	Lecg$l;	i	overlay
	f	Lecg$f;	j	fog
	f	Lecg$g;	k	layering
	f	Lecg$k;	l	target
	f	Lecg$p;	m	texturing
	f	Lecg$r;	n	writeMaskState
	f	Lecg$i;	o	lineWidth
	m	(Lecg$p;)Lech$b$a;	a	texturing
		p	1	texturing	texturing
	m	(Lecg$g;)Lech$b$a;	a	layering
		p	1	layering	layering
	m	(Lecg$n;)Lech$b$a;	a	shadeModel
		p	1	shadeModel	shadeModel
	m	(Lecg$a;)Lech$b$a;	a	alpha
		p	1	alpha	alpha
	m	(Lecg$q;)Lech$b$a;	a	transparency
		p	1	transparency	transparency
	m	(Lecg$o;)Lech$b$a;	a	texture
		p	1	texture	texture
	m	(Lech$c;)Lech$b;	a	build
		p	1	outlineMode	outlineMode
	m	(Lecg$r;)Lech$b$a;	a	writeMaskState
		p	1	writeMaskState	writeMaskState
	m	(Lecg$d;)Lech$b$a;	a	depthTest
		p	1	depthTest	depthTest
	m	(Z)Lech$b;	a	build
		p	1	affectsOutline	affectsOutline
	m	(Lecg$i;)Lech$b$a;	a	lineWidth
		p	1	lineWidth	lineWidth
	m	(Lecg$l;)Lech$b$a;	a	overlay
		p	1	overlay	overlay
	m	(Lecg$c;)Lech$b$a;	a	cull
		p	1	cull	cull
	m	(Lecg$f;)Lech$b$a;	a	fog
		p	1	fog	fog
	m	(Lecg$h;)Lech$b$a;	a	lightmap
		p	1	lightmap	lightmap
	m	(Lecg$e;)Lech$b$a;	a	diffuseLighting
		p	1	diffuseLighting	diffuseLighting
	m	(Lecg$k;)Lech$b$a;	a	target
		p	1	target	target
c	ech$c	net/minecraft/client/render/RenderLayer$OutlineMode
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	eci	net/minecraft/client/render/FpsSmoother
	f	[J	a	times
	f	I	b	size
	f	I	c	index
	m	(I)V	<init>	<init>
		p	1	size	size
	m	(J)J	a	getTargetUsedTime
		p	1	time	time
c	ecj	net/minecraft/client/gui/hud/InGameOverlayRenderer
	f	Luh;	a	UNDERWATER_TEX
	m	(Lbec;)Lcfj;	a	getInWallBlockState
	m	(Ldlx;Ldhl;)V	a	renderOverlays
	m	(Ldlx;Lelv;Ldhl;)V	a	renderInWallOverlay
	m	(Ldlx;Ldhl;)V	b	renderUnderwaterOverlay
	m	(Ldlx;Ldhl;)V	c	renderFireOverlay
c	eck	net/minecraft/client/render/TexturedRenderLayers
	f	Lech;	A	ENTITY_SOLID
	f	Lech;	B	ENTITY_CUTOUT
	f	Lech;	D	ENTITY_TRANSLUCENT_CULL
	f	Luh;	a	SHULKER_BOXES_ATLAS_TEXTURE
	f	Luh;	b	BEDS_ATLAS_TEXTURE
	f	Luh;	c	BANNER_PATTERNS_ATLAS_TEXTURE
	f	Luh;	d	SHIELD_PATTERNS_ATLAS_TEXTURE
	f	Luh;	e	SIGNS_ATLAS_TEXTURE
	f	Luh;	f	CHEST_ATLAS_TEXTURE
	f	Lenk;	g	SHULKER_TEXTURE_ID
	f	Ljava/util/List;	h	COLORED_SHULKER_BOXES_TEXTURES
	f	Ljava/util/Map;	i	WOOD_TYPE_TEXTURES
	f	[Lenk;	j	BED_TEXTURES
	f	Lech;	u	SHULKER_BOXES_RENDER_LAYER
	f	Lech;	v	BEDS_RENDER_LAYER
	f	Lech;	w	BANNER_PATTERNS_RENDER_LAYER
	f	Lech;	x	SHIELD_PATTERNS_RENDER_LAYER
	f	Lech;	y	SIGN_RENDER_LAYER
	f	Lech;	z	CHEST_RENDER_LAYER
	m	(Ljava/util/function/Consumer;)V	a	addDefaultTextures
		p	0	adder	adder
	m	(Lcdl;Lcgb;Z)Lenk;	a	getChestTexture
		p	0	blockEntity	blockEntity
		p	1	type	type
		p	2	christmas	christmas
	m	(Lcgs;)Lenk;	a	getSignTextureId
		p	0	type	type
	m	()Lech;	a	getBannerPatterns
	m	(Lcgb;Lenk;Lenk;Lenk;)Lenk;	a	getChestTexture
		p	0	type	type
		p	1	single	single
		p	2	left	left
		p	3	right	right
	m	(Ljava/lang/String;)Lenk;	a	getChestTextureId
		p	0	variant	variant
	m	()Lech;	b	getShieldPatterns
	m	()Lech;	c	getBeds
	m	()Lech;	d	getShulkerBoxes
	m	()Lech;	e	getSign
	m	()Lech;	f	getChest
	m	()Lech;	g	getEntitySolid
	m	()Lech;	h	getEntityCutout
	m	()Lech;	j	getEntityTranslucentCull
c	ecl	net/minecraft/client/render/SpriteTexturedVertexConsumer
	f	Ldhp;	a	parent
	f	Lelv;	b	sprite
	m	(Ldhp;Lelv;)V	<init>	<init>
		p	1	parent	parent
		p	2	sprite	sprite
c	ecm	net/minecraft/client/render/BuiltChunkStorage
	f	Lebx;	a	worldRenderer
	f	Lbqb;	b	world
	f	I	c	sizeY
	f	I	d	sizeX
	f	I	e	sizeZ
	f	[Leen$c;	f	chunks
	m	(Leen;Lbqb;ILebx;)V	<init>	<init>
		p	2	world	world
		p	3	viewDistance	viewDistance
		p	4	worldRenderer	worldRenderer
	m	(IIIZ)V	a	scheduleRebuild
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	important	important
	m	()V	a	clear
	m	(III)I	a	getChunkIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Leen;)V	a	createChunks
	m	(I)V	a	setViewDistance
		p	1	viewDistance	viewDistance
	m	(Lfu;)Leen$c;	a	getRenderedChunk
		p	1	pos	pos
	m	(DD)V	a	updateCameraPosition
		p	1	x	x
		p	3	z	z
c	ecn	net/minecraft/client/util/WindowProvider
	f	Ldlx;	a	client
	f	Ldgu;	b	monitorTracker
	m	(Ldgi;Ljava/lang/String;Ljava/lang/String;)Ldgy;	a	createWindow
c	ecp	net/minecraft/client/render/block/BlockModels
	f	Ljava/util/Map;	a	models
	f	Lenm;	b	modelManager
	m	()Lenm;	a	getModelManager
	m	(Lcfj;)Lelv;	a	getSprite
	m	(Lcgl;Ljava/lang/Comparable;)Ljava/lang/String;	a	propertyValueToString
	m	(Ljava/util/Map;)Ljava/lang/String;	a	propertyMapToString
	m	(Luh;Lcfj;)Lenn;	a	getModelId
	m	(Lcfj;)Lenh;	b	getModel
	m	()V	b	reload
	m	(Lcfj;)Lenn;	c	getModelId
c	ecq	net/minecraft/client/render/block/BlockRenderManager
	f	Lecp;	a	models
	f	Lecs;	b	blockModelRenderer
	f	Lecr;	c	fluidRenderer
	f	Ljava/util/Random;	d	random
	f	Ldmn;	e	blockColors
	m	(Lecp;Ldmn;)V	<init>	<init>
		p	1	models	models
		p	2	blockColors	blockColors
	m	(Lcfj;)Lenh;	a	getModel
		p	1	state	state
	m	()Lecp;	a	getModels
	m	(Lcfj;Ldhl;Lebz;II)V	a	renderBlockAsEntity
		p	1	state	state
		p	2	matrices	matrices
		p	3	vertexConsumer	vertexConsumer
		p	4	light	light
		p	5	overlay	overlay
	m	(Lfu;Lbpe;Ldhp;Lcxa;)Z	a	renderFluid
		p	1	pos	pos
	m	(Lcfj;Lfu;Lbpe;Ldhl;Ldhp;)V	a	renderDamage
		p	1	state	state
		p	2	pos	pos
		p	3	world	world
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
	m	(Lcfj;Lfu;Lbpe;Ldhl;Ldhp;ZLjava/util/Random;)Z	a	renderBlock
		p	1	state	state
		p	2	pos	pos
		p	3	world	world
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
		p	6	cull	cull
		p	7	random	random
	m	()Lecs;	b	getModelRenderer
c	ecr	net/minecraft/client/render/block/FluidRenderer
	f	[Lelv;	a	lavaSprites
	f	[Lelv;	b	waterSprites
	f	Lelv;	c	waterOverlaySprite
	m	(Ldhp;DDDFFFFFI)V	a	vertex
		p	1	vertexConsumer	vertexConsumer
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	red	red
		p	9	green	green
		p	10	blue	blue
		p	11	u	u
		p	12	v	v
		p	13	light	light
	m	()V	a	onResourceReload
	m	(Lbpg;Lfu;Lfz;Lcxa;)Z	a	isSameFluid
		p	0	world	world
		p	1	pos	pos
		p	2	side	side
		p	3	state	state
	m	(Lbpg;Lfu;Lfz;F)Z	a	isSideCovered
		p	0	world	world
		p	1	pos	pos
		p	2	direction	direction
		p	3	maxDeviation	maxDeviation
	m	(Lbpe;Lfu;)I	a	getLight
		p	1	world	world
		p	2	pos	pos
	m	(Lbpe;Lfu;Ldhp;Lcxa;)Z	a	render
		p	1	world	world
		p	2	pos	pos
		p	3	vertexConsumer	vertexConsumer
		p	4	state	state
	m	(Lbpg;Lfu;Lcwz;)F	a	getNorthWestCornerFluidHeight
		p	1	world	world
		p	2	pos	pos
		p	3	fluid	fluid
c	ecs	net/minecraft/client/render/block/BlockModelRenderer
	f	Ldmn;	a	colorMap
	f	Ljava/lang/ThreadLocal;	b	brightnessCache
	m	(Ldmn;)V	<init>	<init>
		p	1	colorMap	colorMap
	m	(Lbpe;Lcfj;Lfu;IIZLdhl;Ldhp;Ljava/util/List;Ljava/util/BitSet;)V	a	renderQuadsFlat
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	light	light
		p	5	overlay	overlay
		p	6	useWorldLight	useWorldLight
		p	7	matrices	matrices
		p	9	quads	quads
		p	10	flags	flags
	m	(Lbpe;Lcfj;Lfu;Ldhl;Ldhp;Ljava/util/List;[FLjava/util/BitSet;Lecs$b;I)V	a	renderQuadsSmooth
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
		p	6	quads	quads
		p	7	box	box
		p	8	flags	flags
		p	9	ambientOcclusionCalculator	ambientOcclusionCalculator
		p	10	overlay	overlay
	m	(Lbpe;Lenh;Lcfj;Lfu;Ldhl;Ldhp;ZLjava/util/Random;JI)Z	a	render
		p	1	world	world
		p	2	model	model
		p	3	state	state
		p	4	pos	pos
		p	5	matrix	matrix
		p	6	vertexConsumer	vertexConsumer
		p	7	cull	cull
		p	8	random	random
		p	9	seed	seed
		p	11	overlay	overlay
	m	(Lbpe;Lcfj;Lfu;[ILfz;[FLjava/util/BitSet;)V	a	getQuadDimensions
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	vertexData	vertexData
		p	5	face	face
		p	6	box	box
		p	7	flags	flags
	m	(Ldhl$a;Ldhp;FFFLjava/util/List;II)V	a	renderQuad
	m	(Lbpe;Lcfj;Lfu;Ldhp;Ldhl$a;Lect;FFFFIIIII)V	a	renderQuad
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	vertexConsumer	vertexConsumer
		p	5	matrixEntry	matrixEntry
		p	6	quad	quad
		p	7	brightness0	brightness0
		p	8	brightness1	brightness1
		p	9	brightness2	brightness2
		p	10	brightness3	brightness3
		p	11	light0	light0
		p	12	light1	light1
		p	13	light2	light2
		p	14	light3	light3
		p	15	overlay	overlay
	m	(Ldhl$a;Ldhp;Lcfj;Lenh;FFFII)V	a	render
	m	()V	a	enableBrightnessCache
	m	(Lbpe;Lenh;Lcfj;Lfu;Ldhl;Ldhp;ZLjava/util/Random;JI)Z	b	renderSmooth
		p	1	world	world
		p	2	model	model
		p	3	state	state
		p	4	pos	pos
		p	5	buffer	buffer
		p	6	vertexConsumer	vertexConsumer
		p	7	cull	cull
		p	8	random	random
		p	9	seed	seed
		p	11	overlay	overlay
	m	()V	b	disableBrightnessCache
	m	(Lbpe;Lenh;Lcfj;Lfu;Ldhl;Ldhp;ZLjava/util/Random;JI)Z	c	renderFlat
		p	1	world	world
		p	2	model	model
		p	3	state	state
		p	4	pos	pos
		p	5	buffer	buffer
		p	6	vertexConsumer	vertexConsumer
		p	7	cull	cull
		p	8	random	random
c	ecs$a	net/minecraft/client/render/block/BlockModelRenderer$NeighborData
	f	[Lfz;	g	faces
	f	Z	h	nonCubicWeight
	m	(Lfz;)Lecs$a;	a	getData
c	ecs$b	net/minecraft/client/render/block/BlockModelRenderer$AmbientOcclusionCalculator
	f	[F	b	brightness
	f	[I	c	light
	m	(IIII)I	a	getAmbientOcclusionBrightness
	m	(IIIIFFFF)I	a	getBrightness
	m	(Lbpe;Lcfj;Lfu;Lfz;[FLjava/util/BitSet;Z)V	a	apply
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	direction	direction
		p	5	box	box
		p	6	flags	flags
c	ecs$c	net/minecraft/client/render/block/BlockModelRenderer$Translation
	f	I	g	firstCorner
	f	I	h	secondCorner
	f	I	i	thirdCorner
	f	I	j	fourthCorner
	f	[Lecs$c;	k	VALUES
	m	(Ljava/lang/String;IIIII)V	<init>	<init>
		p	3	firstCorner	firstCorner
		p	4	secondCorner	secondCorner
		p	5	thirdCorner	thirdCorner
		p	6	fourthCorner	fourthCorner
	m	(Lfz;)Lecs$c;	a	getTranslations
c	ecs$d	net/minecraft/client/render/block/BlockModelRenderer$BrightnessCache
	f	Z	a	enabled
	f	Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;	b	intCache
	f	Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	c	floatCache
	m	(Lcfj;Lbpe;Lfu;)I	a	getInt
		p	1	state	state
		p	3	pos	pos
	m	()V	a	enable
	m	(Lcfj;Lbpe;Lfu;)F	b	getFloat
		p	1	state	state
		p	2	blockView	blockView
		p	3	pos	pos
	m	()V	b	disable
c	ecs$e	net/minecraft/client/render/block/BlockModelRenderer$NeighborOrientation
	f	I	m	shape
c	ect	net/minecraft/client/render/model/BakedQuad
	f	[I	a	vertexData
	f	I	b	colorIndex
	f	Lfz;	c	face
	f	Lelv;	d	sprite
	f	Z	e	shade
	m	([IILfz;Lelv;Z)V	<init>	<init>
		p	1	vertexData	vertexData
		p	2	colorIndex	colorIndex
		p	3	face	face
		p	4	sprite	sprite
		p	5	shade	shade
	m	()[I	b	getVertexData
	m	()Z	c	hasColor
	m	()I	d	getColorIndex
	m	()Lfz;	e	getFace
	m	()Z	f	hasShade
c	ecu	net/minecraft/client/render/model/json/ModelElement
	f	Lg;	a	from
	f	Lg;	b	to
	f	Ljava/util/Map;	c	faces
	f	Lecw;	d	rotation
	f	Z	e	shade
	m	(Lg;Lg;Ljava/util/Map;Lecw;Z)V	<init>	<init>
		p	1	from	from
		p	2	to	to
		p	3	faces	faces
		p	4	rotation	rotation
		p	5	shade	shade
	m	()V	a	initTextures
	m	(Lfz;)[F	a	getRotatedMatrix
		p	1	direction	direction
c	ecu$a	net/minecraft/client/render/model/json/ModelElement$Deserializer
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lg;	a	deserializeVec3f
		p	1	object	object
		p	2	name	name
	m	(Ljava/lang/String;)Lfz;	a	getDirection
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;)Lecw;	a	deserializeRotation
		p	1	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map;	a	deserializeFacesValidating
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lecu;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)F	b	deserializeRotationAngle
		p	1	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map;	b	deserializeFaces
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonObject;)Lfz$a;	c	deserializeAxis
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Lg;	d	deserializeTo
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)Lg;	e	deserializeFrom
		p	1	object	object
c	ecv	net/minecraft/client/render/model/json/ModelElementFace
	f	Lfz;	a	cullFace
	f	I	b	tintIndex
	f	Ljava/lang/String;	c	textureId
	f	Lecx;	d	textureData
	m	(Lfz;ILjava/lang/String;Lecx;)V	<init>	<init>
		p	1	cullFace	cullFace
		p	2	tintIndex	tintIndex
		p	3	textureId	textureId
		p	4	textureData	textureData
c	ecv$a	net/minecraft/client/render/model/json/ModelElementFace$Deserializer
	m	(Lcom/google/gson/JsonObject;)I	a	deserializeTintIndex
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lecv;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	deserializeTexture
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Lfz;	c	deserializeCullFace
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	ecw	net/minecraft/client/render/model/json/ModelRotation
	f	Lg;	a	origin
	f	Lfz$a;	b	axis
	f	F	c	angle
	f	Z	d	rescale
	m	(Lg;Lfz$a;FZ)V	<init>	<init>
		p	1	origin	origin
		p	2	axis	axis
		p	3	angle	angle
		p	4	rescale	rescale
c	ecx	net/minecraft/client/render/model/json/ModelElementTexture
	f	[F	a	uvs
	f	I	b	rotation
	m	([FI)V	<init>	<init>
		p	1	uvs	uvs
		p	2	rotation	rotation
	m	([F)V	a	setUvs
		p	1	uvs	uvs
	m	(I)F	a	getU
		p	1	rotation	rotation
	m	(I)F	b	getV
		p	1	rotation	rotation
	m	(I)I	c	getDirectionIndex
		p	1	offset	offset
	m	(I)I	d	getRotatedUVIndex
		p	1	rotation	rotation
c	ecx$a	net/minecraft/client/render/model/json/ModelElementTexture$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lecx;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)I	a	deserializeRotation
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)[F	b	deserializeUVs
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	ecy	net/minecraft/client/render/model/json/JsonUnbakedModel
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/String;	b	id
	f	Ljava/util/Map;	c	textureMap
	f	Lecy;	d	parent
	f	Luh;	e	parentId
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	f	Leda;	g	QUAD_FACTORY
	f	Ljava/util/List;	h	elements
	f	Lecy$b;	i	guiLight
	f	Z	j	ambientOcclusion
	f	Ledf;	k	transformations
	f	Ljava/util/List;	l	overrides
	m	(Luh;Ljava/util/List;Ljava/util/Map;ZLecy$b;Ledf;Ljava/util/List;)V	<init>	<init>
		p	1	parentId	parentId
		p	2	elements	elements
		p	3	textureMap	textureMap
		p	4	ambientOcclusion	ambientOcclusion
		p	5	guiLight	guiLight
		p	6	transformations	transformations
		p	7	overrides	overrides
	m	(Lenl;Lecy;)Ledd;	a	compileOverrides
		p	1	modelLoader	modelLoader
		p	2	parent	parent
	m	(Ljava/lang/String;)Lecy;	a	deserialize
		p	0	json	json
	m	(Lenl;Lecy;Ljava/util/function/Function;Leno;Luh;Z)Lenh;	a	bake
		p	1	loader	loader
		p	2	parent	parent
		p	3	textureGetter	textureGetter
		p	4	settings	settings
		p	5	id	id
		p	6	hasDepth	hasDepth
	m	(Ledf$b;)Lede;	a	getTransformation
		p	1	renderMode	renderMode
	m	()Ljava/util/List;	a	getElements
	m	(Lecu;Lecv;Lelv;Lfz;Leno;Luh;)Lect;	a	createQuad
		p	0	element	element
		p	1	elementFace	elementFace
		p	2	sprite	sprite
		p	3	side	side
		p	4	settings	settings
		p	5	id	id
	m	(Ljava/io/Reader;)Lecy;	a	deserialize
		p	0	input	input
	m	(Ljava/lang/String;)Z	b	textureExists
		p	1	name	name
	m	()Z	b	useAmbientOcclusion
	m	()Lecy$b;	c	getGuiLight
	m	(Ljava/lang/String;)Lenk;	c	resolveSprite
		p	1	spriteName	spriteName
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Either;	e	resolveTexture
		p	1	name	name
	m	()Ljava/util/List;	e	getOverrides
	m	(Ljava/lang/String;)Z	f	isTextureReference
		p	0	reference	reference
	m	()Lecy;	g	getRootModel
	m	()Ledf;	h	getTransformations
c	ecy$a	net/minecraft/client/render/model/json/JsonUnbakedModel$Deserializer
	m	(Lcom/google/gson/JsonObject;)Z	a	deserializeAmbientOcclusion
		p	1	json	json
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List;	a	deserializeOverrides
		p	1	context	context
		p	2	object	object
	m	(Luh;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either;	a	resolveReference
		p	0	id	id
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lecy;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	b	deserializeTextures
		p	1	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List;	b	deserializeElements
		p	1	context	context
		p	2	json	json
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	c	deserializeParent
		p	1	json	json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	element	element
		p	2	unused	unused
		p	3	ctx	ctx
c	ecy$b	net/minecraft/client/render/model/json/JsonUnbakedModel$GuiLight
	f	Lecy$b;	a	field_21858
		c	The model will be shaded from the front, like a basic item
	f	Lecy$b;	b	field_21859
		c	The model will be shaded from the side, like a block.
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Z	a	isSide
	m	(Ljava/lang/String;)Lecy$b;	a	deserialize
		p	0	value	value
c	ecz	net/minecraft/client/render/model/json/ModelVariantMap
	f	Ljava/util/Map;	a	variantMap
	f	Ledl;	b	multipartModel
	m	(Ljava/util/Map;Ledl;)V	<init>	<init>
		p	1	variantMap	variantMap
		p	2	multipartModel	multipartModel
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	variantMapList	variantMapList
	m	()Ljava/util/Map;	a	getVariantMap
	m	(Lecz$a;Ljava/io/Reader;)Lecz;	a	deserialize
		p	0	context	context
		p	1	reader	reader
	m	()Z	c	hasMultipartModel
	m	()Ledl;	d	getMultipartModel
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ecz$a	net/minecraft/client/render/model/json/ModelVariantMap$DeserializationContext
	f	Lcom/google/gson/Gson;	a	gson
	f	Lcfk;	b	stateFactory
	m	(Lcfk;)V	a	setStateFactory
		p	1	stateFactory	stateFactory
	m	()Lcfk;	a	getStateFactory
c	ecz$b	net/minecraft/client/render/model/json/ModelVariantMap$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lecz;	a	deserialize
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map;	a	deserializeVariants
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ledl;	b	deserializeMultipart
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	ed	net/minecraft/command/arguments/BlockPredicateArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_TAG_EXCEPTION
	m	(Lcom/mojang/brigadier/StringReader;)Led$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
		p	0	context	context
		p	1	name	name
	m	()Led;	a	blockPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	ed$a	net/minecraft/command/arguments/BlockPredicateArgumentType$StatePredicate
	f	Lcfj;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lle;	c	nbt
	m	(Lcfj;Ljava/util/Set;Lle;)V	<init>	<init>
		p	1	state	state
		p	2	properties	properties
		p	3	nbt	nbt
	m	(Lcfn;)Z	a	test
c	ed$b	net/minecraft/command/arguments/BlockPredicateArgumentType$BlockPredicate
c	ed$c	net/minecraft/command/arguments/BlockPredicateArgumentType$TagPredicate
	f	Ladf;	a	tag
	f	Lle;	b	nbt
	f	Ljava/util/Map;	c	properties
	m	(Ladf;Ljava/util/Map;Lle;)V	<init>	<init>
		p	3	nbt	nbt
	m	(Lcfn;)Z	a	test
c	eda	net/minecraft/client/render/model/BakedQuadFactory
	f	F	a	MIN_SCALE
	f	F	b	MAX_SCALE
	m	(Lg;Lg;)[F	a	getPositionMatrix
		p	1	from	from
		p	2	to	to
	m	(Lg;Lg;Lb;Lg;)V	a	transformVertex
		p	1	vertex	vertex
		p	2	origin	origin
		p	3	transformationMatrix	transformationMatrix
		p	4	scale	scale
	m	(Lecx;Lfz;Lf;Luh;)Lecx;	a	uvLock
		p	0	texture	texture
		p	1	orientation	orientation
		p	2	rotation	rotation
		p	3	modelId	modelId
	m	([IILfz;Lecx;[FLelv;Lf;Lecw;Z)V	a	packVertexData
		p	1	vertices	vertices
		p	2	cornerIndex	cornerIndex
		p	3	direction	direction
		p	4	texture	texture
		p	5	positionMatrix	positionMatrix
		p	6	sprite	sprite
		p	7	orientation	orientation
		p	8	rotation	rotation
		p	9	shaded	shaded
	m	(Lg;Lecw;)V	a	rotateVertex
		p	1	vector	vector
		p	2	rotation	rotation
	m	(Lg;Lf;)V	a	transformVertex
		p	1	vertex	vertex
		p	2	transformation	transformation
	m	(Lecx;Lelv;Lfz;[FLf;Lecw;Z)[I	a	packVertexData
		p	1	texture	texture
		p	2	sprite	sprite
		p	3	direction	direction
		p	4	positionMatrix	positionMatrix
		p	5	orientation	orientation
		p	6	rotation	rotation
		p	7	shaded	shaded
	m	([I)Lfz;	a	decodeDirection
		p	0	rotationMatrix	rotationMatrix
	m	([ILfz;)V	a	encodeDirection
		p	1	rotationMatrix	rotationMatrix
		p	2	direction	direction
	m	([IILg;Lelv;Lecx;)V	a	packVertexData
		p	1	vertices	vertices
		p	2	cornerIndex	cornerIndex
		p	3	position	position
	m	(Lg;Lg;Lecv;Lelv;Lfz;Leno;Lecw;ZLuh;)Lect;	a	bake
		p	1	from	from
		p	2	to	to
		p	3	face	face
		p	4	texture	texture
		p	5	side	side
		p	6	settings	settings
		p	7	rotation	rotation
		p	8	shade	shade
		p	9	modelId	modelId
c	edb	net/minecraft/client/render/model/json/ItemModelGenerator
	f	Ljava/util/List;	a	LAYERS
	m	(Ljava/util/function/Function;Lecy;)Lecy;	a	create
		p	1	textureGetter	textureGetter
		p	2	blockModel	blockModel
	m	(Lelv;)Ljava/util/List;	a	getFrames
		p	1	sprite	sprite
	m	(Lelv;IIIII)Z	a	isPixelTransparent
		p	1	sprite	sprite
		p	2	frame	frame
		p	3	x	x
		p	4	y	y
	m	(Ledb$b;Ljava/util/List;Lelv;IIIIIZ)V	a	buildCube
		p	2	cubes	cubes
		p	3	sprite	sprite
		p	4	frame	frame
		p	5	x	x
		p	6	y	y
	m	(Lelv;Ljava/lang/String;I)Ljava/util/List;	a	addSubComponents
		p	1	sprite	sprite
		p	2	key	key
		p	3	layer	layer
	m	(Ljava/util/List;Ledb$b;II)V	a	buildCube
		p	1	cubes	cubes
		p	3	x	x
		p	4	y	y
	m	(ILjava/lang/String;Lelv;)Ljava/util/List;	a	addLayerElements
		p	1	layer	layer
		p	2	key	key
		p	3	sprite	sprite
c	edb$a	net/minecraft/client/render/model/json/ItemModelGenerator$Frame
	f	Ledb$b;	a	side
	f	I	b	min
	f	I	c	max
	f	I	d	level
	m	(Ledb$b;II)V	<init>	<init>
		p	2	width	width
		p	3	depth	depth
	m	()Ledb$b;	a	getSide
	m	(I)V	a	expand
		p	1	newValue	newValue
	m	()I	b	getMin
	m	()I	c	getMax
	m	()I	d	getLevel
c	edb$b	net/minecraft/client/render/model/json/ItemModelGenerator$Side
	f	Lfz;	e	direction
	f	I	f	offsetX
	f	I	g	offsetY
	m	(Ljava/lang/String;ILfz;II)V	<init>	<init>
		p	3	direction	direction
		p	4	offsetX	offsetX
		p	5	offsetY	offsetY
	m	()Lfz;	a	getDirection
	m	()I	b	getOffsetX
	m	()I	c	getOffsetY
	m	()Z	d	isVertical
c	edc	net/minecraft/client/render/model/json/ModelOverride
	f	Luh;	a	modelId
	f	Ljava/util/Map;	b	predicateToThresholds
	m	(Luh;Ljava/util/Map;)V	<init>	<init>
		p	1	modelId	modelId
		p	2	predicateToThresholds	predicateToThresholds
	m	()Luh;	a	getModelId
	m	(Lbki;Ldym;Laoy;)Z	a	matches
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
c	edc$a	net/minecraft/client/render/model/json/ModelOverride$Deserializer
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	a	deserializeMinPropertyValues
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ledc;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	edd	net/minecraft/client/render/model/json/ModelOverrideList
	f	Ledd;	a	EMPTY
	f	Ljava/util/List;	b	overrides
	f	Ljava/util/List;	c	models
	m	(Lenl;Lecy;Ljava/util/function/Function;Ljava/util/List;)V	<init>	<init>
		p	1	modelLoader	modelLoader
		p	2	unbakedModel	unbakedModel
		p	3	unbakedModelGetter	unbakedModelGetter
		p	4	overrides	overrides
	m	(Lenh;Lbki;Ldym;Laoy;)Lenh;	a	apply
		p	1	model	model
		p	2	stack	stack
		p	3	world	world
		p	4	entity	entity
c	ede	net/minecraft/client/render/model/json/Transformation
	f	Lede;	a	IDENTITY
	f	Lg;	b	rotation
	f	Lg;	c	translation
	f	Lg;	d	scale
	m	(Lg;Lg;Lg;)V	<init>	<init>
		p	1	rotation	rotation
		p	2	translation	translation
		p	3	scale	scale
	m	(ZLdhl;)V	a	apply
		p	1	leftHanded	leftHanded
		p	2	matrices	matrices
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ede$a	net/minecraft/client/render/model/json/Transformation$Deserializer
	f	Lg;	a	DEFAULT_ROTATION
	f	Lg;	b	DEFAULT_TRANSLATION
	f	Lg;	c	DEFAULT_SCALE
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lg;)Lg;	a	parseVector3f
		p	1	json	json
		p	2	key	key
		p	3	fallback	fallback
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lede;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	edf	net/minecraft/client/render/model/json/ModelTransformation
	f	Ledf;	a	NONE
	f	Lede;	b	thirdPersonLeftHand
	f	Lede;	c	thirdPersonRightHand
	f	Lede;	d	firstPersonLeftHand
	f	Lede;	e	firstPersonRightHand
	f	Lede;	f	head
	f	Lede;	g	gui
	f	Lede;	h	ground
	f	Lede;	i	fixed
	m	(Lede;Lede;Lede;Lede;Lede;Lede;Lede;Lede;)V	<init>	<init>
		p	1	thirdPersonLeftHand	thirdPersonLeftHand
		p	2	thirdPersonRightHand	thirdPersonRightHand
		p	3	firstPersonLeftHand	firstPersonLeftHand
		p	4	firstPersonRightHand	firstPersonRightHand
		p	5	head	head
		p	6	gui	gui
		p	7	ground	ground
		p	8	fixed	fixed
	m	(Ledf;)V	<init>	<init>
		p	1	other	other
	m	(Ledf$b;)Lede;	a	getTransformation
		p	1	renderMode	renderMode
	m	(Ledf$b;)Z	b	isTransformationDefined
		p	1	renderMode	renderMode
c	edf$a	net/minecraft/client/render/model/json/ModelTransformation$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ledf;	a	deserialize
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lede;	a	parseModelTransformation
		p	1	ctx	ctx
		p	2	json	json
		p	3	key	key
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	edf$b	net/minecraft/client/render/model/json/ModelTransformation$Mode
c	edg	net/minecraft/client/render/model/json/WeightedUnbakedModel
	f	Ljava/util/List;	a	variants
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	variants	variants
	m	()Ljava/util/List;	a	getVariants
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	edg$a	net/minecraft/client/render/model/json/WeightedUnbakedModel$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ledg;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	edh	net/minecraft/client/render/model/json/ModelVariant
	f	Luh;	a	location
	f	Lf;	b	rotation
	f	Z	c	uvLock
	f	I	d	weight
	m	(Luh;Lf;ZI)V	<init>	<init>
		p	1	location	location
		p	3	uvLock	uvLock
		p	4	weight	weight
	m	()Luh;	a	getLocation
	m	()I	d	getWeight
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	edh$a	net/minecraft/client/render/model/json/ModelVariant$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ledh;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Leni;	a	deserializeRotation
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Luh;	b	deserializeModel
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)I	c	deserializeWeight
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Z	d	deserializeUvLock
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	edi	net/minecraft/client/render/model/json/AndMultipartModelSelector
	f	Ljava/lang/Iterable;	c	selectors
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1	selectors	selectors
c	edj	net/minecraft/client/render/model/json/MultipartModelSelector
	f	Ledj;	a	TRUE
	f	Ledj;	b	FALSE
	m	(Lcfk;)Ljava/util/function/Predicate;	getPredicate	getPredicate
		p	1	stateFactory	stateFactory
c	edk	net/minecraft/client/render/model/json/SimpleMultipartModelSelector
	f	Lcom/google/common/base/Splitter;	c	VALUE_SPLITTER
	f	Ljava/lang/String;	d	key
	f	Ljava/lang/String;	e	valueString
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
		p	2	valueString	valueString
	m	(Lcfk;Lcgl;Ljava/lang/String;)Ljava/util/function/Predicate;	a	createPredicate
		p	1	stateFactory	stateFactory
		p	2	property	property
		p	3	valueString	valueString
c	edl	net/minecraft/client/render/model/MultipartUnbakedModel
	f	Lcfk;	a	stateFactory
	f	Ljava/util/List;	b	components
	m	(Lcfk;Ljava/util/List;)V	<init>	<init>
		p	1	stateFactory	stateFactory
		p	2	components	components
	m	()Ljava/util/List;	a	getComponents
	m	()Ljava/util/Set;	b	getModels
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	edl$a	net/minecraft/client/render/model/MultipartUnbakedModel$Deserializer
	f	Lecz$a;	a	context
	m	(Lecz$a;)V	<init>	<init>
		p	1	context	context
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List;	a	deserializeComponents
		p	1	context	context
		p	2	array	array
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ledl;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
c	edm	net/minecraft/client/render/model/json/OrMultipartModelSelector
	f	Ljava/lang/Iterable;	c	selectors
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1	selectors	selectors
c	edn	net/minecraft/client/render/model/json/MultipartModelComponent
	f	Ledj;	a	selector
	f	Ledg;	b	model
	m	(Ledj;Ledg;)V	<init>	<init>
		p	1	selector	selector
		p	2	model	model
	m	()Ledg;	a	getModel
	m	(Lcfk;)Ljava/util/function/Predicate;	a	getPredicate
		p	1	stateFactory	stateFactory
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	edn$a	net/minecraft/client/render/model/json/MultipartModelComponent$Deserializer
	m	(Ljava/util/Map$Entry;)Ledj;	a	createStatePropertySelector
		p	0	entry	entry
	m	(Lcom/google/gson/JsonObject;)Ledj;	a	deserializeSelector
		p	0	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ledn;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Ledj;	b	deserializeSelectorOrDefault
		p	1	object	object
c	eds	net/minecraft/client/render/block/entity/BannerBlockEntityRenderer
	f	Ldyg;	a	banner
	f	Ldyg;	c	pillar
	f	Ldyg;	d	crossbar
	m	()Ldyg;	a	createBanner
	m	(Lcdc;FLdhl;Lebz;II)V	a	render
	m	(Ldhl;Lebz;IILdyg;Lenk;ZLjava/util/List;Z)V	a	renderCanvas
		p	0	matrices	matrices
		p	1	vertexConsumers	vertexConsumers
		p	2	light	light
		p	3	overlay	overlay
		p	4	canvas	canvas
		p	5	baseSprite	baseSprite
		p	6	isBanner	isBanner
		p	7	patterns	patterns
c	edt	net/minecraft/client/render/block/entity/BeaconBlockEntityRenderer
	f	Luh;	a	BEAM_TEXTURE
	m	(Lcdg;FLdhl;Lebz;II)V	a	render
	m	(Ldhl;Lebz;Luh;FFJII[FFF)V	a	renderLightBeam
	m	(Lcdg;)Z	a	rendersOutsideBoundingBox
	m	(Ldhl;Lebz;FJII[F)V	a	render
c	edu	net/minecraft/client/render/block/entity/BedBlockEntityRenderer
	f	[Ldyg;	d	legs
	m	(Lcdh;FLdhl;Lebz;II)V	a	render
	m	(Ldhl;Lebz;ZLfz;Lenk;IIZ)V	a	method_3558
		p	1	matrix	matrix
		p	6	light	light
		p	7	overlay	overlay
c	edv	net/minecraft/client/render/block/entity/BellBlockEntityRenderer
	f	Lenk;	a	BELL_BODY_TEXTURE
	m	(Lcdj;FLdhl;Lebz;II)V	a	render
c	edw	net/minecraft/client/render/block/entity/BlockEntityRenderDispatcher
	f	Ledw;	a	INSTANCE
	f	Lelw;	b	textureManager
	f	Lbqb;	c	world
	f	Ldlj;	d	camera
	f	Ldej;	e	crosshairTarget
	f	Ljava/util/Map;	f	renderers
	f	Ldhg;	g	bufferBuilder
	f	Ldmt;	h	textRenderer
	m	(Lbqb;)V	a	setWorld
	m	(Lbqb;Lelw;Ldmt;Ldlj;Ldej;)V	a	configure
		p	1	world	world
		p	2	textureManager	textureManager
		p	3	textRenderer	textRenderer
		p	4	camera	camera
		p	5	crosshairTarget	crosshairTarget
	m	(Lcdl;Ljava/lang/Runnable;)V	a	runReported
	m	(Ledx;Lcdl;FLdhl;Lebz;)V	a	render
		p	0	renderer	renderer
		p	1	blockEntity	blockEntity
		p	2	tickDelta	tickDelta
		p	3	matrices	matrices
		p	4	vertexConsumers	vertexConsumers
	m	(Lcdl;Ldhl;Lebz;II)Z	a	renderEntity
		p	1	entity	entity
		p	2	matrix	matrix
		p	3	vertexConsumerProvider	vertexConsumerProvider
		p	4	light	light
		p	5	overlay	overlay
	m	(Lcdl;FLdhl;Lebz;)V	a	render
		p	1	blockEntity	blockEntity
		p	2	tickDelta	tickDelta
		p	3	matrix	matrix
	m	()Ldmt;	a	getTextRenderer
	m	(Lcdm;Ledx;)V	a	register
	m	(Lcdl;)Ledx;	a	get
c	edx	net/minecraft/client/render/block/entity/BlockEntityRenderer
	f	Ledw;	b	dispatcher
	m	(Ledw;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lcdl;)Z	a	rendersOutsideBoundingBox
		p	1	blockEntity	blockEntity
	m	(Lcdl;FLdhl;Lebz;II)V	a	render
		p	1	entity	entity
		p	2	tickDelta	tickDelta
		p	3	matrices	matrices
		p	4	vertexConsumers	vertexConsumers
		p	5	light	light
		p	6	overlay	overlay
c	edy	net/minecraft/client/render/block/entity/LightmapCoordinatesRetriever
	m	(Lcdl;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	a	getFrom
	m	()Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	a	getFallback
	m	(Lcdl;Lcdl;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	a	getFromBoth
c	edz	net/minecraft/client/render/block/entity/CampfireBlockEntityRenderer
	m	(Lcdo;FLdhl;Lebz;II)V	a	render
c	ee	net/minecraft/command/arguments/BlockStateArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lec;	a	getBlockState
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lec;	a	parse
	m	()Lee;	a	blockState
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eea	net/minecraft/client/render/block/entity/ChestBlockEntityRenderer
	f	Z	k	christmas
	m	(Ldhl;Ldhp;Ldyg;Ldyg;Ldyg;FII)V	a	method_22749
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	7	light	light
		p	8	overlay	overlay
c	eeb	net/minecraft/client/render/block/entity/ConduitBlockEntityRenderer
	f	Lenk;	a	BASE_TEXTURE
	f	Lenk;	c	CAGE_TEXTURE
	f	Lenk;	d	WIND_TEXTURE
	f	Lenk;	e	WIND_VERTICAL_TEXTURE
	f	Lenk;	f	OPEN_EYE_TEXTURE
	f	Lenk;	g	CLOSED_EYE_TEXTURE
	m	(Lcds;FLdhl;Lebz;II)V	a	render
c	eec	net/minecraft/client/render/block/entity/EnchantingTableBlockEntityRenderer
	f	Lenk;	a	BOOK_TEXTURE
	f	Ldvh;	c	book
	m	(Lcdw;FLdhl;Lebz;II)V	a	render
c	eed	net/minecraft/client/render/block/entity/LecternBlockEntityRenderer
	f	Ldvh;	a	book
	m	(Lced;FLdhl;Lebz;II)V	a	render
c	eee	net/minecraft/client/render/block/entity/PistonBlockEntityRenderer
	f	Lecq;	a	manager
	m	(Lcff;FLdhl;Lebz;II)V	a	render
c	eef	net/minecraft/client/render/block/entity/ShulkerBoxBlockEntityRenderer
	f	Ldxj;	a	model
	m	(Lceg;FLdhl;Lebz;II)V	a	render
c	eeg	net/minecraft/client/render/block/entity/SignBlockEntityRenderer
	f	Leeg$a;	a	model
	m	(Lbvr;)Lenk;	a	getModelTexture
	m	(Lceh;FLdhl;Lebz;II)V	a	render
c	eeg$a	net/minecraft/client/render/block/entity/SignBlockEntityRenderer$SignModel
	f	Ldyg;	a	field
	f	Ldyg;	b	foot
c	eeh	net/minecraft/client/render/block/entity/SkullBlockEntityRenderer
	f	Ljava/util/Map;	a	MODELS
	f	Ljava/util/Map;	c	TEXTURES
	m	(Lcei;FLdhl;Lebz;II)V	a	render
	m	(Lfz;FLcay$a;Lcom/mojang/authlib/GameProfile;FLdhl;Lebz;I)V	a	render
c	eei	net/minecraft/client/render/block/entity/MobSpawnerBlockEntityRenderer
	m	(Lcek;FLdhl;Lebz;II)V	a	render
c	eej	net/minecraft/client/render/block/entity/StructureBlockBlockEntityRenderer
	m	(Lcel;)Z	a	rendersOutsideBoundingBox
	m	(Lcel;FLdhl;Lebz;II)V	a	render
c	eek	net/minecraft/client/render/block/entity/EndGatewayBlockEntityRenderer
	f	Luh;	d	BEAM_TEXTURE
	m	(Lcem;FLdhl;Lebz;II)V	a	render
c	eel	net/minecraft/client/render/block/entity/EndPortalBlockEntityRenderer
	f	Luh;	a	SKY_TEXTURE
	f	Luh;	c	PORTAL_TEXTURE
	f	Ljava/util/Random;	d	RANDOM
	m	(Lcen;FLdhl;Lebz;II)V	a	render
c	een	net/minecraft/client/render/chunk/ChunkBuilder
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/PriorityQueue;	b	rebuildQueue
	f	Ljava/util/Queue;	c	threadBuffers
	f	Ljava/util/Queue;	d	uploadQueue
	f	I	e	queuedTaskCount
	f	I	f	bufferCount
	f	Lebm;	g	buffers
	f	Lamq;	h	mailbox
	f	Ljava/util/concurrent/Executor;	i	executor
	f	Lbqb;	j	world
	f	Lebx;	k	worldRenderer
	f	Ldem;	l	cameraPosition
	m	(Lbqb;Lebx;Ljava/util/concurrent/Executor;ZLebm;)V	<init>	<init>
		p	1	world	world
		p	2	worldRenderer	worldRenderer
		p	3	executor	executor
		p	4	is64Bits	is64Bits
		p	5	buffers	buffers
	m	(Lbqb;)V	a	setWorld
		p	1	world	world
	m	(Leen$c$a;)V	a	send
		p	1	task	task
	m	(Ldem;)V	a	setCameraPosition
		p	1	cameraPosition	cameraPosition
	m	(Ldhg;Ldho;)Ljava/util/concurrent/CompletableFuture;	a	scheduleUpload
		p	1	buffer	buffer
		p	2	glBuffer	glBuffer
	m	(Leen$c;)V	a	rebuild
		p	1	chunk	chunk
	m	(Ldhg;Ldho;)Ljava/util/concurrent/CompletableFuture;	b	upload
		p	1	buffer	buffer
		p	2	glBuffer	glBuffer
	m	()Ljava/lang/String;	b	getDebugString
	m	()Ldem;	c	getCameraPosition
	m	()Z	d	upload
	m	()V	e	reset
	m	()Z	f	isEmpty
	m	()V	g	stop
	m	()V	h	scheduleRunTasks
	m	()V	i	clear
c	een$a	net/minecraft/client/render/chunk/ChunkBuilder$Result
c	een$b	net/minecraft/client/render/chunk/ChunkBuilder$ChunkData
	f	Leen$b;	a	EMPTY
	f	Ljava/util/Set;	b	nonEmptyLayers
	f	Ljava/util/Set;	c	initializedLayers
	f	Z	d	empty
	f	Ljava/util/List;	e	blockEntities
	f	Leeq;	f	occlusionGraph
	f	Ldhg$b;	g	bufferState
	m	(Lech;)Z	a	isEmpty
		p	1	layer	layer
	m	()Z	a	isEmpty
	m	(Lfz;Lfz;)Z	a	isVisibleThrough
	m	()Ljava/util/List;	b	getBlockEntities
c	een$c	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	data
	f	Ldeg;	b	boundingBox
	f	Leen$c$b;	d	rebuildTask
	f	Leen$c$c;	e	sortTask
	f	Ljava/util/Set;	f	blockEntities
	f	Ljava/util/Map;	g	buffers
	f	I	h	rebuildFrame
	f	Z	i	needsRebuild
	f	Lfu$a;	j	origin
	f	[Lfu$a;	k	neighborPositions
	f	Z	l	needsImportantRebuild
	m	(I)Z	a	setRebuildFrame
		p	1	frame	frame
	m	(III)V	a	setOrigin
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lech;)Ldho;	a	getBuffer
		p	1	layer	layer
	m	()Z	a	shouldBuild
	m	(Leen;)V	a	scheduleRebuild
		p	1	chunkRenderer	chunkRenderer
	m	(Ldhg;)V	a	beginBufferBuilding
		p	1	buffer	buffer
	m	(Lfz;)Lfu;	a	getNeighborPosition
		p	1	direction	direction
	m	(Lech;Leen;)Z	a	scheduleSort
		p	1	layer	layer
		p	2	chunkRenderer	chunkRenderer
	m	(Lfu;)Z	a	isChunkNonEmpty
		p	1	pos	pos
	m	(Ljava/util/Set;)V	a	setNoCullingBlockEntities
		p	1	noCullingBlockEntities	noCullingBlockEntities
	m	(Z)V	a	scheduleRebuild
		p	1	important	important
	m	()D	b	getSquaredCameraDistance
	m	()Leen$b;	c	getData
	m	()V	d	delete
	m	()Lfu;	e	getOrigin
	m	()V	f	cancelRebuild
	m	()Z	g	needsRebuild
	m	()Z	h	needsImportantRebuild
	m	()V	i	cancel
	m	()Leen$c$a;	j	createRebuildTask
	m	()V	k	rebuild
	m	()V	l	clear
c	een$c$a	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk$Task
	f	D	a	distance
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	cancelled
	m	(Lebm;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1	buffers	buffers
	m	(Leen$c$a;)I	a	compareTo
	m	()V	a	cancel
c	een$c$b	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk$RebuildTask
	f	Leeo;	d	region
	m	(FFFLeen$b;Lebm;)Ljava/util/Set;	a	render
		p	1	cameraX	cameraX
		p	2	cameraY	cameraY
		p	3	cameraZ	cameraZ
		p	4	data	data
		p	5	buffers	buffers
	m	(Leen$b;Ljava/util/Set;Lcdl;)V	a	addBlockEntity
		p	1	data	data
		p	2	blockEntities	blockEntities
		p	3	blockEntity	blockEntity
c	een$c$c	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk$SortTask
	f	Leen$b;	e	data
c	eeo	net/minecraft/client/render/chunk/ChunkRendererRegion
	f	I	a	chunkXOffset
	f	I	b	chunkZOffset
	f	Lfu;	c	offset
	f	I	d	xSize
	f	I	e	ySize
	f	I	f	zSize
	f	[[Lchj;	g	chunks
	f	[Lcfj;	h	blockStates
	f	[Lcxa;	i	fluidStates
	f	Lbqb;	j	world
	m	(Lbqb;II[[Lchj;Lfu;Lfu;)V	<init>	<init>
		p	1	world	world
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
		p	4	chunks	chunks
		p	5	startPos	startPos
		p	6	endPos	endPos
	m	(Lfu;Lchj$a;)Lcdl;	a	getBlockEntity
	m	(III)I	a	getIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbqb;Lfu;Lfu;I)Leeo;	a	create
		p	0	world	world
		p	1	startPos	startPos
		p	2	endPos	endPos
		p	3	chunkRadius	chunkRadius
	m	(Lfu;)I	a	getIndex
		p	1	pos	pos
c	eep	net/minecraft/client/render/chunk/ChunkOcclusionDataBuilder
	f	I	a	STEP_X
	f	I	b	STEP_Z
	f	I	c	STEP_Y
	f	[Lfz;	d	DIRECTIONS
	f	Ljava/util/BitSet;	e	closed
	f	[I	f	EDGE_POINTS
	f	I	g	openCount
	m	(ILfz;)I	a	offset
		p	1	pos	pos
	m	(I)Ljava/util/Set;	a	getOpenFaces
		p	1	pos	pos
	m	(ILjava/util/Set;)V	a	addEdgeFaces
		p	1	pos	pos
		p	2	openFaces	openFaces
	m	()Leeq;	a	build
	m	(Lfu;)V	a	markClosed
		p	1	pos	pos
	m	(III)I	a	pack
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lfu;)I	c	pack
		p	0	pos	pos
c	eeq	net/minecraft/client/render/chunk/ChunkOcclusionData
	f	I	a	DIRECTION_COUNT
	f	Ljava/util/BitSet;	b	visibility
	m	(Ljava/util/Set;)V	a	addOpenEdgeFaces
		p	1	faces	faces
	m	(Z)V	a	fill
		p	1	visible	visible
	m	(Lfz;Lfz;Z)V	a	setVisibleThrough
		p	1	from	from
		p	2	to	to
		p	3	visible	visible
	m	(Lfz;Lfz;)Z	a	isVisibleThrough
		p	1	from	from
		p	2	to	to
c	ees	net/minecraft/client/render/Frustum
	f	[Lh;	a	homogeneousCoordinates
	f	D	b	x
	f	D	c	y
	f	D	d	z
	m	(Lb;IIII)V	a	transform
		p	1	function	function
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	index	index
	m	(FFFFFF)Z	a	isAnyCornerVisible
		p	1	x1	x1
		p	2	y1	y1
		p	3	z1	z1
		p	4	x2	x2
		p	5	y2	y2
		p	6	z2	z2
	m	(Ldeg;)Z	a	isVisible
		p	1	box	box
	m	(DDDDDD)Z	a	isVisible
		p	1	minX	minX
		p	3	minY	minY
		p	5	minZ	minZ
		p	7	maxX	maxX
		p	9	maxY	maxY
		p	11	maxZ	maxZ
	m	(DDD)V	a	setPosition
		p	1	cameraX	cameraX
		p	3	cameraY	cameraY
		p	5	cameraZ	cameraZ
	m	(Lb;Lb;)V	a	init
c	eeu	net/minecraft/client/render/debug/BeeDebugRenderer
	f	Ldlx;	a	client
	f	Ljava/util/Map;	b	hives
	f	Ljava/util/Map;	c	bees
	f	Ljava/util/UUID;	d	targetedEntity
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Lfu;FFFFF)V	a	drawBox
		p	0	pos	pos
		p	1	expand	expand
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
	m	(Lfu;)V	a	drawHive
		p	0	pos	pos
	m	(Leeu$b;Ljava/util/Collection;)V	a	drawHiveInfo
		p	1	hive	hive
		p	2	blacklistingBees	blacklistingBees
	m	(Ljava/lang/String;Lfu;II)V	a	drawString
		p	0	string	string
		p	1	pos	pos
		p	2	line	line
		p	3	color	color
	m	(Ljava/lang/String;Leeu$b;II)V	a	drawString
		p	0	string	string
		p	1	hive	hive
		p	2	line	line
		p	3	color	color
	m	(Lfu;Ljava/util/List;)V	a	drawHiveBees
		p	1	pos	pos
		p	2	bees	bees
	m	(Lgj;ILjava/lang/String;IF)V	a	drawString
		p	0	pos	pos
		p	1	line	line
		p	2	string	string
		p	3	color	color
		p	4	size	size
	m	(Leeu$b;)V	a	addHive
		p	1	hive	hive
	m	(Leeu$a;)V	a	addBee
		p	1	bee	bee
	m	(Leeu$a;Lfu;)Ljava/lang/String;	a	getPositionString
		p	1	bee	bee
		p	2	pos	pos
	m	(Ljava/util/Collection;)Ljava/lang/String;	a	toString
		p	0	bees	bees
	m	(Leeu$a;)V	b	drawPath
		p	1	bee	bee
	m	(Lfu;)Ljava/util/Collection;	b	getBeesForHive
		p	1	hivePos	hivePos
	m	()V	b	removeInvalidBees
	m	()V	c	removeOutdatedHives
	m	(Leeu$a;)V	c	drawBee
		p	1	bee	bee
	m	(Leeu$a;)Z	d	isTargeted
		p	1	bee	bee
	m	()V	d	render
	m	()Ljava/util/Map;	e	getBlacklistingBees
	m	(Leeu$a;)Z	e	isInRange
		p	1	bee	bee
	m	()V	f	drawFlowers
	m	()Ldlj;	g	getCameraPos
	m	()Ljava/util/Map;	h	getBeesByHive
	m	()V	i	updateTargetedEntity
c	eeu$a	net/minecraft/client/render/debug/BeeDebugRenderer$Bee
	f	Ljava/util/UUID;	a	uuid
	f	I	b	entityId
	f	Lgj;	c	position
	f	Lczf;	d	path
	f	Lfu;	e	hive
	f	Lfu;	f	flower
	f	I	g	travelTicks
	f	Ljava/util/List;	h	labels
	f	Ljava/util/Set;	i	blacklist
	m	(Ljava/util/UUID;ILgj;Lczf;Lfu;Lfu;I)V	<init>	<init>
		p	1	uuid	uuid
		p	2	entityId	entityId
		p	3	position	position
		p	4	path	path
		p	5	hive	hive
		p	6	flower	flower
		p	7	travelTicks	travelTicks
	m	(Lfu;)Z	a	isHiveAt
		p	1	pos	pos
	m	()Ljava/util/UUID;	a	getUuid
	m	()Ljava/lang/String;	b	getName
	m	()Z	c	hasFlower
c	eeu$b	net/minecraft/client/render/debug/BeeDebugRenderer$Hive
	f	Lfu;	a	pos
	f	Ljava/lang/String;	b	label
	f	I	c	beeCount
	f	I	d	honeyLevel
	f	Z	e	sedated
	f	J	f	time
	m	(Lfu;Ljava/lang/String;IIZJ)V	<init>	<init>
		p	1	pos	pos
		p	2	label	label
		p	3	beeCount	beeCount
		p	4	honeyLevel	honeyLevel
		p	5	sedated	sedated
		p	6	time	time
c	eev	net/minecraft/client/render/debug/VillageDebugRenderer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldlx;	b	client
	f	Ljava/util/Map;	c	pointsOfInterest
	f	Ljava/util/Map;	d	brains
	f	Ljava/util/UUID;	e	targetedEntity
	m	(Lfu;)V	a	removePointOfInterest
	m	(Leev$a;)V	a	addBrain
		p	1	brain	brain
	m	(Leev$a;DDD)V	a	drawPath
		p	1	brain	brain
		p	2	cameraX	cameraX
		p	4	cameraY	cameraY
		p	6	cameraZ	cameraZ
	m	(Lgj;ILjava/lang/String;IF)V	a	drawString
		p	0	pos	pos
		p	1	offsetY	offsetY
		p	2	string	string
		p	3	color	color
		p	4	size	size
	m	(Leev$b;)V	a	addPointOfInterest
	m	(Lfu;I)V	a	setFreeTicketCount
		p	1	pos	pos
		p	2	freeTicketCount	freeTicketCount
	m	(Lfu;Ljava/util/List;)V	a	drawGhostPointOfInterest
		p	1	pos	pos
		p	2	brains	brains
	m	(Ljava/lang/String;Leev$b;II)V	a	drawString
		p	0	string	string
		p	1	pointOfInterest	pointOfInterest
		p	2	offsetY	offsetY
		p	3	color	color
	m	(Ljava/lang/String;Lfu;II)V	a	drawString
		p	0	string	string
		p	1	pos	pos
		p	2	offsetY	offsetY
		p	3	color	color
	m	(Leev$a;)Z	b	isTargeted
		p	1	brain	brain
	m	(Lfu;)V	b	drawPointOfInterest
		p	0	pos	pos
	m	(Leev$a;DDD)V	b	drawBrain
		p	1	brain	brain
		p	2	cameraX	cameraX
		p	4	cameraY	cameraY
		p	6	cameraZ	cameraZ
	m	(Leev$b;)V	b	drawPointOfInterestInfo
		p	1	pointOfInterest	pointOfInterest
	m	(Lfu;)Ljava/util/Collection;	c	getBrains
		p	1	pointOfInterest	pointOfInterest
	m	(Leev$b;)Ljava/util/Set;	c	getVillagerNames
		p	1	pointOfInterest	pointOfInterest
	m	()Ljava/util/Map;	c	getGhostPointsOfInterest
	m	(Leev$a;)Z	c	isClose
		p	1	brain	brain
	m	()V	d	updateTargetedEntity
c	eev$a	net/minecraft/client/render/debug/VillageDebugRenderer$Brain
	f	Ljava/util/UUID;	a	uuid
	f	Ljava/lang/String;	d	profession
	f	I	e	xp
	f	Lgj;	h	pos
	f	Lczf;	j	path
	f	Z	k	wantsGolem
	f	Ljava/util/Set;	p	pointsOfInterest
	m	(Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;IFFLgj;Ljava/lang/String;Lczf;Z)V	<init>	<init>
		p	4	profession	profession
		p	5	xp	xp
	m	(Lfu;)Z	a	isPointOfInterest
	m	()Ljava/util/UUID;	a	getUuid
c	eev$b	net/minecraft/client/render/debug/VillageDebugRenderer$PointOfInterest
	f	Lfu;	a	pos
	f	I	c	freeTicketCount
c	eew	net/minecraft/client/render/debug/CaveDebugRenderer
c	eex	net/minecraft/client/render/debug/ChunkBorderDebugRenderer
	f	Ldlx;	a	client
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	eey	net/minecraft/client/render/debug/ChunkLoadingDebugRenderer
	f	Ldlx;	a	client
	f	D	b	lastUpdateTime
	f	Leey$a;	d	loadingData
c	eey$a	net/minecraft/client/render/debug/ChunkLoadingDebugRenderer$ChunkLoadingStatus
	f	Ljava/util/Map;	b	clientStates
	f	Ljava/util/concurrent/CompletableFuture;	c	serverStates
c	eez	net/minecraft/client/render/debug/CollisionDebugRenderer
	f	Ldlx;	a	client
	f	D	b	lastUpdateTime
	f	Ljava/util/List;	c	collisions
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	ef	net/minecraft/command/arguments/BlockArgumentParser
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	DISALLOWED_TAG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	INVALID_BLOCK_ID_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	UNKNOWN_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	DUPLICATE_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	INVALID_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	EMPTY_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	UNCLOSED_PROPERTIES_EXCEPTION
	f	Ljava/util/function/BiFunction;	h	SUGGEST_DEFAULT
	f	Lcom/mojang/brigadier/StringReader;	i	reader
	f	Z	j	allowTag
	f	Ljava/util/Map;	k	blockProperties
	f	Ljava/util/Map;	l	tagProperties
	f	Luh;	m	blockId
	f	Lcfk;	n	stateFactory
	f	Lcfj;	o	blockState
	f	Lle;	p	data
	f	Luh;	q	tagId
	f	I	r	cursorPos
	f	Ljava/util/function/BiFunction;	s	suggestions
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1	reader	reader
		p	2	allowTag	allowTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestTagPropertyValues
	m	(Lcfj;)Ljava/lang/String;	a	stringifyBlockState
	m	(Z)Lef;	a	parse
		p	1	allowNbt	allowNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcgl;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	suggestPropertyValues
	m	()Ljava/util/Map;	a	getBlockProperties
	m	(Ladg;)Z	a	hasBlockEntity
	m	(Ljava/lang/StringBuilder;Lcgl;Ljava/lang/Comparable;)V	a	stringifyProperty
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	a	getSuggestions
	m	(Lcgl;Ljava/lang/String;I)V	a	parsePropertyValue
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	b	suggestBlockPropertiesOrEnd
	m	()Lcfj;	b	getBlockState
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	c	suggestTagPropertiesOrEnd
	m	()Lle;	c	getNbtData
	m	()Luh;	d	getTagId
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	d	suggestBlockProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	e	suggestTagProperties
	m	()V	e	parseBlockId
	m	()V	f	parseTagId
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	f	suggestSnbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	g	suggestEqualsCharacter
	m	()V	g	parseBlockProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	h	suggestCommaOrEnd
	m	()V	h	parseTagProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	i	suggestSnbtOrTagProperties
	m	()V	i	parseSnbt
	m	()Ljava/util/Map;	j	getProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	j	suggestSnbtOrBlockProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	k	suggestIdentifiers
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockOrTagId
c	efa	net/minecraft/client/render/debug/DebugRenderer
	f	Lefg;	a	pathfindingDebugRenderer
	f	Lefa$a;	b	waterDebugRenderer
	f	Lefa$a;	c	chunkBorderDebugRenderer
	f	Lefa$a;	d	heightmapDebugRenderer
	f	Lefa$a;	e	collisionDebugRenderer
	f	Lefa$a;	f	neighborUpdateDebugRenderer
	f	Leew;	g	caveDebugRenderer
	f	Lefj;	h	structureDebugRenderer
	f	Lefa$a;	i	skyLightDebugRenderer
	f	Lefa$a;	j	worldGenAttemptDebugRenderer
	f	Lefa$a;	k	blockOutlineDebugRenderer
	f	Lefa$a;	l	chunkLoadingDebugRenderer
	f	Leev;	m	villageDebugRenderer
	f	Lefk;	n	villageSectionsDebugRenderer
	f	Leeu;	o	beeDebugRenderer
	f	Lefh;	p	raidCenterDebugRenderer
	f	Lefc;	q	goalSelectorDebugRenderer
	f	Lefb;	r	gameTestDebugRenderer
	f	Z	s	showChunkBorder
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Ldhl;Lebz$a;DDD)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	(Ljava/lang/String;DDDIFZFZ)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	color	color
		p	8	size	size
		p	9	center	center
		p	10	offset	offset
		p	11	visibleThroughObjects	visibleThroughObjects
	m	(Ljava/lang/String;IIII)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	color	color
	m	(Lfu;FFFFF)V	a	drawBox
		p	0	pos	pos
		p	1	expand	expand
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
	m	(Ldeg;FFFF)V	a	drawBox
		p	0	box	box
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(DDDDDDFFFF)V	a	drawBox
		p	0	minX	minX
		p	2	minY	minY
		p	4	minZ	minZ
		p	6	maxX	maxX
		p	8	maxY	maxY
		p	10	maxZ	maxZ
		p	12	red	red
		p	13	green	green
		p	14	blue	blue
		p	15	alpha	alpha
	m	(Lfu;Lfu;FFFF)V	a	drawBox
		p	0	pos1	pos1
		p	1	pos2	pos2
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
	m	(Ljava/lang/String;DDDI)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	color	color
	m	(Ljava/lang/String;DDDIF)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	color	color
		p	8	size	size
	m	()V	a	reset
	m	(Laom;I)Ljava/util/Optional;	a	getTargetedEntity
		p	0	entity	entity
		p	1	maxDistance	maxDistance
	m	()Z	b	toggleShowChunkBorder
c	efa$a	net/minecraft/client/render/debug/DebugRenderer$Renderer
	m	(Ldhl;Lebz;DDD)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	()V	a	clear
c	efb	net/minecraft/client/render/debug/GameTestDebugRenderer
	f	Ljava/util/Map;	a	markers
	m	(Lfu;ILjava/lang/String;I)V	a	addMarker
		p	1	pos	pos
		p	2	color	color
		p	3	message	message
		p	4	duration	duration
c	efb$a	net/minecraft/client/render/debug/GameTestDebugRenderer$Marker
	f	I	a	color
	f	Ljava/lang/String;	b	message
	f	J	c	removalTime
	m	(ILjava/lang/String;J)V	<init>	<init>
		p	1	color	color
		p	2	message	message
		p	3	removalTime	removalTime
c	efc	net/minecraft/client/render/debug/GoalSelectorDebugRenderer
	f	Ldlx;	a	client
	f	Ljava/util/Map;	b	goalSelectors
	m	(ILjava/util/List;)V	a	setGoalSelectorList
c	efc$a	net/minecraft/client/render/debug/GoalSelectorDebugRenderer$GoalSelector
	f	Lfu;	a	pos
	f	Ljava/lang/String;	c	name
c	efd	net/minecraft/client/render/debug/HeightmapDebugRenderer
	f	Ldlx;	a	client
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	efe	net/minecraft/client/render/debug/SkyLightDebugRenderer
	f	Ldlx;	a	client
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	eff	net/minecraft/client/render/debug/NeighborUpdateDebugRenderer
	f	Ldlx;	a	client
	f	Ljava/util/Map;	b	neighborUpdates
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(JLfu;)V	a	addNeighborUpdate
		p	1	time	time
		p	3	pos	pos
c	efg	net/minecraft/client/render/debug/PathfindingDebugRenderer
	f	Ljava/util/Map;	a	paths
	f	Ljava/util/Map;	c	pathTimes
	m	(Lczf;DDD)V	a	drawPathLines
		p	0	path	path
		p	1	cameraX	cameraX
		p	3	cameraY	cameraY
		p	5	cameraZ	cameraZ
	m	(ILczf;F)V	a	addPath
		p	1	id	id
		p	2	path	path
	m	(Lczf;FZZDDD)V	a	drawPath
		p	0	path	path
		p	1	nodeSize	nodeSize
		p	3	drawLabels	drawLabels
		p	4	cameraX	cameraX
		p	6	cameraY	cameraY
		p	8	cameraZ	cameraZ
	m	(Lfu;DDD)F	a	getManhattanDistance
		p	0	pos	pos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lczf;FZZDDD)V	b	drawPathInternal
		p	0	path	path
		p	1	nodeSize	nodeSize
		p	3	drawLabels	drawLabels
		p	4	cameraX	cameraX
		p	6	cameraY	cameraY
		p	8	cameraZ	cameraZ
c	efh	net/minecraft/client/render/debug/RaidCenterDebugRenderer
	f	Ldlx;	a	client
	f	Ljava/util/Collection;	b	raidCenters
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Ljava/util/Collection;)V	a	setRaidCenters
		p	1	centers	centers
c	efi	net/minecraft/client/render/debug/BlockOutlineDebugRenderer
	f	Ldlx;	a	client
c	efj	net/minecraft/client/render/debug/StructureDebugRenderer
c	efk	net/minecraft/client/render/debug/VillageSectionsDebugRenderer
	f	Ljava/util/Set;	a	sections
	m	(DDD)V	a	drawSections
		p	1	cameraX	cameraX
		p	3	cameraY	cameraY
		p	5	cameraZ	cameraZ
	m	(Lgo;)V	a	addSection
		p	1	pos	pos
	m	(Lgo;)V	b	removeSection
		p	1	pos	pos
	m	(Lgo;)V	c	drawBoxAtCenterOf
		p	0	pos	pos
c	efl	net/minecraft/client/render/debug/WaterDebugRenderer
	f	Ldlx;	a	client
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
c	efm	net/minecraft/client/render/debug/WorldGenAttemptDebugRenderer
c	efo	net/minecraft/client/render/entity/HorseBaseEntityRenderer
	f	F	a	scale
	m	(Legm;Ldwd;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	model	model
		p	3	scale	scale
	m	(Lazm;Ldhl;F)V	a	scale
c	efp	net/minecraft/client/render/entity/ZombieBaseEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Legm;Ldyc;Ldyc;Ldyc;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lbcu;)Luh;	a	getTexture
	m	(Lbcu;)Z	b	isShaking
c	efq	net/minecraft/client/render/entity/AreaEffectCloudEntityRenderer
	m	(Laol;)Luh;	a	getTexture
c	efr	net/minecraft/client/render/entity/ArmorStandEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbay;ZZZ)Lech;	a	getRenderLayer
	m	(Lbay;)Luh;	a	getTexture
	m	(Lbay;Ldhl;FFF)V	a	setupTransforms
	m	(Lbay;)Z	b	hasLabel
c	efs	net/minecraft/client/render/entity/ProjectileEntityRenderer
	m	(Lbeg;FFLdhl;Lebz;I)V	a	render
c	eft	net/minecraft/client/render/entity/BatEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layf;Ldhl;F)V	a	scale
	m	(Layf;Ldhl;FFF)V	a	setupTransforms
	m	(Layf;)Luh;	a	getTexture
c	efu	net/minecraft/client/render/entity/BeeEntityRenderer
	f	Luh;	a	ANGRY_TEXTURE
	f	Luh;	g	ANGRY_NECTAR_TEXTURE
	f	Luh;	h	PASSIVE_TEXTURE
	f	Luh;	i	NECTAR_TEXTURE
	m	(Layl;)Luh;	a	getTexture
c	efv	net/minecraft/client/render/entity/BlazeEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbl;Lfu;)I	a	getBlockLight
	m	(Lbbl;)Luh;	a	getTexture
c	efw	net/minecraft/client/render/entity/BoatEntityRenderer
	f	Ldvg;	a	model
	f	[Luh;	e	TEXTURES
	m	(Lbft;FFLdhl;Lebz;I)V	a	render
	m	(Lbft;)Luh;	a	getTexture
c	efx	net/minecraft/client/render/entity/CatEntityRenderer
	m	(Laym;Ldhl;F)V	a	scale
	m	(Laym;Ldhl;FFF)V	a	setupTransforms
	m	(Laym;)Luh;	a	getTexture
c	efy	net/minecraft/client/render/entity/CaveSpiderEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbm;)Luh;	a	getTexture
	m	(Lbbm;Ldhl;F)V	a	scale
c	efz	net/minecraft/client/render/entity/DonkeyEntityRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Legm;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	scale	scale
	m	(Lazl;)Luh;	a	getTexture
c	ega	net/minecraft/client/render/entity/ChickenEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layn;F)F	a	getAnimationProgress
	m	(Layn;)Luh;	a	getTexture
c	egb	net/minecraft/client/render/entity/CodEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layo;Ldhl;FFF)V	a	setupTransforms
	m	(Layo;)Luh;	a	getTexture
c	egc	net/minecraft/client/render/entity/CowEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layp;)Luh;	a	getTexture
c	egd	net/minecraft/client/render/entity/CreeperEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbn;F)F	a	getAnimationCounter
	m	(Lbbn;Ldhl;F)V	a	scale
	m	(Lbbn;)Luh;	a	getTexture
c	ege	net/minecraft/client/render/entity/DolphinEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layq;)Luh;	a	getTexture
c	egf	net/minecraft/client/render/entity/DragonFireballEntityRenderer
	f	Luh;	a	TEXTURE
	f	Lech;	e	LAYER
	m	(Lbej;Lfu;)I	a	getBlockLight
	m	(Lbej;FFLdhl;Lebz;I)V	a	render
	m	(Lbej;)Luh;	a	getTexture
	m	(Ldhp;Lb;La;IFIII)V	a	produceVertex
		p	0	vertexConsumer	vertexConsumer
		p	1	modelMatrix	modelMatrix
		p	2	normalMatrix	normalMatrix
		p	3	light	light
		p	4	x	x
		p	5	y	y
		p	6	textureU	textureU
		p	7	textureV	textureV
c	egg	net/minecraft/client/render/entity/DrownedEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbp;Ldhl;FFF)V	a	setupTransforms
c	egh	net/minecraft/client/render/entity/ElderGuardianEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbx;Ldhl;F)V	a	scale
	m	(Lbbx;)Luh;	getTexture	getTexture
c	egi	net/minecraft/client/render/entity/EndCrystalEntityRenderer
	f	Luh;	a	TEXTURE
	f	Lech;	e	END_CRYSTAL
	f	F	f	SINE_45_DEGREES
	f	Ldyg;	g	core
	f	Ldyg;	h	frame
	f	Ldyg;	i	bottom
	m	(Lbab;F)F	a	getYOffset
		p	0	crystal	crystal
		p	1	tickDelta	tickDelta
	m	(Lbab;FFLdhl;Lebz;I)V	a	render
	m	(Lbab;Lees;DDD)Z	a	shouldRender
	m	(Lbab;)Luh;	a	getTexture
c	egj	net/minecraft/client/render/entity/EnderDragonEntityRenderer
	f	Luh;	a	CRYSTAL_BEAM_TEXTURE
	f	Luh;	e	EXPLOSION_TEXTURE
	f	Luh;	f	TEXTURE
	f	Luh;	g	EYE_TEXTURE
	f	Lech;	h	DRAGON_CUTOUT
	f	Lech;	i	DRAGON_DECAL
	f	Lech;	j	DRAGON_EYES
	f	Lech;	k	CRYSTAL_BEAM_LAYER
	f	F	l	HALF_SQRT_3
	f	Legj$a;	m	model
	m	(Lbac;FFLdhl;Lebz;I)V	a	render
	m	(FFFFILdhl;Lebz;I)V	a	renderCrystalBeam
		p	0	dx	dx
		p	1	dy	dy
		p	2	dz	dz
		p	3	tickDelta	tickDelta
		p	4	age	age
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
		p	7	light	light
	m	(Ldhp;Lb;FF)V	a	method_23156
		p	0	vertices	vertices
		p	1	matrix	matrix
		p	2	y	y
		p	3	x	x
	m	(Lbac;)Luh;	a	getTexture
	m	(Ldhp;Lb;I)V	a	method_23157
		p	0	vertices	vertices
		p	1	matrix	matrix
		p	2	alpha	alpha
	m	(Ldhp;Lb;FF)V	b	method_23158
		p	0	vertices	vertices
		p	1	matrix	matrix
		p	2	y	y
		p	3	x	x
	m	(Ldhp;Lb;FF)V	c	method_23159
		p	0	vertices	vertices
		p	1	matrix	matrix
		p	2	y	y
		p	3	z	z
c	egj$a	net/minecraft/client/render/entity/EnderDragonEntityRenderer$DragonEntityModel
	f	Lbac;	A	dragon
	f	F	B	tickDelta
	f	Ldyg;	a	head
	f	Ldyg;	b	neck
	f	Ldyg;	f	jaw
	f	Ldyg;	g	body
	f	Ldyg;	h	wing
	f	Ldyg;	t	wingTip
	f	Ldyg;	u	frontLeg
	f	Ldyg;	v	frontLegTip
	f	Ldyg;	w	frontFoot
	f	Ldyg;	x	rearLeg
	f	Ldyg;	y	rearLegTip
	f	Ldyg;	z	rearFoot
	m	(Ldhl;Ldhp;IIFLdyg;Ldyg;Ldyg;Ldyg;Ldyg;Ldyg;Ldyg;)V	a	method_23838
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	light	light
		p	4	overlay	overlay
		p	5	offset	offset
	m	(Lbac;FFF)V	a	animateModel
	m	(Lbac;FFFFF)V	a	setAngles
c	egk	net/minecraft/client/render/entity/EndermanEntityRenderer
	f	Luh;	a	TEXTURE
	f	Ljava/util/Random;	g	random
	m	(Lbbr;F)Ldem;	a	getPositionOffset
	m	(Lbbr;FFLdhl;Lebz;I)V	a	render
	m	(Lbbr;)Luh;	a	getTexture
c	egl	net/minecraft/client/render/entity/EndermiteEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbs;)F	a	getLyingAngle
	m	(Lbbs;)Luh;	b	getTexture
c	egm	net/minecraft/client/render/entity/EntityRenderDispatcher
	f	Lelw;	a	textureManager
	f	Ldlj;	b	camera
	f	Laom;	c	targetedEntity
	f	Ldmb;	d	gameOptions
	f	Lech;	e	SHADOW_LAYER
	f	Ljava/util/Map;	f	renderers
	f	Ljava/util/Map;	g	modelRenderers
	f	Leld;	h	playerRenderer
	f	Ldmt;	i	textRenderer
	f	Lbqb;	j	world
	f	Ld;	k	rotation
	f	Z	l	renderShadows
	f	Z	m	renderHitboxes
	m	(Lelw;Lehh;Laba;Ldmt;Ldmb;)V	<init>	<init>
		p	1	textureManager	textureManager
	m	(Laoq;Legn;)V	a	register
	m	(Laom;DDDFFLdhl;Lebz;I)V	a	render
		p	1	entity	entity
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	yaw	yaw
		p	9	tickDelta	tickDelta
		p	10	matrices	matrices
		p	11	vertexConsumers	vertexConsumers
		p	12	light	light
	m	(Ldhl;Ldhp;Laom;F)V	a	renderHitbox
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	entity	entity
		p	4	tickDelta	tickDelta
	m	(Lbqb;)V	a	setWorld
		p	1	world	world
	m	(DDD)D	a	getSquaredDistanceToCamera
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Z)V	a	setRenderShadows
		p	1	value	value
	m	(Ldhl;Lebz;Laom;FFLbqd;F)V	a	renderShadow
		p	0	matrices	matrices
		p	1	vertexConsumers	vertexConsumers
		p	2	entity	entity
		p	3	opacity	opacity
		p	4	tickDelta	tickDelta
		p	5	world	world
		p	6	radius	radius
	m	(Ldhl$a;Ldhp;Lbqd;Lfu;DDDFF)V	a	renderShadowPart
		p	0	entry	entry
		p	1	vertices	vertices
		p	2	world	world
		p	3	pos	pos
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	radius	radius
		p	11	opacity	opacity
	m	(Ldhl$a;Ldhp;FFFFFF)V	a	drawShadowVertex
		p	0	entry	entry
		p	1	vertices	vertices
		p	2	alpha	alpha
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	u	u
		p	7	v	v
	m	(Laom;Lees;DDD)Z	a	shouldRender
		p	1	entity	entity
		p	2	frustum	frustum
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Laom;F)I	a	getLight
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Ld;)V	a	setRotation
		p	1	rotation	rotation
	m	(Ldhl;Lebz;Laom;)V	a	renderFire
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	entity	entity
	m	(Ldhl$a;Ldhp;FFFFF)V	a	drawFireVertex
		p	0	entry	entry
		p	1	vertices	vertices
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	u	u
		p	6	v	v
	m	(Laom;)Legn;	a	getRenderer
		p	1	entity	entity
	m	(Lehh;Laba;)V	a	registerRenderers
	m	(Lbqb;Ldlj;Laom;)V	a	configure
		p	1	world	world
		p	2	camera	camera
		p	3	target	target
	m	()Z	a	shouldRenderHitboxes
	m	(Ldhl;Ldhp;Laom;FFF)V	a	drawBox
		p	1	matrix	matrix
		p	2	vertices	vertices
		p	3	entity	entity
		p	4	red	red
		p	5	green	green
		p	6	blue	blue
	m	()Ld;	b	getRotation
	m	(Laom;)D	b	getSquaredDistanceToCamera
		p	1	entity	entity
	m	(Z)V	b	setRenderHitboxes
		p	1	value	value
	m	()Ldmt;	c	getTextRenderer
c	egn	net/minecraft/client/render/entity/EntityRenderer
	f	Legm;	b	dispatcher
	f	F	c	shadowRadius
	f	F	d	shadowOpacity
	m	(Legm;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Laom;FFLdhl;Lebz;I)V	a	render
		p	1	entity	entity
		p	2	yaw	yaw
		p	3	tickDelta	tickDelta
		p	4	matrices	matrices
		p	5	vertexConsumers	vertexConsumers
		p	6	light	light
	m	(Laom;F)Ldem;	a	getPositionOffset
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Laom;)Luh;	a	getTexture
		p	1	entity	entity
	m	()Ldmt;	a	getFontRenderer
	m	(Laom;Lees;DDD)Z	a	shouldRender
		p	1	entity	entity
		p	2	frustum	frustum
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Laom;Lfu;)I	a	getBlockLight
	m	(Laom;Lmr;Ldhl;Lebz;I)V	a	renderLabelIfPresent
		p	1	entity	entity
		p	3	matrices	matrices
		p	4	vertexConsumers	vertexConsumers
		p	5	light	light
	m	()Legm;	b	getRenderManager
	m	(Laom;F)I	b	getLight
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Laom;)Z	b	hasLabel
		c	Determines whether the passed entity should render with a nameplate above its head.\n\n<p>Checks for a custom nametag on living entities, and for teams/team visibilities for players.</p>
		p	1	entity	entity
c	ego	net/minecraft/client/render/entity/EvokerFangsEntityRenderer
	f	Luh;	a	TEXTURE
	f	Ldvw;	e	model
	m	(Lbek;FFLdhl;Lebz;I)V	a	render
	m	(Lbek;)Luh;	a	getTexture
c	egp	net/minecraft/client/render/entity/EvokerEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcl;)Luh;	a	getTexture
c	egp$1	net/minecraft/client/render/entity/EvokerEntityRenderer$1
	m	(Ldhl;Lebz;ILbcl;FFFFFF)V	a	render
c	egq	net/minecraft/client/render/entity/ExperienceOrbEntityRenderer
	f	Luh;	a	TEXTURE
	f	Lech;	e	LAYER
	m	(Laos;)Luh;	a	getTexture
	m	(Laos;FFLdhl;Lebz;I)V	a	render
	m	(Laos;Lfu;)I	a	getBlockLight
c	egr	net/minecraft/client/render/entity/FallingBlockEntityRenderer
	m	(Lbbf;FFLdhl;Lebz;I)V	a	render
	m	(Lbbf;)Luh;	a	getTexture
c	egs	net/minecraft/client/render/entity/FireworkEntityRenderer
	f	Lehh;	a	itemRenderer
	m	(Legm;Lehh;)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	itemRenderer	itemRenderer
	m	(Lben;FFLdhl;Lebz;I)V	a	render
	m	(Lben;)Luh;	a	getTexture
c	egt	net/minecraft/client/render/entity/FishingBobberEntityRenderer
	f	Luh;	a	TEXTURE
	f	Lech;	e	LAYER
	m	(Lbeo;)Luh;	a	getTexture
	m	(Lbeo;FFLdhl;Lebz;I)V	a	render
c	egu	net/minecraft/client/render/entity/FoxEntityRenderer
	f	Luh;	a	TEXTURE
	f	Luh;	g	SLEEPING_TEXTURE
	f	Luh;	h	SNOW_TEXTURE
	f	Luh;	i	SLEEPING_SNOW_TEXTURE
	m	(Lays;)Luh;	a	getTexture
	m	(Lays;Ldhl;FFF)V	a	setupTransforms
c	egv	net/minecraft/client/render/entity/GhastEntityRenderer
	f	Luh;	a	TEXTURE
	f	Luh;	g	ANGRY_TEXTURE
	m	(Lbbv;)Luh;	a	getTexture
	m	(Lbbv;Ldhl;F)V	a	scale
c	egw	net/minecraft/client/render/entity/GiantEntityRenderer
	f	Luh;	a	TEXTURE
	f	F	g	scale
	m	(Legm;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lbbw;Ldhl;F)V	a	scale
	m	(Lbbw;)Luh;	a	getTexture
c	egx	net/minecraft/client/render/entity/GuardianEntityRenderer
	f	Luh;	a	TEXTURE
	f	Luh;	g	EXPLOSION_BEAM_TEXTURE
	f	Lech;	h	LAYER
	m	(Legm;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lbbx;Lees;DDD)Z	a	shouldRender
	m	(Lbbx;FFLdhl;Lebz;I)V	a	render
	m	(Laoy;DF)Ldem;	a	fromLerpedPosition
		p	1	entity	entity
		p	2	yOffset	yOffset
		p	4	delta	delta
	m	(Lbbx;)Luh;	a	getTexture
c	egy	net/minecraft/client/render/entity/HoglinEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcx;)Luh;	a	getTexture
	m	(Lbcx;)Z	b	isShaking
c	egz	net/minecraft/client/render/entity/HorseEntityRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Lazo;)Luh;	a	getTexture
c	eh	net/minecraft/command/arguments/BlockPosArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	UNLOADED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	OUT_OF_WORLD_EXCEPTION
	f	Ljava/util/Collection;	c	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfu;	a	getLoadedBlockPos
		p	0	context	context
		p	1	name	name
	m	()Leh;	a	blockPos
	m	(Lcom/mojang/brigadier/StringReader;)Lej;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfu;	b	getBlockPos
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eha	net/minecraft/client/render/entity/BipedEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Legm;Ldwf;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	model	model
	m	(Laoz;)Luh;	a	getTexture
c	ehb	net/minecraft/client/render/entity/HuskEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcu;Ldhl;F)V	a	scale
	m	(Lbcu;)Luh;	getTexture	getTexture
c	ehc	net/minecraft/client/render/entity/IllagerEntityRenderer
	m	(Legm;Ldwg;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	model	model
	m	(Lbbj;Ldhl;F)V	a	scale
c	ehd	net/minecraft/client/render/entity/IllusionerEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbz;FFLdhl;Lebz;I)V	a	render
	m	(Lbbz;)Luh;	a	getTexture
	m	(Lbbz;)Z	b	isVisible
c	ehd$1	net/minecraft/client/render/entity/IllusionerEntityRenderer$1
	m	(Ldhl;Lebz;ILbbz;FFFFFF)V	a	render
c	ehe	net/minecraft/client/render/entity/IronGolemEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layt;Ldhl;FFF)V	a	setupTransforms
	m	(Layt;)Luh;	a	getTexture
c	ehf	net/minecraft/client/render/entity/ItemEntityRenderer
	f	Lehh;	a	itemRenderer
	f	Ljava/util/Random;	e	random
	m	(Legm;Lehh;)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	itemRenderer	itemRenderer
	m	(Lbbg;)Luh;	a	getTexture
	m	(Lbki;)I	a	getRenderedAmount
		p	1	stack	stack
	m	(Lbbg;FFLdhl;Lebz;I)V	a	render
c	ehg	net/minecraft/client/render/entity/ItemFrameEntityRenderer
	f	Lenn;	a	NORMAL_FRAME
	f	Lenn;	e	MAP_FRAME
	f	Ldlx;	f	client
	f	Lehh;	g	itemRenderer
	m	(Legm;Lehh;)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	itemRenderer	itemRenderer
	m	(Lbba;Lmr;Ldhl;Lebz;I)V	a	renderLabelIfPresent
	m	(Lbba;)Luh;	a	getTexture
	m	(Lbba;FFLdhl;Lebz;I)V	a	render
	m	(Lbba;F)Ldem;	a	getPositionOffset
	m	(Lbba;)Z	b	hasLabel
c	ehh	net/minecraft/client/render/item/ItemRenderer
	f	Luh;	a	ENCHANTED_ITEM_GLINT
	f	F	b	zOffset
	f	Ljava/util/Set;	c	WITHOUT_MODELS
	f	Lebw;	d	models
	f	Lelw;	e	textureManager
	f	Ldmr;	f	colorMap
	m	(Lelw;Lenm;Ldmr;)V	<init>	<init>
		p	1	manager	manager
		p	2	bakery	bakery
		p	3	colorMap	colorMap
	m	()Lebw;	a	getModels
	m	(Laoy;Lbki;II)V	a	renderInGuiWithOverrides
		c	Renders an item in a GUI with an attached entity.\n\n<p>The entity is used to calculate model overrides for the item.
		p	1	entity	entity
		p	2	stack	stack
		p	3	x	x
		p	4	y	y
	m	(Ldmt;Lbki;IILjava/lang/String;)V	a	renderGuiItemOverlay
		c	Renders the overlay for items in GUIs, including the damage bar and the item count.
		p	1	renderer	renderer
		p	2	stack	stack
		p	3	x	x
		p	4	y	y
		p	5	countLabel	countLabel
			c	a label for the stack; if null, the stack count is drawn instead
	m	(Ldmt;Lbki;II)V	a	renderGuiItemOverlay
		c	Renders the overlay for items in GUIs, including the damage bar and the item count.
		p	1	renderer	renderer
		p	2	stack	stack
		p	3	x	x
		p	4	y	y
	m	(Ldhl;Ldhp;Ljava/util/List;Lbki;II)V	a	renderBakedItemQuads
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	quads	quads
		p	4	stack	stack
		p	5	light	light
		p	6	overlay	overlay
	m	(Ldhg;IIIIIIII)V	a	renderGuiQuad
		p	1	buffer	buffer
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
		p	9	alpha	alpha
	m	(Lbki;II)V	a	renderGuiItemIcon
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
	m	(Lbki;Lbqb;Laoy;)Lenh;	a	getHeldItemModel
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
	m	(Lbki;Ledf$b;ZLdhl;Lebz;IILenh;)V	a	renderItem
		p	1	stack	stack
		p	2	renderMode	renderMode
		p	3	leftHanded	leftHanded
		p	4	matrices	matrices
		p	5	vertexConsumers	vertexConsumers
		p	6	light	light
		p	7	overlay	overlay
		p	8	model	model
	m	(Lenh;Lbki;IILdhl;Ldhp;)V	a	renderBakedItemModel
		p	1	model	model
		p	2	stack	stack
		p	3	light	light
		p	4	overlay	overlay
		p	5	matrices	matrices
		p	6	vertices	vertices
	m	(Lbki;IILenh;)V	a	renderGuiItemModel
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
		p	4	model	model
	m	(Lbki;Ledf$b;IILdhl;Lebz;)V	a	renderItem
		p	1	stack	stack
		p	2	transformationType	transformationType
		p	3	light	light
		p	4	overlay	overlay
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
	m	(Laoy;Lbki;Ledf$b;ZLdhl;Lebz;Lbqb;II)V	a	renderItem
		p	1	entity	entity
		p	2	item	item
		p	3	renderMode	renderMode
		p	4	leftHanded	leftHanded
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
		p	7	world	world
		p	8	light	light
		p	9	overlay	overlay
	m	(Lebz;Lech;ZZ)Ldhp;	b	getArmorVertexConsumer
		p	0	vertexConsumers	vertexConsumers
		p	1	layer	layer
		p	2	solid	solid
		p	3	glint	glint
	m	(Lbki;II)V	b	renderInGuiWithOverrides
		c	Renders an item in a GUI with the player as the attached entity\nfor calculating model overrides.
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
	m	(Laoy;Lbki;II)V	b	innerRenderInGui
		p	1	entity	entity
		p	2	itemStack	itemStack
		p	3	x	x
		p	4	y	y
	m	(Lbki;II)V	c	renderInGui
		c	Renders an item in a GUI without an attached entity.
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
c	ehi	net/minecraft/client/render/entity/LeashKnotEntityRenderer
	f	Luh;	a	TEXTURE
	f	Ldwj;	e	model
	m	(Lbbb;FFLdhl;Lebz;I)V	a	render
	m	(Lbbb;)Luh;	a	getTexture
c	ehj	net/minecraft/client/render/entity/LightningEntityRenderer
	m	(Laox;)Luh;	a	getTexture
	m	(Laox;FFLdhl;Lebz;I)V	a	render
c	ehk	net/minecraft/client/render/entity/LivingEntityRenderer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldvv;	e	model
	f	Ljava/util/List;	f	features
	m	(Legm;Ldvv;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	model	model
		p	3	shadowRadius	shadowRadius
	m	(Laoy;Ldhl;FFF)V	a	setupTransforms
		p	1	entity	entity
		p	2	matrices	matrices
		p	3	animationProgress	animationProgress
		p	4	bodyYaw	bodyYaw
		p	5	tickDelta	tickDelta
	m	(Laoy;F)F	a	getAnimationProgress
		c	This value is passed to other methods when calculating angles for animation.\nIt's typically just the sum of the entity's age (in ticks) and the passed in tickDelta.
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Lekm;)Z	a	addFeature
		p	1	feature	feature
	m	(Laoy;ZZZ)Lech;	a	getRenderLayer
		c	Gets the render layer appropriate for rendering the passed entity. Returns null if the entity should not be rendered.
		p	1	entity	entity
		p	2	showBody	showBody
		p	3	translucent	translucent
	m	(Laoy;FFLdhl;Lebz;I)V	a	render
	m	(Laoy;Ldhl;F)V	a	scale
		p	1	entity	entity
		p	2	matrices	matrices
		p	3	amount	amount
	m	(Laoy;)Z	a	isShaking
		c	Returns if this entity is shaking in the way a zombie villager,\nzombie, husk, or piglin undergoing conversion shakes.\nhusk, or piglin are undergoing conversion.
		p	1	entity	entity
	m	(Lfz;)F	a	getYaw
		p	0	direction	direction
	m	(Laoy;)Z	b	hasLabel
	m	(Laoy;F)F	b	getAnimationCounter
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Laoy;)F	c	getLyingAngle
		p	1	entity	entity
	m	(Laoy;F)I	c	getOverlay
		c	Returns the packed overlay color for an entity, determined by its death progress and whether it is flashing.
		p	0	entity	entity
		p	1	whiteOverlayProgress	whiteOverlayProgress
	m	(Laoy;F)F	d	getHandSwingProgress
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Laoy;)Z	d	isVisible
		p	1	entity	entity
c	ehl	net/minecraft/client/render/entity/LlamaEntityRenderer
	f	[Luh;	a	TEXTURES
	m	(Lazp;)Luh;	a	getTexture
c	ehm	net/minecraft/client/render/entity/LlamaSpitEntityRenderer
	f	Luh;	a	TEXTURE
	f	Ldwm;	e	model
	m	(Lber;)Luh;	a	getTexture
	m	(Lber;FFLdhl;Lebz;I)V	a	render
c	ehn	net/minecraft/client/render/entity/MagmaCubeEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbca;Ldhl;F)V	a	scale
	m	(Lbca;Lfu;)I	a	getBlockLight
	m	(Lbca;)Luh;	a	getTexture
c	eho	net/minecraft/client/render/entity/MinecartEntityRenderer
	f	Ldvv;	a	model
	f	Luh;	e	TEXTURE
	m	(Lbfr;FFLdhl;Lebz;I)V	a	render
	m	(Lbfr;FLcfj;Ldhl;Lebz;I)V	a	renderBlock
		p	2	delta	delta
		p	3	state	state
	m	(Lbfr;)Luh;	a	getTexture
c	ehp	net/minecraft/client/render/entity/MobEntityRenderer
	m	(Laoz;Lees;DDD)Z	a	shouldRender
	m	(Laoz;FFLdhl;Lebz;I)V	a	render
	m	(Laoz;)Z	b	hasLabel
c	ehq	net/minecraft/client/render/entity/MooshroomEntityRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Layu;)Luh;	a	getTexture
c	ehr	net/minecraft/client/render/entity/OcelotEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layv;)Luh;	a	getTexture
c	ehs	net/minecraft/client/render/entity/PaintingEntityRenderer
	m	(Lbbd;)Luh;	a	getTexture
	m	(Lbbd;FFLdhl;Lebz;I)V	a	render
c	eht	net/minecraft/client/render/entity/PandaEntityRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Layw;)Luh;	a	getTexture
	m	(Layw;Ldhl;FFF)V	a	setupTransforms
c	ehu	net/minecraft/client/render/entity/ParrotEntityRenderer
	f	[Luh;	a	TEXTURES
	m	(Layx;F)F	a	getAnimationProgress
	m	(Layx;)Luh;	a	getTexture
c	ehv	net/minecraft/client/render/entity/PhantomEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcd;)Luh;	a	getTexture
	m	(Lbcd;Ldhl;FFF)V	a	setupTransforms
	m	(Lbcd;Ldhl;F)V	a	scale
c	ehw	net/minecraft/client/render/entity/PigEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layy;)Luh;	a	getTexture
c	ehx	net/minecraft/client/render/entity/PiglinEntityRenderer
	f	Luh;	a	PIGLIN_TEXTURE
	f	Luh;	g	ZOMBIFIED_PIGLIN_TEXTURE
	m	(Legm;Z)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	zombified	zombified
	m	(Z)Ldwv;	a	getPiglinModel
		p	0	zombified	zombified
	m	(Laoz;)Z	c	isShaking
	m	(Laoz;)Luh;	getTexture	getTexture
c	ehy	net/minecraft/client/render/entity/PillagerEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbce;)Luh;	a	getTexture
c	ehz	net/minecraft/client/render/entity/PolarBearEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Layz;Ldhl;F)V	a	scale
	m	(Layz;)Luh;	a	getTexture
c	ei	net/minecraft/command/arguments/ColumnPosArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	()Lei;	a	columnPos
	m	(Lcom/mojang/brigadier/StringReader;)Lej;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lyt;	a	getColumnPos
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eia	net/minecraft/client/render/entity/PufferfishEntityRenderer
	f	Luh;	a	TEXTURE
	f	I	g	modelSize
	f	Ldxa;	h	smallModel
	f	Ldwz;	i	mediumModel
	f	Ldwy;	j	largeModel
	m	(Laza;Ldhl;FFF)V	a	setupTransforms
	m	(Laza;FFLdhl;Lebz;I)V	a	render
	m	(Laza;)Luh;	a	getTexture
c	eib	net/minecraft/client/render/entity/RabbitEntityRenderer
	f	Luh;	a	BROWN_TEXTURE
	f	Luh;	g	WHITE_TEXTURE
	f	Luh;	h	BLACK_TEXTURE
	f	Luh;	i	GOLD_TEXTURE
	f	Luh;	j	SALT_TEXTURE
	f	Luh;	k	WHITE_SPOTTED_TEXTURE
	f	Luh;	l	TOAST_TEXTURE
	f	Luh;	m	CAERBANNOG_TEXTURE
	m	(Lazb;)Luh;	a	getTexture
c	eic	net/minecraft/client/render/entity/RavagerEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcg;)Luh;	a	getTexture
c	eid	net/minecraft/client/render/entity/feature/FeatureRendererContext
	m	(Laom;)Luh;	a	getTexture
		p	1	entity	entity
	m	()Ldvv;	c	getModel
c	eie	net/minecraft/client/render/entity/SalmonEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lazc;)Luh;	a	getTexture
	m	(Lazc;Ldhl;FFF)V	a	setupTransforms
c	eif	net/minecraft/client/render/entity/SheepEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lazd;)Luh;	a	getTexture
c	eig	net/minecraft/client/render/entity/ShulkerBulletEntityRenderer
	f	Luh;	a	TEXTURE
	f	Lech;	e	LAYER
	f	Ldxi;	f	model
	m	(Lbeu;Lfu;)I	a	getBlockLight
	m	(Lbeu;)Luh;	a	getTexture
	m	(Lbeu;FFLdhl;Lebz;I)V	a	render
c	eih	net/minecraft/client/render/entity/ShulkerEntityRenderer
	f	Luh;	a	TEXTURE
	f	[Luh;	g	COLORED_TEXTURES
	m	(Lbch;Lees;DDD)Z	a	shouldRender
	m	(Lbch;F)Ldem;	a	getPositionOffset
	m	(Lbch;)Luh;	a	getTexture
	m	(Lbch;Ldhl;FFF)V	a	setupTransforms
c	eii	net/minecraft/client/render/entity/SilverfishEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbci;)F	a	getLyingAngle
	m	(Lbci;)Luh;	b	getTexture
c	eij	net/minecraft/client/render/entity/SkeletonEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbk;)Luh;	a	getTexture
c	eik	net/minecraft/client/render/entity/SlimeEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbck;Ldhl;F)V	a	scale
	m	(Lbck;FFLdhl;Lebz;I)V	a	render
	m	(Lbck;)Luh;	a	getTexture
c	eil	net/minecraft/client/render/entity/SnowGolemEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lazf;)Luh;	a	getTexture
c	eim	net/minecraft/client/render/entity/SpectralArrowEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbex;)Luh;	a	getTexture
c	ein	net/minecraft/client/render/entity/SpiderEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcm;)Luh;	a	getTexture
	m	(Lbcm;)F	b	getLyingAngle
c	eio	net/minecraft/client/render/entity/SquidEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lazg;Ldhl;FFF)V	a	setupTransforms
	m	(Lazg;)Luh;	a	getTexture
	m	(Lazg;F)F	a	getAnimationProgress
c	eip	net/minecraft/client/render/entity/StrayEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbk;)Luh;	getTexture	getTexture
c	eiq	net/minecraft/client/render/entity/StriderEntityRenderer
	f	Luh;	a	TEXTURE
	f	Luh;	g	COLD_TEXTURE
	m	(Lbco;Ldhl;F)V	a	scale
	m	(Lbco;)Luh;	a	getTexture
	m	(Lbco;)Z	b	isShaking
c	eir	net/minecraft/client/render/entity/FlyingItemEntityRenderer
	f	Lehh;	a	itemRenderer
	f	F	e	scale
	f	Z	f	lit
	m	(Legm;Lehh;FZ)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	itemRenderer	itemRenderer
		p	3	scale	scale
		p	4	lit	lit
	m	(Legm;Lehh;)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	itemRenderer	itemRenderer
c	eis	net/minecraft/client/render/entity/TridentEntityRenderer
	f	Luh;	a	TEXTURE
	f	Ldxs;	e	model
	m	(Lbfe;)Luh;	a	getTexture
	m	(Lbfe;FFLdhl;Lebz;I)V	a	render
c	eit	net/minecraft/client/render/entity/ArrowEntityRenderer
	f	Luh;	a	TEXTURE
	f	Luh;	e	TIPPED_TEXTURE
	m	(Lbei;)Luh;	a	getTexture
c	eiu	net/minecraft/client/render/entity/TntMinecartEntityRenderer
	m	(Lbgb;FLcfj;Ldhl;Lebz;I)V	a	renderBlock
c	eiv	net/minecraft/client/render/entity/TntEntityRenderer
	m	(Lbbh;)Luh;	a	getTexture
	m	(Lbbh;FFLdhl;Lebz;I)V	a	render
c	eiw	net/minecraft/client/render/entity/TropicalFishEntityRenderer
	f	Ldxt;	a	smallModel
	f	Ldxu;	g	largeModel
	m	(Lazh;Ldhl;FFF)V	a	setupTransforms
	m	(Lazh;)Luh;	a	getTexture
	m	(Lazh;FFLdhl;Lebz;I)V	a	render
c	eix	net/minecraft/client/render/entity/TurtleEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lazi;FFLdhl;Lebz;I)V	a	render
	m	(Lazi;)Luh;	a	getTexture
c	eiy	net/minecraft/client/render/entity/ZombieHorseEntityRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Lazm;)Luh;	a	getTexture
c	eiz	net/minecraft/client/render/entity/VexEntityRenderer
	f	Luh;	a	TEXTURE
	f	Luh;	g	CHARGING_TEXTURE
	m	(Lbcp;)Luh;	a	getTexture
	m	(Lbcp;Lfu;)I	a	getBlockLight
	m	(Lbcp;Ldhl;F)V	a	scale
c	ej	net/minecraft/command/arguments/PosArgument
	m	()Z	a	isXRelative
	m	(Lcz;)Ldem;	a	toAbsolutePos
		p	1	source	source
	m	()Z	b	isYRelative
	m	(Lcz;)Ldel;	b	toAbsoluteRotation
		p	1	source	source
	m	(Lcz;)Lfu;	c	toAbsoluteBlockPos
		p	1	source	source
	m	()Z	c	isZRelative
c	eja	net/minecraft/client/render/entity/VillagerEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Legm;Laba;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lbdp;Ldhl;F)V	a	scale
	m	(Lbdp;)Luh;	a	getTexture
c	ejb	net/minecraft/client/render/entity/VindicatorEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcq;)Luh;	a	getTexture
c	ejb$1	net/minecraft/client/render/entity/VindicatorEntityRenderer$1
	m	(Ldhl;Lebz;ILbcq;FFFFFF)V	a	render
c	ejc	net/minecraft/client/render/entity/WanderingTraderEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbdv;)Luh;	a	getTexture
	m	(Lbdv;Ldhl;F)V	a	scale
c	ejd	net/minecraft/client/render/entity/WitchEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbcr;Ldhl;F)V	a	scale
	m	(Lbcr;FFLdhl;Lebz;I)V	a	render
	m	(Lbcr;)Luh;	a	getTexture
c	eje	net/minecraft/client/render/entity/WitherEntityRenderer
	f	Luh;	a	INVULNERABLE_TEXTURE
	f	Luh;	g	TEXTURE
	m	(Lbaw;Lfu;)I	a	getBlockLight
	m	(Lbaw;)Luh;	a	getTexture
	m	(Lbaw;Ldhl;F)V	a	scale
c	ejf	net/minecraft/client/render/entity/WitherSkeletonEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbbk;Ldhl;F)V	a	scale
	m	(Lbbk;)Luh;	getTexture	getTexture
c	ejg	net/minecraft/client/render/entity/WitherSkullEntityRenderer
	f	Luh;	a	INVULNERABLE_TEXTURE
	f	Luh;	e	TEXTURE
	f	Ldxm;	f	model
	m	(Lbff;Lfu;)I	a	getBlockLight
	m	(Lbff;)Luh;	a	getTexture
	m	(Lbff;FFLdhl;Lebz;I)V	a	render
c	ejh	net/minecraft/client/render/entity/WolfEntityRenderer
	f	Luh;	a	WILD_TEXTURE
	f	Luh;	g	TAMED_TEXTURE
	f	Luh;	h	ANGRY_TEXTURE
	m	(Lazk;)Luh;	a	getTexture
	m	(Lazk;FFLdhl;Lebz;I)V	a	render
	m	(Lazk;F)F	a	getAnimationProgress
c	eji	net/minecraft/client/render/entity/ZoglinEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Lbct;)Luh;	a	getTexture
c	ejj	net/minecraft/client/render/entity/ZombieEntityRenderer
c	ejk	net/minecraft/client/render/entity/ZombieVillagerEntityRenderer
	f	Luh;	a	TEXTURE
	m	(Legm;Laba;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lbcv;)Luh;	a	getTexture
	m	(Lbcv;)Z	b	isShaking
c	ejl	net/minecraft/client/render/entity/feature/StuckArrowsFeatureRenderer
	f	Legm;	a	dispatcher
	f	Lbei;	b	arrow
c	ejm	net/minecraft/client/render/entity/feature/StuckStingersFeatureRenderer
	f	Luh;	a	TEXTURE
	m	(Ldhp;Lb;La;FIFFI)V	a	produceVertex
		p	0	vertexConsumer	vertexConsumer
		p	1	vertexTransform	vertexTransform
		p	2	normalTransform	normalTransform
		p	3	x	x
		p	4	y	y
		p	5	u	u
		p	6	v	v
		p	7	light	light
c	ejn	net/minecraft/client/render/entity/feature/CapeFeatureRenderer
	m	(Ldhl;Lebz;ILebc;FFFFFF)V	a	render
c	ejo	net/minecraft/client/render/entity/feature/EndermanBlockFeatureRenderer
	m	(Ldhl;Lebz;ILbbr;FFFFFF)V	a	render
c	ejp	net/minecraft/client/render/entity/feature/CatCollarFeatureRenderer
	f	Luh;	a	SKIN
	f	Ldvi;	b	model
	m	(Ldhl;Lebz;ILaym;FFFFFF)V	a	render
c	ejq	net/minecraft/client/render/entity/feature/CreeperChargeFeatureRenderer
	f	Luh;	a	SKIN
	f	Ldvp;	b	model
c	ejr	net/minecraft/client/render/entity/feature/VillagerHeldItemFeatureRenderer
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	ejs	net/minecraft/client/render/entity/feature/HeadFeatureRenderer
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	ejt	net/minecraft/client/render/entity/feature/Deadmau5FeatureRenderer
	m	(Ldhl;Lebz;ILebc;FFFFFF)V	a	render
c	eju	net/minecraft/client/render/entity/feature/DolphinHeldItemFeatureRenderer
	m	(Ldhl;Lebz;ILayq;FFFFFF)V	a	render
c	ejv	net/minecraft/client/render/entity/feature/DrownedOverlayFeatureRenderer
	f	Luh;	a	SKIN
	f	Ldvr;	b	model
	m	(Ldhl;Lebz;ILbbp;FFFFFF)V	a	render
c	ejw	net/minecraft/client/render/entity/feature/ElytraFeatureRenderer
	f	Luh;	a	SKIN
	f	Ldvs;	b	elytra
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	ejx	net/minecraft/client/render/entity/feature/EndermanEyesFeatureRenderer
	f	Lech;	a	SKIN
c	ejy	net/minecraft/client/render/entity/feature/EnergySwirlOverlayFeatureRenderer
	m	(F)F	a	getEnergySwirlX
		p	1	partialAge	partialAge
	m	()Luh;	a	getEnergySwirlTexture
	m	()Ldvv;	b	getEnergySwirlModel
c	ejz	net/minecraft/client/render/entity/feature/EyesFeatureRenderer
	m	()Lech;	a	getEyesTexture
c	ek	net/minecraft/command/arguments/LookingPosArgument
	f	D	a	x
	f	D	b	y
	f	D	c	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcom/mojang/brigadier/StringReader;)Lek;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readCoordinate
		p	0	reader	reader
		p	1	startingCursorPos	startingCursorPos
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	eka	net/minecraft/client/render/entity/feature/FoxHeldItemFeatureRenderer
	m	(Ldhl;Lebz;ILays;FFFFFF)V	a	render
c	ekb	net/minecraft/client/render/entity/feature/HorseArmorFeatureRenderer
	f	Ldwd;	a	model
	m	(Ldhl;Lebz;ILazo;FFFFFF)V	a	render
c	ekc	net/minecraft/client/render/entity/feature/HorseMarkingFeatureRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Ldhl;Lebz;ILazo;FFFFFF)V	a	render
c	ekd	net/minecraft/client/render/entity/feature/ArmorFeatureRenderer
	f	Ljava/util/Map;	a	ARMOR_TEXTURE_CACHE
	f	Ldwf;	b	leggingsModel
	f	Ldwf;	c	bodyModel
	m	(Leid;Ldwf;Ldwf;)V	<init>	<init>
		p	1	context	context
		p	2	leggingsModel	leggingsModel
		p	3	bodyModel	bodyModel
	m	(Laor;)Ldwf;	a	getArmor
		p	1	slot	slot
	m	(Ldhl;Lebz;ILbid;ZLdwf;ZFFFLjava/lang/String;)V	a	renderArmorParts
	m	(Ldhl;Lebz;Laoy;Laor;ILdwf;)V	a	renderArmor
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
	m	(Lbid;ZLjava/lang/String;)Luh;	a	getArmorTexture
	m	(Ldwf;Laor;)V	a	setVisible
		p	1	bipedModel	bipedModel
		p	2	slot	slot
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
	m	(Laor;)Z	b	usesSecondLayer
		p	1	slot	slot
c	eke	net/minecraft/client/render/entity/feature/IronGolemCrackFeatureRenderer
	f	Ljava/util/Map;	a	DAMAGE_TO_TEXTURE
	m	(Ldhl;Lebz;ILayt;FFFFFF)V	a	render
c	ekf	net/minecraft/client/render/entity/feature/IronGolemFlowerFeatureRenderer
	m	(Ldhl;Lebz;ILayt;FFFFFF)V	a	render
c	ekg	net/minecraft/client/render/entity/feature/HeldItemFeatureRenderer
	m	(Laoy;Lbki;Ledf$b;Laou;Ldhl;Lebz;I)V	a	renderItem
		p	1	entity	entity
		p	2	stack	stack
		p	3	transformationMode	transformationMode
		p	4	arm	arm
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
		p	7	light	light
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	ekh	net/minecraft/client/render/entity/feature/LlamaDecorFeatureRenderer
	f	[Luh;	a	LLAMA_DECOR
	f	Luh;	b	TRADER_LLAMA_DECOR
	f	Ldwl;	c	model
	m	(Ldhl;Lebz;ILazp;FFFFFF)V	a	render
c	eki	net/minecraft/client/render/entity/feature/MooshroomMushroomFeatureRenderer
	m	(Ldhl;Lebz;ILayu;FFFFFF)V	a	render
c	ekj	net/minecraft/client/render/entity/feature/PandaHeldItemFeatureRenderer
	m	(Ldhl;Lebz;ILayw;FFFFFF)V	a	render
c	ekk	net/minecraft/client/render/entity/feature/ShoulderParrotFeatureRenderer
	f	Ldws;	a	model
	m	(Ldhl;Lebz;ILbec;FFFFZ)V	a	renderShoulderParrot
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	player	player
		p	5	limbAngle	limbAngle
		p	6	limbDistance	limbDistance
		p	7	headYaw	headYaw
		p	8	headPitch	headPitch
		p	9	leftShoulder	leftShoulder
	m	(Ldhl;Lebz;ILbec;FFFFFF)V	a	render
c	ekl	net/minecraft/client/render/entity/feature/PhantomEyesFeatureRenderer
	f	Lech;	a	SKIN
c	ekm	net/minecraft/client/render/entity/feature/FeatureRenderer
	f	Leid;	a	context
	m	(Leid;)V	<init>	<init>
		p	1	context	context
	m	(Ldvv;Luh;Ldhl;Lebz;ILaoy;FFF)V	a	renderModel
		p	0	model	model
		p	1	texture	texture
		p	2	matrices	matrices
		p	3	vertexConsumers	vertexConsumers
		p	4	light	light
		p	5	entity	entity
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
	m	(Laom;)Luh;	a	getTexture
		p	1	entity	entity
	m	(Ldhl;Lebz;ILaom;FFFFFF)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	entity	entity
		p	5	limbAngle	limbAngle
		p	6	limbDistance	limbDistance
		p	7	tickDelta	tickDelta
		p	8	animationProgress	animationProgress
		p	9	headYaw	headYaw
		p	10	headPitch	headPitch
	m	(Ldvv;Ldvv;Luh;Ldhl;Lebz;ILaoy;FFFFFFFFF)V	a	render
		p	0	contextModel	contextModel
		p	1	model	model
		p	2	texture	texture
		p	3	matrices	matrices
		p	4	vertexConsumers	vertexConsumers
		p	5	light	light
		p	6	entity	entity
		p	7	limbAngle	limbAngle
		p	8	limbDistance	limbDistance
		p	9	age	age
		p	10	headYaw	headYaw
		p	11	headPitch	headPitch
		p	12	tickDelta	tickDelta
		p	13	red	red
		p	14	green	green
		p	15	blue	blue
	m	()Ldvv;	aB_	getContextModel
c	ekn	net/minecraft/client/render/entity/feature/SaddleFeatureRenderer
	f	Luh;	a	TEXTURE
	f	Ldvv;	b	model
	m	(Leid;Ldvv;Luh;)V	<init>	<init>
		p	1	context	context
		p	2	model	model
		p	3	texture	texture
c	eko	net/minecraft/client/render/entity/feature/SheepWoolFeatureRenderer
	f	Luh;	a	SKIN
	f	Ldxf;	b	model
	m	(Ldhl;Lebz;ILazd;FFFFFF)V	a	render
c	ekp	net/minecraft/client/render/entity/feature/ShulkerHeadFeatureRenderer
	m	(Ldhl;Lebz;ILbch;FFFFFF)V	a	render
c	ekq	net/minecraft/client/render/entity/feature/SlimeOverlayFeatureRenderer
	f	Ldvv;	a	model
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	ekr	net/minecraft/client/render/entity/feature/SnowmanPumpkinFeatureRenderer
	m	(Ldhl;Lebz;ILazf;FFFFFF)V	a	render
c	eks	net/minecraft/client/render/entity/feature/SpiderEyesFeatureRenderer
	f	Lech;	a	SKIN
c	ekt	net/minecraft/client/render/entity/feature/TridentRiptideFeatureRenderer
	f	Luh;	a	TEXTURE
	f	Ldyg;	b	aura
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	eku	net/minecraft/client/render/entity/feature/StrayOverlayFeatureRenderer
	f	Luh;	a	SKIN
	f	Ldxl;	b	model
	m	(Ldhl;Lebz;ILaoz;FFFFFF)V	a	render
c	ekv	net/minecraft/client/render/entity/feature/StuckObjectsFeatureRenderer
	m	(Lehk;)V	<init>	<init>
		p	1	entityRenderer	entityRenderer
	m	(Laoy;)I	a	getObjectCount
		p	1	entity	entity
	m	(Ldhl;Lebz;ILaom;FFFF)V	a	renderObject
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	entity	entity
		p	5	directionX	directionX
		p	6	directionY	directionY
		p	7	directionZ	directionZ
		p	8	tickDelta	tickDelta
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	ekw	net/minecraft/client/render/entity/feature/TropicalFishColorFeatureRenderer
	f	Ldxt;	a	smallModel
	f	Ldxu;	b	largeModel
	m	(Ldhl;Lebz;ILazh;FFFFFF)V	a	render
c	ekx	net/minecraft/client/render/entity/feature/VillagerClothingFeatureRenderer
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	LEVEL_TO_ID
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	b	villagerTypeToHat
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	c	professionToHat
	f	Laba;	d	resourceManager
	f	Ljava/lang/String;	e	entityType
	m	(Leid;Laba;Ljava/lang/String;)V	<init>	<init>
		p	1	context	context
		p	2	resourceManager	resourceManager
		p	3	entityType	entityType
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lfy;Ljava/lang/Object;)Lemx$a;	a	getHatType
		p	1	hatLookUp	hatLookUp
		p	2	keyType	keyType
		p	3	registry	registry
		p	4	key	key
	m	(Ljava/lang/String;Luh;)Luh;	a	findTexture
		p	1	keyType	keyType
		p	2	keyId	keyId
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	a	render
c	eky	net/minecraft/client/render/entity/feature/WitchHeldItemFeatureRenderer
	m	(Ldhl;Lebz;ILaoy;FFFFFF)V	render	render
c	ekz	net/minecraft/client/render/entity/feature/WitherArmorFeatureRenderer
	f	Luh;	a	SKIN
	f	Ldya;	b	model
c	el	net/minecraft/command/arguments/RotationArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_ROTATION_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lej;	a	getRotation
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lej;	a	parse
	m	()Lel;	a	rotation
c	ela	net/minecraft/client/render/entity/feature/WolfCollarFeatureRenderer
	f	Luh;	a	SKIN
	m	(Ldhl;Lebz;ILazk;FFFFFF)V	a	render
c	eld	net/minecraft/client/render/entity/PlayerEntityRenderer
	m	(Legm;Z)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Ldhl;Lebz;ILebc;Ldyg;Ldyg;)V	a	renderArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	player	player
		p	5	arm	arm
		p	6	sleeve	sleeve
	m	(Lebc;Lanf;)Ldwf$a;	a	getArmPose
	m	(Lebc;Lmr;Ldhl;Lebz;I)V	a	renderLabelIfPresent
	m	(Lebc;FFLdhl;Lebz;I)V	a	render
	m	(Lebc;)Luh;	a	getTexture
	m	(Ldhl;Lebz;ILebc;)V	a	renderRightArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	player	player
	m	(Lebc;Ldhl;FFF)V	a	setupTransforms
	m	(Lebc;F)Ldem;	a	getPositionOffset
	m	(Lebc;Ldhl;F)V	a	scale
	m	(Lebc;)V	b	setModelPose
	m	(Ldhl;Lebz;ILebc;)V	b	renderLeftArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	player	player
c	elf	net/minecraft/client/item/ModelPredicateProviderRegistry
	f	Ljava/util/Map;	a	GLOBAL
	f	Luh;	b	DAMAGED_ID
	f	Luh;	c	DAMAGE_ID
	f	Lelg;	d	DAMAGED_PROVIDER
	f	Lelg;	e	DAMAGE_PROVIDER
	f	Ljava/util/Map;	f	ITEM_SPECIFIC
	m	(Lbke;Luh;Lelg;)V	a	register
		p	0	item	item
		p	1	id	id
		p	2	provider	provider
	m	(Luh;Lelg;)Lelg;	a	register
		p	0	id	id
		p	1	provider	provider
	m	(Lbke;Luh;)Lelg;	a	get
		p	0	item	item
		p	1	id	id
c	elf$1	net/minecraft/client/item/ModelPredicateProviderRegistry$1
	f	D	a	time
	f	D	b	step
	f	J	c	lastTick
	m	(Lbqb;D)D	a	getTime
		p	1	world	world
		p	2	skyAngle	skyAngle
c	elf$2	net/minecraft/client/item/ModelPredicateProviderRegistry$2
	f	Lelf$a;	a	value
	f	Lelf$a;	b	speed
	m	(Ldem;Laom;)D	a	getAngleToPos
		p	1	pos	pos
		p	2	entity	entity
	m	(Ldym;)Lfu;	a	getSpawnPos
		p	1	world	world
	m	(Lbqb;Lle;)Lfu;	a	getLodestonePos
		p	1	world	world
		p	2	tag	tag
	m	(Lbba;)D	a	getItemFrameAngleOffset
		p	1	itemFrame	itemFrame
c	elf$a	net/minecraft/client/item/ModelPredicateProviderRegistry$AngleRandomizer
	f	D	a	value
	f	D	b	speed
	f	J	c	lastUpdateTime
	m	(JD)V	a	update
		p	1	time	time
	m	(J)Z	a	shouldUpdate
		p	1	time	time
c	elg	net/minecraft/client/item/ModelPredicateProvider
	m	(Lbki;Ldym;Laoy;)F	call	call
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
c	elj	net/minecraft/client/texture/AbstractTexture
	f	I	a	glId
	f	Z	b	bilinear
	f	Z	c	mipmap
	m	(Labc;)V	a	load
		p	1	manager	manager
	m	(ZZ)V	a	setFilter
		p	1	bilinear	bilinear
		p	2	mipmap	mipmap
	m	(Lelw;Labc;Luh;Ljava/util/concurrent/Executor;)V	a	registerTexture
	m	()I	b	getGlId
	m	()V	c	clearGlId
	m	()V	d	bindTexture
c	elk	net/minecraft/client/render/model/SpriteAtlasManager
	f	Ljava/util/Map;	a	atlases
	m	(Lenk;)Lelv;	a	getSprite
		p	1	id	id
	m	(Luh;)Lelu;	a	getAtlas
		p	1	id	id
c	ell	net/minecraft/client/texture/NativeImageBackedTexture
	f	Ldgs;	d	image
	m	(IIZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	useStb	useStb
	m	(Ldgs;)V	<init>	<init>
		p	1	image	image
	m	(Ldgs;)V	a	setImage
		p	1	image	image
	m	()V	a	upload
	m	()Ldgs;	e	getImage
c	elm	net/minecraft/client/texture/PlayerSkinTexture
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	f	Ljava/io/File;	f	cacheFile
	f	Ljava/lang/String;	g	url
	f	Z	h	convertLegacy
	f	Ljava/lang/Runnable;	i	loadedCallback
	f	Ljava/util/concurrent/CompletableFuture;	j	loader
	f	Z	k	loaded
	m	(Ljava/io/File;Ljava/lang/String;Luh;ZLjava/lang/Runnable;)V	<init>	<init>
		p	1	cacheFile	cacheFile
		p	2	url	url
		p	3	fallbackSkin	fallbackSkin
		p	4	convertLegacy	convertLegacy
		p	5	callback	callback
	m	(Ldgs;)V	a	onTextureLoaded
		p	1	image	image
	m	(Ldgs;IIII)V	a	stripColor
		p	0	image	image
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Ljava/io/InputStream;)Ldgs;	a	loadTexture
		p	1	stream	stream
	m	(Ldgs;IIII)V	b	stripAlpha
		p	0	image	image
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Ldgs;)V	b	uploadTexture
		p	1	image	image
	m	(Ldgs;)Ldgs;	c	remapTexture
		p	0	image	image
c	eln	net/minecraft/client/texture/MipmapHelper
	f	[F	a	COLOR_FRACTIONS
	m	(IIIII)I	a	getColorComponent
		p	0	one	one
		p	1	two	two
		p	2	three	three
		p	3	four	four
		p	4	bits	bits
	m	(I)F	a	getColorFraction
		p	0	value	value
	m	(IIIIZ)I	a	blend
		p	0	one	one
		p	1	two	two
		p	2	three	three
		p	3	four	four
		p	4	checkAlpha	checkAlpha
	m	(Ldgs;I)[Ldgs;	a	getMipmapLevelsImages
		p	0	image	image
		p	1	mipmap	mipmap
c	elo	net/minecraft/client/texture/MissingSprite
	f	Luh;	b	MISSINGNO
	f	Lell;	c	texture
	f	Lady;	d	IMAGE
	f	Lelv$a;	e	INFO
	m	(Lelu;IIIII)V	<init>	<init>
		p	2	maxLevel	maxLevel
		p	3	atlasWidth	atlasWidth
		p	4	atlasHeight	atlasHeight
		p	5	x	x
		p	6	y	y
	m	(Lelu;IIIII)Lelo;	a	getMissingSprite
		p	1	maxLevel	maxLevel
		p	2	atlasWidth	atlasWidth
		p	3	atlasHeight	atlasHeight
		p	4	x	x
		p	5	y	y
	m	()Luh;	a	getMissingSpriteId
	m	()Lelv$a;	b	getMissingInfo
	m	()Lell;	c	getMissingSpriteTexture
c	elp	net/minecraft/client/render/OverlayTexture
	f	I	a	DEFAULT_UV
	f	Lell;	b	texture
	m	(Z)I	a	getV
		p	0	hurt	hurt
	m	(FZ)I	a	getUv
		p	1	hurt	hurt
	m	(II)I	a	packUv
		p	0	u	u
		p	1	v	v
	m	()V	a	setupOverlayColor
	m	(F)I	a	getU
		p	0	whiteOverlayProgress	whiteOverlayProgress
	m	()V	b	teardownOverlayColor
c	elq	net/minecraft/client/texture/AsyncTexture
	f	Ljava/util/concurrent/CompletableFuture;	e	future
	m	()Ljava/util/concurrent/CompletableFuture;	a	getLoadCompleteFuture
c	elr	net/minecraft/client/texture/ResourceTexture
	f	Luh;	d	location
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	m	(Luh;)V	<init>	<init>
		p	1	location	location
	m	(Ldgs;ZZ)V	a	upload
		p	2	blur	blur
		p	3	clamp	clamp
	m	(Labc;)Lelr$a;	b	loadTextureData
		p	1	resourceManager	resourceManager
c	elr$a	net/minecraft/client/texture/ResourceTexture$TextureData
	f	Lene;	a	metadata
	f	Ldgs;	b	image
	f	Ljava/io/IOException;	c	exception
	m	(Lene;Ldgs;)V	<init>	<init>
		p	1	metadata	metadata
		p	2	image	image
	m	(Ljava/io/IOException;)V	<init>	<init>
		p	1	exception	exception
	m	()Lene;	a	getMetadata
	m	(Labc;Luh;)Lelr$a;	a	load
	m	()Ldgs;	b	getImage
	m	()V	c	checkException
c	els	net/minecraft/client/texture/TextureStitcher
	f	Ljava/util/Comparator;	a	comparator
	f	I	b	mipLevel
	f	Ljava/util/Set;	c	holders
	f	Ljava/util/List;	d	slots
	f	I	e	width
	f	I	f	height
	f	I	g	maxWidth
	f	I	h	maxHeight
	m	(III)V	<init>	<init>
		p	1	maxWidth	maxWidth
		p	2	maxHeight	maxHeight
		p	3	mipLevel	mipLevel
	m	()I	a	getWidth
	m	(Lels$c;)V	a	getStitchedSprites
	m	(Lelv$a;)V	a	add
		p	1	info	info
	m	(Lels$a;)Z	a	fit
	m	()I	b	getHeight
	m	(II)I	b	applyMipLevel
		p	0	size	size
		p	1	mipLevel	mipLevel
	m	(Lels$a;)Z	b	growAndFit
	m	()V	c	stitch
c	els$a	net/minecraft/client/texture/TextureStitcher$Holder
	f	Lelv$a;	a	sprite
	f	I	b	width
	f	I	c	height
	m	(Lelv$a;I)V	<init>	<init>
		p	1	sprite	sprite
		p	2	mipLevel	mipLevel
c	els$b	net/minecraft/client/texture/TextureStitcher$Slot
	f	I	a	x
	f	I	b	y
	f	I	c	width
	f	I	d	height
	f	Ljava/util/List;	e	subSlots
	f	Lels$a;	f	texture
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Ljava/util/function/Consumer;)V	a	addAllFilledSlots
	m	(Lels$a;)Z	a	fit
	m	()Lels$a;	a	getTexture
	m	()I	b	getX
	m	()I	c	getY
c	els$c	net/minecraft/client/texture/TextureStitcher$SpriteConsumer
	m	(Lelv$a;IIII)V	load	load
		p	2	width	width
		p	3	height	height
		p	4	x	x
		p	5	y	y
c	elt	net/minecraft/client/texture/TextureStitcherCannotFitException
	f	Ljava/util/Collection;	a	sprites
	m	(Lelv$a;Ljava/util/Collection;)V	<init>	<init>
		p	1	sprite	sprite
		p	2	sprites	sprites
	m	()Ljava/util/Collection;	a	getSprites
c	elu	net/minecraft/client/texture/SpriteAtlasTexture
	f	Luh;	d	BLOCK_ATLAS_TEX
	f	Luh;	e	PARTICLE_ATLAS_TEX
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	f	Ljava/util/List;	g	animatedSprites
	f	Ljava/util/Set;	h	spritesToLoad
	f	Ljava/util/Map;	i	sprites
	f	Luh;	j	id
	f	I	k	maxTextureSize
	m	(Lelu$a;)V	a	upload
	m	(Luh;)Lelv;	a	getSprite
		p	1	id	id
	m	(Labc;Lels;I)Ljava/util/List;	a	loadSprites
		p	3	maxLevel	maxLevel
	m	(Labc;Lelv$a;IIIII)Lelv;	a	loadSprite
		p	1	container	container
		p	3	atlasWidth	atlasWidth
		p	4	atlasHeight	atlasHeight
		p	5	maxLevel	maxLevel
		p	6	x	x
		p	7	y	y
	m	(Labc;Ljava/util/stream/Stream;Lami;I)Lelu$a;	a	stitch
		p	1	resourceManager	resourceManager
		p	2	idStream	idStream
		p	3	profiler	profiler
		p	4	mipmapLevel	mipmapLevel
	m	(Labc;Ljava/util/Set;)Ljava/util/Collection;	a	loadSprites
		p	1	resourceManager	resourceManager
		p	2	ids	ids
	m	(ILjava/util/concurrent/ConcurrentLinkedQueue;Ljava/util/List;Labc;Lelv$a;IIII)V	a	method_24105
		p	6	atlasWidth	atlasWidth
		p	7	atlasHeight	atlasHeight
		p	8	x	x
		p	9	y	y
	m	()V	a	tickAnimatedSprites
	m	(Luh;)Luh;	b	getTexturePath
	m	(Lelu$a;)V	b	applyTextureFilter
	m	()V	f	clear
	m	()Luh;	g	getId
c	elu$a	net/minecraft/client/texture/SpriteAtlasTexture$Data
	f	Ljava/util/Set;	a	spriteIds
	f	I	b	width
	f	I	c	height
	f	I	d	maxLevel
	f	Ljava/util/List;	e	sprites
	m	(Ljava/util/Set;IIILjava/util/List;)V	<init>	<init>
		p	1	spriteIds	spriteIds
		p	2	width	width
		p	3	height	height
		p	4	maxLevel	maxLevel
		p	5	sprites	sprites
c	elv	net/minecraft/client/texture/Sprite
	f	[Ldgs;	a	images
	f	Lelu;	b	atlas
	f	Lelv$a;	c	info
	f	Lemv;	d	animationMetadata
	f	[I	e	frameXs
	f	[I	f	frameYs
	f	Lelv$b;	g	interpolation
	f	I	h	x
	f	I	i	y
	f	F	j	uMin
	f	F	k	uMax
	f	F	l	vMin
	f	F	m	vMax
	f	I	n	frameIndex
	f	I	o	frameTicks
		c	The tick position within the current frame.\nResets to 0 on every frame advance.
	m	(Lelu;Lelv$a;IIIIILdgs;)V	<init>	<init>
		p	3	maxLevel	maxLevel
		p	4	atlasWidth	atlasWidth
		p	5	atlasHeight	atlasHeight
		p	6	x	x
		p	7	y	y
	m	(I)V	a	upload
		p	1	frame	frame
	m	(D)F	a	getFrameU
		p	1	frame	frame
	m	(III)Z	a	isPixelTransparent
		p	1	frame	frame
		p	2	x	x
		p	3	y	y
	m	(II[Ldgs;)V	a	upload
		p	1	frameX	frameX
		p	2	frameY	frameY
		p	3	output	output
	m	(Ldhp;)Ldhp;	a	getTextureSpecificVertexConsumer
	m	()F	a	getFrameDeltaFactor
	m	(D)F	b	getFrameV
		p	1	frame	frame
	m	()I	f	getWidth
	m	()I	g	getHeight
	m	()F	h	getMinU
	m	()F	i	getMaxU
	m	()F	j	getMinV
	m	()F	k	getMaxV
	m	()Luh;	l	getId
	m	()Lelu;	m	getAtlas
	m	()I	n	getFrameCount
	m	()V	o	upload
	m	()F	p	getAnimationFrameDelta
	m	()V	q	tickAnimation
	m	()Z	r	isAnimated
c	elv$a	net/minecraft/client/texture/Sprite$Info
	f	Luh;	a	id
	f	I	b	width
	f	I	c	height
	f	Lemv;	d	animationData
	m	(Luh;IILemv;)V	<init>	<init>
		p	1	id	id
		p	2	width	width
		p	3	height	height
		p	4	animationData	animationData
	m	()Luh;	a	getId
	m	()I	b	getWidth
	m	()I	c	getHeight
c	elv$b	net/minecraft/client/texture/Sprite$Interpolation
	f	[Ldgs;	b	images
	m	(Lelv;Lelv$a;I)V	<init>	<init>
		p	3	mipmap	mipmap
	m	()V	a	apply
		c	Linearly interpolate between the current and next frame on all mip levels\nbased on the tick position within the current frame,\nand upload the results to the currently bound texture to the frame slot at position (0,0).
	m	(IIII)I	a	getPixelColor
		c	Returns the pixel color at frame {@code frameIndex} within mipmap {@code layer} at sprite relative coordinates.
		p	1	frameIndex	frameIndex
		p	2	layer	layer
		p	3	x	x
		p	4	y	y
	m	(DII)I	a	lerp
		c	Purely mathematical single-value linear interpolation.\n{@code lerp(0, a, b) == b}, {@code lerp(1, a, b) == a}.
		p	1	delta	delta
		p	3	to	to
		p	4	from	from
c	elw	net/minecraft/client/texture/TextureManager
	f	Luh;	a	MISSING_IDENTIFIER
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	textures
	f	Ljava/util/Set;	d	tickListeners
	f	Ljava/util/Map;	e	dynamicIdCounters
	f	Labc;	f	resourceContainer
	m	(Labc;)V	<init>	<init>
		p	1	resourceManager	resourceManager
	m	(Luh;Lelj;)V	a	registerTexture
	m	(Luh;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadTextureAsync
		p	1	id	id
		p	2	executor	executor
	m	(Ljava/lang/String;Lell;)Luh;	a	registerDynamicTexture
		p	1	prefix	prefix
		p	2	texture	texture
	m	(Ljava/lang/Runnable;)V	a	runOnRenderThread
		p	0	runnable	runnable
	m	(Luh;)V	a	bindTexture
		p	1	id	id
	m	(Luh;)Lelj;	b	getTexture
		p	1	id	id
	m	(Luh;)V	c	destroyTexture
		p	1	id	id
	m	(Luh;)V	d	bindTextureInner
		p	1	id	id
c	elx	net/minecraft/client/texture/TextureTickListener
	m	()V	e	tick
c	elz	net/minecraft/client/resource/ResourceIndex
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	index
	m	(Ljava/io/File;Ljava/lang/String;)V	<init>	<init>
		p	1	directory	directory
		p	2	indexName	indexName
	m	(Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	getFilesRecursively
	m	(Ljava/lang/String;)Ljava/io/File;	a	findFile
		p	1	path	path
	m	(Luh;)Ljava/io/File;	a	getResource
		p	1	identifier	identifier
c	em	net/minecraft/command/arguments/SwizzleArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_SWIZZLE_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	()Lem;	a	swizzle
c	ema	net/minecraft/client/resource/ClientBuiltinResourcePackProvider
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/regex/Pattern;	b	ALPHANUMERAL
	f	Laah;	c	pack
	f	Ljava/io/File;	d	serverPacksRoot
	f	Ljava/util/concurrent/locks/ReentrantLock;	e	lock
	f	Lelz;	f	index
	f	Ljava/util/concurrent/CompletableFuture;	g	downloadTask
	f	Leml;	h	serverContainer
	m	(Ljava/io/File;Lelz;)V	<init>	<init>
		p	1	serverPacksRoot	serverPacksRoot
		p	2	index	index
	m	(Ljava/io/File;Laas;)Ljava/util/concurrent/CompletableFuture;	a	loadServerPack
		p	1	packZip	packZip
	m	(Ljava/io/File;)V	a	delete
		p	0	file	file
	m	(Ljava/lang/String;Ljava/io/File;)Z	a	verifyFile
		p	1	expectedSha1	expectedSha1
		p	2	file	file
	m	()Laah;	a	getPack
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	download
	m	()Ljava/util/Map;	b	getDownloadHeaders
	m	()V	c	clear
	m	()V	d	deleteOldServerPack
c	emb	net/minecraft/client/resource/DefaultClientResourcePack
	f	Lelz;	d	index
c	emc	net/minecraft/client/util/DefaultSkinHelper
	f	Luh;	a	STEVE_SKIN
	f	Luh;	b	ALEX_SKIN
	m	()Luh;	a	getTexture
	m	(Ljava/util/UUID;)Luh;	a	getTexture
		p	0	uuid	uuid
	m	(Ljava/util/UUID;)Ljava/lang/String;	b	getModel
		p	0	uuid	uuid
	m	(Ljava/util/UUID;)Z	c	shouldUseSlimModel
		p	0	uuid	uuid
c	emd	net/minecraft/client/resource/DirectResourceIndex
	f	Ljava/io/File;	b	assetDir
	m	(Ljava/io/File;)V	<init>	<init>
		p	1	assetDir	assetDir
c	eme	net/minecraft/client/resource/FoliageColormapResourceSupplier
	f	Luh;	a	FOLIAGE_COLORMAP
	m	(Labc;Lami;)[I	a	reload
		p	1	resourceManager	resourceManager
	m	([ILabc;Lami;)V	a	apply
c	emf	net/minecraft/client/resource/GrassColormapResourceSupplier
	f	Luh;	a	GRASS_COLORMAP_LOC
	m	([ILabc;Lami;)V	a	apply
c	emg	net/minecraft/client/resource/Format3ResourcePack
	f	Ljava/util/Map;	a	NEW_TO_OLD_MAP
	f	Laae;	b	parent
	f	Ljava/util/Map;	c	idMap
	m	(Luh;)Luh;	a	getMetadataLocation
	m	(Luh;)Luh;	b	getRedirectedId
c	emh	net/minecraft/client/util/RawTextureDataLoader
	m	(Labc;Luh;)[I	a	loadRawTextureData
c	emi	net/minecraft/client/texture/StatusEffectSpriteManager
	m	(Lelw;)V	<init>	<init>
		p	1	textureManager	textureManager
	m	(Laoe;)Lelv;	a	getSprite
		p	1	effect	effect
c	emj	net/minecraft/client/resource/Format4ResourcePack
	f	Luh;	a	OLD_SHIELD_BASE_TEXTURE
	f	Luh;	b	OLD_BANNER_BASE_TEXTURE
	f	Luh;	c	IRON_GOLEM_TEXTURE
	f	Ljava/util/Map;	d	NEW_TO_OLD_CHEST_TEXTURES
	f	Ljava/util/List;	e	BANNER_PATTERN_TYPES
	f	Ljava/util/Set;	f	SHIELD_PATTERN_TEXTURES
	f	Ljava/util/Set;	g	BANNER_PATTERN_TEXTURES
	f	Laae;	h	parent
	m	(Laae;)V	<init>	<init>
		p	1	parent	parent
	m	(Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream;	a	openCroppedStream
	m	(Ldgs;Ldgs;IIIIIIIZZ)V	a	loadBytes
		p	0	source	source
		p	1	target	target
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	cropLeftChestTexture
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	cropRightChestTexture
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	cropSingleChestTexture
c	emk	net/minecraft/client/texture/PaintingManager
	f	Luh;	a	PAINTING_BACK_ID
	m	(Lelw;)V	<init>	<init>
		p	1	manager	manager
	m	(Lbbc;)Lelv;	a	getPaintingSprite
		p	1	motive	motive
	m	()Lelv;	b	getBackSprite
c	eml	net/minecraft/client/resource/ClientResourcePackProfile
	f	Ldgs;	a	icon
	f	Luh;	b	iconId
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lmr;Lmr;Laaq;Laap$b;ZLaas;Ldgs;)V	<init>	<init>
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	displayName	displayName
		p	5	description	description
		p	6	compatibility	compatibility
		p	8	pinned	pinned
	m	(Lelw;)V	a	drawIcon
		p	1	manager	manager
c	emm	net/minecraft/client/texture/PlayerSkinProvider
	f	Lelw;	a	textureManager
	f	Ljava/io/File;	b	skinCacheDir
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	f	Lcom/google/common/cache/LoadingCache;	d	skinCache
	m	(Lelw;Ljava/io/File;Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	skinCacheDir	skinCacheDir
		p	3	sessionService	sessionService
	m	(Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Luh;	a	loadSkin
		p	1	profileTexture	profileTexture
		p	2	type	type
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/Map;	a	getTextures
		p	1	profile	profile
	m	(Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lemm$a;)Luh;	a	loadSkin
		p	1	profileTexture	profileTexture
		p	2	type	type
		p	3	callback	callback
	m	(Lcom/mojang/authlib/GameProfile;Lemm$a;Z)V	a	loadSkin
		p	1	profile	profile
		p	2	callback	callback
		p	3	requireSecure	requireSecure
c	emm$1	net/minecraft/client/texture/PlayerSkinProvider$1
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/Map;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
		p	1	profile	profile
c	emm$a	net/minecraft/client/texture/PlayerSkinProvider$SkinTextureAvailableCallback
	m	(Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Luh;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V	onSkinTextureAvailable	onSkinTextureAvailable
		p	3	texture	texture
c	emn	net/minecraft/client/resource/SplashTextResourceSupplier
	f	Luh;	a	RESOURCE_ID
	f	Ljava/util/Random;	b	RANDOM
	f	Ljava/util/List;	c	splashTexts
	m	()Ljava/lang/String;	a	get
	m	(Labc;Lami;)Ljava/util/List;	a	prepare
	m	(Ljava/util/List;Labc;Lami;)V	a	apply
c	emo	net/minecraft/client/texture/SpriteAtlasHolder
	f	Lelu;	a	atlas
	f	Ljava/lang/String;	b	pathPrefix
	m	(Lelw;Luh;Ljava/lang/String;)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	atlasId	atlasId
		p	3	pathPrefix	pathPrefix
	m	(Luh;)Lelv;	a	getSprite
		p	1	objectId	objectId
	m	(Lelu$a;Labc;Lami;)V	a	apply
	m	(Labc;Lami;)Lelu$a;	a	prepare
	m	()Ljava/util/stream/Stream;	a	getSprites
	m	(Luh;)Luh;	b	toSpriteId
		p	1	objectId	objectId
c	emp	net/minecraft/client/resource/language/TranslationStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	c	translations
	f	Z	d	rightToLeft
	m	(Ljava/util/Map;Z)V	<init>	<init>
		p	1	translations	translations
		p	2	rightToLeft	rightToLeft
	m	(Labc;Ljava/util/List;)Lemp;	a	load
		p	0	resourceManager	resourceManager
		p	1	definitions	definitions
	m	(Ljava/util/List;Ljava/util/Map;)V	a	load
		p	0	resources	resources
		p	1	translationMap	translationMap
	m	(Ljava/lang/String;)Ljava/lang/String;	d	reorder
c	emq	net/minecraft/client/resource/language/I18n
	m	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;	a	translate
		p	0	key	key
		p	1	args	args
	m	(Ljava/lang/String;)Z	a	hasTranslation
		p	0	key	key
c	emr	net/minecraft/client/resource/language/LanguageDefinition
	f	Ljava/lang/String;	a	code
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/String;	c	region
	f	Z	d	rightToLeft
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
		p	1	code	code
		p	2	name	name
		p	3	region	region
		p	4	rightToLeft	rightToLeft
	m	()Z	a	isRightToLeft
	m	(Lemr;)I	a	compareTo
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ems	net/minecraft/client/resource/language/LanguageManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	c	languageDefs
	f	Ljava/lang/String;	d	currentLanguageCode
	m	(Lemr;)V	a	setLanguage
	m	(Ljava/lang/String;)Lemr;	a	getLanguage
		p	1	code	code
	m	()Lemr;	b	getLanguage
	m	()Ljava/util/SortedSet;	d	getAllLanguages
c	emu	net/minecraft/client/resource/metadata/AnimationFrameResourceMetadata
	f	I	a	index
	f	I	b	time
	m	(II)V	<init>	<init>
		p	1	index	index
		p	2	time	time
	m	(I)V	<init>	<init>
		p	1	index	index
	m	()Z	a	usesDefaultFrameTime
	m	()I	b	getTime
	m	()I	c	getIndex
c	emv	net/minecraft/client/resource/metadata/AnimationResourceMetadata
	f	Lemw;	a	READER
	f	Lemv;	b	EMPTY
	f	Ljava/util/List;	c	frames
	f	I	d	width
	f	I	e	height
	f	I	f	defaultFrameTime
	f	Z	g	interpolate
	m	(Ljava/util/List;IIIZ)V	<init>	<init>
		p	1	frames	frames
		p	2	width	width
		p	3	height	height
		p	4	defaultFrameTime	defaultFrameTime
		p	5	interpolate	interpolate
	m	()I	a	getFrameCount
	m	(I)I	a	getHeight
	m	(I)I	b	getWidth
	m	()I	b	getDefaultFrameTime
	m	(I)I	c	getFrameTime
		p	1	frameIndex	frameIndex
	m	()Z	c	shouldInterpolate
	m	()Ljava/util/Set;	d	getFrameIndexSet
	m	(I)I	e	getFrameIndex
		p	1	frameIndex	frameIndex
	m	(I)Lemu;	f	getFrame
		p	1	frameIndex	frameIndex
c	emw	net/minecraft/client/resource/metadata/AnimationResourceMetadataReader
	m	(ILcom/google/gson/JsonElement;)Lemu;	a	readFrameMetadata
		p	1	frame	frame
		p	2	json	json
	m	(Lcom/google/gson/JsonObject;)Lemv;	b	fromJson
c	emx	net/minecraft/client/render/entity/feature/VillagerResourceMetadata
	f	Lemy;	a	READER
	f	Lemx$a;	b	hatType
	m	()Lemx$a;	a	getHatType
c	emx$a	net/minecraft/client/render/entity/feature/VillagerResourceMetadata$HatType
	f	Ljava/util/Map;	d	byName
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lemx$a;	a	from
		p	0	name	name
c	emy	net/minecraft/client/render/entity/feature/VillagerResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Lemx;	b	fromJson
c	en	net/minecraft/command/arguments/Vec2ArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Z	c	centerIntegers
	m	(Z)V	<init>	<init>
		p	1	centerIntegers	centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldel;	a	getVec2
		p	0	context	context
		p	1	name	name
	m	()Len;	a	vec2
	m	(Lcom/mojang/brigadier/StringReader;)Lej;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	ena	net/minecraft/client/resource/metadata/LanguageResourceMetadata
	f	Lenb;	a	READER
	f	Ljava/util/Collection;	b	definitions
	m	()Ljava/util/Collection;	a	getLanguageDefinitions
c	enb	net/minecraft/client/resource/metadata/LanguageResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Lena;	b	fromJson
c	ene	net/minecraft/client/resource/metadata/TextureResourceMetadata
	f	Lenf;	a	READER
	f	Z	b	blur
	f	Z	c	clamp
	m	(ZZ)V	<init>	<init>
		p	1	blur	blur
	m	()Z	a	shouldBlur
	m	()Z	b	shouldClamp
c	enf	net/minecraft/client/resource/metadata/TextureResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Lene;	b	fromJson
c	enh	net/minecraft/client/render/model/BakedModel
	m	(Lcfj;Lfz;Ljava/util/Random;)Ljava/util/List;	a	getQuads
		p	1	state	state
		p	2	face	face
		p	3	random	random
	m	()Z	a	useAmbientOcclusion
	m	()Z	b	hasDepth
	m	()Z	c	isSideLit
		c	Allows control of the lighting when rendering a model in a GUI.\n<p>\nTrue, the model will be lit from the side, like a block.\n<p>\nFalse, the model will be lit from the front, like an item.
	m	()Z	d	isBuiltin
	m	()Lelv;	e	getSprite
	m	()Ledf;	f	getTransformation
	m	()Ledd;	g	getOverrides
c	eni	net/minecraft/client/render/model/ModelRotation
	f	Ljava/util/Map;	q	BY_INDEX
	f	Lf;	r	rotation
	f	Lc;	s	directionTransformation
	f	I	t	index
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3	x	x
		p	4	y	y
	m	(II)Leni;	a	get
		p	0	x	x
		p	1	y	y
	m	(II)I	b	getIndex
		p	0	x	x
		p	1	y	y
c	enj	net/minecraft/client/render/model/BuiltinBakedModel
	f	Ledf;	a	transformation
	f	Ledd;	b	itemPropertyOverrides
	f	Lelv;	c	sprite
	m	(Ledf;Ledd;Lelv;Z)V	<init>	<init>
		p	1	transformation	transformation
		p	2	itemPropertyOverrides	itemPropertyOverrides
		p	3	sprite	sprite
c	enk	net/minecraft/client/util/SpriteIdentifier
	f	Luh;	a	atlas
	f	Luh;	b	texture
	f	Lech;	c	layer
	m	(Luh;Luh;)V	<init>	<init>
		p	1	atlas	atlas
		p	2	texture	texture
	m	(Lebz;Ljava/util/function/Function;)Ldhp;	a	getVertexConsumer
		p	1	vertexConsumers	vertexConsumers
		p	2	layerFactory	layerFactory
	m	(Ljava/util/function/Function;)Lech;	a	getRenderLayer
		p	1	layerFactory	layerFactory
	m	()Luh;	a	getAtlasId
	m	()Luh;	b	getTextureId
	m	()Lelv;	c	getSprite
c	enl	net/minecraft/client/render/model/ModelLoader
	f	Ldmn;	A	blockColors
	f	Ljava/util/Set;	B	modelsToLoad
	f	Lecz$a;	C	variantMapDeserializationContext
	f	Ljava/util/Map;	D	unbakedModels
	f	Ljava/util/Map;	E	bakedModelCache
	f	Ljava/util/Map;	F	modelsToBake
	f	Ljava/util/Map;	G	bakedModels
	f	Ljava/util/Map;	H	spriteAtlasData
	f	I	I	nextStateId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	J	stateLookup
	f	Lenk;	a	FIRE_0
	f	Lenk;	b	FIRE_1
	f	Lenk;	c	LAVA_FLOW
	f	Lenk;	d	WATER_FLOW
	f	Lenk;	e	WATER_OVERLAY
	f	Lenk;	f	BANNER_BASE
	f	Lenk;	g	SHIELD_BASE
	f	Lenk;	h	SHIELD_BASE_NO_PATTERN
	f	Ljava/util/List;	i	BLOCK_DESTRUCTION_STAGES
	f	Ljava/util/List;	j	BLOCK_DESTRUCTION_STAGE_TEXTURES
	f	Ljava/util/List;	k	BLOCK_DESTRUCTION_RENDER_LAYERS
	f	Lenn;	l	MISSING
	f	Ljava/lang/String;	m	MISSING_DEFINITION
	f	Lecy;	n	GENERATION_MARKER
	f	Lecy;	o	BLOCK_ENTITY_MARKER
	f	Ljava/util/Set;	p	DEFAULT_TEXTURES
	f	Lorg/apache/logging/log4j/Logger;	q	LOGGER
	f	Ljava/util/Map;	s	BUILTIN_MODEL_DEFINITIONS
	f	Lcom/google/common/base/Splitter;	t	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	u	KEY_VALUE_SPLITTER
	f	Lcfk;	v	ITEM_FRAME_STATE_FACTORY
	f	Ledb;	w	ITEM_MODEL_GENERATOR
	f	Ljava/util/Map;	x	STATIC_DEFINITIONS
	f	Labc;	y	resourceManager
	f	Lelk;	z	spriteAtlasManager
	m	(Labc;Ldmn;Lami;I)V	<init>	<init>
		p	1	resourceManager	resourceManager
	m	(Ljava/lang/Iterable;)V	a	addStates
		p	1	states	states
	m	(Lelw;Lami;)Lelk;	a	upload
	m	(Lenn;)V	a	addModel
		p	1	modelId	modelId
	m	(Luh;Lenr;)V	a	putModel
		p	1	id	id
		p	2	unbakedModel	unbakedModel
	m	(Lcgl;Ljava/lang/String;)Ljava/lang/Comparable;	a	getPropertyValue
		p	0	property	property
		p	1	string	string
	m	(Lcfk;Ljava/lang/String;)Ljava/util/function/Predicate;	a	stateKeyToPredicate
		p	0	stateFactory	stateFactory
		p	1	key	key
	m	(Luh;)Lenr;	a	getOrLoadModel
		p	1	id	id
	m	()Ljava/util/Map;	a	getBakedModelMap
	m	(Luh;Leno;)Lenh;	a	bake
		p	2	settings	settings
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getStateLookup
	m	(Luh;)V	b	loadModel
		p	1	id	id
	m	(Luh;)Lecy;	c	loadModelFromJson
		p	1	id	id
c	enl$a	net/minecraft/client/render/model/ModelLoader$ModelLoaderException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	message	message
c	enl$b	net/minecraft/client/render/model/ModelLoader$ModelDefinition
	f	Ljava/util/List;	a	components
	f	Ljava/util/List;	b	values
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1	components	components
		p	2	values	values
	m	(Lcfj;Ledl;Ljava/util/Collection;)Lenl$b;	a	create
		p	0	state	state
		p	1	rawModel	rawModel
		p	2	properties	properties
	m	(Lcfj;Ljava/util/Collection;)Ljava/util/List;	a	getStateValues
		p	0	state	state
		p	1	properties	properties
	m	(Lcfj;Lenr;Ljava/util/Collection;)Lenl$b;	a	create
		p	0	state	state
		p	1	rawModel	rawModel
		p	2	properties	properties
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	enm	net/minecraft/client/render/model/BakedModelManager
	f	Ljava/util/Map;	a	models
	f	Lelk;	b	atlasManager
	f	Lecp;	c	blockModelCache
	f	Lelw;	d	textureManager
	f	Ldmn;	e	colorMap
	f	I	f	mipmap
	f	Lenh;	g	missingModel
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	h	stateLookup
	m	(Lelw;Ldmn;I)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	colorMap	colorMap
		p	3	mipmap	mipmap
	m	(I)V	a	resetMipmapLevels
	m	(Lcfj;Lcfj;)Z	a	shouldRerender
		p	1	from	from
		p	2	to	to
	m	(Labc;Lami;)Lenl;	a	prepare
	m	(Lenn;)Lenh;	a	getModel
		p	1	id	id
	m	(Lenl;Labc;Lami;)V	a	apply
	m	()Lenh;	a	getMissingModel
	m	()Lecp;	b	getBlockModels
c	enn	net/minecraft/client/util/ModelIdentifier
	f	Ljava/lang/String;	d	variant
	m	(Luh;Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	variant	variant
	m	(Ljava/lang/String;)[Ljava/lang/String;	c	split
		p	0	id	id
	m	()Ljava/lang/String;	d	getVariant
c	eno	net/minecraft/client/render/model/ModelBakeSettings
	m	()Lf;	b	getRotation
	m	()Z	c	isShaded
c	enp	net/minecraft/client/render/model/MultipartBakedModel
	f	Z	a	ambientOcclusion
	f	Z	b	depthGui
	f	Lelv;	d	sprite
	f	Ledf;	e	transformations
	f	Ledd;	f	itemPropertyOverrides
	f	Ljava/util/List;	g	components
	f	Ljava/util/Map;	h	stateCache
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	components	components
c	enp$a	net/minecraft/client/render/model/MultipartBakedModel$Builder
	f	Ljava/util/List;	a	components
	m	(Ljava/util/function/Predicate;Lenh;)V	a	addComponent
		p	1	predicate	predicate
		p	2	model	model
	m	()Lenh;	a	build
c	enq	net/minecraft/client/render/model/BasicBakedModel
	f	Ljava/util/List;	a	quads
	f	Ljava/util/Map;	b	faceQuads
	f	Z	c	usesAo
	f	Z	d	hasDepth
	f	Z	e	isSideLit
	f	Lelv;	f	sprite
	f	Ledf;	g	transformation
	f	Ledd;	h	itemPropertyOverrides
	m	(Ljava/util/List;Ljava/util/Map;ZZZLelv;Ledf;Ledd;)V	<init>	<init>
		p	1	quads	quads
		p	2	faceQuads	faceQuads
		p	3	usesAo	usesAo
		p	4	isSideLit	isSideLit
		p	5	hasDepth	hasDepth
c	enq$a	net/minecraft/client/render/model/BasicBakedModel$Builder
	f	Ljava/util/List;	a	quads
	f	Ljava/util/Map;	b	faceQuads
	f	Ledd;	c	itemPropertyOverrides
	f	Z	d	usesAo
	f	Lelv;	e	particleTexture
	f	Z	f	isSideLit
	f	Z	g	hasDepth
	f	Ledf;	h	transformation
	m	(Lecy;Ledd;Z)V	<init>	<init>
		p	1	unbakedModel	unbakedModel
		p	2	itemPropertyOverrides	itemPropertyOverrides
		p	3	hasDepth	hasDepth
	m	(ZZZLedf;Ledd;)V	<init>	<init>
		p	1	usesAo	usesAo
		p	2	isSideLit	isSideLit
		p	3	hasDepth	hasDepth
	m	(Lelv;)Lenq$a;	a	setParticle
		p	1	sprite	sprite
	m	(Lect;)Lenq$a;	a	addQuad
		p	1	quad	quad
	m	(Lfz;Lect;)Lenq$a;	a	addQuad
		p	1	side	side
		p	2	quad	quad
	m	()Lenh;	b	build
c	enr	net/minecraft/client/render/model/UnbakedModel
	m	(Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection;	a	getTextureDependencies
		p	1	unbakedModelGetter	unbakedModelGetter
		p	2	unresolvedTextureReferences	unresolvedTextureReferences
	m	(Lenl;Ljava/util/function/Function;Leno;Luh;)Lenh;	a	bake
		p	1	loader	loader
		p	2	textureGetter	textureGetter
		p	3	rotationContainer	rotationContainer
		p	4	modelId	modelId
	m	()Ljava/util/Collection;	f	getModelDependencies
c	ens	net/minecraft/client/render/model/WeightedBakedModel
	f	I	a	totalWeight
	f	Ljava/util/List;	b	models
	f	Lenh;	c	defaultModel
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	models	models
c	ens$a	net/minecraft/client/render/model/WeightedBakedModel$Builder
	f	Ljava/util/List;	a	models
	m	(Lenh;I)Lens$a;	a	add
		p	1	model	model
		p	2	weight	weight
	m	()Lenh;	a	getFirst
c	ens$b	net/minecraft/client/render/model/WeightedBakedModel$Entry
	f	Lenh;	b	model
	m	(Lenh;I)V	<init>	<init>
		p	1	model	model
		p	2	weight	weight
c	env	net/minecraft/client/sound/AbstractSoundInstance
	f	Leoj;	a	sound
	f	Lacm;	b	category
	f	Luh;	c	id
	f	F	d	volume
	f	F	e	pitch
	f	D	f	x
	f	D	g	y
	f	D	h	z
	f	Z	i	repeat
	f	I	j	repeatDelay
	f	Leom$a;	k	attenuationType
	f	Z	m	looping
	m	(Luh;Lacm;)V	<init>	<init>
		p	1	soundId	soundId
		p	2	category	category
	m	(Lack;Lacm;)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
c	enw	net/minecraft/client/sound/MovingSoundInstance
	f	Z	n	done
	m	()V	o	setDone
c	enx	net/minecraft/client/util/ClientPlayerTickable
	m	()V	a	tick
c	eny	net/minecraft/client/sound/AggressiveBeeSoundInstance
c	enz	net/minecraft/client/sound/PassiveBeeSoundInstance
c	eo	net/minecraft/command/arguments/Vec3ArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	MIXED_COORDINATE_EXCEPTION
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Z	d	centerIntegers
	m	(Z)V	<init>	<init>
		p	1	centerIntegers	centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldem;	a	getVec3
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lej;	a	parse
	m	(Z)Leo;	a	vec3
		p	0	centerIntegers	centerIntegers
	m	()Leo;	a	vec3
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lej;	b	getPosArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eoa	net/minecraft/client/sound/AbstractBeeSoundInstance
	f	Layl;	n	bee
	f	Z	o	replaced
	m	()Lenw;	p	getReplacement
	m	()Z	q	shouldReplace
	m	()F	u	getMinPitch
	m	()F	v	getMaxPitch
c	eob	net/minecraft/client/sound/BiomeEffectSoundPlayer
	f	Lebf;	a	player
	f	Lepn;	b	soundManager
	f	Lbrg;	c	biomeAccess
	f	Ljava/util/Random;	d	random
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;	e	soundLoops
	f	Ljava/util/Optional;	f	moodSound
	f	Ljava/util/Optional;	g	additionsSound
	f	F	h	moodPercentage
	f	Lbre;	i	activeBiome
	m	(Lebf;Lepn;Lbrg;)V	<init>	<init>
		p	1	player	player
		p	2	soundManager	soundManager
		p	3	biomeAccess	biomeAccess
	m	()F	b	getMoodPercentage
c	eob$a	net/minecraft/client/sound/BiomeEffectSoundPlayer$MusicLoop
	f	I	n	delta
	f	I	o	strength
	m	(Lack;)V	<init>	<init>
		p	1	sound	sound
	m	()V	p	fadeOut
	m	()V	q	fadeIn
c	eoc	net/minecraft/client/sound/BubbleColumnSoundPlayer
	f	Lebf;	a	player
	f	Z	b	hasPlayedForCurrentColumn
	f	Z	c	firstTick
	m	(Lebf;)V	<init>	<init>
		p	1	player	player
c	eod	net/minecraft/client/sound/ElytraSoundInstance
	f	Lebf;	n	player
	f	I	o	tickCount
	m	(Lebf;)V	<init>	<init>
		p	1	player	player
c	eoe	net/minecraft/client/sound/EntityTrackingSoundInstance
	f	Laom;	n	entity
	m	(Lack;Lacm;Laom;)V	<init>	<init>
		p	1	sound	sound
	m	(Lack;Lacm;FFLaom;)V	<init>	<init>
		p	1	sound	sound
		p	3	volume	volume
		p	4	pitch	pitch
c	eof	net/minecraft/client/sound/GuardianAttackSoundInstance
	f	Lbbx;	n	guardian
	m	(Lbbx;)V	<init>	<init>
		p	1	guardian	guardian
c	eog	net/minecraft/client/sound/MovingMinecartSoundInstance
	c	A sound instance played when a minecart is moving.
	f	Lbfr;	n	minecart
	f	F	o	distance
	m	(Lbfr;)V	<init>	<init>
		p	1	minecart	minecart
c	eoh	net/minecraft/client/sound/MinecartInsideSoundInstance
	c	A sound instance played when a player is riding a minecart.
	f	Lbec;	n	player
	f	Lbfr;	o	minecart
	m	(Lbec;Lbfr;)V	<init>	<init>
		p	1	player	player
		p	2	minecart	minecart
c	eoi	net/minecraft/client/sound/PositionedSoundInstance
	m	(Lack;Lacm;FFZILeom$a;DDD)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
		p	5	repeat	repeat
		p	6	repeatDelay	repeatDelay
		p	7	attenuationType	attenuationType
	m	(Lack;Lacm;FFDDD)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
	m	(Lack;Lacm;FFLfu;)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
		p	5	pos	pos
	m	(Luh;Lacm;FFZILeom$a;DDDZ)V	<init>	<init>
		p	1	id	id
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
		p	5	repeat	repeat
		p	6	repeatDelay	repeatDelay
		p	7	attenuationType	attenuationType
	m	(Lack;F)Leoi;	a	master
		p	0	sound	sound
		p	1	pitch	pitch
	m	(Lack;DDD)Leoi;	a	record
		p	0	sound	sound
	m	(Lack;)Leoi;	a	music
		p	0	sound	sound
	m	(Lack;FF)Leoi;	a	master
		p	0	sound	sound
		p	1	pitch	pitch
		p	2	volume	volume
	m	(Lack;)Leoi;	b	ambient
		p	0	sound	sound
	m	(Lack;DDD)Leoi;	b	ambient
		p	0	sound	sound
	m	(Lack;FF)Leoi;	b	ambient
		p	0	sound	sound
		p	1	pitch	pitch
		p	2	volume	volume
c	eoj	net/minecraft/client/sound/Sound
	f	Luh;	a	id
	f	F	b	volume
	f	F	c	pitch
	f	I	d	weight
	f	Leoj$a;	e	registrationType
	f	Z	f	stream
	f	Z	g	preload
	f	I	h	attenuation
	m	(Ljava/lang/String;FFILeoj$a;ZZI)V	<init>	<init>
		p	1	id	id
		p	2	volume	volume
		p	3	pitch	pitch
		p	4	weight	weight
		p	5	registrationType	registrationType
		p	6	stream	stream
		p	7	preload	preload
		p	8	attenuation	attenuation
	m	()Luh;	a	getIdentifier
	m	()Luh;	b	getLocation
	m	()F	c	getVolume
	m	()F	d	getPitch
	m	()Leoj;	f	getSound
	m	()Leoj$a;	g	getRegistrationType
	m	()Z	h	isStreamed
	m	()Z	i	isPreloaded
	m	()I	j	getAttenuation
c	eoj$a	net/minecraft/client/sound/Sound$RegistrationType
	f	Leoj$a;	b	SOUND_EVENT
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Leoj$a;	a	getByName
c	eok	net/minecraft/client/sound/SoundEntry
	f	Ljava/util/List;	a	sounds
	f	Z	b	replace
	f	Ljava/lang/String;	c	subtitle
	m	(Ljava/util/List;ZLjava/lang/String;)V	<init>	<init>
		p	1	sounds	sounds
		p	2	replace	replace
		p	3	subtitle	subtitle
	m	()Ljava/util/List;	a	getSounds
	m	()Z	b	canReplace
	m	()Ljava/lang/String;	c	getSubtitle
c	eol	net/minecraft/client/sound/SoundEntryDeserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leok;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leoj$a;)Leoj$a;	a	deserializeType
		p	1	json	json
		p	2	fallback	fallback
	m	(Lcom/google/gson/JsonObject;)Ljava/util/List;	a	deserializeSounds
		p	1	json	json
	m	(Lcom/google/gson/JsonObject;)Leoj;	b	deserializeSound
		p	1	json	json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	eom	net/minecraft/client/sound/SoundInstance
	m	(Lepn;)Lepo;	a	getSoundSet
		p	1	soundManager	soundManager
	m	()Luh;	a	getId
	m	()Leoj;	b	getSound
	m	()Lacm;	c	getCategory
	m	()Z	d	isRepeatable
	m	()I	e	getRepeatDelay
	m	()F	f	getVolume
	m	()F	g	getPitch
	m	()D	h	getX
	m	()D	i	getY
	m	()D	j	getZ
	m	()Leom$a;	k	getAttenuationType
	m	()Z	m	isLooping
	m	()Z	s	shouldAlwaysPlay
	m	()Z	t	canPlay
c	eom$a	net/minecraft/client/sound/SoundInstance$AttenuationType
c	eon	net/minecraft/client/sound/TickableSoundInstance
	m	()Z	n	isDone
	m	()V	r	tick
c	eoo	net/minecraft/client/sound/AmbientSoundPlayer
	f	Lebf;	a	player
	f	Lepn;	b	soundManager
	f	I	c	ticksUntilPlay
	m	(Lebf;Lepn;)V	<init>	<init>
		p	1	player	player
c	eop	net/minecraft/client/sound/AmbientSoundLoops
c	eop$a	net/minecraft/client/sound/AmbientSoundLoops$MusicLoop
	f	Lebf;	n	player
	m	(Lebf;Lack;)V	<init>	<init>
		p	1	player	player
		p	2	soundEvent	soundEvent
c	eop$b	net/minecraft/client/sound/AmbientSoundLoops$Underwater
	f	Lebf;	n	player
	f	I	o	transitionTimer
c	eor	net/minecraft/client/search/SearchableContainer
	m	()V	a	clear
	m	(Ljava/lang/Object;)V	a	add
	m	()V	b	reload
c	eos	net/minecraft/client/search/IdentifierSearchableContainer
	f	Leow;	a	byNamespace
	f	Leow;	b	byPath
	f	Ljava/util/function/Function;	c	identifierFinder
	f	Ljava/util/List;	d	entries
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	entryIds
	m	(Ljava/lang/Object;Ljava/lang/Object;)I	a	compare
		p	1	object1	object1
		p	2	object2	object2
	m	(Ljava/lang/Object;)V	b	index
c	eos$a	net/minecraft/client/search/IdentifierSearchableContainer$Iterator
c	eot	net/minecraft/client/search/TextSearchableContainer
	f	Leow;	c	byText
	f	Ljava/util/function/Function;	d	textFinder
c	eot$a	net/minecraft/client/search/TextSearchableContainer$Iterator
c	eou	net/minecraft/client/search/SearchManager
	f	Leou$a;	a	ITEM_TOOLTIP
	f	Leou$a;	b	ITEM_TAG
	f	Leou$a;	c	RECIPE_OUTPUT
	f	Ljava/util/Map;	d	instances
	m	(Leou$a;)Leor;	a	get
		p	1	key	key
	m	(Leou$a;Leor;)V	a	put
		p	1	key	key
		p	2	value	value
c	eou$a	net/minecraft/client/search/SearchManager$Key
c	eov	net/minecraft/client/search/Searchable
	m	(Ljava/lang/String;)Ljava/util/List;	a	findAll
		p	1	text	text
c	eow	net/minecraft/client/search/SuffixArray
	f	Ljava/util/List;	a	objects
	f	Z	b	PRINT_COMPARISONS
	f	Z	c	PRINT_ARRAY
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/IntList;	e	characters
	f	Lit/unimi/dsi/fastutil/ints/IntList;	f	suffixStarts
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	suffixIndexToObjectIndex
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	suffixSplits
	f	I	i	maxTextLength
	m	(I)Ljava/lang/String;	a	getDebugString
		p	1	suffixIndex	suffixIndex
	m	()V	a	sort
	m	(Ljava/lang/String;)Ljava/util/List;	a	findAll
		p	1	text	text
	m	(Ljava/lang/Object;Ljava/lang/String;)V	a	add
		p	1	object	object
		p	2	text	text
	m	(Ljava/lang/String;I)I	a	compare
		p	1	string	string
		p	2	suffixIndex	suffixIndex
	m	()V	b	printArray
c	eow$1	net/minecraft/client/search/SuffixArray$1
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)I	compare	compare
c	eoy	net/minecraft/server/integrated/IntegratedPlayerManager
	f	Lle;	a	userData
	m	(Leoz;Lgm$a;Ldai;)V	<init>	<init>
		p	1	server	server
		p	2	tracker	tracker
		p	3	saveHandler	saveHandler
	m	()Leoz;	b	getServer
c	eoz	net/minecraft/server/integrated/IntegratedServer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldlx;	j	client
	f	Z	k	paused
	f	I	l	lanPort
	f	Lepc;	m	lanPinger
	f	Ljava/util/UUID;	n	localPlayerUuid
	m	(Ljava/util/UUID;)V	a	setLocalPlayerUuid
		p	1	localPlayerUuid	localPlayerUuid
c	ep	net/minecraft/command/arguments/CoordinateArgument
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	MISSING_COORDINATE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	MISSING_BLOCK_POSITION
	f	Z	c	relative
	f	D	d	value
	m	(ZD)V	<init>	<init>
		p	1	relative	relative
		p	2	value	value
	m	()Z	a	isRelative
	m	(D)D	a	toAbsoluteCoordinate
		p	1	offset	offset
	m	(Lcom/mojang/brigadier/StringReader;Z)Lep;	a	parse
		p	0	reader	reader
		p	1	centerIntegers	centerIntegers
	m	(Lcom/mojang/brigadier/StringReader;)Lep;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
		p	0	reader	reader
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	epa	net/minecraft/client/network/LanServerInfo
	f	Ljava/lang/String;	a	motd
	f	Ljava/lang/String;	b	addressPort
	f	J	c	lastTimeMillis
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	motd	motd
		p	2	addressPort	addressPort
	m	()Ljava/lang/String;	a	getMotd
	m	()Ljava/lang/String;	b	getAddressPort
	m	()V	c	updateLastTime
c	epb	net/minecraft/client/network/LanServerQueryManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	THREAD_ID
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
c	epb$a	net/minecraft/client/network/LanServerQueryManager$LanServerDetector
	f	Lepb$b;	a	entryList
	f	Ljava/net/InetAddress;	b	multicastAddress
	f	Ljava/net/MulticastSocket;	c	socket
c	epb$b	net/minecraft/client/network/LanServerQueryManager$LanServerEntryList
	f	Ljava/util/List;	a	serverEntries
	f	Z	b	dirty
	m	()Z	a	needsUpdate
	m	(Ljava/lang/String;Ljava/net/InetAddress;)V	a	addServer
	m	()V	b	markClean
	m	()Ljava/util/List;	c	getServers
c	epc	net/minecraft/server/LanServerPinger
	c	Used to send UDP multicasts to notify other clients of a local game on the same network.\n\n<p>These multicasts will always be sent to {@code 224.0.2.60:4445} where other clients can listen for local games.
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	THREAD_ID
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	motd
	f	Ljava/net/DatagramSocket;	d	socket
	f	Z	e	running
	f	Ljava/lang/String;	f	addressPort
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	motd	motd
		p	2	addressPort	addressPort
	m	(Ljava/lang/String;)Ljava/lang/String;	a	parseAnnouncementMotd
		p	0	announcement	announcement
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	createAnnouncement
		c	Creates a server announcement.\n\n<pre>\n<blockquote>[MOTD]</blockquote> // Specifies the beginning of the message of the day\n<blockquote>A message of the day</blockquote> // The message of the day\n<blockquote>[/MOTD]</blockquote> // Specifies the end of the message of the day.\n<blockquote>[AD]</blockquote> // Specifies the beginning of the address and the port of the local server.\n<blockquote>the address of the local server.</blockquote> // Such as {@code 192.146.2.1:23132}\n<blockquote>[/AD]</blockquote> // Specifies the end of the address and port of the local server.\n</pre>\n\n<p>An example of a complete announcement:\n{@code [MOTD]A Player's Server[/MOTD][AD]192.168.0.33[/AD]}
		p	0	motd	motd
			c	the message of the day
		p	1	addressPort	addressPort
			c	the address of the server including the IP address and port
	m	(Ljava/lang/String;)Ljava/lang/String;	b	parseAnnouncementAddressPort
		p	0	announcement	announcement
c	epf	net/minecraft/client/sound/AudioStream
	m	(I)Ljava/nio/ByteBuffer;	a	getBuffer
		p	1	size	size
	m	()Ljavax/sound/sampled/AudioFormat;	a	getFormat
c	epg	net/minecraft/client/sound/Channel
	f	Ljava/util/Set;	a	sources
	f	Ldfu;	b	soundEngine
	f	Ljava/util/concurrent/Executor;	c	executor
	m	(Ldfu;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	soundEngine	soundEngine
		p	2	executor	executor
	m	(Ldfu$c;)Ljava/util/concurrent/CompletableFuture;	a	createSource
		p	1	mode	mode
	m	()V	a	tick
	m	(Ljava/util/function/Consumer;)V	a	execute
	m	()V	b	close
c	epg$a	net/minecraft/client/sound/Channel$SourceManager
	f	Ldft;	b	source
	f	Z	c	stopped
	m	()Z	a	isStopped
	m	(Ljava/util/function/Consumer;)V	a	run
		p	1	action	action
	m	()V	b	close
c	eph	net/minecraft/client/sound/RepeatingAudioStream
	f	Leph$a;	a	delegateFactory
	f	Lepf;	b	delegate
	f	Ljava/io/BufferedInputStream;	c	inputStream
	m	(Leph$a;Ljava/io/InputStream;)V	<init>	<init>
		p	1	delegateFactory	delegateFactory
		p	2	inputStream	inputStream
c	eph$a	net/minecraft/client/sound/RepeatingAudioStream$DelegateFactory
c	eph$b	net/minecraft/client/sound/RepeatingAudioStream$ReusableInputStream
	m	(Ljava/io/InputStream;)V	<init>	<init>
		p	1	inputStream	inputStream
c	epi	net/minecraft/client/sound/MusicTracker
	f	Ljava/util/Random;	a	random
	f	Ldlx;	b	client
	f	Leom;	c	current
	f	I	d	timeUntilNextSong
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	()V	a	tick
	m	(Laci;)V	a	play
		p	1	type	type
	m	(Laci;)Z	b	isPlayingType
		p	1	type	type
	m	()V	b	stop
c	epj	net/minecraft/client/sound/SoundLoader
	f	Labc;	a	resourceManager
	f	Ljava/util/Map;	b	loadedSounds
	m	(Labc;)V	<init>	<init>
		p	1	resourceManager	resourceManager
	m	(Luh;)Ljava/util/concurrent/CompletableFuture;	a	loadStatic
		p	1	id	id
	m	(Luh;Z)Ljava/util/concurrent/CompletableFuture;	a	loadStreamed
		p	1	id	id
		p	2	repeatInstantly	repeatInstantly
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	loadStatic
		p	1	sounds	sounds
	m	()V	a	close
c	epk	net/minecraft/client/sound/SoundSystem
	f	Lorg/apache/logging/log4j/Marker;	a	MARKER
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	unknownSounds
	f	Lepn;	d	loader
	f	Ldmb;	e	settings
	f	Z	f	started
	f	Ldfu;	g	soundEngine
	f	Ldfv;	h	listener
	f	Lepj;	i	soundLoader
	f	Lepl;	j	taskQueue
	f	Lepg;	k	channel
	f	I	l	ticks
	f	Ljava/util/Map;	m	sources
	f	Lcom/google/common/collect/Multimap;	n	sounds
	f	Ljava/util/List;	o	tickingSounds
	f	Ljava/util/Map;	p	startTicks
	f	Ljava/util/Map;	q	soundEndTicks
	f	Ljava/util/List;	r	listeners
	f	Ljava/util/List;	s	soundsToPlayNextTick
	f	Ljava/util/List;	t	preloadedSounds
	m	(Lepn;Ldmb;Labc;)V	<init>	<init>
		p	1	loader	loader
		p	2	settings	settings
	m	(Z)V	a	tick
	m	(Luh;Lacm;)V	a	stopSounds
	m	()V	a	reloadSounds
	m	(Leoj;)V	a	addPreloadedSound
		p	1	sound	sound
	m	(Ldlj;)V	a	updateListenerPosition
	m	(Leon;)V	a	playNextTick
		p	1	sound	sound
	m	(Leom;)V	a	stop
	m	(Leom;I)V	a	play
		p	1	sound	sound
		p	2	delay	delay
	m	(Lacm;F)V	a	updateSoundVolume
		p	2	volume	volume
	m	(Lacm;)F	a	getSoundVolume
	m	(Lepm;)V	a	registerListener
	m	()V	b	stop
	m	(Lepm;)V	b	unregisterListener
	m	(Leom;)Z	b	isPlaying
	m	(Leom;)V	c	play
	m	()V	c	stopAll
	m	(Leom;)Z	d	canRepeatInstantly
	m	()V	d	pauseAll
	m	(Leom;)Z	e	isRepeatDelayed
	m	()V	e	resumeAll
	m	(Leom;)Z	f	shouldRepeatInstantly
	m	()Ljava/lang/String;	f	getDebugString
	m	(Leom;)F	g	getAdjustedPitch
	m	()V	g	start
	m	(Leom;)F	h	getAdjustedVolume
	m	()V	h	tick
c	epl	net/minecraft/client/sound/SoundExecutor
	f	Ljava/lang/Thread;	a	thread
	f	Z	b	stopped
	m	()V	a	restart
	m	()Ljava/lang/Thread;	b	createThread
	m	()V	c	waitForStop
c	epm	net/minecraft/client/sound/SoundInstanceListener
	m	(Leom;Lepo;)V	a	onSoundPlayed
		p	1	sound	sound
		p	2	soundSet	soundSet
c	epn	net/minecraft/client/sound/SoundManager
	f	Leoj;	a	MISSING_SOUND
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lcom/google/gson/reflect/TypeToken;	d	TYPE
	f	Ljava/util/Map;	e	sounds
	f	Lepk;	f	soundSystem
	m	(Z)V	a	tick
	m	(Luh;Lacm;)V	a	stopSounds
	m	(Labc;Lami;)Lepn$a;	a	prepare
	m	(Leom;)V	a	play
		p	1	sound	sound
	m	(Leom;I)V	a	play
		p	1	sound	sound
		p	2	delay	delay
	m	(Lacm;F)V	a	updateSoundVolume
		p	1	category	category
		p	2	volume	volume
	m	(Lepn$a;Labc;Lami;)V	a	apply
	m	(Ldlj;)V	a	updateListenerPosition
	m	(Lepm;)V	a	registerListener
	m	(Luh;)Lepo;	a	get
	m	()Ljava/util/Collection;	a	getKeys
	m	(Leon;)V	a	playNextTick
		p	1	sound	sound
	m	(Leom;)V	b	stop
	m	()V	b	pauseAll
	m	(Lepm;)V	b	unregisterListener
	m	(Leoj;Luh;Labc;)Z	b	isSoundResourcePresent
	m	(Leom;)Z	c	isPlaying
	m	()V	d	stopAll
	m	()V	e	close
	m	()V	f	resumeAll
	m	()Ljava/lang/String;	g	getDebugString
c	epn$a	net/minecraft/client/sound/SoundManager$SoundList
	f	Ljava/util/Map;	a	loadedSounds
	m	(Ljava/util/Map;Lepk;)V	a	addTo
	m	(Luh;Leok;Labc;)V	a	register
		p	1	id	id
		p	2	entry	entry
		p	3	resourceManager	resourceManager
c	epn$a$1	net/minecraft/client/sound/SoundManager$SoundList$1
	m	()Leoj;	a	getSound
c	epo	net/minecraft/client/sound/WeightedSoundSet
	f	Ljava/util/List;	a	sounds
	f	Ljava/util/Random;	b	random
	f	Luh;	c	id
	f	Lmr;	d	subtitle
	m	(Luh;Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	subtitle	subtitle
	m	()Leoj;	a	getSound
	m	(Lepp;)V	a	add
	m	()Lmr;	c	getSubtitle
c	epp	net/minecraft/client/sound/SoundContainer
	m	(Lepk;)V	a	preload
		p	1	soundSystem	soundSystem
	m	()I	e	getWeight
	m	()Ljava/lang/Object;	k	getSound
c	epr	net/minecraft/client/tutorial/NoneTutorialStepHandler
	f	Lepx;	a	manager
	m	(Lepx;)V	<init>	<init>
		p	1	manager	manager
c	eps	net/minecraft/client/tutorial/CraftPlanksTutorialStepHandler
	f	Lmr;	a	TITLE
	f	Lmr;	b	DESCRIPTION
	f	Lepx;	c	manager
	f	Ldop;	d	toast
	f	I	e	ticks
	m	(Lepx;)V	<init>	<init>
		p	1	manager	manager
	m	(Lebf;Ladf;)Z	a	hasCrafted
		p	0	player	player
		p	1	tag	tag
c	ept	net/minecraft/client/tutorial/FindTreeTutorialStepHandler
	f	Ljava/util/Set;	a	TREE_BLOCKS
	f	Lmr;	b	TITLE
	f	Lmr;	c	DESCRIPTION
	f	Lepx;	d	manager
	f	Ldop;	e	toast
	f	I	f	ticks
	m	(Lepx;)V	<init>	<init>
		p	1	manager	manager
	m	(Lebf;)Z	a	hasBrokenTreeBlocks
		p	0	player	player
c	epu	net/minecraft/client/tutorial/MovementTutorialStepHandler
	f	Lmr;	a	MOVE_TITLE
	f	Lmr;	b	MOVE_DESCRIPTION
	f	Lmr;	c	LOOK_TITLE
	f	Lmr;	d	LOOK_DESCRIPTION
	f	Lepx;	e	manager
	f	Ldop;	f	moveToast
	f	Ldop;	g	lookAroundToast
	f	I	h	ticks
	f	I	i	movedTicks
	f	I	j	lookedAroundTicks
	f	Z	k	movedLastTick
	f	Z	l	lookedAroundLastTick
	f	I	m	moveAroundCompletionTicks
	f	I	n	lookAroundCompletionTicks
	m	(Lepx;)V	<init>	<init>
		p	1	manager	manager
c	epv	net/minecraft/client/tutorial/OpenInventoryTutorialStepHandler
	f	Lmr;	a	TITLE
	f	Lmr;	b	DESCRIPTION
	f	Lepx;	c	manager
	f	Ldop;	d	toast
	f	I	e	ticks
	m	(Lepx;)V	<init>	<init>
		p	1	manager	manager
c	epw	net/minecraft/client/tutorial/PunchTreeTutorialStepHandler
	f	Lmr;	a	TITLE
	f	Lmr;	b	DESCRIPTION
	f	Lepx;	c	manager
	f	Ldop;	d	toast
	f	I	e	ticks
	m	(Lepx;)V	<init>	<init>
		p	1	manager	manager
c	epx	net/minecraft/client/tutorial/TutorialManager
	f	Ldlx;	a	client
	f	Lepy;	b	currentHandler
	m	(Ldlx;)V	<init>	<init>
		p	1	client	client
	m	(Lepz;)V	a	setStep
		p	1	step	step
	m	(Lbki;)V	a	onSlotUpdate
		p	1	stack	stack
	m	(Ljava/lang/String;)Lmr;	a	getKeybindName
	m	(DD)V	a	onUpdateMouse
		p	1	deltaX	deltaX
		p	3	deltaY	deltaY
	m	(Lebd;)V	a	onMovement
		p	1	input	input
	m	(Ldym;Lfu;Lcfj;F)V	a	onBlockAttacked
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Ldym;Ldej;)V	a	tick
		p	1	world	world
		p	2	hitResult	hitResult
	m	()V	a	onInventoryOpened
	m	()V	b	destroyHandler
	m	()V	c	createHandler
	m	()V	d	tick
	m	()Ldlx;	e	getClient
	m	()Lbpy;	f	getGameMode
c	epy	net/minecraft/client/tutorial/TutorialStepHandler
	m	(Ldym;Ldej;)V	a	onTarget
		p	1	world	world
		p	2	hitResult	hitResult
	m	(Lbki;)V	a	onSlotUpdate
		p	1	stack	stack
	m	(Lebd;)V	a	onMovement
		p	1	input	input
	m	(DD)V	a	onMouseUpdate
		p	1	deltaX	deltaX
		p	3	deltaY	deltaY
	m	(Ldym;Lfu;Lcfj;F)V	a	onBlockAttacked
		p	1	client	client
		p	2	pos	pos
		p	3	state	state
	m	()V	a	tick
	m	()V	b	destroy
	m	()V	c	onInventoryOpened
c	epz	net/minecraft/client/tutorial/TutorialStep
	f	Ljava/lang/String;	g	name
	f	Ljava/util/function/Function;	h	handlerFactory
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	3	name	name
		p	4	factory	factory
	m	(Lepx;)Lepy;	a	createHandler
		p	1	manager	manager
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lepz;	a	byName
		p	0	name	name
c	eq	net/minecraft/command/arguments/DefaultPosArgument
	f	Lep;	a	x
	f	Lep;	b	y
	f	Lep;	c	z
	m	(Lep;Lep;Lep;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lcom/mojang/brigadier/StringReader;)Leq;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Leq;	a	parse
		p	0	reader	reader
		p	1	centerIntegers	centerIntegers
	m	()Leq;	d	zero
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	eqb	net/minecraft/realms/DisconnectedRealmsScreen
	f	Ljava/lang/String;	a	title
	f	Lmr;	b	reason
	f	Ljava/util/List;	c	lines
	f	Ldqs;	p	parent
	f	I	q	textHeight
	m	(Ldqs;Ljava/lang/String;Lmr;)V	<init>	<init>
		p	1	parent	parent
		p	2	titleTranslationKey	titleTranslationKey
		p	3	reason	reason
c	eqc	net/minecraft/realms/Realms
	f	Leqj;	a	REPEATED_NARRATOR
	m	([Ljava/lang/String;)V	a	narrateNow
		p	0	lines	lines
	m	(Ljava/lang/String;)V	a	narrateNow
		p	0	message	message
	m	(Ljava/lang/Iterable;)V	a	narrateNow
		p	0	lines	lines
	m	(Ljava/lang/String;)V	b	narrateRepeatedly
		p	0	lines	lines
	m	(Ljava/lang/Iterable;)Ljava/lang/String;	b	joinNarrations
		p	0	lines	lines
	m	(Ljava/lang/String;)Ljava/lang/String;	c	fixNarrationNewlines
		p	0	lines	lines
c	eqd	net/minecraft/realms/RealmsBridge
	f	Ldqs;	a	previousScreen
	m	(Ldqs;)V	a	switchToRealms
		p	1	parentScreen	parentScreen
	m	(Ldqs;)Leqh;	b	getNotificationScreen
		p	1	parentScreen	parentScreen
c	eqe	net/minecraft/realms/RealmsConnect
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldqs;	b	onlineScreen
	f	Z	c	aborted
	f	Lme;	d	connection
	m	(Ldqs;)V	<init>	<init>
		p	1	onlineScreen	onlineScreen
	m	(Ljava/lang/String;I)V	a	connect
		p	1	address	address
		p	2	port	port
	m	()V	a	abort
	m	()V	b	tick
c	eqf	net/minecraft/realms/RealmsLabel
	f	Lmr;	a	text
	f	I	b	x
	f	I	c	y
	f	I	d	color
	m	(Lmr;III)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	color	color
	m	(Ldqs;Ldhl;)V	a	render
		p	1	screen	screen
	m	()Ljava/lang/String;	a	getText
c	eqg	net/minecraft/realms/RealmsObjectSelectionList
	m	(IIIII)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	top	top
		p	4	bottom	bottom
		p	5	itemHeight	itemHeight
	m	()V	a	clear
	m	(Ldnt$a;)I	a	addEntry
	m	(IIDDI)V	a	itemClicked
		p	1	cursorY	cursorY
		p	2	selectionIndex	selectionIndex
		p	3	mouseX	mouseX
		p	5	mouseY	mouseY
		p	7	listWidth	listWidth
	m	(I)V	a	setSelected
		p	1	index	index
	m	(I)V	j	setSelectedItem
		p	1	index	index
c	eqh	net/minecraft/realms/RealmsScreen
	m	(I)I	k	row
		c	Moved from RealmsConstants in 20w10a
		p	0	index	index
	m	()V	u	narrateLabels
c	eqi	net/minecraft/realms/RealmsServerAddress
	f	Ljava/lang/String;	a	host
	f	I	b	port
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	host	host
		p	2	port	port
	m	(Ljava/lang/String;)Leqi;	a	parseString
	m	()Ljava/lang/String;	a	getHost
	m	()I	b	getPort
c	eqj	net/minecraft/realms/RepeatedNarrator
	f	F	a	permitsPerSecond
	f	Ljava/util/concurrent/atomic/AtomicReference;	b	params
	m	(Ljava/time/Duration;)V	<init>	<init>
		p	1	duration	duration
	m	(Ljava/lang/String;)V	a	narrate
		p	1	message	message
c	eqj$a	net/minecraft/realms/RepeatedNarrator$Parameters
	f	Ljava/lang/String;	a	message
	f	Lcom/google/common/util/concurrent/RateLimiter;	b	rateLimiter
	m	(Ljava/lang/String;Lcom/google/common/util/concurrent/RateLimiter;)V	<init>	<init>
		p	1	message	message
		p	2	rateLimiter	rateLimiter
c	es	net/minecraft/command/arguments/FunctionArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_FUNCTION_TAG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_FUNCTION_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
		p	0	context	context
		p	1	name	name
	m	()Les;	a	function
	m	(Lcom/mojang/brigadier/StringReader;)Les$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Luh;)Lcw;	c	getFunction
		p	0	context	context
		p	1	id	id
	m	(Lcom/mojang/brigadier/context/CommandContext;Luh;)Ladf;	d	getFunctionTag
		p	0	context	context
		p	1	id	id
c	es$a	net/minecraft/command/arguments/FunctionArgumentType$FunctionArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	getFunctions
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
c	et	net/minecraft/command/arguments/ItemStackArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()Let;	a	itemStack
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leu;	a	getItemStackArgument
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Leu;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eu	net/minecraft/command/arguments/ItemStackArgument
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	OVERSTACKED_EXCEPTION
	f	Lbke;	b	item
	f	Lle;	c	tag
	m	(Lbke;Lle;)V	<init>	<init>
		p	2	tag	tag
	m	(Lbki;)Z	a	test
	m	(IZ)Lbki;	a	createStack
		p	1	amount	amount
		p	2	checkOverstack	checkOverstack
	m	()Lbke;	a	getItem
	m	()Ljava/lang/String;	c	asString
c	ev	net/minecraft/command/arguments/ItemStringReader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	TAG_DISALLOWED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ID_INVALID_EXCEPTION
	f	Ljava/util/function/BiFunction;	c	NBT_SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/StringReader;	d	reader
	f	Z	e	allowTag
	f	Lbke;	g	item
	f	Lle;	h	tag
	f	Luh;	i	id
	f	I	j	cursor
	f	Ljava/util/function/BiFunction;	k	suggestions
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1	reader	reader
		p	2	allowTag	allowTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	a	getSuggestions
		p	1	builder	builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	b	suggestItem
	m	()Lbke;	b	getItem
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	c	suggestTag
		p	1	suggestionsBuilder	suggestionsBuilder
	m	()Lle;	c	getTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladg;)Ljava/util/concurrent/CompletableFuture;	d	suggestAny
	m	()Luh;	d	getId
	m	()V	e	readItem
	m	()V	f	readTag
	m	()V	g	readNbt
	m	()Lev;	h	consume
c	ew	net/minecraft/command/arguments/ItemPredicateArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_TAG_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getItemPredicate
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lew$b;	a	parse
	m	()Lew;	a	itemPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	ew$a	net/minecraft/command/arguments/ItemPredicateArgumentType$ItemPredicate
	f	Lbke;	a	item
	f	Lle;	b	compound
	m	(Lbki;)Z	a	test
c	ew$b	net/minecraft/command/arguments/ItemPredicateArgumentType$ItemPredicateArgument
c	ew$c	net/minecraft/command/arguments/ItemPredicateArgumentType$TagPredicate
	f	Ladf;	a	tag
	f	Lle;	b	compound
	m	(Lbki;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ez	net/minecraft/command/EntitySelector
	f	I	a	limit
	f	Z	b	includesNonPlayers
	f	Z	c	localWorldOnly
	f	Ljava/util/function/Predicate;	d	basePredicate
	f	Lbx$c;	e	distance
	f	Ljava/util/function/Function;	f	positionOffset
	f	Ldeg;	g	box
	f	Ljava/util/function/BiConsumer;	h	sorter
	f	Z	i	senderOnly
	f	Ljava/lang/String;	j	playerName
	f	Ljava/util/UUID;	k	uuid
	f	Laoq;	l	type
	f	Z	m	usesAt
	m	(IZZLjava/util/function/Predicate;Lbx$c;Ljava/util/function/Function;Ldeg;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Laoq;Z)V	<init>	<init>
		p	1	count	count
		p	2	includesNonPlayers	includesNonPlayers
		p	3	localWorldOnly	localWorldOnly
		p	4	basePredicate	basePredicate
		p	5	distance	distance
		p	6	positionOffset	positionOffset
		p	7	box	box
		p	8	sorter	sorter
		p	9	senderOnly	senderOnly
		p	10	playerName	playerName
		p	11	uuid	uuid
		p	12	type	type
		p	13	usesAt	usesAt
	m	()I	a	getLimit
	m	(Lcz;)Laom;	a	getEntity
	m	(Ljava/util/List;)Lmx;	a	getNames
	m	(Ljava/util/List;Lzd;Ldem;Ljava/util/function/Predicate;)V	a	appendEntitiesFromWorld
	m	(Ldem;Ljava/util/List;)Ljava/util/List;	a	getEntities
	m	(Ldem;)Ljava/util/function/Predicate;	a	getPositionPredicate
	m	()Z	b	includesNonPlayers
	m	(Lcz;)Ljava/util/List;	b	getEntities
	m	()Z	c	isSenderOnly
	m	(Lcz;)Lze;	c	getPlayer
	m	()Z	d	isLocalWorldOnly
	m	(Lcz;)Ljava/util/List;	d	getPlayers
	m	(Lcz;)V	e	checkSourcePermission
c	f	net/minecraft/client/util/math/AffineTransformation
	f	Lb;	a	matrix
	f	Z	b	initialized
	f	Lg;	c	translation
	f	Ld;	d	rotation2
	f	Lg;	e	scale
	f	Ld;	f	rotation1
	f	Lf;	g	IDENTITY
	m	(Lg;Ld;Lg;Ld;)V	<init>	<init>
		p	1	translation	translation
		p	2	rotation2	rotation2
		p	3	scale	scale
		p	4	rotation1	rotation1
	m	(Lb;)V	<init>	<init>
		p	1	matrix	matrix
	m	()Lf;	a	identity
	m	(Lb;)Lcom/mojang/datafixers/util/Pair;	a	getLinearTransformationAndTranslationFromAffine
		p	0	affineTransform	affineTransform
	m	(Lg;Ld;Lg;Ld;)Lb;	a	setup
		p	0	translation	translation
		p	1	rotation2	rotation2
		p	2	scale	scale
		p	3	rotation1	rotation1
	m	(Lf;)Lf;	a	multiply
		p	1	other	other
	m	()Lf;	b	invert
	m	()Lb;	c	getMatrix
	m	()Ld;	d	getRotation2
	m	()V	e	init
c	fa	net/minecraft/command/EntitySelectorReader
	f	Ljava/util/function/Predicate;	A	predicate
	f	Ljava/util/function/BiConsumer;	B	sorter
	f	Z	C	senderOnly
	f	Ljava/lang/String;	D	playerName
	f	I	E	startCursor
	f	Ljava/util/UUID;	F	uuid
	f	Ljava/util/function/BiFunction;	G	suggestionProvider
	f	Z	H	selectsName
	f	Z	I	excludesName
	f	Z	J	hasLimit
	f	Z	K	hasSorter
	f	Z	L	selectsGameMode
	f	Z	M	excludesGameMode
	f	Z	N	selectsTeam
	f	Z	O	excludesTeam
	f	Laoq;	P	entityType
	f	Z	Q	excludesEntityType
	f	Z	R	selectsScores
	f	Z	S	selectsAdvancements
	f	Z	T	usesAt
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_ENTITY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_SELECTOR_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	NOT_ALLOWED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	MISSING_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	UNTERMINATED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	VALUELESS_EXCEPTION
	f	Ljava/util/function/BiConsumer;	g	ARBITRARY
	f	Ljava/util/function/BiConsumer;	h	NEAREST
	f	Ljava/util/function/BiConsumer;	i	FURTHEST
	f	Ljava/util/function/BiConsumer;	j	RANDOM
	f	Ljava/util/function/BiFunction;	k	DEFAULT_SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/StringReader;	l	reader
	f	Z	m	atAllowed
	f	I	n	limit
	f	Z	o	includesNonPlayers
	f	Z	p	localWorldOnly
	f	Lbx$c;	q	distance
	f	Lbx$d;	r	levelRange
	f	Ljava/lang/Double;	s	x
	f	Ljava/lang/Double;	t	y
	f	Ljava/lang/Double;	u	z
	f	Ljava/lang/Double;	v	dx
	f	Ljava/lang/Double;	w	dy
	f	Ljava/lang/Double;	x	dz
	f	Lcs;	y	pitchRange
	f	Lcs;	z	yawRange
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1	reader	reader
		p	2	atAllowed	atAllowed
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1	reader	reader
	m	()Z	A	excludesGameMode
	m	()Z	B	selectsTeam
	m	()V	D	setExcludesEntityType
	m	()Z	E	selectsEntityType
	m	()Z	F	excludesEntityType
	m	()Z	G	selectsScores
	m	()Z	H	selectsAdvancements
	m	()V	I	buildPredicate
	m	(I)V	a	setLimit
		p	1	limit	limit
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestionProvider
	m	(Lbx$d;)V	a	setLevelRange
		p	1	experienceRange	experienceRange
	m	(DDD)Ldeg;	a	createBox
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	listSuggestions
		p	1	builder	builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestSelector
		p	0	builder	builder
	m	(Laoq;)V	a	setEntityType
		p	1	entityType	entityType
	m	(Lcs;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	rotationPredicate
	m	(Lcs;)V	a	setPitchRange
	m	(Lbx$c;)V	a	setDistance
		p	1	distance	distance
	m	(Ljava/util/function/BiConsumer;)V	a	setSorter
		p	1	sorter	sorter
	m	(D)V	a	setX
		p	1	x	x
	m	(Ljava/util/function/Predicate;)V	a	setPredicate
	m	(Z)V	a	setIncludesNonPlayers
		p	1	includesNonPlayers	includesNonPlayers
	m	()Lez;	a	build
	m	()V	b	readAtVariable
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestSelector
		p	1	builder	builder
	m	(Z)V	b	setSelectsName
		p	1	selectsName	selectsName
	m	(D)V	b	setY
		p	1	y	y
	m	(Lcs;)V	b	setYawRange
	m	(Z)V	c	setExcludesName
	m	()V	c	readRegular
	m	(D)V	c	setZ
		p	1	z	z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestNormal
		p	1	builder	builder
	m	()V	d	readArguments
	m	(Z)V	d	setHasLimit
		p	1	hasLimit	hasLimit
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelectorRest
		p	1	builder	builder
	m	(D)V	d	setDx
		p	1	dx	dx
	m	(Z)V	e	setHasSorter
		p	1	hasSorter	hasSorter
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpen
		p	1	builder	builder
	m	(D)V	e	setDy
		p	1	dy	dy
	m	()Z	e	readNegationCharacter
	m	(D)V	f	setDz
		p	1	dz	dz
	m	()Z	f	readTagCharacter
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionOrEnd
		p	1	builder	builder
	m	(Z)V	f	setSelectsGameMode
		p	1	selectsGameMode	selectsGameMode
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOption
		p	1	builder	builder
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Z)V	g	setHasNegatedGameMode
		p	1	hasNegatedGameMode	hasNegatedGameMode
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestEndNext
		p	1	builder	builder
	m	(Z)V	h	setSelectsTeam
		p	1	selectsTeam	selectsTeam
	m	()V	h	setLocalWorldOnly
	m	(Z)V	i	setExcludesTeam
		p	1	excludesTeam	excludesTeam
	m	()Lbx$c;	i	getDistance
	m	()Lbx$d;	j	getLevelRange
	m	(Z)V	j	setSelectsScores
		p	1	selectsScores	selectsScores
	m	()Lcs;	k	getPitchRange
	m	(Z)V	k	setSelectsAdvancements
		p	1	selectsAdvancements	selectsAdvancements
	m	()Lcs;	l	getYawRange
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	()Ljava/lang/Double;	p	getDx
	m	()Ljava/lang/Double;	q	getDy
	m	()Ljava/lang/Double;	r	getDz
	m	()Lez;	t	read
	m	()Z	u	isSenderOnly
	m	()Z	v	selectsName
	m	()Z	w	excludesName
	m	()Z	x	hasLimit
	m	()Z	y	hasSorter
	m	()Z	z	selectsGameMode
c	fb	net/minecraft/command/EntitySelectorOptions
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_OPTION_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	INAPPLICABLE_OPTION_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	NEGATIVE_DISTANCE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NEGATIVE_LEVEL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	TOO_SMALL_LEVEL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	IRREVERSIBLE_SORT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	INVALID_MODE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	INVALID_TYPE_EXCEPTION
	f	Ljava/util/Map;	i	options
	m	(Ljava/lang/String;Lfb$a;Ljava/util/function/Predicate;Lmr;)V	a	putOption
		p	0	id	id
		p	1	handler	handler
		p	2	condition	condition
		p	3	description	description
	m	(Lfa;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestOptions
		p	0	reader	reader
		p	1	suggestionBuilder	suggestionBuilder
	m	()V	a	register
	m	(Lfa;Ljava/lang/String;I)Lfb$a;	a	getHandler
		p	0	reader	reader
		p	1	option	option
		p	2	restoreCursor	restoreCursor
c	fb$a	net/minecraft/command/EntitySelectorOptions$SelectorHandler
	m	(Lfa;)V	handle	handle
		p	1	reader	reader
c	fb$b	net/minecraft/command/EntitySelectorOptions$SelectorOption
	f	Lfb$a;	a	handler
	f	Ljava/util/function/Predicate;	b	condition
	f	Lmr;	c	description
	m	(Lfb$a;Ljava/util/function/Predicate;Lmr;)V	<init>	<init>
		p	1	handler	handler
		p	2	condition	condition
		p	3	description	description
c	fg	net/minecraft/command/arguments/serialize/ArgumentSerializer
	c	Serializes an argument type to be sent to the client.
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lmg;)V	a	toPacket
	m	(Lmg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	fromPacket
c	fh	net/minecraft/command/arguments/ArgumentTypes
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	classMap
	f	Ljava/util/Map;	c	idMap
	m	(Lmg;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	toPacket
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	toJson
	m	()V	a	register
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	toJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lfh$a;	a	byClass
	m	(Luh;)Lfh$a;	a	byId
	m	(Lmg;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	fromPacket
	m	(Ljava/lang/String;Ljava/lang/Class;Lfg;)V	a	register
		c	Registers an argument type's serializer.
		p	0	id	id
			c	the id of the argument type
c	fh$a	net/minecraft/command/arguments/ArgumentTypes$Entry
	f	Ljava/lang/Class;	a	argClass
	f	Lfg;	b	serializer
	f	Luh;	c	id
	m	(Ljava/lang/Class;Lfg;Luh;)V	<init>	<init>
		p	1	argumentClass	argumentClass
		p	2	serializer	serializer
		p	3	id	id
c	fi	net/minecraft/command/arguments/serialize/ConstantArgumentSerializer
	f	Ljava/util/function/Supplier;	a	supplier
c	fj	net/minecraft/command/suggestion/SuggestionProviders
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	ALL_RECIPES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	ALL_BIOMES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	SUMMONABLE_ENTITIES
	f	Ljava/util/Map;	f	REGISTRY
	f	Luh;	g	ASK_SERVER_NAME
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Luh;	a	computeName
		p	0	provider	provider
	m	(Luh;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	byId
		p	0	id	id
	m	(Luh;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
		p	0	name	name
		p	1	provider	provider
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	getLocalProvider
		p	0	provider	provider
c	fj$a	net/minecraft/command/suggestion/SuggestionProviders$LocalProvider
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	provider
	f	Luh;	b	name
	m	(Luh;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V	<init>	<init>
		p	1	name	name
c	fk	net/minecraft/command/arguments/BrigadierArgumentTypes
	m	()V	a	register
	m	(ZZ)B	a	createFlag
		p	0	hasMin	hasMin
		p	1	hasMax	hasMax
	m	(B)Z	a	hasMin
		p	0	rangeFlag	rangeFlag
	m	(B)Z	b	hasMax
		p	0	rangeFlag	rangeFlag
c	fl	net/minecraft/command/arguments/serialize/DoubleArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lmg;)V	a	toPacket
	m	(Lmg;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	fromPacket
c	fm	net/minecraft/command/arguments/serialize/FloatArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;Lmg;)V	a	toPacket
	m	(Lmg;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
c	fn	net/minecraft/command/arguments/serialize/IntegerArgumentSerializer
	m	(Lmg;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lmg;)V	a	toPacket
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
c	fo	net/minecraft/command/arguments/serialize/LongArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;Lmg;)V	a	toPacket
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lmg;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	fromPacket
c	fp	net/minecraft/command/arguments/serialize/StringArgumentSerializer
	m	(Lmg;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;Lmg;)V	a	toPacket
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
c	fs	net/minecraft/util/math/AxisCycleDirection
	f	[Lfz$a;	d	AXES
	f	[Lfs;	e	VALUES
	m	()Lfs;	a	opposite
	m	(Lfz$a;)Lfz$a;	a	cycle
		p	1	axis	axis
	m	(Lfz$a;Lfz$a;)Lfs;	a	between
		p	0	from	from
		p	1	to	to
	m	(IIILfz$a;)I	a	choose
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	axis	axis
c	ft	net/minecraft/client/util/math/AffineTransformations
	f	Ljava/util/EnumMap;	a	DIRECTION_ROTATIONS
	f	Ljava/util/EnumMap;	b	INVERTED_DIRECTION_ROTATIONS
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	m	(Lf;)Lf;	a	setupUvLock
	m	(Lf;Lfz;Ljava/util/function/Supplier;)Lf;	a	uvLock
c	fu	net/minecraft/util/math/BlockPos
	c	Represents the position of a block in a three-dimensional volume.\n\n<p>The position is integer-valued.\n\n<p>A block position may be mutable; hence, when using block positions\nobtained from other places as map keys, etc., you should call {@link\n#toImmutable()} to obtain an immutable block position.
	f	Lfu;	b	ORIGIN
		c	The block position which x, y, and z values are all zero.
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	f	I	f	SIZE_BITS_X
	f	I	g	SIZE_BITS_Z
	f	I	h	SIZE_BITS_Y
	f	J	i	BITS_X
	f	J	j	BITS_Y
	f	J	k	BITS_Z
	f	I	l	BIT_SHIFT_Z
	f	I	m	BIT_SHIFT_X
	m	(Lgr;)V	<init>	<init>
		p	1	pos	pos
	m	(Ldem;)V	<init>	<init>
		p	1	pos	pos
	m	(Lgj;)V	<init>	<init>
		p	1	pos	pos
	m	(IIIIII)Ljava/util/stream/Stream;	a	stream
		p	0	startX	startX
		p	1	startY	startY
		p	2	startZ	startZ
		p	3	endX	endX
		p	4	endY	endY
		p	5	endZ	endZ
	m	(III)J	a	asLong
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lfu;IILjava/util/function/Predicate;)Ljava/util/Optional;	a	findClosest
		p	0	pos	pos
		p	1	horizontalRange	horizontalRange
		p	2	verticalRange	verticalRange
		p	3	condition	condition
	m	(Lgr;)Lfu;	a	add
		p	1	pos	pos
	m	(DDD)Lfu;	a	add
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lctd;)Ljava/util/stream/Stream;	a	stream
		p	0	box	box
	m	()J	a	asLong
	m	(Lfz;I)Lfu;	a	offset
	m	(Lfu;III)Ljava/lang/Iterable;	a	iterateOutwards
		c	Iterates block positions around the {@code center}. The iteration order\nis mainly based on the manhattan distance of the position from the\ncenter.\n\n<p>For the same manhattan distance, the positions are iterated by y\noffset, from negative to positive. For the same y offset, the positions\nare iterated by x offset, from negative to positive. For the two\npositions with the same x and y offsets and the same manhattan distance,\nthe one with a positive z offset is visited first before the one with a\nnegative z offset.
		p	0	center	center
			c	the center of iteration
		p	1	xRange	xRange
			c	the maximum x difference from the center
		p	2	yRange	yRange
			c	the maximum y difference from the center
		p	3	zRange	zRange
			c	the maximum z difference from the center
	m	(JLfz;)J	a	offset
		p	0	value	value
		p	2	direction	direction
	m	(Lfu;Lfu;)Ljava/lang/Iterable;	a	iterate
		p	0	start	start
		p	1	end	end
	m	(JIII)J	a	add
		p	0	value	value
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lfz;)Lfu;	a	offset
		p	1	direction	direction
	m	(Lcap;)Lfu;	a	rotate
		p	1	rotation	rotation
	m	(J)I	b	unpackLongX
		p	0	x	x
	m	(Lfu;Lfu;)Ljava/util/stream/Stream;	b	stream
		p	0	start	start
		p	1	end	end
	m	(Lfu;III)Ljava/util/stream/Stream;	b	streamOutwards
		p	0	center	center
		p	1	maxX	maxX
		p	2	maxY	maxY
		p	3	maxZ	maxZ
	m	()Lfu;	b	up
	m	(Lgr;)Lfu;	b	subtract
		p	1	pos	pos
	m	(IIIIII)Ljava/lang/Iterable;	b	iterate
		p	0	startX	startX
		p	1	startY	startY
		p	2	startZ	startZ
		p	3	endX	endX
		p	4	endY	endY
		p	5	endZ	endZ
	m	(III)Lfu;	b	add
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)Lfu;	b	up
		p	1	distance	distance
	m	(J)I	c	unpackLongY
		p	0	y	y
	m	()Lfu;	c	down
	m	(Lgr;)Lfu;	c	crossProduct
		p	1	pos	pos
	m	(I)Lfu;	c	down
	m	(I)Lfu;	d	north
		p	1	distance	distance
	m	(J)I	d	unpackLongZ
		p	0	z	z
	m	()Lfu;	d	north
	m	(J)Lfu;	e	fromLong
		p	0	value	value
	m	()Lfu;	e	south
	m	(I)Lfu;	e	south
		p	1	distance	distance
	m	(J)J	f	removeChunkSectionLocalY
		p	0	y	y
	m	(I)Lfu;	f	west
		p	1	distance	distance
	m	()Lfu;	f	west
	m	()Lfu;	g	east
	m	(I)Lfu;	g	east
		p	1	distance	distance
	m	()Lfu;	h	toImmutable
		c	Returns an immutable block position with the same x, y, and z as this\nposition.\n\n<p>This method should be called when a block position is used as map\nkeys as to prevent side effects of mutations of mutable block positions.
	m	()Lfu$a;	i	mutableCopy
		c	Returns a mutable copy of this block position.\n\n<p>If this block position is a mutable one, mutation to this block\nposition won't affect the returned position.
c	fu$1	net/minecraft/util/math/BlockPos$1
	m	()Lfu;	a	computeNext
c	fu$2	net/minecraft/util/math/BlockPos$2
	f	I	b	maxDistance
	f	I	c	xRange
	f	I	d	yRange
	f	I	e	zRange
	f	I	i	manhattanDistance
	f	I	j	limitX
	f	I	k	limitY
	f	I	l	dx
	f	I	m	dy
	m	()Lfu;	a	computeNext
c	fu$3	net/minecraft/util/math/BlockPos$3
	f	I	a	size
	f	I	b	sizeX
	f	I	c	sizeY
	f	I	d	startX
	f	I	e	startY
	f	I	f	startZ
	f	I	h	index
	m	()Lfu;	a	computeNext
c	fu$a	net/minecraft/util/math/BlockPos$Mutable
	m	(Lfs;III)Lfu$a;	a	set
		p	1	axis	axis
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lgr;Lfz;)Lfu$a;	a	set
		c	Sets this mutable block position to the offset position of the given\npos by the given direction.
		p	1	pos	pos
		p	2	direction	direction
	m	(Lgr;III)Lfu$a;	a	set
		c	Sets this mutable block position to the sum of the given position and the\ngiven x, y, and z.
		p	1	pos	pos
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(DDD)Lfu$a;	c	set
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfz;)Lfu$a;	c	move
		c	Moves this mutable block position by 1 block in the given direction.
		p	1	direction	direction
	m	(Lfz;I)Lfu$a;	c	move
		c	Moves this mutable block position by the given distance in the given\ndirection.
		p	1	direction	direction
		p	2	distance	distance
	m	(III)Lfu$a;	d	set
		c	Sets the x, y, and z of this mutable block position.
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(III)Lfu$a;	e	move
		c	Moves the mutable block position by the delta x, y, and z provided.
		p	1	dx	dx
		p	2	dy	dy
		p	3	dz	dz
	m	(Lgr;)Lfu$a;	g	set
		p	1	pos	pos
	m	(J)Lfu$a;	g	set
		p	1	pos	pos
	m	(Lfz;I)Lfu;	offset	offset
c	fv	net/minecraft/util/math/BlockPointer
	m	()Lfu;	d	getBlockPos
	m	()Lcfj;	e	getBlockState
	m	()Lcdl;	g	getBlockEntity
c	fw	net/minecraft/util/math/BlockPointerImpl
	f	Lbqb;	a	world
	f	Lfu;	b	pos
	m	(Lbqb;Lfu;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
c	fx	net/minecraft/util/CuboidBlockIterator
	f	I	a	startX
	f	I	b	startY
	f	I	c	startZ
	f	I	d	sizeX
	f	I	e	sizeY
	f	I	f	sizeZ
	f	I	g	totalSize
	f	I	h	blocksIterated
	f	I	i	x
	f	I	j	y
	f	I	k	z
	m	(IIIIII)V	<init>	<init>
		p	1	startX	startX
		p	2	startY	startY
		p	3	startZ	startZ
		p	4	endX	endX
		p	5	endY	endY
		p	6	endZ	endZ
	m	()Z	a	step
	m	()I	b	getX
	m	()I	c	getY
	m	()I	d	getZ
	m	()I	e	getEdgeCoordinatesCount
c	fy	net/minecraft/util/registry/DefaultedRegistry
	f	Luh;	bb	defaultId
	f	Ljava/lang/Object;	bc	defaultValue
	m	(Ljava/lang/String;Lug;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1	defaultId	defaultId
	m	()Luh;	a	getDefaultId
c	fz	net/minecraft/util/math/Direction
	f	I	g	id
	f	I	h	idOpposite
	f	I	i	idHorizontal
	f	Ljava/lang/String;	j	name
	f	Lfz$a;	k	axis
	f	Lfz$b;	l	direction
	f	Lgr;	m	vector
	f	[Lfz;	n	ALL
	f	Ljava/util/Map;	o	NAME_MAP
	f	[Lfz;	p	VALUES
	f	[Lfz;	q	HORIZONTAL
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	r	VECTOR_TO_DIRECTION
	m	(Ljava/lang/String;IIIILjava/lang/String;Lfz$b;Lfz$a;Lgr;)V	<init>	<init>
		p	3	id	id
		p	4	idOpposite	idOpposite
		p	5	idHorizontal	idHorizontal
		p	6	name	name
		p	7	direction	direction
		p	8	axis	axis
		p	9	vector	vector
	m	(Laom;)[Lfz;	a	getEntityFacingOrder
		p	0	entity	entity
	m	(DDD)Lfz;	a	getFacing
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(FFF)Lfz;	a	getFacing
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Ljava/lang/String;)Lfz;	a	byName
		p	0	name	name
	m	(I)Lfz;	a	byId
		p	0	id	id
	m	(III)Lfz;	a	fromVector
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lfz$b;Lfz$a;)Lfz;	a	get
		p	0	direction	direction
		p	1	axis	axis
	m	(D)Lfz;	a	fromRotation
		p	0	rotation	rotation
	m	(Ljava/util/Random;)Lfz;	a	random
	m	(Lb;Lfz;)Lfz;	a	transform
	m	(Lfz$a;Lfz$b;)Lfz;	a	from
		p	0	axis	axis
		p	1	direction	direction
	m	()Ld;	b	getRotationQuaternion
	m	(I)Lfz;	b	fromHorizontal
		p	0	value	value
	m	()I	c	getId
	m	()I	d	getHorizontal
	m	()Lfz$b;	e	getDirection
	m	()Lfz;	f	getOpposite
	m	()Lfz;	g	rotateYClockwise
	m	()Lfz;	h	rotateYCounterclockwise
	m	()I	i	getOffsetX
	m	()I	j	getOffsetY
	m	()I	k	getOffsetZ
	m	()Lg;	l	getUnitVector
	m	()Ljava/lang/String;	m	getName
	m	()Lfz$a;	n	getAxis
	m	()F	o	asRotation
	m	()Lgr;	p	getVector
c	fz$a	net/minecraft/util/math/Direction$Axis
	f	Ljava/util/Map;	f	BY_NAME
	f	Ljava/lang/String;	g	name
	m	(DDD)D	a	choose
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfz;)Z	a	test
	m	(Ljava/util/Random;)Lfz$a;	a	pickRandomAxis
	m	(III)I	a	choose
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ljava/lang/String;)Lfz$a;	a	fromName
		p	0	name	name
	m	()Ljava/lang/String;	b	getName
	m	()Z	c	isVertical
	m	()Z	d	isHorizontal
	m	()Lfz$c;	e	getType
c	fz$b	net/minecraft/util/math/Direction$AxisDirection
	f	I	c	offset
	f	Ljava/lang/String;	d	desc
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	offset	offset
		p	4	description	description
	m	()I	a	offset
	m	()Lfz$b;	c	getOpposite
c	fz$c	net/minecraft/util/math/Direction$Type
	f	[Lfz;	c	facingArray
	f	[Lfz$a;	d	axisArray
	m	(Ljava/lang/String;I[Lfz;[Lfz$a;)V	<init>	<init>
		p	3	directions	directions
	m	(Lfz;)Z	a	test
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Ljava/util/Random;)Lfz;	a	random
		p	1	random	random
	m	(Ljava/lang/Object;)Z	test	test
		p	1	direction	direction
c	g	net/minecraft/client/util/math/Vector3f
	f	Lg;	a	NEGATIVE_X
	f	Lg;	b	POSITIVE_X
	f	Lg;	c	NEGATIVE_Y
	f	Lg;	d	POSITIVE_Y
	f	Lg;	e	NEGATIVE_Z
	f	Lg;	f	POSITIVE_Z
	f	F	g	x
	f	F	h	y
	f	F	i	z
	m	(Ldem;)V	<init>	<init>
		p	1	other	other
	m	(FFF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()F	a	getX
	m	(FF)V	a	clamp
		p	1	min	min
		p	2	max	max
	m	(FFF)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lg;F)V	a	lerp
		p	1	vector	vector
		p	2	delta	delta
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V	a	modify
		p	1	function	function
	m	(La;)V	a	transform
	m	(Lg;)V	a	add
		p	1	vector	vector
	m	(Ld;)V	a	rotate
		p	1	rotation	rotation
	m	(F)Ld;	a	getDegreesQuaternion
		p	1	angle	angle
	m	()F	b	getY
	m	(FFF)V	b	multiplyComponentwise
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(F)V	b	scale
		p	1	scale	scale
	m	(Lg;)V	b	subtract
		p	1	other	other
	m	(FFF)V	c	add
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()F	c	getZ
	m	(Lg;)F	c	dot
		p	1	other	other
	m	(F)Ld;	c	getRadialQuaternion
		p	1	angle	angle
	m	(Lg;)V	d	cross
		p	1	vector	vector
	m	()Z	d	normalize
	m	()Lg;	e	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ga	net/minecraft/util/EightWayDirection
	f	I	i	NORTHWEST_BIT
	f	I	j	WEST_BIT
	f	I	k	SOUTHWEST_BIT
	f	I	l	SOUTH_BIT
	f	I	m	SOUTHEAST_BIT
	f	I	n	EAST_BIT
	f	I	o	NORTHEAST_BIT
	f	I	p	NORTH_BIT
	f	Ljava/util/Set;	q	directions
	m	()Ljava/util/Set;	a	getDirections
c	gb	net/minecraft/block/enums/JigsawOrientation
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	m	BY_INDEX
	f	Ljava/lang/String;	n	name
	f	Lfz;	o	rotation
	f	Lfz;	p	facing
	m	(Ljava/lang/String;ILjava/lang/String;Lfz;Lfz;)V	<init>	<init>
		p	3	name	name
		p	4	facing	facing
		p	5	rotation	rotation
	m	(Lfz;Lfz;)Lgb;	a	byDirections
		p	0	facing	facing
		p	1	rotation	rotation
	m	(Lfz;Lfz;)I	b	getIndex
		p	0	facing	facing
		p	1	rotation	rotation
	m	()Lfz;	b	getFacing
	m	()Lfz;	c	getRotation
c	gc	net/minecraft/util/dynamic/GlobalPos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lug;	b	dimension
	f	Lfu;	c	pos
	m	(Lug;Lfu;)V	<init>	<init>
		p	2	pos	pos
	m	()Lug;	a	getDimension
	m	(Lug;Lfu;)Lgc;	a	create
		p	1	pos	pos
	m	()Lfu;	b	getPos
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	gd	net/minecraft/util/collection/IndexedIterable
	m	(I)Ljava/lang/Object;	a	get
		p	1	index	index
c	ge	net/minecraft/util/collection/IdList
	f	I	a	nextId
	f	Ljava/util/IdentityHashMap;	b	idMap
	f	Ljava/util/List;	c	list
	m	(I)V	<init>	<init>
		p	1	initialSize	initialSize
	m	(Ljava/lang/Object;I)V	a	set
		p	1	value	value
		p	2	id	id
	m	(Ljava/lang/Object;)I	a	getId
		p	1	value	value
	m	()I	a	size
	m	(Ljava/lang/Object;)V	b	add
		p	1	value	value
c	gf	net/minecraft/util/math/WorldPositionPointer
c	gg	net/minecraft/util/math/WorldPosition
	m	()Lbqb;	h	getWorld
c	gh	net/minecraft/util/registry/SimpleRegistry
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ladm;	b	indexedEntries
	f	Lcom/google/common/collect/BiMap;	bb	entriesByKey
	f	Ljava/util/Set;	bc	loadedKeys
	f	I	bd	nextId
	f	Lcom/google/common/collect/BiMap;	c	entriesById
	f	[Ljava/lang/Object;	d	randomEntries
	m	(Ljava/util/Random;)Ljava/lang/Object;	a	getRandom
	m	(Lug;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	b	createCodec
		p	0	registryRef	registryRef
		p	1	lifecycle	lifecycle
	m	()Ljava/util/Set;	c	getEntries
	m	(Lug;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	c	createEmptyCodec
		p	0	registryRef	registryRef
		p	1	lifecycle	lifecycle
c	gi	net/minecraft/util/collection/DefaultedList
	f	Ljava/util/List;	a	delegate
	f	Ljava/lang/Object;	b	initialElement
	m	(Ljava/util/List;Ljava/lang/Object;)V	<init>	<init>
		p	1	delegate	delegate
		p	2	initialElement	initialElement
	m	(ILjava/lang/Object;)Lgi;	a	ofSize
		p	0	size	size
		p	1	defaultValue	defaultValue
	m	()Lgi;	a	of
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Lgi;	a	copyOf
		p	0	defaultValue	defaultValue
		p	1	values	values
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
		p	2	element	element
	m	(I)Ljava/lang/Object;	get	get
		p	1	index	index
	m	(I)Ljava/lang/Object;	remove	remove
		p	1	index	index
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
		p	2	element	element
c	gj	net/minecraft/util/math/Position
	m	()D	a	getX
	m	()D	b	getY
	m	()D	c	getZ
c	gk	net/minecraft/util/math/PositionImpl
	f	D	a	x
	f	D	b	y
	f	D	c	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	gl	net/minecraft/util/registry/Registry
	f	Lug;	A	FEATURE_SIZE_TYPE_KEY
	f	Lug;	B	PARTICLE_TYPE_KEY
	f	Lug;	C	BIOME_SOURCE_KEY
	f	Lug;	D	CHUNK_GENERATOR_KEY
	f	Lug;	E	BLOCK_ENTITY_TYPE_KEY
	f	Lug;	F	MOTIVE_KEY
	f	Lug;	G	CUSTOM_STAT_KEY
	f	Lug;	H	CHUNK_STATUS_KEY
	f	Lug;	I	STRUCTURE_FEATURE_KEY
	f	Lug;	J	STRUCTURE_PIECE_KEY
	f	Lug;	K	RULE_TEST_KEY
	f	Lug;	L	POS_RULE_TEST_KEY
	f	Lug;	M	STRUCTURE_PROCESSOR_KEY
	f	Lug;	N	STRUCTURE_POOL_ELEMENT_KEY
	f	Lug;	O	MENU_KEY
	f	Lug;	P	RECIPE_TYPE_KEY
	f	Lug;	Q	RECIPE_SERIALIZER_KEY
	f	Lug;	R	ATTRIBUTE_KEY
	f	Lug;	S	STAT_TYPE_KEY
	f	Lug;	T	VILLAGER_TYPE_KEY
	f	Lug;	U	VILLAGER_PROFESSION_KEY
	f	Lug;	V	POINT_OF_INTEREST_TYPE_KEY
	f	Lug;	W	MEMORY_MODULE_TYPE_KEY
	f	Lug;	X	SENSOR_TYPE_KEY
	f	Lug;	Y	SCHEDULE_KEY
	f	Lug;	Z	ACTIVITY_KEY
	f	Ljava/util/Map;	a	DEFAULT_ENTRIES
	f	Lgl;	aA	BIOME_SOURCE
	f	Lgl;	aB	CHUNK_GENERATOR
	f	Lgl;	aC	BLOCK_ENTITY_TYPE
	f	Lfy;	aD	PAINTING_MOTIVE
	f	Lgl;	aE	CUSTOM_STAT
	f	Lfy;	aF	CHUNK_STATUS
	f	Lgl;	aG	STRUCTURE_FEATURE
	f	Lgl;	aH	STRUCTURE_PIECE
	f	Lgl;	aI	RULE_TEST
	f	Lgl;	aJ	POS_RULE_TEST
	f	Lgl;	aK	STRUCTURE_PROCESSOR
	f	Lgl;	aL	STRUCTURE_POOL_ELEMENT
	f	Lgl;	aM	SCREEN_HANDLER
	f	Lgl;	aN	RECIPE_TYPE
	f	Lgl;	aO	RECIPE_SERIALIZER
	f	Lgl;	aP	ATTRIBUTE
	f	Lgl;	aQ	STAT_TYPE
	f	Lfy;	aR	VILLAGER_TYPE
	f	Lfy;	aS	VILLAGER_PROFESSION
	f	Lfy;	aT	POINT_OF_INTEREST_TYPE
	f	Lfy;	aU	MEMORY_MODULE_TYPE
	f	Lfy;	aV	SENSOR_TYPE
	f	Lgl;	aW	SCHEDULE
	f	Lgl;	aX	ACTIVITY
	f	Lgl;	aY	LOOT_POOL_ENTRY_TYPE
	f	Lgl;	aZ	LOOT_FUNCTION_TYPE
	f	Lug;	aa	LOOT_POOL_ENTRY_TYPE_KEY
	f	Lug;	ab	LOOT_FUNCTION_TYPE_KEY
	f	Lug;	ac	LOOT_CONDITION_TYPE_KEY
	f	Lug;	ad	DIMENSION_TYPE_KEY
	f	Lug;	af	DIMENSION_OPTIONS
	f	Lgl;	ag	SOUND_EVENT
	f	Lfy;	ah	FLUID
	f	Lgl;	ai	STATUS_EFFECT
	f	Lfy;	aj	BLOCK
	f	Lgl;	ak	ENCHANTMENT
	f	Lfy;	al	ENTITY_TYPE
	f	Lfy;	am	ITEM
	f	Lfy;	an	POTION
	f	Lgl;	ao	CARVER
	f	Lgl;	ap	SURFACE_BUILDER
	f	Lgl;	aq	FEATURE
	f	Lgl;	ar	DECORATOR
	f	Lgl;	as	BIOME
	f	Lgl;	at	BLOCK_STATE_PROVIDER_TYPE
	f	Lgl;	au	BLOCK_PLACER_TYPE
	f	Lgl;	av	FOLIAGE_PLACER_TYPE
	f	Lgl;	aw	TRUNK_PLACER_TYPE
	f	Lgl;	ax	TREE_DECORATOR_TYPE
	f	Lgl;	ay	FEATURE_SIZE_TYPE
	f	Lgl;	az	PARTICLE_TYPE
	f	Lug;	b	registryKey
		c	The {@linkplain RegistryKey} representing the ID of the actual registry.
	f	Lgl;	ba	LOOT_CONDITION_TYPE
	f	Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	f	Luh;	f	ROOT_KEY
	f	Lgs;	g	ROOT
	f	Lgl;	h	REGISTRIES
	f	Lug;	i	SOUND_EVENT_KEY
	f	Lug;	j	FLUID_KEY
	f	Lug;	k	MOB_EFFECT_KEY
	f	Lug;	l	BLOCK_KEY
	f	Lug;	m	ENCHANTMENT_KEY
	f	Lug;	n	ENTITY_TYPE_KEY
	f	Lug;	o	ITEM_KEY
	f	Lug;	p	POTION_KEY
	f	Lug;	q	CARVER_KEY
	f	Lug;	r	SURFACE_BUILD_KEY
	f	Lug;	s	FEATURE_KEY
	f	Lug;	t	DECORATOR_KEY
	f	Lug;	u	BIOME_KEY
	f	Lug;	v	BLOCK_STATE_PROVIDER_TYPE_KEY
	f	Lug;	w	BLOCK_PLACER_TYPE_KEY
	f	Lug;	x	FOLIAGE_PLACER_TYPE_KEY
	f	Lug;	y	TRUNK_PLACER_TYPE_KEY
	f	Lug;	z	TREE_DECORATOR_TYPE_KEY
	m	(Lgl;Luh;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0	registry	registry
		p	1	id	id
		p	2	entry	entry
	m	(Ljava/lang/String;)Lug;	a	createRegistryKey
		p	0	registryId	registryId
	m	(Luh;)Ljava/lang/Object;	a	get
		p	1	id	id
	m	(Lug;Ljava/lang/String;Ljava/util/function/Supplier;)Lfy;	a	create
		p	1	defaultId	defaultId
		p	2	defaultEntry	defaultEntry
	m	(Lug;Ljava/util/function/Supplier;)Lgl;	a	create
		p	1	defaultEntry	defaultEntry
	m	(Lgl;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0	registry	registry
		p	1	id	id
		p	2	entry	entry
	m	(Lug;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lfy;	a	create
		p	1	defaultId	defaultId
		p	3	defaultEntry	defaultEntry
	m	(Lug;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lgl;	a	create
		p	2	defaultEntry	defaultEntry
	m	(Lug;)Ljava/lang/Object;	a	get
		p	1	key	key
	m	(Ljava/lang/Object;)I	a	getRawId
		p	1	entry	entry
	m	(Lug;Lgs;Ljava/util/function/Supplier;)Lgs;	a	create
		p	1	registry	registry
		p	2	defaultEntry	defaultEntry
	m	(Lgl;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0	registry	registry
		p	1	rawId	rawId
		p	2	id	id
		p	3	entry	entry
	m	(Lgs;)V	a	validate
		p	0	registry	registry
	m	(I)Z	b	containsId
		p	1	id	id
	m	(Ljava/lang/Object;)Luh;	b	getId
		p	1	entry	entry
	m	(Luh;)Ljava/util/Optional;	b	getOrEmpty
		p	1	id	id
	m	()Ljava/util/Set;	b	getIds
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getKey
		p	1	value	value
	m	(Luh;)Z	c	containsId
		p	1	id	id
	m	(Lug;)Z	c	isLoaded
	m	()Ljava/util/stream/Stream;	e	stream
c	gm	net/minecraft/util/registry/RegistryTracker
	m	()Lgl;	a	getDimensionTypeRegistry
	m	(Lug;)Ljava/util/Optional;	a	get
		p	1	reference	reference
	m	()Lgm$a;	b	create
c	gm$a	net/minecraft/util/registry/RegistryTracker$Modifiable
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgh;	b	registry
	m	(Lgh;)V	<init>	<init>
		p	1	registry	registry
	m	(Lug;Lcif;)V	a	addDimensionType
		p	1	registryKey	registryKey
		p	2	dimensionType	dimensionType
c	gn	net/minecraft/util/math/EulerAngle
	f	F	a	pitch
	f	F	b	yaw
	f	F	c	roll
	m	(FFF)V	<init>	<init>
		p	1	pitch	pitch
		p	2	yaw	yaw
		p	3	roll	roll
	m	(Llk;)V	<init>	<init>
		p	1	serialized	serialized
	m	()Llk;	a	serialize
	m	()F	b	getPitch
	m	()F	c	getYaw
	m	()F	d	getRoll
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	go	net/minecraft/util/math/ChunkSectionPos
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(IIIIII)Ljava/util/stream/Stream;	a	stream
		p	0	minX	minX
		p	1	minY	minY
		p	2	minZ	minZ
		p	3	maxX	maxX
		p	4	maxY	maxY
		p	5	maxZ	maxZ
	m	(Lbph;I)Lgo;	a	from
		p	0	chunkPos	chunkPos
		p	1	y	y
	m	(Lfu;)Lgo;	a	from
		p	0	pos	pos
	m	(I)I	a	getSectionCoord
		p	0	coord	coord
	m	(J)Lgo;	a	from
		p	0	packed	packed
	m	(Laom;)Lgo;	a	from
		p	0	entity	entity
	m	(III)Lgo;	a	from
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(JLfz;)J	a	offset
		p	0	packed	packed
		p	2	direction	direction
	m	()I	a	getSectionX
	m	(Lgo;I)Ljava/util/stream/Stream;	a	stream
		p	0	center	center
		p	1	radius	radius
	m	(JIII)J	a	offset
		p	0	packed	packed
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(III)J	b	asLong
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	()I	b	getSectionY
	m	(Lbph;I)Ljava/util/stream/Stream;	b	stream
		p	0	center	center
		p	1	radius	radius
	m	(Lfu;)S	b	getPackedLocalPos
		p	0	pos	pos
	m	(I)I	b	getLocalCoord
		p	0	coord	coord
	m	(J)I	b	getX
		p	0	packed	packed
	m	(I)I	c	getWorldCoord
		p	0	chunkCoord	chunkCoord
	m	()I	c	getSectionZ
	m	(J)I	c	getY
		p	0	packed	packed
	m	(J)I	d	getZ
		p	0	packed	packed
	m	()I	d	getMinX
	m	()I	e	getMinY
	m	(J)J	e	fromGlobalPos
		p	0	globalLong	globalLong
	m	()I	f	getMinZ
	m	(J)J	f	withZeroZ
		p	0	pos	pos
	m	()I	g	getMaxX
	m	()I	h	getMaxY
	m	()I	i	getMaxZ
	m	()Lfu;	p	getMinPos
	m	()Lfu;	q	getCenterPos
	m	()Lbph;	r	toChunkPos
	m	()J	s	asLong
	m	()Ljava/util/stream/Stream;	t	streamBlocks
c	go$1	net/minecraft/util/math/ChunkSectionPos$1
	f	Lfx;	a	iterator
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
		p	1	consumer	consumer
c	gp	net/minecraft/util/dynamic/DynamicSerializableUuid
	m	(Ljava/util/UUID;)[I	a	toIntArray
		p	0	uuid	uuid
	m	([I)Ljava/util/UUID;	a	toUuid
		p	0	array	array
	m	(JJ)[I	a	toIntArray
		p	0	uuidMost	uuidMost
		p	2	uuidLeast	uuidLeast
c	gr	net/minecraft/util/math/Vec3i
	f	I	a	x
	f	I	b	y
	f	Lgr;	d	ZERO
	f	I	e	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lgj;Z)D	a	getSquaredDistance
		p	1	pos	pos
		p	2	treatAsBlockPos	treatAsBlockPos
	m	(Lgr;D)Z	a	isWithinDistance
		p	1	vec	vec
		p	2	distance	distance
	m	(DDDZ)D	a	getSquaredDistance
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	treatAsBlockPos	treatAsBlockPos
	m	(Lgj;D)Z	a	isWithinDistance
		p	1	pos	pos
		p	2	distance	distance
	m	(Lfz;I)Lgr;	b	offset
		p	1	direction	direction
		p	2	distance	distance
	m	(Lgr;)Lgr;	d	crossProduct
		p	1	vec	vec
	m	(Lgr;)I	i	compareTo
	m	(Lgr;)D	j	getSquaredDistance
		p	1	vec	vec
	m	(Lgr;)I	k	getManhattanDistance
		p	1	vec	vec
	m	(I)Lgr;	l	down
	m	()Lgr;	n	down
	m	(I)V	o	setX
		p	1	x	x
	m	(I)V	p	setY
		p	1	y	y
	m	(I)V	q	setZ
		p	1	z	z
	m	()I	u	getX
	m	()I	v	getY
	m	()I	w	getZ
	m	()Ljava/lang/String;	x	toShortString
c	gs	net/minecraft/util/registry/MutableRegistry
	m	(ILug;Ljava/lang/Object;)Ljava/lang/Object;	a	set
		p	1	rawId	rawId
		p	2	key	key
		p	3	entry	entry
	m	(Lug;Ljava/lang/Object;)Ljava/lang/Object;	a	add
		p	1	key	key
		p	2	entry	entry
	m	(Lug;)V	d	markLoaded
c	gt	net/minecraft/block/dispenser/ProjectileDispenserBehavior
	m	(Lbqb;Lgj;Lbki;)Lbes;	a	createProjectile
		p	1	world	world
		p	2	position	position
		p	3	stack	stack
	m	()F	a	getVariation
	m	()F	b	getForce
c	gu	net/minecraft/block/dispenser/BoatDispenserBehavior
	f	Lgv;	b	itemDispenser
	f	Lbft$b;	c	boatType
	m	(Lbft$b;)V	<init>	<init>
		p	1	type	type
c	gv	net/minecraft/block/dispenser/ItemDispenserBehavior
	m	(Lfv;Lfz;)V	a	spawnParticles
		p	1	pointer	pointer
		p	2	side	side
	m	(Lfv;Lbki;)Lbki;	a	dispenseSilently
		p	1	pointer	pointer
		p	2	stack	stack
	m	(Lfv;)V	a	playSound
		p	1	pointer	pointer
	m	(Lbqb;Lbki;ILfz;Lgj;)V	a	spawnItem
		p	0	world	world
		p	1	stack	stack
		p	2	offset	offset
		p	3	side	side
		p	4	pos	pos
c	gw	net/minecraft/block/dispenser/DispenserBehavior
	f	Lgw;	a	NOOP
	m	(Lfv;Lbki;)Lbki;	a	doDispense
	m	()V	c	registerDefaults
	m	(Lfv;Lbki;)Lbki;	dispense	dispense
		p	1	pointer	pointer
		p	2	stack	stack
c	gw$17	net/minecraft/block/dispenser/DispenserBehavior$17
	m	(Lfv;Lbki;Lbki;)Lbki;	a	method_22141
		p	2	emptyBottleStack	emptyBottleStack
		p	3	filledBottleStack	filledBottleStack
c	gx	net/minecraft/block/dispenser/FallibleItemDispenserBehavior
	f	Z	b	success
	m	(Z)V	a	setSuccess
		p	1	success	success
	m	()Z	a	isSuccess
c	gy	net/minecraft/block/dispenser/ShearsDispenserBehavior
	m	(Lzd;Lfu;)Z	a	tryShearBlock
		p	0	world	world
		p	1	pos	pos
	m	(Lzd;Lfu;)Z	b	tryShearEntity
		p	0	world	world
		p	1	pos	pos
c	gz	net/minecraft/block/dispenser/BlockPlacementDispenserBehavior
c	h	net/minecraft/client/util/math/Vector4f
	f	F	a	x
	f	F	b	y
	f	F	c	z
	f	F	d	w
	m	(FFFF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	w	w
	m	(Lg;)V	<init>	<init>
		p	1	vector	vector
	m	()F	a	getX
	m	(Lh;)F	a	dotProduct
		p	1	other	other
	m	(Lb;)V	a	transform
		p	1	matrix	matrix
	m	(Ld;)V	a	rotate
		p	1	rotation	rotation
	m	(FFFF)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	w	w
	m	(Lg;)V	a	multiplyComponentwise
		p	1	vector	vector
	m	()F	b	getY
	m	()F	c	getZ
	m	()F	d	getW
	m	()Z	e	normalize
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()V	f	normalizeProjectiveCoordinates
c	hc	net/minecraft/particle/BlockStateParticleEffect
	f	Lhf$a;	a	PARAMETERS_FACTORY
	f	Lhg;	b	type
	f	Lcfj;	c	blockState
	m	(Lhg;Lcfj;)V	<init>	<init>
		p	1	type	type
		p	2	blockState	blockState
	m	()Lcfj;	c	getBlockState
c	hc$1	net/minecraft/particle/BlockStateParticleEffect$1
	m	(Lhg;Lmg;)Lhc;	a	read
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lhc;	a	read
c	hd	net/minecraft/particle/DustParticleEffect
	f	Lhd;	a	RED
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhf$a;	c	PARAMETERS_FACTORY
	f	F	d	red
	f	F	e	green
	f	F	f	blue
	f	F	g	scale
	m	(FFFF)V	<init>	<init>
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	scale	scale
	m	()F	c	getRed
	m	()F	d	getGreen
	m	()F	e	getBlue
	m	()F	f	getScale
c	hd$1	net/minecraft/particle/DustParticleEffect$1
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lhd;	a	read
	m	(Lhg;Lmg;)Lhd;	a	read
c	he	net/minecraft/particle/ItemStackParticleEffect
	f	Lhf$a;	a	PARAMETERS_FACTORY
	f	Lhg;	b	type
	f	Lbki;	c	stack
	m	(Lhg;Lbki;)V	<init>	<init>
		p	1	type	type
		p	2	stack	stack
	m	()Lbki;	c	getItemStack
c	he$1	net/minecraft/particle/ItemStackParticleEffect$1
	m	(Lhg;Lmg;)Lhe;	a	read
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lhe;	a	read
c	hf	net/minecraft/particle/ParticleEffect
	m	(Lmg;)V	a	write
		p	1	buf	buf
	m	()Ljava/lang/String;	a	asString
	m	()Lhg;	b	getType
c	hf$a	net/minecraft/particle/ParticleEffect$Factory
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lhf;	b	read
		p	1	type	type
		p	2	reader	reader
	m	(Lhg;Lmg;)Lhf;	b	read
		p	1	type	type
		p	2	buf	buf
c	hg	net/minecraft/particle/ParticleType
	f	Z	a	shouldAlwaysSpawn
	f	Lhf$a;	b	parametersFactory
	m	(ZLhf$a;)V	<init>	<init>
		p	1	shouldAlwaysShow	shouldAlwaysShow
		p	2	parametersFactory	parametersFactory
	m	()Z	c	shouldAlwaysSpawn
	m	()Lhf$a;	d	getParametersFactory
c	hh	net/minecraft/particle/ParticleTypes
	m	(Ljava/lang/String;Z)Lhi;	a	register
		p	0	name	name
		p	1	alwaysShow	alwaysShow
	m	(Ljava/lang/String;Lhf$a;Ljava/util/function/Function;)Lhg;	a	register
		p	0	name	name
		p	1	factory	factory
c	hi	net/minecraft/particle/DefaultParticleType
	f	Lhf$a;	a	PARAMETER_FACTORY
	m	()Lhi;	f	getType
c	hi$1	net/minecraft/particle/DefaultParticleType$1
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lhi;	a	read
	m	(Lhg;Lmg;)Lhi;	a	read
c	hk	net/minecraft/data/DataGenerator
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Collection;	b	inputs
	f	Ljava/nio/file/Path;	c	output
	f	Ljava/util/List;	d	providers
	m	(Ljava/nio/file/Path;Ljava/util/Collection;)V	<init>	<init>
		p	1	output	output
	m	(Lhl;)V	a	install
	m	()Ljava/util/Collection;	a	getInputs
	m	()Ljava/nio/file/Path;	b	getOutput
	m	()V	c	run
c	hl	net/minecraft/data/DataProvider
	f	Lcom/google/common/hash/HashFunction;	a	SHA1
	m	(Lhm;)V	a	run
		p	1	cache	cache
	m	(Lcom/google/gson/Gson;Lhm;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V	a	writeToPath
		p	0	gson	gson
		p	1	cache	cache
		p	2	output	output
	m	()Ljava/lang/String;	a	getName
c	hm	net/minecraft/data/DataCache
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	root
	f	Ljava/nio/file/Path;	c	recordFile
	f	I	d	unchanged
	f	Ljava/util/Map;	e	oldSha1
	f	Ljava/util/Map;	f	newSha1
	f	Ljava/util/Set;	g	ignores
	m	()V	a	write
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	getOldSha1
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	updateSha1
	m	()V	b	deleteAll
	m	(Ljava/nio/file/Path;)Z	b	contains
	m	()Ljava/util/stream/Stream;	c	files
	m	(Ljava/nio/file/Path;)V	c	ignore
c	hn	net/minecraft/data/server/AdvancementsProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lhk;	d	root
	f	Ljava/util/List;	e	tabGenerators
	m	(Lhk;)V	<init>	<init>
		p	1	root	root
	m	(Ljava/nio/file/Path;Lw;)Ljava/nio/file/Path;	a	getOutput
		p	0	rootOutput	rootOutput
		p	1	advancement	advancement
c	ho	net/minecraft/data/server/AdventureTabAdvancementGenerator
	f	[Lbre;	a	BIOMES
	f	[Laoq;	b	MONSTERS
	m	(Ljava/util/function/Consumer;)V	a	accept
	m	(Lw$a;)Lw$a;	a	requireListedMobsKilled
	m	(Lw$a;[Lbre;)Lw$a;	a	requireListedBiomesVisited
c	hp	net/minecraft/data/server/HusbandryTabAdvancementGenerator
	f	[Laoq;	a	BREEDABLE_ANIMALS
	f	[Lbke;	b	FISH_ITEMS
	f	[Lbke;	c	FISH_BUCKET_ITEMS
	f	[Lbke;	d	FOOD_ITEMS
	m	(Ljava/util/function/Consumer;)V	a	accept
	m	(Lw$a;)Lw$a;	a	requireFoodItemsEaten
	m	(Lw$a;)Lw$a;	b	requireListedAnimalsBred
	m	(Lw$a;)Lw$a;	c	requireListedFishBucketsFilled
	m	(Lw$a;)Lw$a;	d	requireListedFishCaught
	m	(Lw$a;)Lw$a;	e	requireAllCatsTamed
c	hq	net/minecraft/data/server/NetherTabAdvancementGenerator
	f	[Lbre;	a	NETHER_BIOMES
	m	(Ljava/util/function/Consumer;)V	a	accept
c	hr	net/minecraft/data/server/StoryTabAdvancementGenerator
	m	(Ljava/util/function/Consumer;)V	a	accept
c	hs	net/minecraft/data/server/EndTabAdvancementGenerator
	m	(Ljava/util/function/Consumer;)V	a	accept
c	hu	net/minecraft/data/report/BlockListProvider
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lhk;	c	root
c	hv	net/minecraft/data/report/CommandSyntaxProvider
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lhk;	c	root
c	hw	net/minecraft/data/report/ItemListProvider
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lhk;	c	root
	m	(Lgl;)Lcom/google/gson/JsonElement;	a	toJson
c	hy	net/minecraft/data/server/BlockLootTableGenerator
	f	Lddm$a;	a	WITH_SILK_TOUCH
	f	Lddm$a;	b	WITHOUT_SILK_TOUCH
	f	Lddm$a;	c	WITH_SHEARS
	f	Lddm$a;	d	WITH_SILK_TOUCH_OR_SHEARS
	f	Lddm$a;	e	WITHOUT_SILK_TOUCH_NOR_SHEARS
	f	Ljava/util/Set;	f	EXPLOSION_IMMUNE
	f	[F	g	SAPLING_DROP_CHANCE
	f	[F	h	JUNGLE_SAPLING_DROP_CHANCE
	f	Ljava/util/Map;	i	lootTables
	m	(Lbqa;Ldce;)Ljava/lang/Object;	a	applyExplosionDecay
		p	0	drop	drop
		p	1	builder	builder
	m	(Lbvr;Lbke;)Ldaw$a;	a	oreDrops
		p	0	dropWithSilkTouch	dropWithSilkTouch
		p	1	drop	drop
	m	(Lbvr;Lcgl;Ljava/lang/Comparable;)Ldaw$a;	a	dropsWithProperty
		p	0	drop	drop
	m	(Lbvr;)Ldaw$a;	a	addDoorDrop
	m	(Lbvr;Lbke;Lbke;Lddm$a;)Ldaw$a;	a	cropDrops
		p	0	crop	crop
		p	1	product	product
		p	2	seeds	seeds
		p	3	condition	condition
	m	(Lbvr;Lbqa;Ldaz;)Ldaw$a;	a	drops
		p	0	dropWithSilkTouch	dropWithSilkTouch
		p	1	drop	drop
		p	2	count	count
	m	(Lbqa;Ldaz;)Ldaw$a;	a	drops
		p	0	drop	drop
		p	1	count	count
	m	(Lbvr;Ldaw$a;)V	a	addDrop
		p	2	lootTable	lootTable
	m	()Ldaw$a;	a	dropsNothing
	m	(Lbvr;Lbqa;)V	a	addDrop
		p	2	drop	drop
	m	(Lbqa;Lddf;)Ljava/lang/Object;	a	addSurvivesExplosionCondition
		p	0	drop	drop
		p	1	builder	builder
	m	(Lbqa;)Ldaw$a;	a	drops
		p	0	drop	drop
	m	(Lbvr;Lbvr;)V	a	addDropWithSilkTouch
		p	1	block	block
		p	2	drop	drop
	m	(Lbvr;Lbvr;[F)Ldaw$a;	a	leavesDrop
		p	0	leaves	leaves
		p	1	drop	drop
		p	2	chance	chance
	m	(Lbvr;Ljava/util/function/Function;)V	a	addDrop
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	m	(Lbvr;Lddm$a;Ldbo$a;)Ldaw$a;	a	drops
		p	0	drop	drop
		p	1	conditionBuilder	conditionBuilder
		p	2	child	child
	m	(Lbvr;Ldbo$a;)Ldaw$a;	a	dropsWithSilkTouch
		p	0	drop	drop
		p	1	child	child
	m	(Lbvr;Lbke;)Ldaw$a;	b	cropStemDrops
		p	0	stem	stem
		p	1	drop	drop
	m	(Lbqa;)Ldaw$a;	b	dropsWithSilkTouch
		p	0	drop	drop
	m	(Lbvr;)V	b	addPottedPlantDrop
	m	(Lbvr;Lbvr;[F)Ldaw$a;	b	oakLeavesDrop
		p	0	leaves	leaves
		p	1	drop	drop
		p	2	chance	chance
	m	(Lbvr;Ldbo$a;)Ldaw$a;	b	dropsWithShears
		p	0	drop	drop
		p	1	child	child
	m	(Lbvr;Lbqa;)Ldaw$a;	b	drops
		p	0	dropWithSilkTouch	dropWithSilkTouch
		p	1	drop	drop
	m	(Lbvr;)V	c	addDropWithSilkTouch
	m	(Lbvr;Lbke;)Ldaw$a;	c	attachedCropStemDrops
		p	0	stem	stem
		p	1	drop	drop
	m	(Lbvr;Lbqa;)Ldaw$a;	c	mushroomBlockDrops
		p	0	dropWithSilkTouch	dropWithSilkTouch
		p	1	drop	drop
	m	(Lbvr;Lbvr;)V	c	addVinePlantDrop
		p	1	block	block
		p	2	drop	drop
	m	(Lbvr;Ldbo$a;)Ldaw$a;	c	dropsWithSilkTouchOrShears
		p	0	drop	drop
		p	1	child	child
	m	(Lbqa;)Ldaw$a;	c	pottedPlantDrops
		p	0	plant	plant
	m	(Lbqa;)Ldaw$a;	d	dropsWithShears
		p	0	drop	drop
	m	(Lbvr;)V	d	addDrop
	m	(Lbvr;)Ldaw$a;	e	slabDrops
		p	0	drop	drop
	m	(Lbvr;)Ldaw$a;	f	nameableContainerDrops
		p	0	drop	drop
	m	(Lbvr;)Ldaw$a;	g	shulkerBoxDrops
		p	0	drop	drop
	m	(Lbvr;)Ldaw$a;	h	bannerDrops
		p	0	drop	drop
	m	(Lbvr;)Ldaw$a;	i	beeNestDrops
		p	0	drop	drop
	m	(Lbvr;)Ldaw$a;	j	beehiveDrops
		p	0	drop	drop
	m	(Lbvr;)Ldaw$a;	k	grassDrops
		p	0	dropWithShears	dropWithShears
c	hz	net/minecraft/data/server/ChestLootTableGenerator
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	i	net/minecraft/util/Formatting
	f	Z	A	modifier
	f	Ljava/lang/String;	B	stringValue
	f	I	C	colorIndex
	f	Ljava/lang/Integer;	D	colorValue
	f	Ljava/util/Map;	w	BY_NAME
	f	Ljava/util/regex/Pattern;	x	FORMATTING_CODE_PATTERN
	f	Ljava/lang/String;	y	name
	f	C	z	code
	m	(Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V	<init>	<init>
		p	3	name	name
		p	4	code	code
		p	5	colorIndex	colorIndex
		p	6	colorValue	colorValue
	m	(Ljava/lang/String;ILjava/lang/String;CZ)V	<init>	<init>
		p	3	name	name
		p	4	code	code
		p	5	modifier	modifier
	m	(Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V	<init>	<init>
		p	3	name	name
		p	4	code	code
		p	5	modifier	modifier
		p	6	colorIndex	colorIndex
		p	7	colorValue	colorValue
	m	(ZZ)Ljava/util/Collection;	a	getNames
		p	0	colors	colors
		p	1	modifiers	modifiers
	m	(Ljava/lang/String;)Ljava/lang/String;	a	strip
		p	0	string	string
	m	(Li;)Li;	a	method_541
		p	0	f	f
	m	(C)Li;	a	byCode
		p	0	code	code
	m	(I)Li;	a	byColorIndex
		p	0	colorIndex	colorIndex
	m	()I	b	getColorIndex
	m	(Ljava/lang/String;)Li;	b	byName
		p	0	name	name
	m	(Li;)Ljava/lang/String;	b	method_531
		p	0	f	f
	m	(Ljava/lang/String;)Ljava/lang/String;	c	sanitize
		p	0	name	name
	m	()Z	c	isModifier
	m	()Z	d	isColor
	m	()Ljava/lang/Integer;	e	getColorValue
	m	()Ljava/lang/String;	f	getName
c	ia	net/minecraft/data/server/EntityLootTableGenerator
	f	Lbe$a;	a	NEEDS_ENTITY_ON_FIRE
	f	Ljava/util/Set;	b	ENTITY_TYPES_IN_MISC_GROUP_TO_CHECK
	f	Ljava/util/Map;	c	lootTables
	m	(Laoq;Ldaw$a;)V	a	register
	m	(Luh;Ldaw$a;)V	a	register
	m	(Lbqa;)Ldaw$a;	a	createForSheep
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	ib	net/minecraft/data/server/FishingLootTableGenerator
	f	Lddm$a;	a	NEEDS_JUNGLE_BIOME
	f	Lddm$a;	b	NEEDS_JUNGLE_HILLS_BIOME
	f	Lddm$a;	c	NEEDS_JUNGLE_EDGE_BIOME
	f	Lddm$a;	d	NEEDS_BAMBOO_JUNGLE_BIOME
	f	Lddm$a;	e	NEEDS_MODIFIED_JUNGLE_BIOME
	f	Lddm$a;	f	NEEDS_MODIFIED_JUNGLE_EDGE_BIOME
	f	Lddm$a;	g	NEEDS_BAMBOO_JUNGLE_HILLS_BIOME
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	ic	net/minecraft/data/server/GiftLootTableGenerator
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	id	net/minecraft/data/server/LootTablesProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lhk;	d	root
	f	Ljava/util/List;	e	lootTypeGenerators
	m	(Ljava/nio/file/Path;Luh;)Ljava/nio/file/Path;	a	getOutput
		p	0	rootOutput	rootOutput
		p	1	lootTableId	lootTableId
c	ie	net/minecraft/data/server/BarterLootTableGenerator
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	ih	net/minecraft/data/client/model/BlockStateModelGenerator
	f	Ljava/util/function/Consumer;	a	blockStateCollector
	f	Ljava/util/function/BiConsumer;	b	modelCollector
	f	Ljava/util/function/Consumer;	c	simpleItemModelExemptionCollector
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	blockStateCollector	blockStateCollector
		p	2	modelCollector	modelCollector
		p	3	simpleItemModelExemptionCollector	simpleItemModelExemptionCollector
	m	()V	A	registerComposter
	m	()V	B	registerDaylightDetector
	m	()V	C	registerEndRod
	m	()V	D	registerFarmland
	m	()V	E	registerFire
	m	()V	F	registerSoulFire
	m	()V	G	registerFrostedIce
	m	()V	H	registerTopSoils
	m	()V	I	registerCocoa
	m	()V	J	registerGrassPath
	m	()V	K	registerHopper
	m	()V	L	registerIronBars
	m	()V	M	registerLever
	m	()V	N	registerLilyPad
	m	()V	O	registerNetherPortal
	m	()V	P	registerNetherrack
	m	()V	Q	registerObserver
	m	()V	R	registerPistons
	m	()V	S	registerPistonHead
	m	()V	T	registerScaffolding
	m	()V	U	registerRedstoneLamp
	m	()V	V	registerRedstoneTorch
	m	()V	W	registerRepeater
	m	()V	X	registerSeaPickle
	m	()V	Y	registerSnows
	m	()V	Z	registerStonecutter
	m	(Lbvr;Lcgl;[I)V	a	registerCrop
		p	1	crop	crop
		p	2	ageProperty	ageProperty
		p	3	ageTextureIndices	ageTextureIndices
	m	(Lja$a;[Lbvr;)V	a	registerRandomHorizontalRotations
		p	1	modelFactory	modelFactory
		p	2	blocks	blocks
	m	(Lbke;Luh;)V	a	registerParentedItemModel
		p	1	item	item
		p	2	parentModelId	parentModelId
	m	(Lbvr;Liy;)V	a	registerNorthDefaultHorizontalRotatable
		p	1	block	block
		p	2	texture	texture
	m	(Lbvr;Lja;)Lih$b;	a	registerTexturePool
		p	1	block	block
		p	2	model	model
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List;	a	buildBlockStateVariants
		p	0	modelIds	modelIds
		p	1	processor	processor
	m	()V	a	register
	m	(Lbke;)V	a	registerItemModel
		p	1	item	item
	m	(Lbvr;Lih$c;Liy;)V	a	registerTintableCross
		p	1	block	block
		p	2	tintType	tintType
		p	3	texture	texture
	m	(Lbvr;Ljava/lang/String;)V	a	registerItemModel
		p	1	block	block
		p	2	textureSuffix	textureSuffix
	m	(Lbvr;Luh;Liy;)V	a	registerPiston
		p	1	piston	piston
		p	2	extendedModelId	extendedModelId
		p	3	texture	texture
	m	(Lbvr;Lbvr;Ljava/util/function/BiFunction;)V	a	registerCubeWithCustomTexture
		p	1	block	block
		p	2	otherTextureSource	otherTextureSource
		p	3	textureFactory	textureFactory
	m	(Lbvr;Lbvr;Lbvr;Lbvr;Lbvr;Lbvr;Lbvr;Lbvr;)V	a	registerCoral
		p	1	coral	coral
		p	2	deadCoral	deadCoral
		p	3	coralBlock	coralBlock
		p	4	deadCoralBlock	deadCoralBlock
		p	5	coralFan	coralFan
		p	6	deadCoralFan	deadCoralFan
		p	7	coralWallFan	coralWallFan
		p	8	deadCoralWallFan	deadCoralWallFan
	m	(Lbvr;Ljava/lang/String;Liw;Ljava/util/function/Function;)Luh;	a	createSubModel
		p	1	block	block
		p	2	suffix	suffix
		p	3	model	model
		p	4	textureFactory	textureFactory
	m	(Lbvr;Lbvr;)V	a	registerStateWithModelReference
		p	1	block	block
		p	2	modelReference	modelReference
	m	(Lgb;Liq;)Liq;	a	addJigsawOrientationToVariant
		p	1	orientation	orientation
		p	2	variant	variant
	m	(Liy;)Lih$b;	a	registerTexturePool
		p	1	texture	texture
	m	(Luh;Lbvr;)Lih$a;	a	registerBuiltin
		p	1	modelId	modelId
		p	2	particleBlock	particleBlock
	m	(ILjava/lang/String;Liy;)Luh;	a	getTurtleEggModel
		p	1	eggs	eggs
		p	2	prefix	prefix
		p	3	texture	texture
	m	(Luh;)[Liq;	a	createModelVariantWithRandomHorizontalRotations
		p	0	modelId	modelId
	m	(Lbvr;Luh;Liq;)V	a	registerTopSoil
		p	1	topSoil	topSoil
		p	2	modelId	modelId
		p	3	snowyVariant	snowyVariant
	m	(Lbvr;Ljava/util/function/Function;)V	a	registerBeehive
		p	1	beehive	beehive
		p	2	textureGetter	textureGetter
	m	(Lio$d;Lcgf;Luh;Luh;)Lio$d;	a	fillDoorVariantMap
		p	0	variantMap	variantMap
		p	1	targetHalf	targetHalf
		p	2	regularModel	regularModel
		p	3	hingeModel	hingeModel
	m	(Lbvr;Liy;Liw;)V	a	registerSingleton
		p	1	block	block
		p	2	texture	texture
		p	3	model	model
	m	(Lbvr;Lja$a;)V	a	registerAxisRotated
		p	1	block	block
		p	2	modelFactory	modelFactory
	m	(I)Ljava/util/List;	a	getBambooBlockStateVariants
		p	1	age	age
	m	(Lbvr;Lbvr;Lih$c;)V	a	registerFlowerPotPlant
		p	1	plantBlock	plantBlock
		p	2	flowerPotBlock	flowerPotBlock
		p	3	tintType	tintType
	m	(Lbvr;Lja$a;Lja$a;)V	a	registerAxisRotated
		p	1	block	block
		p	2	verticalModelFactory	verticalModelFactory
		p	3	horizontalModelFactory	horizontalModelFactory
	m	(Lbvr;Lbke;)V	a	registerBuiltinWithParticle
		p	1	block	block
		p	2	particleSource	particleSource
	m	(Lbvr;Lih$c;)V	a	registerTintableCross
		p	1	block	block
		p	2	tintType	tintType
	m	(Lcgl;Ljava/lang/Comparable;Luh;Luh;)Lio;	a	createValueFencedModelMap
		p	0	property	property
		p	1	fence	fence
		p	2	higherOrEqualModelId	higherOrEqualModelId
		p	3	lowerModelId	lowerModelId
	m	(Lcga;Luh;Luh;)Lio;	a	createBooleanModelMap
		p	0	property	property
		p	1	trueModel	trueModel
		p	2	falseModel	falseModel
	m	(Lbvr;)V	a	excludeFromSimpleItemModelGeneration
		p	1	block	block
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Luh;	a	getTurtleEggModel
		p	1	eggs	eggs
		p	2	hatch	hatch
	m	()V	aa	registerStructureBlock
	m	()V	ab	registerSweetBerryBush
	m	()V	ac	registerTripwire
	m	()V	ad	registerTripwireHook
	m	()V	ae	registerTurtleEgg
	m	()V	af	registerVine
	m	()V	ag	registerMagmaBlock
	m	()V	ah	registerInfestedStone
	m	()V	ai	registerRespawnAnchor
	m	()V	aj	registerJigsaw
	m	(Lbvr;Lbvr;)V	b	registerCoralFan
		p	1	coralFanBlock	coralFanBlock
		p	2	coralWallFanBlock	coralWallFanBlock
	m	(Lbvr;Lbvr;Lih$c;)V	b	registerPlantPart
		p	1	plant	plant
		p	2	plantStem	plantStem
		p	3	tintType	tintType
	m	(Lbvr;Luh;Luh;Luh;Luh;)Lik;	b	createDoorBlockState
		p	0	doorBlock	doorBlock
		p	1	bottomModelId	bottomModelId
		p	2	bottomHingeModelId	bottomHingeModelId
		p	3	topModelId	topModelId
		p	4	topHingeModelId	topHingeModelId
	m	(Lbvr;Lja$a;)V	b	registerNorthDefaultHorizontalRotated
		p	1	block	block
		p	2	modelFactory	modelFactory
	m	(Lja$a;[Lbvr;)V	b	registerSouthDefaultHorizontalFacing
		p	1	modelFactory	modelFactory
		p	2	blocks	blocks
	m	()Lio;	b	createNorthDefaultHorizontalRotationStates
	m	(Lbvr;)V	b	registerItemModel
		p	1	block	block
	m	(Lbvr;Lih$c;Liy;)V	b	registerTintableCrossBlockState
		p	1	block	block
		p	2	tintType	tintType
		p	3	crossTexture	crossTexture
	m	(Lbvr;Lih$c;)V	b	registerTintableCrossBlockState
		p	1	block	block
		p	2	tintType	tintType
	m	(Lbvr;Lbvr;)V	c	registerGourd
		p	1	stemBlock	stemBlock
		p	2	attachedStemBlock	attachedStemBlock
	m	(Lbvr;Lih$c;)V	c	registerDoubleBlock
		p	1	doubleBlock	doubleBlock
		p	2	tintType	tintType
	m	()Lio;	c	createSouthDefaultHorizontalRotationStates
	m	(Lbvr;Luh;)V	c	registerParentedItemModel
		p	1	block	block
		p	2	parentModelId	parentModelId
	m	(Lbvr;Lja$a;)V	c	registerSingleton
		p	1	block	block
		p	2	modelFactory	modelFactory
	m	(Lbvr;)V	c	registerMirrorable
		p	1	block	block
	m	(Lbvr;Luh;Luh;Luh;Luh;)Lik;	c	createFenceGateBlockState
		p	0	fenceGateBlock	fenceGateBlock
		p	1	openModelId	openModelId
		p	2	closedModelId	closedModelId
		p	3	openWallModelId	openWallModelId
		p	4	closedWallModelId	closedWallModelId
	m	(Lbvr;Lja$a;)Lih$b;	d	registerTexturePool
		p	1	block	block
		p	2	modelFactory	modelFactory
	m	(Lbvr;Lbvr;)Lih$a;	d	registerBuiltin
		p	1	block	block
		p	2	particleBlock	particleBlock
	m	(Lbvr;)V	d	registerRotatable
		p	1	block	block
	m	(Lbvr;Luh;Luh;Luh;)Lik;	d	createWallBlockState
		p	0	wallBlock	wallBlock
		p	1	postModelId	postModelId
		p	2	lowSideModelId	lowSideModelId
		p	3	tallSideModelId	tallSideModelId
	m	(Lbvr;Luh;)Lin;	d	createBlockStateWithRandomHorizontalRotations
		p	0	block	block
		p	1	modelId	modelId
	m	()Lio;	d	createEastDefaultHorizontalRotationStates
	m	(Lbvr;)V	e	registerSimpleCubeAll
		p	1	block	block
	m	(Lbvr;Lja$a;)V	e	registerCooker
		p	1	cooker	cooker
		p	2	modelFactory	modelFactory
	m	()Lio;	e	createNorthDefaultRotationStates
	m	(Lbvr;Luh;Luh;)Lin;	e	createBlockStateWithTwoModelAndRandomInversion
		p	0	block	block
		p	1	firstModelId	firstModelId
		p	2	secondModelId	secondModelId
	m	(Lbvr;Luh;)Lin;	e	createSingletonBlockState
		p	0	block	block
		p	1	modelId	modelId
	m	(Lbvr;Lbvr;)V	e	registerCarpet
		p	1	wool	wool
		p	2	carpet	carpet
	m	(Lbvr;Luh;Luh;Luh;)Lik;	e	createStairsBlockState
		p	0	stairsBlock	stairsBlock
		p	1	innerModelId	innerModelId
		p	2	regularModelId	regularModelId
		p	3	outerModelId	outerModelId
	m	()Lio;	f	createAxisRotatedVariantMap
	m	(Lbvr;)Lih$b;	f	registerCubeAllModelTexturePool
		p	1	block	block
	m	(Lbvr;Luh;Luh;)Lik;	f	createButtonBlockState
		p	0	buttonBlock	buttonBlock
		p	1	regularModelId	regularModelId
		p	2	pressedModelId	pressedModelId
	m	(Lbvr;Luh;Luh;Luh;)Lik;	f	createOrientableTrapdoorBlockState
		p	0	trapdoorBlock	trapdoorBlock
		p	1	topModelId	topModelId
		p	2	bottomModelId	bottomModelId
		p	3	openModelId	openModelId
	m	(Lbvr;Luh;)Lik;	f	createAxisRotatedBlockState
		p	0	block	block
		p	1	modelId	modelId
	m	(Lbvr;Lbvr;)V	f	registerGlassPane
		p	1	glass	glass
		p	2	glassPane	glassPane
	m	(Lbvr;Luh;Luh;)Lik;	g	createFenceBlockState
		p	0	fenceBlock	fenceBlock
		p	1	postModelId	postModelId
		p	2	sideModelId	sideModelId
	m	(Lbvr;Luh;)V	g	registerBuiltinWithParticle
		p	1	block	block
		p	2	particleSource	particleSource
	m	(Lbvr;Lbvr;)V	g	registerCubeColumn
		p	1	block	block
		p	2	endTexture	endTexture
	m	()V	g	registerSunflower
	m	(Lbvr;Luh;Luh;Luh;)Lik;	g	createTrapdoorBlockState
		p	0	trapdoorBlock	trapdoorBlock
		p	1	topModelId	topModelId
		p	2	bottomModelId	bottomModelId
		p	3	openModelId	openModelId
	m	(Lbvr;)V	g	registerDoor
		p	1	doorBlock	doorBlock
	m	(Lbvr;Luh;Luh;Luh;)Lik;	h	createSlabBlockState
		p	0	slabBlock	slabBlock
		p	1	bottomModelId	bottomModelId
		p	2	topModelId	topModelId
		p	3	fullModelId	fullModelId
	m	(Lbvr;Lbvr;)V	h	registerPressurePlate
		p	1	pressurePlate	pressurePlate
		p	2	textureSource	textureSource
	m	(Lbvr;Luh;Luh;)Lik;	h	createAxisRotatedBlockState
		p	0	block	block
		p	1	verticalModelId	verticalModelId
		p	2	horizontalModelId	horizontalModelId
	m	(Lbvr;)V	h	registerOrientableTrapdoor
		p	1	trapdoorBlock	trapdoorBlock
	m	()V	h	registerTallSeagrass
	m	(Lbvr;Lbvr;)V	i	registerInfested
		p	1	modelSource	modelSource
		p	2	infested	infested
	m	(Lbvr;Luh;Luh;)Lik;	i	createPressurePlateBlockState
		p	0	pressurePlateBlock	pressurePlateBlock
		p	1	upModelId	upModelId
		p	2	downModelId	downModelId
	m	(Lbvr;)V	i	registerTrapdoor
		p	1	trapdoorBlock	trapdoorBlock
	m	()V	i	registerBamboo
	m	(Lbvr;Lbvr;)V	j	registerTorch
		p	1	torch	torch
		p	2	wallTorch	wallTorch
	m	(Lbvr;Luh;Luh;)V	j	registerDoubleBlock
		p	1	block	block
		p	2	upperHalfModelId	upperHalfModelId
		p	3	lowerHalfModelId	lowerHalfModelId
	m	()Lio;	j	createUpDefaultFacingVariantMap
	m	(Lbvr;)Lih$d;	j	registerLog
		p	1	logBlock	logBlock
	m	(Lbvr;)V	k	registerSimpleState
		p	1	block	block
	m	()V	k	registerBarrel
	m	(Lbvr;Lbvr;)V	k	registerBed
		p	1	bed	bed
		p	2	particleSource	particleSource
	m	(Lbvr;Lbvr;)V	l	registerRoots
		p	1	root	root
		p	2	pottedRoot	pottedRoot
	m	()V	l	registerBell
	m	(Lbvr;)V	l	registerTurnableRail
		p	1	rail	rail
	m	(Lbvr;)V	m	registerStraightRail
		p	1	rail	rail
	m	()V	m	registerGrindstone
	m	()V	n	registerBookshelf
	m	(Lbvr;)V	n	registerCommandBlock
		p	1	commandBlock	commandBlock
	m	(Lbvr;)V	o	registerAnvil
		p	1	anvil	anvil
	m	()V	o	registerRedstone
	m	(Lbvr;)V	p	registerMushroomBlock
		p	1	mushroomBlock	mushroomBlock
	m	()V	p	registerComparator
	m	()V	q	registerSmoothStone
	m	(Lbvr;)V	q	registerFurnaceLikeOrientable
		p	1	block	block
	m	()V	r	registerBrewingStand
	m	(Lbvr;)V	r	registerNetherrackBottomCustomTop
		p	1	block	block
	m	(Lbvr;)Ljava/util/List;	s	getFireFloorModels
		p	1	texture	texture
	m	()V	s	registerCake
	m	(Lbvr;)Ljava/util/List;	t	getFireSideModels
		p	1	texture	texture
	m	()V	t	registerCartographyTable
	m	()V	u	registerSmithingTable
	m	(Lbvr;)Ljava/util/List;	u	getFireUpModels
		p	1	texture	texture
	m	()V	v	registerPumpkins
	m	(Lbvr;)V	v	registerLantern
		p	1	lantern	lantern
	m	(Lbvr;)V	w	registerNorthDefaultHorizontalRotation
		p	1	block	block
	m	()V	w	registerCauldron
	m	(Lbvr;)V	x	registerShulkerBox
		p	1	shulkerBox	shulkerBox
	m	()V	x	registerChorusFlower
	m	()V	y	registerEndPortalFrame
	m	()V	z	registerChorusPlant
c	ih$a	net/minecraft/data/client/model/BlockStateModelGenerator$BuiltinModelPool
	f	Luh;	b	modelId
	m	(Lih;Luh;Lbvr;)V	<init>	<init>
		p	2	modelId	modelId
		p	3	block	block
	m	([Lbvr;)Lih$a;	a	includeWithItem
		p	1	blocks	blocks
	m	(Liw;[Lbvr;)Lih$a;	a	includeWithItem
		p	1	model	model
		p	2	blocks	blocks
	m	([Lbvr;)Lih$a;	b	includeWithoutItem
		p	1	blocks	blocks
c	ih$b	net/minecraft/data/client/model/BlockStateModelGenerator$BlockTexturePool
	f	Liy;	b	texture
	f	Luh;	c	baseModelId
	m	(Lih;Liy;)V	<init>	<init>
		p	2	texture	texture
	m	(Lbvr;Liw;)Lih$b;	a	base
		p	1	block	block
		p	2	model	model
	m	(Lbvr;)Lih$b;	a	button
		p	1	buttonBlock	buttonBlock
	m	(Lbvr;Lbvr;)Lih$b;	a	sign
		p	1	signBlock	signBlock
		p	2	wallSignBlock	wallSignBlock
	m	(Ljava/util/function/Function;)Lih$b;	a	base
		p	1	modelFactory	modelFactory
	m	(Lbvr;)Lih$b;	b	wall
		p	1	wallBlock	wallBlock
	m	(Lbvr;)Lih$b;	c	fence
		p	1	fenceBlock	fenceBlock
	m	(Lbvr;)Lih$b;	d	fenceGate
		p	1	fenceGateBlock	fenceGateBlock
	m	(Lbvr;)Lih$b;	e	pressurePlate
		p	1	pressurePlateBlock	pressurePlateBlock
	m	(Lbvr;)Lih$b;	f	slab
		p	1	slabBlock	slabBlock
	m	(Lbvr;)Lih$b;	g	stairs
		p	1	stairsBlock	stairsBlock
c	ih$c	net/minecraft/data/client/model/BlockStateModelGenerator$TintType
	m	()Liw;	a	getCrossModel
	m	()Liw;	b	getFlowerPotCrossModel
c	ih$d	net/minecraft/data/client/model/BlockStateModelGenerator$LogTexturePool
	f	Liy;	b	texture
	m	(Lih;Liy;)V	<init>	<init>
		p	2	texture	texture
	m	(Lbvr;)Lih$d;	a	wood
		p	1	woodBlock	woodBlock
	m	(Lbvr;)Lih$d;	b	stem
		p	1	stemBlock	stemBlock
	m	(Lbvr;)Lih$d;	c	log
		p	1	logBlock	logBlock
c	ii	net/minecraft/data/client/ItemModelGenerator
	f	Ljava/util/function/BiConsumer;	a	writer
	m	(Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1	writer	writer
	m	(Lbke;Liw;)V	a	register
		p	1	item	item
		p	2	model	model
	m	()V	a	register
	m	(Lbke;Lbke;Liw;)V	a	register
		p	1	item	item
		p	2	texture	texture
		p	3	model	model
	m	(Lbke;Ljava/lang/String;Liw;)V	a	register
		p	1	item	item
		p	2	suffix	suffix
		p	3	model	model
c	ij	net/minecraft/data/client/BlockStateDefinitionProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lhk;	d	generator
	m	(Lhk;)V	<init>	<init>
		p	1	generator	generator
	m	(Lhm;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V	a	writeJsons
		p	1	cache	cache
		p	2	root	root
		p	3	jsons	jsons
		p	4	locator	locator
	m	(Ljava/nio/file/Path;Luh;)Ljava/nio/file/Path;	a	getModelJsonPath
		p	0	root	root
		p	1	id	id
	m	(Ljava/nio/file/Path;Lbvr;)Ljava/nio/file/Path;	a	getBlockStateJsonPath
		p	0	root	root
		p	1	block	block
c	ik	net/minecraft/data/client/model/BlockStateSupplier
	c	A supplier of a block state JSON definition.
	m	()Lbvr;	a	getBlock
c	il	net/minecraft/data/client/model/When
	m	()Lil$c;	a	create
	m	(Lcfk;)V	a	validate
		p	1	stateManager	stateManager
	m	([Lil;)Lil;	b	anyOf
		p	0	conditions	conditions
c	il$a	net/minecraft/data/client/model/When$LogicalCondition
	f	Lil$b;	a	operator
	f	Ljava/util/List;	b	components
	m	(Lil$b;Ljava/util/List;)V	<init>	<init>
		p	1	operator	operator
		p	2	components	components
	m	()Lcom/google/gson/JsonElement;	b	get
c	il$b	net/minecraft/data/client/model/When$LogicalOperator
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	il$c	net/minecraft/data/client/model/When$PropertyCondition
	f	Ljava/util/Map;	a	properties
	m	(Lcgl;Ljava/util/stream/Stream;)Ljava/lang/String;	a	name
		p	0	property	property
		p	1	valueStream	valueStream
	m	(Lcgl;Ljava/lang/String;)V	a	set
		p	1	property	property
		p	2	value	value
	m	(Lcgl;Ljava/lang/Comparable;)Lil$c;	a	set
		p	1	property	property
		p	2	value	value
	m	(Lcgl;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lil$c;	a	set
		p	1	property	property
		p	2	value	value
		p	3	otherValues	otherValues
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Lcgl;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String;	c	name
		p	0	property	property
		p	1	value	value
		p	2	otherValues	otherValues
c	im	net/minecraft/data/client/model/MultipartBlockStateSupplier
	f	Lbvr;	a	block
	f	Ljava/util/List;	b	multiparts
	m	(Lbvr;)V	<init>	<init>
		p	1	block	block
	m	(Lil;Ljava/util/List;)Lim;	a	with
	m	(Lbvr;)Lim;	a	create
		p	0	block	block
	m	(Liq;)Lim;	a	with
	m	(Lil;[Liq;)Lim;	a	with
	m	(Ljava/util/List;)Lim;	a	with
	m	(Lil;Liq;)Lim;	a	with
	m	()Lcom/google/gson/JsonElement;	b	get
c	im$a	net/minecraft/data/client/model/MultipartBlockStateSupplier$ConditionalMultipart
	f	Lil;	a	when
	m	(Lil;Ljava/util/List;)V	<init>	<init>
		p	1	when	when
		p	2	variants	variants
c	im$b	net/minecraft/data/client/model/MultipartBlockStateSupplier$Multipart
	f	Ljava/util/List;	a	variants
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	variants	variants
	m	()Lcom/google/gson/JsonElement;	a	get
	m	(Lcfk;)V	a	validate
		p	1	stateManager	stateManager
	m	(Lcom/google/gson/JsonObject;)V	a	extraToJson
		p	1	json	json
c	in	net/minecraft/data/client/model/VariantsBlockStateSupplier
	f	Lbvr;	a	block
	f	Ljava/util/List;	b	variants
	f	Ljava/util/Set;	c	definedProperties
	f	Ljava/util/List;	d	variantMaps
	m	(Lbvr;Ljava/util/List;)V	<init>	<init>
		p	1	block	block
		p	2	variants	variants
	m	(Lbvr;)Lin;	a	create
		p	0	block	block
	m	(Lbvr;Liq;)Lin;	a	create
		p	0	block	block
		p	1	variant	variant
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	intersect
	m	(Lbvr;[Liq;)Lin;	a	create
		p	0	block	block
		p	1	variants	variants
	m	(Lio;)Lin;	a	coordinate
		c	Appends a block state variant map to this block state information.\n\n<p>A block state variant map defines some of the variant settings based\non a defined set of properties in the block state, such as the model\nof the block state is determined by a coordinated map of power and\nmachine type property, and the y rotation determined by a facing\nproperty, etc.\n\n@return this block state file
		p	1	map	map
			c	the variant map to contribute property to variant settings\nmappings to the block state file
	m	()Lcom/google/gson/JsonElement;	b	get
c	io	net/minecraft/data/client/model/BlockStateVariantMap
	c	An equivalence to the {@code Map<String, WeightedUnbakedModel>}\npassed to the constructor of {@code ModelVariantMap}.
	f	Ljava/util/Map;	a	variants
	m	(Lcgl;Lcgl;Lcgl;Lcgl;)Lio$d;	a	create
	m	(Lcgl;)Lio$a;	a	create
	m	(Lcgl;Lcgl;Lcgl;)Lio$c;	a	create
	m	(Lcgl;Lcgl;Lcgl;Lcgl;Lcgl;)Lio$e;	a	create
	m	(Lip;Ljava/util/List;)V	a	register
		p	1	condition	condition
		p	2	possibleVariants	possibleVariants
	m	()Ljava/util/Map;	a	getVariants
	m	(Lcgl;Lcgl;)Lio$b;	a	create
	m	()Ljava/util/List;	b	getProperties
	m	()V	c	checkAllPropertyDefinitions
c	io$a	net/minecraft/data/client/model/BlockStateVariantMap$SingleProperty
	f	Lcgl;	a	property
	m	(Ljava/lang/Comparable;Liq;)Lio$a;	a	register
		p	1	value	value
		p	2	variant	variant
	m	(Ljava/lang/Comparable;Ljava/util/List;)Lio$a;	a	register
		p	1	value	value
		p	2	variants	variants
	m	(Ljava/util/function/Function;)Lio;	a	register
		p	1	variantFactory	variantFactory
c	io$b	net/minecraft/data/client/model/BlockStateVariantMap$DoubleProperty
	f	Lcgl;	a	first
	f	Lcgl;	b	second
	m	(Ljava/util/function/BiFunction;)Lio;	a	register
		p	1	variantFactory	variantFactory
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lio$b;	a	register
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Liq;)Lio$b;	a	register
	m	(Ljava/util/function/BiFunction;)Lio;	b	registerVariants
		p	1	variantsFactory	variantsFactory
c	io$c	net/minecraft/data/client/model/BlockStateVariantMap$TripleProperty
	f	Lcgl;	a	first
	f	Lcgl;	b	second
	f	Lcgl;	c	third
	m	(Lio$h;)Lio;	a	register
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lio$c;	a	register
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Liq;)Lio$c;	a	register
c	io$d	net/minecraft/data/client/model/BlockStateVariantMap$QuadrupleProperty
	f	Lcgl;	a	first
	f	Lcgl;	b	second
	f	Lcgl;	c	third
	f	Lcgl;	d	fourth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Liq;)Lio$d;	a	register
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lio$d;	a	register
c	io$e	net/minecraft/data/client/model/BlockStateVariantMap$QuintupleProperty
	f	Lcgl;	a	first
	f	Lcgl;	b	second
	f	Lcgl;	c	third
	f	Lcgl;	d	fourth
	f	Lcgl;	e	fifth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Liq;)Lio$e;	a	register
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lio$e;	a	register
c	io$h	net/minecraft/data/client/model/BlockStateVariantMap$TriFunction
c	ip	net/minecraft/data/client/model/PropertiesMap
	c	Represents a set of property to value pairs, used as conditions for model\napplication.\n\n<p>This object is immutable.
	f	Lip;	a	EMPTY
	f	Ljava/util/Comparator;	b	COMPARATOR
	f	Ljava/util/List;	c	propertyValues
	m	()Lip;	a	empty
	m	(Lip;)Lip;	a	with
	m	()Ljava/lang/String;	b	asString
c	iq	net/minecraft/data/client/model/BlockStateVariant
	c	The supplier for a {@code ModelVariant}'s JSON representation.
	f	Ljava/util/Map;	a	properties
	m	()Liq;	a	create
	m	(Lis;Ljava/lang/Object;)Liq;	a	put
		p	1	key	key
		p	2	value	value
	m	(Liq;Liq;)Liq;	a	union
		p	0	first	first
		p	1	second	second
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	toJson
		p	0	variants	variants
	m	()Lcom/google/gson/JsonElement;	b	get
c	ir	net/minecraft/data/client/model/VariantSettings
	f	Lis;	a	X
	f	Lis;	b	Y
	f	Lis;	c	MODEL
	f	Lis;	d	UVLOCK
	f	Lis;	e	WEIGHT
c	ir$a	net/minecraft/data/client/model/VariantSettings$Rotation
	f	I	e	degrees
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	degrees	degrees
c	is	net/minecraft/data/client/model/VariantSetting
	f	Ljava/lang/String;	a	key
	f	Ljava/util/function/Function;	b	writer
	m	(Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1	key	key
		p	2	writer	writer
	m	(Ljava/lang/Object;)Lis$a;	a	evaluate
		p	1	value	value
c	is$a	net/minecraft/data/client/model/VariantSetting$Value
	f	Ljava/lang/Object;	b	value
	m	(Lis;Ljava/lang/Object;)V	<init>	<init>
		p	2	value	value
	m	(Lcom/google/gson/JsonObject;)V	a	writeTo
		p	1	json	json
c	iu	net/minecraft/data/client/model/SimpleModelSupplier
	f	Luh;	a	parent
	m	(Luh;)V	<init>	<init>
		p	1	parent	parent
	m	()Lcom/google/gson/JsonElement;	a	get
c	iv	net/minecraft/data/client/model/ModelIds
	m	(Lbke;)Luh;	a	getItemModelId
		p	0	item	item
	m	(Lbvr;)Luh;	a	getBlockModelId
		p	0	block	block
	m	(Lbke;Ljava/lang/String;)Luh;	a	getItemSubModelId
		p	0	item	item
		p	1	suffix	suffix
	m	(Ljava/lang/String;)Luh;	a	getMinecraftNamespacedBlock
		p	0	name	name
	m	(Lbvr;Ljava/lang/String;)Luh;	a	getBlockSubModelId
		p	0	block	block
		p	1	suffix	suffix
	m	(Ljava/lang/String;)Luh;	b	getMinecraftNamespacedItem
		p	0	name	name
c	iw	net/minecraft/data/client/model/Model
	f	Ljava/util/Optional;	a	parent
	f	Ljava/util/Set;	b	requiredTextures
	f	Ljava/util/Optional;	c	variant
	m	(Ljava/util/Optional;Ljava/util/Optional;[Liz;)V	<init>	<init>
		p	1	parent	parent
		p	2	variant	variant
		p	3	requiredTextures	requiredTextures
	m	(Liy;)Ljava/util/Map;	a	createTextureMap
		p	1	texture	texture
	m	(Lbvr;Ljava/lang/String;Liy;Ljava/util/function/BiConsumer;)Luh;	a	upload
		p	1	block	block
		p	2	suffix	suffix
		p	3	texture	texture
		p	4	modelCollector	modelCollector
	m	(Lbvr;Liy;Ljava/util/function/BiConsumer;)Luh;	a	upload
		p	1	block	block
		p	2	texture	texture
		p	3	modelCollector	modelCollector
	m	(Luh;Liy;Ljava/util/function/BiConsumer;)Luh;	a	upload
		p	1	id	id
		p	2	texture	texture
		p	3	modelCollector	modelCollector
	m	(Lbvr;Ljava/lang/String;Liy;Ljava/util/function/BiConsumer;)Luh;	b	uploadWithoutVariant
		p	1	block	block
		p	2	suffix	suffix
		p	3	texture	texture
		p	4	modelCollector	modelCollector
c	ix	net/minecraft/data/client/model/Models
	f	Liw;	F	PARTICLE
	f	[Liw;	an	STEM_GROWTH_STAGES
	m	([Liz;)Liw;	a	make
		p	0	requiredTextures	requiredTextures
	m	(Ljava/lang/String;Ljava/lang/String;[Liz;)Liw;	a	block
		p	0	parent	parent
		p	1	variant	variant
		p	2	requiredTextures	requiredTextures
	m	(Ljava/lang/String;[Liz;)Liw;	a	block
		p	0	parent	parent
		p	1	requiredTextures	requiredTextures
	m	(Ljava/lang/String;[Liz;)Liw;	b	item
		p	0	parent	parent
		p	1	requiredTextures	requiredTextures
c	iy	net/minecraft/data/client/model/Texture
	f	Ljava/util/Map;	a	entries
	f	Ljava/util/Set;	b	inherited
	m	(Lbvr;)Liy;	B	layer0
		p	0	block	block
	m	(Lbvr;)Luh;	C	getId
		p	0	block	block
	m	(Liz;)Luh;	a	getTexture
		p	1	key	key
	m	(Luh;Luh;)Liy;	a	sideEnd
		p	0	side	side
		p	1	end	end
	m	(Lbvr;)Liy;	a	all
		p	0	block	block
	m	()Ljava/util/stream/Stream;	a	getInherited
	m	(Lbvr;Lbvr;)Liy;	a	stemAndUpper
		p	0	stem	stem
		p	1	upper	upper
	m	(Luh;)Liy;	a	texture
		p	0	id	id
	m	(Lbke;Ljava/lang/String;)Luh;	a	getSubId
		p	0	item	item
		p	1	suffix	suffix
	m	(Lbke;)Liy;	a	particle
		p	0	item	item
	m	(Lbvr;Ljava/lang/String;)Luh;	a	getSubId
		p	0	block	block
		p	1	suffix	suffix
	m	(Liz;Luh;)Liy;	a	put
		p	1	key	key
		p	2	id	id
	m	(Lbke;)Liy;	b	layer0
		p	0	item	item
	m	(Luh;)Liy;	b	all
		p	0	id	id
	m	(Lbvr;)Liy;	b	texture
		p	0	block	block
	m	(Lbvr;Lbvr;)Liy;	b	paneAndTopForEdge
		p	0	block	block
		p	1	top	top
	m	(Liz;Liz;)Liy;	b	inherit
		p	1	parent	parent
		p	2	child	child
	m	(Lbke;)Luh;	c	getId
		p	0	item	item
	m	(Luh;)Liy;	c	cross
		p	0	id	id
	m	(Liz;Luh;)Liy;	c	copyAndAdd
		p	1	key	key
		p	2	id	id
	m	(Lbvr;)Liy;	c	cross
		p	0	block	block
	m	(Lbvr;Lbvr;)Liy;	c	frontSideWithCustomBottom
		p	0	block	block
		p	1	bottom	bottom
	m	(Lbvr;)Liy;	d	plant
		p	0	block	block
	m	(Luh;)Liy;	d	plant
		p	0	id	id
	m	(Lbvr;Lbvr;)Liy;	d	frontTopSide
		p	0	frontTopSideBlock	frontTopSideBlock
		p	1	downBlock	downBlock
	m	(Liz;Luh;)Liy;	d	of
		p	0	key	key
		p	1	id	id
	m	(Lbvr;)Liy;	e	rail
		p	0	block	block
	m	(Luh;)Liy;	e	rail
		p	0	id	id
	m	(Lbvr;)Liy;	f	wool
		p	0	block	block
	m	(Luh;)Liy;	g	crop
		p	0	id	id
	m	(Lbvr;)Liy;	g	stem
		p	0	block	block
	m	(Luh;)Liy;	h	particle
		p	0	id	id
	m	(Lbvr;)Liy;	h	pattern
		p	0	block	block
	m	(Lbvr;)Liy;	i	fan
		p	0	block	block
	m	(Luh;)Liy;	i	torch
		p	0	id	id
	m	(Lbvr;)Liy;	j	sideEnd
		p	0	block	block
	m	(Luh;)Liy;	j	layer0
		p	0	id	id
	m	(Lbvr;)Liy;	k	sideAndTop
		p	0	block	block
	m	(Lbvr;)Liy;	l	sideAndEndForTop
		p	0	block	block
	m	(Lbvr;)Liy;	m	sideTopBottom
		p	0	block	block
	m	(Lbvr;)Liy;	n	wallSideTopBottom
		p	0	block	block
	m	(Lbvr;)Liy;	p	topBottom
		p	0	block	block
	m	(Lbvr;)Liy;	q	particle
		p	0	block	block
	m	(Lbvr;)Liy;	r	fire0
		p	0	block	block
	m	(Lbvr;)Liy;	s	fire1
		p	0	block	block
	m	(Lbvr;)Liy;	t	lantern
		p	0	block	block
	m	(Lbvr;)Liy;	u	torch
		p	0	block	block
	m	(Lbvr;)Liy;	v	sideFrontBack
		p	0	block	block
	m	(Lbvr;)Liy;	w	sideFrontTopBottom
		p	0	block	block
	m	(Lbvr;)Liy;	x	sideFrontTop
		p	0	block	block
	m	(Lbvr;)Liy;	y	sideFrontEnd
		p	0	block	block
	m	(Lbvr;)Liy;	z	top
		p	0	top	top
c	iz	net/minecraft/data/client/model/TextureKey
	f	Ljava/lang/String;	J	name
	f	Liz;	K	parent
	m	()Ljava/lang/String;	a	getName
	m	()Liz;	b	getParent
c	j	net/minecraft/util/crash/CrashReport
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	message
	f	Ljava/lang/Throwable;	c	cause
	f	Lk;	d	systemDetailsSection
	f	Ljava/util/List;	e	otherSections
	f	Ljava/io/File;	f	file
	f	Z	g	hasStackTrace
	f	[Ljava/lang/StackTraceElement;	h	stackTrace
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	message	message
		p	2	cause	cause
	m	()Ljava/lang/String;	a	getMessage
	m	(Ljava/io/File;)Z	a	writeToFile
	m	(Ljava/lang/StringBuilder;)V	a	addStackTrace
	m	(Ljava/lang/String;)Lk;	a	addElement
		p	1	name	name
	m	(Ljava/lang/String;I)Lk;	a	addElement
		p	1	name	name
		p	2	ignoredStackTraceCallCount	ignoredStackTraceCallCount
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lj;	a	create
		p	0	cause	cause
		p	1	title	title
	m	()Ljava/lang/Throwable;	b	getCause
	m	()Ljava/lang/String;	d	getCauseAsString
	m	()Ljava/lang/String;	e	asString
	m	()Ljava/io/File;	f	getFile
	m	()Lk;	g	getSystemDetailsSection
	m	()V	h	initCrashReport
	m	()V	i	fillSystemDetails
	m	()Ljava/lang/String;	j	generateWittyComment
c	ja	net/minecraft/data/client/model/TexturedModel
	c	Represents a model with texture variables defined.
	f	Lja$a;	a	CUBE_ALL
	f	Lja$a;	b	CUBE_MIRRORED_ALL
	f	Lja$a;	c	CUBE_COLUMN
	f	Lja$a;	d	CUBE_COLUMN_HORIZONTAL
	f	Lja$a;	e	CUBE_BOTTOM_TOP
	f	Lja$a;	f	CUBE_TOP
	f	Lja$a;	g	ORIENTABLE
	f	Lja$a;	h	ORIENTABLE_WITH_BOTTOM
	f	Lja$a;	i	CARPET
	f	Lja$a;	j	TEMPLATE_GLAZED_TERRACOTTA
	f	Lja$a;	k	CORAL_FAN
	f	Lja$a;	l	PARTICLE
	f	Lja$a;	m	TEMPLATE_ANVIL
	f	Lja$a;	n	LEAVES
	f	Lja$a;	o	TEMPLATE_LANTERN
	f	Lja$a;	p	TEMPLATE_HANGING_LANTERN
	f	Lja$a;	q	TEMPLATE_SEAGRASS
	f	Lja$a;	r	END_FOR_TOP_CUBE_COLUMN
	f	Lja$a;	s	END_FOR_TOP_CUBE_COLUMN_HORIZONTAL
	f	Lja$a;	t	WALL_CUBE_BOTTOM_TOP
	f	Liy;	v	texture
	f	Liw;	w	model
	m	(Liy;Liw;)V	<init>	<init>
		p	1	texture	texture
		p	2	model	model
	m	()Liw;	a	getModel
	m	(Lbvr;Ljava/lang/String;Ljava/util/function/BiConsumer;)Luh;	a	upload
		p	1	block	block
		p	2	suffix	suffix
		p	3	writer	writer
	m	(Ljava/util/function/Consumer;)Lja;	a	texture
		p	1	textureConsumer	textureConsumer
	m	(Luh;)Lja;	a	getCubeAll
		p	0	id	id
	m	(Ljava/util/function/Function;Liw;)Lja$a;	a	makeFactory
		p	0	textureGetter	textureGetter
		p	1	model	model
	m	(Lbvr;Ljava/util/function/BiConsumer;)Luh;	a	upload
		p	1	block	block
		p	2	writer	writer
	m	()Liy;	b	getTexture
c	ja$a	net/minecraft/data/client/model/TexturedModel$Factory
	m	(Lbvr;Ljava/lang/String;Ljava/util/function/BiConsumer;)Luh;	a	upload
		p	1	block	block
		p	2	suffix	suffix
		p	3	writer	writer
	m	(Ljava/util/function/Consumer;)Lja$a;	a	withTexture
		p	1	textureConsumer	textureConsumer
	m	(Lbvr;Ljava/util/function/BiConsumer;)Luh;	a	upload
		p	1	block	block
		p	2	writer	writer
c	je	net/minecraft/data/server/recipe/RecipeJsonProvider
	m	()Lcom/google/gson/JsonObject;	a	toJson
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1	json	json
	m	()Luh;	b	getRecipeId
	m	()Lbmw;	c	getSerializer
	m	()Lcom/google/gson/JsonObject;	d	toAdvancementJson
	m	()Luh;	e	getAdvancementId
c	jf	net/minecraft/data/server/RecipesProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lhk;	d	root
	m	([Lbo;)Lbl$a;	a	conditionsFromItemPredicates
	m	(Ladf;)Lbl$a;	a	conditionsFromTag
	m	(Lhm;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	a	saveRecipe
	m	(Lbvr;)Lba$a;	a	requireEnteringFluid
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lbnd;I)V	a	generateCookingRecipes
	m	(Ljava/util/function/Consumer;)V	a	generate
	m	(Lbqa;)Lbl$a;	a	conditionsFromItem
	m	(Lhm;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	b	saveRecipeAdvancement
c	jg	net/minecraft/data/server/recipe/ShapedRecipeJsonFactory
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbke;	b	output
	f	I	c	outputCount
	f	Ljava/util/List;	d	pattern
	f	Ljava/util/Map;	e	inputs
	f	Lw$a;	f	builder
	f	Ljava/lang/String;	g	group
	m	(Lbqa;I)V	<init>	<init>
		p	1	output	output
		p	2	outputCount	outputCount
	m	(Lbqa;I)Ljg;	a	create
		p	0	output	output
		p	1	outputCount	outputCount
	m	(Ljava/lang/String;Lae;)Ljg;	a	criterion
		p	1	criterionName	criterionName
		p	2	conditions	conditions
	m	(Ljava/lang/Character;Ladf;)Ljg;	a	input
		p	1	c	c
		p	2	tag	tag
	m	(Ljava/util/function/Consumer;)V	a	offerTo
		p	1	exporter	exporter
	m	(Lbqa;)Ljg;	a	create
		p	0	output	output
	m	(Ljava/lang/Character;Lbqa;)Ljg;	a	input
		p	1	c	c
		p	2	itemProvider	itemProvider
	m	(Luh;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Luh;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Ljava/lang/Character;Lbmr;)Ljg;	a	input
		p	1	c	c
		p	2	ingredient	ingredient
	m	(Ljava/lang/String;)Ljg;	a	pattern
		p	1	patternStr	patternStr
	m	(Ljava/lang/String;)Ljg;	b	group
		p	1	group	group
c	jg$a	net/minecraft/data/server/recipe/ShapedRecipeJsonFactory$ShapedRecipeJsonProvider
	f	Luh;	b	recipeId
	f	Lbke;	c	output
	f	I	d	resultCount
	f	Ljava/lang/String;	e	group
	f	Ljava/util/List;	f	pattern
	f	Ljava/util/Map;	g	inputs
	f	Lw$a;	h	builder
	f	Luh;	i	advancementId
	m	(Ljg;Luh;Lbke;ILjava/lang/String;Ljava/util/List;Ljava/util/Map;Lw$a;Luh;)V	<init>	<init>
		p	2	recipeId	recipeId
		p	3	output	output
		p	4	outputCount	outputCount
		p	5	group	group
		p	6	pattern	pattern
		p	7	inputs	inputs
		p	8	builder	builder
		p	9	advancementId	advancementId
c	jh	net/minecraft/data/server/recipe/ShapelessRecipeJsonFactory
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbke;	b	output
	f	I	c	outputCount
	f	Ljava/util/List;	d	inputs
	f	Lw$a;	e	builder
	f	Ljava/lang/String;	f	group
	m	(Lbqa;I)V	<init>	<init>
		p	1	itemProvider	itemProvider
		p	2	outputCount	outputCount
	m	(Lbqa;I)Ljh;	a	create
		p	0	output	output
		p	1	outputCount	outputCount
	m	(Ladf;)Ljh;	a	input
		p	1	tag	tag
	m	(Ljava/lang/String;Lae;)Ljh;	a	criterion
		p	1	criterionName	criterionName
		p	2	conditions	conditions
	m	(Lbqa;)Ljh;	a	create
		p	0	output	output
	m	(Ljava/util/function/Consumer;)V	a	offerTo
		p	1	exporter	exporter
	m	(Lbmr;)Ljh;	a	input
		p	1	ingredient	ingredient
	m	(Ljava/lang/String;)Ljh;	a	group
		p	1	group	group
	m	(Lbmr;I)Ljh;	a	input
		p	1	ingredient	ingredient
		p	2	size	size
	m	(Luh;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Luh;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Lbqa;I)Ljh;	b	input
		p	1	itemProvider	itemProvider
		p	2	size	size
	m	(Lbqa;)Ljh;	b	input
		p	1	itemProvider	itemProvider
c	jh$a	net/minecraft/data/server/recipe/ShapelessRecipeJsonFactory$ShapelessRecipeJsonProvider
	f	Luh;	a	recipeId
	f	Lbke;	b	output
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	inputs
	f	Lw$a;	f	builder
	f	Luh;	g	advancementId
	m	(Luh;Lbke;ILjava/lang/String;Ljava/util/List;Lw$a;Luh;)V	<init>	<init>
		p	1	recipeId	recipeId
		p	2	output	output
		p	3	outputCount	outputCount
		p	4	group	group
		p	5	inputs	inputs
		p	6	builder	builder
		p	7	advancementId	advancementId
c	ji	net/minecraft/data/server/recipe/CookingRecipeJsonFactory
	f	Lbke;	a	result
	f	Lbmr;	b	ingredient
	f	F	c	experience
	f	I	d	cookingTime
	f	Lw$a;	e	builder
	f	Ljava/lang/String;	f	group
	f	Lbnd;	g	serializer
	m	(Lbqa;Lbmr;FILbnd;)V	<init>	<init>
		p	1	result	result
		p	2	ingredient	ingredient
		p	3	experience	experience
		p	4	cookingTime	cookingTime
		p	5	serializer	serializer
	m	(Ljava/util/function/Consumer;)V	a	offerTo
		p	1	exporter	exporter
	m	(Luh;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Luh;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/lang/String;Lae;)Lji;	a	criterion
		p	1	criterionName	criterionName
		p	2	conditions	conditions
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Lbmr;Lbqa;FILbnd;)Lji;	a	create
		p	0	ingredient	ingredient
		p	1	result	result
		p	2	experience	experience
		p	3	cookingTime	cookingTime
		p	4	serializer	serializer
	m	(Lbmr;Lbqa;FI)Lji;	b	createBlasting
		p	0	ingredient	ingredient
		p	1	result	result
		p	2	experience	experience
		p	3	cookingTime	cookingTime
	m	(Lbmr;Lbqa;FI)Lji;	c	createSmelting
		p	0	ingredient	ingredient
		p	1	result	result
		p	2	experience	experience
		p	3	cookingTime	cookingTime
c	ji$a	net/minecraft/data/server/recipe/CookingRecipeJsonFactory$CookingRecipeJsonProvider
	f	Luh;	a	recipeId
	f	Ljava/lang/String;	b	group
	f	Lbmr;	c	ingredient
	f	Lbke;	d	result
	f	F	e	experience
	f	I	f	cookingTime
	f	Lw$a;	g	builder
	f	Luh;	h	advancementId
	f	Lbmw;	i	serializer
	m	(Luh;Ljava/lang/String;Lbmr;Lbke;FILw$a;Luh;Lbmw;)V	<init>	<init>
		p	1	recipeId	recipeId
		p	2	group	group
		p	3	ingredient	ingredient
		p	4	result	result
		p	5	experience	experience
		p	6	cookingTime	cookingTime
		p	7	builder	builder
		p	8	advancementId	advancementId
		p	9	serializer	serializer
c	jj	net/minecraft/data/server/recipe/SingleItemRecipeJsonFactory
	f	Lbke;	a	output
	f	Lbmr;	b	input
	f	I	c	count
	f	Lw$a;	d	builder
	f	Ljava/lang/String;	e	group
	f	Lbmw;	f	serializer
	m	(Lbmw;Lbmr;Lbqa;I)V	<init>	<init>
		p	1	serializer	serializer
		p	2	input	input
		p	3	output	output
		p	4	outputCount	outputCount
	m	(Luh;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Luh;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Lbmr;Lbqa;I)Ljj;	a	create
		p	0	input	input
		p	1	output	output
		p	2	outputCount	outputCount
	m	(Lbmr;Lbqa;)Ljj;	a	create
		p	0	input	input
		p	1	output	output
	m	(Ljava/lang/String;Lae;)Ljj;	a	create
		p	1	criterionName	criterionName
		p	2	conditions	conditions
c	jj$a	net/minecraft/data/server/recipe/SingleItemRecipeJsonFactory$SingleItemRecipeJsonProvider
	f	Luh;	a	recipeId
	f	Ljava/lang/String;	b	group
	f	Lbmr;	c	input
	f	Lbke;	d	output
	f	I	e	count
	f	Lw$a;	f	builder
	f	Luh;	g	advancementId
	f	Lbmw;	h	serializer
	m	(Luh;Lbmw;Ljava/lang/String;Lbmr;Lbke;ILw$a;Luh;)V	<init>	<init>
		p	1	recipeId	recipeId
		p	2	serializer	serializer
		p	3	group	group
		p	4	input	input
		p	5	output	output
		p	6	outputCount	outputCount
		p	7	builder	builder
		p	8	advancementId	advancementId
c	jk	net/minecraft/data/server/recipe/ComplexRecipeJsonFactory
	f	Lbne;	a	serializer
	m	(Lbne;)V	<init>	<init>
		p	1	serializer	serializer
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Lbne;)Ljk;	a	create
		p	0	serializer	serializer
c	jl	net/minecraft/data/server/recipe/SmithingRecipeJsonFactory
	f	Lbmr;	a	base
	f	Lbmr;	b	addition
	f	Lbke;	c	result
	f	Lw$a;	d	builder
	f	Lbmw;	e	serializer
	m	(Lbmw;Lbmr;Lbmr;Lbke;)V	<init>	<init>
		p	1	serializer	serializer
		p	2	base	base
		p	3	addition	addition
		p	4	result	result
	m	(Luh;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Luh;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Lbmr;Lbmr;Lbke;)Ljl;	a	create
		p	0	base	base
		p	1	addition	addition
		p	2	result	result
	m	(Ljava/lang/String;Lae;)Ljl;	a	criterion
		p	1	criterionName	criterionName
		p	2	conditions	conditions
c	jl$a	net/minecraft/data/server/recipe/SmithingRecipeJsonFactory$SmithingRecipeJsonProvider
	f	Luh;	a	recipeId
	f	Lbmr;	b	base
	f	Lbmr;	c	addition
	f	Lbke;	d	result
	f	Lw$a;	e	builder
	f	Luh;	f	advancementId
	f	Lbmw;	g	serializer
	m	(Luh;Lbmw;Lbmr;Lbmr;Lbke;Lw$a;Luh;)V	<init>	<init>
		p	1	recipeId	recipeId
		p	2	serializer	serializer
		p	3	base	base
		p	4	addition	addition
		p	5	result	result
		p	6	builder	builder
		p	7	advancementId	advancementId
c	jn	net/minecraft/data/dev/NbtProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lhk;	c	root
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getLocation
		p	1	targetPath	targetPath
		p	2	rootPath	rootPath
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertNbtToSnbt
		p	0	inputPath	inputPath
		p	1	location	location
		p	2	outputPath	outputPath
c	jo	net/minecraft/data/SnbtProvider
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lhk;	d	root
	f	Ljava/util/List;	e	write
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Ljo$b;	a	toCompressedNbt
		p	2	name	name
	m	(Lhm;Ljo$b;Ljava/nio/file/Path;)V	a	write
	m	(Ljo$a;)Ljo;	a	addWriter
	m	(Ljava/lang/String;Lle;)Lle;	a	write
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getFileName
		p	1	root	root
		p	2	file	file
c	jo$a	net/minecraft/data/SnbtProvider$Tweaker
	m	(Ljava/lang/String;Lle;)Lle;	a	write
		p	1	name	name
		p	2	nbt	nbt
c	jo$b	net/minecraft/data/SnbtProvider$CompressedData
	f	Ljava/lang/String;	a	name
	f	[B	b	bytes
	f	Ljava/lang/String;	d	sha1
	m	(Ljava/lang/String;[BLjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
		p	2	bytes	bytes
		p	3	sha1	sha1
c	jp	net/minecraft/data/validate/StructureValidatorProvider
	m	(Lle;)Lle;	a	addDataVersion
		p	0	nbt	nbt
	m	(Ljava/lang/String;Lle;)Lle;	b	update
c	jr	net/minecraft/data/server/BlockTagsProvider
c	js	net/minecraft/data/server/EntityTypeTagsProvider
c	jt	net/minecraft/data/server/FluidTagsProvider
c	ju	net/minecraft/data/server/ItemTagsProvider
	m	(Ladf$e;Ladf$e;)V	a	copy
c	jv	net/minecraft/data/server/AbstractTagProvider
	f	Lhk;	b	root
	f	Lgl;	c	registry
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lcom/google/gson/Gson;	e	GSON
	f	Ljava/util/Map;	f	tagBuilders
	m	(Lhk;Lgl;)V	<init>	<init>
		p	1	root	root
	m	(Luh;)Ljava/nio/file/Path;	a	getOutput
	m	(Ladf$e;)Ljv$a;	a	getOrCreateTagBuilder
	m	()V	b	configure
c	jv$a	net/minecraft/data/server/AbstractTagProvider$ObjectBuilder
	m	(Ljava/lang/Object;)Ljv$a;	a	add
		p	1	element	element
	m	(Ladf$e;)Ljv$a;	a	addTag
		p	1	identifiedTag	identifiedTag
	m	([Ljava/lang/Object;)Ljv$a;	a	add
c	jz	net/minecraft/test/TimeMismatchException
c	k	net/minecraft/util/crash/CrashReportSection
	f	Lj;	a	report
	f	Ljava/lang/String;	b	title
	f	Ljava/util/List;	c	elements
	f	[Ljava/lang/StackTraceElement;	d	stackTrace
	m	(Lj;Ljava/lang/String;)V	<init>	<init>
		p	1	report	report
		p	2	title	title
	m	(Lk;Lfu;Lcfj;)V	a	addBlockInfo
		p	0	element	element
		p	1	pos	pos
		p	2	state	state
	m	(DDD)Ljava/lang/String;	a	createPositionString
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	add
		p	1	name	name
	m	(Ljava/lang/String;Ll;)Lk;	a	add
	m	(Lfu;)Ljava/lang/String;	a	createPositionString
		p	0	pos	pos
	m	(Ljava/lang/StringBuilder;)V	a	addStackTrace
	m	(I)I	a	initStackTrace
		p	1	ignoredCallCount	ignoredCallCount
	m	()[Ljava/lang/StackTraceElement;	a	getStackTrace
	m	(III)Ljava/lang/String;	a	createPositionString
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Ljava/lang/String;Ljava/lang/Object;)Lk;	a	add
		p	1	name	name
	m	(I)V	b	trimStackTraceEnd
		p	1	callCount	callCount
c	k$a	net/minecraft/util/crash/CrashReportSection$Element
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	detail
	m	(Ljava/lang/String;Ljava/lang/Object;)V	<init>	<init>
		p	1	name	name
		p	2	detail	detail
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getDetail
c	ka	net/minecraft/test/PositionedException
	f	Lfu;	a	pos
	f	Lfu;	b	relativePos
	m	()Ljava/lang/String;	a	getDebugMessage
	m	()Lfu;	c	getPos
c	kb	net/minecraft/test/GameTestBatch
	f	Ljava/lang/String;	a	id
	f	Ljava/util/Collection;	b	testFunctions
	f	Ljava/util/function/Consumer;	c	worldSetter
	m	(Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	id	id
		p	2	testFunctions	testFunctions
		p	3	worldSetter	worldSetter
	m	(Lzd;)V	a	setWorld
		p	1	world	world
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/util/Collection;	b	getTestFunctions
c	kc	net/minecraft/test/TestRunner
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lfu;	b	pos
	f	Lzd;	c	world
	f	Lkm;	d	testManager
	f	I	e	sizeZ
	f	Ljava/util/List;	f	tests
	f	Ljava/util/List;	h	batches
	f	Lkq;	i	currentBatchTests
	f	I	j	currentBatchIndex
	f	Lfu$a;	k	reusablePos
	m	(Ljava/util/Collection;Lfu;Lcap;Lzd;Lkm;I)V	<init>	<init>
		p	2	pos	pos
	m	()Ljava/util/List;	a	getTests
	m	(Lkg;)V	a	onTestCompleted
		p	1	test	test
	m	(I)V	a	runBatch
		p	1	index	index
	m	()V	b	run
c	kd	net/minecraft/test/TimedTask
	f	Ljava/lang/Long;	a	duration
	f	Ljava/lang/Runnable;	b	task
c	kf	net/minecraft/test/StartupParameter
	f	Lkg;	a	test
	m	(Lkg;)V	<init>	<init>
		p	1	test	test
c	kg	net/minecraft/test/GameTest
	f	Lkv;	a	testFunction
	f	Lfu;	b	pos
	f	Lzd;	c	world
	f	Ljava/util/Collection;	d	listeners
	f	I	e	ticksLeft
	f	J	h	expectedStopTime
	f	Z	j	started
	f	Lcom/google/common/base/Stopwatch;	k	stopwatch
	f	Z	l	completed
	f	Ljava/lang/Throwable;	n	throwable
	m	(Lkh;)V	a	addListener
		p	1	listener	listener
	m	(Ljava/lang/Throwable;)V	a	fail
		p	1	throwable	throwable
	m	()V	a	startCountdown
	m	(Lfu;I)V	a	init
	m	(Lfu;)V	a	setPos
		p	1	pos	pos
	m	()V	b	tick
	m	()Ljava/lang/String;	c	getStructurePath
	m	()Lfu;	d	getPos
	m	()Lzd;	g	getWorld
	m	()Z	h	isPassed
	m	()Z	i	isFailed
	m	()Z	j	isStarted
	m	()Z	k	isCompleted
	m	()Ljava/lang/Throwable;	n	getThrowable
	m	()Z	q	isRequired
	m	()Z	r	isOptional
	m	()Ljava/lang/String;	s	getStructureName
	m	()V	v	start
	m	()V	x	complete
c	kh	net/minecraft/test/TestListener
	m	(Lkg;)V	a	onStarted
		p	1	test	test
	m	(Lkg;)V	c	onFailed
		p	1	test	test
c	ki	net/minecraft/test/TestFunctions
	f	Ljava/util/Collection;	a	TEST_FUNCTIONS
	f	Ljava/util/Set;	b	testClasses
	f	Ljava/util/Map;	c	WORLD_SETTERS
	m	(Lkv;Ljava/lang/String;)Z	a	isInClass
		p	0	testFunction	testFunction
		p	1	testClass	testClass
	m	(Ljava/lang/String;)Ljava/util/Collection;	a	getTestFunctions
		p	0	testClass	testClass
	m	()Ljava/util/Collection;	a	getTestFunctions
	m	(Ljava/lang/String;)Z	b	testClassExists
		p	0	testClass	testClass
	m	()Ljava/util/Collection;	b	getTestClasses
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	c	getWorldSetter
		p	0	batchId	batchId
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	getTestFunction
		p	0	structurePath	structurePath
	m	(Ljava/lang/String;)Lkv;	e	getTestFunctionOrThrow
		p	0	structurePath	structurePath
c	kj	net/minecraft/test/TestUtil
	m	(Lzd;Li;Ljava/lang/String;)V	a	sendMessage
		p	0	world	world
		p	1	formatting	formatting
		p	2	message	message
	m	(Lzd;Lfu;Lkm;I)V	a	clearTests
		p	0	world	world
		p	1	pos	pos
		p	2	testManager	testManager
		p	3	radius	radius
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	createBatches
		p	0	testFunctions	testFunctions
	m	(Ljava/lang/String;ZLjava/lang/String;)Lbki;	a	createBook
		p	0	structureName	structureName
		p	1	required	required
		p	2	message	message
	m	(Lzd;Lfu;Ljava/lang/String;)V	a	addDebugMarker
		p	0	world	world
		p	1	pos	pos
		p	2	message	message
	m	(Ljava/util/Collection;Lfu;Lcap;Lzd;Lkm;I)Ljava/util/Collection;	a	runTestBatches
		p	0	batches	batches
		p	1	pos	pos
	m	(Lzd;)V	a	clearDebugMarkers
		p	0	world	world
	m	(Lkg;Lfu;Lkm;)V	a	startTest
	m	(Lkg;Ljava/lang/String;)V	b	createLectern
		p	0	test	test
		p	1	message	message
	m	(Lkg;Lbvr;)V	b	createBeacon
		p	0	test	test
		p	1	glass	glass
	m	(Ljava/util/Collection;Lfu;Lcap;Lzd;Lkm;I)Ljava/util/Collection;	b	runTestFunctions
		p	0	testFunctions	testFunctions
		p	1	pos	pos
	m	(Lkg;)V	c	handleTestFail
		p	0	test	test
c	kk	net/minecraft/test/TimedTaskRunner
	f	Lkg;	a	test
	f	Ljava/util/List;	b	tasks
	f	J	c	tick
	m	(J)V	a	runSilently
		p	1	tick	tick
	m	(J)V	b	runReported
		p	1	tick	tick
	m	(J)V	c	runTasks
		p	1	tick	tick
c	km	net/minecraft/test/TestManager
	f	Lkm;	a	INSTANCE
	f	Ljava/util/Collection;	b	tests
	m	(Lkg;)V	a	start
		p	1	test	test
	m	()V	a	clear
	m	()V	b	tick
c	kn	net/minecraft/test/TickLimitExceededException
c	kp	net/minecraft/test/FailureLoggingTestCompletionListener
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
c	kq	net/minecraft/test/TestSet
	f	Ljava/util/Collection;	a	tests
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1	tests	tests
	m	(Lkh;)V	a	addListener
		p	1	listener	listener
	m	()I	a	getFailedRequiredTestCount
	m	(Lkg;)V	a	add
		p	1	test	test
	m	()I	b	getFailedOptionalTestCount
	m	()I	c	getCompletedTestCount
	m	()Z	d	failed
	m	()Z	e	hasFailedOptionalTests
	m	()I	h	getTestCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getResultString
c	kr	net/minecraft/test/StructureTestUtil
	f	Ljava/lang/String;	a	testStructuresDirectoryName
	m	(ILfu;Lzd;)V	a	method_22368
		p	0	altitude	altitude
		p	1	pos	pos
		p	2	world	world
	m	(Lctd;ILzd;)V	a	clearArea
		p	0	area	area
		p	2	world	world
	m	(Lfu;Lzd;)V	a	forceLoadNearbyChunks
		p	0	pos	pos
		p	1	world	world
	m	(Lcel;)Ldeg;	a	getStructureBoundingBox
		p	0	structureBlockEntity	structureBlockEntity
	m	(Lfu;Lfu;Lcap;Lzd;)V	a	placeStartButton
	m	(Lfu;ILzd;)Ljava/util/Optional;	a	findContainingStructureBlock
		p	0	pos	pos
		p	1	radius	radius
		p	2	world	world
	m	(Ljava/lang/String;Lfu;Lcap;Lzd;Z)Lcel;	a	placeStructure
		p	0	name	name
		p	1	pos	pos
	m	(Ljava/lang/String;Lzd;)Lcve;	a	createStructure
		p	0	structureId	structureId
		p	1	world	world
	m	(Ljava/lang/String;Lfu;Lfu;Lcap;Lzd;)V	a	createTestArea
		p	0	structure	structure
		p	1	pos	pos
		p	2	size	size
		p	4	world	world
	m	(Lfu;Lfu;Lzd;)Z	a	isInStructureBounds
		p	0	structureBlockPos	structureBlockPos
		p	1	pos	pos
		p	2	world	world
	m	(Ljava/nio/file/Path;)Lle;	a	loadSnbt
		p	0	path	path
	m	(Lfu;ILzd;)Lfu;	b	findNearestStructureBlock
		p	0	pos	pos
		p	1	radius	radius
		p	2	world	world
	m	(Lfu;ILzd;)Ljava/util/Collection;	c	findStructureBlocks
		p	0	pos	pos
		p	1	radius	radius
		p	2	world	world
c	kt	net/minecraft/command/arguments/TestClassArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()Lkt;	a	testClass
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getTestClass
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
c	ku	net/minecraft/server/command/TestCommand
	m	(Lcz;II)I	a	executeRunAll
		p	0	source	source
	m	(Lcz;Ljava/lang/String;III)I	a	executeCreate
		p	0	source	source
		p	1	structure	structure
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lcz;Ljava/lang/String;II)I	a	executeRunAll
		p	0	source	source
		p	1	testClass	testClass
	m	(Lcz;Lkv;I)I	a	executeRun
		p	0	source	source
		p	1	testFunction	testFunction
	m	(Lcz;I)I	a	executeClearAll
		p	0	source	source
		p	1	radius	radius
	m	(Lzd;Ljava/lang/String;Li;)V	a	sendMessage
		p	0	world	world
		p	1	message	message
		p	2	formatting	formatting
	m	(Lcz;)I	a	executeRunThis
		p	0	source	source
	m	(Lcz;Ljava/lang/String;)I	a	executePos
		p	0	source	source
		p	1	variableName	variableName
	m	(Lcz;Ljava/util/Collection;II)V	a	run
		p	0	source	source
		p	1	testFunctions	testFunctions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lzd;Lfu;Lkq;)V	a	run
		p	0	world	world
		p	1	pos	pos
		p	2	tests	tests
	m	(Lkv;Lzd;)V	a	setWorld
		p	0	testFunction	testFunction
		p	1	world	world
	m	(Lcz;Ljava/lang/String;)V	b	sendMessage
		p	0	source	source
		p	1	message	message
	m	(Lcz;)I	b	executeRunThese
		p	0	source	source
	m	(Lzd;Lkq;)V	b	onCompletion
		p	0	world	world
		p	1	tests	tests
	m	(Lcz;Ljava/lang/String;)I	c	executeExport
		p	0	source	source
		p	1	structure	structure
	m	(Lcz;Ljava/lang/String;)I	d	executeImport
		p	0	source	source
		p	1	structure	structure
c	ku$a	net/minecraft/server/command/TestCommand$Listener
	f	Lzd;	a	world
	f	Lkq;	b	tests
	m	(Lzd;Lkq;)V	<init>	<init>
		p	1	world	world
		p	2	tests	tests
c	kv	net/minecraft/test/TestFunction
	f	Ljava/lang/String;	a	batchId
	f	Ljava/lang/String;	b	structurePath
	f	Ljava/lang/String;	c	structureName
	f	Z	d	required
	f	Ljava/util/function/Consumer;	e	starter
	f	I	f	tickLimit
	f	J	g	duration
	m	()Ljava/lang/String;	a	getStructurePath
	m	(Lkf;)V	a	start
	m	()Ljava/lang/String;	b	getStructureName
	m	()I	c	getTickLimit
	m	()Z	d	isRequired
	m	()Ljava/lang/String;	e	getBatchId
	m	()J	f	getDuration
c	kw	net/minecraft/command/arguments/TestFunctionArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lkv;	a	parse
	m	()Lkw;	a	testFunction
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lkv;	a	getFunction
		p	0	context	context
		p	1	name	name
c	kx	net/minecraft/test/TestCompletionListener
	m	(Lkg;)V	a	onTestFailed
c	kz	net/minecraft/util/Language
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/regex/Pattern;	c	TOKEN_PATTERN
	f	Lkz;	d	instance
	m	(Lkz;)V	a	setInstance
		p	0	language	language
	m	(Ljava/lang/String;Z)Ljava/lang/String;	a	reorder
		p	1	string	string
		p	2	allowTokens	allowTokens
	m	()Lkz;	a	getInstance
	m	(Ljava/lang/String;)Ljava/lang/String;	a	get
		p	1	key	key
	m	(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V	a	load
		p	0	inputStream	inputStream
		p	1	entryConsumer	entryConsumer
	m	()Z	b	isRightToLeft
	m	(Ljava/lang/String;)Z	b	hasTranslation
		p	1	key	key
	m	()Lkz;	c	create
c	l	net/minecraft/util/crash/CrashCallable
c	lb	net/minecraft/nbt/ByteArrayTag
	f	Llw;	a	READER
	f	[B	b	value
	m	([B)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)[B	a	toArray
		p	0	list	list
	m	(I)Llc;	a	get
	m	(ILlc;)Llc;	a	set
	m	(ILlc;)V	b	method_10531
	m	(I)Llc;	b	method_10536
	m	()[B	d	getByteArray
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	lb$1	net/minecraft/nbt/ByteArrayTag$1
	m	(Ljava/io/DataInput;ILln;)Llb;	a	read
c	lc	net/minecraft/nbt/ByteTag
	f	Llw;	a	READER
	f	Llc;	b	ZERO
	f	Llc;	c	ONE
	f	B	h	value
	m	(B)V	<init>	<init>
		p	1	value	value
	m	(B)Llc;	a	of
		p	0	value	value
	m	(Z)Llc;	a	of
		p	0	value	value
	m	()Llc;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	lc$1	net/minecraft/nbt/ByteTag$1
	m	(Ljava/io/DataInput;ILln;)Llc;	a	read
c	lc$a	net/minecraft/nbt/ByteTag$Cache
	f	[Llc;	a	VALUES
c	ld	net/minecraft/nbt/AbstractListTag
	m	(ILlu;)Z	a	setTag
		p	1	index	index
		p	2	tag	tag
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
	m	(ILlu;)Z	b	addTag
		p	1	index	index
		p	2	tag	tag
	m	(ILlu;)V	c	add
	m	(I)Llu;	c	remove
	m	(ILlu;)Llu;	d	set
	m	()B	d_	getElementType
	m	(I)Ljava/lang/Object;	remove	remove
		p	1	index	index
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
c	le	net/minecraft/nbt/CompoundTag
	f	Llw;	b	READER
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/util/regex/Pattern;	h	PATTERN
	f	Ljava/util/Map;	i	tags
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	tags	tags
	m	(Ljava/lang/String;Llu;)Llu;	a	put
		p	1	key	key
		p	2	tag	tag
	m	(Ljava/lang/String;Llw;Ljava/lang/ClassCastException;)Lj;	a	createCrashReport
		p	1	key	key
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;S)V	a	putShort
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;D)V	a	putDouble
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;[J)V	a	putLongArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Ljava/util/UUID;)V	a	putUuid
		c	Writes a {@link UUID} to its NBT representation in this {@code CompoundTag}.
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
		c	Reads a {@link UUID} from its NBT representation in this {@code CompoundTag}.
		p	1	key	key
	m	(Lle;)Lle;	a	copyFrom
		p	1	source	source
	m	(Ljava/lang/String;J)V	a	putLong
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Z)V	a	putBoolean
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;B)V	a	putByte
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;F)V	a	putFloat
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;[I)V	a	putIntArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;[B)V	a	putByteArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Llu;Ljava/io/DataOutput;)V	a	write
		p	0	key	key
		p	1	tag	tag
		p	2	output	output
	m	(Ljava/lang/String;I)V	b	putInt
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Ljava/util/List;)V	b	putIntArray
		p	1	key	key
		p	2	value	value
	m	(Llw;Ljava/lang/String;Ljava/io/DataInput;ILln;)Llu;	b	read
		p	0	reader	reader
		p	1	key	key
		p	2	input	input
		p	3	depth	depth
		p	4	tracker	tracker
	m	(Ljava/lang/String;)Z	b	containsUuid
		c	Returns {@code true} if this {@code CompoundTag} contains a valid UUID representation associated with the given key.\nA valid UUID is represented by an int array of length 4.
		p	1	key	key
	m	(Ljava/io/DataInput;Lln;)B	c	readByte
		p	0	input	input
		p	1	tracker	tracker
	m	(Ljava/lang/String;)Llu;	c	get
		p	1	key	key
	m	(Ljava/lang/String;I)Z	c	contains
		p	1	key	key
		p	2	type	type
	m	(Ljava/lang/String;Ljava/util/List;)V	c	putLongArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;I)Llk;	d	getList
		p	1	key	key
		p	2	type	type
	m	(Ljava/lang/String;)B	d	getType
		p	1	key	key
	m	()Ljava/util/Set;	d	getKeys
	m	(Ljava/io/DataInput;Lln;)Ljava/lang/String;	d	readString
		p	0	input	input
		p	1	tracker	tracker
	m	()I	e	getSize
	m	(Ljava/lang/String;)Z	e	contains
		p	1	key	key
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	(Ljava/lang/String;)B	f	getByte
		p	1	key	key
	m	()Lle;	g	copy
	m	(Ljava/lang/String;)S	g	getShort
		p	1	key	key
	m	(Ljava/lang/String;)I	h	getInt
		p	1	key	key
	m	(Ljava/lang/String;)J	i	getLong
		p	1	key	key
	m	(Ljava/lang/String;)F	j	getFloat
		p	1	key	key
	m	(Ljava/lang/String;)D	k	getDouble
		p	1	key	key
	m	(Ljava/lang/String;)Ljava/lang/String;	l	getString
		p	1	key	key
	m	(Ljava/lang/String;)[B	m	getByteArray
		p	1	key	key
	m	(Ljava/lang/String;)[I	n	getIntArray
		p	1	key	key
	m	(Ljava/lang/String;)[J	o	getLongArray
		p	1	key	key
	m	(Ljava/lang/String;)Lle;	p	getCompound
		p	1	key	key
	m	(Ljava/lang/String;)Z	q	getBoolean
		p	1	key	key
	m	(Ljava/lang/String;)V	r	remove
		p	1	key	key
	m	(Ljava/lang/String;)Ljava/lang/String;	s	escapeTagKey
		p	0	key	key
	m	(Ljava/lang/String;)Lmr;	t	prettyPrintTagKey
		p	0	key	key
c	le$1	net/minecraft/nbt/CompoundTag$1
	m	(Ljava/io/DataInput;ILln;)Lle;	a	read
c	lf	net/minecraft/nbt/DoubleTag
	f	Llf;	a	ZERO
	f	Llw;	b	READER
	f	D	c	value
	m	(D)V	<init>	<init>
		p	1	value	value
	m	(D)Llf;	a	of
		p	0	value	value
	m	()Llf;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	lf$1	net/minecraft/nbt/DoubleTag$1
	m	(Ljava/io/DataInput;ILln;)Llf;	a	read
c	lg	net/minecraft/nbt/EndTag
	f	Llw;	a	READER
	f	Llg;	b	INSTANCE
	m	()Llg;	d	copy
c	lg$1	net/minecraft/nbt/EndTag$1
	m	(Ljava/io/DataInput;ILln;)Llg;	a	read
c	lh	net/minecraft/nbt/FloatTag
	f	Llh;	a	ZERO
	f	Llw;	b	READER
	f	F	c	value
	m	(F)V	<init>	<init>
		p	1	value	value
	m	(F)Llh;	a	of
		p	0	value	value
	m	()Llh;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	lh$1	net/minecraft/nbt/FloatTag$1
	m	(Ljava/io/DataInput;ILln;)Llh;	a	read
c	li	net/minecraft/nbt/IntArrayTag
	f	Llw;	a	READER
	f	[I	b	value
	m	([I)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	value	value
	m	(ILlj;)Llj;	a	set
	m	(I)Llj;	a	get
	m	(Ljava/util/List;)[I	a	toArray
		p	0	list	list
	m	(ILlj;)V	b	add
	m	(I)Llj;	b	remove
	m	()Lli;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()[I	g	getIntArray
c	li$1	net/minecraft/nbt/IntArrayTag$1
	m	(Ljava/io/DataInput;ILln;)Lli;	a	read
c	lj	net/minecraft/nbt/IntTag
	f	Llw;	a	READER
	f	I	b	value
	m	(I)V	<init>	<init>
		p	1	value	value
	m	(I)Llj;	a	of
		p	0	value	value
	m	()Llj;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	lj$1	net/minecraft/nbt/IntTag$1
	m	(Ljava/io/DataInput;ILln;)Llj;	a	read
c	lj$a	net/minecraft/nbt/IntTag$Cache
	f	[Llj;	a	VALUES
c	lk	net/minecraft/nbt/ListTag
	f	Llw;	a	READER
	f	Lit/unimi/dsi/fastutil/bytes/ByteSet;	b	NBT_NUMBER_TYPES
	f	Ljava/util/List;	c	value
	f	B	h	type
	m	(Ljava/util/List;B)V	<init>	<init>
		p	1	list	list
		p	2	type	type
	m	(Llu;)Z	a	canAdd
		p	1	tag	tag
	m	(I)Lle;	a	getCompound
		p	1	index	index
	m	(ILlu;)V	add	add
	m	(I)Llk;	b	getList
		p	1	index	index
	m	()Llk;	d	copy
	m	(I)S	d	getShort
		p	1	index	index
	m	(I)I	e	getInt
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	(I)[I	f	getIntArray
		p	1	index	index
	m	()V	g	forgetTypeIfEmpty
	m	(I)D	h	getDouble
		p	1	index	index
	m	(I)F	i	getFloat
		p	1	index	index
	m	(I)Ljava/lang/String;	j	getString
		p	1	index	index
	m	(I)Llu;	k	get
	m	(I)Llu;	remove	remove
	m	(ILlu;)Llu;	set	set
c	lk$1	net/minecraft/nbt/ListTag$1
	m	(Ljava/io/DataInput;ILln;)Llk;	a	read
c	ll	net/minecraft/nbt/LongArrayTag
	f	Llw;	a	READER
	f	[J	b	value
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1	value	value
	m	([J)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	value	value
	m	(I)Llm;	a	get
	m	(ILlm;)Llm;	a	method_10606
	m	(Ljava/util/List;)[J	a	toArray
		p	0	list	list
	m	(I)Llm;	b	remove
	m	(ILlm;)V	b	add
	m	()Lll;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()[J	g	getLongArray
c	ll$1	net/minecraft/nbt/LongArrayTag$1
	m	(Ljava/io/DataInput;ILln;)Lll;	a	read
c	lm	net/minecraft/nbt/LongTag
	f	Llw;	a	READER
	f	J	b	value
	m	(J)V	<init>	<init>
		p	1	value	value
	m	(J)Llm;	a	of
		p	0	value	value
	m	()Llm;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	lm$1	net/minecraft/nbt/LongTag$1
	m	(Ljava/io/DataInput;ILln;)Llm;	a	read
c	lm$a	net/minecraft/nbt/LongTag$Cache
	f	[Llm;	a	VALUES
c	ln	net/minecraft/nbt/PositionTracker
	f	Lln;	a	DEFAULT
	f	J	b	max
	f	J	c	pos
	m	(J)V	<init>	<init>
		p	1	max	max
	m	(J)V	a	add
		p	1	bits	bits
c	lo	net/minecraft/nbt/NbtIo
	m	(Lle;Ljava/io/DataOutput;)V	a	write
		p	0	tag	tag
		p	1	output	output
	m	(Llu;Ljava/io/DataOutput;)V	a	write
		p	0	tag	tag
		p	1	output	output
	m	(Lle;Ljava/io/File;)V	a	write
		p	0	tag	tag
		p	1	file	file
	m	(Ljava/io/File;)Lle;	a	read
		p	0	file	file
	m	(Ljava/io/InputStream;)Lle;	a	readCompressed
		p	0	stream	stream
	m	(Ljava/io/DataInput;Lln;)Lle;	a	read
		p	0	input	input
		p	1	tracker	tracker
	m	(Ljava/io/DataInputStream;)Lle;	a	read
		p	0	stream	stream
	m	(Lle;Ljava/io/OutputStream;)V	a	writeCompressed
		p	0	tag	tag
		p	1	stream	stream
	m	(Ljava/io/DataInput;ILln;)Llu;	a	read
		p	0	input	input
		p	1	depth	depth
		p	2	tracker	tracker
c	lp	net/minecraft/datafixer/NbtOps
	c	Used to represent a Minecraft NBT as a {@link com.mojang.datafixers.Dynamic} for DataFixerUpper.
	f	Llp;	a	INSTANCE
	m	(Ljava/nio/ByteBuffer;)Llu;	a	createByteList
	m	(D)Llu;	a	createDouble
	m	(Z)Llu;	a	createBoolean
	m	(Llu;Llu;Llu;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Llu;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lcom/mojang/serialization/DynamicOps;Llu;)Ljava/lang/Object;	a	convertTo
	m	(I)Llu;	a	createInt
	m	(J)Llu;	a	createLong
	m	(Ljava/util/stream/IntStream;)Llu;	a	createIntList
	m	(Llu;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(F)Llu;	a	createFloat
	m	(Ljava/lang/String;)Llu;	a	createString
	m	(Ljava/lang/Number;)Llu;	a	createNumeric
	m	(Ljava/util/stream/Stream;)Llu;	a	createMap
	m	(Ljava/util/stream/LongStream;)Llu;	a	createLongList
	m	(S)Llu;	a	createShort
	m	(Llu;Llu;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Llu;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Llu;Ljava/lang/String;)Llu;	a	remove
	m	()Llu;	a	empty
	m	(B)Llu;	a	createByte
	m	(Llu;)Lcom/mojang/serialization/DataResult;	b	getStringValue
	m	(Ljava/util/stream/Stream;)Llu;	b	createList
	m	(Llu;)Lcom/mojang/serialization/DataResult;	c	getMapValues
	m	(Llu;)Lcom/mojang/serialization/DataResult;	d	getMapEntries
	m	(Llu;)Lcom/mojang/serialization/DataResult;	e	getMap
	m	(Llu;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Llu;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Llu;)Lcom/mojang/serialization/DataResult;	h	getByteBuffer
	m	(Llu;)Lcom/mojang/serialization/DataResult;	i	getIntStream
	m	(Llu;)Lcom/mojang/serialization/DataResult;	j	getLongStream
c	lp$1	net/minecraft/datafixer/NbtOps$1
	m	(Ljava/lang/String;)Llu;	a	get
	m	(Llu;)Llu;	a	get
c	lp$a	net/minecraft/datafixer/NbtOps$MapBuilder
	m	(Ljava/lang/String;Llu;Lle;)Lle;	a	append
	m	()Lle;	a	initBuilder
	m	(Lle;Llu;)Lcom/mojang/serialization/DataResult;	a	build
c	lq	net/minecraft/nbt/NbtHelper
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lfu;)Lle;	a	fromBlockPos
		p	0	pos	pos
	m	(Lcfl;Lcgl;Ljava/lang/String;Lle;Lle;)Lcfl;	a	withProperty
		p	0	state	state
		p	1	property	property
		p	2	key	key
		p	3	propertiesTag	propertiesTag
		p	4	mainTag	mainTag
	m	(Lcgl;Ljava/lang/Comparable;)Ljava/lang/String;	a	nameValue
		p	0	property	property
		p	1	value	value
	m	(Llu;)Ljava/util/UUID;	a	toUuid
		c	Deserializes a tag into a {@link UUID}.\nThe tag's data must have the same structure as the output of {@link #fromUuid}.\n\n@throws IllegalArgumentException if {@code tag} is not a valid representation of a UUID\n@since 20w10a
		p	0	tag	tag
	m	(Lle;)Lcom/mojang/authlib/GameProfile;	a	toGameProfile
		p	0	tag	tag
	m	(Ljava/util/UUID;)Lli;	a	fromUuid
		c	Serializes a {@link UUID} into its equivalent NBT representation.\n\n@since 20w10a
		p	0	uuid	uuid
	m	(Lcom/mojang/datafixers/DataFixer;Laeo;Lle;I)Lle;	a	update
		c	Uses the data fixer to update a tag to the latest data version.
		p	0	fixer	fixer
			c	the data fixer
		p	1	fixTypes	fixTypes
			c	the fix types
		p	2	tag	tag
			c	the tag to fix
		p	3	oldVersion	oldVersion
			c	the data version of the compound tag
	m	(Lcfj;)Lle;	a	fromBlockState
		p	0	state	state
	m	(Lcom/mojang/datafixers/DataFixer;Laeo;Lle;II)Lle;	a	update
		c	Uses the data fixer to update a tag.
		p	0	fixer	fixer
			c	the data fixer
		p	1	fixTypes	fixTypes
			c	the fix types
		p	2	tag	tag
			c	the tag to fix
		p	3	oldVersion	oldVersion
			c	the data version of the compound tag
		p	4	targetVersion	targetVersion
			c	the data version to update the tag to
	m	(Llu;Llu;Z)Z	a	matches
		p	0	standard	standard
		p	1	subject	subject
		p	2	equalValue	equalValue
	m	(Lle;Lcom/mojang/authlib/GameProfile;)Lle;	a	fromGameProfile
		p	0	tag	tag
		p	1	profile	profile
	m	(Lle;)Lfu;	b	toBlockPos
		p	0	tag	tag
	m	(Lle;)Lcfj;	c	toBlockState
		p	0	tag	tag
c	lr	net/minecraft/nbt/AbstractNumberTag
	m	()J	e	getLong
	m	()I	f	getInt
	m	()S	g	getShort
	m	()B	h	getByte
	m	()D	i	getDouble
	m	()F	j	getFloat
	m	()Ljava/lang/Number;	k	getNumber
c	ls	net/minecraft/nbt/ShortTag
	f	Llw;	a	READER
	f	S	b	value
	m	(S)V	<init>	<init>
		p	1	value	value
	m	(S)Lls;	a	of
		p	0	value	value
	m	()Lls;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ls$1	net/minecraft/nbt/ShortTag$1
	m	(Ljava/io/DataInput;ILln;)Lls;	a	read
c	ls$a	net/minecraft/nbt/ShortTag$Cache
	f	[Lls;	a	VALUES
c	lt	net/minecraft/nbt/StringTag
	f	Llw;	a	READER
	f	Llt;	b	EMPTY
	f	Ljava/lang/String;	c	value
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	value	value
	m	(Ljava/lang/String;)Llt;	a	of
		p	0	value	value
	m	(Ljava/lang/String;)Ljava/lang/String;	b	escape
		p	0	value	value
	m	()Llt;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	lt$1	net/minecraft/nbt/StringTag$1
	m	(Ljava/io/DataInput;ILln;)Llt;	a	read
c	lu	net/minecraft/nbt/Tag
	f	Li;	d	AQUA
	f	Li;	e	GREEN
	f	Li;	f	GOLD
	f	Li;	g	RED
	m	()B	a	getType
	m	(Ljava/lang/String;I)Lmr;	a	toText
		p	1	indent	indent
		p	2	depth	depth
	m	(Ljava/io/DataOutput;)V	a	write
		p	1	output	output
	m	()Llw;	b	getReader
	m	()Llu;	c	copy
	m	()Ljava/lang/String;	f_	asString
	m	()Lmr;	l	toText
c	lv	net/minecraft/nbt/StringNbtReader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	TRAILING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	EXPECTED_KEY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	LIST_MIXED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ARRAY_MIXED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ARRAY_INVALID
	f	Ljava/util/regex/Pattern;	g	DOUBLE_PATTERN_IMPLICIT
	f	Ljava/util/regex/Pattern;	h	DOUBLE_PATTERN
	f	Ljava/util/regex/Pattern;	i	FLOAT_PATTERN
	f	Ljava/util/regex/Pattern;	j	BYTE_PATTERN
	f	Ljava/util/regex/Pattern;	k	LONG_PATTERN
	f	Ljava/util/regex/Pattern;	l	SHORT_PATTERN
	f	Ljava/util/regex/Pattern;	m	INT_PATTERN
	f	Lcom/mojang/brigadier/StringReader;	n	reader
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1	reader	reader
	m	()Lle;	a	readCompoundTag
	m	(C)V	a	expect
	m	(Ljava/lang/String;)Lle;	a	parse
		p	0	string	string
	m	(Llw;Llw;)Ljava/util/List;	a	readArray
		p	1	arrayTypeReader	arrayTypeReader
		p	2	typeReader	typeReader
	m	(Ljava/lang/String;)Llu;	b	parsePrimitive
		p	1	input	input
	m	()Ljava/lang/String;	b	readString
	m	()Llu;	c	parseTagPrimitive
	m	()Llu;	d	parseTag
	m	()Llu;	e	parseTagArray
	m	()Lle;	f	parseCompoundTag
	m	()Llu;	g	parseListTag
	m	()Llu;	h	parseTagPrimitiveArray
	m	()Z	i	readComma
c	lw	net/minecraft/nbt/TagReader
	m	()Ljava/lang/String;	a	getCrashReportName
	m	(I)Llw;	a	createInvalid
		p	0	type	type
	m	()Ljava/lang/String;	b	getCommandFeedbackName
	m	(Ljava/io/DataInput;ILln;)Llu;	b	read
		p	1	input	input
		p	2	depth	depth
		p	3	tracker	tracker
	m	()Z	c	isImmutable
c	lw$1	net/minecraft/nbt/TagReader$1
	m	(Ljava/io/DataInput;ILln;)Llg;	a	read
c	lx	net/minecraft/nbt/TagReaders
	f	[Llw;	a	VALUES
	m	(I)Llw;	a	of
		p	0	type	type
c	lz	net/minecraft/network/encryption/PacketEncryptionManager
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	conversionBuffer
	f	[B	c	encryptionBuffer
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decrypt
		p	1	context	context
	m	(Lio/netty/buffer/ByteBuf;)[B	a	toByteArray
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encrypt
		p	1	buffer	buffer
c	m	net/minecraft/util/logging/UncaughtExceptionLogger
	f	Lorg/apache/logging/log4j/Logger;	a	logger
c	ma	net/minecraft/network/encryption/PacketDecryptor
	f	Llz;	a	manager
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
c	mb	net/minecraft/network/encryption/PacketEncryptor
	f	Llz;	a	manager
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
c	mc	net/minecraft/network/PacketInflater
	f	Ljava/util/zip/Inflater;	a	inflater
	f	I	b	compressionThreshold
	m	(I)V	<init>	<init>
		p	1	compressionThreshold	compressionThreshold
	m	(I)V	a	setCompressionThreshold
		p	1	compressionThreshold	compressionThreshold
c	md	net/minecraft/network/PacketDeflater
	f	[B	a	deflateBuffer
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	compressionThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	m	(I)V	a	setCompressionThreshold
		p	1	compressionThreshold	compressionThreshold
c	me	net/minecraft/network/ClientConnection
	f	Lorg/apache/logging/log4j/Marker;	a	MARKER_NETWORK
	f	Lorg/apache/logging/log4j/Marker;	b	MARKER_NETWORK_PACKETS
	f	Lio/netty/util/AttributeKey;	c	ATTR_KEY_PROTOCOL
	f	Lady;	d	CLIENT_IO_GROUP
	f	Lady;	e	CLIENT_IO_GROUP_EPOLL
	f	Lady;	f	CLIENT_IO_GROUP_LOCAL
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	f	Lnj;	h	side
	f	Ljava/util/Queue;	i	packetQueue
	f	Lio/netty/channel/Channel;	j	channel
	f	Ljava/net/SocketAddress;	k	address
	f	Lmj;	l	packetListener
	f	Lmr;	m	disconnectReason
	f	Z	n	encrypted
	f	Z	o	disconnected
	f	I	p	packetsReceivedCounter
	f	I	q	packetsSentCounter
	f	F	r	avgPacketsReceived
	f	F	s	avgPacketsSent
	f	I	t	ticks
	f	Z	u	errored
	m	(Lnj;)V	<init>	<init>
		p	1	side	side
	m	(Lni;Lio/netty/util/concurrent/GenericFutureListener;)V	a	send
		p	1	packet	packet
		p	2	callback	callback
	m	(Lni;)V	a	send
		p	1	packet	packet
	m	(I)V	a	setCompressionThreshold
		p	1	compressionThreshold	compressionThreshold
	m	(Ljava/net/InetAddress;IZ)Lme;	a	connect
		p	0	address	address
		p	1	port	port
		p	2	shouldUseNativeTransport	shouldUseNativeTransport
	m	(Lmr;)V	a	disconnect
		p	1	disconnectReason	disconnectReason
	m	()V	a	tick
	m	(Lmf;)V	a	setState
		p	1	state	state
	m	(Lio/netty/channel/ChannelHandlerContext;Lni;)V	a	channelRead0
	m	(Ljava/net/SocketAddress;)Lme;	a	connectLocal
		p	0	address	address
	m	(Lmj;)V	a	setPacketListener
		p	1	listener	listener
	m	(Lni;Lmj;)V	a	handlePacket
		p	0	packet	packet
		p	1	listener	listener
	m	(Ljavax/crypto/SecretKey;)V	a	setupEncryption
	m	()Ljava/net/SocketAddress;	b	getAddress
	m	(Lni;Lio/netty/util/concurrent/GenericFutureListener;)V	b	sendImmediately
		p	1	packet	packet
		p	2	callback	callback
	m	()Z	c	isLocal
	m	()Z	f	isEncrypted
	m	()Z	g	isOpen
	m	()Z	h	hasChannel
	m	()Lmj;	i	getPacketListener
	m	()Lmr;	j	getDisconnectReason
	m	()V	k	disableAutoRead
	m	()V	l	handleDisconnection
	m	()F	m	getAveragePacketsReceived
	m	()F	n	getAveragePacketsSent
	m	()V	o	sendQueuedPackets
c	me$a	net/minecraft/network/ClientConnection$QueuedPacket
	f	Lni;	a	packet
	f	Lio/netty/util/concurrent/GenericFutureListener;	b	callback
	m	(Lni;Lio/netty/util/concurrent/GenericFutureListener;)V	<init>	<init>
		p	1	packet	packet
		p	2	callback	callback
c	mf	net/minecraft/network/NetworkState
	f	[Lmf;	e	STATES
	f	Ljava/util/Map;	f	HANDLER_STATE_MAP
	f	I	g	stateId
	f	Ljava/util/Map;	h	packetHandlers
	m	(Ljava/lang/String;IILmf$b;)V	<init>	<init>
		p	3	id	id
	m	(Lni;)Lmf;	a	getPacketHandlerState
		p	0	handler	handler
	m	(I)Lmf;	a	byId
		p	0	id	id
	m	()I	a	getId
	m	(Lnj;I)Lni;	a	getPacketHandler
		p	1	side	side
		p	2	packetId	packetId
	m	(Lnj;Lni;)Ljava/lang/Integer;	a	getPacketId
		p	1	side	side
		p	2	packet	packet
	m	()Lmf$b;	b	createPacketHandlerInitializer
c	mf$a	net/minecraft/network/NetworkState$PacketHandler
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	packetIds
	f	Ljava/util/List;	b	packetFactories
	m	(Ljava/lang/Class;)Ljava/lang/Integer;	a	getId
		p	1	packet	packet
	m	(I)Lni;	a	createPacket
		p	1	id	id
	m	(Ljava/lang/Class;Ljava/util/function/Supplier;)Lmf$a;	a	register
		p	1	type	type
		p	2	factory	factory
	m	()Ljava/lang/Iterable;	a	getPacketTypes
c	mf$b	net/minecraft/network/NetworkState$PacketHandlerInitializer
	f	Ljava/util/Map;	a	packetHandlers
	m	(Lnj;Lmf$a;)Lmf$b;	a	setup
		p	1	side	side
c	mg	net/minecraft/network/PacketByteBuf
	f	Lio/netty/buffer/ByteBuf;	a	parent
	m	(Luh;)Lmg;	a	writeIdentifier
	m	(Ldeh;)V	a	writeBlockHitResult
	m	([JI)[J	a	readLongArray
		p	1	toArray	toArray
	m	(Lle;)Lmg;	a	writeCompoundTag
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	a	readEnumConstant
	m	(Ljava/util/UUID;)Lmg;	a	writeUuid
	m	(Lbki;)Lmg;	a	writeItemStack
	m	(I)I	a	getVarIntSizeBytes
	m	([J)Lmg;	a	writeLongArray
	m	(Ljava/lang/Enum;)Lmg;	a	writeEnumConstant
	m	(Lfu;)Lmg;	a	writeBlockPos
	m	(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	decode
	m	(Ljava/util/Date;)Lmg;	a	writeDate
	m	([I)Lmg;	a	writeIntArray
	m	(Ljava/lang/String;)Lmg;	a	writeString
	m	(Lmr;)Lmg;	a	writeText
		p	1	text	text
	m	([B)Lmg;	a	writeByteArray
	m	()[B	a	readByteArray
	m	(Ljava/lang/String;I)Lmg;	a	writeString
	m	([J)[J	b	readLongArray
	m	()[I	b	readIntArray
	m	(J)Lmg;	b	writeVarLong
	m	(I)[B	b	readByteArray
	m	(I)[I	c	readIntArray
	m	(Lio/netty/buffer/ByteBuf;)I	compareTo	compareTo
	m	(I)Lmg;	d	writeVarInt
	m	(I)Ljava/lang/String;	e	readString
	m	()Lfu;	e	readBlockPos
	m	()Lgo;	g	readChunkSectionPos
	m	()Lmr;	h	readText
	m	()I	i	readVarInt
	m	()J	j	readVarLong
	m	()Ljava/util/UUID;	k	readUuid
	m	()Lle;	l	readCompoundTag
	m	()Lbki;	m	readItemStack
	m	()Ljava/lang/String;	n	readString
	m	()Luh;	o	readIdentifier
	m	()Ljava/util/Date;	p	readDate
	m	()Ldeh;	q	readBlockHitResult
	m	(I)Lio/netty/buffer/ByteBuf;	retain	retain
	m	()Lio/netty/buffer/ByteBuf;	retain	retain
	m	()Lio/netty/buffer/ByteBuf;	touch	touch
	m	(Ljava/lang/Object;)Lio/netty/buffer/ByteBuf;	touch	touch
c	mh	net/minecraft/network/DecoderHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lorg/apache/logging/log4j/Marker;	b	MARKER
	f	Lnj;	c	side
	m	(Lnj;)V	<init>	<init>
		p	1	side	side
c	mi	net/minecraft/network/PacketEncoder
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lorg/apache/logging/log4j/Marker;	b	MARKER
	f	Lnj;	c	side
	m	(Lnj;)V	<init>	<init>
		p	1	side	side
	m	(Lio/netty/channel/ChannelHandlerContext;Lni;Lio/netty/buffer/ByteBuf;)V	a	encode
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V	encode	encode
		p	1	ctx	ctx
		p	2	packet	packet
		p	3	out	out
c	mj	net/minecraft/network/listener/PacketListener
	m	()Lme;	a	getConnection
	m	(Lmr;)V	a	onDisconnected
		p	1	reason	reason
c	mk	net/minecraft/network/PacketEncoderException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1	cause	cause
c	ml	net/minecraft/network/SplitterHandler
c	mm	net/minecraft/network/SizePrepender
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
c	mn	net/minecraft/text/BaseText
	f	Ljava/util/List;	a	siblings
	f	Lnb;	d	style
	m	()Lmn;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	mo	net/minecraft/network/MessageType
	f	B	d	id
	f	Z	e	interruptsNarration
	m	(Ljava/lang/String;IBZ)V	<init>	<init>
		p	3	id	id
		p	4	interruptsNarration	interruptsNarration
	m	(B)Lmo;	a	byId
		p	0	id	id
	m	()B	a	getId
	m	()Z	b	interruptsNarration
c	mp	net/minecraft/text/ClickEvent
	f	Lmp$a;	a	action
	f	Ljava/lang/String;	b	value
	m	(Lmp$a;Ljava/lang/String;)V	<init>	<init>
		p	1	action	action
		p	2	value	value
	m	()Lmp$a;	a	getAction
	m	()Ljava/lang/String;	b	getValue
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	mp$a	net/minecraft/text/ClickEvent$Action
	f	Ljava/util/Map;	g	BY_NAME
	f	Z	h	userDefinable
	f	Ljava/lang/String;	i	name
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3	name	name
		p	4	userDefinable	userDefinable
	m	(Lmp$a;)Lmp$a;	a	method_10849
		p	0	a	a
	m	(Ljava/lang/String;)Lmp$a;	a	byName
		p	0	name	name
	m	()Z	a	isUserDefinable
	m	()Ljava/lang/String;	b	getName
c	mq	net/minecraft/client/gui/screen/ScreenTexts
	f	Lmr;	a	ON
	f	Lmr;	b	OFF
	f	Lmr;	c	DONE
	f	Lmr;	d	CANCEL
	f	Lmr;	e	YES
	f	Lmr;	f	NO
	f	Lmr;	g	PROCEED
	f	Lmr;	h	BACK
	m	(Z)Lmr;	a	getToggleText
		p	0	value	value
c	mr	net/minecraft/text/Text
	c	A text. Can be converted to and from JSON format.\n\n<p>Each text has a tree structure, embodying all its {@link\n#getSiblings() siblings}. To iterate contents in the text and all\nits siblings, call {@code visit} methods.</p>\n\n<p>This interface does not expose mutation operations. For mutation,\nrefer to {@link MutableText}.</p>\n\n@see MutableText
	m	()Ljava/lang/String;	a	asString
		c	Returns the string representation of this text itself, excluding siblings.
	m	(I)Ljava/lang/String;	a	asTruncatedString
		c	Returns the full string representation of this text, truncated beyond\nthe supplied {@code length}.
		p	1	length	length
			c	the max length allowed for the string representation of the text
	m	(Lmu$b;Lnb;)Ljava/util/Optional;	b	visitSelf
		c	Visits the text itself.\n\n@see #visit(StyledVisitor, Style)\n@return the visitor's return value
		p	1	visitor	visitor
			c	the visitor
		p	2	style	style
			c	the current style
	m	()Ljava/util/List;	b	getSiblings
		c	Returns the siblings of this text.
	m	(Lmu$a;)Ljava/util/Optional;	b	visitSelf
		c	Visits the text itself.\n\n@see #visit(Visitor)\n@return the visitor's return value
		p	1	visitor	visitor
			c	the visitor
	m	()Lnb;	c	getStyle
		c	Returns the style of this text.
	m	()Lmx;	e	shallowCopy
		c	Copies the text itself, the style, and the siblings.\n\n<p>A shallow copy is made for the siblings.</p>
	m	()Lmx;	f	copy
		c	Copies the text itself, excluding the styles or siblings.
c	mr$a	net/minecraft/text/Text$Serializer
	c	A JSON serializer for {@link Text}.
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/reflect/Field;	b	JSON_READER_POS
	f	Ljava/lang/reflect/Field;	c	JSON_READER_LINE_START
	m	(Lcom/mojang/brigadier/StringReader;)Lmx;	a	fromJson
		p	0	reader	reader
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lmx;	a	deserialize
	m	(Lcom/google/gson/stream/JsonReader;)I	a	getPosition
		p	0	reader	reader
	m	(Ljava/lang/String;)Lmx;	a	fromJson
		p	0	json	json
	m	(Lcom/google/gson/JsonElement;)Lmx;	a	fromJson
		p	0	json	json
	m	(Lmr;)Ljava/lang/String;	a	toJson
		p	0	text	text
	m	(Lnb;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	addStyle
		p	1	style	style
		p	2	json	json
		p	3	context	context
	m	(Lmr;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/String;)Lmx;	b	fromLenientJson
		p	0	json	json
	m	(Lmr;)Lcom/google/gson/JsonElement;	b	toJsonTree
		p	0	text	text
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	text	text
		p	2	type	type
		p	3	context	context
c	ms	net/minecraft/text/Texts
	m	(Lcom/mojang/authlib/GameProfile;)Lmr;	a	toText
		p	0	profile	profile
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lmr;	a	joinOrdered
		p	0	elements	elements
		p	1	transformer	transformer
	m	(Lmr;)Lmx;	a	bracketed
		p	0	text	text
	m	(Lcz;Lmr;Laom;I)Lmx;	a	parse
		p	0	source	source
		p	1	text	text
		p	2	sender	sender
		p	3	depth	depth
	m	(Ljava/util/Collection;)Lmr;	a	joinOrdered
		p	0	strings	strings
	m	(Lmx;Lnb;)Lmx;	a	setStyleIfAbsent
		p	0	text	text
		p	1	style	style
	m	(Ljava/lang/String;)Lmr;	a	method_10886
		p	0	string	string
	m	(Lcom/mojang/brigadier/Message;)Lmr;	a	toText
		p	0	message	message
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lmx;	b	join
		p	0	elements	elements
		p	1	transformer	transformer
c	mt	net/minecraft/text/ParsableText
	c	A {@link Text} that needs to be parsed when it is loaded into the game.
	m	(Lcz;Laom;I)Lmx;	a	parse
		p	1	source	source
		p	2	sender	sender
		p	3	depth	depth
c	mu	net/minecraft/text/StringRenderable
	c	An object that can supply strings to a visitor, with or without a style\ncontext, for rendering the strings.
	f	Ljava/util/Optional;	b	TERMINATE_VISIT
		c	Convenience object indicating the termination of a string visit.
	f	Lmu;	c	EMPTY
		c	An empty renderable that does not call the visitors.
	m	(Lmu$b;Lnb;)Ljava/util/Optional;	a	visit
		c	Supplies this renderable's literal content and contextual style to\nthe visitor.\n\n@return {@code Optional.empty()} if the visit finished, or a terminating\nresult from the {@code visitor}
		p	1	styledVisitor	styledVisitor
			c	the visitor
		p	2	style	style
			c	the contextual style
	m	(Ljava/lang/String;Lnb;)Lmu;	a	styled
		c	Creates a visitable from a plain string and a root style.
		p	0	string	string
			c	the plain string
		p	1	style	style
			c	the root style
	m	(Ljava/util/List;)Lmu;	a	concat
		c	Concats multiple string renderables by the order they appear in the list.
		p	0	visitables	visitables
			c	a list of visitables
	m	(Lmu$a;)Ljava/util/Optional;	a	visit
		c	Supplies this renderable's literal content to the visitor.\n\n@return {@code Optional.empty()} if the visit finished, or a terminating\nresult from the {@code visitor}
		p	1	visitor	visitor
			c	the visitor
	m	([Lmu;)Lmu;	a	concat
		c	Concats multiple string renderables by the order they appear in the array.
		p	0	visitables	visitables
			c	an array or varargs of visitables
	m	(Ljava/lang/String;)Lmu;	b	plain
		c	Creates a renderable from a plain string.
		p	0	string	string
			c	the plain string
c	mu$a	net/minecraft/text/StringRenderable$Visitor
	c	A visitor for rendered string content.
	m	(Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		c	Visits a literal string.\n\n<p>When a {@link Optional#isPresent() present optional} is returned,\nthe visit is terminated before visiting all text. Can return {@link\nStringRenderable#TERMINATE_VISIT} for convenience.</p>\n\n@return {@code Optional.empty()} to continue, a non-empty result to terminate
		p	1	asString	asString
			c	the literal string
c	mu$b	net/minecraft/text/StringRenderable$StyledVisitor
	c	A visitor for rendered string content and a contextual {@link Style}.
	m	(Lnb;Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		c	Visits a string's content with a contextual style.\n\n<p>A contextual style is obtained by calling {@link Style#withParent(Style)}\non the current's text style, passing the previous contextual style or\nthe starting style if it is the beginning of a visit.</p>\n\n<p>When a {@link Optional#isPresent() present optional} is returned,\nthe visit is terminated before visiting all text. Can return {@link\nStringRenderable#TERMINATE_VISIT} for convenience.</p>\n\n@return {@code Optional.empty()} to continue, a non-empty result to terminate
		p	1	style	style
			c	the current style
		p	2	asString	asString
			c	the literal string
c	mv	net/minecraft/text/HoverEvent
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lmv$a;	b	action
	f	Ljava/lang/Object;	c	contents
	m	(Lmv$a;Ljava/lang/Object;)V	<init>	<init>
		p	1	action	action
		p	2	contents	contents
	m	()Lmv$a;	a	getAction
	m	(Lcom/google/gson/JsonObject;)Lmv;	a	fromJson
		p	0	json	json
	m	(Lmv$a;)Ljava/lang/Object;	a	getValue
		p	1	action	action
	m	()Lcom/google/gson/JsonObject;	b	toJson
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	mv$a	net/minecraft/text/HoverEvent$Action
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	f	Z	f	parsable
	f	Ljava/util/function/Function;	g	deserializer
	f	Ljava/util/function/Function;	h	serializer
	f	Ljava/util/function/Function;	i	legacyDeserializer
	m	(Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1	name	name
		p	2	parsable	parsable
		p	3	deserializer	deserializer
		p	4	serializer	serializer
		p	5	legacyDeserializer	legacyDeserializer
	m	(Lcom/google/gson/JsonElement;)Lmv;	a	buildHoverEvent
		p	1	contents	contents
	m	(Lmr;)Lmv;	a	buildHoverEvent
		p	1	value	value
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonElement;	a	contentsToJson
		p	1	contents	contents
	m	(Ljava/lang/String;)Lmv$a;	a	byName
		p	0	name	name
	m	()Z	a	isParsable
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	cast
		p	1	o	o
c	mv$b	net/minecraft/text/HoverEvent$EntityContent
	f	Laoq;	a	entityType
	f	Ljava/util/UUID;	b	uuid
	f	Lmr;	c	name
	f	Ljava/util/List;	d	tooltip
	m	(Laoq;Ljava/util/UUID;Lmr;)V	<init>	<init>
		p	1	entityType	entityType
		p	2	uuid	uuid
		p	3	name	name
	m	(Lmr;)Lmv$b;	a	parse
		p	0	text	text
	m	(Lcom/google/gson/JsonElement;)Lmv$b;	a	parse
		p	0	json	json
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	()Ljava/util/List;	b	asTooltip
c	mv$c	net/minecraft/text/HoverEvent$ItemStackContent
	f	Lbke;	a	item
	f	I	b	count
	f	Lle;	c	tag
	f	Lbki;	d	stack
	m	(Lbki;)V	<init>	<init>
		p	1	stack	stack
	m	(Lbke;ILle;)V	<init>	<init>
		p	1	item	item
		p	2	count	count
		p	3	tag	tag
	m	()Lbki;	a	asStack
	m	(Lmr;)Lmv$c;	b	parse
		p	0	text	text
	m	(Lcom/google/gson/JsonElement;)Lmv$c;	b	parse
		p	0	json	json
	m	()Lcom/google/gson/JsonElement;	b	toJson
c	mw	net/minecraft/text/KeybindText
	f	Ljava/util/function/Function;	d	translator
	f	Ljava/lang/String;	e	key
	f	Ljava/util/function/Supplier;	f	translated
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Ljava/util/function/Function;)V	a	setTranslator
		p	0	translator	translator
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	d	method_10904
		p	0	key	key
	m	()Lmw;	g	copy
	m	()Ljava/lang/String;	h	getKey
	m	()Lmr;	i	getTranslated
c	mx	net/minecraft/text/MutableText
	c	A text with mutation operations.
	m	(Lnb;)Lmx;	a	setStyle
		c	Sets the style of this text.
		p	1	style	style
	m	(Li;)Lmx;	a	formatted
		c	Add a formatting to this text's style.
		p	1	formatting	formatting
			c	a formatting
	m	(Lmr;)Lmx;	a	append
		c	Appends a text to this text's siblings.
		p	1	text	text
			c	the sibling
	m	(Ljava/util/function/UnaryOperator;)Lmx;	a	styled
		c	Updates the style of this text.\n\n@see Text#getStyle()\n@see #setStyle(Style)
		p	1	styleUpdater	styleUpdater
			c	the style updater
	m	([Li;)Lmx;	a	formatted
		c	Adds some formattings to this text's style.
		p	1	formattings	formattings
			c	an array of formattings
	m	(Lnb;)Lmx;	c	fillStyle
		c	Fills the absent parts of this text's style with definitions from {@code\nstyleOverride}.\n\n@see Style#withParent(Style)
		p	1	styleOverride	styleOverride
			c	the style that provides definitions for absent definitions in this text's style
	m	(Ljava/lang/String;)Lmx;	c	append
		c	Appends a literal text with content {@code text} to this text's siblings.
		p	1	text	text
			c	the literal text content
c	my	net/minecraft/text/NbtText
	f	Z	d	interpret
	f	Ljava/lang/String;	e	rawPath
	f	Ldn$h;	f	path
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	m	(Ljava/lang/String;Ldn$h;Z)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	path	path
		p	3	interpret	interpret
	m	(Ljava/lang/String;Z)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	interpret	interpret
	m	(Lle;)Ljava/util/stream/Stream;	a	method_10918
		p	1	nbt	nbt
	m	(Lcz;)Ljava/util/stream/Stream;	a	toNbt
		p	1	source	source
	m	(Lmx;Lmx;)Lmx;	a	method_15880
		p	0	a	a
		p	1	b	b
	m	(Lcz;Laom;ILjava/lang/String;)Ljava/util/stream/Stream;	a	method_10917
		p	3	text	text
	m	(Ljava/lang/String;)Ldn$h;	d	parsePath
		p	0	rawPath	rawPath
	m	()Ljava/lang/String;	g	getPath
	m	()Z	h	shouldInterpret
c	my$a	net/minecraft/text/NbtText$BlockNbtText
	f	Ljava/lang/String;	g	rawPos
	f	Lej;	h	pos
	m	(Ljava/lang/String;Ldn$h;ZLjava/lang/String;Lej;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	path	path
		p	3	interpret	interpret
		p	4	rawPos	rawPos
		p	5	pos	pos
	m	(Ljava/lang/String;ZLjava/lang/String;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	rawJson	rawJson
		p	3	rawPos	rawPos
	m	(Ljava/lang/String;)Lej;	d	parsePos
		p	1	rawPos	rawPos
	m	()Ljava/lang/String;	i	getPos
	m	()Lmy$a;	j	copy
c	my$b	net/minecraft/text/NbtText$EntityNbtText
	f	Ljava/lang/String;	g	rawSelector
	f	Lez;	h	selector
	m	(Ljava/lang/String;Ldn$h;ZLjava/lang/String;Lez;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	path	path
		p	3	interpret	interpret
		p	4	rawSelector	rawSelector
		p	5	selector	selector
	m	(Ljava/lang/String;ZLjava/lang/String;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	interpret	interpret
		p	3	rawSelector	rawSelector
	m	(Ljava/lang/String;)Lez;	d	parseSelector
		p	0	rawSelector	rawSelector
	m	()Ljava/lang/String;	i	getSelector
	m	()Lmy$b;	j	copy
c	my$c	net/minecraft/text/NbtText$StorageNbtText
	f	Luh;	g	id
	m	(Ljava/lang/String;Ldn$h;ZLuh;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	path	path
		p	3	interpret	interpret
		p	4	id	id
	m	(Ljava/lang/String;ZLuh;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	interpret	interpret
		p	3	id	id
	m	()Luh;	i	getId
	m	()Lmy$c;	j	copy
c	mz	net/minecraft/text/ScoreText
	f	Ljava/lang/String;	d	name
	f	Lez;	e	selector
	f	Ljava/lang/String;	f	objective
	m	(Ljava/lang/String;Lez;Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
		p	2	selector	selector
		p	3	objective	objective
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
		p	2	objective	objective
	m	(Lcz;)Ljava/lang/String;	a	getPlayerName
		p	1	source	source
	m	(Ljava/lang/String;Lcz;)Ljava/lang/String;	a	getScore
		p	1	playerName	playerName
		p	2	source	source
	m	(Ljava/lang/String;)Lez;	d	parseEntitySelector
		p	0	name	name
	m	()Ljava/lang/String;	g	getName
	m	()Ljava/lang/String;	i	getObjective
	m	()Lmz;	j	copy
c	n	net/minecraft/util/logging/UncaughtExceptionHandler
	f	Lorg/apache/logging/log4j/Logger;	a	logger
	m	(Lorg/apache/logging/log4j/Logger;)V	<init>	<init>
		p	1	logger	logger
c	na	net/minecraft/text/SelectorText
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	pattern
	f	Lez;	f	selector
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	pattern	pattern
	m	()Ljava/lang/String;	g	getPattern
	m	()Lna;	i	copy
c	nb	net/minecraft/text/Style
	c	The style of a {@link Text}, representing cosmetic attributes. It includes\nfont, formatting, click/hover events (actions), color, etc.\n\n<p>A style is immutable.</p>\n\n@see Text
	f	Luh;	a	DEFAULT_FONT_ID
		c	The identifier for the default font of a style.
	f	Lnb;	b	EMPTY
		c	An empty style.
	f	Lnc;	c	color
	f	Ljava/lang/Boolean;	d	bold
	f	Ljava/lang/Boolean;	e	italic
	f	Ljava/lang/Boolean;	f	underlined
	f	Ljava/lang/Boolean;	g	strikethrough
	f	Ljava/lang/Boolean;	h	obfuscated
	f	Lmp;	i	clickEvent
	f	Lmv;	j	hoverEvent
	f	Ljava/lang/String;	k	insertion
	f	Luh;	l	font
	m	(Lnc;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lmp;Lmv;Ljava/lang/String;Luh;)V	<init>	<init>
		p	1	color	color
		p	2	bold	bold
		p	3	italic	italic
		p	4	underlined	underlined
		p	5	strikethrough	strikethrough
		p	6	obfuscated	obfuscated
		p	7	clickEvent	clickEvent
		p	8	hoverEvent	hoverEvent
		p	9	insertion	insertion
		p	10	font	font
	m	(Li;)Lnb;	a	withColor
		c	Returns a new style with the color provided and all other attributes of\nthis style.
		p	1	color	color
			c	the new color
	m	(Lnb;)Lnb;	a	withParent
		c	Returns a new style with the undefined attributes of this style filled\nby the {@code parent} style.
		p	1	parent	parent
			c	the parent style
	m	()Lnc;	a	getColor
		c	Returns the color of this style.
	m	([Li;)Lnb;	a	withFormatting
		c	Returns a new style with the formattings provided and all other\nattributes of this style.
		p	1	formattings	formattings
			c	an array of new formattings
	m	(Ljava/lang/Boolean;)Lnb;	a	withBold
		c	Returns a new style with the bold attribute provided and all other\nattributes of this style.
		p	1	bold	bold
			c	the new bold property
	m	(Luh;)Lnb;	a	withFont
		c	Returns a new style with the font provided and all other\nattributes of this style.
		p	1	font	font
			c	the new font
	m	(Lmv;)Lnb;	a	setHoverEvent
		c	Returns a new style with the hover event provided and all other\nattributes of this style.
		p	1	hoverEvent	hoverEvent
			c	the new hover event
	m	(Ljava/lang/String;)Lnb;	a	withInsertion
		c	Returns a new style with the insertion provided and all other\nattributes of this style.
		p	1	insertion	insertion
			c	the new insertion string
	m	(Lnc;)Lnb;	a	withColor
		c	Returns a new style with the color provided and all other attributes of\nthis style.
		p	1	color	color
			c	the new color
	m	(Lmp;)Lnb;	a	withClickEvent
		c	Returns a new style with the click event provided and all other\nattributes of this style.
		p	1	clickEvent	clickEvent
			c	the new click event
	m	(Li;)Lnb;	b	withFormatting
		c	Returns a new style with the formatting provided and all other\nattributes of this style.
		p	1	formatting	formatting
			c	the new formatting
	m	()Z	b	isBold
		c	Returns whether the style has bold formatting.\n\n@see Formatting#BOLD
	m	(Ljava/lang/Boolean;)Lnb;	b	withItalic
		c	Returns a new style with the italic attribute provided and all other\nattributes of this style.
		p	1	italic	italic
			c	the new italic property
	m	()Z	c	isItalic
		c	Returns whether the style has italic formatting.\n\n@see Formatting#ITALIC
	m	(Li;)Lnb;	c	withExclusiveFormatting
		c	Returns a new style with the formatting provided and some applicable\nattributes of this style.\n\n<p>When a color formatting is passed for {@code formatting}, the other\nformattings, including bold, italic, strikethrough, underlined, and\nobfuscated, are all removed.</p>
		p	1	formatting	formatting
			c	the new formatting
	m	()Z	d	isStrikethrough
		c	Returns whether the style has strikethrough formatting.\n\n@see Formatting#STRIKETHROUGH
	m	()Z	e	isUnderlined
		c	Returns whether the style has underline formatting.\n\n@see Formatting#UNDERLINE
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
	m	()Z	f	isObfuscated
		c	Returns whether the style has obfuscated formatting.\n\n@see Formatting#OBFUSCATED
	m	()Z	g	isEmpty
		c	Returns if this is the empty style.\n\n@see #EMPTY
	m	()Lmp;	h	getClickEvent
		c	Returns the click event of this style.
	m	()Lmv;	i	getHoverEvent
		c	Returns the hover event of this style.
	m	()Ljava/lang/String;	j	getInsertion
		c	Returns the insertion text of the style.\n\n<p>An insertion is inserted when a piece of text clicked while shift key\nis down in the chat HUD.</p>
	m	()Luh;	k	getFont
		c	Returns the font of this style.
c	nb$a	net/minecraft/text/Style$Serializer
	c	A JSON serializer for {@link Style}.
	m	(Lnb;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	parseNullableBoolean
		p	0	root	root
		p	1	key	key
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnb;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Luh;	a	getFont
		p	0	root	root
	m	(Lcom/google/gson/JsonObject;)Lmv;	b	getHoverEvent
		p	0	root	root
	m	(Lcom/google/gson/JsonObject;)Lmp;	c	getClickEvent
		p	0	root	root
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	d	parseInsertion
		p	0	root	root
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)Lnc;	e	parseColor
		p	0	root	root
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	style	style
		p	2	type	type
		p	3	context	context
c	nc	net/minecraft/text/TextColor
	c	Represents an RGB color of a {@link Text}.\n\n<p>This is immutable, and part of a {@link Style}.</p>\n\n@see Style
	f	Ljava/util/Map;	a	FORMATTING_TO_COLOR
	f	Ljava/util/Map;	b	BY_NAME
	f	I	c	rgb
	f	Ljava/lang/String;	d	name
	m	(I)V	<init>	<init>
		p	1	rgb	rgb
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	rgb	rgb
		p	2	name	name
	m	(Ljava/lang/String;)Lnc;	a	parse
		c	Parses a color by its name.
		p	0	name	name
			c	the name
	m	()I	a	getRgb
		c	Gets the RGB value of this color.\n\n<p>The red bits can be obtained by {@code (rgb >> 16) & 0xFF}, green bits\nby {@code (rgb >> 8) & 0xFF}, blue bits by {@code rgb & 0xFF}.</p>
	m	(I)Lnc;	a	fromRgb
		c	Obtains a text color from an RGB value.
		p	0	rgb	rgb
			c	the RGB color
	m	(Li;)Lnc;	a	fromFormatting
		c	Obtains a text color from a formatting.
		p	0	formatting	formatting
			c	the formatting
	m	()Ljava/lang/String;	b	getName
		c	Gets the name of this color, used for converting the color to JSON format.
	m	()Ljava/lang/String;	c	getHexCode
c	nd	net/minecraft/text/LiteralText
	f	Lmr;	d	EMPTY
	f	Ljava/lang/String;	e	string
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	string	string
	m	()Ljava/lang/String;	g	getRawString
	m	()Lnd;	h	copy
c	ne	net/minecraft/text/TranslatableText
	f	[Ljava/lang/Object;	d	EMPTY_ARGUMENTS
	f	Lmu;	e	LITERAL_PERCENT_SIGN
	f	Lmu;	f	NULL_ARGUMENT
	f	Ljava/lang/String;	g	key
	f	[Ljava/lang/Object;	h	args
	f	Lkz;	i	languageCache
	f	Ljava/util/List;	j	translations
	f	Ljava/util/regex/Pattern;	k	ARG_FORMAT
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Ljava/lang/String;[Ljava/lang/Object;)V	<init>	<init>
		p	1	key	key
		p	2	args	args
	m	(Ljava/lang/String;Lkz;)V	a	setTranslation
		p	1	translation	translation
		p	2	language	language
	m	()Lne;	g	copy
	m	()Ljava/lang/String;	h	getKey
	m	()[Ljava/lang/Object;	i	getArgs
	m	()V	j	updateTranslations
c	net/minecraft/client/main/Main	net/minecraft/client/main/Main
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object;	a	getOption
		p	0	optionSet	optionSet
		p	1	optionSpec	optionSpec
	m	(Ljava/lang/Integer;)Ljava/util/OptionalInt;	a	toOptional
		p	0	i	i
	m	(Ljava/lang/String;)Z	a	isNotNullOrEmpty
		p	0	s	s
	m	([Ljava/lang/String;)V	main	main
		p	0	args	args
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	(Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lhk;	a	create
		p	0	output	output
		p	1	inputs	inputs
		p	2	includeClient	includeClient
		p	3	includeServer	includeServer
		p	4	includeDev	includeDev
		p	5	includeReports	includeReports
		p	6	validate	validate
c	net/minecraft/server/Main	net/minecraft/server/Main
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ldae$a;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcom/google/common/collect/ImmutableSet;)V	a	forceUpgradeWorld
		p	0	session	session
		p	1	dataFixer	dataFixer
		p	2	eraseCache	eraseCache
		p	4	worlds	worlds
	m	(Lgm$a;Ldae$a;Laar;Luw;Ldal;Lyf;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Labl;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lyd;	a	method_29734
		p	0	registryTracker	registryTracker
		p	1	session	session
		p	2	resourcePackManager	resourcePackManager
		p	3	serverResourceManager	serverResourceManager
		p	4	saveProperties	saveProperties
		p	5	propertiesLoader	propertiesLoader
		p	6	sessionService	sessionService
		p	7	profileRepository	profileRepository
		p	8	userCache	userCache
		p	9	optionSet	optionSet
		p	10	serverName	serverName
		p	11	serverPort	serverPort
		p	12	demo	demo
		p	13	serverId	serverId
		p	14	noGui	noGui
		p	15	nonOptions	nonOptions
		p	16	serverThread	serverThread
	m	([Ljava/lang/String;)V	main	main
		p	0	args	args
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	f	Z	A	onlineMode
	f	Z	B	preventProxyConnections
	f	Z	C	pvpEnabled
	f	Z	D	flightEnabled
	f	Ljava/lang/String;	E	motd
	f	I	F	worldHeight
	f	I	G	playerIdleTimeout
	f	Ljava/security/KeyPair;	H	keyPair
	f	Ljava/lang/String;	I	userName
	f	Z	J	demo
	f	Ljava/lang/String;	K	resourcePackUrl
	f	Ljava/lang/String;	L	resourcePackHash
	f	Z	M	loading
	f	J	N	lastTimeReference
	f	Z	O	profilerStartQueued
	f	Z	P	forceGameMode
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	Q	sessionService
	f	Lcom/mojang/authlib/GameProfileRepository;	R	gameProfileRepo
	f	Labl;	S	userCache
	f	J	T	lastPlayerSampleUpdate
	f	Ljava/lang/Thread;	U	serverThread
	f	J	V	timeReference
	f	Z	X	waitingForNextTick
	f	Z	Y	iconFilePresent
	f	Laar;	Z	dataPackManager
	f	Lux;	aa	scoreboard
	f	Lczy;	ab	dataCommandStorage
	f	Lva;	ac	bossBarManager
	f	Luu;	ad	commandFunctionManager
	f	Lads;	ae	metricsData
	f	Z	af	enforceWhitelist
	f	F	ag	tickTime
	f	Ljava/util/concurrent/Executor;	ah	workerExecutor
	f	Ljava/lang/String;	ai	serverId
	f	Luw;	aj	serverResourceManager
	f	Lcva;	ak	structureManager
	f	Ljava/io/File;	b	USER_CACHE_FILE
	f	Lbqe;	c	DEMO_LEVEL_INFO
	f	Ldae$a;	d	session
	f	Lgm$a;	f	dimensionTracker
	f	Ljava/net/Proxy;	g	proxy
	f	[J	h	lastTickLengths
	f	Ldal;	i	saveProperties
	f	Lorg/apache/logging/log4j/Logger;	j	LOGGER
	f	Lano;	k	snooper
	f	Ljava/util/List;	l	serverGuiTickables
	f	Lamc;	m	tickTimeTracker
	f	Lami;	n	profiler
	f	Lzu;	o	networkIo
	f	Lzn;	p	worldGenerationProgressListenerFactory
	f	Ltl;	q	metadata
	f	Ljava/util/Random;	r	random
	f	Lcom/mojang/datafixers/DataFixer;	s	dataFixer
	f	Ljava/lang/String;	t	serverIp
	f	I	u	serverPort
	f	Ljava/util/Map;	v	worlds
	f	Labp;	w	playerManager
	f	Z	x	running
	f	Z	y	stopped
	f	I	z	ticks
	m	()Ljava/io/File;	A	getRunDirectory
	m	()Z	B	isNetherAllowed
	m	()Z	C	isStopping
	m	()Lzd;	D	getOverworld
	m	()Ljava/util/Set;	E	getWorldRegistryKeys
	m	()Ljava/lang/Iterable;	F	getWorlds
	m	()Ljava/lang/String;	G	getVersion
	m	()I	H	getCurrentPlayerCount
	m	()I	I	getMaxPlayerCount
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	()Ljava/security/KeyPair;	K	getKeyPair
	m	()I	L	getServerPort
	m	()Ljava/lang/String;	M	getUserName
	m	()Z	N	isSinglePlayer
	m	()Z	O	isMonsterSpawningEnabled
	m	()Z	P	isDemo
	m	()Ljava/lang/String;	Q	getResourcePackUrl
	m	()Ljava/lang/String;	R	getResourcePackHash
	m	()Z	T	isOnlineMode
	m	()Z	U	shouldPreventProxyConnections
	m	()Z	V	shouldSpawnAnimals
	m	()Z	W	shouldSpawnNpcs
	m	()Z	X	isPvpEnabled
	m	()Z	Y	isFlightEnabled
	m	()Ljava/lang/String;	Z	getServerMotd
	m	(Ljava/nio/file/Path;)V	a	dump
		p	1	path	path
	m	(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;	a	startServer
		p	0	serverFactory	serverFactory
	m	(Ltl;)V	a	setFavicon
		p	1	metadata	metadata
	m	(Z)V	a	stop
	m	(Ljava/security/KeyPair;)V	a	setKeyPair
		p	1	keyPair	keyPair
	m	(Lzd;)I	a	getSpawnRadius
		p	1	world	world
	m	(Labp;)V	a	setPlayerManager
		p	1	playerManager	playerManager
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Land;Z)V	a	setDifficulty
	m	(Lzd;Ldak;ZZZ)V	a	setupSpawn
	m	(Luy;)Z	a	canExecute
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	reloadResources
	m	(ZZZ)Z	a	save
	m	(Ljava/lang/Runnable;)Luy;	a	createTask
	m	(Laml;)V	a	startMonitor
		p	1	monitor	monitor
	m	(Ldae$a;)V	a	convertLevel
	m	(Lbpy;)V	a	setDefaultGameMode
		p	1	gameMode	gameMode
	m	(Lze;)V	a	sendDifficulty
		p	1	player	player
	m	(Ldal;)V	a	setToDebugWorldProperties
		p	1	properties	properties
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setResourcePack
		p	1	url	url
		p	2	hash	hash
	m	(I)V	a	setServerPort
		p	1	serverPort	serverPort
	m	(Laar;Lbpn;Z)Lbpn;	a	loadDataPacks
		p	0	resourcePackManager	resourcePackManager
		p	2	safeMode	safeMode
	m	(Lug;)Lzd;	a	getWorld
		p	1	key	key
	m	(Ldaa;)V	a	initScoreboard
		p	1	persistentStateManager	persistentStateManager
	m	(Lzm;)V	a	createWorlds
	m	(Lj;)V	a	setCrashReport
		p	1	report	report
	m	(Lzd;Lfu;Lbec;)Z	a	isSpawnProtected
		p	1	world	world
		p	2	pos	pos
		p	3	player	player
	m	(Ldac;)Ljava/nio/file/Path;	a	getSavePath
	m	(Lcz;)V	a	kickNonWhitelistedPlayers
		p	1	source	source
	m	(Lbpy;ZI)Z	a	openToLan
		p	1	gameMode	gameMode
		p	2	cheatsAllowed	cheatsAllowed
		p	3	port	port
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isHost
		p	1	profile	profile
	m	()Laar;	aA	getDataPackManager
	m	()Lda;	aB	getCommandManager
	m	()Lcz;	aC	getCommandSource
	m	()Lbmv;	aD	getRecipeManager
	m	()Ladh;	aE	getTagManager
	m	()Lux;	aF	getScoreboard
	m	()Lczy;	aG	getDataCommandStorage
	m	()Ldax;	aH	getLootManager
	m	()Lday;	aI	getPredicateManager
	m	()Lbpx;	aJ	getGameRules
	m	()Lva;	aK	getBossBarManager
	m	()Z	aL	isEnforceWhitelist
	m	()F	aM	getTickTime
	m	()Lads;	aN	getMetricsData
	m	()Lami;	aO	getProfiler
	m	()Z	aQ	isDebugRunning
	m	()V	aR	enableProfiler
	m	()Lamh;	aS	stopDebug
	m	()Z	aT	syncChunkWrites
	m	()Lcva;	aU	getStructureManager
	m	()Ldal;	aV	getSaveProperties
	m	()Z	aY	shouldKeepTicking
	m	(Ljava/lang/String;)V	a_	setServerIp
		p	1	serverIp	serverIp
	m	()I	aa	getWorldHeight
	m	()Z	ab	isStopped
	m	()Labp;	ac	getPlayerManager
	m	()Lzu;	ad	getNetworkIo
	m	()Z	ae	isLoading
	m	()Z	af	hasGui
	m	()I	ag	getTicks
	m	()Lano;	ah	getSnooper
	m	()I	ai	getSpawnProtectionRadius
	m	()Z	aj	shouldForceGameMode
	m	()Z	ak	acceptsStatusQuery
	m	()I	am	getPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	an	getSessionService
	m	()Lcom/mojang/authlib/GameProfileRepository;	ao	getGameProfileRepo
	m	()Labl;	ap	getUserCache
	m	()Ltl;	aq	getServerMetadata
	m	()V	ar	forcePlayerSampleUpdate
	m	()I	as	getMaxWorldBorderRadius
	m	()I	av	getNetworkCompressionThreshold
	m	()J	aw	getServerStartTime
	m	()Lcom/mojang/datafixers/DataFixer;	ax	getDataFixer
	m	()Lus;	ay	getAdvancementLoader
	m	()Luu;	az	getCommandFunctionManager
	m	(Z)V	b	setDifficultyLocked
		p	1	locked	locked
	m	(Luy;)V	b	executeTask
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickWorlds
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Ljava/nio/file/Path;)V	b	dumpStats
	m	(Lcom/mojang/authlib/GameProfile;)I	b	getPermissionLevel
		p	1	profile	profile
	m	(Laml;)V	b	endMonitor
		p	1	monitor	monitor
	m	(I)I	b	adjustTrackingDistance
		p	1	initialDistance	initialDistance
	m	(Ljava/lang/Runnable;)V	b	addServerGuiTickable
		p	1	tickable	tickable
	m	(Ljava/lang/String;)V	b	setServerId
		p	1	serverId	serverId
	m	(Lj;)Lj;	b	populateCrashReport
		p	1	report	report
	m	(Lzm;)V	b	prepareStartRegion
	m	()V	ba	updateMobSpawnOptions
	m	()Z	be	isMainThread
	m	(Ljava/lang/String;)Ljava/io/File;	c	getFile
	m	(Z)V	c	setDemo
		p	1	demo	demo
	m	(Ljava/nio/file/Path;)V	c	dumpExampleCrash
	m	(I)V	c	setWorldHeight
		p	1	worldHeight	worldHeight
	m	(Ljava/lang/String;)V	d	setServerName
		p	1	serverName	serverName
	m	(Ljava/nio/file/Path;)V	d	dumpGamerules
	m	(I)V	d	setPlayerIdleTimeout
		p	1	playerIdleTimeout	playerIdleTimeout
	m	()Z	d	setupServer
	m	(Z)V	d	setOnlineMode
		p	1	onlineMode	onlineMode
	m	()V	e	exit
	m	(Ljava/lang/String;)V	e	setMotd
		p	1	motd	motd
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
	m	(Z)V	e	setPreventProxyConnections
		p	1	preventProxyConnections	preventProxyConnections
	m	(Z)V	f	setPvpEnabled
		p	1	pvpEnabled	pvpEnabled
	m	()Z	f	isHardcore
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
	m	()I	g	getOpPermissionLevel
	m	(Z)V	g	setFlightEnabled
		p	1	flightEnabled	flightEnabled
	m	(Z)V	h	setForceGameMode
		p	1	forceGameMode	forceGameMode
	m	()I	h	getFunctionPermissionLevel
	m	(Z)V	i	setEnforceWhitelist
		p	1	whitelistEnabled	whitelistEnabled
	m	()Z	i	shouldBroadcastRconToOps
	m	()Z	j	isDedicated
	m	()Z	k	isUsingNativeTransport
	m	()Z	l	areCommandBlocksEnabled
	m	()V	l_	loadWorld
	m	()Z	m	isRemote
	m	()Ljava/util/Optional;	n	getModdedStatusMessage
	m	()V	q	loadWorldResourcePack
	m	()Lbpy;	r	getDefaultGameMode
	m	()V	s	shutdown
	m	()Ljava/lang/String;	t	getServerIp
	m	()Z	u	isRunning
	m	()V	v	runServer
	m	()Z	y	hasIconFile
	m	()Ljava/io/File;	z	getIconFile
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	f	J	a	lastProgressUpdate
c	net/minecraft/util/CubicSampler	net/minecraft/util/CubicSampler
	f	[D	a	DENSITY_CURVE
	m	(Ldem;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Ldem;	a	sampleColor
		p	0	pos	pos
		p	1	rgbFetcher	rgbFetcher
c	net/minecraft/util/CubicSampler$Vec3Fetcher	net/minecraft/util/CubicSampler$RgbFetcher
	m	(III)Ldem;	fetch	fetch
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	nf	net/minecraft/text/TranslationException
	m	(Lne;Ljava/lang/String;)V	<init>	<init>
		p	1	text	text
		p	2	message	message
	m	(Lne;I)V	<init>	<init>
		p	1	text	text
		p	2	index	index
	m	(Lne;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	text	text
		p	2	cause	cause
c	ni	net/minecraft/network/Packet
	m	()Z	a	isWritingErrorSkippable
		c	Returns whether a throwable in writing of this packet allows the\nconnection to simply skip the packet's sending than disconnecting.
	m	(Lmg;)V	a	read
		p	1	buf	buf
	m	(Lmj;)V	a	apply
		p	1	listener	listener
	m	(Lmg;)V	b	write
		p	1	buf	buf
c	nj	net/minecraft/network/NetworkSide
c	nk	net/minecraft/network/NetworkThreadUtils
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lni;Lmj;Lzd;)V	a	forceMainThread
		p	0	packet	packet
		p	1	listener	listener
		p	2	world	world
	m	(Lni;Lmj;Lamn;)V	a	forceMainThread
		p	0	packet	packet
		p	1	listener	listener
		p	2	engine	engine
c	nl	net/minecraft/network/listener/ClientPlayPacketListener
	c	A client side packet listener where play stage packets from the server are processed.
	m	(Loh;)V	a	onScreenHandlerPropertyUpdate
		p	1	packet	packet
	m	(Lno;)V	a	onMobSpawn
		p	1	packet	packet
	m	(Loj;)V	a	onCooldownUpdate
		p	1	packet	packet
	m	(Lqn;)V	a	onStopSound
		p	1	packet	packet
	m	(Lpx;)V	a	onPlayerSpawnPosition
		p	1	packet	packet
	m	(Lpm;)V	a	onEntitiesDestroy
		p	1	packet	packet
	m	(Lqh;)V	a	onTeam
		p	1	packet	packet
	m	(Lot;)V	a	onChunkData
		p	1	packet	packet
	m	(Lqd;)V	a	onExperienceBarUpdate
		p	1	packet	packet
	m	(Lou;)V	a	onWorldEvent
		p	1	packet	packet
	m	(Lqw;)V	a	onSynchronizeTags
		p	1	packet	packet
	m	(Log;)V	a	onInventory
		p	1	packet	packet
	m	(Lqe;)V	a	onHealthUpdate
		p	1	packet	packet
	m	(Lns;)V	a	onStatistics
		p	1	packet	packet
	m	(Loa;)V	a	onGameMessage
		p	1	packet	packet
	m	(Lqo;)V	a	onPlayerListHeader
		p	1	packet	packet
	m	(Lox;)V	a	onGameJoin
		p	1	packet	packet
	m	(Lnz;)V	a	onDifficulty
		p	1	packet	packet
	m	(Lqj;)V	a	onWorldTimeUpdate
		p	1	packet	packet
	m	(Lnm;)V	a	onEntitySpawn
		c	Handles the spawning of non-living entities.
		p	1	packet	packet
	m	(Lpq;)V	a	onEntitySetHeadYaw
		p	1	packet	packet
	m	(Lpo;)V	a	onResourcePackSend
		p	1	packet	packet
	m	(Lnt;)V	a	onPlayerActionResponse
		p	1	packet	packet
	m	(Lpj;)V	a	onLookAt
		p	1	packet	packet
	m	(Lqb;)V	a	onVelocityUpdate
		p	1	packet	packet
	m	(Lov;)V	a	onParticle
		p	1	packet	packet
	m	(Lqg;)V	a	onEntityPassengersSet
		p	1	packet	packet
	m	(Loi;)V	a	onScreenHandlerSlotUpdate
		p	1	packet	packet
	m	(Lqf;)V	a	onScoreboardObjectiveUpdate
		p	1	packet	packet
	m	(Lqv;)V	a	onSynchronizeRecipes
		p	1	packet	packet
	m	(Lnp;)V	a	onPaintingSpawn
		p	1	packet	packet
	m	(Lnn;)V	a	onExperienceOrbSpawn
		p	1	packet	packet
	m	(Lpf;)V	a	onCraftFailedResponse
		p	1	packet	packet
	m	(Lqm;)V	a	onPlaySound
		p	1	packet	packet
	m	(Lqk;)V	a	onTitle
		p	1	packet	packet
	m	(Lqi;)V	a	onScoreboardPlayerUpdate
		p	1	packet	packet
	m	(Loc;)V	a	onCommandSuggestions
		p	1	packet	packet
	m	(Lor;)V	a	onOpenHorseScreen
		p	1	packet	packet
	m	(Lpy;)V	a	onScoreboardDisplay
		p	1	packet	packet
	m	(Loe;)V	a	onGuiActionConfirm
		p	1	packet	packet
	m	(Lpd;)V	a	onOpenScreen
		p	1	packet	packet
	m	(Lnw;)V	a	onBlockEvent
		p	1	packet	packet
	m	(Lpb;)V	a	onVehicleMove
		p	1	packet	packet
	m	(Lob;)V	a	onChunkDeltaUpdate
		p	1	packet	packet
	m	(Lnv;)V	a	onBlockEntityUpdate
		p	1	packet	packet
	m	(Loz;)V	a	onSetTradeOffers
		p	1	packet	packet
	m	(Loq;)V	a	onGameStateChange
		p	1	packet	packet
	m	(Lqu;)V	a	onEntityPotionEffect
		p	1	packet	packet
	m	(Lon;)V	a	onEntityStatus
		p	1	packet	packet
	m	(Lpp;)V	a	onPlayerRespawn
		p	1	packet	packet
	m	(Lph;)V	a	onCombatEvent
		p	1	packet	packet
	m	(Lqq;)V	a	onItemPickupAnimation
		p	1	packet	packet
	m	(Los;)V	a	onKeepAlive
		p	1	packet	packet
	m	(Lpg;)V	a	onPlayerAbilities
		p	1	packet	packet
	m	(Lnu;)V	a	onBlockDestroyProgress
		p	1	packet	packet
	m	(Lql;)V	a	onPlaySoundFromEntity
		p	1	packet	packet
	m	(Lpv;)V	a	onChunkRenderDistanceCenter
		p	1	packet	packet
	m	(Lpr;)V	a	onSelectAdvancementTab
		p	1	packet	packet
	m	(Low;)V	a	onLightUpdate
		p	1	packet	packet
	m	(Lom;)V	a	onDisconnect
		p	1	packet	packet
	m	(Lnx;)V	a	onBlockUpdate
		p	1	packet	packet
	m	(Lqs;)V	a	onAdvancements
		p	1	packet	packet
	m	(Lpt;)V	a	onSetCameraEntity
		p	1	packet	packet
	m	(Lpk;)V	a	onPlayerPositionLook
		p	1	packet	packet
	m	(Lpw;)V	a	onChunkLoadDistance
		p	1	packet	packet
	m	(Lof;)V	a	onCloseScreen
		p	1	packet	packet
	m	(Lpn;)V	a	onRemoveEntityEffect
		p	1	packet	packet
	m	(Loo;)V	a	onExplosion
		p	1	packet	packet
	m	(Lps;)V	a	onWorldBorder
		p	1	packet	packet
	m	(Lnr;)V	a	onEntityAnimation
		p	1	packet	packet
	m	(Lqa;)V	a	onEntityAttach
		p	1	packet	packet
	m	(Lol;)V	a	onPlaySoundId
		p	1	packet	packet
	m	(Lny;)V	a	onBossBar
		p	1	packet	packet
	m	(Lpl;)V	a	onUnlockRecipes
		p	1	packet	packet
	m	(Lqp;)V	a	onTagQuery
		p	1	packet	packet
	m	(Lqc;)V	a	onEquipmentUpdate
		p	1	packet	packet
	m	(Lod;)V	a	onCommandTree
		p	1	packet	packet
	m	(Lpz;)V	a	onEntityTrackerUpdate
		p	1	packet	packet
	m	(Lop;)V	a	onUnloadChunk
		p	1	packet	packet
	m	(Lpe;)V	a	onSignEditorOpen
		p	1	packet	packet
	m	(Lqt;)V	a	onEntityAttributes
		p	1	packet	packet
	m	(Lpa;)V	a	onEntityUpdate
		p	1	packet	packet
	m	(Lpu;)V	a	onHeldItemChange
		p	1	packet	packet
	m	(Lqr;)V	a	onEntityPosition
		p	1	packet	packet
	m	(Lnq;)V	a	onPlayerSpawn
		p	1	packet	packet
	m	(Loy;)V	a	onMapUpdate
		p	1	packet	packet
	m	(Lpi;)V	a	onPlayerList
		p	1	packet	packet
	m	(Lpc;)V	a	onOpenWrittenBook
		p	1	packet	packet
	m	(Lok;)V	a	onCustomPayload
		p	1	packet	packet
c	nm	net/minecraft/network/packet/s2c/play/EntitySpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	I	f	velocityX
	f	I	g	velocityY
	f	I	h	velocityZ
	f	I	i	pitch
	f	I	j	yaw
	f	Laoq;	k	entityTypeId
	f	I	l	entityData
	m	(Laom;Laoq;ILfu;)V	<init>	<init>
		p	1	entity	entity
		p	2	entityType	entityType
		p	3	data	data
		p	4	pos	pos
	m	(Laom;I)V	<init>	<init>
		p	1	entity	entity
		p	2	entityData	entityData
	m	(ILjava/util/UUID;DDDFFLaoq;ILdem;)V	<init>	<init>
		p	1	id	id
		p	2	uuid	uuid
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	pitch	pitch
		p	10	yaw	yaw
		p	11	entityTypeId	entityTypeId
		p	12	entityData	entityData
		p	13	velocity	velocity
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUuid
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()D	g	getVelocityX
	m	()D	h	getVelocityY
	m	()D	i	getVelocityZ
	m	()I	j	getPitch
	m	()I	k	getYaw
	m	()Laoq;	l	getEntityTypeId
	m	()I	m	getEntityData
c	nn	net/minecraft/network/packet/s2c/play/ExperienceOrbSpawnS2CPacket
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	experience
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()I	f	getExperience
c	no	net/minecraft/network/packet/s2c/play/MobSpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	I	c	entityTypeId
	f	D	d	x
	f	D	e	y
	f	D	f	z
	f	I	g	velocityX
	f	I	h	velocityY
	f	I	i	velocityZ
	f	B	j	yaw
	f	B	k	pitch
	f	B	l	headYaw
	m	(Laoy;)V	<init>	<init>
		p	1	entity	entity
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUuid
	m	()I	d	getEntityTypeId
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()I	h	getVelocityX
	m	()I	i	getVelocityY
	m	()I	j	getVelocityZ
	m	()B	k	getYaw
	m	()B	l	getPitch
	m	()B	m	getHeadYaw
c	np	net/minecraft/network/packet/s2c/play/PaintingSpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	Lfu;	c	pos
	f	Lfz;	d	facing
	f	I	e	motiveId
	m	(Lbbd;)V	<init>	<init>
		p	1	entity	entity
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getPaintingUuid
	m	()Lfu;	d	getPos
	m	()Lfz;	e	getFacing
	m	()Lbbc;	f	getMotive
c	nq	net/minecraft/network/packet/s2c/play/PlayerSpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	B	f	yaw
	f	B	g	pitch
	m	(Lbec;)V	<init>	<init>
		p	1	player	player
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getPlayerUuid
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()B	g	getYaw
	m	()B	h	getPitch
c	nr	net/minecraft/network/packet/s2c/play/EntityAnimationS2CPacket
	f	I	a	id
	f	I	b	animationId
	m	(Laom;I)V	<init>	<init>
		p	1	entity	entity
		p	2	animationId	animationId
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()I	c	getAnimationId
c	ns	net/minecraft/network/packet/s2c/play/StatisticsS2CPacket
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1	stats	stats
	m	(Lacr;)I	a	getStatId
		p	1	stat	stat
	m	(Lnl;)V	a	apply
	m	(Lact;Lmg;)V	a	readStat
		p	1	type	type
		p	2	buf	buf
	m	()Ljava/util/Map;	b	getStatMap
c	nt	net/minecraft/network/packet/s2c/play/PlayerActionResponseS2CPacket
	f	Lry$a;	a	action
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lfu;	c	pos
	f	Lcfj;	d	state
	f	Z	e	approved
	m	(Lfu;Lcfj;Lry$a;ZLjava/lang/String;)V	<init>	<init>
		p	1	pos	pos
		p	2	state	state
		p	3	action	action
		p	4	approved	approved
		p	5	reason	reason
	m	(Lnl;)V	a	apply
	m	()Lcfj;	b	getBlockState
	m	()Lfu;	c	getBlockPos
	m	()Z	d	isApproved
	m	()Lry$a;	e	getAction
c	nu	net/minecraft/network/packet/s2c/play/BlockBreakingProgressS2CPacket
	f	I	a	entityId
	f	Lfu;	b	pos
	f	I	c	progress
	m	(ILfu;I)V	<init>	<init>
		p	1	entityId	entityId
		p	2	pos	pos
		p	3	progress	progress
	m	(Lnl;)V	a	apply
	m	()I	b	getEntityId
	m	()Lfu;	c	getPos
	m	()I	d	getProgress
c	nv	net/minecraft/network/packet/s2c/play/BlockEntityUpdateS2CPacket
	f	Lfu;	a	pos
	f	I	b	blockEntityType
	f	Lle;	c	tag
	m	(Lfu;ILle;)V	<init>	<init>
		p	1	pos	pos
		p	2	blockEntityType	blockEntityType
		p	3	tag	tag
	m	(Lnl;)V	a	apply
	m	()Lfu;	b	getPos
	m	()I	c	getBlockEntityType
	m	()Lle;	d	getCompoundTag
c	nw	net/minecraft/network/packet/s2c/play/BlockEventS2CPacket
	f	Lfu;	a	pos
	f	I	b	type
	f	I	c	data
	f	Lbvr;	d	block
	m	(Lfu;Lbvr;II)V	<init>	<init>
		p	1	pos	pos
		p	2	block	block
		p	3	type	type
		p	4	data	data
	m	(Lnl;)V	a	apply
	m	()Lfu;	b	getPos
	m	()I	c	getType
	m	()I	d	getData
	m	()Lbvr;	e	getBlock
c	nx	net/minecraft/network/packet/s2c/play/BlockUpdateS2CPacket
	f	Lfu;	a	pos
	f	Lcfj;	b	state
	m	(Lbpg;Lfu;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
	m	(Lnl;)V	a	apply
	m	()Lcfj;	b	getState
	m	()Lfu;	c	getPos
c	ny	net/minecraft/network/packet/s2c/play/BossBarS2CPacket
	f	Ljava/util/UUID;	a	uuid
	f	Lny$a;	b	type
	f	Lmr;	c	name
	f	F	d	percent
	f	Lamw$a;	e	color
	f	Lamw$b;	f	overlay
	f	Z	g	darkenSky
	f	Z	h	dragonMusic
	f	Z	i	thickenFog
	m	(Lny$a;Lamw;)V	<init>	<init>
		p	1	action	action
	m	(I)V	a	setFlagBitfield
	m	(Lnl;)V	a	apply
	m	()Ljava/util/UUID;	b	getUuid
	m	()Lny$a;	c	getType
	m	()Lmr;	d	getName
	m	()F	e	getPercent
	m	()Lamw$a;	f	getColor
	m	()Lamw$b;	g	getOverlay
	m	()Z	h	shouldDarkenSky
	m	()Z	i	hasDragonMusic
	m	()Z	j	shouldThickenFog
	m	()I	k	getFlagBitfield
c	ny$a	net/minecraft/network/packet/s2c/play/BossBarS2CPacket$Type
c	nz	net/minecraft/network/packet/s2c/play/DifficultyS2CPacket
	f	Land;	a	difficulty
	f	Z	b	difficultyLocked
	m	(Land;Z)V	<init>	<init>
		p	1	difficulty	difficulty
		p	2	difficultyLocked	difficultyLocked
	m	(Lnl;)V	a	apply
	m	()Z	b	isDifficultyLocked
	m	()Land;	c	getDifficulty
c	o	net/minecraft/MinecraftVersion
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	id
	f	Ljava/lang/String;	d	name
	f	Z	e	stable
	f	I	f	worldVersion
	f	I	g	protocolVersion
	f	I	h	packVersion
	f	Ljava/util/Date;	i	buildTime
	f	Ljava/lang/String;	j	releaseTarget
	m	()Lcom/mojang/bridge/game/GameVersion;	a	create
c	oa	net/minecraft/network/packet/s2c/play/GameMessageS2CPacket
	f	Lmr;	a	message
	f	Lmo;	b	location
	f	Ljava/util/UUID;	c	senderUuid
	m	(Lmr;Lmo;Ljava/util/UUID;)V	<init>	<init>
		p	1	message	message
		p	2	location	location
		p	3	senderUuid	senderUuid
	m	(Lnl;)V	a	apply
	m	()Lmr;	b	getMessage
	m	()Z	c	isNonChat
	m	()Lmo;	d	getLocation
	m	()Ljava/util/UUID;	e	getSenderUuid
c	ob	net/minecraft/network/packet/s2c/play/ChunkDeltaUpdateS2CPacket
	f	Lbph;	a	chunkPos
	f	[Lob$a;	b	records
	m	(Lnl;)V	a	apply
	m	()[Lob$a;	b	getRecords
c	ob$a	net/minecraft/network/packet/s2c/play/ChunkDeltaUpdateS2CPacket$ChunkDeltaRecord
	f	S	b	pos
	f	Lcfj;	c	state
	m	(Lob;SLchj;)V	<init>	<init>
		p	2	pos	pos
	m	(Lob;SLcfj;)V	<init>	<init>
		p	2	pos	pos
		p	3	state	state
	m	()Lfu;	a	getBlockPos
	m	()S	b	getPosShort
	m	()Lcfj;	c	getState
c	oc	net/minecraft/network/packet/s2c/play/CommandSuggestionsS2CPacket
	f	I	a	completionId
	f	Lcom/mojang/brigadier/suggestion/Suggestions;	b	suggestions
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	<init>	<init>
		p	1	completionId	completionId
		p	2	suggestions	suggestions
	m	(Lnl;)V	a	apply
	m	()I	b	getCompletionId
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	c	getSuggestions
c	od	net/minecraft/network/packet/s2c/play/CommandTreeS2CPacket
	f	Lcom/mojang/brigadier/tree/RootCommandNode;	a	commandTree
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)V	<init>	<init>
		p	1	commandTree	commandTree
	m	(Lmg;B)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	readArgumentBuilder
		p	1	buf	buf
	m	(Lmg;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V	a	writeNode
		p	1	buf	buf
		p	2	node	node
	m	(Lnl;)V	a	apply
	m	()Lcom/mojang/brigadier/tree/RootCommandNode;	b	getCommandTree
	m	(Lmg;)Lod$a;	c	readCommandNode
		p	1	buf	buf
c	od$a	net/minecraft/network/packet/s2c/play/CommandTreeS2CPacket$CommandNodeData
	f	Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	argumentBuilder
	f	B	b	flags
	f	I	c	redirectNodeIndex
	f	[I	d	childNodeIndices
	f	Lcom/mojang/brigadier/tree/CommandNode;	e	node
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;BI[I)V	<init>	<init>
		p	1	argumentBuilder	argumentBuilder
		p	2	flags	flags
		p	3	redirectNodeIndex	redirectNodeIndex
		p	4	childNodeIndices	childNodeIndices
	m	([Lod$a;)Z	a	build
		p	1	previousNodes	previousNodes
c	oe	net/minecraft/network/packet/s2c/play/ConfirmGuiActionS2CPacket
	f	I	a	id
	f	S	b	actionId
	f	Z	c	accepted
	m	(ISZ)V	<init>	<init>
		p	1	id	id
		p	2	actionId	actionId
		p	3	accepted	accepted
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()S	c	getActionId
	m	()Z	d	wasAccepted
c	of	net/minecraft/network/packet/s2c/play/CloseScreenS2CPacket
	f	I	a	syncId
	m	(I)V	<init>	<init>
		p	1	syncId	syncId
	m	(Lnl;)V	a	apply
c	og	net/minecraft/network/packet/s2c/play/InventoryS2CPacket
	c	Represents the contents of a block or entity inventory being synchronized\nfrom the server to the client.
	f	I	a	syncId
		c	The {@link net.minecraft.screen.ScreenHandler#syncId} of a screen handler.
	f	Ljava/util/List;	b	contents
	m	(ILgi;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	contents	contents
	m	(Lnl;)V	a	apply
	m	()I	b	getSyncId
	m	()Ljava/util/List;	c	getContents
c	oh	net/minecraft/network/packet/s2c/play/ScreenHandlerPropertyUpdateS2CPacket
	f	I	a	syncId
	f	I	b	propertyId
	f	I	c	value
	m	(III)V	<init>	<init>
		p	1	syncId	syncId
		p	2	propertyId	propertyId
		p	3	value	value
	m	(Lnl;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getPropertyId
	m	()I	d	getValue
c	oi	net/minecraft/network/packet/s2c/play/ScreenHandlerSlotUpdateS2CPacket
	f	I	a	syncId
	f	I	b	slot
	f	Lbki;	c	stack
	m	(IILbki;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	slot	slot
		p	3	stack	stack
	m	(Lnl;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getSlot
	m	()Lbki;	d	getItemStack
c	oj	net/minecraft/network/packet/s2c/play/CooldownUpdateS2CPacket
	f	Lbke;	a	item
	f	I	b	cooldown
	m	(Lbke;I)V	<init>	<init>
		p	1	item	item
		p	2	cooldown	cooldown
	m	(Lnl;)V	a	apply
	m	()Lbke;	b	getItem
	m	()I	c	getCooldown
c	ok	net/minecraft/network/packet/s2c/play/CustomPayloadS2CPacket
	f	Luh;	a	BRAND
	f	Luh;	b	DEBUG_PATH
	f	Luh;	c	DEBUG_NEIGHBORS_UPDATE
	f	Luh;	d	DEBUG_CAVES
	f	Luh;	e	DEBUG_STRUCTURES
	f	Luh;	f	DEBUG_WORLDGEN_ATTEMPT
	f	Luh;	g	DEBUG_POI_TICKET_COUNT
	f	Luh;	h	DEBUG_POI_ADDED
	f	Luh;	i	DEBUG_POI_REMOVED
	f	Luh;	j	DEBUG_VILLAGE_SECTIONS
	f	Luh;	k	DEBUG_GOAL_SELECTOR
	f	Luh;	l	DEBUG_BRAIN
	f	Luh;	m	DEBUG_BEE
	f	Luh;	n	DEBUG_HIVE
	f	Luh;	o	DEBUG_GAME_TEST_ADD_MARKER
	f	Luh;	p	DEBUG_GAME_TEST_CLEAR
	f	Luh;	q	DEBUG_RAIDS
	f	Luh;	r	channel
	f	Lmg;	s	data
	m	(Luh;Lmg;)V	<init>	<init>
		p	1	channel	channel
		p	2	data	data
	m	(Lnl;)V	a	apply
	m	()Luh;	b	getChannel
	m	()Lmg;	c	getData
c	ol	net/minecraft/network/packet/s2c/play/PlaySoundIdS2CPacket
	f	Luh;	a	id
	f	Lacm;	b	category
	f	I	c	fixedX
	f	I	d	fixedY
	f	I	e	fixedZ
	f	F	f	volume
	f	F	g	pitch
	m	(Luh;Lacm;Ldem;FF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	pos	pos
		p	4	volume	volume
		p	5	pitch	pitch
	m	(Lnl;)V	a	apply
	m	()Luh;	b	getSoundId
	m	()Lacm;	c	getCategory
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
c	om	net/minecraft/network/packet/s2c/play/DisconnectS2CPacket
	f	Lmr;	a	reason
	m	(Lmr;)V	<init>	<init>
		p	1	reason	reason
	m	(Lnl;)V	a	apply
	m	()Lmr;	b	getReason
c	on	net/minecraft/network/packet/s2c/play/EntityStatusS2CPacket
	f	I	a	id
	f	B	b	status
	m	(Laom;B)V	<init>	<init>
		p	1	entity	entity
		p	2	status	status
	m	(Lbqb;)Laom;	a	getEntity
		p	1	world	world
	m	(Lnl;)V	a	apply
	m	()B	b	getStatus
c	oo	net/minecraft/network/packet/s2c/play/ExplosionS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	radius
	f	Ljava/util/List;	e	affectedBlocks
	f	F	f	playerVelocityX
	f	F	g	playerVelocityY
	f	F	h	playerVelocityZ
	m	(DDDFLjava/util/List;Ldem;)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	radius	radius
		p	8	affectedBlocks	affectedBlocks
		p	9	playerVelocity	playerVelocity
	m	(Lnl;)V	a	apply
	m	()F	b	getPlayerVelocityX
	m	()F	c	getPlayerVelocityY
	m	()F	d	getPlayerVelocityZ
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()F	h	getRadius
	m	()Ljava/util/List;	i	getAffectedBlocks
c	op	net/minecraft/network/packet/s2c/play/UnloadChunkS2CPacket
	f	I	a	x
	f	I	b	z
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
	m	(Lnl;)V	a	apply
	m	()I	b	getX
	m	()I	c	getZ
c	oq	net/minecraft/network/packet/s2c/play/GameStateChangeS2CPacket
	f	Loq$a;	a	NO_RESPAWN_BLOCK
	f	Loq$a;	b	RAIN_STARTED
	f	Loq$a;	c	RAIN_STOPPED
	f	Loq$a;	d	GAME_MODE_CHANGED
	f	Loq$a;	e	GAME_WON
	f	Loq$a;	f	DEMO_MESSAGE_SHOWN
	f	Loq$a;	g	PROJECTILE_HIT_PLAYER
	f	Loq$a;	h	RAIN_GRADIENT_CHANGED
	f	Loq$a;	i	THUNDER_GRADIENT_CHANGED
	f	Loq$a;	j	PUFFERFISH_STING
	f	Loq$a;	k	ELDER_GUARDIAN_EFFECT
	f	Loq$a;	l	IMMEDIATE_RESPAWN
	f	Loq$a;	m	reason
	f	F	n	value
	m	(Loq$a;F)V	<init>	<init>
		p	1	reason	reason
		p	2	value	value
	m	(Lnl;)V	a	apply
	m	()Loq$a;	b	getReason
	m	()F	c	getValue
c	oq$a	net/minecraft/network/packet/s2c/play/GameStateChangeS2CPacket$Reason
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	REASONS
	f	I	b	id
	m	(I)V	<init>	<init>
		p	1	id	id
c	or	net/minecraft/network/packet/s2c/play/OpenHorseScreenS2CPacket
	f	I	a	syncId
	f	I	b	slotCount
	f	I	c	horseId
	m	(III)V	<init>	<init>
		p	1	syncId	syncId
		p	2	slotCount	slotCount
		p	3	horseId	horseId
	m	(Lnl;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getSlotCount
	m	()I	d	getHorseId
c	os	net/minecraft/network/packet/s2c/play/KeepAliveS2CPacket
	f	J	a	id
	m	(J)V	<init>	<init>
		p	1	id	id
	m	(Lnl;)V	a	apply
	m	()J	b	getId
c	ot	net/minecraft/network/packet/s2c/play/ChunkDataS2CPacket
	f	I	a	chunkX
	f	I	b	chunkZ
	f	I	c	verticalStripBitmask
	f	Lle;	d	heightmaps
	f	Lcgz;	e	biomeArray
	f	[B	f	data
	f	Ljava/util/List;	g	blockEntities
	f	Z	h	isFullChunk
	m	(Lchj;IZ)V	<init>	<init>
		p	1	chunk	chunk
		p	2	includedSectionsMask	includedSectionsMask
	m	(Lmg;Lchj;I)I	a	writeData
		p	2	chunk	chunk
		p	3	includedSectionsMask	includedSectionsMask
	m	(Lnl;)V	a	apply
	m	(Lchj;I)I	a	getDataSize
		p	1	chunk	chunk
		p	2	includedSectionsMark	includedSectionsMark
	m	()Lmg;	b	getReadBuffer
	m	()I	c	getX
	m	()I	d	getZ
	m	()I	e	getVerticalStripBitmask
	m	()Z	f	isFullChunk
	m	()Lle;	h	getHeightmaps
	m	()Ljava/util/List;	i	getBlockEntityTagList
	m	()Lcgz;	j	getBiomeArray
	m	()Lio/netty/buffer/ByteBuf;	k	getWriteBuffer
c	ou	net/minecraft/network/packet/s2c/play/WorldEventS2CPacket
	f	I	a	eventId
	f	Lfu;	b	pos
	f	I	c	data
	f	Z	d	global
	m	(ILfu;IZ)V	<init>	<init>
		p	1	eventId	eventId
		p	2	pos	pos
		p	3	data	data
		p	4	global	global
	m	(Lnl;)V	a	apply
	m	()Z	b	isGlobal
	m	()I	c	getEventId
	m	()I	d	getData
	m	()Lfu;	e	getPos
c	ov	net/minecraft/network/packet/s2c/play/ParticleS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	offsetX
	f	F	e	offsetY
	f	F	f	offsetZ
	f	F	g	speed
	f	I	h	count
	f	Z	i	longDistance
	f	Lhf;	j	parameters
	m	(Lhf;ZDDDFFFFI)V	<init>	<init>
		p	1	parameters	parameters
		p	2	longDistance	longDistance
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	offsetX	offsetX
		p	10	offsetY	offsetY
		p	11	offsetZ	offsetZ
		p	12	speed	speed
		p	13	count	count
	m	(Lmg;Lhg;)Lhf;	a	readParticleParameters
		p	1	buf	buf
		p	2	type	type
	m	(Lnl;)V	a	apply
	m	()Z	b	isLongDistance
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getOffsetX
	m	()F	g	getOffsetY
	m	()F	h	getOffsetZ
	m	()F	i	getSpeed
	m	()I	j	getCount
	m	()Lhf;	k	getParameters
c	ow	net/minecraft/network/packet/s2c/play/LightUpdateS2CPacket
	f	I	a	chunkX
	f	I	b	chunkZ
	f	I	c	skyLightMask
	f	I	d	blockLightMask
	f	I	e	filledSkyLightMask
	f	I	f	filledBlockLightMask
	f	Ljava/util/List;	g	skyLightUpdates
	f	Ljava/util/List;	h	blockLightUpdates
	m	(Lbph;Lcwr;IIZ)V	<init>	<init>
		p	1	pos	pos
		p	2	lightProvider	lightProvider
		p	3	skyLightMask	skyLightMask
		p	4	blockLightMask	blockLightMask
	m	(Lnl;)V	a	apply
	m	()I	b	getChunkX
	m	()I	c	getChunkZ
	m	()I	d	getSkyLightMask
	m	()I	e	getFilledSkyLightMask
	m	()Ljava/util/List;	f	getSkyLightUpdates
	m	()I	g	getBlockLightMask
	m	()I	h	getFilledBlockLightMask
	m	()Ljava/util/List;	i	getBlockLightUpdates
c	ox	net/minecraft/network/packet/s2c/play/GameJoinS2CPacket
	f	I	a	playerEntityId
	f	J	b	sha256Seed
	f	Z	c	hardcore
	f	Lbpy;	d	gameMode
	f	Lgm$a;	g	dimensionTracker
	f	Lug;	i	dimensionId
	f	I	j	maxPlayers
	f	I	k	chunkLoadDistance
	f	Z	l	reducedDebugInfo
	f	Z	m	showDeathScreen
	f	Z	n	debugWorld
	f	Z	o	flatWorld
	m	(ILbpy;Lbpy;JZLjava/util/Set;Lgm$a;Lug;Lug;IIZZZZ)V	<init>	<init>
		p	1	playerEntityId	playerEntityId
		p	2	gameMode	gameMode
		p	4	sha256Seed	sha256Seed
		p	6	hardcore	hardcore
		p	11	maxPlayers	maxPlayers
		p	12	chunkLoadDistance	chunkLoadDistance
		p	13	reducedDebugInfo	reducedDebugInfo
		p	14	showDeathScreen	showDeathScreen
		p	15	debugWorld	debugWorld
		p	16	flatWorld	flatWorld
	m	(Lnl;)V	a	apply
	m	()I	b	getEntityId
	m	()J	c	getSha256Seed
	m	()Z	d	isHardcore
	m	()Lbpy;	e	getGameMode
	m	()Lgm;	h	getDimension
	m	()Lug;	j	getDimensionId
	m	()I	l	getChunkLoadDistance
	m	()Z	m	hasReducedDebugInfo
	m	()Z	n	showsDeathScreen
	m	()Z	o	isDebugWorld
	m	()Z	p	isFlatWorld
c	oy	net/minecraft/network/packet/s2c/play/MapUpdateS2CPacket
	f	I	a	id
	f	B	b	scale
	f	Z	c	showIcons
	f	Z	d	locked
	f	[Lczs;	e	icons
	f	I	f	startX
	f	I	g	startZ
	f	I	h	width
	f	I	i	height
	f	[B	j	colors
	m	(IBZZLjava/util/Collection;[BIIII)V	<init>	<init>
		p	1	id	id
		p	2	scale	scale
		p	3	showIcons	showIcons
		p	4	locked	locked
		p	5	icons	icons
		p	6	mapColors	mapColors
		p	7	startX	startX
		p	8	startZ	startZ
		p	9	width	width
		p	10	height	height
	m	(Lnl;)V	a	apply
	m	(Lczv;)V	a	apply
	m	()I	b	getId
c	oz	net/minecraft/network/packet/s2c/play/SetTradeOffersS2CPacket
	f	I	a	syncId
	f	Lbpa;	b	recipes
	f	I	c	levelProgress
	f	I	d	experience
	f	Z	e	leveled
	f	Z	f	refreshable
	m	(ILbpa;IIZZ)V	<init>	<init>
		p	1	syncId	syncId
		p	2	recipes	recipes
		p	3	levelProgress	levelProgress
		p	4	experience	experience
		p	5	leveled	leveled
		p	6	refreshable	refreshable
	m	(Lnl;)V	a	apply
	m	()I	b	getSyncId
	m	()Lbpa;	c	getOffers
	m	()I	d	getLevelProgress
	m	()I	e	getExperience
	m	()Z	f	isLeveled
	m	()Z	g	isRefreshable
c	pa	net/minecraft/network/packet/s2c/play/EntityS2CPacket
	f	I	a	id
	f	S	b	deltaX
	f	S	c	deltaY
	f	S	d	deltaZ
	f	B	e	yaw
	f	B	f	pitch
	f	Z	g	onGround
	f	Z	h	rotate
	f	Z	i	positionChanged
	m	(I)V	<init>	<init>
		p	1	entityId	entityId
	m	(D)J	a	encodePacketCoordinate
		p	0	coord	coord
	m	(JJJ)Ldem;	a	decodePacketCoordinates
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(Lbqb;)Laom;	a	getEntity
		p	1	world	world
	m	(Lnl;)V	a	apply
	m	()S	b	getDeltaXShort
	m	()S	c	getDeltaYShort
	m	()S	d	getDeltaZShort
	m	()B	e	getYaw
	m	()B	f	getPitch
	m	()Z	g	hasRotation
	m	()Z	h	isPositionChanged
	m	()Z	i	isOnGround
c	pa$a	net/minecraft/network/packet/s2c/play/EntityS2CPacket$MoveRelative
	m	(ISSSZ)V	<init>	<init>
		p	1	entityId	entityId
		p	2	deltaX	deltaX
		p	3	deltaY	deltaY
		p	4	deltaZ	deltaZ
		p	5	onGround	onGround
c	pa$b	net/minecraft/network/packet/s2c/play/EntityS2CPacket$RotateAndMoveRelative
	m	(ISSSBBZ)V	<init>	<init>
		p	1	entityId	entityId
		p	2	deltaX	deltaX
		p	3	deltaY	deltaY
		p	4	deltaZ	deltaZ
		p	5	yaw	yaw
		p	6	pitch	pitch
		p	7	onGround	onGround
c	pa$c	net/minecraft/network/packet/s2c/play/EntityS2CPacket$Rotate
	m	(IBBZ)V	<init>	<init>
		p	1	entityId	entityId
		p	2	yaw	yaw
		p	3	pitch	pitch
		p	4	onGround	onGround
c	pb	net/minecraft/network/packet/s2c/play/VehicleMoveS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Lnl;)V	a	apply
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYaw
	m	()F	f	getPitch
c	pc	net/minecraft/network/packet/s2c/play/OpenWrittenBookS2CPacket
	f	Lanf;	a	hand
	m	(Lanf;)V	<init>	<init>
		p	1	hand	hand
	m	(Lnl;)V	a	apply
	m	()Lanf;	b	getHand
c	pd	net/minecraft/network/packet/s2c/play/OpenScreenS2CPacket
	f	I	a	syncId
	f	I	b	screenHandlerId
	f	Lmr;	c	name
	m	(ILbhk;Lmr;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	type	type
		p	3	name	name
	m	(Lnl;)V	a	apply
	m	()I	b	getSyncId
	m	()Lbhk;	c	getScreenHandlerType
	m	()Lmr;	d	getName
c	pe	net/minecraft/network/packet/s2c/play/SignEditorOpenS2CPacket
	f	Lfu;	a	pos
	m	(Lfu;)V	<init>	<init>
		p	1	pos	pos
	m	(Lnl;)V	a	apply
	m	()Lfu;	b	getPos
c	pf	net/minecraft/network/packet/s2c/play/CraftFailedResponseS2CPacket
	f	I	a	syncId
	f	Luh;	b	recipeId
	m	(ILbmu;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	recipe	recipe
	m	(Lnl;)V	a	apply
	m	()Luh;	b	getRecipeId
	m	()I	c	getSyncId
c	pg	net/minecraft/network/packet/s2c/play/PlayerAbilitiesS2CPacket
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	allowFlying
	f	Z	d	creativeMode
	f	F	e	flySpeed
	f	F	f	walkSpeed
	m	(Lnl;)V	a	apply
	m	()Z	b	isInvulnerable
	m	()Z	c	isFlying
	m	()Z	d	allowFlying
	m	()Z	e	isCreativeMode
	m	()F	f	getFlySpeed
	m	()F	g	getWalkSpeed
c	ph	net/minecraft/network/packet/s2c/play/CombatEventS2CPacket
	f	Lph$a;	a	type
	f	I	b	entityId
	f	I	c	attackerEntityId
	f	I	d	timeSinceLastAttack
	f	Lmr;	e	deathMessage
	m	(Lanv;Lph$a;Lmr;)V	<init>	<init>
		p	1	damageTracker	damageTracker
		p	2	type	type
		p	3	deathMessage	deathMessage
	m	(Lanv;Lph$a;)V	<init>	<init>
		p	1	damageTracker	damageTracker
		p	2	type	type
	m	(Lnl;)V	a	apply
c	ph$a	net/minecraft/network/packet/s2c/play/CombatEventS2CPacket$Type
c	pi	net/minecraft/network/packet/s2c/play/PlayerListS2CPacket
	f	Lpi$a;	a	action
	f	Ljava/util/List;	b	entries
	m	(Lpi$a;Ljava/lang/Iterable;)V	<init>	<init>
		p	1	action	action
	m	(Lpi$a;[Lze;)V	<init>	<init>
		p	1	action	action
		p	2	players	players
	m	(Lnl;)V	a	apply
	m	()Ljava/util/List;	b	getEntries
	m	()Lpi$a;	c	getAction
c	pi$a	net/minecraft/network/packet/s2c/play/PlayerListS2CPacket$Action
c	pi$b	net/minecraft/network/packet/s2c/play/PlayerListS2CPacket$Entry
	f	I	b	latency
	f	Lbpy;	c	gameMode
	f	Lcom/mojang/authlib/GameProfile;	d	profile
	f	Lmr;	e	displayName
	m	(Lpi;Lcom/mojang/authlib/GameProfile;ILbpy;Lmr;)V	<init>	<init>
		p	2	profile	profile
		p	3	latency	latency
		p	4	gameMode	gameMode
		p	5	displayName	displayName
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	()I	b	getLatency
	m	()Lbpy;	c	getGameMode
	m	()Lmr;	d	getDisplayName
c	pj	net/minecraft/network/packet/s2c/play/LookAtS2CPacket
	f	D	a	targetX
	f	D	b	targetY
	f	D	c	targetZ
	f	I	d	entityId
	f	Ldg$a;	e	selfAnchor
	f	Ldg$a;	f	targetAnchor
	f	Z	g	lookAtEntity
	m	(Ldg$a;DDD)V	<init>	<init>
		p	2	targetX	targetX
		p	4	targetY	targetY
		p	6	targetZ	targetZ
	m	(Ldg$a;Laom;Ldg$a;)V	<init>	<init>
		p	1	selfAnchor	selfAnchor
		p	2	entity	entity
		p	3	targetAnchor	targetAnchor
	m	(Lbqb;)Ldem;	a	getTargetPosition
		p	1	world	world
	m	(Lnl;)V	a	apply
	m	()Ldg$a;	b	getSelfAnchor
c	pk	net/minecraft/network/packet/s2c/play/PlayerPositionLookS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	f	Ljava/util/Set;	f	flags
	f	I	g	teleportId
	m	(DDDFFLjava/util/Set;I)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
		p	9	flags	flags
		p	10	teleportId	teleportId
	m	(Lnl;)V	a	apply
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYaw
	m	()F	f	getPitch
	m	()I	g	getTeleportId
	m	()Ljava/util/Set;	h	getFlags
c	pk$a	net/minecraft/network/packet/s2c/play/PlayerPositionLookS2CPacket$Flag
	f	I	f	shift
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	shift	shift
	m	(I)Ljava/util/Set;	a	getFlags
	m	()I	a	getMask
	m	(Ljava/util/Set;)I	a	getBitfield
	m	(I)Z	b	isSet
c	pl	net/minecraft/network/packet/s2c/play/UnlockRecipesS2CPacket
	f	Lpl$a;	a	action
	f	Ljava/util/List;	b	recipeIdsToChange
	f	Ljava/util/List;	c	recipeIdsToInit
	f	Z	d	guiOpen
	f	Z	e	filteringCraftable
	f	Z	f	furnaceGuiOpen
	f	Z	g	furnaceFilteringCraftable
	m	(Lpl$a;Ljava/util/Collection;Ljava/util/Collection;ZZZZ)V	<init>	<init>
		p	1	action	action
		p	2	recipeIdsToChange	recipeIdsToChange
		p	3	recipeIdsToInit	recipeIdsToInit
		p	4	guiOpen	guiOpen
		p	5	filteringCraftable	filteringCraftable
		p	6	furnaceGuiOpen	furnaceGuiOpen
		p	7	furnaceFilteringCraftable	furnaceFilteringCraftable
	m	(Lnl;)V	a	apply
	m	()Ljava/util/List;	b	getRecipeIdsToChange
	m	()Ljava/util/List;	c	getRecipeIdsToInit
	m	()Z	d	isGuiOpen
	m	()Z	e	isFilteringCraftable
	m	()Z	f	isFurnaceGuiOpen
	m	()Z	g	isFurnaceFilteringCraftable
	m	()Lpl$a;	h	getAction
c	pl$a	net/minecraft/network/packet/s2c/play/UnlockRecipesS2CPacket$Action
c	pm	net/minecraft/network/packet/s2c/play/EntitiesDestroyS2CPacket
	f	[I	a	entityIds
	m	([I)V	<init>	<init>
		p	1	entityIds	entityIds
	m	(Lnl;)V	a	apply
	m	()[I	b	getEntityIds
c	pn	net/minecraft/network/packet/s2c/play/RemoveEntityStatusEffectS2CPacket
	f	I	a	entityId
	f	Laoe;	b	effectType
	m	(ILaoe;)V	<init>	<init>
		p	1	entityId	entityId
		p	2	effectType	effectType
	m	(Lbqb;)Laom;	a	getEntity
		p	1	world	world
	m	(Lnl;)V	a	apply
	m	()Laoe;	b	getEffectType
c	po	net/minecraft/network/packet/s2c/play/ResourcePackSendS2CPacket
	f	Ljava/lang/String;	a	url
	f	Ljava/lang/String;	b	hash
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	url	url
		p	2	hash	hash
	m	(Lnl;)V	a	apply
	m	()Ljava/lang/String;	b	getURL
	m	()Ljava/lang/String;	c	getSHA1
c	pp	net/minecraft/network/packet/s2c/play/PlayerRespawnS2CPacket
	f	Lug;	b	dimension
	f	J	c	sha256Seed
	f	Lbpy;	d	gameMode
	f	Z	f	debugWorld
	f	Z	g	flatWorld
	f	Z	h	keepPlayerAttributes
	m	(Lnl;)V	a	apply
	m	()Lug;	c	getDimension
	m	()J	d	getSha256Seed
	m	()Lbpy;	e	getGameMode
	m	()Z	g	isDebugWorld
	m	()Z	h	isFlatWorld
	m	()Z	i	shouldKeepPlayerAttributes
c	pq	net/minecraft/network/packet/s2c/play/EntitySetHeadYawS2CPacket
	f	I	a	entity
	f	B	b	headYaw
	m	(Laom;B)V	<init>	<init>
		p	1	entity	entity
		p	2	headYaw	headYaw
	m	(Lbqb;)Laom;	a	getEntity
		p	1	world	world
	m	(Lnl;)V	a	apply
	m	()B	b	getHeadYaw
c	pr	net/minecraft/network/packet/s2c/play/SelectAdvancementTabS2CPacket
	f	Luh;	a	tabId
	m	(Luh;)V	<init>	<init>
		p	1	tabId	tabId
	m	(Lnl;)V	a	apply
	m	()Luh;	b	getTabId
c	ps	net/minecraft/network/packet/s2c/play/WorldBorderS2CPacket
	f	Lps$a;	a	type
	f	I	b	portalTeleportPosLimit
	f	D	c	centerX
	f	D	d	centerZ
	f	D	e	size
	f	D	f	oldSize
	f	J	g	interpolationDuration
	f	I	h	warningTime
	f	I	i	warningBlocks
	m	(Lcgw;Lps$a;)V	<init>	<init>
		p	1	border	border
		p	2	type	type
	m	(Lcgw;)V	a	apply
		p	1	border	border
	m	(Lnl;)V	a	apply
c	ps$a	net/minecraft/network/packet/s2c/play/WorldBorderS2CPacket$Type
c	pt	net/minecraft/network/packet/s2c/play/SetCameraEntityS2CPacket
	f	I	a	entityId
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Lbqb;)Laom;	a	getEntity
		p	1	world	world
	m	(Lnl;)V	a	apply
c	pu	net/minecraft/network/packet/s2c/play/HeldItemChangeS2CPacket
	f	I	a	slot
	m	(I)V	<init>	<init>
		p	1	slot	slot
	m	(Lnl;)V	a	apply
	m	()I	b	getSlot
c	pv	net/minecraft/network/packet/s2c/play/ChunkRenderDistanceCenterS2CPacket
	f	I	a	chunkX
	f	I	b	chunkZ
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
	m	(Lnl;)V	a	apply
	m	()I	b	getChunkX
	m	()I	c	getChunkZ
c	pw	net/minecraft/network/packet/s2c/play/ChunkLoadDistanceS2CPacket
	f	I	a	distance
	m	(I)V	<init>	<init>
		p	1	distance	distance
	m	(Lnl;)V	a	apply
	m	()I	b	getDistance
c	px	net/minecraft/network/packet/s2c/play/PlayerSpawnPositionS2CPacket
	f	Lfu;	a	pos
	m	(Lfu;)V	<init>	<init>
		p	1	pos	pos
	m	(Lnl;)V	a	apply
	m	()Lfu;	b	getPos
c	py	net/minecraft/network/packet/s2c/play/ScoreboardDisplayS2CPacket
	f	I	a	slot
	f	Ljava/lang/String;	b	name
	m	(ILdfj;)V	<init>	<init>
		p	1	slot	slot
		p	2	objective	objective
	m	(Lnl;)V	a	apply
	m	()I	b	getSlot
	m	()Ljava/lang/String;	c	getName
c	pz	net/minecraft/network/packet/s2c/play/EntityTrackerUpdateS2CPacket
	f	I	a	id
	f	Ljava/util/List;	b	trackedValues
	m	(ILtt;Z)V	<init>	<init>
		p	1	id	id
		p	2	tracker	tracker
		p	3	forceUpdateAll	forceUpdateAll
	m	(Lnl;)V	a	apply
	m	()Ljava/util/List;	b	getTrackedValues
	m	()I	c	id
c	q	net/minecraft/util/FileNameUtil
	f	Ljava/util/regex/Pattern;	a	FILE_NAME_WITH_COUNT
	f	Ljava/util/regex/Pattern;	b	RESERVED_WINDOWS_NAMES
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getNextUniqueName
		p	0	path	path
		p	1	name	name
		p	2	extension	extension
	m	(Ljava/nio/file/Path;)Z	a	isNormal
		p	0	path	path
	m	(Ljava/nio/file/Path;)Z	b	isAllowedName
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	getResourcePath
		p	0	path	path
		p	1	resourceName	resourceName
		p	2	extension	extension
c	qa	net/minecraft/network/packet/s2c/play/EntityAttachS2CPacket
	f	I	a	attachedId
	f	I	b	holdingId
	m	(Laom;Laom;)V	<init>	<init>
		p	1	attachedEntity	attachedEntity
		p	2	holdingEntity	holdingEntity
	m	(Lnl;)V	a	apply
	m	()I	b	getAttachedEntityId
	m	()I	c	getHoldingEntityId
c	qb	net/minecraft/network/packet/s2c/play/EntityVelocityUpdateS2CPacket
	f	I	a	id
	f	I	b	velocityX
	f	I	c	velocityY
	f	I	d	velocityZ
	m	(ILdem;)V	<init>	<init>
		p	1	id	id
		p	2	velocity	velocity
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()I	c	getVelocityX
	m	()I	d	getVelocityY
	m	()I	e	getVelocityZ
c	qc	net/minecraft/network/packet/s2c/play/EntityEquipmentUpdateS2CPacket
	f	I	a	id
	m	(Lnl;)V	a	apply
	m	()I	b	getId
c	qd	net/minecraft/network/packet/s2c/play/ExperienceBarUpdateS2CPacket
	f	F	a	barProgress
	f	I	b	experienceLevel
	f	I	c	experience
	m	(FII)V	<init>	<init>
		p	1	barProgress	barProgress
		p	2	experienceLevel	experienceLevel
		p	3	experience	experience
	m	(Lnl;)V	a	apply
	m	()F	b	getBarProgress
	m	()I	c	getExperienceLevel
	m	()I	d	getExperience
c	qe	net/minecraft/network/packet/s2c/play/HealthUpdateS2CPacket
	f	F	a	health
	f	I	b	food
	f	F	c	saturation
	m	(FIF)V	<init>	<init>
		p	1	health	health
		p	2	food	food
		p	3	saturation	saturation
	m	(Lnl;)V	a	apply
	m	()F	b	getHealth
	m	()I	c	getFood
	m	()F	d	getSaturation
c	qf	net/minecraft/network/packet/s2c/play/ScoreboardObjectiveUpdateS2CPacket
	f	Ljava/lang/String;	a	name
	f	Lmr;	b	displayName
	f	Ldfp$a;	c	type
	f	I	d	mode
	m	(Ldfj;I)V	<init>	<init>
		p	1	objective	objective
		p	2	mode	mode
	m	(Lnl;)V	a	apply
	m	()Ljava/lang/String;	b	getName
	m	()Lmr;	c	getDisplayName
	m	()I	d	getMode
	m	()Ldfp$a;	e	getType
c	qg	net/minecraft/network/packet/s2c/play/EntityPassengersSetS2CPacket
	f	I	a	id
	f	[I	b	passengerIds
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Lnl;)V	a	apply
	m	()[I	b	getPassengerIds
	m	()I	c	getId
c	qh	net/minecraft/network/packet/s2c/play/TeamS2CPacket
	f	Ljava/lang/String;	a	teamName
	f	Lmr;	b	displayName
	f	Lmr;	c	prefix
	f	Lmr;	d	suffix
	f	Ljava/lang/String;	e	nameTagVisibilityRule
	f	Ljava/lang/String;	f	collisionRule
	f	Li;	g	color
	f	Ljava/util/Collection;	h	playerList
	f	I	i	mode
	f	I	j	flags
	m	(Ldfk;Ljava/util/Collection;I)V	<init>	<init>
		p	1	team	team
		p	2	playerList	playerList
		p	3	mode	mode
	m	(Ldfk;I)V	<init>	<init>
		p	1	team	team
		p	2	mode	mode
	m	(Lnl;)V	a	apply
	m	()Ljava/lang/String;	b	getTeamName
	m	()Lmr;	c	getDisplayName
	m	()Ljava/util/Collection;	d	getPlayerList
	m	()I	e	getMode
	m	()I	f	getFlags
	m	()Li;	g	getPlayerPrefix
	m	()Ljava/lang/String;	h	getNameTagVisibilityRule
	m	()Ljava/lang/String;	i	getCollisionRule
	m	()Lmr;	j	getPrefix
	m	()Lmr;	k	getSuffix
c	qi	net/minecraft/network/packet/s2c/play/ScoreboardPlayerUpdateS2CPacket
	f	Ljava/lang/String;	a	playerName
	f	Ljava/lang/String;	b	objectiveName
	f	I	c	score
	f	Lux$a;	d	mode
	m	(Lux$a;Ljava/lang/String;Ljava/lang/String;I)V	<init>	<init>
		p	1	mode	mode
		p	2	objectiveName	objectiveName
		p	3	playerName	playerName
		p	4	score	score
	m	(Lnl;)V	a	apply
	m	()Ljava/lang/String;	b	getPlayerName
	m	()Ljava/lang/String;	c	getObjectiveName
	m	()I	d	getScore
	m	()Lux$a;	e	getUpdateMode
c	qj	net/minecraft/network/packet/s2c/play/WorldTimeUpdateS2CPacket
	f	J	a	time
	f	J	b	timeOfDay
	m	(JJZ)V	<init>	<init>
		p	1	time	time
		p	3	timeOfDay	timeOfDay
		p	5	doDaylightCycle	doDaylightCycle
	m	(Lnl;)V	a	apply
	m	()J	b	getTime
	m	()J	c	getTimeOfDay
c	qk	net/minecraft/network/packet/s2c/play/TitleS2CPacket
	f	Lqk$a;	a	action
	f	Lmr;	b	text
	f	I	c	fadeInTicks
	f	I	d	stayTicks
	f	I	e	fadeOutTicks
	m	(III)V	<init>	<init>
		p	1	fadeInTicks	fadeInTicks
		p	2	stayTicks	stayTicks
		p	3	fadeOutTicks	fadeOutTicks
	m	(Lqk$a;Lmr;III)V	<init>	<init>
		p	1	action	action
		p	2	text	text
		p	3	fadeInTicks	fadeInTicks
		p	4	stayTicks	stayTicks
		p	5	fadeOutTicks	fadeOutTicks
	m	(Lqk$a;Lmr;)V	<init>	<init>
		p	1	action	action
		p	2	text	text
	m	(Lnl;)V	a	apply
	m	()Lqk$a;	b	getAction
	m	()Lmr;	c	getText
	m	()I	d	getFadeInTicks
	m	()I	e	getStayTicks
	m	()I	f	getFadeOutTicks
c	qk$a	net/minecraft/network/packet/s2c/play/TitleS2CPacket$Action
c	ql	net/minecraft/network/packet/s2c/play/PlaySoundFromEntityS2CPacket
	f	Lack;	a	sound
	f	Lacm;	b	category
	f	I	c	entityId
	f	F	d	volume
	f	F	e	pitch
	m	(Lack;Lacm;Laom;FF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	entity	entity
		p	4	volume	volume
		p	5	pitch	pitch
	m	(Lnl;)V	a	apply
	m	()Lack;	b	getSound
	m	()Lacm;	c	getCategory
	m	()I	d	getEntityId
	m	()F	e	getVolume
	m	()F	f	getPitch
c	qm	net/minecraft/network/packet/s2c/play/PlaySoundS2CPacket
	f	Lack;	a	sound
	f	Lacm;	b	category
	f	I	c	fixedX
	f	I	d	fixedY
	f	I	e	fixedZ
	f	F	f	volume
	f	F	g	pitch
	m	(Lack;Lacm;DDDFF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	volume	volume
		p	10	pitch	pitch
	m	(Lnl;)V	a	apply
	m	()Lack;	b	getSound
	m	()Lacm;	c	getCategory
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
c	qn	net/minecraft/network/packet/s2c/play/StopSoundS2CPacket
	f	Luh;	a	soundId
	f	Lacm;	b	category
	m	(Luh;Lacm;)V	<init>	<init>
		p	1	soundId	soundId
		p	2	category	category
	m	(Lnl;)V	a	apply
	m	()Luh;	b	getSoundId
	m	()Lacm;	c	getCategory
c	qo	net/minecraft/network/packet/s2c/play/PlayerListHeaderS2CPacket
	f	Lmr;	a	header
	f	Lmr;	b	footer
	m	(Lnl;)V	a	apply
	m	()Lmr;	b	getHeader
	m	()Lmr;	c	getFooter
c	qp	net/minecraft/network/packet/s2c/play/TagQueryResponseS2CPacket
	f	I	a	transactionId
	f	Lle;	b	tag
	m	(ILle;)V	<init>	<init>
		p	1	transactionId	transactionId
		p	2	tag	tag
	m	(Lnl;)V	a	apply
	m	()I	b	getTransactionId
	m	()Lle;	c	getTag
c	qq	net/minecraft/network/packet/s2c/play/ItemPickupAnimationS2CPacket
	f	I	a	entityId
	f	I	b	collectorEntityId
	f	I	c	stackAmount
	m	(III)V	<init>	<init>
		p	1	entityId	entityId
		p	2	collectorId	collectorId
		p	3	stackAmount	stackAmount
	m	(Lnl;)V	a	apply
	m	()I	b	getEntityId
	m	()I	c	getCollectorEntityId
	m	()I	d	getStackAmount
c	qr	net/minecraft/network/packet/s2c/play/EntityPositionS2CPacket
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	B	e	yaw
	f	B	f	pitch
	f	Z	g	onGround
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Lnl;)V	a	apply
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()B	f	getYaw
	m	()B	g	getPitch
	m	()Z	h	isOnGround
c	qs	net/minecraft/network/packet/s2c/play/AdvancementUpdateS2CPacket
	f	Z	a	clearCurrent
	f	Ljava/util/Map;	b	toEarn
	f	Ljava/util/Set;	c	toRemove
	f	Ljava/util/Map;	d	toSetProgress
	m	(ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V	<init>	<init>
		p	1	clearCurrent	clearCurrent
		p	2	toEarn	toEarn
		p	3	toRemove	toRemove
		p	4	toSetProgress	toSetProgress
	m	(Lnl;)V	a	apply
	m	()Ljava/util/Map;	b	getAdvancementsToEarn
	m	()Ljava/util/Set;	c	getAdvancementIdsToRemove
	m	()Ljava/util/Map;	d	getAdvancementsToProgress
	m	()Z	e	shouldClearCurrent
c	qt	net/minecraft/network/packet/s2c/play/EntityAttributesS2CPacket
	f	I	a	entityId
	f	Ljava/util/List;	b	entries
	m	(ILjava/util/Collection;)V	<init>	<init>
		p	1	entityId	entityId
		p	2	attributes	attributes
	m	(Lnl;)V	a	apply
	m	()I	b	getEntityId
	m	()Ljava/util/List;	c	getEntries
c	qt$a	net/minecraft/network/packet/s2c/play/EntityAttributesS2CPacket$Entry
	f	Laps;	b	id
	f	D	c	baseValue
	f	Ljava/util/Collection;	d	modifiers
	m	(Lqt;Laps;DLjava/util/Collection;)V	<init>	<init>
		p	1	id	id
	m	()Laps;	a	getId
	m	()D	b	getBaseValue
	m	()Ljava/util/Collection;	c	getModifiers
c	qu	net/minecraft/network/packet/s2c/play/EntityStatusEffectS2CPacket
	f	I	a	entityId
	f	B	b	effectId
	f	B	c	amplifier
	f	I	d	duration
	f	B	e	flags
	m	(ILaog;)V	<init>	<init>
		p	1	entityId	entityId
		p	2	effect	effect
	m	(Lnl;)V	a	apply
	m	()Z	b	isPermanent
	m	()I	c	getEntityId
	m	()B	d	getEffectId
	m	()B	e	getAmplifier
	m	()I	f	getDuration
	m	()Z	g	shouldShowParticles
	m	()Z	h	isAmbient
	m	()Z	i	shouldShowIcon
c	qv	net/minecraft/network/packet/s2c/play/SynchronizeRecipesS2CPacket
	f	Ljava/util/List;	a	recipes
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1	recipes	recipes
	m	(Lbmu;Lmg;)V	a	writeRecipe
		p	0	recipe	recipe
		p	1	buf	buf
	m	(Lnl;)V	a	apply
	m	()Ljava/util/List;	b	getRecipes
	m	(Lmg;)Lbmu;	c	readRecipe
		p	0	buf	buf
c	qw	net/minecraft/network/packet/s2c/play/SynchronizeTagsS2CPacket
	f	Ladh;	a	tagManager
	m	(Ladh;)V	<init>	<init>
		p	1	tagManager	tagManager
	m	(Lnl;)V	a	apply
	m	()Ladh;	b	getTagManager
c	qx	net/minecraft/client/render/debug/NameGenerator
	f	[Ljava/lang/String;	a	PREFIX
	f	[Ljava/lang/String;	b	SUFFIX
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	name
		p	0	uuid	uuid
	m	(Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String;	a	getRandom
		p	0	random	random
		p	1	options	options
	m	(Ljava/util/UUID;)Ljava/util/Random;	b	randomFromUuid
		p	0	uuid	uuid
c	qy	net/minecraft/server/network/DebugInfoSender
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Layl;)V	a	sendBeeDebugData
		p	0	bee	bee
	m	(Lcdi;)V	a	sendBeehiveDebugData
		p	0	beehive	beehive
	m	(Lbqb;Laoz;Lczf;F)V	a	sendPathfindingData
		p	0	world	world
		p	1	mob	mob
		p	2	path	path
		p	3	nodeReachProximity	nodeReachProximity
	m	(Lzd;Lfu;Ljava/lang/String;II)V	a	addGameTestMarker
		p	0	world	world
		p	1	pos	pos
		p	2	message	message
		p	3	color	color
		p	4	duration	duration
	m	(Laoy;)V	a	sendBrainDebugData
		p	0	living	living
	m	(Lzd;)V	a	clearGameTestMarkers
		p	0	world	world
	m	(Lzd;Lmg;Luh;)V	a	sendToAll
		p	0	world	world
		p	1	buf	buf
		p	2	channel	channel
	m	(Lzd;Lfu;)V	a	sendPoiAddition
		p	0	world	world
		p	1	pos	pos
	m	(Lbqb;Laoz;Lauh;)V	a	sendGoalSelector
		p	0	world	world
		p	1	mob	mob
		p	2	goalSelector	goalSelector
	m	(Lbqb;Lfu;)V	a	sendNeighborUpdate
		p	0	world	world
		p	1	pos	pos
	m	(Lzd;Ljava/util/Collection;)V	a	sendRaids
		p	0	server	server
		p	1	raids	raids
	m	(Lbqc;Lctz;)V	a	sendStructureStart
		p	0	world	world
		p	1	structureStart	structureStart
	m	(Lzd;Lbph;)V	a	sendChunkWatchingChange
		p	0	world	world
		p	1	pos	pos
	m	(Lzd;Lfu;)V	b	sendPoiRemoval
		p	0	world	world
		p	1	pos	pos
	m	(Lzd;Lfu;)V	c	sendPointOfInterest
		p	0	world	world
		p	1	pos	pos
c	qz	net/minecraft/network/listener/ServerPlayPacketListener
	c	A server side packet listener where play stage packets from a client are processed.
	m	(Lsd;)V	a	onResourcePackStatus
		p	1	packet	packet
	m	(Lrr;)V	a	onUpdateDifficultyLock
		p	1	packet	packet
	m	(Lsj;)V	a	onUpdateCommandBlockMinecart
		p	1	packet	packet
	m	(Lrv;)V	a	onPickFromInventory
		p	1	packet	packet
	m	(Lrt;)V	a	onVehicleMove
		p	1	packet	packet
	m	(Lrh;)V	a	onConfirmTransaction
		p	1	packet	packet
	m	(Lrd;)V	a	onGameMessage
		p	1	packet	packet
	m	(Lrn;)V	a	onQueryEntityNbt
		p	1	packet	packet
	m	(Lrp;)V	a	onJigsawGenerating
		p	1	packet	packet
	m	(Lsg;)V	a	onUpdateBeacon
		p	1	packet	packet
	m	(Lsn;)V	a	onSignUpdate
		p	1	packet	packet
	m	(Lrj;)V	a	onClickWindow
		p	1	packet	packet
	m	(Lsl;)V	a	onJigsawUpdate
		p	1	packet	packet
	m	(Lsp;)V	a	onSpectatorTeleport
		p	1	packet	packet
	m	(Lro;)V	a	onPlayerInteractEntity
		p	1	packet	packet
	m	(Lrq;)V	a	onKeepAlive
		p	1	packet	packet
	m	(Lsm;)V	a	onStructureBlockUpdate
		p	1	packet	packet
	m	(Lrx;)V	a	onPlayerAbilities
		p	1	packet	packet
	m	(Lsq;)V	a	onPlayerInteractBlock
		p	1	packet	packet
	m	(Lra;)V	a	onTeleportConfirm
		p	1	packet	packet
	m	(Lry;)V	a	onPlayerAction
		p	1	packet	packet
	m	(Lri;)V	a	onButtonClick
		p	1	packet	packet
	m	(Lso;)V	a	onHandSwing
		p	1	packet	packet
	m	(Lsi;)V	a	onUpdateCommandBlock
		p	1	packet	packet
	m	(Lru;)V	a	onBoatPaddleState
		p	1	packet	packet
	m	(Lrs;)V	a	onPlayerMove
		p	1	packet	packet
	m	(Lsa;)V	a	onPlayerInput
		p	1	packet	packet
	m	(Lsc;)V	a	onRenameItem
		p	1	packet	packet
	m	(Lrw;)V	a	onCraftRequest
		p	1	packet	packet
	m	(Lre;)V	a	onClientStatus
		p	1	packet	packet
	m	(Lse;)V	a	onAdvancementTab
		p	1	packet	packet
	m	(Lsr;)V	a	onPlayerInteractItem
		p	1	packet	packet
	m	(Lrz;)V	a	onClientCommand
		p	1	packet	packet
	m	(Lrl;)V	a	onCustomPayload
		p	1	packet	packet
	m	(Lrf;)V	a	onClientSettings
		p	1	packet	packet
	m	(Lsk;)V	a	onCreativeInventoryAction
		p	1	packet	packet
	m	(Lrg;)V	a	onRequestCommandCompletions
		p	1	packet	packet
	m	(Lsh;)V	a	onUpdateSelectedSlot
		p	1	packet	packet
	m	(Lrb;)V	a	onQueryBlockNbt
		p	1	packet	packet
	m	(Lrk;)V	a	onGuiClose
		p	1	packet	packet
	m	(Lsf;)V	a	onVillagerTradeSelect
		p	1	packet	packet
	m	(Lrm;)V	a	onBookUpdate
		p	1	packet	packet
	m	(Lrc;)V	a	onUpdateDifficulty
		p	1	packet	packet
	m	(Lsb;)V	a	onRecipeBookData
		p	1	packet	packet
c	ra	net/minecraft/network/packet/c2s/play/TeleportConfirmC2SPacket
	f	I	a	teleportId
	m	(I)V	<init>	<init>
		p	1	teleportId	teleportId
	m	(Lqz;)V	a	apply
	m	()I	b	getTeleportId
c	rb	net/minecraft/network/packet/c2s/play/QueryBlockNbtC2SPacket
	f	I	a	transactionId
	f	Lfu;	b	pos
	m	(ILfu;)V	<init>	<init>
		p	1	transactionId	transactionId
		p	2	pos	pos
	m	(Lqz;)V	a	apply
	m	()I	b	getTransactionId
	m	()Lfu;	c	getPos
c	rc	net/minecraft/network/packet/c2s/play/UpdateDifficultyC2SPacket
	f	Land;	a	difficulty
	m	(Land;)V	<init>	<init>
		p	1	difficulty	difficulty
	m	(Lqz;)V	a	apply
	m	()Land;	b	getDifficulty
c	rd	net/minecraft/network/packet/c2s/play/ChatMessageC2SPacket
	f	Ljava/lang/String;	a	chatMessage
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	chatMessage	chatMessage
	m	(Lqz;)V	a	apply
	m	()Ljava/lang/String;	b	getChatMessage
c	re	net/minecraft/network/packet/c2s/play/ClientStatusC2SPacket
	f	Lre$a;	a	mode
	m	(Lre$a;)V	<init>	<init>
		p	1	mode	mode
	m	(Lqz;)V	a	apply
	m	()Lre$a;	b	getMode
c	re$a	net/minecraft/network/packet/c2s/play/ClientStatusC2SPacket$Mode
c	rf	net/minecraft/network/packet/c2s/play/ClientSettingsC2SPacket
	f	Ljava/lang/String;	a	language
	f	I	b	viewDistance
	f	Lbea;	c	chatVisibility
	f	Z	d	chatColors
	f	I	e	playerModelBitMask
	f	Laou;	f	mainArm
	m	(Ljava/lang/String;ILbea;ZILaou;)V	<init>	<init>
		p	1	language	language
		p	2	viewDistance	viewDistance
		p	3	chatVisibility	chatVisibility
		p	4	chatColors	chatColors
		p	5	modelBitMask	modelBitMask
		p	6	mainArm	mainArm
	m	(Lqz;)V	a	apply
	m	()Lbea;	d	getChatVisibility
	m	()Z	e	hasChatColors
	m	()I	f	getPlayerModelBitMask
	m	()Laou;	g	getMainArm
c	rg	net/minecraft/network/packet/c2s/play/RequestCommandCompletionsC2SPacket
	f	I	a	completionId
	f	Ljava/lang/String;	b	partialCommand
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	completionId	completionId
		p	2	partialCommand	partialCommand
	m	(Lqz;)V	a	apply
	m	()I	b	getCompletionId
	m	()Ljava/lang/String;	c	getPartialCommand
c	rh	net/minecraft/network/packet/c2s/play/ConfirmGuiActionC2SPacket
	f	I	a	windowId
	f	S	b	actionId
	f	Z	c	accepted
	m	(ISZ)V	<init>	<init>
		p	1	windowId	windowId
		p	2	actionId	actionId
		p	3	accepted	accepted
	m	(Lqz;)V	a	apply
	m	()I	b	getWindowId
	m	()S	c	getSyncId
c	ri	net/minecraft/network/packet/c2s/play/ButtonClickC2SPacket
	f	I	a	syncId
	f	I	b	buttonId
	m	(II)V	<init>	<init>
		p	1	syncId	syncId
		p	2	buttonId	buttonId
	m	(Lqz;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getButtonId
c	rj	net/minecraft/network/packet/c2s/play/ClickWindowC2SPacket
	f	I	a	syncId
	f	I	b	slot
	f	I	c	clickData
	f	S	d	actionId
	f	Lbki;	e	stack
	f	Lbgq;	f	actionType
	m	(IIILbgq;Lbki;S)V	<init>	<init>
		p	1	syncId	syncId
		p	2	slot	slot
		p	3	clickData	clickData
		p	4	actionType	actionType
		p	5	stack	stack
		p	6	actionId	actionId
	m	(Lqz;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getSlot
	m	()I	d	getClickData
	m	()S	e	getActionId
	m	()Lbki;	f	getStack
	m	()Lbgq;	g	getActionType
c	rk	net/minecraft/network/packet/c2s/play/GuiCloseC2SPacket
	f	I	a	id
	m	(I)V	<init>	<init>
		p	1	id	id
	m	(Lqz;)V	a	apply
c	rl	net/minecraft/network/packet/c2s/play/CustomPayloadC2SPacket
	f	Luh;	a	BRAND
	f	Luh;	b	channel
	f	Lmg;	c	data
	m	(Luh;Lmg;)V	<init>	<init>
		p	1	channel	channel
		p	2	data	data
	m	(Lqz;)V	a	apply
c	rm	net/minecraft/network/packet/c2s/play/BookUpdateC2SPacket
	f	Lbki;	a	book
	f	Z	b	signed
	f	Lanf;	c	hand
	m	(Lbki;ZLanf;)V	<init>	<init>
		p	1	book	book
		p	2	signed	signed
		p	3	hand	hand
	m	(Lqz;)V	a	apply
	m	()Lbki;	b	getBook
	m	()Z	c	wasSigned
	m	()Lanf;	d	getHand
c	rn	net/minecraft/network/packet/c2s/play/QueryEntityNbtC2SPacket
	f	I	a	transactionId
	f	I	b	entityId
	m	(II)V	<init>	<init>
		p	1	transactionId	transactionId
		p	2	entityId	entityId
	m	(Lqz;)V	a	apply
	m	()I	b	getTransactionId
	m	()I	c	getEntityId
c	ro	net/minecraft/network/packet/c2s/play/PlayerInteractEntityC2SPacket
	f	I	a	entityId
	f	Lro$a;	b	type
	f	Ldem;	c	hitPos
	f	Lanf;	d	hand
	f	Z	e	playerSneaking
	m	(Laom;Lanf;Z)V	<init>	<init>
		p	1	entity	entity
		p	2	hand	hand
		p	3	playerSneaking	playerSneaking
	m	(Laom;Z)V	<init>	<init>
		p	1	target	target
		p	2	playerSneaking	playerSneaking
	m	(Laom;Lanf;Ldem;Z)V	<init>	<init>
		p	1	entity	entity
		p	2	hand	hand
		p	3	hitPos	hitPos
		p	4	playerSneaking	playerSneaking
	m	(Lqz;)V	a	apply
	m	(Lbqb;)Laom;	a	getEntity
		p	1	world	world
	m	()Lro$a;	b	getType
	m	()Lanf;	c	getHand
	m	()Ldem;	d	getHitPosition
	m	()Z	e	isPlayerSneaking
c	ro$a	net/minecraft/network/packet/c2s/play/PlayerInteractEntityC2SPacket$InteractionType
c	rp	net/minecraft/network/packet/c2s/play/JigsawGeneratingC2SPacket
	f	Lfu;	a	pos
	f	I	b	maxDepth
	f	Z	c	keepJigsaws
	m	(Lfu;IZ)V	<init>	<init>
		p	1	pos	pos
		p	2	maxDepth	maxDepth
		p	3	keepJigsaws	keepJigsaws
	m	(Lqz;)V	a	apply
	m	()Lfu;	b	getPos
	m	()I	c	getMaxDepth
	m	()Z	d	shouldKeepJigsaws
c	rq	net/minecraft/network/packet/c2s/play/KeepAliveC2SPacket
	f	J	a	id
	m	(J)V	<init>	<init>
		p	1	id	id
	m	(Lqz;)V	a	apply
	m	()J	b	getId
c	rr	net/minecraft/network/packet/c2s/play/UpdateDifficultyLockC2SPacket
	f	Z	a	difficultyLocked
	m	(Z)V	<init>	<init>
		p	1	difficultyLocked	difficultyLocked
	m	(Lqz;)V	a	apply
	m	()Z	b	isDifficultyLocked
c	rs	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	f	Z	f	onGround
	f	Z	g	changePosition
	f	Z	h	changeLook
	m	(Z)V	<init>	<init>
		p	1	onGround	onGround
	m	(F)F	a	getYaw
		p	1	currentYaw	currentYaw
	m	(D)D	a	getX
		p	1	currentX	currentX
	m	(Lqz;)V	a	apply
	m	(D)D	b	getY
		p	1	currentY	currentY
	m	()Z	b	isOnGround
	m	(F)F	b	getPitch
		p	1	currentPitch	currentPitch
	m	(D)D	c	getZ
		p	1	currentZ	currentZ
c	rs$a	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket$PositionOnly
	m	(DDDZ)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	onGround	onGround
c	rs$b	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket$Both
	m	(DDDFFZ)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
		p	9	onGround	onGround
c	rs$c	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket$LookOnly
	m	(FFZ)V	<init>	<init>
		p	1	yaw	yaw
		p	2	pitch	pitch
		p	3	onGround	onGround
c	rt	net/minecraft/network/packet/c2s/play/VehicleMoveC2SPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
	m	(Lqz;)V	a	apply
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYaw
	m	()F	f	getPitch
c	ru	net/minecraft/network/packet/c2s/play/BoatPaddleStateC2SPacket
	f	Z	a	leftPaddling
	f	Z	b	rightPaddling
	m	(ZZ)V	<init>	<init>
		p	1	leftPaddling	leftPaddling
		p	2	rightPaddling	rightPaddling
	m	(Lqz;)V	a	apply
	m	()Z	b	isLeftPaddling
	m	()Z	c	isRightPaddling
c	rv	net/minecraft/network/packet/c2s/play/PickFromInventoryC2SPacket
	f	I	a	slot
	m	(I)V	<init>	<init>
		p	1	slot	slot
	m	(Lqz;)V	a	apply
	m	()I	b	getSlot
c	rw	net/minecraft/network/packet/c2s/play/CraftRequestC2SPacket
	f	I	a	syncId
	f	Luh;	b	recipe
	f	Z	c	craftAll
	m	(ILbmu;Z)V	<init>	<init>
		p	1	syncId	syncId
		p	2	recipe	recipe
		p	3	craftAll	craftAll
	m	(Lqz;)V	a	apply
	m	()I	b	getSyncId
	m	()Luh;	c	getRecipe
	m	()Z	d	shouldCraftAll
c	rx	net/minecraft/network/packet/c2s/play/UpdatePlayerAbilitiesC2SPacket
	f	Z	a	flying
	m	(Lbdz;)V	<init>	<init>
		p	1	abilities	abilities
	m	(Lqz;)V	a	apply
	m	()Z	b	isFlying
c	ry	net/minecraft/network/packet/c2s/play/PlayerActionC2SPacket
	f	Lfu;	a	pos
	f	Lfz;	b	direction
	f	Lry$a;	c	action
	m	(Lry$a;Lfu;Lfz;)V	<init>	<init>
		p	1	action	action
		p	2	pos	pos
		p	3	direction	direction
	m	(Lqz;)V	a	apply
	m	()Lfu;	b	getPos
	m	()Lfz;	c	getDirection
	m	()Lry$a;	d	getAction
c	ry$a	net/minecraft/network/packet/c2s/play/PlayerActionC2SPacket$Action
c	rz	net/minecraft/network/packet/c2s/play/ClientCommandC2SPacket
	f	I	a	entityId
	f	Lrz$a;	b	mode
	f	I	c	mountJumpHeight
	m	(Laom;Lrz$a;)V	<init>	<init>
		p	1	entity	entity
		p	2	mode	mode
	m	(Laom;Lrz$a;I)V	<init>	<init>
		p	1	entity	entity
		p	2	mode	mode
		p	3	mountJumpHeight	mountJumpHeight
	m	(Lqz;)V	a	apply
	m	()Lrz$a;	c	getMode
	m	()I	d	getMountJumpHeight
c	rz$a	net/minecraft/network/packet/c2s/play/ClientCommandC2SPacket$Mode
c	s	net/minecraft/util/crash/CrashException
	f	Lj;	a	report
	m	(Lj;)V	<init>	<init>
		p	1	report	report
	m	()Lj;	a	getReport
c	sa	net/minecraft/network/packet/c2s/play/PlayerInputC2SPacket
	f	F	a	sideways
	f	F	b	forward
	f	Z	c	jumping
	f	Z	d	sneaking
	m	(FFZZ)V	<init>	<init>
		p	1	sideways	sideways
		p	2	forward	forward
		p	3	jumping	jumping
		p	4	sneaking	sneaking
	m	(Lqz;)V	a	apply
	m	()F	b	getSideways
	m	()F	c	getForward
	m	()Z	d	isJumping
	m	()Z	e	isSneaking
c	sb	net/minecraft/network/packet/c2s/play/RecipeBookDataC2SPacket
	f	Lsb$a;	a	mode
	f	Luh;	b	recipeId
	f	Z	c	guiOpen
	f	Z	d	filteringCraftable
	f	Z	e	furnaceGuiOpen
	f	Z	f	furnaceFilteringCraftable
	f	Z	g	blastFurnaceGuiOpen
	f	Z	h	blastFurnaceFilteringCraftable
	f	Z	i	smokerGuiOpen
	f	Z	j	smokerGuiFilteringCraftable
	m	(Lbmu;)V	<init>	<init>
		p	1	recipe	recipe
	m	(ZZZZZZ)V	<init>	<init>
		p	1	guiOpen	guiOpen
		p	2	filteringCraftable	filteringCraftable
		p	3	furnaceGuiOpen	furnaceGuiOpen
		p	4	furnaceFilteringCraftable	furnaceFilteringCraftable
		p	5	cookingGuiOpen	cookingGuiOpen
		p	6	cookingFilteringCraftable	cookingFilteringCraftable
	m	(Lqz;)V	a	apply
	m	()Lsb$a;	b	getMode
	m	()Luh;	c	getRecipeId
	m	()Z	d	isGuiOpen
	m	()Z	e	isFilteringCraftable
	m	()Z	f	isFurnaceGuiOpen
	m	()Z	g	isFurnaceFilteringCraftable
	m	()Z	h	isBlastFurnaceGuiOpen
	m	()Z	i	isBlastFurnaceFilteringCraftable
	m	()Z	j	isSmokerGuiOpen
	m	()Z	k	isSmokerGuiFilteringCraftable
c	sb$a	net/minecraft/network/packet/c2s/play/RecipeBookDataC2SPacket$Mode
c	sc	net/minecraft/network/packet/c2s/play/RenameItemC2SPacket
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Lqz;)V	a	apply
	m	()Ljava/lang/String;	b	getName
c	sd	net/minecraft/network/packet/c2s/play/ResourcePackStatusC2SPacket
	f	Lsd$a;	a	status
	m	(Lsd$a;)V	<init>	<init>
		p	1	status	status
	m	(Lqz;)V	a	apply
c	sd$a	net/minecraft/network/packet/c2s/play/ResourcePackStatusC2SPacket$Status
c	se	net/minecraft/network/packet/c2s/play/AdvancementTabC2SPacket
	f	Lse$a;	a	action
	f	Luh;	b	tabToOpen
	m	(Lse$a;Luh;)V	<init>	<init>
		p	1	action	action
		p	2	tab	tab
	m	(Lqz;)V	a	apply
	m	(Lw;)Lse;	a	open
		p	0	advancement	advancement
	m	()Lse;	b	close
	m	()Lse$a;	c	getAction
	m	()Luh;	d	getTabToOpen
c	se$a	net/minecraft/network/packet/c2s/play/AdvancementTabC2SPacket$Action
c	sf	net/minecraft/network/packet/c2s/play/SelectVillagerTradeC2SPacket
	f	I	a	tradeId
	m	(I)V	<init>	<init>
		p	1	tradeId	tradeId
	m	(Lqz;)V	a	apply
	m	()I	b	getTradeId
c	sg	net/minecraft/network/packet/c2s/play/UpdateBeaconC2SPacket
	f	I	a	primaryEffectId
	f	I	b	secondaryEffectId
	m	(II)V	<init>	<init>
		p	1	primaryEffectId	primaryEffectId
		p	2	secondaryEffectId	secondaryEffectId
	m	(Lqz;)V	a	apply
	m	()I	b	getPrimaryEffectId
	m	()I	c	getSecondaryEffectId
c	sh	net/minecraft/network/packet/c2s/play/UpdateSelectedSlotC2SPacket
	f	I	a	selectedSlot
	m	(I)V	<init>	<init>
		p	1	selectedSlot	selectedSlot
	m	(Lqz;)V	a	apply
	m	()I	b	getSelectedSlot
c	si	net/minecraft/network/packet/c2s/play/UpdateCommandBlockC2SPacket
	f	Lfu;	a	pos
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
	f	Z	d	conditional
	f	Z	e	alwaysActive
	f	Lcdq$a;	f	type
	m	(Lfu;Ljava/lang/String;Lcdq$a;ZZZ)V	<init>	<init>
		p	1	pos	pos
		p	2	command	command
		p	3	type	type
		p	4	trackOutput	trackOutput
		p	5	conditional	conditional
		p	6	alwaysActive	alwaysActive
	m	(Lqz;)V	a	apply
	m	()Lfu;	b	getBlockPos
	m	()Ljava/lang/String;	c	getCommand
	m	()Z	d	shouldTrackOutput
	m	()Z	e	isConditional
	m	()Z	f	isAlwaysActive
	m	()Lcdq$a;	g	getType
c	sj	net/minecraft/network/packet/c2s/play/UpdateCommandBlockMinecartC2SPacket
	f	I	a	entityId
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
	m	(ILjava/lang/String;Z)V	<init>	<init>
		p	1	entityId	entityId
		p	2	command	command
		p	3	trackOutput	trackOutput
	m	(Lqz;)V	a	apply
	m	(Lbqb;)Lbpc;	a	getMinecartCommandExecutor
		p	1	world	world
	m	()Ljava/lang/String;	b	getCommand
	m	()Z	c	shouldTrackOutput
c	sk	net/minecraft/network/packet/c2s/play/CreativeInventoryActionC2SPacket
	f	I	a	slot
	f	Lbki;	b	stack
	m	(ILbki;)V	<init>	<init>
		p	1	slot	slot
		p	2	stack	stack
	m	(Lqz;)V	a	apply
	m	()I	b	getSlot
	m	()Lbki;	c	getItemStack
c	sl	net/minecraft/network/packet/c2s/play/UpdateJigsawC2SPacket
	f	Lfu;	a	pos
	f	Luh;	b	attachmentType
	f	Luh;	c	targetPool
	f	Luh;	d	pool
	f	Ljava/lang/String;	e	finalState
	f	Lceb$a;	f	jointType
	m	(Lfu;Luh;Luh;Luh;Ljava/lang/String;Lceb$a;)V	<init>	<init>
		p	1	pos	pos
		p	2	attachmentType	attachmentType
		p	3	targetPool	targetPool
		p	4	pool	pool
		p	5	finalState	finalState
		p	6	jointType	jointType
	m	(Lqz;)V	a	apply
	m	()Lfu;	b	getPos
	m	()Luh;	c	getAttachmentType
	m	()Luh;	d	getTargetPool
	m	()Luh;	e	getPool
	m	()Ljava/lang/String;	f	getFinalState
	m	()Lceb$a;	g	getJointType
c	sm	net/minecraft/network/packet/c2s/play/UpdateStructureBlockC2SPacket
	f	Lfu;	a	pos
	f	Lcel$a;	b	action
	f	Lcgq;	c	mode
	f	Ljava/lang/String;	d	structureName
	f	Lfu;	e	offset
	f	Lfu;	f	size
	f	Lbzj;	g	mirror
	f	Lcap;	h	rotation
	f	Ljava/lang/String;	i	metadata
	f	Z	j	ignoreEntities
	f	Z	k	showAir
	f	Z	l	showBoundingBox
	f	F	m	integrity
	f	J	n	seed
	m	(Lfu;Lcel$a;Lcgq;Ljava/lang/String;Lfu;Lfu;Lbzj;Lcap;Ljava/lang/String;ZZZFJ)V	<init>	<init>
		p	1	pos	pos
		p	2	action	action
		p	3	mode	mode
		p	4	structureName	structureName
		p	5	offset	offset
		p	6	size	size
		p	7	mirror	mirror
		p	8	rotation	rotation
		p	9	metadata	metadata
		p	10	ignoreEntities	ignoreEntities
		p	11	showAir	showAir
		p	12	showBoundingBox	showBoundingBox
		p	13	integrity	integrity
		p	14	seed	seed
	m	(Lqz;)V	a	apply
	m	()Lfu;	b	getPos
	m	()Lcel$a;	c	getAction
	m	()Lcgq;	d	getMode
	m	()Ljava/lang/String;	e	getStructureName
	m	()Lfu;	f	getOffset
	m	()Lfu;	g	getSize
	m	()Lbzj;	h	getMirror
	m	()Lcap;	i	getRotation
	m	()Ljava/lang/String;	j	getMetadata
	m	()Z	k	getIgnoreEntities
	m	()Z	l	shouldShowAir
	m	()Z	m	shouldShowBoundingBox
	m	()F	n	getIntegrity
	m	()J	o	getSeed
c	sn	net/minecraft/network/packet/c2s/play/UpdateSignC2SPacket
	f	Lfu;	a	pos
	f	[Ljava/lang/String;	b	text
	m	(Lfu;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	pos	pos
		p	2	line1	line1
		p	3	line2	line2
		p	4	line3	line3
		p	5	line4	line4
	m	(Lqz;)V	a	apply
	m	()Lfu;	b	getPos
	m	()[Ljava/lang/String;	c	getText
c	so	net/minecraft/network/packet/c2s/play/HandSwingC2SPacket
	f	Lanf;	a	hand
	m	(Lanf;)V	<init>	<init>
		p	1	hand	hand
	m	(Lqz;)V	a	apply
	m	()Lanf;	b	getHand
c	sp	net/minecraft/network/packet/c2s/play/SpectatorTeleportC2SPacket
	f	Ljava/util/UUID;	a	targetUuid
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1	targetUuid	targetUuid
	m	(Lzd;)Laom;	a	getTarget
		p	1	world	world
	m	(Lqz;)V	a	apply
c	sq	net/minecraft/network/packet/c2s/play/PlayerInteractBlockC2SPacket
	f	Ldeh;	a	blockHitResult
	f	Lanf;	b	hand
	m	(Lanf;Ldeh;)V	<init>	<init>
		p	1	hand	hand
		p	2	blockHitResult	blockHitResult
	m	(Lqz;)V	a	apply
	m	()Lanf;	b	getHand
	m	()Ldeh;	c	getBlockHitResult
c	sr	net/minecraft/network/packet/c2s/play/PlayerInteractItemC2SPacket
	f	Lanf;	a	hand
	m	(Lanf;)V	<init>	<init>
		p	1	hand	hand
	m	(Lqz;)V	a	apply
	m	()Lanf;	b	getHand
c	st	net/minecraft/network/packet/c2s/handshake/HandshakeC2SPacket
	f	I	a	protocolVersion
	f	Ljava/lang/String;	b	address
	f	I	c	port
	f	Lmf;	d	intendedState
	m	(Ljava/lang/String;ILmf;)V	<init>	<init>
		p	1	address	address
		p	2	port	port
		p	3	intendedState	intendedState
	m	(Lsu;)V	a	apply
	m	()Lmf;	b	getIntendedState
	m	()I	c	getProtocolVersion
c	su	net/minecraft/network/listener/ServerHandshakePacketListener
	m	(Lst;)V	a	onHandshake
		p	1	packet	packet
c	sw	net/minecraft/network/listener/ClientLoginPacketListener
	m	(Lsy;)V	a	onLoginSuccess
		p	1	packet	packet
	m	(Lsz;)V	a	onHello
		p	1	packet	packet
	m	(Lsx;)V	a	onQueryRequest
		p	1	packet	packet
	m	(Lta;)V	a	onCompression
		p	1	packet	packet
	m	(Ltb;)V	a	onDisconnect
		p	1	packet	packet
c	sx	net/minecraft/network/packet/s2c/login/LoginQueryRequestS2CPacket
	f	I	a	queryId
	f	Luh;	b	channel
	f	Lmg;	c	payload
	m	(Lsw;)V	a	apply
	m	()I	b	getQueryId
c	sy	net/minecraft/network/packet/s2c/login/LoginSuccessS2CPacket
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	profile	profile
	m	(Lsw;)V	a	apply
	m	()Lcom/mojang/authlib/GameProfile;	b	getProfile
c	sz	net/minecraft/network/packet/s2c/login/LoginHelloS2CPacket
	f	Ljava/lang/String;	a	serverId
	f	Ljava/security/PublicKey;	b	publicKey
	f	[B	c	nonce
	m	(Ljava/lang/String;Ljava/security/PublicKey;[B)V	<init>	<init>
		p	1	serverId	serverId
		p	2	publicKey	publicKey
		p	3	nonce	nonce
	m	(Lsw;)V	a	apply
	m	()Ljava/lang/String;	b	getServerId
	m	()Ljava/security/PublicKey;	c	getPublicKey
	m	()[B	d	getNonce
c	t	net/minecraft/util/InvalidIdentifierException
c	ta	net/minecraft/network/packet/s2c/login/LoginCompressionS2CPacket
	f	I	a	compressionThreshold
	m	(I)V	<init>	<init>
		p	1	compressionThreshold	compressionThreshold
	m	(Lsw;)V	a	apply
	m	()I	b	getCompressionThreshold
c	tb	net/minecraft/network/packet/s2c/login/LoginDisconnectS2CPacket
	f	Lmr;	a	reason
	m	(Lmr;)V	<init>	<init>
		p	1	reason	reason
	m	(Lsw;)V	a	apply
	m	()Lmr;	b	getReason
c	tc	net/minecraft/network/listener/ServerLoginPacketListener
	m	(Ltd;)V	a	onQueryResponse
		p	1	packet	packet
	m	(Lte;)V	a	onHello
		p	1	packet	packet
	m	(Ltf;)V	a	onKey
		p	1	packet	packet
c	td	net/minecraft/network/packet/c2s/login/LoginQueryResponseC2SPacket
	f	I	a	queryId
	f	Lmg;	b	response
	m	(ILmg;)V	<init>	<init>
		p	1	queryId	queryId
		p	2	response	response
	m	(Ltc;)V	a	apply
c	te	net/minecraft/network/packet/c2s/login/LoginHelloC2SPacket
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	profile	profile
	m	(Ltc;)V	a	apply
	m	()Lcom/mojang/authlib/GameProfile;	b	getProfile
c	tf	net/minecraft/network/packet/c2s/login/LoginKeyC2SPacket
	f	[B	a	encryptedSecretKey
	f	[B	b	encryptedNonce
	m	(Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V	<init>	<init>
		p	1	secretKey	secretKey
		p	2	publicKey	publicKey
		p	3	nonce	nonce
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	decryptSecretKey
		p	1	privateKey	privateKey
	m	(Ltc;)V	a	apply
	m	(Ljava/security/PrivateKey;)[B	b	decryptNonce
		p	1	privateKey	privateKey
c	ti	net/minecraft/network/listener/ClientQueryPacketListener
	m	(Ltk;)V	a	onResponse
		p	1	packet	packet
	m	(Ltj;)V	a	onPong
		p	1	packet	packet
c	tj	net/minecraft/network/packet/s2c/query/QueryPongS2CPacket
	f	J	a	startTime
	m	(J)V	<init>	<init>
		p	1	startTime	startTime
	m	(Lti;)V	a	apply
c	tk	net/minecraft/network/packet/s2c/query/QueryResponseS2CPacket
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ltl;	b	metadata
	m	(Ltl;)V	<init>	<init>
		p	1	metadata	metadata
	m	(Lti;)V	a	apply
	m	()Ltl;	b	getServerMetadata
c	tl	net/minecraft/server/ServerMetadata
	c	Represents metadata sent to the client. This describes the server's message of the day, online players and the protocol version.
	f	Lmr;	a	description
	f	Ltl$a;	b	players
	f	Ltl$c;	c	version
	f	Ljava/lang/String;	d	favicon
	m	(Ltl$a;)V	a	setPlayers
		p	1	players	players
	m	(Ltl$c;)V	a	setVersion
		p	1	version	version
	m	(Lmr;)V	a	setDescription
		p	1	description	description
	m	()Lmr;	a	getDescription
	m	(Ljava/lang/String;)V	a	setFavicon
		p	1	favicon	favicon
	m	()Ltl$a;	b	getPlayers
	m	()Ltl$c;	c	getVersion
	m	()Ljava/lang/String;	d	getFavicon
c	tl$a	net/minecraft/server/ServerMetadata$Players
	f	I	a	max
	f	I	b	online
	f	[Lcom/mojang/authlib/GameProfile;	c	sample
	m	(II)V	<init>	<init>
		p	1	max	max
		p	2	online	online
	m	()I	a	getPlayerLimit
	m	([Lcom/mojang/authlib/GameProfile;)V	a	setSample
		p	1	sample	sample
	m	()I	b	getOnlinePlayerCount
	m	()[Lcom/mojang/authlib/GameProfile;	c	getSample
c	tl$a$a	net/minecraft/server/ServerMetadata$Players$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ltl$a;	a	deserialize
	m	(Ltl$a;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	tl$b	net/minecraft/server/ServerMetadata$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ltl;	a	deserialize
	m	(Ltl;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	tl$c	net/minecraft/server/ServerMetadata$Version
	f	Ljava/lang/String;	a	gameVersion
	f	I	b	protocolVersion
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	gameVersion	gameVersion
		p	2	protocolVersion	protocolVersion
	m	()Ljava/lang/String;	a	getGameVersion
	m	()I	b	getProtocolVersion
c	tl$c$a	net/minecraft/server/ServerMetadata$Version$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ltl$c;	a	deserialize
	m	(Ltl$c;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	tm	net/minecraft/network/listener/ServerQueryPacketListener
	m	(Lto;)V	a	onRequest
		p	1	packet	packet
	m	(Ltn;)V	a	onPing
		p	1	packet	packet
c	tn	net/minecraft/network/packet/c2s/query/QueryPingC2SPacket
	f	J	a	startTime
	m	(J)V	<init>	<init>
		p	1	startTime	startTime
	m	(Ltm;)V	a	apply
	m	()J	b	getStartTime
c	to	net/minecraft/network/packet/c2s/query/QueryRequestC2SPacket
	m	(Ltm;)V	a	apply
c	tq	net/minecraft/entity/data/TrackedData
	f	I	a	id
	f	Ltr;	b	dataType
	m	(ILtr;)V	<init>	<init>
		p	1	id	id
	m	()I	a	getId
	m	()Ltr;	b	getType
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	tr	net/minecraft/entity/data/TrackedDataHandler
	m	(I)Ltq;	a	create
	m	(Lmg;Ljava/lang/Object;)V	a	write
		p	1	data	data
	m	(Lmg;)Ljava/lang/Object;	a	read
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
c	ts	net/minecraft/entity/data/TrackedDataHandlerRegistry
	f	Ltr;	a	BYTE
	f	Ltr;	b	INTEGER
	f	Ltr;	c	FLOAT
	f	Ltr;	d	STRING
	f	Ltr;	e	TEXT_COMPONENT
	f	Ltr;	f	OPTIONAL_TEXT_COMPONENT
	f	Ltr;	g	ITEM_STACK
	f	Ltr;	h	OPTIONAL_BLOCK_STATE
	f	Ltr;	i	BOOLEAN
	f	Ltr;	j	PARTICLE
	f	Ltr;	k	ROTATION
	f	Ltr;	l	BLOCK_POS
	f	Ltr;	m	OPTIONAL_BLOCK_POS
	f	Ltr;	n	FACING
	f	Ltr;	o	OPTIONAL_UUID
	f	Ltr;	p	TAG_COMPOUND
	f	Ltr;	q	VILLAGER_DATA
	f	Ltr;	r	FIREWORK_DATA
	f	Ltr;	s	ENTITY_POSE
	m	(Ltr;)V	a	register
		p	0	handler	handler
	m	(I)Ltr;	a	get
		p	0	id	id
	m	(Ltr;)I	b	getId
		p	0	handler	handler
c	ts$1	net/minecraft/entity/data/TrackedDataHandlerRegistry$1
	m	(Lmg;Ljava/lang/Byte;)V	a	write
	m	(Ljava/lang/Byte;)Ljava/lang/Byte;	a	copy
	m	(Lmg;)Ljava/lang/Byte;	b	read
c	ts$10	net/minecraft/entity/data/TrackedDataHandlerRegistry$10
	m	(Lmg;Ljava/util/OptionalInt;)V	a	write
	m	(Ljava/util/OptionalInt;)Ljava/util/OptionalInt;	a	copy
	m	(Lmg;)Ljava/util/OptionalInt;	b	read
c	ts$11	net/minecraft/entity/data/TrackedDataHandlerRegistry$11
	m	(Lapj;)Lapj;	a	copy
	m	(Lmg;Lapj;)V	a	write
	m	(Lmg;)Lapj;	b	read
c	ts$12	net/minecraft/entity/data/TrackedDataHandlerRegistry$12
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	copy
	m	(Lmg;Ljava/lang/Integer;)V	a	write
	m	(Lmg;)Ljava/lang/Integer;	b	read
c	ts$13	net/minecraft/entity/data/TrackedDataHandlerRegistry$13
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	copy
	m	(Lmg;Ljava/lang/Float;)V	a	write
	m	(Lmg;)Ljava/lang/Float;	b	read
c	ts$14	net/minecraft/entity/data/TrackedDataHandlerRegistry$14
	m	(Lmg;Ljava/lang/String;)V	a	write
	m	(Ljava/lang/String;)Ljava/lang/String;	a	copy
	m	(Lmg;)Ljava/lang/String;	b	read
c	ts$15	net/minecraft/entity/data/TrackedDataHandlerRegistry$15
	m	(Lmr;)Lmr;	a	copy
	m	(Lmg;Lmr;)V	a	write
	m	(Lmg;)Lmr;	b	read
c	ts$16	net/minecraft/entity/data/TrackedDataHandlerRegistry$16
	m	(Lmg;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lmg;)Ljava/util/Optional;	b	read
c	ts$17	net/minecraft/entity/data/TrackedDataHandlerRegistry$17
	m	(Lbki;)Lbki;	a	copy
	m	(Lmg;Lbki;)V	a	write
	m	(Lmg;)Lbki;	b	read
c	ts$18	net/minecraft/entity/data/TrackedDataHandlerRegistry$18
	m	(Lmg;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lmg;)Ljava/util/Optional;	b	read
c	ts$19	net/minecraft/entity/data/TrackedDataHandlerRegistry$19
	m	(Ljava/lang/Boolean;)Ljava/lang/Boolean;	a	copy
	m	(Lmg;Ljava/lang/Boolean;)V	a	write
	m	(Lmg;)Ljava/lang/Boolean;	b	read
c	ts$2	net/minecraft/entity/data/TrackedDataHandlerRegistry$2
	m	(Lhf;)Lhf;	a	copy
	m	(Lmg;Lhf;)V	a	write
	m	(Lmg;)Lhf;	b	read
c	ts$3	net/minecraft/entity/data/TrackedDataHandlerRegistry$3
	m	(Lmg;Lgn;)V	a	write
	m	(Lgn;)Lgn;	a	copy
	m	(Lmg;)Lgn;	b	read
c	ts$4	net/minecraft/entity/data/TrackedDataHandlerRegistry$4
	m	(Lfu;)Lfu;	a	copy
	m	(Lmg;Lfu;)V	a	write
	m	(Lmg;)Lfu;	b	read
c	ts$5	net/minecraft/entity/data/TrackedDataHandlerRegistry$5
	m	(Lmg;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lmg;)Ljava/util/Optional;	b	read
c	ts$6	net/minecraft/entity/data/TrackedDataHandlerRegistry$6
	m	(Lfz;)Lfz;	a	copy
	m	(Lmg;Lfz;)V	a	write
	m	(Lmg;)Lfz;	b	read
c	ts$7	net/minecraft/entity/data/TrackedDataHandlerRegistry$7
	m	(Lmg;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lmg;)Ljava/util/Optional;	b	read
c	ts$8	net/minecraft/entity/data/TrackedDataHandlerRegistry$8
	m	(Lmg;Lle;)V	a	write
	m	(Lle;)Lle;	a	copy
	m	(Lmg;)Lle;	b	read
c	ts$9	net/minecraft/entity/data/TrackedDataHandlerRegistry$9
	m	(Lbdq;)Lbdq;	a	copy
	m	(Lmg;Lbdq;)V	a	write
	m	(Lmg;)Lbdq;	b	read
c	tt	net/minecraft/entity/data/DataTracker
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	trackedEntities
	f	Laom;	c	trackedEntity
	f	Ljava/util/Map;	d	entries
	f	Ljava/util/concurrent/locks/ReadWriteLock;	e	lock
	f	Z	f	empty
	f	Z	g	dirty
	m	(Laom;)V	<init>	<init>
		p	1	trackedEntity	trackedEntity
	m	(Ltq;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/Class;Ltr;)Ltq;	a	registerData
		p	0	entityClass	entityClass
		p	1	dataHandler	dataHandler
	m	(Ltq;Ljava/lang/Object;)V	a	startTracking
		p	1	key	key
		p	2	initialValue	initialValue
	m	(Ltt$a;Ltt$a;)V	a	copyToFrom
	m	(Ljava/util/List;)V	a	writeUpdatedEntries
	m	()Z	a	isDirty
	m	(Lmg;Ltt$a;)V	a	writeEntryToPacket
	m	(Lmg;)Ljava/util/List;	a	deserializePacket
	m	(Ljava/util/List;Lmg;)V	a	entriesToPacket
	m	(Lmg;ILtr;)Ltt$a;	a	entryFromPacket
	m	(Ltq;Ljava/lang/Object;)V	b	set
		p	1	key	key
	m	(Ltq;)Ltt$a;	b	getEntry
	m	()Ljava/util/List;	b	getDirtyEntries
	m	(Ltq;Ljava/lang/Object;)V	c	addTrackedData
	m	()Ljava/util/List;	c	getAllEntries
	m	()Z	d	isEmpty
	m	()V	e	clearDirty
c	tt$a	net/minecraft/entity/data/DataTracker$Entry
	f	Ltq;	a	data
	f	Ljava/lang/Object;	b	value
	f	Z	c	dirty
	m	(Ltq;Ljava/lang/Object;)V	<init>	<init>
		p	1	data	data
		p	2	value	value
	m	(Ljava/lang/Object;)V	a	set
		p	1	value	value
	m	(Z)V	a	setDirty
		p	1	dirty	dirty
	m	()Ltq;	a	getData
	m	()Ljava/lang/Object;	b	get
	m	()Z	c	isDirty
	m	()Ltt$a;	d	copy
c	tx	net/minecraft/recipe/RecipeGridAligner
	m	(IIILbmu;Ljava/util/Iterator;I)V	a	alignRecipeToGrid
		p	1	gridWidth	gridWidth
		p	2	gridHeight	gridHeight
		p	3	gridOutputSlot	gridOutputSlot
		p	4	recipe	recipe
		p	5	inputs	inputs
		p	6	amount	amount
	m	(Ljava/util/Iterator;IIII)V	a	acceptAlignedInput
		p	1	inputs	inputs
		p	2	slot	slot
		p	3	amount	amount
		p	4	gridX	gridX
		p	5	gridY	gridY
c	ty	net/minecraft/recipe/InputSlotFiller
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbee;	b	recipeFinder
	f	Lbeb;	c	inventory
	f	Lbhp;	d	craftingScreenHandler
	m	(Lbhw;Lbki;)V	a	fillInputSlot
	m	()V	a	returnInputs
	m	(Lbmu;Z)V	a	fillInputSlots
		p	2	craftAll	craftAll
	m	(ZIZ)I	a	getAmountToFill
		p	1	craftAll	craftAll
		p	2	limit	limit
		p	3	recipeInCraftingSlots	recipeInCraftingSlots
	m	(I)V	a	returnSlot
	m	(Lze;Lbmu;Z)V	a	fillInputSlots
		p	1	entity	entity
		p	2	recipe	recipe
		p	3	craftAll	craftAll
	m	()Z	b	canReturnInputs
	m	()I	c	getFreeInventorySlots
c	tz	net/minecraft/recipe/FurnaceInputSlotFiller
	f	Z	e	slotMatchesRecipe
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)V	a	fillInputSlot
		p	1	limit	limit
		p	2	inputs	inputs
c	u	net/minecraft/SharedConstants
	f	Lio/netty/util/ResourceLeakDetector$Level;	a	RESOURCE_LEAK_DETECTOR_DISABLED
	f	Z	d	isDevelopment
	f	[C	e	INVALID_CHARS_LEVEL_NAME
	f	Lcom/mojang/bridge/game/GameVersion;	f	gameVersion
	m	(C)Z	a	isValidChar
		p	0	chr	chr
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripInvalidChars
		p	0	s	s
	m	()Lcom/mojang/bridge/game/GameVersion;	a	getGameVersion
c	ub	net/minecraft/util/dynamic/ForwardingDynamicOps
	c	A dynamic ops that delegates all operations from another one.
	f	Lcom/mojang/serialization/DynamicOps;	a	delegate
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
		p	1	delegate	delegate
c	uc	net/minecraft/util/dynamic/RegistryCodec
	c	A codec for {@link SimpleRegistry}.\n\n<p>Compared to regular codec, this codec performs additional work when\ndecoding, loading its elements from the given resource manager's JSON\nfiles.</p>\n\n@param <E> the registry's element type\n@see RegistryElementCodec\n@see RegistryOps
	f	Lcom/mojang/serialization/Codec;	a	delegate
	f	Lug;	b	registryRef
	f	Lcom/mojang/serialization/MapCodec;	c	elementCodec
	m	(Lug;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1	registryRef	registryRef
		p	2	lifecycle	lifecycle
	m	(Lug;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)Luc;	a	of
		p	0	registryRef	registryRef
		p	1	lifecycle	lifecycle
	m	(Lgh;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
		p	1	ops	ops
		p	2	input	input
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
		p	1	input	input
		p	2	ops	ops
		p	3	prefix	prefix
c	ud	net/minecraft/util/dynamic/RegistryElementCodec
	c	A codec for registry elements. Will prefer to encode/decode objects as\nidentifiers if they exist in a registry and falls back to full encoding/\ndecoding behavior if it cannot do so.\n\n<p>The codec's saves and loads {@code Supplier<E>} in order to avoid early\nloading from registry before a registry is fully loaded from a codec.</p>\n\n@param <E> the element type\n@see RegistryCodec\n@see RegistryReadingOps\n@see RegistryOps
	f	Lug;	a	registryRef
	f	Lcom/mojang/serialization/MapCodec;	b	elementCodec
	m	(Lug;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1	registryRef	registryRef
	m	(Lug;Lcom/mojang/serialization/MapCodec;)Lud;	a	of
		p	0	registryRef	registryRef
	m	(Ljava/util/function/Supplier;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
		p	1	ops	ops
		p	2	input	input
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
		p	1	input	input
		p	2	ops	ops
		p	3	prefix	prefix
c	ue	net/minecraft/util/dynamic/RegistryOps
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Labc;	c	resourceManager
	f	Lgm;	d	registryTracker
	f	Ljava/util/Map;	e	valueHolders
	m	(Lcom/mojang/serialization/DynamicOps;Labc;Lgm;)V	<init>	<init>
		p	1	delegate	delegate
		p	2	resourceManager	resourceManager
		p	3	registryTracker	registryTracker
	m	(Lgh;Lug;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult;	a	loadToRegistry
		c	Loads elements into a registry just loaded from a decoder.
		p	1	registry	registry
		p	2	registryRef	registryRef
	m	(Lug;Lgs;Lcom/mojang/serialization/MapCodec;Luh;)Lcom/mojang/serialization/DataResult;	a	readSupplier
		c	Reads a supplier for a registry element.\n\n<p>This logic is used by both {@code decodeOrId} and {@code loadToRegistry}.</p>
		p	1	registryRef	registryRef
		p	2	registry	registry
		p	4	elementId	elementId
	m	(Lug;Lug;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult;	a	readElement
		c	Reads the actual element.
		p	1	registryRef	registryRef
		p	2	elementRef	elementRef
	m	(Lcom/mojang/serialization/DynamicOps;Labc;Lgm;)Lue;	a	of
		p	0	delegate	delegate
		p	1	resourceManager	resourceManager
		p	2	registryTracker	registryTracker
	m	(Lug;)Lue$a;	a	getValueHolder
		p	1	registryRef	registryRef
	m	(Ljava/lang/Object;Lug;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult;	a	decodeOrId
		c	Encode an id for a registry element than a full object if possible.\n\n<p>This method is called by casting an arbitrary dynamic ops to a registry\nreading ops.</p>\n\n@see RegistryReadingOps#encodeOrId(Object, Object, RegistryKey, Codec)
c	ue$a	net/minecraft/util/dynamic/RegistryOps$ValueHolder
	f	Ljava/util/Map;	a	values
c	uf	net/minecraft/util/dynamic/RegistryReadingOps
	c	A dynamic ops that encode an id for a registry element rather than a full object.\n\n@see RegistryElementCodec#encode(Object, DynamicOps, Object)
	f	Lgm;	b	tracker
	m	(Lcom/mojang/serialization/DynamicOps;Lgm;)V	<init>	<init>
		p	1	delegate	delegate
		p	2	tracker	tracker
	m	(Ljava/lang/Object;Ljava/lang/Object;Lug;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult;	a	encodeOrId
		c	Encode an id for a registry element than a full object if possible.\n\n<p>This method is called by casting an arbitrary dynamic ops to a registry\nreading ops.</p>\n\n@see RegistryOps#decodeOrId(Object, RegistryKey, Codec)
		p	1	input	input
		p	2	prefix	prefix
		p	3	registryReference	registryReference
	m	(Lcom/mojang/serialization/DynamicOps;Lgm;)Luf;	a	of
		p	0	delegate	delegate
		p	1	tracker	tracker
c	ug	net/minecraft/util/registry/RegistryKey
	c	Represents a key for a value in a registry in a context where a\nroot registry is available.\n\n@param <T> the type of the value\n@see Registry#ROOT
	f	Ljava/util/Map;	a	INSTANCES
		c	A cache of all registry keys ever created.
	f	Luh;	b	registry
		c	The identifier of the registry in the root registry.
	f	Luh;	c	value
		c	The identifier of the value in the registry specified by {@link #registry}.
	m	(Luh;Luh;)V	<init>	<init>
		p	1	registry	registry
		p	2	value	value
	m	()Luh;	a	getValue
	m	(Lug;Luh;)Lug;	a	of
		c	Creates a registry key for a value in a registry with a registry key for\nthe value-holding registry in the root registry and an identifier of the\nvalue.\n\n<p>You can call it like {@code RegistryKey.of(Registry.ITEM_KEY, new Identifier("iron_ingot"))}\nto create a registry key for iron ingot.</p>\n\n@param <T> the type of the value
		p	0	registry	registry
			c	the registry key of the registry in the root registry
		p	1	value	value
			c	the identifier of the value
	m	(Luh;Luh;)Lug;	a	of
		p	0	registry	registry
		p	1	value	value
	m	(Luh;)Lug;	a	ofRegistry
		c	Creates a registry key for a registry in the root registry (registry of\nall registries) with an identifier for the registry.\n\n<p>You can call it like {@code RegistryKey.of(new Identifier("block"))}\nto create a registry key for the block registry.</p>\n\n@param <T> the element type of the registry
		p	0	registry	registry
			c	the identifier of the registry
	m	(Lug;)Ljava/util/function/Function;	a	createKeyFactory
		c	Creates a function that converts an identifier to a registry key for the\nregistry that {@code registry} refers to in the root registry.
		p	0	registry	registry
			c	the reference to the value-holding registry in the root registry
c	uh	net/minecraft/util/Identifier
	c	The namespace and path must contain only lowercase letters ([a-z]), digits ([0-9]), or the characters '_', '.', and '-'. The path can also contain the standard path separator '/'.
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	namespace
	f	Ljava/lang/String;	c	path
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	COMMAND_EXCEPTION
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	namespace	namespace
		p	2	path	path
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
			c	A string of the form <namespace>:<path>, for example minecraft:iron_ingot.\nThe string will be split (on the :) into an identifier with the specified path and namespace.\nPrefer using the constructor {@link net.minecraft.util.Identifier#Identifier(java.lang.String, java.lang.String)} that takes the namespace and path as individual parameters to avoid mistakes.
	m	(Ljava/lang/String;)Luh;	a	tryParse
		p	0	id	id
	m	(C)Z	a	isCharValid
		p	0	c	c
	m	()Ljava/lang/String;	a	getPath
	m	(Ljava/lang/String;C)Luh;	a	splitOn
		p	0	id	id
		p	1	delimiter	delimiter
	m	(Lcom/mojang/brigadier/StringReader;)Luh;	a	fromCommandInput
		p	0	reader	reader
	m	(Luh;)I	a	compareTo
	m	()Ljava/lang/String;	b	getNamespace
	m	(Ljava/lang/String;C)[Ljava/lang/String;	b	split
		p	0	id	id
		p	1	delimiter	delimiter
	m	(Ljava/lang/String;)Z	b	isValid
		p	0	id	id
	m	(Ljava/lang/String;)Z	d	isPathValid
		p	0	path	path
	m	(Ljava/lang/String;)Z	e	isNamespaceValid
		p	0	namespace	namespace
c	uh$a	net/minecraft/util/Identifier$Serializer
	m	(Luh;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Luh;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	id	id
		p	2	type	type
		p	3	context	context
c	uj	net/minecraft/Bootstrap
	f	Ljava/io/PrintStream;	a	SYSOUT
	f	Z	b	initialized
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V	a	collectMissingTranslations
		p	1	keyExtractor	keyExtractor
		p	2	translationKeys	translationKeys
	m	()V	a	initialize
	m	(Ljava/lang/String;)V	a	println
		p	0	str	str
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	()V	c	logMissing
	m	()V	d	setOutputStreams
c	uk	net/minecraft/client/gl/ShaderParseException
	f	Ljava/util/List;	a	traces
	f	Ljava/lang/String;	b	message
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	message	message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	message	message
		p	2	cause	cause
	m	(Ljava/lang/Exception;)Luk;	a	wrap
		p	0	cause	cause
	m	(Ljava/lang/String;)V	a	addFaultyElement
		p	1	jsonKey	jsonKey
	m	(Ljava/lang/String;)V	b	addFaultyFile
		p	1	path	path
c	uk$a	net/minecraft/client/gl/ShaderParseException$JsonStackTrace
	f	Ljava/lang/String;	a	fileName
	f	Ljava/util/List;	b	faultyElements
	m	(Ljava/lang/String;)V	a	add
		p	1	element	element
	m	()Ljava/lang/String;	b	joinStackTrace
c	ul	net/minecraft/server/dedicated/PendingServerCommand
	f	Ljava/lang/String;	a	command
	f	Lcz;	b	source
	m	(Ljava/lang/String;Lcz;)V	<init>	<init>
		p	1	command	command
		p	2	commandSource	commandSource
c	un	net/minecraft/util/logging/DebugLoggerPrintStream
c	uo	net/minecraft/server/dedicated/EulaReader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	eulaFile
	f	Z	c	eulaAgreedTo
	m	()Z	a	isEulaAgreedTo
	m	()Z	b	checkEulaAgreement
	m	()V	c	createEulaFile
c	up	net/minecraft/util/logging/LoggerPrintStream
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1	name	name
		p	2	out	out
	m	(Ljava/lang/String;)V	a	log
		p	1	message	message
c	uq	net/minecraft/advancement/PlayerAdvancementTracker
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lcom/google/gson/reflect/TypeToken;	c	JSON_TYPE
	f	Ljava/io/File;	f	advancementFile
	f	Ljava/util/Map;	g	advancementToProgress
	f	Ljava/util/Set;	h	visibleAdvancements
	f	Ljava/util/Set;	i	visibilityUpdates
	f	Ljava/util/Set;	j	progressUpdates
	f	Lze;	k	owner
	f	Lw;	l	currentDisplayTab
	f	Z	m	dirty
	m	(Lw;)V	a	setDisplayTab
		p	1	advancement	advancement
	m	(Lw;Ljava/lang/String;)Z	a	grantCriterion
		p	1	advancement	advancement
		p	2	criterionName	criterionName
	m	(Lze;)V	a	setOwner
		p	1	owner	owner
	m	(Lw;Ly;)V	a	initProgress
		p	1	advancement	advancement
		p	2	progress	progress
	m	()V	a	clearCriteria
	m	(Lus;)V	a	reload
		p	1	advancementLoader	advancementLoader
	m	(Lus;)V	b	beginTrackingAllAdvancements
		p	1	advancementLoader	advancementLoader
	m	(Lw;)Ly;	b	getProgress
		p	1	advancement	advancement
	m	(Lw;Ljava/lang/String;)Z	b	revokeCriterion
		p	1	advancement	advancement
		p	2	criterionName	criterionName
	m	()V	b	save
	m	(Lze;)V	b	sendUpdate
		p	1	player	player
	m	(Lus;)V	c	rewardEmptyAdvancements
		p	1	advancementLoader	advancementLoader
	m	(Lw;)V	c	beginTracking
		p	1	advancement	advancement
	m	()V	c	updateCompleted
	m	(Lus;)V	d	load
		p	1	advancementLoader	advancementLoader
	m	(Lw;)V	d	endTrackingCompleted
		p	1	advancement	advancement
	m	(Lw;)V	e	updateDisplay
		p	1	advancement	advancement
	m	(Lw;)Z	f	canSee
		p	1	advancement	advancement
	m	(Lw;)Z	g	hasChildrenDone
		p	1	advancement	advancement
c	ur	net/minecraft/network/OffThreadException
	f	Lur;	a	INSTANCE
c	us	net/minecraft/server/ServerAdvancementLoader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lx;	c	manager
	f	Lday;	d	conditionManager
	m	(Lday;)V	<init>	<init>
		p	1	conditionManager	conditionManager
	m	(Ljava/util/Map;Labc;Lami;)V	a	apply
	m	(Luh;)Lw;	a	get
		p	1	id	id
	m	()Ljava/util/Collection;	a	getAdvancements
c	ut	net/minecraft/server/function/FunctionLoader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	PATH_PREFIX_LENGTH
	f	I	c	PATH_SUFFIX_LENGTH
	f	Ljava/util/Map;	d	functions
	f	Ladg;	e	tags
	f	I	f	level
	f	Lcom/mojang/brigadier/CommandDispatcher;	g	commandDispatcher
	m	(ILcom/mojang/brigadier/CommandDispatcher;)V	<init>	<init>
		p	1	level	level
		p	2	commandDispatcher	commandDispatcher
	m	()Ljava/util/Map;	a	getFunctions
	m	(Luh;)Ljava/util/Optional;	a	get
		p	1	id	id
	m	(Labc;Luh;)Ljava/util/List;	a	readLines
		p	0	resourceManager	resourceManager
		p	1	id	id
	m	()Ladg;	b	getTags
	m	(Luh;)Ladf;	b	getOrCreateTag
		p	1	id	id
c	uu	net/minecraft/server/function/CommandFunctionManager
	f	Luh;	a	TICK_FUNCTION
	f	Luh;	b	LOAD_FUNCTION
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Z	d	executing
	f	Ljava/util/ArrayDeque;	e	chain
	f	Ljava/util/List;	f	pending
	f	Ljava/util/List;	g	tickFunctions
	f	Z	h	needToRunLoadFunctions
	m	(Lcw;Lcz;)I	a	execute
		p	1	function	function
		p	2	source	source
	m	(Luh;)Ljava/util/Optional;	a	getFunction
		p	1	id	id
	m	()I	b	getMaxCommandChainLength
	m	()Lcom/mojang/brigadier/CommandDispatcher;	c	getDispatcher
	m	()V	d	tick
	m	()Lcz;	e	getTaggedFunctionSource
c	uu$a	net/minecraft/server/function/CommandFunctionManager$Entry
	f	Luu;	a	manager
	f	Lcz;	b	source
	f	Lcw$c;	c	element
	m	(Luu;Lcz;Lcw$c;)V	<init>	<init>
		p	1	manager	manager
		p	2	source	source
		p	3	element	element
	m	(Ljava/util/ArrayDeque;I)V	a	execute
		p	1	stack	stack
		p	2	maxChainLength	maxChainLength
c	uv	net/minecraft/server/dedicated/DedicatedServer
	m	()Ljava/lang/String;	G	getVersion
	m	()I	H	getCurrentPlayerCount
	m	()I	I	getMaxPlayerCount
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	(Ljava/lang/String;)Ljava/lang/String;	a	executeRconCommand
		p	1	command	command
	m	()Lye;	g_	getProperties
	m	()Ljava/lang/String;	h_	getHostname
	m	()Ljava/lang/String;	i_	getMotd
	m	()Ljava/lang/String;	j_	getPlugins
	m	()Ljava/lang/String;	k_	getLevelName
	m	()I	o	getPort
c	uw	net/minecraft/resource/ServerResourceManager
	f	Laba;	b	resourceManager
	f	Lda;	c	commandManager
	f	Lbmv;	d	recipeManager
	f	Ladh;	e	registryTagManager
	f	Lday;	f	lootConditionManager
	f	Ldax;	g	lootManager
	f	Lus;	h	serverAdvancementLoader
	f	Lut;	i	functionLoader
	m	(Ljava/util/List;Lda$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
	m	()Lut;	a	getFunctionLoader
	m	()Lday;	b	getLootConditionManager
	m	()Ldax;	c	getLootManager
	m	()Ladh;	d	getRegistryTagManager
	m	()Lbmv;	e	getRecipeManager
	m	()Lda;	f	getCommandManager
	m	()Lus;	g	getServerAdvancementLoader
	m	()Labc;	h	getResourceManager
	m	()V	i	loadRegistryTags
c	ux	net/minecraft/scoreboard/ServerScoreboard
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Ljava/util/Set;	b	objectives
	f	[Ljava/lang/Runnable;	c	updateListeners
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	(Ljava/lang/Runnable;)V	a	addUpdateListener
		p	1	listener	listener
	m	()V	b	runUpdateListeners
	m	(Ldfj;)Ljava/util/List;	d	createChangePackets
		p	1	objective	objective
	m	(Ldfj;)V	e	addScoreboardObjective
		p	1	objective	objective
	m	(Ldfj;)Ljava/util/List;	f	createRemovePackets
		p	1	objective	objective
	m	(Ldfj;)V	g	removeScoreboardObjective
		p	1	objective	objective
	m	(Ldfj;)I	h	getSlot
		p	1	objective	objective
c	ux$a	net/minecraft/scoreboard/ServerScoreboard$UpdateMode
c	uy	net/minecraft/server/ServerTask
	f	I	a	creationTicks
	f	Ljava/lang/Runnable;	b	runnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1	creationTicks	creationTicks
		p	2	runnable	runnable
	m	()I	a	getCreationTicks
c	uz	net/minecraft/entity/boss/CommandBossBar
	f	Luh;	h	id
	f	Ljava/util/Set;	i	playerUuids
	f	I	j	value
	f	I	k	maxValue
	m	(Luh;Lmr;)V	<init>	<init>
		p	1	id	id
		p	2	displayName	displayName
	m	(Ljava/util/Collection;)Z	a	addPlayers
		p	1	players	players
	m	()Luh;	a	getId
	m	(Lnb;)Lnb;	a	method_12958
		p	1	style	style
	m	(I)V	a	setValue
		p	1	value	value
	m	(Lle;Luh;)Luz;	a	fromTag
		p	0	tag	tag
		p	1	id	id
	m	(Ljava/util/UUID;)V	a	addPlayer
		p	1	uuid	uuid
	m	(I)V	b	setMaxValue
		p	1	maxValue	maxValue
	m	()I	c	getValue
	m	(Lze;)V	c	onPlayerConnect
		p	1	player	player
	m	()I	d	getMaxValue
	m	(Lze;)V	d	onPlayerDisconnect
		p	1	player	player
	m	()Lmr;	e	toHoverableText
	m	()Lle;	f	toTag
c	v	net/minecraft/util/Util
	f	Ljava/util/function/LongSupplier;	a	nanoTimeSupplier
	f	Ljava/util/UUID;	b	NIL_UUID
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	NEXT_SERVER_WORKER_ID
	f	Ljava/util/concurrent/ExecutorService;	e	SERVER_WORKER_EXECUTOR
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	next
	m	(Ljava/util/List;)Ljava/lang/Object;	a	getLast
		p	0	list	list
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
		p	0	factory	factory
	m	(Ljava/lang/String;Luh;)Ljava/lang/String;	a	createTranslationKey
		p	0	type	type
		p	1	id	id
	m	(Ljava/lang/String;II)I	a	moveCursor
		c	Moves the {@code cursor} in the {@code string} by a {@code delta} amount.\nSkips surrogate characters.
		p	0	string	string
		p	1	cursor	cursor
		p	2	delta	delta
	m	(Lcgl;Ljava/lang/Object;)Ljava/lang/String;	a	getValueAsString
	m	(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;	a	completeExceptionally
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifPresentOrElse
	m	()Ljava/util/stream/Collector;	a	toMap
	m	(Ljava/util/Optional;)Ljava/util/stream/Stream;	a	stream
	m	([ILjava/util/Random;)I	a	getRandom
		p	0	array	array
		p	1	random	random
	m	(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;	a	toIntArray
		p	0	intStream	intStream
		p	1	length	length
	m	([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object;	a	getRandom
		p	0	array	array
		p	1	random	random
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	debugRunnable
		p	0	runnable	runnable
		p	1	messageSupplier	messageSupplier
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
		p	0	object	object
		p	1	initializer	initializer
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	b	combine
		p	0	futures	futures
	m	()J	b	getMeasuringTimeMs
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	previous
	m	(Ljava/lang/Throwable;)V	b	throwUnchecked
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	c	throwOrPause
		p	0	t	t
	m	()J	c	getMeasuringTimeNano
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	d	getInnermostMessage
		p	0	t	t
	m	()J	d	getEpochTimeMs
	m	()Ljava/util/concurrent/Executor;	f	getServerWorkerExecutor
	m	()V	h	shutdownServerWorkerExecutor
	m	()Lv$b;	i	getOperatingSystem
	m	()Ljava/util/stream/Stream;	j	getJVMFlags
	m	()Lit/unimi/dsi/fastutil/Hash$Strategy;	k	identityHashStrategy
	m	()Lorg/apache/logging/log4j/Logger;	m	getLogger
c	v$a	net/minecraft/util/Util$IdentityHashStrategy
c	v$b	net/minecraft/util/Util$OperatingSystem
	m	(Ljava/net/URL;)V	a	open
		p	1	url	url
	m	(Ljava/io/File;)V	a	open
	m	(Ljava/lang/String;)V	a	open
	m	(Ljava/net/URI;)V	a	open
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getURLOpenCommand
		p	1	url	url
c	va	net/minecraft/entity/boss/BossBarManager
	f	Ljava/util/Map;	a	commandBossBars
	m	(Lle;)V	a	fromTag
		p	1	tag	tag
	m	()Ljava/util/Collection;	a	getIds
	m	(Luz;)V	a	remove
		p	1	bossBar	bossBar
	m	(Luh;)Luz;	a	get
		p	1	id	id
	m	(Luh;Lmr;)Luz;	a	add
		p	1	id	id
		p	2	displayName	displayName
	m	(Lze;)V	a	onPlayerConnect
		p	1	player	player
	m	(Lze;)V	b	onPlayerDisconnect
		p	1	player	player
	m	()Ljava/util/Collection;	b	getAll
	m	()Lle;	c	toTag
c	vc	net/minecraft/server/command/AdvancementCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	m	(Lw;Ljava/util/List;)V	a	addChildrenRecursivelyToList
		p	0	parent	parent
		p	1	childList	childList
	m	(Lcz;Ljava/util/Collection;Lvc$a;Lw;Ljava/lang/String;)I	a	executeCriterion
		p	0	source	source
		p	1	targets	targets
		p	2	operation	operation
		p	3	advancement	advancement
		p	4	criterion	criterion
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/util/Collection;Lvc$a;Ljava/util/Collection;)I	a	executeAdvancement
		p	0	source	source
		p	1	targets	targets
		p	2	operation	operation
		p	3	selection	selection
	m	(Lw;Lvc$b;)Ljava/util/List;	a	select
		p	0	advancement	advancement
		p	1	selection	selection
c	vc$a	net/minecraft/server/command/AdvancementCommand$Operation
	f	Ljava/lang/String;	c	commandPrefix
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Lze;Lw;)Z	a	processEach
		p	1	player	player
		p	2	advancement	advancement
	m	(Lze;Ljava/lang/Iterable;)I	a	processAll
		p	1	player	player
		p	2	advancements	advancements
	m	()Ljava/lang/String;	a	getCommandPrefix
	m	(Lze;Lw;Ljava/lang/String;)Z	a	processEachCriterion
		p	1	player	player
		p	2	advancement	advancement
		p	3	criterion	criterion
c	vc$b	net/minecraft/server/command/AdvancementCommand$Selection
	f	Z	f	before
	f	Z	g	after
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3	before	before
		p	4	after	after
c	vd	net/minecraft/server/command/AttributeCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ENTITY_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	NO_ATTRIBUTE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	d	NO_MODIFIER_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	MODIFIER_ALREADY_PRESENT_EXCEPTION
	m	(Lcz;Laom;Laps;D)I	a	executeValueGet
		p	0	source	source
		p	1	target	target
		p	2	attribute	attribute
		p	3	multiplier	multiplier
	m	(Lcz;Laom;Laps;Ljava/util/UUID;Ljava/lang/String;DLapv$a;)I	a	executeModifierAdd
		p	0	source	source
		p	1	target	target
		p	2	attribute	attribute
		p	3	uuid	uuid
		p	4	name	name
		p	5	value	value
		p	7	operation	operation
	m	(Lcz;Laom;Laps;Ljava/util/UUID;)I	a	executeModifierRemove
		p	0	source	source
		p	1	target	target
		p	2	attribute	attribute
		p	3	uuid	uuid
	m	(Lcz;Laom;Laps;Ljava/util/UUID;D)I	a	executeModifierValueGet
		p	0	source	source
		p	1	target	target
		p	2	attribute	attribute
		p	3	uuid	uuid
		p	4	multiplier	multiplier
	m	(Laom;)Laoy;	a	getLivingEntity
		p	0	entity	entity
	m	(Laom;Laps;)Lapt;	a	getAttributeInstance
		p	0	entity	entity
		p	1	attribute	attribute
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Laom;Laps;D)I	b	executeBaseValueGet
		p	0	source	source
		p	1	target	target
		p	2	attribute	attribute
		p	3	multiplier	multiplier
	m	(Laom;Laps;)Laoy;	b	getLivingEntityWithAttribute
		p	0	entity	entity
		p	1	attribute	attribute
	m	(Lcz;Laom;Laps;D)I	c	executeBaseValueSet
		p	0	source	source
		p	1	target	target
		p	2	attribute	attribute
		p	3	value	value
c	ve	net/minecraft/server/dedicated/command/BanIpCommand
	f	Ljava/util/regex/Pattern;	a	PATTERN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_IP_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ALREADY_BANNED_EXCEPTION
	m	(Lcz;Ljava/lang/String;Lmr;)I	a	checkIp
		p	0	source	source
		p	1	target	target
		p	2	reason	reason
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/lang/String;Lmr;)I	b	banIp
		p	0	source	source
		p	1	targetIp	targetIp
		p	2	reason	reason
c	vf	net/minecraft/server/dedicated/command/BanListCommand
	m	(Lcz;Ljava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vg	net/minecraft/server/dedicated/command/BanCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_BANNED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;Lmr;)I	a	ban
		p	0	source	source
		p	1	targets	targets
		p	2	reason	reason
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vh	net/minecraft/server/command/BossBarCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	CREATE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	SET_PLAYERS_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	SET_NAME_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	SET_COLOR_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	SET_STYLE_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	SET_VALUE_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	SET_MAX_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION
	m	(Lcz;Luz;)I	a	getValue
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcz;Luz;Ljava/util/Collection;)I	a	setPlayers
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	players	players
	m	(Lcz;Luz;Z)I	a	setVisible
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	visible	visible
	m	(Lcz;Luz;Lamw$b;)I	a	setStyle
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	style	style
	m	(Lcz;Luh;Lmr;)I	a	addBossBar
		p	0	source	source
		p	1	name	name
		p	2	displayName	displayName
	m	(Lcz;)I	a	listBossBars
		p	0	source	source
	m	(Lcom/mojang/brigadier/context/CommandContext;)Luz;	a	getBossBar
		p	0	context	context
	m	(Lcz;Luz;Lamw$a;)I	a	setColor
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	color	color
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Luz;Lmr;)I	a	setName
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	name	name
	m	(Lcz;Luz;I)I	a	setValue
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	value	value
	m	(Lcz;Luz;)I	b	getMaxValue
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcz;Luz;I)I	b	setMaxValue
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	value	value
	m	(Lcz;Luz;)I	c	isVisible
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcz;Luz;)I	d	getPlayers
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcz;Luz;)I	e	removeBossBar
		p	0	source	source
		p	1	bossBar	bossBar
c	vi	net/minecraft/server/command/ClearCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	FAILED_SINGLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	FAILED_MULTIPLE_EXCEPTION
	m	(Lcz;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	item	item
		p	3	maxCount	maxCount
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vj	net/minecraft/server/command/CloneCommand
	f	Ljava/util/function/Predicate;	a	IS_AIR_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	OVERLAP_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	TOO_BIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	FAILED_EXCEPTION
	m	(Lcz;Lfu;Lfu;Lfu;Ljava/util/function/Predicate;Lvj$b;)I	a	execute
		p	0	source	source
		p	1	begin	begin
		p	2	end	end
		p	3	destination	destination
		p	4	filter	filter
		p	5	mode	mode
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vj$a	net/minecraft/server/command/CloneCommand$BlockInfo
	f	Lfu;	a	pos
	f	Lcfj;	b	state
	f	Lle;	c	blockEntityTag
	m	(Lfu;Lcfj;Lle;)V	<init>	<init>
		p	1	pos	pos
		p	2	state	state
		p	3	blockEntityTag	blockEntityTag
c	vj$b	net/minecraft/server/command/CloneCommand$Mode
	f	Z	d	allowsOverlap
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3	allowsOverlap	allowsOverlap
	m	()Z	a	allowsOverlap
c	vk	net/minecraft/server/command/DatapackCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_DATAPACK_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ALREADY_ENABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ALREADY_DISABLED_EXCEPTION
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	ENABLED_CONTAINERS_SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	DISABLED_CONTAINERS_SUGGESTION_PROVIDER
	m	(Lcz;Laap;)I	a	executeDisable
		p	0	source	source
		p	1	container	container
	m	(Lcz;Laap;Lvk$a;)I	a	executeEnable
		p	0	source	source
		p	1	container	container
		p	2	packAdder	packAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Laap;	a	getPackContainer
		p	0	context	context
		p	1	name	name
		p	2	enable	enable
	m	(Lcz;)I	a	executeList
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;)I	b	executeListAvailable
		p	0	source	source
	m	(Lcz;)I	c	executeListEnabled
		p	0	source	source
c	vk$a	net/minecraft/server/command/DatapackCommand$PackAdder
c	vl	net/minecraft/server/dedicated/command/DeOpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_DEOPPED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;)I	a	deop
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vm	net/minecraft/server/command/DebugCommand
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	NOT_RUNNING_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ALREADY_RUNNING_EXCEPTION
	f	Ljava/nio/file/spi/FileSystemProvider;	d	FILE_SYSTEM_PROVIDER
	m	(Lcz;)I	a	executeStart
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;)I	b	executeStop
		p	0	source	source
	m	(Lcz;)I	c	createDebugReport
		p	0	source	source
c	vp	net/minecraft/server/command/DefaultGameModeCommand
	m	(Lcz;Lbpy;)I	a	execute
		p	0	source	source
		p	1	defaultGameMode	defaultGameMode
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vq	net/minecraft/server/command/DifficultyCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	FAILURE_EXCEPTION
	m	(Lcz;Land;)I	a	execute
		p	0	source	source
		p	1	difficulty	difficulty
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vr	net/minecraft/server/command/EffectCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	GIVE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	CLEAR_EVERYTHING_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	CLEAR_SPECIFIC_FAILED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;)I	a	executeClear
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/util/Collection;Laoe;Ljava/lang/Integer;IZ)I	a	executeGive
		p	0	source	source
		p	1	targets	targets
		p	2	effect	effect
		p	3	seconds	seconds
		p	4	amplifier	amplifier
		p	5	showParticles	showParticles
	m	(Lcz;Ljava/util/Collection;Laoe;)I	a	executeClear
		p	0	source	source
		p	1	targets	targets
		p	2	effect	effect
c	vs	net/minecraft/server/command/MeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vt	net/minecraft/server/command/EnchantCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	FAILED_ENTITY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	FAILED_ITEMLESS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	FAILED_INCOMPATIBLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FAILED_LEVEL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	FAILED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;Lbnw;I)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	enchantment	enchantment
		p	3	level	level
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vu	net/minecraft/server/command/ExecuteCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	BLOCKS_TOOBIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	CONDITIONAL_FAIL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	CONDITIONAL_FAIL_COUNT_EXCEPTION
	f	Ljava/util/function/BinaryOperator;	d	BINARY_RESULT_CONSUMER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	LOOT_CONDITIONS
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addBlocksConditionLogic
		p	0	root	root
		p	1	builder	builder
		p	2	positive	positive
		p	3	masked	masked
	m	(Lzd;Lfu;Lfu;Lfu;Z)Ljava/util/OptionalInt;	a	testBlocksCondition
		p	0	world	world
		p	1	start	start
		p	2	end	end
		p	3	destination	destination
		p	4	masked	masked
	m	(Lxw;Ldn$h;)I	a	countPathMatches
		p	0	object	object
		p	1	path	path
	m	(Lcz;Luz;ZZ)Lcz;	a	executeStoreBossbar
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	storeInValue	storeInValue
		p	3	requestResult	requestResult
	m	(Lcz;Lddm;)Z	a	testLootCondition
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionArguments
		p	0	root	root
		p	1	argumentBuilder	argumentBuilder
		p	2	positive	positive
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLvu$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionLogic
		p	0	root	root
		p	1	builder	builder
		p	2	positive	positive
		p	3	condition	condition
	m	(Lcz;Lxw;Ldn$h;Ljava/util/function/IntFunction;Z)Lcz;	a	executeStoreData
		p	0	source	source
		p	1	object	object
		p	2	path	path
		p	3	tagSetter	tagSetter
		p	4	requestResult	requestResult
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbx$d;)Z	a	testScoreMatch
		p	0	context	context
		p	1	range	range
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	executePositiveBlockCondition
		p	0	context	context
		p	1	masked	masked
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z	a	testScoreCondition
		p	0	context	context
		p	1	condition	condition
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	getSourceOrEmptyForConditionFork
		p	0	context	context
		p	1	positive	positive
		p	2	value	value
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addStoreArguments
		p	0	node	node
		p	1	builder	builder
		p	2	requestResult	requestResult
	m	(Lcz;Ljava/util/Collection;Ldfj;Z)Lcz;	a	executeStoreScore
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	requestResult	requestResult
	m	(ZLvu$a;)Lcom/mojang/brigadier/Command;	a	getExistsConditionExecute
		p	0	positive	positive
		p	1	condition	condition
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	executeNegativeBlockCondition
		p	0	context	context
		p	1	masked	masked
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	testBlocksCondition
		p	0	context	context
		p	1	masked	masked
c	vu$a	net/minecraft/server/command/ExecuteCommand$ExistsCondition
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	test	test
		p	1	context	context
c	vu$b	net/minecraft/server/command/ExecuteCommand$Condition
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	test	test
		p	1	context	context
c	vv	net/minecraft/server/command/ExperienceCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	SET_POINT_INVALID_EXCEPTION
	m	(Lcz;Ljava/util/Collection;ILvv$a;)I	a	executeAdd
		p	0	source	source
		p	1	targets	targets
		p	2	amount	amount
		p	3	component	component
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Lze;Lvv$a;)I	a	executeQuery
		p	0	source	source
		p	1	player	player
		p	2	component	component
	m	(Lcz;Ljava/util/Collection;ILvv$a;)I	b	executeSet
		p	0	source	source
		p	1	targets	targets
		p	2	amount	amount
		p	3	component	component
c	vv$a	net/minecraft/server/command/ExperienceCommand$Component
	f	Ljava/util/function/BiConsumer;	c	adder
	f	Ljava/util/function/BiPredicate;	d	setter
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	getter
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V	<init>	<init>
		p	3	name	name
		p	4	adder	adder
		p	5	setter	setter
		p	6	getter	getter
c	vw	net/minecraft/server/command/FillCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	TOO_BIG_EXCEPTION
	f	Lec;	b	AIR_BLOCK_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	FAILED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Lctd;Lec;Lvw$a;Ljava/util/function/Predicate;)I	a	execute
		p	0	source	source
		p	1	range	range
		p	2	block	block
		p	3	mode	mode
		p	4	filter	filter
c	vw$a	net/minecraft/server/command/FillCommand$Mode
	f	Lxb$a;	e	filter
c	vx	net/minecraft/server/command/ForceLoadCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	TOO_BIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	QUERY_FAILURE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ADDED_FAILURE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	REMOVED_FAILURE_EXCEPTION
	m	(Lcz;Lyt;)I	a	executeQuery
		p	0	source	source
		p	1	pos	pos
	m	(Lcz;)I	a	executeQuery
		p	0	source	source
	m	(Lcz;Lyt;Lyt;Z)I	a	executeChange
		p	0	source	source
		p	1	from	from
		p	2	to	to
		p	3	forceLoaded	forceLoaded
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;)I	b	executeRemoveAll
		p	0	source	source
c	vy	net/minecraft/server/command/FunctionCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	m	(Lcz;Ljava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	functions	functions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vz	net/minecraft/server/command/GameModeCommand
	m	(Lcz;Lze;Lbpy;)V	a	setGameMode
		p	0	source	source
		p	1	player	player
		p	2	gameMode	gameMode
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lbpy;)I	a	execute
		p	0	context	context
		p	1	targets	targets
		p	2	gameMode	gameMode
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	w	net/minecraft/advancement/Advancement
	f	Lw;	a	parent
	f	Laf;	b	display
	f	Lz;	c	rewards
	f	Luh;	d	id
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Ljava/util/Set;	g	children
	f	Lmr;	h	text
	m	(Luh;Lw;Laf;Lz;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	parent	parent
		p	3	display	display
		p	4	rewards	rewards
		p	5	criteria	criteria
		p	6	requirements	requirements
	m	(Lw;)V	a	addChild
		p	1	child	child
	m	()Lw$a;	a	createTask
	m	()Lw;	b	getParent
	m	()Laf;	c	getDisplay
	m	()Lz;	d	getRewards
	m	()Ljava/lang/Iterable;	e	getChildren
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/util/Map;	f	getCriteria
	m	()I	g	getRequirementCount
	m	()Luh;	h	getId
	m	()[[Ljava/lang/String;	i	getRequirements
	m	()Lmr;	j	toHoverableText
c	w$a	net/minecraft/advancement/Advancement$Task
	f	Luh;	a	parentId
	f	Lw;	b	parentObj
	f	Laf;	c	display
	f	Lz;	d	rewards
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Lah;	g	merger
	m	(Luh;Laf;Lz;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1	parentId	parentId
		p	2	display	display
		p	3	rewards	rewards
		p	4	criteria	criteria
		p	5	requirements	requirements
	m	(Lz;)Lw$a;	a	rewards
		p	1	rewards	rewards
	m	(Lcom/google/gson/JsonObject;Lav;)Lw$a;	a	fromJson
		p	0	obj	obj
		p	1	predicateDeserializer	predicateDeserializer
	m	(Ljava/util/function/Function;)Z	a	findParent
		p	1	parentProvider	parentProvider
	m	(Ljava/lang/String;Lab;)Lw$a;	a	criterion
		p	1	name	name
	m	(Luh;)Lw$a;	a	parent
		p	1	parentId	parentId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Lw;	a	build
	m	(Lz$a;)Lw$a;	a	rewards
	m	()Lw$a;	a	create
	m	(Lw;)Lw$a;	a	parent
		p	1	parent	parent
	m	(Ljava/lang/String;Lae;)Lw$a;	a	criterion
		p	1	name	name
	m	(Lbqa;Lmr;Lmr;Luh;Lag;ZZZ)Lw$a;	a	display
		p	1	icon	icon
		p	2	title	title
		p	3	description	description
		p	4	background	background
		p	5	frame	frame
		p	6	showToast	showToast
		p	7	announceToChat	announceToChat
		p	8	hidden	hidden
	m	(Laf;)Lw$a;	a	display
		p	1	display	display
	m	(Lah;)Lw$a;	a	criteriaMerger
		p	1	merger	merger
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	(Lbki;Lmr;Lmr;Luh;Lag;ZZZ)Lw$a;	a	display
		p	1	icon	icon
		p	2	title	title
		p	3	description	description
		p	4	background	background
		p	5	frame	frame
		p	6	showToast	showToast
		p	7	announceToChat	announceToChat
		p	8	hidden	hidden
	m	()Lcom/google/gson/JsonObject;	b	toJson
	m	(Lmg;)Lw$a;	b	fromPacket
		p	0	buf	buf
	m	(Luh;)Lw;	b	build
		p	1	id	id
	m	()Ljava/util/Map;	c	getCriteria
c	wa	net/minecraft/server/command/GameRuleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;)Z	a	method_13393
		p	0	source	source
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbpx$e;)I	b	executeSet
		p	0	context	context
		p	1	key	key
	m	(Lcz;Lbpx$e;)I	b	executeQuery
		p	0	source	source
		p	1	key	key
c	wa$1	net/minecraft/server/command/GameRuleCommand$1
	m	(Lbpx$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	method_20797
		p	1	context	context
	m	(Lbpx$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	method_20798
		p	1	context	context
c	wb	net/minecraft/server/command/GiveCommand
	m	(Lcz;Leu;Ljava/util/Collection;I)I	a	execute
		p	0	source	source
		p	1	item	item
		p	2	targets	targets
		p	3	count	count
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wc	net/minecraft/server/command/HelpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wd	net/minecraft/server/command/KickCommand
	m	(Lcz;Ljava/util/Collection;Lmr;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	reason	reason
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	we	net/minecraft/server/command/KillCommand
	m	(Lcz;Ljava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wf	net/minecraft/server/command/ListCommand
	m	(Lcz;)I	a	executeNames
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/util/function/Function;)I	a	execute
		p	0	source	source
		p	1	nameProvider	nameProvider
	m	(Lcz;)I	b	executeUuids
		p	0	source	source
c	wg	net/minecraft/server/command/LocateBiomeCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	NOT_FOUND_EXCEPTION
	m	(Lcz;Luh;)I	a	execute
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wh	net/minecraft/server/command/LocateCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(IIII)F	a	getDistance
		p	0	x1	x1
		p	1	y1	y1
		p	2	x2	x2
		p	3	y2	y2
	m	(Lcz;Ljava/lang/String;Lfu;Lfu;Ljava/lang/String;)I	a	sendCoordinates
		p	0	source	source
		p	1	structure	structure
		p	2	sourcePos	sourcePos
		p	3	structurePos	structurePos
		p	4	successMessage	successMessage
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Lcml;)I	a	execute
		p	0	source	source
c	wi	net/minecraft/server/command/LootCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	NO_HELD_ITEMS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	NO_LOOT_TABLE_EXCEPTION
	m	(Lamz;Lbki;)Z	a	insert
		p	0	inventory	inventory
		p	1	stack	stack
	m	(Laom;Ljava/util/List;IILjava/util/List;)V	a	replace
		p	0	entity	entity
		p	1	stacks	stacks
		p	2	slot	slot
		p	3	stackCount	stackCount
		p	4	addedStacks	addedStacks
	m	(Lcom/mojang/brigadier/context/CommandContext;Lfu;Lbki;Lwi$b;)I	a	executeMine
		p	0	context	context
		p	1	pos	pos
		p	2	stack	stack
		p	3	constructor	constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Luh;Lfu;Lbki;Lwi$b;)I	a	executeFish
		p	0	context	context
		p	1	lootTable	lootTable
		p	2	pos	pos
		p	3	stack	stack
		p	4	constructor	constructor
	m	(Ljava/util/Collection;Ljava/util/List;Lwi$a;)I	a	executeGive
		p	0	players	players
		p	1	stacks	stacks
		p	2	messageSender	messageSender
	m	(Lcz;Ldem;Ljava/util/List;Lwi$a;)I	a	executeSpawn
		p	0	source	source
		p	1	pos	pos
		p	2	stacks	stacks
		p	3	messageSender	messageSender
	m	(Lcz;Lfu;Ljava/util/List;Lwi$a;)I	a	executeInsert
		p	0	source	source
		p	1	targetPos	targetPos
		p	2	stacks	stacks
		p	3	messageSender	messageSender
	m	(Lcom/mojang/brigadier/context/CommandContext;Laom;Lwi$b;)I	a	executeKill
		p	0	context	context
		p	1	entity	entity
		p	2	constructor	constructor
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lwi$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargetArguments
		p	0	rootArgument	rootArgument
		p	1	sourceConstructor	sourceConstructor
	m	(Lcz;Laor;)Lbki;	a	getHeldItem
		p	0	source	source
		p	1	slot	slot
	m	(Ljava/util/Collection;IILjava/util/List;Lwi$a;)I	a	executeReplace
		p	0	targets	targets
		p	1	slot	slot
		p	2	stackCount	stackCount
		p	3	stacks	stacks
		p	4	messageSender	messageSender
	m	(Lcz;Ljava/util/List;)V	a	sendDroppedFeedback
		p	0	source	source
		p	1	stacks	stacks
	m	(Lcz;Lfu;IILjava/util/List;Lwi$a;)I	a	executeBlock
		p	0	source	source
		p	1	targetPos	targetPos
		p	2	slot	slot
		p	3	stackCount	stackCount
		p	4	stacks	stacks
		p	5	messageSender	messageSender
	m	(Lbki;Lbki;)Z	a	itemsMatch
		p	0	first	first
		p	1	second	second
	m	(Lcz;Ljava/util/List;Luh;)V	a	sendDroppedFeedback
		p	0	source	source
		p	1	stacks	stacks
		p	2	lootTable	lootTable
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Luh;Ldat;Lwi$b;)I	a	getFeedbackMessageSingle
		p	0	context	context
		p	1	lootTable	lootTable
		p	2	lootContext	lootContext
		p	3	constructor	constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Luh;Lwi$b;)I	a	executeLoot
		p	0	context	context
		p	1	lootTable	lootTable
		p	2	constructor	constructor
	m	(Lcz;Lfu;)Lamz;	a	getBlockInventory
		p	0	source	source
		p	1	pos	pos
c	wi$a	net/minecraft/server/command/LootCommand$FeedbackMessage
	m	(Ljava/util/List;)V	accept	accept
		p	1	items	items
c	wi$b	net/minecraft/server/command/LootCommand$Target
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lwi$a;)I	accept	accept
		p	1	context	context
		p	2	items	items
		p	3	messageSender	messageSender
c	wi$c	net/minecraft/server/command/LootCommand$SourceConstructor
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lwi$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	construct	construct
		p	1	builder	builder
		p	2	target	target
c	wj	net/minecraft/server/command/MessageCommand
	m	(Lcz;Ljava/util/Collection;Lmr;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	message	message
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wk	net/minecraft/server/dedicated/command/OpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_OPPED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;)I	a	op
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wl	net/minecraft/server/dedicated/command/PardonCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_UNBANNED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;)I	a	pardon
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wm	net/minecraft/server/dedicated/command/PardonIpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_IP_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ALREADY_UNBANNED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/lang/String;)I	a	pardonIp
		p	0	source	source
		p	1	target	target
c	wn	net/minecraft/server/command/ParticleCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Lhf;Ldem;Ldem;FIZLjava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	parameters	parameters
		p	2	pos	pos
		p	3	delta	delta
		p	4	speed	speed
		p	5	count	count
		p	6	force	force
		p	7	viewers	viewers
c	wo	net/minecraft/server/command/PlaySoundCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;Luh;Lacm;Ldem;FFF)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	sound	sound
		p	3	category	category
		p	4	pos	pos
		p	5	volume	volume
		p	6	pitch	pitch
		p	7	minVolume	minVolume
	m	(Lacm;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	makeArgumentsForCategory
		p	0	category	category
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wp	net/minecraft/server/command/PublishCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ALREADY_PUBLISHED_EXCEPTION
	m	(Lcz;I)I	a	execute
		p	0	source	source
		p	1	port	port
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wr	net/minecraft/server/command/RecipeCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	GIVE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	TAKE_FAILED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/util/Collection;Ljava/util/Collection;)I	a	executeGive
		p	0	source	source
		p	1	targets	targets
		p	2	recipes	recipes
	m	(Lcz;Ljava/util/Collection;Ljava/util/Collection;)I	b	executeTake
		p	0	source	source
		p	1	targets	targets
		p	2	recipes	recipes
c	ws	net/minecraft/server/command/ReloadCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wt	net/minecraft/server/command/ReplaceItemCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	BLOCK_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	SLOT_INAPPLICABLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ENTITY_FAILED_EXCEPTION
	m	(Lcz;Lfu;ILbki;)I	a	executeBlock
		p	0	source	source
		p	1	pos	pos
		p	2	slot	slot
		p	3	item	item
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/util/Collection;ILbki;)I	a	executeEntity
		p	0	source	source
		p	1	targets	targets
		p	2	slot	slot
		p	3	item	item
c	wu	net/minecraft/server/dedicated/command/SaveAllCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcz;Z)I	a	saveAll
		p	0	source	source
		p	1	flush	flush
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wv	net/minecraft/server/dedicated/command/SaveOffCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_OFF_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ww	net/minecraft/server/dedicated/command/SaveOnCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_ON_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wx	net/minecraft/server/command/SayCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wy	net/minecraft/server/command/ScheduleCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	SAME_TICK_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	CLEARED_FAILURE_EXCEPTION
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUGGESTION_PROVIDER
	m	(Lcz;Lcom/mojang/datafixers/util/Pair;IZ)I	a	execute
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	wz	net/minecraft/server/command/ScoreboardCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	OBJECTIVES_ADD_DUPLICATE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	OBJECTIVES_DISPLAY_ALREADY_EMPTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	OBJECTIVES_DISPLAY_ALREADY_SET_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	PLAYERS_ENABLE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	PLAYERS_ENABLE_INVALID_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	PLAYERS_GET_NULL_EXCEPTION
	m	(Lcz;Ljava/lang/String;Ldfj;)I	a	executeGet
		p	0	source	source
		p	1	target	target
		p	2	objective	objective
	m	(Lcz;Ldfj;Lmr;)I	a	executeModifyObjective
		p	0	source	source
		p	1	objective	objective
		p	2	displayName	displayName
	m	(Lcz;Ljava/lang/String;)I	a	executeListScores
		p	0	source	source
		p	1	target	target
	m	(Lcz;Ldfj;Ldfp$a;)I	a	executeModifyRenderType
		p	0	source	source
		p	1	objective	objective
		p	2	type	type
	m	(Lcz;I)I	a	executeClearDisplay
		p	0	source	source
		p	1	slot	slot
	m	(Lcz;Ljava/util/Collection;Ldfj;)I	a	executeEnable
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	makeRenderTypeArguments
	m	(Lcz;)I	a	executeListPlayers
		p	0	source	source
	m	(Lcz;Ljava/util/Collection;Ldfj;Lds$a;Ljava/util/Collection;Ldfj;)I	a	executeOperation
		p	0	source	source
		p	1	targets	targets
		p	2	targetObjective	targetObjective
		p	3	operation	operation
		p	4	sources	sources
		p	5	sourceObjectives	sourceObjectives
	m	(Lcz;ILdfj;)I	a	executeSetDisplay
		p	0	source	source
		p	1	slot	slot
		p	2	objective	objective
	m	(Lcz;Ljava/util/Collection;Ldfj;I)I	a	executeSet
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	score	score
	m	(Lcz;Ljava/util/Collection;)I	a	executeReset
		p	0	source	source
		p	1	targets	targets
	m	(Lcz;Ljava/lang/String;Ldfp;Lmr;)I	a	executeAddObjective
		p	0	source	source
		p	1	objective	objective
		p	2	criteria	criteria
		p	3	displayName	displayName
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ldfj;)I	a	executeRemoveObjective
		p	0	source	source
		p	1	objective	objective
	m	(Lcz;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestDisabled
		p	0	source	source
		p	1	targets	targets
		p	2	builder	builder
	m	(Lcz;Ljava/util/Collection;Ldfj;)I	b	executeReset
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
	m	(Lcz;)I	b	executeListObjectives
		p	0	source	source
	m	(Lcz;Ljava/util/Collection;Ldfj;I)I	b	executeAdd
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	score	score
	m	(Lcz;Ljava/util/Collection;Ldfj;I)I	c	executeRemove
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	score	score
c	x	net/minecraft/advancement/AdvancementManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	advancements
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	dependents
	f	Lx$a;	e	listener
	m	()V	a	clear
	m	(Lw;)V	a	remove
		p	1	advancement	advancement
	m	(Luh;)Lw;	a	get
		p	1	id	id
	m	(Ljava/util/Map;)V	a	load
	m	(Ljava/util/Set;)V	a	removeAll
		p	1	advancements	advancements
	m	(Lx$a;)V	a	setListener
		p	1	listener	listener
	m	()Ljava/lang/Iterable;	b	getRoots
	m	()Ljava/util/Collection;	c	getAdvancements
c	x$a	net/minecraft/advancement/AdvancementManager$Listener
	m	()V	a	onClear
	m	(Lw;)V	a	onRootAdded
		p	1	root	root
	m	(Lw;)V	b	onRootRemoved
		p	1	root	root
	m	(Lw;)V	c	onDependentAdded
		p	1	dependent	dependent
	m	(Lw;)V	d	onDependentRemoved
		p	1	dependent	dependent
c	xa	net/minecraft/server/command/SeedCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
		p	0	dispatcher	dispatcher
		p	1	dedicated	dedicated
c	xb	net/minecraft/server/command/SetBlockCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcz;Lfu;Lec;Lxb$b;Ljava/util/function/Predicate;)I	a	execute
		p	0	source	source
		p	1	pos	pos
		p	2	block	block
		p	3	mode	mode
		p	4	condition	condition
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xb$a	net/minecraft/server/command/SetBlockCommand$Filter
	m	(Lctd;Lfu;Lec;Lzd;)Lec;	filter	filter
		p	1	box	box
		p	2	pos	pos
		p	3	block	block
		p	4	world	world
c	xb$b	net/minecraft/server/command/SetBlockCommand$Mode
c	xc	net/minecraft/server/dedicated/command/SetIdleTimeoutCommand
	m	(Lcz;I)I	a	execute
		p	0	source	source
		p	1	minutes	minutes
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xd	net/minecraft/server/command/SpawnPointCommand
	m	(Lcz;Ljava/util/Collection;Lfu;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	pos	pos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xe	net/minecraft/server/command/SetWorldSpawnCommand
	m	(Lcz;Lfu;)I	a	execute
		p	0	source	source
		p	1	pos	pos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xf	net/minecraft/server/command/SpectateCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	SPECTATE_SELF_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	NOT_SPECTATOR_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Laom;Lze;)I	a	execute
		p	0	source	source
		p	1	entity	entity
		p	2	player	player
c	xg	net/minecraft/server/command/SpreadPlayersCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	a	FAILED_TEAMS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	FAILED_ENTITIES_EXCEPTION
	m	(Ljava/util/Collection;)I	a	getPileCountRespectingTeams
		p	0	entities	entities
	m	(Lcz;Ldel;FFIZLjava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	center	center
		p	2	spreadDistance	spreadDistance
		p	3	maxRange	maxRange
	m	(Ldel;DLzd;Ljava/util/Random;DDDDI[Lxg$a;Z)V	a	spread
		p	0	center	center
		p	1	spreadDistance	spreadDistance
		p	3	world	world
		p	4	random	random
		p	5	minX	minX
		p	7	minZ	minZ
		p	9	maxX	maxX
		p	11	maxZ	maxZ
	m	(Ljava/util/Collection;Lzd;[Lxg$a;IZ)D	a	getMinDistance
		p	0	entities	entities
		p	1	world	world
		p	2	piles	piles
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Ljava/util/Random;IDDDD)[Lxg$a;	a	makePiles
		p	0	random	random
		p	1	count	count
		p	2	minX	minX
		p	4	minZ	minZ
		p	6	maxX	maxX
		p	8	maxZ	maxZ
c	xg$a	net/minecraft/server/command/SpreadPlayersCommand$Pile
	f	D	a	x
	f	D	b	z
	m	()V	a	normalize
	m	(DDDD)Z	a	clamp
		p	1	minX	minX
		p	3	minZ	minZ
		p	5	maxX	maxX
		p	7	maxZ	maxZ
	m	(Lbpg;I)I	a	getY
		p	1	blockView	blockView
	m	(Lxg$a;)D	a	getDistance
		p	1	other	other
	m	(Ljava/util/Random;DDDD)V	a	setPileLocation
		p	1	random	random
		p	2	minX	minX
		p	4	minZ	minZ
		p	6	maxX	maxX
		p	8	maxZ	maxZ
	m	()F	b	absolute
	m	(Lxg$a;)V	b	subtract
		p	1	other	other
	m	(Lbpg;I)Z	b	isSafe
		p	1	world	world
c	xh	net/minecraft/server/dedicated/command/StopCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xi	net/minecraft/server/command/StopSoundCommand
	m	(Lcz;Ljava/util/Collection;Lacm;Luh;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	category	category
		p	3	sound	sound
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xj	net/minecraft/server/command/SummonCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_POSITION_EXCEPTION
	m	(Lcz;Luh;Ldem;Lle;Z)I	a	execute
		p	0	source	source
		p	1	entity	entity
		p	2	pos	pos
		p	3	nbt	nbt
		p	4	initialize	initialize
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xk	net/minecraft/server/command/TagCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ADD_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	REMOVE_FAILED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;)I	a	executeList
		p	0	source	source
		p	1	targets	targets
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
		p	0	entities	entities
	m	(Lcz;Ljava/util/Collection;Ljava/lang/String;)I	a	executeAdd
		p	0	source	source
		p	1	targets	targets
		p	2	tag	tag
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/util/Collection;Ljava/lang/String;)I	b	executeRemove
		p	0	source	source
		p	1	targets	targets
		p	2	tag	tag
c	xl	net/minecraft/server/command/TeamCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ADD_DUPLICATE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ADD_LONG_NAME_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	EMPTY_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	OPTION_NAME_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	OPTION_COLOR_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	OPTION_FRIENDLY_FIRE_ALREADY_ENABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	OPTION_FRIENDLY_FIRE_ALREADY_DISABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	OPTION_SEE_FRIENDLY_INVISIBLES_ALREADY_ENABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	OPTION_SEE_FRIENDLY_INVISIBLES_ALREADY_DISABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	OPTION_NAMETAG_VISIBILITY_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	OPTION_DEATH_MESSAGE_VISIBILITY_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	l	OPTION_COLLISION_RULE_UNCHANGED_EXCEPTION
	m	(Lcz;Ldfk;Lmr;)I	a	executeModifyDisplayName
		p	0	source	source
		p	1	team	team
		p	2	displayName	displayName
	m	(Lcz;Ljava/lang/String;)I	a	executeAdd
		p	0	source	source
		p	1	team	team
	m	(Lcz;)I	a	executeListTeams
		p	0	source	source
	m	(Lcz;Ldfk;Ldfo$a;)I	a	executeModifyCollisionRule
		p	0	source	source
		p	1	team	team
		p	2	collisionRule	collisionRule
	m	(Lcz;Ljava/lang/String;Lmr;)I	a	executeAdd
		p	0	source	source
		p	1	team	team
		p	2	displayName	displayName
	m	(Lcz;Ldfk;Ljava/util/Collection;)I	a	executeJoin
		p	0	source	source
		p	1	team	team
		p	2	members	members
	m	(Lcz;Ljava/util/Collection;)I	a	executeLeave
		p	0	source	source
		p	1	members	members
	m	(Lcz;Ldfk;)I	a	executeEmpty
		p	0	source	source
		p	1	team	team
	m	(Lcz;Ldfk;Li;)I	a	executeModifyColor
		p	0	source	source
		p	1	team	team
		p	2	color	color
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ldfk;Ldfo$b;)I	a	executeModifyNametagVisibility
		p	0	source	source
		p	1	team	team
		p	2	visibility	visibility
	m	(Lcz;Ldfk;Z)I	a	executeModifySeeFriendlyInvisibles
		p	0	source	source
		p	1	team	team
		p	2	allowed	allowed
	m	(Lcz;Ldfk;)I	b	executeRemove
		p	0	source	source
		p	1	team	team
	m	(Lcz;Ldfk;Lmr;)I	b	executeModifyPrefix
		p	0	source	source
		p	1	team	team
		p	2	prefix	prefix
	m	(Lcz;Ldfk;Ldfo$b;)I	b	executeModifyDeathMessageVisibility
		p	0	source	source
		p	1	team	team
		p	2	visibility	visibility
	m	(Lcz;Ldfk;Z)I	b	executeModifyFriendlyFire
		p	0	source	source
		p	1	team	team
		p	2	allowed	allowed
	m	(Lcz;Ldfk;Lmr;)I	c	executeModifySuffix
		p	0	source	source
		p	1	team	team
		p	2	suffix	suffix
	m	(Lcz;Ldfk;)I	c	executeListMembers
		p	0	source	source
		p	1	team	team
c	xm	net/minecraft/server/command/TeamMsgCommand
	f	Lnb;	a	STYLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	NO_TEAM_EXCEPTION
	m	(Lcz;Lmr;)I	a	execute
		p	0	source	source
		p	1	message	message
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xn	net/minecraft/server/command/TeleportCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_POSITION_EXCEPTION
	m	(Lcz;Ljava/util/Collection;Lzd;Lej;Lej;Lxn$a;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	world	world
		p	3	location	location
		p	4	rotation	rotation
		p	5	facingLocation	facingLocation
	m	(Lcz;Ljava/util/Collection;Laom;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	destination	destination
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Laom;Lzd;DDDLjava/util/Set;FFLxn$a;)V	a	teleport
		p	0	source	source
		p	1	target	target
		p	2	world	world
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	movementFlags	movementFlags
		p	10	yaw	yaw
		p	11	pitch	pitch
		p	12	facingLocation	facingLocation
c	xn$a	net/minecraft/server/command/TeleportCommand$LookTarget
	f	Ldem;	a	targetPos
	f	Laom;	b	target
	f	Ldg$a;	c	targetAnchor
	m	(Ldem;)V	<init>	<init>
		p	1	targetPos	targetPos
	m	(Laom;Ldg$a;)V	<init>	<init>
		p	1	target	target
		p	2	targetAnchor	targetAnchor
	m	(Lcz;Laom;)V	a	look
		p	1	source	source
		p	2	entity	entity
c	xo	net/minecraft/server/command/TellRawCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	xp	net/minecraft/server/command/TimeCommand
	m	(Lcz;I)I	a	executeSet
		p	0	source	source
		p	1	time	time
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lzd;)I	a	getDayTime
		p	0	world	world
	m	(Lcz;I)I	b	executeAdd
		p	0	source	source
		p	1	time	time
	m	(Lcz;I)I	c	executeQuery
		p	0	source	source
		p	1	time	time
c	xq	net/minecraft/server/command/TitleCommand
	m	(Lcz;Ljava/util/Collection;III)I	a	executeTimes
		p	0	source	source
		p	1	targets	targets
		p	2	fadeIn	fadeIn
		p	3	stay	stay
		p	4	fadeOut	fadeOut
	m	(Lcz;Ljava/util/Collection;Lmr;Lqk$a;)I	a	executeTitle
		p	0	source	source
		p	1	targets	targets
		p	2	title	title
		p	3	type	type
	m	(Lcz;Ljava/util/Collection;)I	a	executeClear
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Ljava/util/Collection;)I	b	executeReset
		p	0	source	source
		p	1	targets	targets
c	xr	net/minecraft/server/command/TriggerCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_UNPRIMED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	FAILED_INVALID_EXCEPTION
	m	(Lcz;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
		p	0	source	source
		p	1	builder	builder
	m	(Lcz;Ldfl;)I	a	executeSimple
		p	0	source	source
		p	1	score	score
	m	(Lcz;Ldfl;I)I	a	executeAdd
		p	0	source	source
		p	1	score	score
		p	2	value	value
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lze;Ldfj;)Ldfl;	a	getScore
		p	0	player	player
		p	1	objective	objective
	m	(Lcz;Ldfl;I)I	b	executeSet
		p	0	source	source
		p	1	score	score
		p	2	value	value
c	xs	net/minecraft/server/command/WeatherCommand
	m	(Lcz;I)I	a	executeClear
		p	0	source	source
		p	1	duration	duration
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;I)I	b	executeRain
		p	0	source	source
		p	1	duration	duration
	m	(Lcz;I)I	c	executeThunder
		p	0	source	source
		p	1	duration	duration
c	xt	net/minecraft/server/dedicated/command/WhitelistCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_ON_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ALREADY_OFF_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ADD_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	REMOVE_FAILED_EXCEPTION
	m	(Lcz;Ljava/util/Collection;)I	a	executeAdd
		p	0	source	source
		p	1	targets	targets
	m	(Lcz;)I	a	executeReload
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;)I	b	executeOn
		p	0	source	source
	m	(Lcz;Ljava/util/Collection;)I	b	executeRemove
		p	0	source	source
		p	1	targets	targets
	m	(Lcz;)I	c	executeOff
		p	0	source	source
	m	(Lcz;)I	d	executeList
		p	0	source	source
c	xu	net/minecraft/server/command/WorldBorderCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	CENTER_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	SET_FAILED_NO_CHANGE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	SET_FAILED_SMALL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	SET_FAILED_BIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	WARNING_TIME_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	WARNING_DISTANCE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	DAMAGE_BUFFER_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	DAMAGE_AMOUNT_FAILED_EXCEPTION
	m	(Lcz;)I	a	executeGet
		p	0	source	source
	m	(Lcz;F)I	a	executeBuffer
		p	0	source	source
		p	1	distance	distance
	m	(Lcz;I)I	a	executeWarningTime
		p	0	source	source
		p	1	time	time
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;DJ)I	a	executeSet
		p	0	source	source
		p	1	distance	distance
		p	3	time	time
	m	(Lcz;Ldel;)I	a	executeCenter
		p	0	source	source
		p	1	pos	pos
	m	(Lcz;F)I	b	executeDamage
		p	0	source	source
		p	1	damagePerBlock	damagePerBlock
	m	(Lcz;I)I	b	executeWarningDistance
		p	0	source	source
		p	1	distance	distance
c	xv	net/minecraft/command/BlockDataObject
	f	Ljava/util/function/Function;	a	TYPE_FACTORY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_BLOCK_EXCEPTION
	f	Lcdl;	c	blockEntity
	f	Lfu;	d	pos
	m	(Lcdl;Lfu;)V	<init>	<init>
		p	1	blockEntity	blockEntity
		p	2	pos	pos
c	xw	net/minecraft/command/DataCommandObject
	m	(Lle;)V	a	setTag
		p	1	tag	tag
	m	(Ldn$h;DI)Lmr;	a	feedbackGet
		p	2	scale	scale
		p	4	result	result
	m	(Llu;)Lmr;	a	feedbackQuery
		p	1	tag	tag
	m	()Lle;	a	getTag
	m	()Lmr;	b	feedbackModify
c	xx	net/minecraft/server/command/DataCommand
	f	Ljava/util/List;	a	OBJECT_TYPE_FACTORIES
	f	Ljava/util/List;	b	TARGET_OBJECT_TYPES
	f	Ljava/util/List;	c	SOURCE_OBJECT_TYPES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	MERGE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	GET_INVALID_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	GET_UNKNOWN_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	GET_MULTIPLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	MODIFY_EXPECTED_LIST_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	MODIFY_EXPECTED_OBJECT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	MODIFY_INVALID_INDEX_EXCEPTION
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addModifyArgument
		p	0	subArgumentAdder	subArgumentAdder
	m	(Lcz;Lxw;Ldn$h;)I	a	executeRemove
		p	0	source	source
		p	1	object	object
		p	2	path	path
	m	(Lcom/mojang/brigadier/context/CommandContext;Lxx$c;Lxx$a;Ljava/util/List;)I	a	executeModify
		p	0	context	context
		p	1	objectType	objectType
		p	2	modifier	modifier
		p	3	tags	tags
	m	(Lcz;Lxw;)I	a	executeGet
		p	0	source	source
		p	1	object	object
	m	(Lcz;Lxw;Ldn$h;D)I	a	executeGet
		p	0	source	source
		p	1	object	object
		p	2	path	path
		p	3	scale	scale
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcz;Lxw;Lle;)I	a	executeMerge
		p	0	source	source
		p	1	object	object
		p	2	tag	tag
	m	(Ldn$h;Lxw;)Llu;	a	getTag
		p	0	path	path
		p	1	object	object
	m	(ILle;Ldn$h;Ljava/util/List;)I	a	executeInsert
		p	0	integer	integer
		p	1	sourceTag	sourceTag
		p	2	path	path
		p	3	tags	tags
	m	(Lcz;Lxw;Ldn$h;)I	b	executeGet
		p	0	source	source
		p	1	object	object
		p	2	path	path
c	xx$a	net/minecraft/server/command/DataCommand$ModifyOperation
	m	(Lcom/mojang/brigadier/context/CommandContext;Lle;Ldn$h;Ljava/util/List;)I	modify	modify
		p	1	context	context
		p	2	sourceTag	sourceTag
		p	3	path	path
		p	4	tags	tags
c	xx$b	net/minecraft/server/command/DataCommand$ModifyArgumentCreator
	m	(Lxx$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	create	create
		p	1	modifier	modifier
c	xx$c	net/minecraft/server/command/DataCommand$ObjectType
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lxw;	a	getObject
		p	1	context	context
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addArgumentsToBuilder
		p	1	argument	argument
		p	2	argumentAdder	argumentAdder
c	xy	net/minecraft/command/EntityDataObject
	f	Ljava/util/function/Function;	a	TYPE_FACTORY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_ENTITY_EXCEPTION
	f	Laom;	c	entity
	m	(Laom;)V	<init>	<init>
		p	1	entity	entity
c	xz	net/minecraft/command/StorageDataObject
	f	Ljava/util/function/Function;	a	TYPE_FACTORY
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGESTION_PROVIDER
	f	Lczy;	c	storage
	f	Luh;	d	id
	m	(Lczy;Luh;)V	<init>	<init>
		p	1	storage	storage
		p	2	id	id
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lczy;	b	of
c	y	net/minecraft/advancement/AdvancementProgress
	f	Ljava/util/Map;	a	criteriaProgresses
	f	[[Ljava/lang/String;	b	requirements
	m	(Ljava/util/Map;[[Ljava/lang/String;)V	a	init
		p	1	criteria	criteria
		p	2	requirements	requirements
	m	(Ly;)I	a	compareTo
	m	()Z	a	isDone
	m	(Ljava/lang/String;)Z	a	obtain
		p	1	name	name
	m	(Lmg;)V	a	toPacket
		p	1	buf	buf
	m	()Z	b	isAnyObtained
	m	(Ljava/lang/String;)Z	b	reset
		p	1	name	name
	m	(Lmg;)Ly;	b	fromPacket
		p	0	buf	buf
	m	(Ljava/lang/String;)Lac;	c	getCriterionProgress
		p	1	name	name
	m	()F	c	getProgressBarPercentage
	m	()Ljava/lang/String;	d	getProgressBarFraction
	m	()Ljava/lang/Iterable;	e	getUnobtainedCriteria
	m	()Ljava/lang/Iterable;	f	getObtainedCriteria
	m	()Ljava/util/Date;	g	getEarliestProgressObtainDate
	m	()I	h	countObtainedRequirements
c	y$a	net/minecraft/advancement/AdvancementProgress$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ly;	a	deserialize
	m	(Ly;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	yc	net/minecraft/server/dedicated/DedicatedPlayerManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lyd;Lgm$a;Ldai;)V	<init>	<init>
		p	1	server	server
		p	2	tracker	tracker
		p	3	saveHandler	saveHandler
	m	()V	A	saveOpList
	m	()V	B	loadWhitelist
	m	()V	C	saveWhitelist
	m	()Lyd;	b	getServer
	m	()V	v	saveIpBanList
	m	()V	w	saveUserBanList
	m	()V	x	loadIpBanList
	m	()V	y	loadUserBanList
	m	()V	z	loadOpList
c	yd	net/minecraft/server/dedicated/MinecraftDedicatedServer
	f	Lorg/apache/logging/log4j/Logger;	j	LOGGER
	f	Ljava/util/regex/Pattern;	k	SHA1_PATTERN
	f	Ljava/util/List;	l	commandQueue
	f	Lace;	m	queryResponseHandler
	f	Lacb;	n	rconCommandOutput
	f	Lacg;	o	rconServer
	f	Lyf;	p	propertiesLoader
	f	Lyj;	q	gui
	m	(Ljava/lang/String;Lcz;)V	a	enqueueCommand
	m	()Ljava/lang/String;	aY	createResourcePackHash
	m	()V	aZ	executeQueuedCommands
	m	()Lyc;	ba	getPlayerManager
	m	()V	bb	createGui
	m	()Z	bc	convertData
	m	()J	bd	getMaxTickTime
	m	()V	bm	sleepFiveSeconds
	m	(Z)V	j	setUseWhitelist
c	ye	net/minecraft/server/dedicated/ServerPropertiesHandler
	f	Z	A	spawnMonsters
	f	Z	B	snooperEnabled
	f	Z	C	useNativeTransport
	f	Z	D	enableCommandBlock
	f	I	E	spawnProtection
	f	I	F	opPermissionLevel
	f	I	G	functionPermissionLevel
	f	J	H	maxTickTime
	f	I	I	viewDistance
	f	I	J	maxPlayers
	f	I	K	networkCompressionThreshold
	f	Z	L	broadcastRconToOps
	f	Z	M	broadcastConsoleToOps
	f	I	N	maxWorldSize
	f	Z	O	syncChunkWrites
	f	Z	P	enableJmxMonitoring
	f	Z	Q	enableStatus
	f	I	R	entityBroadcastRangePercentage
	f	Lyh$a;	S	playerIdleTimeout
	f	Lyh$a;	T	whiteList
	f	Z	a	onlineMode
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	spawnAnimals
	f	Z	e	spawnNpcs
	f	Z	f	pvp
	f	Z	g	allowFlight
	f	Ljava/lang/String;	h	resourcePack
	f	Ljava/lang/String;	i	motd
	f	Z	j	forceGameMode
	f	Z	k	enforceWhitelist
	f	Land;	l	difficulty
	f	Lbpy;	m	gameMode
	f	Ljava/lang/String;	n	levelName
	f	I	o	serverPort
	f	I	p	maxBuildHeight
	f	Ljava/lang/Boolean;	q	announcePlayerAchievements
	f	Z	r	enableQuery
	f	I	s	queryPort
	f	Z	t	enableRcon
	f	I	u	rconPort
	f	Ljava/lang/String;	v	rconPassword
	f	Ljava/lang/String;	w	resourcePackHash
	f	Ljava/lang/String;	x	resourcePackSha1
	f	Z	y	hardcore
	f	Z	z	allowNether
	m	(Ljava/nio/file/Path;)Lye;	a	load
		p	0	path	path
	m	(Ljava/util/Properties;)Lye;	a	create
c	yf	net/minecraft/server/dedicated/ServerPropertiesLoader
	f	Ljava/nio/file/Path;	a	path
	f	Lye;	b	propertiesHandler
	m	(Ljava/util/function/UnaryOperator;)Lyf;	a	apply
	m	()Lye;	a	getPropertiesHandler
	m	()V	b	store
c	yg	net/minecraft/server/dedicated/DedicatedServerWatchdog
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lyd;	b	server
	f	J	c	maxTickTime
	m	(Lyd;)V	<init>	<init>
		p	1	server	server
	m	()V	a	shutdown
c	yh	net/minecraft/server/dedicated/AbstractPropertiesHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Properties;	b	properties
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1	properties	properties
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getDeprecated
		p	1	key	key
		p	2	stringifier	stringifier
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1	key	key
		p	2	parser	parser
		p	3	stringifier	stringifier
		p	4	fallback	fallback
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	transformedParseInt
		p	1	key	key
		p	2	transformer	transformer
		p	3	fallback	fallback
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getString
		p	1	key	key
		p	2	fallback	fallback
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getDeprecatedString
		p	1	key	key
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	combineParser
		p	0	intParser	intParser
		p	1	fallbackParser	fallbackParser
	m	(Ljava/lang/String;I)I	a	getInt
		p	1	key	key
		p	2	fallback	fallback
	m	(Ljava/lang/String;Z)Z	a	parseBoolean
		p	1	key	key
		p	2	fallback	fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1	key	key
		p	2	parser	parser
		p	3	parsedTransformer	parsedTransformer
		p	4	stringifier	stringifier
		p	5	fallback	fallback
	m	(Ljava/lang/String;J)J	a	parseLong
		p	1	key	key
		p	2	fallback	fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1	key	key
		p	2	parser	parser
		p	3	fallback	fallback
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberParser
		p	0	parser	parser
	m	()Ljava/util/Properties;	a	copyProperties
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	loadProperties
		c	Loads a map of properties from the {@code path}.
		p	0	path	path
	m	(Ljava/lang/String;Z)Lyh$a;	b	booleanAccessor
		p	1	key	key
		p	2	fallback	fallback
	m	(Ljava/lang/String;I)Lyh$a;	b	intAccessor
		p	1	key	key
		p	2	fallback	fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lyh$a;	b	accessor
		p	1	key	key
		p	2	parser	parser
		p	3	fallback	fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lyh$a;	b	accessor
		p	1	key	key
		p	2	parser	parser
		p	3	stringifier	stringifier
		p	4	fallback	fallback
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getDeprecatedBoolean
		p	1	key	key
	m	(Ljava/util/Properties;)Lyh;	b	create
		c	Creates another property handler with the same type as this one from the\npassed new map of properties.
		p	1	properties	properties
	m	(Ljava/nio/file/Path;)V	c	saveProperties
		c	Saves the properties of this handler to the {@code path}.
		p	1	path	path
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringValue
		p	1	key	key
c	yh$a	net/minecraft/server/dedicated/AbstractPropertiesHandler$PropertyAccessor
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	stringifier
	m	(Lyh;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V	<init>	<init>
		p	2	key	key
		p	3	value	value
		p	4	stringifier	stringifier
	m	(Ljava/lang/Object;)Lyh;	a	set
		c	Returns a new property handler with another map of property in which\nthe property handled by this accessor is updated.\n\n<p>This method does not mutate the original property where this accessor\nis from.
		p	1	value	value
c	yj	net/minecraft/server/dedicated/gui/DedicatedServerGui
	f	Ljava/awt/Font;	a	FONT_MONOSPACE
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lyd;	c	server
	f	Ljava/lang/Thread;	d	consoleUpdateThread
	f	Ljava/util/Collection;	e	stopTasks
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	f	stopped
	m	(Lyd;)V	<init>	<init>
		p	1	server	server
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	appendToConsole
		p	1	textArea	textArea
		p	2	scrollPane	scrollPane
	m	(Ljava/lang/Runnable;)V	a	addStopTask
		p	1	task	task
	m	()V	a	start
	m	(Lyd;)Lyj;	a	create
		p	0	server	server
	m	()V	b	stop
	m	()Ljavax/swing/JComponent;	c	createStatsPanel
	m	()Ljavax/swing/JComponent;	d	createPlaysPanel
	m	()Ljavax/swing/JComponent;	e	createLogPanel
	m	()V	f	runStopTasks
c	yk	net/minecraft/server/dedicated/gui/PlayerListGui
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tick
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	()V	a	tick
c	yl	net/minecraft/server/dedicated/gui/PlayerStatsGui
	f	Ljava/text/DecimalFormat;	a	AVG_TICK_FORMAT
	f	[I	b	memoryUsePercentage
	f	I	c	memoryUsePercentagePos
	f	[Ljava/lang/String;	d	lines
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	([J)D	a	average
	m	()V	a	stop
	m	()V	b	update
c	yn	net/minecraft/client/render/BlockBreakingInfo
	f	I	a	actorNetworkId
	f	Lfu;	b	pos
	f	I	c	stage
	f	I	d	lastUpdateTick
	m	(ILfu;)V	<init>	<init>
		p	1	breakingEntityId	breakingEntityId
		p	2	pos	pos
	m	(Lyn;)I	a	compareTo
	m	(I)V	a	setStage
		p	1	stage	stage
	m	()Lfu;	b	getPos
	m	(I)V	b	setLastUpdateTick
		p	1	lastUpdateTick	lastUpdateTick
	m	()I	c	getStage
	m	()I	d	getLastUpdateTick
c	yo	net/minecraft/server/world/ChunkHolder
	f	Lcom/mojang/datafixers/util/Either;	a	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	b	UNLOADED_CHUNK_FUTURE
	f	Lcom/mojang/datafixers/util/Either;	c	UNLOADED_WORLD_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	d	UNLOADED_WORLD_CHUNK_FUTURE
	f	Ljava/util/List;	e	CHUNK_STATUSES
	f	[Lyo$b;	f	LEVEL_TYPES
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	g	futuresByStatus
	f	Ljava/util/concurrent/CompletableFuture;	h	borderFuture
	f	Ljava/util/concurrent/CompletableFuture;	i	tickingFuture
	f	Ljava/util/concurrent/CompletableFuture;	j	entityTickingFuture
	f	Ljava/util/concurrent/CompletableFuture;	k	future
	f	I	l	lastTickLevel
	f	I	m	level
	f	I	n	completedLevel
	f	Lbph;	o	pos
	f	[S	p	blockUpdatePositions
	f	I	q	blockUpdateCount
	f	I	r	sectionsNeedingUpdateMask
	f	I	s	blockLightUpdateBits
	f	I	t	skyLightUpdateBits
	f	Lcwr;	u	lightingProvider
	f	Lyo$c;	v	levelUpdateListener
	f	Lyo$d;	w	playersWatchingChunkProvider
	f	Z	x	ticking
	m	(Lbph;ILcwr;Lyo$c;Lyo$d;)V	<init>	<init>
		p	1	pos	pos
		p	2	level	level
		p	3	lightingProvider	lightingProvider
		p	4	levelUpdateListener	levelUpdateListener
		p	5	playersWatchingChunkProvider	playersWatchingChunkProvider
	m	(I)V	a	setLevel
		p	1	level	level
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingFuture
	m	(Lyp;)V	a	tick
		p	1	chunkStorage	chunkStorage
	m	(Lchc;)Ljava/util/concurrent/CompletableFuture;	a	getFuture
		p	1	leastStatus	leastStatus
	m	(III)V	a	markForBlockUpdate
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	updateFuture
		p	1	newChunkFuture	newChunkFuture
	m	(Lchc;Lyp;)Ljava/util/concurrent/CompletableFuture;	a	createFuture
		p	1	targetStatus	targetStatus
		p	2	chunkStorage	chunkStorage
	m	(Lchj;)V	a	flushUpdates
	m	(Lbqb;Lfu;)V	a	sendBlockEntityUpdatePacket
		p	1	world	world
		p	2	pos	pos
	m	(Lni;Z)V	a	sendPacketToPlayersWatching
		p	2	onlyOnWatchDistanceEdge	onlyOnWatchDistanceEdge
	m	(Lbqi;I)V	a	markForLightUpdate
		p	1	type	type
		p	2	y	y
	m	(Lchc;)Ljava/util/concurrent/CompletableFuture;	b	getNowFuture
		p	1	leastStatus	leastStatus
	m	(I)Lchc;	b	getTargetGenerationStatus
		p	0	level	level
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingFuture
	m	(I)Lyo$b;	c	getLevelType
		p	0	distance	distance
	m	()Ljava/util/concurrent/CompletableFuture;	c	getBorderFuture
	m	()Lchj;	d	getWorldChunk
	m	(I)V	d	setCompletedLevel
		p	1	level	level
	m	()Lcgy;	f	getCompletedChunk
	m	()Ljava/util/concurrent/CompletableFuture;	g	getFuture
	m	()Lyo$b;	h	getLevelType
	m	()Lbph;	i	getPos
	m	()I	j	getLevel
	m	()I	k	getCompletedLevel
	m	()Z	l	isTicking
	m	()V	m	updateTickingStatus
c	yo$a	net/minecraft/server/world/ChunkHolder$Unloaded
	f	Lyo$a;	b	INSTANCE
c	yo$b	net/minecraft/server/world/ChunkHolder$LevelType
	m	(Lyo$b;)Z	a	isAfter
		p	1	levelType	levelType
c	yo$c	net/minecraft/server/world/ChunkHolder$LevelUpdateListener
	m	(Lbph;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	a	updateLevel
		p	1	pos	pos
		p	2	levelGetter	levelGetter
		p	3	targetLevel	targetLevel
		p	4	levelSetter	levelSetter
c	yo$d	net/minecraft/server/world/ChunkHolder$PlayersWatchingChunkProvider
	m	(Lbph;Z)Ljava/util/stream/Stream;	a	getPlayersWatchingChunk
		p	1	chunkPos	chunkPos
		p	2	onlyOnWatchDistanceEdge	onlyOnWatchDistanceEdge
c	yp	net/minecraft/server/world/ThreadedAnvilChunkStorage
	f	I	B	watchDistance
	f	I	a	MAX_LEVEL
		c	Specifies the maximum ticket level a chunk can be before a chunk's {@link net.minecraft.server.world.ChunkHolder.LevelType} is {@link net.minecraft.server.world.ChunkHolder.LevelType#BORDER}.
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	d	currentChunkHolders
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	e	chunkHolders
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	loadedChunks
	f	Lzd;	h	world
	f	Lzg;	i	serverLightingProvider
	f	Lamn;	j	mainThreadExecutor
	f	Lcha;	k	chunkGenerator
	f	Ljava/util/function/Supplier;	l	persistentStateManagerFactory
	f	Laxz;	m	pointOfInterestStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	n	unloadedChunks
	f	Z	o	chunkHolderListDirty
	f	Lyr;	p	chunkTaskPrioritySystem
	f	Lamp;	q	worldGenExecutor
	f	Lamp;	r	mainExecutor
	f	Lzm;	s	worldGenerationProgressListener
	f	Lyp$a;	t	ticketManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	u	totalChunksLoadedCount
	f	Lcva;	v	structureManager
	f	Ljava/io/File;	w	saveDir
	f	Lyx;	x	playerChunkWatchingManager
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	y	entityTrackers
	m	(Lzd;Ldae$a;Lcom/mojang/datafixers/DataFixer;Lcva;Ljava/util/concurrent/Executor;Lamn;Lchl;Lcha;Lzm;Ljava/util/function/Supplier;IZ)V	<init>	<init>
		p	3	dataFixer	dataFixer
		p	5	workerExecutor	workerExecutor
		p	6	mainThreadExecutor	mainThreadExecutor
		p	7	chunkProvider	chunkProvider
		p	8	chunkGenerator	chunkGenerator
		p	9	worldGenerationProgressListener	worldGenerationProgressListener
	m	(Lbph;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	createChunkRegionFuture
		p	1	centerChunk	centerChunk
		p	2	margin	margin
		p	3	distanceToStatus	distanceToStatus
	m	()Lzg;	a	getLightProvider
	m	(Lze;Z)V	a	handlePlayerAddedOrRemoved
		p	1	player	player
		p	2	added	added
	m	(Lchc;I)Lchc;	a	getRequiredStatusForGeneration
		p	1	centerChunkTargetStatus	centerChunkTargetStatus
		p	2	distance	distance
	m	(Lbph;Laom;)D	a	getSquaredDistance
		p	0	pos	pos
		p	1	entity	entity
	m	(Lyo;Lchc;)Ljava/util/concurrent/CompletableFuture;	a	createChunkFuture
	m	(Lbph;II)I	a	getChebyshevDistance
		p	0	pos	pos
		p	1	x	x
		p	2	z	z
	m	(Lyo;)Ljava/util/concurrent/CompletableFuture;	a	createTickingFuture
	m	(Z)V	a	save
		p	1	flush	flush
	m	(Lze;)V	a	updateCameraPosition
		p	1	player	player
	m	(Lze;[Lni;Lchj;)V	a	sendChunkDataPackets
		p	1	player	player
		p	2	packets	packets
		p	3	chunk	chunk
	m	(Laom;)V	a	loadEntity
	m	(Lcgy;)Z	a	save
	m	(Laom;Lni;)V	a	sendToOtherNearbyPlayers
		p	1	entity	entity
		p	2	packet	packet
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String;	a	getFutureStatus
	m	(J)Lyo;	a	getCurrentChunkHolder
		p	1	pos	pos
	m	(I)V	a	setViewDistance
		p	1	watchDistance	watchDistance
	m	(JILyo;I)Lyo;	a	setLevel
		p	1	pos	pos
		p	3	level	level
		p	4	holder	holder
	m	(Lze;Lbph;[Lni;ZZ)V	a	sendWatchPackets
		p	1	player	player
		p	2	pos	pos
		p	3	packets	packets
		p	4	withinMaxWatchDistance	withinMaxWatchDistance
		p	5	withinViewDistance	withinViewDistance
	m	(JLyo;)V	a	tryUnloadChunk
		p	1	pos	pos
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Ljava/io/Writer;)V	a	dump
	m	(Lbph;Lze;Z)I	b	getChebyshevDistance
		p	0	pos	pos
		p	1	player	player
		p	2	useCameraPosition	useCameraPosition
	m	(Lyo;)Ljava/util/concurrent/CompletableFuture;	b	createBorderFuture
	m	(Laom;)V	b	unloadEntity
	m	(Lbph;)Ljava/util/concurrent/CompletableFuture;	b	createEntityTickingChunkFuture
		p	1	pos	pos
	m	(J)Lyo;	b	getChunkHolder
		p	1	pos	pos
	m	()Z	b	updateHolderMap
	m	(Lze;)Z	b	doesNotGenerateChunks
		p	1	player	player
	m	(Laom;Lni;)V	b	sendToNearbyPlayers
		p	1	entity	entity
		p	2	packet	packet
	m	(Lyo;Lchc;)Ljava/util/concurrent/CompletableFuture;	b	generateChunk
	m	(Ljava/util/function/BooleanSupplier;)V	b	unloadChunks
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lyo;)Ljava/util/concurrent/CompletableFuture;	c	convertToFullChunk
	m	(Lbph;)V	c	releaseLightTicket
		p	1	pos	pos
	m	()I	c	getTotalChunksLoadedCount
	m	(J)Ljava/util/function/IntSupplier;	c	getCompletedLevelSupplier
		p	1	pos	pos
	m	()I	d	getLoadedChunkCount
	m	(Lbph;)Z	d	isTooFarFromPlayersToSpawnMobs
	m	()Lyp$a;	e	getTicketManager
	m	()Ljava/lang/Iterable;	f	entryIterator
	m	(Lbph;)Ljava/util/concurrent/CompletableFuture;	f	loadChunk
		p	1	pos	pos
	m	()V	g	tickPlayerMovement
	m	()Laxz;	h	getPointOfInterestStorage
	m	(Lbph;)Lle;	i	getUpdatedChunkTag
		p	1	pos	pos
c	yp$a	net/minecraft/server/world/ThreadedAnvilChunkStorage$TicketManager
	m	(Lyp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	workerExecutor	workerExecutor
		p	2	mainThreadExecutor	mainThreadExecutor
c	yp$b	net/minecraft/server/world/ThreadedAnvilChunkStorage$EntityTracker
	f	Lzc;	b	entry
	f	Laom;	c	entity
	f	I	d	maxDistance
	f	Lgo;	e	lastCameraPosition
	f	Ljava/util/Set;	f	playersTracking
	m	(Lyp;Laom;IIZ)V	<init>	<init>
		p	2	maxDistance	maxDistance
		p	3	tickInterval	tickInterval
	m	()V	a	stopTracking
	m	(Ljava/util/List;)V	a	updateCameraPosition
		p	1	players	players
	m	(Lni;)V	a	sendToOtherNearbyPlayers
		p	1	packet	packet
	m	(Lze;)V	a	stopTracking
	m	(I)I	a	adjustTrackingDistance
		p	1	initialDistance	initialDistance
	m	(Lni;)V	b	sendToNearbyPlayers
		p	1	packet	packet
	m	()I	b	getMaxTrackDistance
	m	(Lze;)V	b	updateCameraPosition
		p	1	player	player
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	yq	net/minecraft/server/world/LevelPrioritizedQueue
	f	I	a	LEVEL_COUNT
	f	Ljava/util/List;	b	levelToPosToElements
	f	I	c	firstNonEmptyLevel
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	chunkPositions
	f	I	f	maxSize
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	name	name
		p	2	maxSize	maxSize
	m	(Ljava/util/Optional;JI)V	a	add
		p	1	element	element
		p	2	pos	pos
		p	4	level	level
	m	(ILbph;I)V	a	updateLevel
		p	1	fromLevel	fromLevel
		p	2	pos	pos
		p	3	toLevel	toLevel
	m	(JZ)V	a	clearPosition
		p	1	pos	pos
		p	3	includePresent	includePresent
	m	(J)Ljava/lang/Runnable;	a	createPositionAdder
		p	1	pos	pos
	m	()Ljava/util/stream/Stream;	a	poll
c	yr	net/minecraft/server/world/ChunkTaskPrioritySystem
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	queues
	f	Ljava/util/Set;	c	actors
	f	Lamq;	d	sorter
	m	(Ljava/util/List;Ljava/util/concurrent/Executor;I)V	<init>	<init>
		p	1	actors	actors
		p	2	executor	executor
		p	3	maxQueues	maxQueues
	m	(Lyo;Ljava/lang/Runnable;)Lyr$a;	a	createMessage
		p	0	holder	holder
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lyr$a;	a	createMessage
		p	0	runnable	runnable
		p	1	pos	pos
		p	3	lastLevelUpdatedToProvider	lastLevelUpdatedToProvider
	m	(Lyq;Lamp;)V	a	method_17630
		p	2	actor	actor
	m	(Lamp;JLjava/lang/Runnable;Z)V	a	sort
	m	(Lamp;)Lamp;	a	createSorterExecutor
		p	1	executor	executor
	m	(Ljava/lang/Runnable;JZ)Lyr$b;	a	createSorterMessage
		p	0	runnable	runnable
		p	1	pos	pos
	m	(Lamp;Z)Lamp;	a	createExecutor
		p	1	executor	executor
	m	()Ljava/lang/String;	a	getDebugString
	m	(Lamp;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V	a	execute
		p	1	actor	actor
		p	5	lastLevelUpdatedToProvider	lastLevelUpdatedToProvider
	m	(Lamp;)Lyq;	b	getQueue
		p	1	actor	actor
c	yr$a	net/minecraft/server/world/ChunkTaskPrioritySystem$Task
	f	Ljava/util/function/Function;	a	function
	f	J	b	pos
	f	Ljava/util/function/IntSupplier;	c	lastLevelUpdatedToProvider
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V	<init>	<init>
		p	1	function	function
		p	2	pos	pos
		p	4	lastLevelUpdatedToProvider	lastLevelUpdatedToProvider
c	yr$b	net/minecraft/server/world/ChunkTaskPrioritySystem$SorterMessage
	f	Ljava/lang/Runnable;	a	runnable
	f	J	b	pos
	m	(Ljava/lang/Runnable;JZ)V	<init>	<init>
		p	1	runnable	runnable
		p	2	pos	pos
c	ys	net/minecraft/world/ChunkPosDistanceLevelPropagator
	m	(J)I	b	getInitialLevel
		p	1	id	id
	m	(JIZ)V	b	updateLevel
		p	1	chunkPos	chunkPos
		p	3	distance	distance
		p	4	decrease	decrease
c	yt	net/minecraft/util/math/ColumnPos
	f	I	a	x
	f	I	b	z
	m	(Lfu;)V	<init>	<init>
		p	1	pos	pos
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
c	yu	net/minecraft/server/network/DemoServerPlayerInteractionManager
	f	Z	c	sentHelp
	f	Z	d	demoEnded
	f	I	e	reminderTicks
	f	I	f	tick
	m	()V	f	sendDemoReminder
c	yv	net/minecraft/server/world/ChunkTicketManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	NEARBY_PLAYER_TICKET_LEVEL
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	playersByChunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	d	ticketsByPosition
	f	Lyv$a;	e	distanceFromTicketTracker
	f	Lyv$b;	f	distanceFromNearestPlayerTracker
	f	Lyv$c;	g	nearbyChunkTicketUpdater
	f	Ljava/util/Set;	h	chunkHolders
	f	Lyr;	i	levelUpdateListener
	f	Lamp;	j	playerTicketThrottler
	f	Lamp;	k	playerTicketThrottlerSorter
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	l	chunkPositions
	f	Ljava/util/concurrent/Executor;	m	mainThreadExecutor
	f	J	n	age
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	workerExecutor	workerExecutor
		p	2	mainThreadExecutor	mainThreadExecutor
	m	(Lbph;Z)V	a	setChunkForced
		p	1	pos	pos
		p	2	forced	forced
	m	(JLzh;)V	a	addTicket
		p	1	position	position
		p	3	ticket	ticket
	m	(Lgo;Lze;)V	a	handleChunkEnter
		p	1	pos	pos
		p	2	player	player
	m	(Lzi;Lbph;ILjava/lang/Object;)V	a	addTicketWithLevel
		p	1	type	type
		p	2	pos	pos
		p	3	level	level
		p	4	argument	argument
	m	(J)Z	a	isUnloaded
		p	1	pos	pos
	m	(I)V	a	setWatchDistance
		p	1	viewDistance	viewDistance
	m	(JILyo;I)Lyo;	a	setLevel
		p	1	pos	pos
		p	3	level	level
		p	4	holder	holder
	m	(Lyp;)Z	a	tick
		p	1	chunkStorage	chunkStorage
	m	()V	a	purge
	m	(Laeg;)I	a	getLevel
	m	(Lgo;Lze;)V	b	handleChunkLeave
		p	1	pos	pos
		p	2	player	player
	m	(Lzi;Lbph;ILjava/lang/Object;)V	b	removeTicketWithLevel
		p	1	type	type
		p	2	pos	pos
		p	3	level	level
		p	4	argument	argument
	m	(JLzh;)V	b	removeTicket
		p	1	pos	pos
		p	3	ticket	ticket
	m	(J)Lyo;	b	getChunkHolder
		p	1	pos	pos
	m	()I	b	getSpawningChunkCount
	m	(J)Ljava/lang/String;	c	getTicket
		p	1	pos	pos
	m	(Lzi;Lbph;ILjava/lang/Object;)V	c	addTicket
		p	1	type	type
		p	2	pos	pos
		p	3	radius	radius
		p	4	argument	argument
	m	()Ljava/lang/String;	c	toDumpString
	m	(Lzi;Lbph;ILjava/lang/Object;)V	d	removeTicket
		p	1	type	type
		p	2	pos	pos
		p	3	radius	radius
		p	4	argument	argument
	m	(J)Laeg;	e	getTicketSet
		p	1	position	position
c	yv$a	net/minecraft/server/world/ChunkTicketManager$TicketDistanceLevelPropagator
	m	(I)I	a	update
		p	1	distance	distance
c	yv$b	net/minecraft/server/world/ChunkTicketManager$DistanceFromNearestPlayerTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	distanceFromNearestPlayer
	f	I	b	maxDistance
	m	(Lyv;I)V	<init>	<init>
		p	1	maxDistance	maxDistance
	m	()V	a	updateLevels
	m	(JII)V	a	onDistanceChange
		p	1	pos	pos
		p	3	oldDistance	oldDistance
		p	4	distance	distance
	m	(J)Z	d	isPlayerInChunk
		p	1	chunkPos	chunkPos
c	yv$c	net/minecraft/server/world/ChunkTicketManager$NearbyChunkTicketUpdater
	f	I	e	watchDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	f	distances
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	positionsAffected
	m	(I)V	a	setWatchDistance
		p	1	watchDistance	watchDistance
	m	(JIZZ)V	a	updateTicket
		p	1	pos	pos
		p	3	distance	distance
		p	4	oldWithinViewDistance	oldWithinViewDistance
		p	5	withinViewDistance	withinViewDistance
	m	(I)Z	c	isWithinViewDistance
		p	1	distance	distance
c	yx	net/minecraft/server/world/PlayerChunkWatchingManager
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	watchingPlayers
	m	(JJLze;)V	a	movePlayer
		p	1	prevPos	prevPos
		p	3	currentPos	currentPos
	m	(JLze;)V	a	remove
	m	(JLze;Z)V	a	add
		p	4	watchDisabled	watchDisabled
	m	(Lze;)V	a	disableWatch
	m	(J)Ljava/util/stream/Stream;	a	getPlayersWatchingChunk
	m	(Lze;)V	b	enableWatch
	m	(Lze;)Z	d	isWatchDisabled
c	yy	net/minecraft/server/network/SpawnLocating
	m	(Lzd;Lbph;Z)Lfu;	a	findServerSpawnPoint
		p	0	world	world
		p	1	chunkPos	chunkPos
		p	2	validSpawnNeeded	validSpawnNeeded
	m	(Lzd;IIZ)Lfu;	a	findOverworldSpawn
		p	0	world	world
		p	1	x	x
		p	2	z	z
		p	3	validSpawnNeeded	validSpawnNeeded
c	yz	net/minecraft/world/SectionDistanceLevelPropagator
	m	(J)I	b	getInitialLevel
		p	1	id	id
	m	(JIZ)V	b	update
		p	1	id	id
		p	3	level	level
		p	4	decrease	decrease
c	z	net/minecraft/advancement/AdvancementRewards
	f	Lz;	a	NONE
	f	I	b	experience
	f	[Luh;	c	loot
	f	[Luh;	d	recipes
	f	Lcw$a;	e	function
	m	(I[Luh;[Luh;Lcw$a;)V	<init>	<init>
		p	1	experience	experience
		p	2	loot	loot
		p	3	recipes	recipes
		p	4	function	function
	m	(Lcom/google/gson/JsonObject;)Lz;	a	fromJson
		p	0	json	json
	m	(Lze;)V	a	apply
		p	1	player	player
	m	()Lcom/google/gson/JsonElement;	b	toJson
c	z$a	net/minecraft/advancement/AdvancementRewards$Builder
	f	I	a	experience
	f	Ljava/util/List;	b	loot
	f	Ljava/util/List;	c	recipes
	f	Luh;	d	function
	m	()Lz;	a	build
	m	(I)Lz$a;	a	experience
		p	0	experience	experience
	m	(I)Lz$a;	b	setExperience
		p	1	experience	experience
	m	(Luh;)Lz$a;	c	recipe
		p	0	recipe	recipe
	m	(Luh;)Lz$a;	d	addRecipe
		p	1	recipe	recipe
c	za	net/minecraft/entity/boss/ServerBossBar
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
	m	(Lmr;Lamw$a;Lamw$b;)V	<init>	<init>
		p	1	displayName	displayName
		p	2	color	color
		p	3	style	style
	m	(Lny$a;)V	a	sendPacket
		p	1	type	type
	m	(Lze;)V	a	addPlayer
		p	1	player	player
	m	(Lze;)V	b	removePlayer
		p	1	player	player
	m	()V	b	clearPlayers
	m	(Z)V	d	setVisible
		p	1	visible	visible
	m	()Z	g	isVisible
	m	()Ljava/util/Collection;	h	getPlayers
c	zb	net/minecraft/server/world/ServerChunkManager
	f	Lyp;	a	threadedAnvilChunkStorage
	f	Ljava/util/List;	b	CHUNK_STATUSES
	f	Lyv;	c	ticketManager
	f	Lcha;	d	chunkGenerator
	f	Lzd;	e	world
	f	Ljava/lang/Thread;	f	serverThread
	f	Lzg;	g	lightProvider
	f	Lzb$a;	h	mainThreadExecutor
	f	Ldaa;	i	persistentStateManager
	f	J	j	lastMobSpawningTime
	f	Z	k	spawnMonsters
	f	Z	l	spawnAnimals
	f	[J	m	chunkPosCache
	f	[Lchc;	n	chunkStatusCache
	f	[Lcgy;	o	chunkCache
	f	Lbqj$d;	p	spawnEntry
	m	(Lzd;Ldae$a;Lcom/mojang/datafixers/DataFixer;Lcva;Ljava/util/concurrent/Executor;Lcha;IZLzm;Ljava/util/function/Supplier;)V	<init>	<init>
		p	3	dataFixer	dataFixer
		p	4	structureManager	structureManager
		p	5	workerExecutor	workerExecutor
		p	6	chunkGenerator	chunkGenerator
		p	7	viewDistance	viewDistance
	m	(J)Lyo;	a	getChunkHolder
		p	1	pos	pos
	m	(Lze;)V	a	updateCameraPosition
		p	1	player	player
	m	(Z)V	a	save
		p	1	flush	flush
	m	(JLjava/util/function/Consumer;)V	a	ifChunkLoaded
		p	1	pos	pos
		p	3	chunkConsumer	chunkConsumer
	m	(JLcgy;Lchc;)V	a	putInCache
		p	1	pos	pos
		p	3	chunk	chunk
		p	4	status	status
	m	(Laom;Lni;)V	a	sendToNearbyPlayers
		p	1	entity	entity
		p	2	packet	packet
	m	(Lyo;I)Z	a	isMissingForLevel
		p	1	holder	holder
		p	2	maxLevel	maxLevel
	m	(I)V	a	applyViewDistance
		p	1	watchDistance	watchDistance
	m	()Lzg;	a	getLightingProvider
	m	(JLjava/util/function/Function;)Z	a	isFutureReady
		p	1	pos	pos
		p	3	futureFunction	futureFunction
	m	(Lzi;Lbph;ILjava/lang/Object;)V	a	addTicket
		c	Adds a chunk ticket to the ticket manager.\n\n<p>Addition of a ticket may load chunk(s) at some point in the future depending on the loading level in the ticket's vicinity.
		p	1	ticketType	ticketType
		p	2	pos	pos
		p	3	radius	radius
		p	4	argument	argument
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(IILchc;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFutureSyncOnMainThread
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	(Laom;)V	b	unloadEntity
	m	(Laom;Lni;)V	b	sendToOtherNearbyPlayers
	m	(Lfu;)V	b	markForUpdate
		p	1	pos	pos
	m	()I	b	getTotalChunksLoadedCount
	m	(Lzi;Lbph;ILjava/lang/Object;)V	b	removeTicket
		c	Removes a chunk ticket from the ticket manager.\n\n<p>Removal of a ticket may unload chunk(s) at some point in the future depending on the loading levels in the ticket's vicinity after removal.
		p	1	ticketType	ticketType
		p	2	pos	pos
		p	3	radius	radius
		p	4	argument	argument
	m	(Laom;)V	c	loadEntity
	m	()Lbqb;	c	getWorld
	m	(IILchc;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFuture
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	()Z	d	executeQueuedTasks
	m	()I	f	getPendingTasks
	m	()Lcha;	g	getChunkGenerator
	m	()I	h	getLoadedChunkCount
	m	()Ldaa;	i	getPersistentStateManager
	m	()Laxz;	j	getPointOfInterestStorage
	m	()Lbqj$d;	k	getSpawnInfo
	m	()V	n	initChunkCaches
	m	()Z	o	tick
	m	()V	p	tickChunks
c	zb$a	net/minecraft/server/world/ServerChunkManager$MainThreadExecutor
c	zc	net/minecraft/server/network/EntityTrackerEntry
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lzd;	b	world
	f	Laom;	c	entity
	f	I	d	tickInterval
	f	Z	e	alwaysUpdateVelocity
	f	Ljava/util/function/Consumer;	f	receiver
	f	J	g	lastX
	f	J	h	lastY
	f	J	i	lastZ
	f	I	j	lastYaw
	f	I	k	lastPitch
	f	I	l	lastHeadPitch
	f	Ldem;	m	velocity
	f	I	n	trackingTick
	f	I	o	updatesWithoutVehicle
	f	Ljava/util/List;	p	lastPassengers
	f	Z	q	hadVehicle
	f	Z	r	lastOnGround
	m	(Lzd;Laom;IZLjava/util/function/Consumer;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	tickInterval	tickInterval
		p	4	alwaysUpdateVelocity	alwaysUpdateVelocity
		p	5	receiver	receiver
	m	(Lni;)V	a	sendSyncPacket
		c	Sends a packet for synchronization with watcher and tracked player (if applicable)
		p	1	packet	packet
	m	(Lze;)V	a	stopTracking
		p	1	player	player
	m	()V	a	tick
	m	(Ljava/util/function/Consumer;)V	a	sendPackets
		p	1	sender	sender
	m	(Lze;)V	b	startTracking
		p	1	player	player
	m	()Ldem;	b	getLastPos
		c	Decodes lastX/Y/Z into a position vector
	m	()V	c	syncEntityData
		c	Synchronizes tracked data and attributes
	m	()V	d	storeEncodedCoordinates
		c	Stores the tracked entity's current coordinates encoded as lastX/Y/Z
c	zd	net/minecraft/server/world/ServerWorld
	f	Ljava/util/Queue;	A	entitiesToLoad
	f	Ljava/util/List;	B	players
	f	Lzb;	C	serverChunkManager
	f	Lnet/minecraft/server/MinecraftServer;	D	server
	f	Ldak;	E	worldProperties
	f	Z	F	allPlayersSleeping
	f	I	G	idleTimeout
	f	Lbqm;	H	portalForcer
	f	Lbqo;	I	blockTickScheduler
	f	Lbqo;	J	fluidTickScheduler
	f	Ljava/util/Set;	K	entityNavigations
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	L	syncedBlockEventQueue
	f	Z	M	inBlockTick
	f	Lcii;	O	enderDragonFight
	f	Lbqq;	P	structureAccessor
	f	Lfu;	a	END_SPAWN_POS
	f	Z	b	inEntityTick
	f	Z	c	savingDisabled
	f	Lbfj;	d	raidManager
	f	Lorg/apache/logging/log4j/Logger;	x	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	y	entitiesById
	f	Ljava/util/Map;	z	entitiesByUuid
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Ldae$a;Ldak;Lug;Lug;Lcif;Lzm;Lcha;ZJLjava/util/List;Z)V	<init>	<init>
		p	1	server	server
		p	2	workerExecutor	workerExecutor
		p	3	session	session
		p	4	properties	properties
		p	8	generationProgressListener	generationProgressListener
	m	()Z	A	isFlat
	m	()Lcii;	C	getEnderDragonFight
	m	(Lchj;)V	a	unloadEntities
		p	1	chunk	chunk
	m	(Lbpf;)Z	a	processBlockEvent
		p	1	event	event
	m	(Lcml;Lfu;IZ)Lfu;	a	locateStructure
		p	1	feature	feature
		p	2	pos	pos
		p	3	radius	radius
		p	4	skipExistingChunks	skipExistingChunks
	m	(Ljava/nio/file/Path;)V	a	dump
	m	(Lbqs;)V	a	tickFluid
		p	1	tick	tick
	m	(Lbre;Lfu;II)Lfu;	a	locateBiome
		p	1	biome	biome
		p	2	pos	pos
		p	3	radius	radius
	m	(Lgo;)Z	a	isNearOccupiedPointOfInterest
		p	1	sectionPos	sectionPos
	m	(Lchj;I)V	a	tickChunk
		p	1	chunk	chunk
		p	2	randomTickSpeed	randomTickSpeed
	m	(Lctd;)V	a	clearUpdatesInArea
		p	1	box	box
	m	(J)V	a	setTimeOfDay
		p	1	timeOfDay	timeOfDay
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	dumpEntities
		p	0	writer	writer
		p	1	entities	entities
	m	(Laom;)V	a	tickEntity
		p	1	entity	entity
	m	(Lzd;)V	a	createEndSpawnPlatform
		p	0	world	world
	m	(Lfu;)Lfu;	a	getSurface
		p	1	pos	pos
	m	(Lze;ZDDDLni;)Z	a	sendToPlayerIfNearby
		p	1	player	player
		p	2	force	force
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	packet	packet
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lhf;DDDIDDDD)I	a	spawnParticles
		p	1	particle	particle
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	count	count
		p	9	deltaX	deltaX
		p	11	deltaY	deltaY
		p	13	deltaZ	deltaZ
		p	15	speed	speed
	m	(Ljava/io/Writer;)V	a	dumpBlockEntities
		p	1	writer	writer
	m	()Lbqq;	a	getStructureAccessor
	m	(Ljava/util/UUID;)Laom;	a	getEntity
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1	predicate	predicate
	m	(Laed;ZZ)V	a	save
		p	1	progressListener	progressListener
		p	2	flush	flush
	m	(Lfu;I)Z	a	isNearOccupiedPointOfInterest
		p	1	pos	pos
		p	2	maxDistance	maxDistance
	m	(Laoq;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(IIZ)Z	a	setChunkForced
		p	1	x	x
		p	2	z	z
		p	3	forced	forced
	m	(Laom;Laom;)V	a	tickPassenger
		p	1	vehicle	vehicle
		p	2	passenger	passenger
	m	(Laxw;Laom;Lapl;)V	a	handleInteraction
		p	1	interaction	interaction
		p	2	entity	entity
		p	3	observer	observer
	m	(Lze;)V	a	onPlayerTeleport
		p	1	player	player
	m	(Lze;Lhf;ZDDDIDDDD)Z	a	spawnParticles
		p	1	viewer	viewer
		p	2	particle	particle
		p	3	force	force
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	count	count
		p	11	deltaX	deltaX
		p	13	deltaY	deltaY
		p	15	deltaZ	deltaZ
		p	17	speed	speed
	m	(IIZZ)V	a	setWeather
		p	1	clearDuration	clearDuration
		p	2	rainDuration	rainDuration
		p	3	raining	raining
		p	4	thundering	thundering
	m	(Lfu;)V	a_	setSpawnPos
		p	1	pos	pos
	m	()V	ae	wakeSleepingPlayers
	m	()V	af	resetWeather
	m	()V	ag	saveLevel
	m	()V	ah	processSyncedBlockEvents
	m	()V	b	tickTime
	m	(Lgo;)I	b	getOccupiedPointOfInterestDistance
		p	1	pos	pos
	m	(Lze;)V	b	onPlayerChangeDimension
		p	1	player	player
	m	(Lbqs;)V	b	tickBlock
		p	1	tick	tick
	m	(Laom;)V	b	checkChunk
	m	(Lfu;)Z	b_	isNearOccupiedPointOfInterest
		p	1	pos	pos
	m	(Lze;)V	c	onPlayerConnected
		p	1	player	player
	m	(Lfu;)Lbfh;	c_	getRaidAt
		p	1	pos	pos
	m	(Lze;)V	d	onPlayerRespawned
		p	1	player	player
	m	(Laom;)Z	d	tryLoadEntity
		p	1	entity	entity
	m	(Lfu;)Z	e	hasRaidAt
		p	1	pos	pos
	m	(Lze;)V	e	removePlayer
		p	1	player	player
	m	(Laom;)V	e	onDimensionChanged
		p	1	entity	entity
	m	(Lze;)V	f	addPlayer
		p	1	player	player
	m	(Laom;)Z	f	loadEntity
		p	1	entity	entity
	m	(Laom;)V	g	unloadEntity
		p	1	entity	entity
	m	()Ljava/util/List;	g	getAliveEnderDragons
	m	()Lze;	h	getRandomAlivePlayer
	m	(Laom;)V	h	removeEntity
		p	1	entity	entity
	m	()Lzb;	i	getChunkManager
	m	()Lbqo;	j	getBlockTickScheduler
	m	()Lbqo;	k	getFluidTickScheduler
	m	(Laom;)Z	k	addEntity
		p	1	entity	entity
	m	(Laom;)Z	l	checkUuid
		p	1	entity	entity
	m	(Laom;)V	m	loadEntityUnchecked
		p	1	entity	entity
	m	()Z	m_	isInBlockTick
	m	(Laom;)V	n	removeEntityFromChunk
		p	1	entity	entity
	m	()V	n_	updateSleepingPlayers
	m	()Lux;	o_	getScoreboard
	m	()V	p_	resetIdleTimeout
	m	()Lbqm;	q_	getPortalForcer
	m	()Lcva;	r_	getStructureManager
	m	()Ldaa;	s	getPersistentStateManager
	m	()Lfu;	u	getSpawnPos
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	v	getForcedChunks
	m	()Laxz;	x	getPointOfInterestStorage
	m	()Lbfj;	y	getRaidManager
	m	()Ljava/lang/Iterable;	z	iterateEntities
c	ze	net/minecraft/server/network/ServerPlayerEntity
	f	Lzv;	b	networkHandler
	f	Lorg/apache/logging/log4j/Logger;	bQ	LOGGER
	f	Ljava/util/List;	bR	removedEntities
	f	Luq;	bS	advancementTracker
	f	Lacq;	bT	statHandler
	f	F	bU	lastHealthScore
	f	I	bV	lastFoodScore
	f	I	bW	lastAirScore
	f	I	bX	lastArmorScore
	f	I	bY	lastLevelScore
	f	I	bZ	lastExperienceScore
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	F	ca	syncedHealth
	f	I	cb	syncedFoodLevel
	f	Z	cc	syncedSaturationIsZero
	f	I	cd	syncedExperience
	f	I	ce	joinInvulnerabilityTicks
	f	Lbea;	cf	clientChatVisibility
	f	Z	cg	clientChatColorsEnabled
	f	J	ch	lastActionTime
	f	Laom;	ci	cameraEntity
	f	Z	cj	inTeleportationState
	f	Z	ck	seenCredits
	f	Lacp;	cl	recipeBook
	f	Ldem;	cm	levitationStartPos
	f	I	cn	levitationStartTick
	f	Z	co	disconnected
	f	Ldem;	cp	enteredNetherPos
	f	Lgo;	cq	cameraPosition
	f	Lug;	cr	spawnPointDimension
	f	Lfu;	cs	spawnPointPosition
	f	Z	ct	spawnPointSet
	f	I	cu	screenHandlerSyncId
	f	Lzf;	d	interactionManager
	f	Z	e	skipPacketSlotUpdates
	f	I	f	pingMilliseconds
	f	Z	g	notInAnyWorld
	m	(Lnet/minecraft/server/MinecraftServer;Lzd;Lcom/mojang/authlib/GameProfile;Lzf;)V	<init>	<init>
		p	1	server	server
		p	2	world	world
		p	3	profile	profile
		p	4	interactionManager	interactionManager
	m	()Lacq;	A	getStatHandler
	m	()Lacp;	B	getRecipeBook
	m	()Laom;	D	getCameraEntity
	m	()J	F	getLastActionTime
	m	()Lmr;	G	getPlayerListName
	m	()Z	H	isInTeleportationState
	m	()V	I	onTeleportationDone
	m	()Luq;	J	getAdvancementTracker
	m	()Lfu;	K	getSpawnPointPosition
	m	()Lug;	L	getSpawnPointDimension
	m	()Z	M	isSpawnPointSet
	m	()Lgo;	N	getCameraPosition
	m	(Lug;Lfu;ZZ)V	a	setSpawnPoint
		p	1	dimension	dimension
		p	2	pos	pos
		p	3	spawnPointSet	spawnPointSet
	m	(I)V	a	setExperiencePoints
	m	(Lfu;Lfz;)Z	a	isBedTooFarAway
		p	1	pos	pos
		p	2	direction	direction
	m	(Ljava/lang/String;Ljava/lang/String;[Ldfp;)V	a	updateScoreboardScore
		p	1	playerName	playerName
		p	2	team	team
	m	(Lzd;DDDFF)V	a	teleport
		p	1	targetWorld	targetWorld
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	yaw	yaw
		p	9	pitch	pitch
	m	(Lcdl;)V	a	sendBlockEntityUpdate
		p	1	blockEntity	blockEntity
	m	(Lbph;Lni;Lni;)V	a	sendInitialChunkPackets
	m	(Lrf;)V	a	setClientSettings
		p	1	packet	packet
	m	(DZ)V	a	handleFall
		p	1	heightDifference	heightDifference
		p	3	onGround	onGround
	m	(Lmr;Lmo;Ljava/util/UUID;)V	a	sendMessage
		p	1	message	message
		p	2	type	type
		p	3	senderUuid	senderUuid
	m	(Ldfp;I)V	a	updateScores
		p	1	criterion	criterion
		p	2	score	score
	m	(Lbgi;)V	a	openHandledScreen
		p	1	handler	handler
	m	(Lgo;)V	a	setCameraPosition
		p	1	cameraPosition	cameraPosition
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	sendResourcePackUrl
		p	1	url	url
		p	2	hash	hash
	m	(Lze;Z)V	a	copyFrom
		p	1	oldPlayer	oldPlayer
		p	2	alive	alive
	m	(Lbph;)V	a	sendUnloadChunkPacket
	m	(Lfu;Lfz;)Z	b	isBedObstructed
		p	1	pos	pos
		p	2	direction	direction
	m	(I)V	b	setExperienceLevel
		p	1	level	level
	m	(Lzd;)V	b	moveToSpawn
		p	1	world	world
	m	(Lzd;)V	c	dimensionChanged
		p	1	targetWorld	targetWorld
	m	(Laom;)V	c	onStoppedTracking
		p	1	entity	entity
	m	(Laom;)V	d	onStartedTracking
		p	1	entity	entity
	m	(Laom;)V	e	setCameraEntity
		p	1	entity	entity
	m	()V	eW	forgiveMobAnger
	m	()Z	eX	isPvpEnabled
	m	()V	eY	incrementScreenHandlerSyncId
	m	()V	f	onSpawn
	m	(Lfu;)Z	g	isBedTooFarAway
		p	1	pos	pos
	m	()V	n	updateCursorStack
	m	()V	o	closeCurrentScreen
	m	()V	p	onDisconnect
	m	()Z	q	isDisconnected
	m	()V	r	markHealthDirty
	m	()Lzd;	u	getServerWorld
	m	(I)I	u	calculateSpawnOffsetMultiplier
		p	1	horizontalSpawnArea	horizontalSpawnArea
	m	()Ljava/lang/String;	v	getIp
	m	()V	w_	playerTick
	m	()Lbea;	x	getClientChatVisibility
	m	()V	z	updateLastActionTime
c	zf	net/minecraft/server/network/ServerPlayerInteractionManager
	f	Lzd;	a	world
	f	Lze;	b	player
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lbpy;	d	gameMode
	f	Z	f	mining
	f	I	g	startMiningTime
	f	Lfu;	h	miningPos
	f	I	i	tickCounter
	f	Z	j	failedToMine
	f	Lfu;	k	failedMiningPos
	f	I	l	failedStartMiningTime
	f	I	m	blockBreakingProgress
	m	(Lzd;)V	<init>	<init>
		p	1	world	world
	m	(Lzd;)V	a	setWorld
		p	1	world	world
	m	(Lze;Lbqb;Lbki;Lanf;Ldeh;)Lang;	a	interactBlock
		p	1	player	player
		p	2	world	world
		p	3	stack	stack
		p	4	hand	hand
		p	5	hitResult	hitResult
	m	(Lbpy;Lbpy;)V	a	setGameMode
	m	(Lcfj;Lfu;I)F	a	continueMining
		p	1	state	state
		p	2	pos	pos
	m	(Lfu;Lry$a;Ljava/lang/String;)V	a	finishMining
		p	1	pos	pos
		p	2	action	action
		p	3	reason	reason
	m	()V	a	update
	m	(Lze;Lbqb;Lbki;Lanf;)Lang;	a	interactItem
		p	1	player	player
		p	2	world	world
		p	3	stack	stack
		p	4	hand	hand
	m	(Lfu;)Z	a	tryBreakBlock
		p	1	pos	pos
	m	(Lfu;Lry$a;Lfz;I)V	a	processBlockBreakingAction
		p	1	pos	pos
		p	2	action	action
		p	3	direction	direction
		p	4	worldHeight	worldHeight
	m	(Lbpy;)V	b	setGameModeIfNotPresent
	m	()Lbpy;	b	getGameMode
	m	()Z	d	isSurvivalLike
	m	()Z	e	isCreative
c	zg	net/minecraft/server/world/ServerLightingProvider
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lamq;	b	processor
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	c	pendingTasks
	f	Lyp;	d	chunkStorage
	f	Lamp;	e	executor
	f	I	f	taskBatchSize
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	g	ticking
	m	(Lchl;Lyp;ZLamq;Lamp;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
		p	2	chunkStorage	chunkStorage
		p	3	hasBlockLight	hasBlockLight
		p	4	processor	processor
		p	5	executor	executor
	m	()V	A_	tick
	m	(IILjava/util/function/IntSupplier;Lzg$a;Ljava/lang/Runnable;)V	a	enqueue
		p	1	x	x
		p	2	z	z
		p	3	completedLevelSupplier	completedLevelSupplier
		p	4	stage	stage
		p	5	task	task
	m	(Lbph;)V	a	updateChunkStatus
		p	1	pos	pos
	m	(I)V	a	setTaskBatchSize
		p	1	taskBatchSize	taskBatchSize
	m	(Lcgy;Z)Ljava/util/concurrent/CompletableFuture;	a	light
		p	1	chunk	chunk
		p	2	excludeBlocks	excludeBlocks
	m	(IILzg$a;Ljava/lang/Runnable;)V	a	enqueue
		p	1	x	x
		p	2	z	z
		p	3	stage	stage
		p	4	task	task
	m	()V	b	runTasks
c	zg$a	net/minecraft/server/world/ServerLightingProvider$Stage
c	zh	net/minecraft/server/world/ChunkTicket
	c	Represents a chunk ticket, which specifies the reason a chunk has been loaded.
	f	Lzi;	a	type
	f	I	b	level
	f	Ljava/lang/Object;	c	argument
	f	J	d	tickCreated
	m	(Lzi;ILjava/lang/Object;)V	<init>	<init>
		p	1	type	type
		p	2	level	level
		p	3	argument	argument
	m	(Lzh;)I	a	compareTo
	m	(J)V	a	setTickCreated
		p	1	tickCreated	tickCreated
	m	()Lzi;	a	getType
	m	()I	b	getLevel
	m	(J)Z	b	isExpired
		p	1	currentTick	currentTick
	m	(Ljava/lang/Object;)I	compareTo	compareTo
		p	1	that	that
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	zi	net/minecraft/server/world/ChunkTicketType
	f	Lzi;	b	field_17264
		c	Used by the ender dragon to load the central end island during the boss battle.
	f	Lzi;	d	field_14031
		c	Used to force load chunks.
	f	Lzi;	f	field_19280
		c	Used by a nether portal to load chunks in the other dimension.
	f	Lzi;	g	field_19347
		c	Used to load the chunks at the destination of teleportation.
	f	Lzi;	h	field_14032
		c	Represents a type of ticket that has an unknown cause for loading chunks.
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Comparator;	j	argumentComparator
	f	J	k	expiryTicks
	m	(Ljava/lang/String;Ljava/util/Comparator;J)V	<init>	<init>
		p	1	name	name
		p	3	expiryTicks	expiryTicks
	m	()Ljava/util/Comparator;	a	getArgumentComparator
	m	(Ljava/lang/String;Ljava/util/Comparator;)Lzi;	a	create
		c	Creates a new ticket type that does not expire.
		p	0	name	name
	m	(Ljava/lang/String;Ljava/util/Comparator;I)Lzi;	a	create
		c	Create a new ticket type that expires after an amount of ticks.
		p	0	name	name
		p	2	expiryTicks	expiryTicks
			c	the expiry time in ticks, does not expire if 0
	m	()J	b	getExpiryTicks
c	zj	net/minecraft/world/ChunkRegion
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	chunks
	f	I	c	centerChunkX
	f	I	d	centerChunkZ
	f	I	e	width
	f	Lzd;	f	world
	f	J	g	seed
	f	Ldab;	h	levelProperties
	f	Ljava/util/Random;	i	random
	f	Lcif;	j	dimension
	f	Lbqr;	k	blockTickScheduler
	f	Lbqr;	l	fluidTickScheduler
	f	Lbrg;	m	biomeAccess
	f	Lbph;	n	lowerCorner
	f	Lbph;	o	upperCorner
	m	(Lzd;Ljava/util/List;)V	<init>	<init>
		p	1	world	world
		p	2	chunks	chunks
	m	()I	a	getCenterChunkX
	m	()I	b	getCenterChunkZ
	m	(Lfu;)V	e	markBlockForPostProcessing
		p	1	pos	pos
	m	()Lzd;	h	getWorld
	m	(Lfu;)Lbqr;	i	method_14337
		p	1	pos	pos
	m	(Lfu;)Lbqr;	j	method_14340
		p	1	pos	pos
c	zk	net/minecraft/world/MultiTickScheduler
	f	Ljava/util/function/Function;	a	mapper
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	mapper	mapper
c	zm	net/minecraft/server/WorldGenerationProgressListener
	m	(Lbph;)V	a	start
		p	1	spawnPos	spawnPos
	m	(Lbph;Lchc;)V	a	setChunkStatus
		p	1	pos	pos
		p	2	status	status
	m	()V	b	stop
c	zn	net/minecraft/server/WorldGenerationProgressListenerFactory
	m	(I)Lzm;	create	create
		p	1	radius	radius
c	zo	net/minecraft/server/WorldGenerationProgressLogger
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	totalCount
	f	I	c	generatedCount
	f	J	d	startTime
	f	J	e	nextMessageTime
	m	(I)V	<init>	<init>
		p	1	radius	radius
	m	()I	c	getProgressPercentage
c	zp	net/minecraft/server/QueueingWorldGenerationProgressListener
	f	Lzm;	a	progressListener
	f	Lamq;	b	queue
	m	(Lzm;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	progressListener	progressListener
c	zq	net/minecraft/client/gui/WorldGenerationProgressTracker
	f	Lzo;	a	progressLogger
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	chunkStatuses
	f	Lbph;	c	spawnPos
	f	I	d	centerSize
	f	I	e	radius
	f	I	f	size
	f	Z	g	isRunning
	m	(I)V	<init>	<init>
		p	1	radius	radius
	m	(II)Lchc;	a	getChunkStatus
		p	1	x	x
		p	2	z	z
	m	()V	a	start
	m	()I	c	getCenterSize
	m	()I	d	getSize
	m	()I	e	getProgressPercentage
c	zs	net/minecraft/network/LegacyQueryHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lzu;	b	networkIo
	m	(Lzu;)V	<init>	<init>
		p	1	networkIo	networkIo
	m	(Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	toBuffer
		p	1	s	s
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	reply
		p	1	ctx	ctx
		p	2	buf	buf
c	zt	net/minecraft/server/network/IntegratedServerHandshakeNetworkHandler
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Lme;	b	connection
	m	(Lnet/minecraft/server/MinecraftServer;Lme;)V	<init>	<init>
		p	1	server	server
		p	2	connection	connection
c	zu	net/minecraft/server/ServerNetworkIo
	f	Lady;	a	DEFAULT_CHANNEL
	f	Lady;	b	EPOLL_CHANNEL
	f	Z	c	active
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	(Ljava/net/InetAddress;I)V	a	bind
		p	1	address	address
		p	2	port	port
	m	()Ljava/net/SocketAddress;	a	bindLocal
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
c	zv	net/minecraft/server/network/ServerPlayNetworkHandler
	f	I	A	teleportRequestTick
	f	Z	B	floating
	f	I	C	floatingTicks
	f	Z	D	ridingEntity
	f	I	E	vehicleFloatingTicks
	f	I	F	movePacketsCount
	f	I	G	lastTickMovePacketsCount
	f	Lme;	a	connection
	f	Lze;	b	player
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	I	e	ticks
	f	J	f	lastKeepAliveTime
	f	Z	g	waitingForKeepAlive
	f	J	h	keepAliveId
	f	I	i	messageCooldown
	f	I	j	creativeItemDropThreshold
	f	Lit/unimi/dsi/fastutil/ints/Int2ShortMap;	k	transactions
	f	D	l	lastTickX
	f	D	m	lastTickY
	f	D	n	lastTickZ
	f	D	o	updatedX
	f	D	p	updatedY
	f	D	q	updatedZ
	f	Laom;	r	topmostRiddenEntity
	f	D	s	lastTickRiddenX
	f	D	t	lastTickRiddenY
	f	D	u	lastTickRiddenZ
	f	D	v	updatedRiddenX
	f	D	w	updatedRiddenY
	f	D	x	updatedRiddenZ
	f	Ldem;	y	requestedTeleportPos
	f	I	z	requestedTeleportId
	m	(Lnet/minecraft/server/MinecraftServer;Lme;Lze;)V	<init>	<init>
		p	1	server	server
		p	2	connection	connection
		p	3	player	player
	m	(Lni;Lio/netty/util/concurrent/GenericFutureListener;)V	a	sendPacket
		p	1	packet	packet
		p	2	listener	listener
	m	(DDDFFLjava/util/Set;)V	a	teleportRequest
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(Lze;Lbki;)Z	a	canPlace
		c	Checks if a player can place a block or fluid from a bucket.\n\n<p>For this to return true, the player must not be actively cooling down.
		p	0	player	player
		p	1	stack	stack
	m	(Lni;)V	a	sendPacket
		p	1	packet	packet
	m	(DDDFF)V	a	requestTeleport
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(Lbqd;Ldeg;)Z	a	isPlayerNotCollidingWithBlocks
	m	(Lmr;)V	b	disconnect
		p	1	reason	reason
	m	(Lrt;)Z	b	validateVehicleMove
		p	0	packet	packet
	m	(Lrs;)Z	b	validatePlayerMove
		p	0	packet	packet
	m	()V	b	tick
	m	()V	c	syncWithPlayerPosition
	m	(Ljava/lang/String;)V	c	executeCommand
		p	1	input	input
	m	()Z	d	isHost
c	zw	net/minecraft/server/network/ServerHandshakeNetworkHandler
	f	Lmr;	a	IGNORING_STATUS_REQUEST_MESSAGE
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lme;	c	connection
	m	(Lnet/minecraft/server/MinecraftServer;Lme;)V	<init>	<init>
		p	1	server	server
		p	2	connection	connection
c	zx	net/minecraft/server/network/ServerLoginNetworkHandler
	f	Lme;	a	connection
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	authenticatorThreadId
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/util/Random;	d	RANDOM
	f	[B	e	nonce
	f	Lnet/minecraft/server/MinecraftServer;	f	server
	f	Lzx$a;	g	state
	f	I	h	loginTicks
	f	Lcom/mojang/authlib/GameProfile;	i	profile
	f	Ljava/lang/String;	j	serverId
	f	Ljavax/crypto/SecretKey;	k	secretKey
	f	Lze;	l	player
	m	(Lnet/minecraft/server/MinecraftServer;Lme;)V	<init>	<init>
		p	1	server	server
		p	2	connection	connection
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile;	a	toOfflineProfile
		p	1	profile	profile
	m	(Lmr;)V	b	disconnect
		p	1	reason	reason
	m	()V	b	tick
	m	()V	c	acceptPlayer
	m	()Ljava/lang/String;	d	getConnectionInfo
c	zx$1	net/minecraft/server/network/ServerLoginNetworkHandler$1
	m	()Ljava/net/InetAddress;	a	getClientAddress
c	zx$a	net/minecraft/server/network/ServerLoginNetworkHandler$State
c	zy	net/minecraft/server/network/ServerQueryNetworkHandler
	f	Lmr;	a	REQUEST_HANDLED
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lme;	c	connection
	f	Z	d	responseSent
	m	(Lnet/minecraft/server/MinecraftServer;Lme;)V	<init>	<init>
		p	1	server	server
		p	2	connection	connection
