tiny	2	0	left	right
c	a	net/minecraft/client/util/math/Matrix3f
	f	F	a	a00
	f	F	b	a01
	f	F	c	a02
	f	F	d	a10
	f	F	e	a11
	f	F	f	a12
	f	F	g	a20
	f	F	h	a21
	f	F	i	a22
	f	F	j	THREE_PLUS_TWO_SQRT_TWO
	f	F	k	COS_PI_OVER_EIGHT
	f	F	l	SIN_PI_OVER_EIGHT
	f	F	m	SQRT_HALF
	m	(Lb;)V	<init>	<init>
		p	1	source	source
	m	(La;)V	<init>	<init>
		p	1	source	source
	m	(FFF)Lcom/mojang/datafixers/util/Pair;	a	getSinAndCosOfRotation
		p	0	upperLeft	upperLeft
		p	1	diagonalAverage	diagonalAverage
		p	2	lowerRight	lowerRight
	m	(Lc;)V	a	multiply
	m	(F)V	a	multiply
		p	1	scalar	scalar
	m	(La;)V	a	load
		p	1	source	source
	m	()V	a	transpose
	m	(FFF)La;	b	scale
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	()Lorg/apache/commons/lang3/tuple/Triple;	b	decomposeLinearTransformation
	m	(La;)V	b	multiply
		p	1	other	other
	m	()V	c	loadIdentity
	m	()La;	d	copy
	m	()F	e	determinantAndAdjugate
	m	()Z	f	invert
c	aa	net/minecraft/advancement/criterion/CriterionProgress
	f	Ljava/text/SimpleDateFormat;	a	FORMAT
	f	Ljava/util/Date;	b	obtained
	m	(Lkv;)V	a	toPacket
	m	()Z	a	isObtained
	m	(Ljava/lang/String;)Laa;	a	obtainedAt
		p	0	datetime	datetime
	m	()V	b	obtain
	m	(Lkv;)Laa;	b	fromPacket
	m	()V	c	reset
	m	()Ljava/util/Date;	d	getObtainedDate
	m	()Lcom/google/gson/JsonElement;	e	toJson
c	aaa	net/minecraft/server/dedicated/ServerCommandOutput
	f	Ljava/lang/StringBuffer;	b	buffer
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	()V	d	clear
	m	()Ljava/lang/String;	e	asString
	m	()Lcq;	f	createReconCommandSource
c	aac	net/minecraft/server/rcon/RconBase
	f	Z	a	running
	f	Lsz;	b	server
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Thread;	d	thread
	f	Ljava/util/List;	f	sockets
	f	Ljava/util/List;	g	serverSockets
	m	(Ljava/net/DatagramSocket;Z)Z	a	closeSocket
		p	1	socket	socket
	m	()V	a	start
	m	(Ljava/net/DatagramSocket;)V	a	registerSocket
	m	(Ljava/lang/String;)V	a	log
	m	(Ljava/net/ServerSocket;Z)Z	a	closeSocket
		p	1	socket	socket
	m	(Z)V	a	forceClose
	m	(Ljava/net/ServerSocket;)Z	b	closeSocket
	m	(Ljava/lang/String;)V	b	info
	m	()V	b	stop
	m	(Ljava/lang/String;)V	c	warn
	m	()Z	c	isRunning
	m	()I	d	getCurrentPlayerCount
	m	(Ljava/lang/String;)V	d	logError
	m	()V	e	forceClose
c	aad	net/minecraft/server/rcon/QueryResponseHandler
	f	J	h	lastQueryTime
	f	I	i	queryPort
	f	I	j	port
	f	I	k	maxPlayerCount
	f	Ljava/lang/String;	l	motd
	f	Ljava/lang/String;	m	levelName
	f	Ljava/net/DatagramSocket;	n	socket
	f	[B	o	packetBuffer
	f	Ljava/net/DatagramPacket;	p	currentPacket
	f	Ljava/lang/String;	r	ip
	f	Ljava/lang/String;	s	hostname
	f	Ljava/util/Map;	t	queries
	f	J	u	creationTime
	f	Lzy;	v	data
	f	J	w	lastResponseTime
	m	(Lsz;)V	<init>	<init>
		p	1	server	server
	m	(Ljava/net/DatagramPacket;)Z	a	handle
		p	1	packet	packet
	m	([BLjava/net/DatagramPacket;)V	a	reply
		p	1	buf	buf
	m	(Ljava/lang/Exception;)V	a	handleIoException
		p	1	e	e
	m	(Ljava/net/SocketAddress;)[B	a	getMessageBytes
	m	(Ljava/net/DatagramPacket;)[B	b	createRulesReply
		p	1	packet	packet
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	isValidQuery
	m	(Ljava/net/DatagramPacket;)V	d	createQuery
	m	()V	f	cleanUp
	m	()Z	g	initialize
c	aad$a	net/minecraft/server/rcon/QueryResponseHandler$Query
	f	J	b	startTime
	f	I	c	id
	f	[B	d	messageBytes
	f	[B	e	replyBuf
	f	Ljava/lang/String;	f	message
	m	()I	a	getId
	m	(J)Ljava/lang/Boolean;	a	startedBefore
		p	1	lastQueryTime	lastQueryTime
	m	()[B	b	getReplyBuf
	m	()[B	c	getMessageBytes
c	aae	net/minecraft/server/rcon/RconClient
	f	Lorg/apache/logging/log4j/Logger;	h	LOGGER
	f	Z	i	authenticated
	f	Ljava/net/Socket;	j	socket
	f	[B	k	packetBuffer
	f	Ljava/lang/String;	l	password
	m	()V	g	close
c	aaf	net/minecraft/server/rcon/RconServer
	f	I	h	port
	f	Ljava/lang/String;	i	hostname
	f	Ljava/net/ServerSocket;	j	listener
	f	Ljava/lang/String;	k	password
	f	Ljava/util/Map;	l	clients
	m	()V	f	cleanClientList
	m	()V	g	removeStoppedClients
c	aah	net/minecraft/sound/SoundEvent
	f	Lsm;	a	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	()Lsm;	a	getId
c	aai	net/minecraft/sound/SoundEvents
	m	(Ljava/lang/String;)Laah;	a	register
		p	0	id	id
c	aaj	net/minecraft/sound/SoundCategory
	f	Laaj;	h	PLAYERS
	f	Ljava/util/Map;	k	NAME_MAP
	f	Ljava/lang/String;	l	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	aal	net/minecraft/recipe/book/RecipeBook
	f	Ljava/util/Set;	a	recipes
	f	Ljava/util/Set;	b	toBeDisplayed
	f	Z	c	guiOpen
	f	Z	d	filteringCraftable
	f	Z	e	furnaceGuiOpen
	f	Z	f	furnaceFilteringCraftable
	f	Z	g	blastFurnaceGuiOpen
	f	Z	h	blastFurnaceFilteringCraftable
	f	Z	i	smokerGuiOpen
	f	Z	j	smokerFilteringCraftable
	m	(Lbgw;)V	a	add
		p	1	recipe	recipe
	m	(Lsm;)V	a	add
		p	1	id	id
	m	(Laal;)V	a	copyFrom
		p	1	book	book
	m	(Lbbt;)Z	a	isFilteringCraftable
		p	1	container	container
	m	(Z)V	a	setGuiOpen
		p	1	guiOpen	guiOpen
	m	()Z	a	isGuiOpen
	m	(Lsm;)Z	b	contains
		p	1	id	id
	m	()Z	b	isFilteringCraftable
	m	(Z)V	b	setFilteringCraftable
		p	1	filteringCraftable	filteringCraftable
	m	(Lbgw;)Z	b	contains
		p	1	recipe	recipe
	m	(Lbgw;)V	c	remove
		p	1	recipe	recipe
	m	()Z	c	isFurnaceGuiOpen
	m	(Lsm;)V	c	remove
		p	1	id	id
	m	(Z)V	c	setFurnaceGuiOpen
		p	1	furnaceGuiOpen	furnaceGuiOpen
	m	(Lsm;)V	d	display
		p	1	id	id
	m	(Z)V	d	setFurnaceFilteringCraftable
		p	1	furnaceFilteringCraftable	furnaceFilteringCraftable
	m	(Lbgw;)Z	d	shouldDisplay
		p	1	recipe	recipe
	m	()Z	d	isFurnaceFilteringCraftable
	m	(Z)V	e	setBlastFurnaceGuiOpen
		p	1	blastFurnaceGuiOpen	blastFurnaceGuiOpen
	m	()Z	e	isBlastFurnaceGuiOpen
	m	(Lbgw;)V	e	onRecipeDisplayed
		p	1	recipe	recipe
	m	()Z	f	isBlastFurnaceFilteringCraftable
	m	(Z)V	f	setBlastFurnaceFilteringCraftable
		p	1	blastFurnaceFilteringCraftable	blastFurnaceFilteringCraftable
	m	(Lbgw;)V	f	display
		p	1	recipe	recipe
	m	()Z	g	isSmokerGuiOpen
	m	(Z)V	g	setSmokerGuiOpen
		p	1	smokerGuiOpen	smokerGuiOpen
	m	(Z)V	h	setSmokerFilteringCraftable
		p	1	smokerFilteringCraftable	smokerFilteringCraftable
	m	()Z	h	isSmokerFilteringCraftable
c	aam	net/minecraft/server/network/ServerRecipeBook
	f	Lorg/apache/logging/log4j/Logger;	k	LOGGER
	f	Lbgx;	l	manager
	m	(Lxe;)V	a	sendInitRecipesPacket
		p	1	player	player
	m	(Ljz;Ljava/util/function/Consumer;)V	a	handleList
		p	1	list	list
		p	2	handler	handler
	m	(Ljt;)V	a	fromTag
		p	1	tag	tag
	m	(Lnx$a;Lxe;Ljava/util/List;)V	a	sendUnlockRecipesPacket
		p	1	action	action
		p	2	player	player
		p	3	recipeIds	recipeIds
	m	(Ljava/util/Collection;Lxe;)I	a	unlockRecipes
		p	1	recipes	recipes
		p	2	player	player
	m	(Ljava/util/Collection;Lxe;)I	b	lockRecipes
		p	1	recipes	recipes
		p	2	player	player
	m	()Ljt;	i	toTag
c	aan	net/minecraft/stat/ServerStatHandler
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/io/File;	d	file
	f	Ljava/util/Set;	e	pendingStats
	f	I	f	lastStatsUpdate
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V	<init>	<init>
		p	1	server	server
	m	(Laaq;Ljava/lang/String;)Ljava/util/Optional;	a	createStat
		p	1	type	type
		p	2	id	id
	m	(Lxe;)V	a	sendStats
		p	1	player	player
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parse
		p	1	dataFixer	dataFixer
		p	2	json	json
	m	()V	a	save
	m	(Lcom/google/gson/JsonObject;)Ljt;	a	jsonToCompound
	m	(Laao;)Lsm;	b	getStatId
	m	()Ljava/lang/String;	b	asString
	m	()V	c	updateStatSet
	m	()Ljava/util/Set;	d	takePendingStats
c	aao	net/minecraft/stat/Stat
	f	Laap;	o	formatter
	f	Ljava/lang/Object;	p	value
	f	Laaq;	q	type
	m	(Laaq;Ljava/lang/Object;Laap;)V	<init>	<init>
		p	1	type	type
		p	2	value	value
		p	3	formatter	formatter
	m	(Lsm;)Ljava/lang/String;	a	getName
		p	0	id	id
	m	(I)Ljava/lang/String;	a	format
	m	()Laaq;	a	getType
	m	(Laaq;Ljava/lang/Object;)Ljava/lang/String;	a	getName
		p	0	type	type
		p	1	value	value
	m	()Ljava/lang/Object;	b	getValue
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	aap	net/minecraft/stat/StatFormatter
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Laap;	b	DEFAULT
	f	Laap;	c	DIVIDE_BY_TEN
	f	Laap;	d	DISTANCE
	f	Laap;	e	TIME
c	aaq	net/minecraft/stat/StatType
	f	Lgb;	a	registry
	f	Ljava/util/Map;	b	stats
	m	(Ljava/lang/Object;)Z	a	hasStat
		p	1	key	key
	m	()Lgb;	a	getRegistry
	m	(Ljava/lang/Object;Laap;)Laao;	a	getOrCreateStat
		p	1	key	key
		p	2	formatter	formatter
	m	(Ljava/lang/Object;)Laao;	b	getOrCreateStat
		p	1	key	key
	m	()Ljava/lang/String;	c	getTranslationKey
c	aar	net/minecraft/stat/Stats
	m	(Ljava/lang/String;Laap;)Lsm;	a	register
	m	(Ljava/lang/String;Lgb;)Laaq;	a	registerType
c	aas	net/minecraft/stat/StatHandler
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	statMap
	m	(Layj;Laao;I)V	a	setStat
		p	1	player	player
		p	2	stat	stat
		p	3	value	value
	m	(Laaq;Ljava/lang/Object;)I	a	getStat
		p	1	type	type
		p	2	stat	stat
	m	(Laao;)I	a	getStat
		p	1	stat	stat
	m	(Layj;Laao;I)V	b	increaseStat
		p	1	player	player
		p	2	stat	stat
		p	3	value	value
c	aau	net/minecraft/tag/BlockTags
	f	Laba;	ae	container
	f	I	af	latestVersion
	m	(Ljava/lang/String;)Laaz;	a	register
		p	0	id	id
	m	()Laba;	a	getContainer
	m	(Laba;)V	a	setContainer
		p	0	container	container
c	aau$a	net/minecraft/tag/BlockTags$CachingTag
	f	I	a	version
	f	Laaz;	b	delegate
	m	(Lbph;)Z	a	contains
c	aav	net/minecraft/tag/EntityTypeTags
	f	Laba;	e	container
	f	I	f	latestVersion
	m	(Ljava/lang/String;)Laaz;	a	register
		p	0	id	id
	m	()Laba;	a	getContainer
	m	(Laba;)V	a	setContainer
		p	0	container	container
c	aav$a	net/minecraft/tag/EntityTypeTags$CachingTag
	f	I	a	version
	f	Laaz;	b	delegate
	m	(Laku;)Z	a	contains
c	aaw	net/minecraft/tag/FluidTags
	f	Laba;	c	container
	f	I	d	latestVersion
	m	(Ljava/lang/String;)Laaz;	a	register
		p	0	id	id
	m	()Laba;	a	getContainer
	m	(Laba;)V	a	setContainer
		p	0	container	container
c	aaw$a	net/minecraft/tag/FluidTags$CachingTag
	f	I	a	version
	f	Laaz;	b	delegate
	m	(Lcoi;)Z	a	contains
c	aax	net/minecraft/tag/ItemTags
	f	Laba;	Q	container
	f	I	R	latestVersion
	m	(Ljava/lang/String;)Laaz;	a	register
		p	0	id	id
	m	()Laba;	a	getContainer
	m	(Laba;)V	a	setContainer
		p	0	container	container
c	aax$a	net/minecraft/tag/ItemTags$CachingTag
	f	I	a	version
	f	Laaz;	b	delegate
	m	(Lbei;)Z	a	contains
c	aay	net/minecraft/tag/RegistryTagContainer
	f	Lgb;	a	registry
	m	(Lgb;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	registry	registry
		p	2	path	path
		p	3	type	type
	m	(Lkv;)V	a	toPacket
		p	1	buf	buf
	m	(Lkv;)V	b	fromPacket
		p	1	buf	buf
c	aaz	net/minecraft/tag/Tag
	c	A tag is a set of objects.\n\n<p>Tags simplifies reference to multiple objects, especially for\npredicate (testing against) purposes.\n\n<p>A tag is immutable by design. It has a builder, which is a mutable\nequivalent.\n\n<p>Its entries' iteration may be ordered\nor unordered, depending on the configuration from the tag builder.
	f	Lsm;	a	id
	f	Ljava/util/Set;	b	values
	f	Ljava/util/Collection;	c	entries
	m	(Lsm;Ljava/util/Collection;Z)V	<init>	<init>
		p	1	id	id
		p	2	entries	entries
		p	3	ordered	ordered
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	(Ljava/util/function/Function;)Lcom/google/gson/JsonObject;	a	toJson
		p	1	idGetter	idGetter
	m	(Ljava/util/Random;)Ljava/lang/Object;	a	getRandom
		p	1	random	random
	m	(Ljava/lang/Object;)Z	a	contains
		p	1	entry	entry
	m	()Ljava/util/Collection;	a	values
	m	()Ljava/util/Collection;	b	entries
	m	()Lsm;	c	getId
c	aaz$a	net/minecraft/tag/Tag$Builder
	c	A builder class to ease the creation of tags. It can also be used as a\nmutable form of a tag.
	f	Ljava/util/Set;	a	entries
	f	Z	b	ordered
	m	()Laaz$a;	a	create
	m	(Ljava/util/function/Function;)Z	a	applyTagGetter
		p	1	tagGetter	tagGetter
	m	(Laaz$b;)Laaz$a;	a	add
		p	1	entry	entry
	m	(Laaz;)Laaz$a;	a	add
		p	1	tag	tag
	m	(Z)Laaz$a;	a	ordered
		p	1	ordered	ordered
	m	([Ljava/lang/Object;)Laaz$a;	a	add
		p	1	entries	entries
	m	(Ljava/lang/Object;)Laaz$a;	a	add
		p	1	entry	entry
	m	(Ljava/util/function/Function;Lcom/google/gson/JsonObject;)Laaz$a;	a	fromJson
		p	1	entryGetter	entryGetter
		p	2	json	json
	m	(Lsm;)Laaz;	b	build
		p	1	id	id
c	aaz$b	net/minecraft/tag/Tag$Entry
	m	(Lcom/google/gson/JsonArray;Ljava/util/function/Function;)V	a	toJson
		p	1	targetArray	targetArray
		p	2	idGetter	idGetter
	m	(Ljava/util/function/Function;)Z	a	applyTagGetter
		c	Resolves the tag entry, given the availalbe tags.\n\n@return true if the tag entry has been resolved
		p	1	tagGetter	tagGetter
			c	the getter for resolved tags, consuming tag identifiers
	m	(Ljava/util/Collection;)V	a	build
		c	Build this tag entry by adding elements to the backing collection of\na tag.
		p	1	targetCollection	targetCollection
			c	the collection to which the tag entries should be added
c	aaz$c	net/minecraft/tag/Tag$TagEntry
	f	Lsm;	a	id
	f	Laaz;	b	tag
	m	(Laaz;)V	<init>	<init>
		p	1	tag	tag
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	()Lsm;	a	getId
c	aaz$d	net/minecraft/tag/Tag$CollectionEntry
	f	Ljava/util/Collection;	a	values
	m	()Ljava/util/Collection;	a	getValues
c	ab	net/minecraft/advancement/criterion/Criterion
	m	(Lsv;Lab$a;)V	a	beginTrackingCondition
		p	1	manager	manager
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lac;	a	conditionsFromJson
		p	1	obj	obj
		p	2	context	context
	m	(Lsv;)V	a	endTracking
		p	1	tracker	tracker
	m	()Lsm;	a	getId
	m	(Lsv;Lab$a;)V	b	endTrackingCondition
		p	1	manager	manager
c	ab$a	net/minecraft/advancement/criterion/Criterion$ConditionsContainer
	f	Lac;	a	conditions
	f	Lu;	b	advancement
	f	Ljava/lang/String;	c	id
	m	(Lac;Lu;Ljava/lang/String;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	advancement	advancement
		p	3	id	id
	m	(Lsv;)V	a	grant
		p	1	tracker	tracker
	m	()Lac;	a	getConditions
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	aba	net/minecraft/tag/TagContainer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	I	c	JSON_EXTENSION_LENGTH
	f	Ljava/util/Map;	d	entries
	f	Ljava/util/function/Function;	e	getter
	f	Ljava/lang/String;	f	dataType
	f	Z	g	ordered
	f	Ljava/lang/String;	h	entryType
	m	(Ljava/util/function/Function;Ljava/lang/String;ZLjava/lang/String;)V	<init>	<init>
		p	1	getter	getter
		p	2	dataType	dataType
		p	3	ordered	ordered
		p	4	entryType	entryType
	m	(Lsm;)Laaz;	a	get
		p	1	id	id
	m	(Ljava/util/Map;)V	a	applyReload
		p	1	preparedBuilders	preparedBuilders
	m	()Ljava/util/Collection;	a	getKeys
	m	(Lzb;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	prepareReload
		p	1	manager	manager
		p	2	executor	executor
	m	(Ljava/lang/Object;)Ljava/util/Collection;	a	getTagsFor
		p	1	object	object
	m	()Ljava/util/Map;	b	getEntries
	m	(Ljava/util/Map;)V	b	setEntries
		p	1	entries	entries
	m	(Lsm;)Laaz;	b	getOrCreate
		p	1	id	id
c	abb	net/minecraft/tag/RegistryTagManager
	f	Laay;	a	blocks
	f	Laay;	b	items
	f	Laay;	c	fluids
	f	Laay;	d	entityTypes
	m	(Lkv;)V	a	toPacket
		p	1	buf	buf
	m	()Laay;	a	blocks
	m	()Laay;	b	items
	m	(Lkv;)Labb;	b	fromPacket
		p	0	buf	buf
	m	()Laay;	c	fluids
	m	()Laay;	d	entityTypes
c	abb$a	net/minecraft/tag/RegistryTagManager$BuilderHolder
	f	Ljava/util/Map;	a	blocks
	f	Ljava/util/Map;	b	items
	f	Ljava/util/Map;	c	fluids
	f	Ljava/util/Map;	d	entityTypes
	m	(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1	blocks	blocks
		p	2	items	items
		p	3	fluids	fluids
		p	4	entityTypes	entityTypes
c	abd	net/minecraft/util/PackedIntegerArray
	f	[J	a	storage
	f	I	b	elementBits
	f	J	c	maxValue
	f	I	d	size
	m	(II)V	<init>	<init>
		p	1	elementBits	elementBits
		p	2	size	size
	m	(II[J)V	<init>	<init>
		p	1	elementBits	elementBits
		p	2	size	size
		p	3	storage	storage
	m	(Ljava/util/function/IntConsumer;)V	a	forEach
		p	1	consumer	consumer
	m	(I)I	a	get
		p	1	index	index
	m	(II)I	a	setAndGetOldValue
		p	1	index	index
		p	2	value	value
	m	()[J	a	getStorage
	m	(II)V	b	set
		p	1	index	index
		p	2	value	value
	m	()I	b	getSize
	m	()I	c	getElementBits
c	abe	net/minecraft/util/TypeFilterableList
	f	Ljava/util/Map;	a	elementsByType
	f	Ljava/lang/Class;	b	elementType
	f	Ljava/util/List;	c	allElements
	m	(Ljava/lang/Class;)V	<init>	<init>
		p	1	elementType	elementType
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	getAllOfType
		p	1	type	type
	m	(Ljava/lang/Object;)Z	add	add
		p	1	e	e
	m	(Ljava/lang/Object;)Z	contains	contains
		p	1	o	o
	m	(Ljava/lang/Object;)Z	remove	remove
		p	1	o	o
c	abf	net/minecraft/util/Int2ObjectBiMap
	f	Ljava/lang/Object;	a	empty
	f	[Ljava/lang/Object;	b	values
	f	[I	c	ids
	f	[Ljava/lang/Object;	d	idToValues
	f	I	e	nextId
	f	I	f	size
	m	()V	a	clear
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljava/lang/Object;I)V	a	put
	m	()I	b	size
	m	(Ljava/lang/Object;I)I	b	findIndex
	m	()I	c	nextId
	m	(I)I	c	getIdFromIndex
	m	(Ljava/lang/Object;)I	c	add
	m	(I)V	d	resize
	m	(Ljava/lang/Object;)I	d	getIdealIndex
	m	(I)I	e	findFree
c	abg	net/minecraft/network/NetworkEncryptionUtils
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljava/lang/String;[[B)[B	a	hash
		p	0	algorithm	algorithm
		p	1	data	data
	m	(Ljava/security/Key;[B)[B	a	encrypt
		p	0	key	key
		p	1	data	data
	m	([B)Ljava/security/PublicKey;	a	readEncodedPublicKey
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	cipherFromKey
		p	0	opMode	opMode
		p	1	key	key
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptSecretKey
		p	0	privateKey	privateKey
		p	1	encryptedSecretKey	encryptedSecretKey
	m	()Ljavax/crypto/SecretKey;	a	generateKey
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	crypt
		p	0	opMode	opMode
		p	1	algorithm	algorithm
		p	2	key	key
	m	(ILjava/security/Key;[B)[B	a	crypt
		p	0	opMode	opMode
		p	1	key	key
		p	2	data	data
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	generateServerId
		p	0	baseServerId	baseServerId
		p	1	publicKey	publicKey
		p	2	secretKey	secretKey
	m	()Ljava/security/KeyPair;	b	generateServerKeyPair
	m	(Ljava/security/Key;[B)[B	b	decrypt
		p	0	key	key
		p	1	data	data
c	abh	net/minecraft/util/CsvWriter
	f	Ljava/io/Writer;	a	writer
	f	I	b	column
	m	(Ljava/io/Writer;Ljava/util/List;)V	<init>	<init>
		p	1	writer	writer
		p	2	headers	headers
	m	(Ljava/util/stream/Stream;)V	a	printRow
		p	1	columns	columns
	m	()Labh$a;	a	makeHeader
	m	([Ljava/lang/Object;)V	a	printRow
		p	1	columns	columns
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	print
		p	0	object	object
c	abh$a	net/minecraft/util/CsvWriter$Header
	f	Ljava/util/List;	a	columns
	m	(Ljava/lang/String;)Labh$a;	a	addColumn
	m	(Ljava/io/Writer;)Labh;	a	startBody
c	abi	net/minecraft/util/DynamicDeserializer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lcom/mojang/datafixers/Dynamic;Lgb;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	deserialize
		p	1	dynamic	dynamic
		p	2	registry	registry
		p	3	typeFieldName	typeFieldName
	m	(Lcom/mojang/datafixers/Dynamic;)Ljava/lang/Object;	deserialize	deserialize
		p	1	dynamic	dynamic
c	abj	net/minecraft/util/MetricsData
	f	[J	a	samples
	f	I	b	startIndex
	f	I	c	sampleCount
	f	I	d	writeIndex
	m	()I	a	getStartIndex
	m	(J)V	a	pushSample
		p	1	time	time
	m	(I)I	b	wrapIndex
		p	1	index	index
	m	()I	b	getCurrentIndex
	m	()[J	c	getSamples
c	abk	net/minecraft/util/JsonHelper
	f	Lcom/google/gson/Gson;	a	GSON
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	0	element	element
		p	1	name	name
		p	2	context	context
		p	3	type	type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	0	object	object
		p	1	element	element
		p	2	defaultValue	defaultValue
		p	3	context	context
		p	4	type	type
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	a	deserialize
		p	2	type	type
		p	3	lenient	lenient
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	deserialize
		p	0	content	content
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getArray
		p	0	object	object
		p	1	name	name
		p	2	defaultArray	defaultArray
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;	a	deserialize
		p	1	content	content
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getLong
		p	0	object	object
		p	1	element	element
		p	2	defaultLong	defaultLong
	m	(Ljava/io/Reader;Z)Lcom/google/gson/JsonObject;	a	deserialize
		p	1	lenient	lenient
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getString
		p	0	object	object
		p	1	element	element
		p	2	defaultStr	defaultStr
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	a	deserialize
		p	1	content	content
		p	3	lenient	lenient
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getByte
		p	0	object	object
		p	1	element	element
		p	2	defaultByte	defaultByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getFloat
		p	0	object	object
		p	1	element	element
		p	2	defaultFloat	defaultFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getObject
		p	0	object	object
		p	1	element	element
		p	2	defaultObject	defaultObject
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
	m	(Lcom/google/gson/JsonElement;)Z	a	isString
		p	0	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	0	object	object
		p	1	element	element
		p	2	context	context
		p	3	type	type
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/reflect/Type;Z)Ljava/lang/Object;	a	deserialize
		p	1	content	content
		p	3	lenient	lenient
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	hasString
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	deserialize
		p	1	content	content
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/reflect/Type;Z)Ljava/lang/Object;	a	deserialize
		p	3	lenient	lenient
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getInt
		p	0	object	object
		p	1	element	element
		p	2	defaultInt	defaultInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getBoolean
		p	0	object	object
		p	1	element	element
		p	2	defaultBoolean	defaultBoolean
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	asString
		p	0	element	element
		p	1	name	name
	m	(Ljava/lang/String;Z)Lcom/google/gson/JsonObject;	a	deserialize
		p	0	content	content
		p	1	lenient	lenient
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumber
		p	0	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lbei;	b	asItem
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	hasBoolean
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	asBoolean
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	hasArray
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
		p	0	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	asFloat
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	asLong
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	hasPrimitive
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	hasElement
		p	0	object	object
		p	1	lement	lement
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	asInt
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	h	getString
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	asByte
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lbei;	i	getItem
		p	0	object	object
		p	1	key	key
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	j	getBoolean
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	l	getFloat
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	asObject
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	m	getLong
		p	0	object	object
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	asArray
		p	0	element	element
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	n	getInt
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	t	getObject
		p	0	object	object
		p	1	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	u	getArray
		p	0	object	object
		p	1	element	element
c	abl	net/minecraft/client/util/NetworkUtils
	f	Lcom/google/common/util/concurrent/ListeningExecutorService;	a	downloadExecutor
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILabs;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture;	a	download
	m	()I	a	findLocalPort
c	abm	net/minecraft/util/LowercaseMap
	f	Ljava/util/Map;	a	delegate
	m	(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	put
c	abn	net/minecraft/util/Lazy
	f	Ljava/util/function/Supplier;	a	supplier
	f	Ljava/lang/Object;	b	value
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	delegate	delegate
	m	()Ljava/lang/Object;	a	get
c	abp	net/minecraft/world/biome/source/SeedMixer
	m	(JJ)J	a	mixSeed
		p	0	seed	seed
		p	2	salt	salt
c	abq	net/minecraft/util/LowercaseEnumTypeAdapterFactory
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKey
		p	1	o	o
c	abr	net/minecraft/util/math/MathHelper
	f	F	a	SQUARE_ROOT_OF_TWO
	f	[F	b	SINE_TABLE
	f	Ljava/util/Random;	c	RANDOM
	f	[I	d	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	e	SMALLEST_FRACTION_FREE_DOUBLE
	f	[D	f	ARCSINE_TABLE
	f	[D	g	COSINE_TABLE
	m	(DD)D	a	absMax
	m	(F)F	a	sin
	m	(Ljava/util/Random;DD)D	a	nextDouble
		p	0	random	random
		p	1	min	min
		p	3	max	max
	m	(Ljava/util/Random;FF)F	a	nextFloat
		p	0	random	random
		p	1	min	min
		p	2	max	max
	m	(Ljava/lang/String;I)I	a	parseInt
		p	0	string	string
		p	1	fallback	fallback
	m	(FF)Z	a	approximatelyEquals
		p	0	a	a
		p	1	b	b
	m	(III)I	a	clamp
		p	0	value	value
		p	1	min	min
		p	2	max	max
	m	(FFF)F	a	clamp
		p	0	value	value
		p	1	min	min
		p	2	max	max
	m	(Ljava/util/Random;II)I	a	nextInt
		p	0	random	random
		p	1	min	min
		p	2	max	max
	m	(Ljava/lang/String;DD)D	a	parseDouble
		p	0	string	string
		p	1	fallback	fallback
	m	([J)D	a	average
		p	0	array	array
	m	(Ljava/lang/String;II)I	a	parseInt
		p	0	string	string
		p	1	fallback	fallback
		p	2	minimum	minimum
	m	(Ljava/lang/String;D)D	a	parseDouble
		p	0	string	string
		p	1	fallback	fallback
	m	()Ljava/util/UUID;	a	randomUUID
	m	(Lgg;)J	a	hashCode
		p	0	vec	vec
	m	(D)F	a	sqrt
	m	(Ljava/util/Random;)Ljava/util/UUID;	a	randomUuid
		p	0	random	random
	m	(DDD)D	a	clamp
		p	0	value	value
		p	2	min	min
		p	4	max	max
	m	(I)I	a	abs
	m	(II)I	a	floorDiv
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
		p	0	start	start
		p	1	end	end
		p	2	leftPredicate	leftPredicate
	m	(JJJ)J	a	clamp
		p	0	value	value
		p	2	min	min
		p	4	max	max
	m	(DDDDDDDDDDD)D	a	lerp3
		p	0	deltaX	deltaX
		p	2	deltaY	deltaY
		p	4	deltaZ	deltaZ
	m	(DDDDDD)D	a	lerp2
		p	0	deltaX	deltaX
		p	2	deltaY	deltaY
	m	(FFF)F	b	capRotation
		p	0	start	start
		p	1	end	end
		p	2	speed	speed
	m	(I)I	b	wrapDegrees
	m	(III)I	b	packRgb
		p	0	r	r
		p	1	g	g
		p	2	b	b
	m	(FF)F	b	floorMod
	m	(DDD)D	b	clampedLerp
		p	0	first	first
		p	2	second	second
		p	4	delta	delta
	m	(F)F	b	cos
	m	(D)I	b	fastFloor
	m	(II)I	b	floorMod
	m	(DD)Z	b	approximatelyEquals
		p	0	a	a
		p	2	b	b
	m	(D)I	c	floor
	m	(FF)F	c	subtractAngles
		p	0	start	start
		p	1	end	end
	m	(F)F	c	sqrt
	m	(II)I	c	roundUp
	m	(III)J	c	hashCode
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(DDD)D	c	minusDiv
		p	0	numerator	numerator
		p	2	delta	delta
		p	4	denominator	denominator
	m	(I)I	c	smallestEncompassingPowerOfTwo
		p	0	value	value
	m	(DD)D	c	floorMod
	m	(DDD)D	d	lerp
		p	0	delta	delta
		p	2	first	first
		p	4	second	second
	m	(I)I	d	log2DeBruijn
	m	(DD)D	d	atan2
	m	(D)J	d	lfloor
	m	(F)I	d	floor
	m	(FF)F	d	angleBetween
		p	0	first	first
		p	1	second	second
	m	(F)F	e	abs
	m	(D)I	e	absFloor
	m	(FFF)I	e	packRgb
		p	0	r	r
		p	1	g	g
		p	2	b	b
	m	(I)I	e	log2
	m	(I)I	f	idealHash
	m	(FFF)I	f	hsvToRgb
		p	0	hue	hue
		p	1	saturation	saturation
		p	2	value	value
	m	(F)I	f	ceil
	m	(D)I	f	ceil
	m	(I)Z	g	isPowerOfTwo
	m	(F)F	g	wrapDegrees
	m	(D)D	g	wrapDegrees
	m	(FFF)F	g	lerp
		p	0	delta	delta
		p	1	first	first
		p	2	second	second
	m	(FFF)F	h	lerpAngleDegrees
		p	0	delta	delta
		p	1	first	first
		p	2	second	second
	m	(F)F	h	fractionalPart
		p	0	value	value
	m	(D)D	h	fractionalPart
		p	0	value	value
	m	(F)F	i	fastInverseSqrt
		p	0	x	x
	m	(D)D	i	fastInverseSqrt
		p	0	x	x
	m	(D)D	j	perlinFade
	m	(F)F	j	fastInverseCbrt
		p	0	x	x
	m	(FFF)F	j	lerpAngle
		p	0	start	start
		p	1	end	end
		p	2	delta	delta
	m	(D)I	k	sign
c	abs	net/minecraft/util/ProgressListener
	m	()V	a	setDone
	m	(I)V	a	progressStagePercentage
c	abt	net/minecraft/util/ReusableStream
	f	Ljava/util/List;	a	collectedElements
	f	Ljava/util/Spliterator;	b	source
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1	stream	stream
	m	()Ljava/util/stream/Stream;	a	stream
c	abt$1	net/minecraft/util/ReusableStream$1
	f	I	b	pos
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
		p	1	consumer	consumer
c	abu	net/minecraft/util/DynamicSerializable
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object;	a	serialize
		p	1	ops	ops
c	abv	net/minecraft/client/util/SmoothUtil
	f	D	a	actualSum
	f	D	b	smoothedSum
	f	D	c	movementLatency
	m	()V	a	clear
	m	(DD)D	a	smooth
		p	1	original	original
		p	3	smoother	smoother
c	abw	net/minecraft/util/SortedArraySet
	f	Ljava/util/Comparator;	a	comparator
	f	[Ljava/lang/Object;	b	elements
	f	I	c	size
	m	(ILjava/util/Comparator;)V	<init>	<init>
		p	1	initialCapacity	initialCapacity
		p	2	comparator	comparator
	m	(I)Labw;	a	create
		p	0	initialCapacity	initialCapacity
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addAndGet
		p	1	object	object
	m	(Ljava/lang/Object;I)V	a	add
		p	1	object	object
		p	2	index	index
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	cast
		p	0	array	array
	m	(I)I	b	insertionPoint
		p	0	binarySearchResult	binarySearchResult
	m	()Ljava/lang/Object;	b	first
	m	(I)V	c	ensureCapacity
		p	1	minCapacity	minCapacity
	m	(Ljava/lang/Object;)I	c	binarySearch
		p	1	object	object
	m	(I)V	d	remove
		p	1	index	index
	m	(I)Ljava/lang/Object;	e	get
		p	1	index	index
c	abw$a	net/minecraft/util/SortedArraySet$SetIterator
	f	I	b	nextIndex
	f	I	c	lastIndex
c	abx	net/minecraft/util/StringIdentifiable
	m	()Ljava/lang/String;	o	asString
c	aby	net/minecraft/util/ChatUtil
	f	Ljava/util/regex/Pattern;	a	PATTERN
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripTextFormat
		p	0	text	text
	m	(I)Ljava/lang/String;	a	ticksToString
	m	(Ljava/lang/String;)Z	b	isEmpty
c	abz	net/minecraft/util/Pair
	f	Ljava/lang/Object;	a	left
	f	Ljava/lang/Object;	b	right
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1	left	left
		p	2	right	right
	m	()Ljava/lang/Object;	a	getLeft
	m	()Ljava/lang/Object;	b	getRight
c	ac	net/minecraft/advancement/criterion/CriterionConditions
	m	()Lsm;	a	getId
	m	()Lcom/google/gson/JsonElement;	b	toJson
c	aca	net/minecraft/util/Unit
c	acc	net/minecraft/util/WeightedPicker
	m	(Ljava/util/Random;Ljava/util/List;)Lacc$a;	a	getRandom
		p	0	random	random
		p	1	list	list
	m	(Ljava/util/Random;Ljava/util/List;I)Lacc$a;	a	getRandom
		p	0	random	random
		p	1	list	list
		p	2	weightSum	weightSum
	m	(Ljava/util/List;)I	a	getWeightSum
		p	0	list	list
	m	(Ljava/util/List;I)Lacc$a;	a	getAt
		p	0	list	list
		p	1	pos	pos
c	acc$a	net/minecraft/util/WeightedPicker$Entry
	f	I	a	weight
c	acd	net/minecraft/datafixer/DataFixTypes
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	typeReference
	m	()Lcom/mojang/datafixers/DSL$TypeReference;	a	getTypeReference
c	ace	net/minecraft/datafixer/Schemas
	f	Ljava/util/function/BiFunction;	a	EMPTY
	f	Ljava/util/function/BiFunction;	b	EMPTY_IDENTIFIER_NORMALIZE
	f	Lcom/mojang/datafixers/DataFixer;	c	fixer
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	build
		p	0	builder	builder
	m	()Lcom/mojang/datafixers/DataFixer;	a	getFixer
	m	()Lcom/mojang/datafixers/DataFixer;	b	create
c	ace$1	net/minecraft/datafixer/Schemas$1
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
		p	3	name	name
		p	4	type	type
c	ace$2	net/minecraft/datafixer/Schemas$2
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
		p	3	name	name
		p	4	type	type
c	acf	net/minecraft/datafixer/fix/OminousBannerBlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixBannerName
c	acg	net/minecraft/datafixer/fix/OminousBannerItemRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixBannerName
		p	1	tag	tag
c	ach	net/minecraft/datafixer/fix/ChoiceTypesFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	types
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	name	name
		p	3	types	types
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	method_15476
		p	1	name	name
c	aci	net/minecraft/datafixer/fix/AdvancementsFix
	f	Ljava/util/Map;	a	RENAMED_ADVANCEMENTS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acj	net/minecraft/datafixer/fix/AdvancementRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	3	name	name
		p	4	renamer	renamer
c	ack	net/minecraft/datafixer/fix/BedBlockEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acl	net/minecraft/datafixer/fix/BedItemColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acm	net/minecraft/datafixer/fix/BeehiveRenameFix
c	acn	net/minecraft/datafixer/fix/BiomesFix
	f	Ljava/util/Map;	a	RENAMED_BIOMES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aco	net/minecraft/datafixer/fix/BlockEntityBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixBannerColor
		p	1	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	d	method_15549
		p	0	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	e	method_15547
		p	0	tag	tag
c	acp	net/minecraft/datafixer/fix/BlockEntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acq	net/minecraft/datafixer/fix/BlockEntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acr	net/minecraft/datafixer/fix/BlockEntityIdFix
	f	Ljava/util/Map;	a	RENAMED_BLOCK_ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acs	net/minecraft/datafixer/fix/BlockEntityJukeboxFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	act	net/minecraft/datafixer/fix/BlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	keepPacked
		p	0	tag	tag
c	acu	net/minecraft/datafixer/fix/BlockEntityShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acv	net/minecraft/datafixer/fix/BlockEntitySignTextStrictJsonFix
	f	Lcom/google/gson/Gson;	a	GSON
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic;	a	fix
		p	1	tag	tag
		p	2	lineName	lineName
c	acv$1	net/minecraft/datafixer/fix/BlockEntitySignTextStrictJsonFix$1
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Llf;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	acw	net/minecraft/datafixer/fix/BlockNameFlatteningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	acx	net/minecraft/datafixer/fix/BlockNameFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	oldSchema	oldSchema
		p	2	name	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0	oldSchema	oldSchema
		p	1	name	name
		p	2	rename	rename
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1	oldName	oldName
c	acy	net/minecraft/datafixer/fix/BlockStateFlattening
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	[Lcom/mojang/datafixers/Dynamic;	b	ID_TO_NEW_STATE
	f	[Lcom/mojang/datafixers/Dynamic;	c	ID_TO_NEW_BLOCK
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	OLD_STATE_TO_ID
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	OLD_BLOCK_TO_ID
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	lookupState
		p	0	oldState	oldState
	m	(ILjava/lang/String;[Ljava/lang/String;)V	a	putStates
		p	0	oldId	oldId
		p	1	newStateStr	newStateStr
		p	2	oldStateStrings	oldStateStrings
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lookupBlock
		p	0	oldBlockName	oldBlockName
	m	()V	a	fillEmptyStates
	m	(I)Ljava/lang/String;	a	lookupStateBlock
		p	0	stateId	stateId
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic;	b	parseState
		p	0	stateStr	stateStr
	m	(I)Lcom/mojang/datafixers/Dynamic;	b	lookupState
		p	0	stateId	stateId
c	acz	net/minecraft/datafixer/fix/BlockStateStructureTemplateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ad	net/minecraft/advancement/AdvancementDisplay
	f	Llf;	a	title
	f	Llf;	b	description
	f	Lben;	c	icon
	f	Lsm;	d	background
	f	Lae;	e	frame
	f	Z	f	showToast
	f	Z	g	announceToChat
	f	Z	h	hidden
	f	F	i	xPos
	f	F	j	yPos
	m	(Lben;Llf;Llf;Lsm;Lae;ZZZ)V	<init>	<init>
		p	1	icon	icon
		p	2	title	title
		p	3	description	description
		p	4	background	background
		p	5	frame	frame
		p	6	showToast	showToast
		p	7	announceToChat	announceToChat
		p	8	hidden	hidden
	m	(Lkv;)V	a	toPacket
	m	(FF)V	a	setPosition
		p	1	xPos	xPos
		p	2	yPos	yPos
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lad;	a	fromJson
		p	0	obj	obj
		p	1	context	context
	m	(Lcom/google/gson/JsonObject;)Lben;	a	iconFromJson
	m	()Llf;	a	getTitle
	m	()Llf;	b	getDescription
	m	(Lkv;)Lad;	b	fromPacket
		p	0	buf	buf
	m	()Lben;	c	getIcon
	m	()Lsm;	d	getBackground
	m	()Lae;	e	getFrame
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceToChat
	m	()Z	j	isHidden
	m	()Lcom/google/gson/JsonElement;	k	toJson
	m	()Lcom/google/gson/JsonObject;	l	iconToJson
c	ada	net/minecraft/datafixer/fix/CatTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixCatTypeData
		p	1	tag	tag
c	adb	net/minecraft/datafixer/fix/BiomeFormatFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	schema	schema
		p	2	changesType	changesType
c	adc	net/minecraft/datafixer/fix/ChunkLightRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	add	net/minecraft/datafixer/fix/ChunkPalettedStorageFix
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/BitSet;	b	blocksNeedingSideUpdate
	f	Ljava/util/BitSet;	c	blocksNeedingInPlaceUpdate
	f	Lcom/mojang/datafixers/Dynamic;	d	pumpkin
	f	Lcom/mojang/datafixers/Dynamic;	e	podzol
	f	Lcom/mojang/datafixers/Dynamic;	f	snowyGrass
	f	Lcom/mojang/datafixers/Dynamic;	g	snowyMycelium
	f	Lcom/mojang/datafixers/Dynamic;	h	sunflowerUpper
	f	Lcom/mojang/datafixers/Dynamic;	i	lilacUpper
	f	Lcom/mojang/datafixers/Dynamic;	j	grassUpper
	f	Lcom/mojang/datafixers/Dynamic;	k	fernUpper
	f	Lcom/mojang/datafixers/Dynamic;	l	roseUpper
	f	Lcom/mojang/datafixers/Dynamic;	m	peonyUpper
	f	Ljava/util/Map;	n	flowerPot
	f	Ljava/util/Map;	o	skull
	f	Ljava/util/Map;	p	door
	f	Ljava/util/Map;	q	noteblock
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	r	colors
	f	Ljava/util/Map;	s	bed
	f	Ljava/util/Map;	t	banner
	f	Lcom/mojang/datafixers/Dynamic;	u	air
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	buildSkull
		p	0	out	out
		p	2	mob	mob
		p	3	block	block
	m	(Labf;Lcom/mojang/datafixers/Dynamic;)I	a	addTo
	m	(Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
	m	(Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String;	a	getName
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	buildBed
		p	0	out	out
	m	(Ljava/util/Map;Ljava/lang/String;I)V	a	buildDoor
		p	0	out	out
		p	1	name	name
	m	(ZZZZ)I	a	getSideToUpgradeFlag
		p	0	west	west
		p	1	east	east
		p	2	north	north
		p	3	south	south
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	b	fixChunk
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	buildBanner
		p	0	out	out
c	add$a	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$ChunkNibbleArray
	f	[B	a	contents
	m	(I)Z	a	usesLowNibble
		p	1	index	index
	m	(III)I	a	get
		p	1	x	x
		p	2	y	y
	m	(I)I	b	getRawIndex
		p	1	index	index
c	add$b	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Facing
	f	Ladd$b$a;	g	axis
	f	Ladd$b$b;	h	direction
	m	(Ljava/lang/String;ILadd$b$b;Ladd$b$a;)V	<init>	<init>
		p	3	direction	direction
	m	()Ladd$b$b;	a	getDirection
	m	()Ladd$b$a;	b	getAxis
c	add$b$a	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Facing$Axis
c	add$b$b	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Facing$Direction
	f	I	c	offset
	m	()I	a	getOffset
c	add$c	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Section
	f	I	a	y
	f	Labf;	b	paletteMap
	f	Lcom/mojang/datafixers/Dynamic;	c	paletteData
	f	Lcom/mojang/datafixers/Dynamic;	d	section
	f	Z	e	hasBlocks
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	inPlaceUpdates
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	innerPositions
	f	Ljava/util/Set;	h	seenStates
	f	[I	i	states
	m	(II)V	a	addInPlaceUpdate
		p	1	section	section
		p	2	index	index
	m	()Lcom/mojang/datafixers/Dynamic;	a	transform
	m	(ILcom/mojang/datafixers/Dynamic;)V	a	setBlock
		p	1	pos	pos
	m	(I)Lcom/mojang/datafixers/Dynamic;	a	getBlock
		p	1	index	index
	m	(I)I	b	visit
		p	1	sidesToUpgrade	sidesToUpgrade
c	add$d	net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Level
	f	I	a	sidesToUpgrade
	f	[Ladd$c;	b	sections
	f	Lcom/mojang/datafixers/Dynamic;	c	level
	f	I	d	xPos
	f	I	e	yPos
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
	m	(ILadd$b;)I	a	adjacentTo
		p	1	direction	direction
	m	()Lcom/mojang/datafixers/Dynamic;	a	transform
	m	(ILcom/mojang/datafixers/Dynamic;)V	a	setBlock
	m	(I)Lcom/mojang/datafixers/Dynamic;	a	getBlock
	m	(I)Lcom/mojang/datafixers/Dynamic;	b	getBlockEntity
	m	(I)Lcom/mojang/datafixers/Dynamic;	c	removeBlockEntity
	m	(I)Ladd$c;	d	getSection
c	ade	net/minecraft/datafixer/fix/ChunkStatusFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adf	net/minecraft/datafixer/fix/ChunkStatusFix2
	f	Ljava/util/Map;	a	statusMap
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adg	net/minecraft/datafixer/fix/ChunkStructuresTemplateRenameFix
	f	Lcom/google/common/collect/ImmutableMap;	a	structures
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adh	net/minecraft/datafixer/fix/ChunkToProtoChunkFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adi	net/minecraft/datafixer/fix/ColorlessShulkerEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adj	net/minecraft/datafixer/mapping/LegacyDyeItemMapping
	f	Ljava/util/Map;	a	MAP
c	adk	net/minecraft/datafixer/fix/EntityArmorStandSilentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixSilent
		p	1	tag	tag
c	adl	net/minecraft/datafixer/fix/EntityBlockStateFix
	f	Ljava/util/Map;	a	BLOCK_NAME_TO_ID
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	useFunction
		p	2	entityId	entityId
		p	3	function	function
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	mergeIdAndData
		p	2	oldIdKey	oldIdKey
		p	3	oldDataKey	oldDataKey
		p	4	newStateKey	newStateKey
	m	(Ljava/lang/String;)I	a	getNumericalBlockId
		p	0	blockId	blockId
c	adm	net/minecraft/datafixer/fix/EntityCatSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adn	net/minecraft/datafixer/fix/EntityCodSalmonFix
	f	Ljava/util/Map;	a	ENTITIES
	f	Ljava/util/Map;	b	SPAWN_EGGS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ado	net/minecraft/datafixer/fix/EntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixCustomName
		p	0	tag	tag
c	adp	net/minecraft/datafixer/fix/EntityElderGuardianSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adq	net/minecraft/datafixer/fix/EntityEquipmentToArmorAndHandFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	fixEquipment
c	adr	net/minecraft/datafixer/fix/EntityHealthFix
	f	Ljava/util/Set;	a	ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixHealth
		p	1	tag	tag
c	ads	net/minecraft/datafixer/fix/EntityHorseSaddleFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adt	net/minecraft/datafixer/fix/EntityHorseSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adu	net/minecraft/datafixer/fix/EntityIdFix
	f	Ljava/util/Map;	a	RENAMED_ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adv	net/minecraft/datafixer/fix/EntityItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixDirection
	m	(B)B	a	updateDirection
c	adw	net/minecraft/datafixer/fix/EntityMinecartIdentifiersFix
	f	Ljava/util/List;	a	MINECARTS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	adx	net/minecraft/datafixer/fix/HangingEntityFix
	f	[[I	a	OFFSETS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;ZZ)Lcom/mojang/datafixers/Dynamic;	a	fixDecorationPosition
		p	1	tag	tag
		p	2	isPainting	isPainting
		p	3	isItemFrame	isItemFrame
c	ady	net/minecraft/datafixer/fix/EntityPaintingMotiveFix
	f	Ljava/util/Map;	a	RENAMED_MOTIVES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	renameMotive
		p	1	dynamic	dynamic
c	adz	net/minecraft/datafixer/fix/EntityPufferfishRenameFix
	f	Ljava/util/Map;	a	RENAMED_FISHES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ae	net/minecraft/advancement/AdvancementFrame
	f	Ljava/lang/String;	d	id
	f	I	e	texV
	f	Lg;	f	titleFormat
	m	(Ljava/lang/String;ILjava/lang/String;ILg;)V	<init>	<init>
		p	3	id	id
		p	4	texV	texV
		p	5	titleFormat	titleFormat
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Lae;	a	forName
		p	0	name	name
	m	()I	b	texV
	m	()Lg;	c	getTitleFormat
c	aea	net/minecraft/datafixer/fix/EntityRavagerRenameFix
	f	Ljava/util/Map;	a	ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aeb	net/minecraft/datafixer/fix/EntityRedundantChanceTagsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aec	net/minecraft/datafixer/fix/EntityTransformFix
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	name	name
		p	2	outputSchema	outputSchema
		p	3	changesType	changesType
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	transform
		p	1	choice	choice
	m	(Ljava/lang/Object;Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	makeTyped
c	aed	net/minecraft/datafixer/fix/EntityRidingToPassengerFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aee	net/minecraft/datafixer/fix/EntityShulkerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aef	net/minecraft/datafixer/fix/EntitySkeletonSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aeg	net/minecraft/datafixer/fix/EntityStringUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aeh	net/minecraft/datafixer/fix/EntityTheRenameningBlock
	f	Ljava/util/Map;	a	ENTITIES
	f	Ljava/util/Map;	b	BLOCKS
	f	Ljava/util/Map;	c	ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aei	net/minecraft/datafixer/fix/EntityTippedArrowFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aej	net/minecraft/datafixer/fix/EntityWolfColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixCollarColor
		p	1	tag	tag
c	aek	net/minecraft/datafixer/fix/EntityZombieSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ael	net/minecraft/datafixer/fix/EntityZombieVillagerTypeFix
	f	Ljava/util/Random;	a	RANDOM
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(I)I	a	clampType
		p	1	type	type
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixZombieType
		p	1	tag	tag
c	aem	net/minecraft/datafixer/fix/RemovePoiValidTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	removeValidTag
c	aen	net/minecraft/datafixer/fix/HeightmapRenamingFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	renameHeightmapTags
		p	1	tag	tag
c	aeo	net/minecraft/datafixer/fix/IglooMetadataRemovalFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	removeMetadata
		p	0	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	b	removeIgloos
		p	0	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;)Z	c	isIgloo
		p	0	tag	tag
c	aep	net/minecraft/datafixer/fix/ItemBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aeq	net/minecraft/datafixer/fix/ItemCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixCustomName
		p	1	tag	tag
c	aer	net/minecraft/datafixer/fix/ItemIdFix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	NUMERICAL_ID_TO_STRING_ID_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(I)Ljava/lang/String;	a	fromId
		p	0	id	id
c	aes	net/minecraft/datafixer/fix/ItemLoreToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	componentize
		p	0	string	string
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixLoreTags
		p	0	tags	tags
c	aet	net/minecraft/datafixer/fix/ItemPotionFix
	f	[Ljava/lang/String;	a	ID_TO_POTIONS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aeu	net/minecraft/datafixer/fix/ItemNameFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	name	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0	outputSchema	outputSchema
		p	1	name	name
		p	2	rename	rename
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
c	aev	net/minecraft/datafixer/fix/ItemShulkerBoxColorFix
	f	[Ljava/lang/String;	a	COLORED_SHULKER_BOX_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aew	net/minecraft/datafixer/fix/ItemSpawnEggFix
	f	[Ljava/lang/String;	a	DAMAGE_TO_ENTITY_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aex	net/minecraft/datafixer/fix/ItemStackEnchantmentFix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ID_TO_ENCHANTMENTS_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixEnchantments
		p	1	tag	tag
c	aey	net/minecraft/datafixer/fix/ItemInstanceMapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aez	net/minecraft/datafixer/fix/ItemInstanceSpawnEggFix
	f	Ljava/util/Map;	a	ENTITY_SPAWN_EGGS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	af	net/minecraft/advancement/CriteriaMerger
	f	Laf;	a	AND
	f	Laf;	b	OR
c	afa	net/minecraft/datafixer/fix/ItemInstanceTheFlatteningFix
	f	Ljava/util/Map;	a	FLATTENING_MAP
	f	Ljava/util/Set;	b	ORIGINAL_ITEM_NAMES
	f	Ljava/util/Set;	c	DAMAGABLE_ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	getItem
		p	0	originalName	originalName
		p	1	damage	damage
c	afb	net/minecraft/datafixer/fix/ItemWaterPotionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afc	net/minecraft/datafixer/fix/ItemWrittenBookPagesStrictJsonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixBookPages
		p	1	tag	tag
c	afd	net/minecraft/datafixer/fix/LeavesFix
c	afd$b	net/minecraft/datafixer/fix/LeavesFix$ListFixer
	f	Ljava/util/List;	b	data
	m	()Z	a	needsFix
c	afe	net/minecraft/datafixer/fix/LevelDataGeneratorOptionsFix
	f	Ljava/util/Map;	a	NUMERICAL_IDS_TO_BIOME_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	fixGeneratorOptions
		p	0	generatorOptions	generatorOptions
		p	1	ops	ops
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	parseFlatLayer
		p	0	layer	layer
	m	(Ljava/lang/String;)Ljava/util/List;	b	parseFlatLayers
		p	0	layers	layers
c	aff	net/minecraft/datafixer/fix/LevelFlatGeneratorInfoFix
	f	Lcom/google/common/base/Splitter;	a	SPLIT_ON_SEMICOLON
	f	Lcom/google/common/base/Splitter;	b	SPLIT_ON_COMMA
	f	Lcom/google/common/base/Splitter;	c	SPLIT_ON_LOWER_X
	f	Lcom/google/common/base/Splitter;	d	SPLIT_ON_ASTERISK
	f	Lcom/google/common/base/Splitter;	e	SPLIT_ON_COLON
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixFlatGeneratorOptions
		p	1	generatorOptions	generatorOptions
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixGeneratorOptions
		p	1	tag	tag
c	afg	net/minecraft/datafixer/fix/MapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afh	net/minecraft/datafixer/fix/MobSpawnerEntityIdentifiersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	fixSpawner
		p	1	tag	tag
c	afi	net/minecraft/datafixer/fix/ChoiceFix
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	choiceName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
		p	3	name	name
		p	4	type	type
		p	5	choiceName	choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	transform
c	afj	net/minecraft/datafixer/fix/NewVillageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afk	net/minecraft/datafixer/fix/ObjectiveDisplayNameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afl	net/minecraft/datafixer/fix/ObjectiveRenderTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Lcwo$a;	a	parseLegacyRenderType
		p	0	oldName	oldName
c	afm	net/minecraft/datafixer/fix/OptionsAddTextBackgroundFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)D	a	convertToTextBackgroundOpacity
		p	1	chatOpacity	chatOpacity
c	afn	net/minecraft/datafixer/fix/OptionsForceVBOFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afo	net/minecraft/datafixer/fix/OptionsKeyLwjgl3Fix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	NUMERICAL_KEY_IDS_TO_KEY_NAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afp	net/minecraft/datafixer/fix/OptionsKeyTranslationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afq	net/minecraft/datafixer/fix/OptionsLowerCaseLanguageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afr	net/minecraft/datafixer/fix/PointOfInterestRenameFix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
c	afs	net/minecraft/datafixer/fix/RecipeFix
	f	Ljava/util/Map;	a	recipes
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	aft	net/minecraft/datafixer/fix/RecipeRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	3	name	name
		p	4	renamer	renamer
c	afu	net/minecraft/datafixer/fix/RecipeRenamingFix
	f	Ljava/util/Map;	a	recipes
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	afv	net/minecraft/datafixer/TypeReferences
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	PLAYER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	HOTBAR
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	OPTIONS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	SAVED_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	POI_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	BLOCK_ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	ITEM_STACK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	ENTITY_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	ENTITY_TREE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	BLOCK_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	ITEM_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	BIOME
c	afw	net/minecraft/datafixer/mapping/LegacyCoralFanBlockMapping
	f	Ljava/util/Map;	a	MAP
c	afx	net/minecraft/datafixer/mapping/LegacyCoralBlockMapping
	f	Ljava/util/Map;	a	MAP
c	afy	net/minecraft/datafixer/fix/PointOfInterestReorganizationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	reorganize
		p	0	tag	tag
c	afz	net/minecraft/datafixer/fix/SavedDataVillageCropFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	method_5152
		p	1	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic;	a	fixCropId
		p	0	tag	tag
		p	1	cropId	cropId
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixVillageChildren
		p	0	villageChildren	villageChildren
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	b	method_5157
		p	0	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	c	fixSmallPlotCropIds
		p	0	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	d	fixLargePlotCropIds
		p	0	tag	tag
c	ag	net/minecraft/advancement/AdvancementPositioner
	f	Lu;	a	advancement
	f	Lag;	b	parent
	f	Lag;	c	previousSibling
	f	I	d	childrenSize
	f	Ljava/util/List;	e	children
	f	Lag;	f	optionalLast
	f	Lag;	g	substituteChild
	f	I	h	depth
	f	F	i	row
	f	F	j	relativeRowInSiblings
	m	(Lu;Lag;Lag;II)V	<init>	<init>
		p	2	parent	parent
		p	3	previousSibling	previousSibling
		p	4	childrenSize	childrenSize
		p	5	depth	depth
	m	(Lag;Lag;)Lag;	a	getLast
	m	(F)V	a	increaseRowRecursively
		p	1	deltaRow	deltaRow
	m	(Lag;)Lag;	a	onFinishCalculation
		p	1	last	last
	m	(FIF)F	a	findMinRowRecursively
		p	1	deltaRow	deltaRow
		p	2	depth	depth
		p	3	minRow	minRow
	m	()V	a	calculateRecursively
	m	(Lag;F)V	a	pushDown
		p	2	extraRowDistance	extraRowDistance
	m	(Lu;Lag;)Lag;	a	findChildrenRecursively
		p	2	lastChild	lastChild
	m	(Lu;)V	a	arrangeForTree
		p	0	root	root
	m	()V	b	onFinishChildrenCalculation
	m	()Lag;	c	getFirstChild
	m	()Lag;	d	getLastChild
	m	()V	e	apply
c	aga	net/minecraft/datafixer/fix/EntitySimpleTransformFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	name	name
		p	2	oldSchema	oldSchema
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	transform
		p	1	choice	choice
		p	2	tag	tag
c	agb	net/minecraft/datafixer/fix/EntityRenameFix
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	name	name
		p	2	outputSchema	outputSchema
		p	3	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1	oldName	oldName
c	agc	net/minecraft/datafixer/fix/StatsCounterFix
	f	Ljava/util/Set;	a	SKIP
	f	Ljava/util/Map;	b	RENAMED_GENERAL_STATS
	f	Ljava/util/Map;	c	RENAMED_ITEM_STATS
	f	Ljava/util/Map;	d	RENAMED_ENTITY_STATS
	f	Ljava/util/Map;	e	RENAMED_ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getItem
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getBlock
c	agd	net/minecraft/datafixer/fix/StructureReferenceFix
	m	(Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	updateReferences
c	age	net/minecraft/datafixer/fix/SwimStatsRenameFix
c	agf	net/minecraft/datafixer/fix/TeamDisplayNameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agg	net/minecraft/datafixer/fix/AddTrappedChestFix
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	agg$a	net/minecraft/datafixer/fix/AddTrappedChestFix$ListFixer
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	e	targets
	m	(I)Z	a	isTarget
		p	1	index	index
c	agh	net/minecraft/datafixer/fix/VillagerProfessionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1	outputSchema	outputSchema
	m	(II)Ljava/lang/String;	a	convertProfessionId
		p	0	professionId	professionId
		p	1	careerId	careerId
c	agi	net/minecraft/datafixer/fix/VillagerXpRebuildFix
	f	[I	a	LEVEL_TO_XP
	m	(I)I	a	levelToXp
		p	0	level	level
c	agj	net/minecraft/datafixer/fix/VillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixPumpkinTrade
c	agk	net/minecraft/datafixer/fix/WriteAndReadFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	name	name
		p	3	type	type
c	agl	net/minecraft/datafixer/fix/ZombieVillagerXpRebuildFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1	outputSchema	outputSchema
		p	2	changesType	changesType
c	ago	net/minecraft/datafixer/schema/IdentifierNormalizingSchema
	m	(Ljava/lang/String;)Ljava/lang/String;	a	normalize
		p	0	id	id
c	agp	net/minecraft/datafixer/schema/Schema100
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	targetItems
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	targetEntity
c	agq	net/minecraft/datafixer/schema/Schema102
c	agr	net/minecraft/datafixer/schema/Schema1022
c	ags	net/minecraft/datafixer/schema/Schema106
c	agt	net/minecraft/datafixer/schema/Schema107
c	agu	net/minecraft/datafixer/schema/Schema1125
c	agv	net/minecraft/datafixer/schema/Schema135
c	agw	net/minecraft/datafixer/schema/Schema143
c	agx	net/minecraft/datafixer/schema/Schema1451
c	agy	net/minecraft/datafixer/schema/Schema1451v1
c	agz	net/minecraft/datafixer/schema/Schema1451v2
c	ah	net/minecraft/advancement/criterion/AbstractCriterionConditions
	f	Lsm;	a	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
c	aha	net/minecraft/datafixer/schema/Schema1451v3
c	ahb	net/minecraft/datafixer/schema/Schema1451v4
c	ahc	net/minecraft/datafixer/schema/Schema1451v5
c	ahd	net/minecraft/datafixer/schema/Schema1451v6
c	ahe	net/minecraft/datafixer/schema/Schema1451v7
c	ahf	net/minecraft/datafixer/schema/Schema1460
c	ahg	net/minecraft/datafixer/schema/Schema1466
c	ahh	net/minecraft/datafixer/schema/Schema1470
c	ahi	net/minecraft/datafixer/schema/Schema1481
c	ahj	net/minecraft/datafixer/schema/Schema1483
c	ahk	net/minecraft/datafixer/schema/Schema1486
c	ahl	net/minecraft/datafixer/schema/Schema1510
c	ahm	net/minecraft/datafixer/schema/Schema1800
c	ahn	net/minecraft/datafixer/schema/Schema1801
c	aho	net/minecraft/datafixer/schema/Schema1904
c	ahp	net/minecraft/datafixer/schema/Schema1906
c	ahq	net/minecraft/datafixer/schema/Schema1909
c	ahr	net/minecraft/datafixer/schema/Schema1920
c	ahs	net/minecraft/datafixer/schema/Schema1928
c	aht	net/minecraft/datafixer/schema/Schema1929
c	ahu	net/minecraft/datafixer/schema/Schema1931
c	ahv	net/minecraft/datafixer/schema/Schema2100
c	ahw	net/minecraft/datafixer/schema/Schema501
c	ahx	net/minecraft/datafixer/schema/Schema700
c	ahy	net/minecraft/datafixer/schema/Schema701
c	ahz	net/minecraft/datafixer/schema/Schema702
c	ai	net/minecraft/advancement/criterion/BeeNestDestroyedCriterion
	f	Lsm;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbph;	a	getBlock
		p	0	root	root
	m	(Lxe;Lbph;Lben;I)V	a	test
		p	1	player	player
		p	2	block	block
		p	3	stack	stack
		p	4	beeCount	beeCount
	m	(Lbph;Lben;ILai$a;)Z	a	method_23872
		p	3	conditions	conditions
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lai$a;	b	conditionsFromJson
c	ai$a	net/minecraft/advancement/criterion/BeeNestDestroyedCriterion$Conditions
	f	Lbph;	a	block
	f	Lbj;	b	item
	f	Lbr$d;	c	beeCount
	m	(Lbph;Lbj;Lbr$d;)V	<init>	<init>
		p	1	block	block
		p	2	item	item
		p	3	beeCount	beeCount
	m	(Lbph;Lben;I)Z	a	test
		p	1	block	block
		p	2	stack	stack
		p	3	count	count
	m	(Lbph;Lbj$a;Lbr$d;)Lai$a;	a	create
		p	0	block	block
		p	1	itemPredicateBuilder	itemPredicateBuilder
		p	2	beeCountRange	beeCountRange
c	aia	net/minecraft/datafixer/schema/Schema703
c	aib	net/minecraft/datafixer/schema/Schema704
c	aic	net/minecraft/datafixer/schema/Schema705
c	aid	net/minecraft/datafixer/schema/Schema808
c	aie	net/minecraft/datafixer/schema/Schema99
c	aih	net/minecraft/util/profiler/ProfilerSystem
	f	J	a	TIMEOUT_NANOSECONDS
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/List;	c	path
	f	Lit/unimi/dsi/fastutil/longs/LongList;	d	timeList
	f	Ljava/util/Map;	e	locationInfos
	f	Ljava/util/function/IntSupplier;	f	endTickGetter
	f	J	g	startTime
	f	I	h	startTick
	f	Ljava/lang/String;	i	location
	f	Z	j	tickStarted
	f	Laih$a;	k	currentInfo
	f	Z	l	checkTimeout
	m	(JLjava/util/function/IntSupplier;Z)V	<init>	<init>
		p	1	startTime	startTime
		p	3	tickGetter	tickGetter
		p	4	checkTimeout	checkTimeout
	m	()Laih$a;	e	getCurrentInfo
c	aih$a	net/minecraft/util/profiler/ProfilerSystem$LocatedInfo
	f	J	a	time
	f	J	b	visits
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	c	counts
c	aii	net/minecraft/util/profiler/EmptyProfileResult
	f	Laii;	a	INSTANCE
c	aij	net/minecraft/util/profiler/ProfileResultImpl
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Laip;	b	EMPTY_INFO
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	d	COMPARATOR
	f	Ljava/util/Map;	e	locationInfos
	f	J	f	startTime
	f	I	g	startTick
	f	J	h	endTime
	f	I	i	endTick
	f	I	j	tickDuration
	m	(Ljava/util/Map;JIJI)V	<init>	<init>
		p	1	locationInfos	locationInfos
		p	2	startTime	startTime
		p	4	startTick	startTick
		p	5	endTime	endTime
		p	7	endTick	endTick
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounterDump
		p	1	counters	counters
		p	2	sb	sb
		p	3	tickSpan	tickSpan
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indent
		p	0	sb	sb
		p	1	size	size
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isSubpath
		p	0	parent	parent
		p	1	path	path
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendTiming
		p	1	level	level
		p	2	name	name
		p	3	sb	sb
	m	(ILjava/lang/String;Laij$a;ILjava/lang/StringBuilder;)V	a	appendCounter
		p	1	depth	depth
		p	2	name	name
		p	3	info	info
		p	4	tickSpan	tickSpan
		p	5	sb	sb
	m	(JI)Ljava/lang/String;	a	asString
		p	1	timeSpan	timeSpan
		p	3	tickSpan	tickSpan
	m	(Ljava/lang/String;)Laip;	c	getInfo
		p	1	path	path
	m	()Ljava/util/Map;	h	setupCounters
	m	()Ljava/lang/String;	i	generateWittyComment
c	aij$a	net/minecraft/util/profiler/ProfileResultImpl$CounterInfo
	f	J	a	selfTime
	f	J	b	totalTime
	f	Ljava/util/Map;	c	subCounters
	m	(Ljava/util/Iterator;J)V	a	add
		p	1	pathIterator	pathIterator
		p	2	time	time
c	aik	net/minecraft/util/profiler/DisableableProfiler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/function/IntSupplier;	c	tickSupplier
	f	Laik$b;	d	controller
	m	(Ljava/util/function/IntSupplier;)V	<init>	<init>
		p	1	tickSupplier	tickSupplier
	m	()Laik$a;	d	getController
c	aik$a	net/minecraft/util/profiler/DisableableProfiler$Controller
	m	()Z	a	isEnabled
	m	()Lain;	b	disable
	m	()Lain;	c	getResults
	m	()V	d	enable
c	aik$b	net/minecraft/util/profiler/DisableableProfiler$ControllerImpl
	f	Laim;	a	profiler
c	ail	net/minecraft/util/profiler/DummyProfiler
	f	Lail;	a	INSTANCE
c	aim	net/minecraft/util/profiler/ReadableProfiler
	m	()Lain;	d	getResult
c	ain	net/minecraft/util/profiler/ProfileResult
	m	(Ljava/io/File;)Z	a	save
		p	1	file	file
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimings
		p	1	parentPath	parentPath
	m	()J	a	getStartTime
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getHumanReadableName
		p	0	path	path
	m	()I	b	getStartTick
	m	()J	c	getEndTime
	m	()I	d	getEndTick
	m	()I	f	getTickSpan
	m	()J	g	getTimeSpan
c	aio	net/minecraft/util/profiler/Profiler
	m	(Ljava/lang/String;)V	a	push
		p	1	location	location
	m	()V	a	startTick
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1	locationGetter	locationGetter
	m	(Ljava/lang/String;)V	b	swap
		p	1	location	location
	m	(Ljava/util/function/Supplier;)V	b	swap
		p	1	locationGetter	locationGetter
	m	()V	b	endTick
	m	(Ljava/util/function/Supplier;)V	c	visit
		c	Increment the visit count for a marker.\n\n<p>This is useful to keep track of number of calls made to performance-\nwise expensive methods.\n\n<p>This method is preferred if getting the marker is costly; the\nsupplier won't be called if the profiler is disabled.
		p	1	markerGetter	markerGetter
			c	the getter for a unique marker
	m	(Ljava/lang/String;)V	c	visit
		c	Increment the visit count for a marker.\n\n<p>This is useful to keep track of number of calls made to performance-\nwise expensive methods.
		p	1	marker	marker
			c	a unique marker
	m	()V	c	pop
c	aip	net/minecraft/util/profiler/ProfileLocationInfo
	c	Profiling information on a specific profiler location.
	m	()J	a	getTotalTime
		c	Returns the total time spent visiting the profiler location.
	m	()J	b	getVisitCount
		c	Returns the number of times the profiler location has been visited.
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	c	getCounts
		c	Returns a marker to count map indicating the times each marker has been\nvisited in the profiler location.
c	aiq	net/minecraft/util/profiler/ProfilerTiming
	f	D	a	parentSectionUsagePercentage
	f	D	b	totalUsagePercentage
	f	J	c	visitCount
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;DDJ)V	<init>	<init>
		p	1	name	name
		p	2	parentUsagePercentage	parentUsagePercentage
		p	4	totalUsagePercentage	totalUsagePercentage
		p	6	visitCount	visitCount
	m	()I	a	getColor
	m	(Laiq;)I	a	compareTo
c	ais	net/minecraft/util/thread/ThreadExecutor
	f	Ljava/lang/String;	b	name
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	tasks
	f	I	e	executionsInProgress
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	submitAsync
		p	1	runnable	runnable
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
		p	1	task	task
	m	()Z	ay	shouldExecuteAsync
	m	()Ljava/lang/Thread;	az	getThread
	m	()Z	bg	isOnThread
	m	()I	bh	getTaskCount
	m	()V	bj	cancelTasks
	m	()V	bk	runTasks
	m	()V	bl	waitForTasks
	m	(Ljava/util/function/BooleanSupplier;)V	c	runTasks
		p	1	stopCondition	stopCondition
	m	(Ljava/lang/Runnable;)V	c	executeTask
		p	1	task	task
	m	(Ljava/lang/Runnable;)Z	d	canExecute
		p	1	task	task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	e	createTask
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;)V	execute	execute
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	f	submit
		p	1	task	task
	m	(Ljava/lang/Runnable;)V	g	submitAndJoin
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;)V	h	send
	m	()Z	w	runTask
c	aiu	net/minecraft/util/thread/MessageListener
	m	(Ljava/lang/Object;)V	a	send
		p	1	message	message
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Laiu;	a	create
		p	0	name	name
		p	1	action	action
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	ask
		p	1	messageProvider	messageProvider
	m	()Ljava/lang/String;	bi	getName
c	aiv	net/minecraft/util/thread/TaskExecutor
	f	Laix;	a	queue
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	stateFlags
	f	Ljava/util/concurrent/Executor;	d	executor
	f	Ljava/lang/String;	e	name
	m	(Laix;Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
		p	1	queue	queue
		p	2	executor	executor
		p	3	name	name
	m	(Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I	a	runWhile
		p	1	condition	condition
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)Laiv;	a	create
		p	0	executor	executor
		p	1	name	name
	m	()Z	a	unpause
	m	()V	b	pause
	m	()Z	c	hasMessages
	m	()Z	d	isUnpaused
	m	()Z	e	runNext
	m	()V	f	execute
c	aiw	net/minecraft/util/thread/ReentrantThreadExecutor
	f	I	b	runningTasks
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	()Z	bm	hasRunningTasks
c	aix	net/minecraft/util/thread/TaskQueue
	m	(Ljava/lang/Object;)Z	a	add
		p	1	message	message
	m	()Ljava/lang/Object;	a	poll
	m	()Z	b	isEmpty
c	aix$a	net/minecraft/util/thread/TaskQueue$Prioritized
	f	Ljava/util/List;	a	queues
	m	(I)V	<init>	<init>
		p	1	priorityCount	priorityCount
	m	(Laix$b;)Z	a	add
	m	()Ljava/lang/Runnable;	c	poll
c	aix$b	net/minecraft/util/thread/TaskQueue$PrioritizedTask
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	runnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1	priority	priority
		p	2	runnable	runnable
	m	()I	a	getPriority
c	aix$c	net/minecraft/util/thread/TaskQueue$Simple
	f	Ljava/util/Queue;	a	queue
	m	(Ljava/util/Queue;)V	<init>	<init>
		p	1	queue	queue
c	aiz	net/minecraft/world/updater/WorldUpdater
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	UPDATE_THREAD_FACTORY
	f	Ljava/lang/String;	c	levelName
	f	Z	d	eraseCache
	f	Lcrn;	e	worldSaveHandler
	f	Ljava/lang/Thread;	f	updateThread
	f	Ljava/io/File;	g	worldDirectory
	f	Z	h	keepUpgradingChunks
	f	Z	i	isDone
	f	F	j	progress
	f	I	k	totalChunkCount
	f	I	l	upgradedChunkCount
	f	I	m	skippedChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	n	dimensionProgress
	f	Llf;	o	status
	f	Ljava/util/regex/Pattern;	p	REGION_FILE_PATTERN
	f	Lcrl;	q	persistentStateManager
	m	(Ljava/lang/String;Lcrp;Lcrm;Z)V	<init>	<init>
		p	4	eraseCache	eraseCache
	m	(Lcbi;)F	a	getProgress
	m	()V	a	cancel
	m	()Z	b	isDone
	m	(Lcbi;)Ljava/util/List;	b	getChunkPositions
		p	1	dimensionType	dimensionType
	m	()F	c	getProgress
	m	()I	d	getTotalChunkCount
	m	()I	e	getUpgradedChunkCount
	m	()I	f	getSkippedChunkCount
	m	()Llf;	g	getStatus
	m	()V	i	updateWorld
c	aj	net/minecraft/predicate/BlockPredicate
	f	Laj;	a	ANY
	f	Laaz;	b	tag
	f	Lbph;	c	block
	f	Lcc;	d	state
	f	Lbt;	e	nbt
	m	(Laaz;Lbph;Lcc;Lbt;)V	<init>	<init>
		p	1	tag	tag
		p	2	block	block
		p	3	state	state
		p	4	nbt	nbt
	m	(Lcom/google/gson/JsonElement;)Laj;	a	fromJson
		p	0	json	json
	m	(Lxd;Lfk;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	aj$a	net/minecraft/predicate/BlockPredicate$Builder
	f	Lbph;	a	block
	f	Laaz;	b	tag
	f	Lcc;	c	state
	f	Lbt;	d	nbt
	m	(Laaz;)Laj$a;	a	tag
		p	1	tag	tag
	m	()Laj$a;	a	create
	m	()Laj;	b	build
c	ajb	net/minecraft/entity/boss/BossBar
	f	Llf;	a	name
	f	F	b	percent
	f	Lajb$a;	c	color
	f	Lajb$b;	d	style
	f	Z	e	darkenSky
	f	Z	f	dragonMusic
	f	Z	g	thickenFog
	f	Ljava/util/UUID;	h	uuid
	m	(Ljava/util/UUID;Llf;Lajb$a;Lajb$b;)V	<init>	<init>
		p	1	uuid	uuid
		p	2	name	name
		p	3	color	color
		p	4	style	style
	m	(Lajb$a;)V	a	setColor
		p	1	color	color
	m	(Z)Lajb;	a	setDarkenSky
		p	1	darkenSky	darkenSky
	m	(Lajb$b;)V	a	setOverlay
		p	1	style	style
	m	(Llf;)V	a	setName
		p	1	name	name
	m	(F)V	a	setPercent
		p	1	percentage	percentage
	m	(Z)Lajb;	b	setDragonMusic
		p	1	dragonMusic	dragonMusic
	m	(Z)Lajb;	c	setThickenFog
		p	1	thickenFog	thickenFog
	m	()Ljava/util/UUID;	i	getUuid
	m	()Llf;	j	getName
	m	()F	k	getPercent
	m	()Lajb$a;	l	getColor
	m	()Lajb$b;	m	getOverlay
	m	()Z	n	getDarkenSky
	m	()Z	o	hasDragonMusic
	m	()Z	p	getThickenFog
c	ajb$a	net/minecraft/entity/boss/BossBar$Color
	f	Ljava/lang/String;	h	name
	f	Lg;	i	format
	m	(Ljava/lang/String;ILjava/lang/String;Lg;)V	<init>	<init>
		p	3	name	name
		p	4	format	format
	m	(Ljava/lang/String;)Lajb$a;	a	byName
		p	0	name	name
	m	()Lg;	a	getTextFormat
	m	()Ljava/lang/String;	b	getName
c	ajb$b	net/minecraft/entity/boss/BossBar$Style
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lajb$b;	a	byName
		p	0	name	name
c	ajc	net/minecraft/util/Clearable
	m	()V	N_	clear
	m	(Ljava/lang/Object;)V	a	clear
c	ajd	net/minecraft/inventory/DoubleInventory
	f	Laje;	a	first
	f	Laje;	b	second
	m	(Laje;Laje;)V	<init>	<init>
		p	1	first	first
		p	2	second	second
	m	(Laje;)Z	a	isPart
c	aje	net/minecraft/inventory/Inventory
	m	()I	L_	getInvMaxStackAmount
	m	()I	O_	getInvSize
	m	(ILben;)V	a	setInvStack
		p	1	slot	slot
		p	2	stack	stack
	m	(I)Lben;	a	getInvStack
		p	1	slot	slot
	m	(Layj;)Z	a	canPlayerUseInv
		p	1	player	player
	m	(II)Lben;	a	takeInvStack
		p	1	slot	slot
		p	2	amount	amount
	m	(Lbei;)I	a	countInInv
		p	1	item	item
	m	(Ljava/util/Set;)Z	a	containsAnyInInv
		p	1	items	items
	m	(Layj;)V	a_	onInvOpen
		p	1	player	player
	m	(I)Lben;	b	removeInvStack
		p	1	slot	slot
	m	(ILben;)Z	b	isValidInvStack
		p	1	slot	slot
		p	2	stack	stack
	m	(Layj;)V	b_	onInvClose
		p	1	player	player
	m	()Z	c	isInvEmpty
	m	()V	e	markDirty
c	ajf	net/minecraft/inventory/Inventories
	m	(Ljt;Lfy;Z)Ljt;	a	toTag
		p	0	tag	tag
		p	1	stacks	stacks
		p	2	setIfEmpty	setIfEmpty
	m	(Ljt;Lfy;)Ljt;	a	toTag
		p	0	tag	tag
		p	1	stacks	stacks
	m	(Ljava/util/List;II)Lben;	a	splitStack
		p	0	stacks	stacks
		p	1	slot	slot
		p	2	amount	amount
	m	(Ljava/util/List;I)Lben;	a	removeStack
		p	0	stacks	stacks
		p	1	slot	slot
	m	(Ljt;Lfy;)V	b	fromTag
		p	0	tag	tag
		p	1	stacks	stacks
c	ajg	net/minecraft/inventory/InventoryListener
	m	(Laje;)V	a	onInvChange
c	ajh	net/minecraft/util/ItemScatterer
	f	Ljava/util/Random;	a	RANDOM
	m	(Lbjw;Lakq;Laje;)V	a	spawn
	m	(Lbjw;DDDLaje;)V	a	spawn
		p	0	world	world
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	inventory	inventory
	m	(Lbjw;DDDLben;)V	a	spawn
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	item	item
	m	(Lbjw;Lfk;Laje;)V	a	spawn
	m	(Lbjw;Lfk;Lfy;)V	a	spawn
		p	0	world	world
		p	1	pos	pos
		p	2	items	items
c	aji	net/minecraft/world/Difficulty
	f	[Laji;	e	BY_NAME
	f	I	f	id
	f	Ljava/lang/String;	g	name
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getId
	m	(Ljava/lang/String;)Laji;	a	byName
		p	0	name	name
	m	(I)Laji;	a	byOrdinal
		p	0	ordinal	ordinal
	m	()Llf;	b	getTranslatableName
	m	()Ljava/lang/String;	c	getName
c	ajj	net/minecraft/world/LocalDifficulty
	f	Laji;	a	globalDifficulty
	f	F	b	localDifficulty
	m	(Laji;JJF)V	<init>	<init>
		p	1	difficulty	difficulty
		p	2	timeOfDay	timeOfDay
	m	()Laji;	a	getGlobalDifficulty
	m	(F)Z	a	isHarderThan
		p	1	difficulty	difficulty
	m	(Laji;JJF)F	a	setLocalDifficulty
	m	()F	b	getLocalDifficulty
	m	()F	d	getClampedLocalDifficulty
c	ajk	net/minecraft/util/Hand
c	ajl	net/minecraft/util/ActionResult
	f	Lajl;	a	SUCCESS
		c	Indicates an action is performed and the actor's hand should swing to\nindicate the performance.
	f	Lajl;	b	CONSUME
		c	Indicates an action is performed but no animation should accompany the\nperformance.
	f	Lajl;	c	PASS
		c	Indicates an action is not performed but allows other actions to\nperform.
	f	Lajl;	d	FAIL
		c	Indicates that an action is not performed and prevents other actions\nfrom performing.
	m	()Z	a	isAccepted
		c	Returns whether an action is performed.
	m	()Z	b	shouldSwingHand
		c	Returns whether an actor should have a hand-swinging animation on\naction performance.
c	ajm	net/minecraft/util/TypedActionResult
	f	Lajl;	a	result
	f	Ljava/lang/Object;	b	value
	m	(Lajl;Ljava/lang/Object;)V	<init>	<init>
		p	1	result	result
		p	2	value	value
	m	(Ljava/lang/Object;)Lajm;	a	success
		p	0	data	data
	m	()Lajl;	a	getResult
	m	()Ljava/lang/Object;	b	getValue
	m	(Ljava/lang/Object;)Lajm;	b	consume
		p	0	data	data
	m	(Ljava/lang/Object;)Lajm;	c	pass
		p	0	data	data
	m	(Ljava/lang/Object;)Lajm;	d	fail
		p	0	data	data
c	ajn	net/minecraft/inventory/ContainerLock
	f	Lajn;	a	EMPTY
		c	An empty container lock that can always be opened.
	f	Ljava/lang/String;	b	key
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Lben;)Z	a	canOpen
		c	Returns true if this lock can be opened with the key item stack.\n<p>\nAn item stack is a valid key if the stack name matches the key string of this lock,\nor if the key string is empty.
		p	1	stack	stack
			c	the key item stack
	m	(Ljt;)V	a	toTag
		c	Inserts the key string of this lock into the {@code Lock} key of the compound tag.
		p	1	tag	tag
	m	(Ljt;)Lajn;	b	fromTag
		c	Creates a new {@code ContainerLock} from the {@code Lock} key of the compound tag.\n<p>\nIf the {@code Lock} key is not present, returns an empty lock.
		p	0	tag	tag
c	ajo	net/minecraft/container/NameableContainerFactory
	m	()Llf;	d	getDisplayName
c	ajp	net/minecraft/util/Nameable
	m	()Llf;	M	getName
	m	()Z	N	hasCustomName
	m	()Llf;	O	getCustomName
	m	()Llf;	d	getDisplayName
c	ajq	net/minecraft/inventory/BasicInventory
	f	I	a	size
	f	Lfy;	b	stackList
	f	Ljava/util/List;	c	listeners
	m	(I)V	<init>	<init>
		p	1	size	size
	m	([Lben;)V	<init>	<init>
		p	1	items	items
	m	(Lbei;I)Lben;	a	poll
		p	1	item	item
		p	2	count	count
	m	(Lajg;)V	a	addListener
	m	(Lben;)Lben;	a	add
	m	(Lben;Lben;)V	a	transfer
		p	1	source	source
		p	2	target	target
	m	(Lajg;)V	b	removeListener
	m	(Lben;)V	b	addToNewSlot
		p	1	stack	stack
	m	(Lben;)V	c	addToExistingSlot
		p	1	stack	stack
c	ajr	net/minecraft/container/SimpleNamedContainerFactory
	f	Llf;	a	name
	f	Lbbn;	b	baseFactory
	m	(Lbbn;Llf;)V	<init>	<init>
		p	1	baseFactory	baseFactory
		p	2	name	name
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
c	ajs	net/minecraft/util/snooper/Snooper
	f	Ljava/util/Map;	a	initialInfo
	f	Ljava/util/Map;	b	info
	f	Ljava/lang/String;	c	token
	f	Ljava/net/URL;	d	snooperUrl
	f	Lajt;	e	listener
	f	Ljava/util/Timer;	f	timer
	f	Ljava/lang/Object;	g	syncObject
	f	J	h	startTime
	f	Z	i	active
	m	(Ljava/lang/String;Lajt;J)V	<init>	<init>
		p	1	urlPath	urlPath
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	addInfo
		p	1	key	key
	m	(Ljava/lang/String;Ljava/lang/Object;)V	b	addInitialInfo
		p	1	key	key
	m	()V	b	update
	m	()Z	d	isActive
	m	()V	e	cancel
	m	()Ljava/lang/String;	f	getToken
	m	()J	g	getStartTime
c	ajt	net/minecraft/util/snooper/SnooperListener
	m	(Lajs;)V	a	addSnooperInfo
c	aju	net/minecraft/inventory/SidedInventory
	m	(Lfp;)[I	a	getInvAvailableSlots
		p	1	side	side
	m	(ILben;Lfp;)Z	a	canInsertInvStack
		p	1	slot	slot
		p	2	stack	stack
		p	3	dir	dir
	m	(ILben;Lfp;)Z	b	canExtractInvStack
		p	1	slot	slot
		p	2	stack	stack
		p	3	dir	dir
c	ajv	net/minecraft/block/InventoryProvider
	m	(Lbyj;Lbjx;Lfk;)Laju;	a	getInventory
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	ajw	net/minecraft/entity/damage/DamageRecord
	f	Lajz;	a	damageSource
	f	I	b	entityAge
	f	F	c	damage
	f	F	d	entityHealth
	f	Ljava/lang/String;	e	fallDeathSuffix
	f	F	f	fallDistance
	m	(Lajz;IFFLjava/lang/String;F)V	<init>	<init>
		p	1	damageSource	damageSource
		p	2	entityAge	entityAge
		p	3	entityOriginalHealth	entityOriginalHealth
		p	4	damage	damage
		p	5	fallDeathSuffix	fallDeathSuffix
	m	()Lajz;	a	getDamageSource
	m	()F	c	getDamage
	m	()Z	f	isAttackerLiving
	m	()Ljava/lang/String;	g	getFallDeathSuffix
	m	()Llf;	h	getAttackerName
	m	()F	j	getFallDistance
c	ajx	net/minecraft/entity/DamageUtil
	m	(FFF)F	a	getDamageLeft
		p	0	damage	damage
		p	1	armor	armor
		p	2	armorToughness	armorToughness
	m	(FF)F	a	getInflictedDamage
		p	0	damageDealt	damageDealt
		p	1	protection	protection
c	ajy	net/minecraft/entity/damage/DamageTracker
	f	Ljava/util/List;	a	recentDamage
	f	Lakz;	b	entity
	f	I	c	ageOnLastDamage
	f	I	d	ageOnLastAttacked
	f	I	e	ageOnLastUpdate
	f	Z	f	recentlyAttacked
	f	Z	g	hasDamage
	f	Ljava/lang/String;	h	fallDeathSuffix
	m	(Lajw;)Ljava/lang/String;	a	getFallDeathSuffix
	m	(Lajz;FF)V	a	onDamage
		p	1	damageSource	damageSource
		p	2	originalHealth	originalHealth
	m	()V	a	setFallDeathSuffix
	m	()Llf;	b	getDeathMessage
	m	()Lakz;	c	getBiggestAttacker
	m	()I	f	getTimeSinceLastAttack
	m	()V	g	update
	m	()Lakz;	h	getEntity
	m	()Lajw;	j	getBiggestFall
	m	()V	k	clearFallDeathSuffix
c	ajz	net/minecraft/entity/damage/DamageSource
	f	F	A	exhaustion
	f	Z	B	fire
	f	Z	C	projectile
	f	Z	D	scaleWithDifficulty
	f	Z	E	magic
	f	Z	F	explosive
	f	Lajz;	a	IN_FIRE
	f	Lajz;	b	LIGHTNING_BOLT
	f	Lajz;	c	ON_FIRE
	f	Lajz;	d	LAVA
	f	Lajz;	e	HOT_FLOOR
	f	Lajz;	f	IN_WALL
	f	Lajz;	g	CRAMMING
	f	Lajz;	h	DROWN
	f	Lajz;	i	STARVE
	f	Lajz;	j	CACTUS
	f	Lajz;	k	FALL
	f	Lajz;	l	FLY_INTO_WALL
	f	Lajz;	m	OUT_OF_WORLD
	f	Lajz;	n	GENERIC
	f	Lajz;	o	MAGIC
	f	Lajz;	p	WITHER
	f	Lajz;	q	ANVIL
	f	Lajz;	r	FALLING_BLOCK
	f	Lajz;	s	DRAGON_BREATH
	f	Lajz;	t	FIREWORKS
	f	Lajz;	u	DRYOUT
	f	Lajz;	v	SWEET_BERRY_BUSH
	f	Ljava/lang/String;	w	name
	f	Z	x	bypassesArmor
	f	Z	y	outOfWorld
	f	Z	z	unblockable
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	()Lajz;	a	netherBed
	m	(Lakq;Lakq;)Lajz;	a	trident
	m	(Layj;)Lajz;	a	player
		p	0	attacker	attacker
	m	(Lakq;Lakz;)Lajz;	a	mobProjectile
		p	0	projectile	projectile
		p	1	attacker	attacker
	m	(Lakz;)Lajz;	a	sting
		p	0	attacker	attacker
	m	(Lbjp;)Lajz;	a	explosion
		p	0	explosion	explosion
	m	(Layo;Lakq;)Lajz;	a	explosiveProjectile
		p	0	projectile	projectile
		p	1	attacker	attacker
	m	(Lakq;)Lajz;	a	thorns
		p	0	attacker	attacker
	m	(Layn;Lakq;)Lajz;	a	arrow
		p	0	projectile	projectile
		p	1	attacker	attacker
	m	(Lakz;)Lajz;	b	mob
		p	0	attacker	attacker
	m	()Z	b	isProjectile
	m	(Lakq;Lakq;)Lajz;	b	thrownProjectile
		p	0	projectile	projectile
		p	1	attacker	attacker
	m	(Lakz;)Lajz;	c	explosion
		p	0	attacker	attacker
	m	()Lajz;	c	setProjectile
	m	(Lakq;Lakq;)Lajz;	c	magic
		p	0	magic	magic
		p	1	attacker	attacker
	m	(Lakz;)Llf;	d	getDeathMessage
	m	()Z	d	isExplosive
	m	()Lajz;	e	setExplosive
	m	()Z	f	bypassesArmor
	m	()F	g	getExhaustion
	m	()Z	h	isOutOfWorld
	m	()Z	i	isUnblockable
	m	()Lakq;	j	getSource
	m	()Lakq;	k	getAttacker
	m	()Lajz;	l	setBypassesArmor
	m	()Lajz;	m	setOutOfWorld
	m	()Lajz;	n	setUnblockable
	m	()Lajz;	o	setFire
	m	()Z	p	isFire
	m	()Ljava/lang/String;	q	getName
	m	()Lajz;	r	setScaledWithDifficulty
	m	()Z	s	isScaledWithDifficulty
	m	()Z	t	getMagic
	m	()Lajz;	u	setUsesMagic
	m	()Z	v	isSourceCreativePlayer
	m	()Lcvl;	w	getPosition
c	ak	net/minecraft/advancement/criterion/BredAnimalsCriterion
	f	Lsm;	a	ID
	m	(Lxe;Latc;Latc;Lako;)V	a	trigger
		p	1	player	player
		p	2	parent	parent
		p	3	partner	partner
		p	4	child	child
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lak$a;	b	conditionsFromJson
c	ak$a	net/minecraft/advancement/criterion/BredAnimalsCriterion$Conditions
	f	Lbb;	a	parent
	f	Lbb;	b	partner
	f	Lbb;	c	child
	m	(Lbb;Lbb;Lbb;)V	<init>	<init>
		p	1	parent	parent
		p	2	partner	partner
		p	3	child	child
	m	(Lbb$a;)Lak$a;	a	create
	m	(Lxe;Latc;Latc;Lako;)Z	a	matches
		p	1	player	player
		p	2	parent	parent
		p	3	partner	partner
		p	4	child	child
	m	()Lak$a;	c	any
c	aka	net/minecraft/entity/damage/EntityDamageSource
	f	Lakq;	x	source
	m	(Ljava/lang/String;Lakq;)V	<init>	<init>
		p	1	name	name
c	akb	net/minecraft/entity/damage/ProjectileDamageSource
	f	Lakq;	y	attacker
	m	(Ljava/lang/String;Lakq;Lakq;)V	<init>	<init>
		p	1	name	name
		p	2	projectile	projectile
c	akc	net/minecraft/entity/damage/NetherBedDamageSource
c	ake	net/minecraft/entity/effect/AbsorptionStatusEffect
c	akf	net/minecraft/entity/effect/DamageModifierStatusEffect
	f	D	a	modifier
	m	(Lakj;ID)V	<init>	<init>
		p	1	type	type
		p	2	color	color
		p	3	modifier	modifier
c	akg	net/minecraft/entity/effect/HealthBoostStatusEffect
c	akh	net/minecraft/entity/effect/InstantStatusEffect
c	aki	net/minecraft/entity/effect/StatusEffect
	f	Ljava/util/Map;	a	attributeModifiers
	f	Lakj;	b	type
	f	I	c	color
	f	Ljava/lang/String;	d	translationKey
	m	(Lakj;I)V	<init>	<init>
		p	1	type	type
		p	2	color	color
	m	(Lakq;Lakq;Lakz;ID)V	a	applyInstantEffect
		p	1	source	source
		p	2	attacker	attacker
		p	3	target	target
		p	4	amplifier	amplifier
		p	5	proximity	proximity
	m	(Laki;)I	a	getRawId
		p	0	type	type
	m	(Lakz;I)V	a	applyUpdateEffect
		p	1	entity	entity
		p	2	amplifier	amplifier
	m	(I)Laki;	a	byRawId
		p	0	rawId	rawId
	m	(Lalq;Ljava/lang/String;DLals$a;)Laki;	a	addAttributeModifier
		p	1	attribute	attribute
		p	2	uuid	uuid
		p	3	amount	amount
		p	5	operation	operation
	m	(ILals;)D	a	adjustModifierAmount
		p	1	amplifier	amplifier
		p	2	modifier	modifier
	m	(II)Z	a	canApplyUpdateEffect
		p	1	duration	duration
		p	2	amplifier	amplifier
	m	()Z	a	isInstant
	m	(Lakz;Lalu;I)V	a	onRemoved
		p	1	entity	entity
		p	2	attributes	attributes
		p	3	amplifier	amplifier
	m	(Lakz;Lalu;I)V	b	onApplied
		p	1	entity	entity
		p	2	attributes	attributes
		p	3	amplifier	amplifier
	m	()Ljava/lang/String;	b	loadTranslationKey
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()Llf;	d	getName
	m	()Lakj;	e	getType
	m	()I	f	getColor
	m	()Ljava/util/Map;	g	getAttributeModifiers
	m	()Z	h	isBeneficial
c	akj	net/minecraft/entity/effect/StatusEffectType
	f	Lg;	d	formatting
	m	(Ljava/lang/String;ILg;)V	<init>	<init>
		p	3	format	format
	m	()Lg;	a	getFormatting
c	akk	net/minecraft/entity/effect/StatusEffectInstance
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Laki;	b	type
	f	I	c	duration
	f	I	d	amplifier
	f	Z	e	splash
	f	Z	f	ambient
	f	Z	g	permanent
	f	Z	h	showParticles
	f	Z	i	showIcon
	f	Lakk;	j	hiddenEffect
		c	The effect hidden when upgrading effects. Duration decreases with this\neffect.\n\n<p>This exists so that long-duration low-amplifier effects reappears\nafter short-duration high-amplifier effects run out.
	m	(Laki;I)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
	m	(Laki;IIZZZ)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
		p	4	ambient	ambient
		p	5	showParticles	showParticles
		p	6	showIcon	showIcon
	m	(Laki;IIZZ)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
		p	4	ambient	ambient
		p	5	visible	visible
	m	(Laki;IIZZZLakk;)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
		p	4	ambient	ambient
		p	5	showParticles	showParticles
		p	6	showIcon	showIcon
		p	7	hiddenEffect	hiddenEffect
	m	(Laki;)V	<init>	<init>
		p	1	type	type
	m	(Lakk;)V	<init>	<init>
		p	1	that	that
	m	(Laki;II)V	<init>	<init>
		p	1	type	type
		p	2	duration	duration
		p	3	amplifier	amplifier
	m	(Lakz;Ljava/lang/Runnable;)Z	a	update
		p	1	entity	entity
		p	2	overwriteCallback	overwriteCallback
	m	(Lakz;)V	a	applyUpdateEffect
		p	1	entity	entity
	m	(Lakk;)V	a	copyFrom
		p	1	that	that
	m	(Laki;Ljt;)Lakk;	a	fromTag
		p	0	type	type
		p	1	tag	tag
	m	(Ljt;)Ljt;	a	toTag
		p	1	tag	tag
	m	()Laki;	a	getEffectType
	m	(Z)V	b	setPermanent
		p	1	permanent	permanent
	m	()I	b	getDuration
	m	(Ljt;)Lakk;	b	fromTag
		p	0	tag	tag
	m	(Lakk;)Z	b	upgrade
		p	1	that	that
	m	(Lakk;)I	c	compareTo
	m	(Ljt;)V	c	typelessToTag
		p	1	tag	tag
	m	()I	c	getAmplifier
	m	(Ljava/lang/Object;)I	compareTo	compareTo
		p	1	that	that
	m	()Z	d	isAmbient
	m	()Z	e	shouldShowParticles
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Z	f	shouldShowIcon
	m	()Ljava/lang/String;	g	getTranslationKey
	m	()Z	h	isPermanent
	m	()I	i	updateDuration
c	akl	net/minecraft/entity/effect/StatusEffectUtil
	m	(Lakz;)Z	a	hasHaste
		p	0	entity	entity
	m	(Lakk;F)Ljava/lang/String;	a	durationToString
		p	0	effect	effect
		p	1	multiplier	multiplier
	m	(Lakz;)I	b	getHasteAmplifier
		p	0	entity	entity
	m	(Lakz;)Z	c	hasWaterBreathing
		p	0	entity	entity
c	akm	net/minecraft/entity/effect/StatusEffects
	m	(ILjava/lang/String;Laki;)Laki;	a	register
		p	0	rawId	rawId
		p	1	id	id
		p	2	entry	entry
c	ako	net/minecraft/entity/passive/PassiveEntity
	f	I	b	breedingAge
	f	Lsb;	bw	CHILD
	f	I	c	forcedAge
	f	I	d	happyTicksRemaining
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Layj;Lako;)V	a	onPlayerSpawnedChild
		p	1	player	player
		p	2	child	child
	m	(Lako;)Lako;	a	createChild
		p	1	mate	mate
	m	(I)V	a	growUp
		p	1	age	age
	m	(IZ)V	a	growUp
		p	1	age	age
		p	2	overGrow	overGrow
	m	(I)V	b_	setBreedingAge
		p	1	age	age
	m	()I	i	getBreedingAge
	m	()V	l	onGrowUp
c	ako$a	net/minecraft/entity/passive/PassiveEntity$EntityData
	f	I	a	spawnCount
	f	Z	b	babyAllowed
	f	F	c	babyChance
	m	()I	a	getSpawnedCount
	m	(F)V	a	setBabyChance
		p	1	babyChance	babyChance
	m	(Z)V	a	setBabyAllowed
		p	1	babyAllowed	babyAllowed
	m	()V	b	countSpawned
	m	()Z	c	canSpawnBaby
	m	()F	d	getBabyChance
c	akp	net/minecraft/entity/AreaEffectCloudEntity
	f	Ljava/util/List;	ao	effects
	f	Ljava/util/Map;	ap	affectedEntities
	f	I	aq	duration
	f	I	ar	waitTime
	f	I	as	reapplicationDelay
	f	Z	at	customColor
	f	I	au	durationOnUse
	f	F	av	radiusOnUse
	f	F	aw	radiusGrowth
	f	Lakz;	ax	owner
	f	Ljava/util/UUID;	ay	ownerUuid
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lsb;	c	RADIUS
	f	Lsb;	d	COLOR
	f	Lsb;	e	WAITING
	f	Lsb;	f	PARTICLE_ID
	f	Lbgd;	g	potion
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(F)V	a	setRadius
		p	1	radius	radius
	m	(Lakk;)V	a	addEffect
		p	1	effect	effect
	m	(I)V	a	setColor
		p	1	rgb	rgb
	m	(Z)V	a	setWaiting
		p	1	waiting	waiting
	m	(Lgt;)V	a	setParticleType
		p	1	particle	particle
	m	(Lakz;)V	a	setOwner
		p	1	owner	owner
	m	(Lbgd;)V	a	setPotion
		p	1	potion	potion
	m	(F)V	b	setRadiusOnUse
		p	1	radius	radius
	m	(I)V	b	setDuration
		p	1	duration	duration
	m	(F)V	c	setRadiusGrowth
		p	1	growth	growth
	m	(I)V	d	setWaitTime
		p	1	ticks	ticks
	m	()F	f	getRadius
	m	()I	i	getColor
	m	()Lgt;	k	getParticleType
	m	()Z	l	isWaiting
	m	()I	m	getDuration
	m	()Lakz;	u	getOwner
	m	()V	z	updateColor
c	akq	net/minecraft/entity/Entity
	f	F	A	prevHorizontalSpeed
	f	F	B	horizontalSpeed
	f	F	C	distanceTraveled
	f	F	D	fallDistance
	f	D	E	lastRenderX
	f	D	F	lastRenderY
	f	D	G	lastRenderZ
	f	F	H	stepHeight
	f	Z	I	noClip
	f	F	J	pushSpeedReduction
	f	Ljava/util/Random;	K	random
	f	I	L	age
	f	Z	M	touchingWater
	f	D	N	waterHeight
	f	Z	O	submergedInWater
	f	Z	P	inLava
	f	I	Q	timeUntilRegen
	f	Z	R	firstUpdate
	f	Lse;	S	dataTracker
	f	Lsb;	T	FLAGS
	f	Lsb;	U	POSE
	f	Z	V	updateNeeded
	f	I	W	chunkX
	f	I	X	chunkY
	f	I	Y	chunkZ
	f	J	Z	trackedX
	f	Lsb;	aA	NAME_VISIBLE
	f	Lsb;	aB	SILENT
	f	Lsb;	aC	NO_GRAVITY
	f	Z	aD	invulnerable
	f	Ljava/util/Set;	aE	scoreboardTags
	f	Z	aF	teleportRequested
	f	[D	aG	pistonMovementDelta
	f	J	aH	pistonMovementTick
	f	Lakr;	aI	dimensions
	f	F	aJ	standingEyeHeight
	f	J	aa	trackedY
	f	J	ab	trackedZ
	f	Z	ac	ignoreCameraFrustum
	f	Z	ad	velocityDirty
	f	I	ae	netherPortalCooldown
	f	Z	af	inNetherPortal
	f	I	ag	netherPortalTime
	f	Lcbi;	ah	dimension
	f	Lfk;	ai	lastNetherPortalPosition
	f	Lcvl;	aj	lastNetherPortalDirectionVector
	f	Lfp;	ak	lastNetherPortalDirection
	f	Ljava/util/UUID;	al	uuid
	f	Ljava/lang/String;	am	uuidString
	f	Z	an	glowing
	f	Ljava/util/List;	ao	passengerList
	f	Lakq;	ap	vehicle
	f	D	aq	x
	f	D	ar	y
	f	D	as	z
	f	Lcvl;	at	velocity
	f	Lcvf;	au	entityBounds
	f	F	av	nextStepSoundDistance
	f	F	aw	nextFlySoundDistance
	f	I	ax	fireTicks
	f	Lsb;	ay	AIR
	f	Lsb;	az	CUSTOM_NAME
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	MAX_ENTITY_ID
	f	Ljava/util/List;	c	EMPTY_STACK_LIST
	f	Lcvf;	d	NULL_BOX
	f	D	e	renderDistanceMultiplier
	f	Laku;	f	type
	f	I	g	entityId
	f	Lorg/apache/logging/log4j/Logger;	h	LOGGER
	f	Z	i	inanimate
	f	I	j	ridingCooldown
	f	Z	k	teleporting
	f	Lbjw;	l	world
	f	D	m	prevX
	f	D	n	prevY
	f	D	o	prevZ
	f	F	p	yaw
	f	F	q	pitch
	f	F	r	prevYaw
	f	F	s	prevPitch
	f	Z	t	onGround
	f	Z	u	horizontalCollision
	f	Z	v	verticalCollision
	f	Z	w	collided
	f	Z	x	velocityModified
	f	Lcvl;	y	movementMultiplier
	f	Z	z	removed
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
		p	2	world	world
	m	()Lcoq;	A_	getPistonBehavior
	m	()V	E	tickNetherPortalCooldown
	m	()Llt;	L	createSpawnPacket
	m	()I	P	getTeamColorValue
	m	()V	Q	detach
	m	()Laku;	R	getType
	m	()I	S	getEntityId
	m	()Ljava/util/Set;	T	getScoreboardTags
	m	()V	U	kill
	m	()Lse;	V	getDataTracker
	m	()V	W	afterSpawn
	m	()V	X	remove
	m	()Lalj;	Y	getPose
	m	()V	Z	refreshPosition
	m	(Lsb;)V	a	onTrackedDataSet
		p	1	data	data
	m	(Lakq;Z)Z	a	startRiding
		p	1	entity	entity
		p	2	force	force
	m	(DD)V	a	changeLookDirection
		p	1	cursorDeltaX	cursorDeltaX
		p	3	cursorDeltaY	cursorDeltaY
	m	(Lfk;FF)V	a	refreshPositionAndAngles
		p	1	pos	pos
		p	2	yaw	yaw
		p	3	pitch	pitch
	m	(Lbyj;Lcvl;)V	a	slowMovement
		p	1	state	state
		p	2	multiplier	multiplier
	m	(Lakq;Lcvl;Lcvf;Lbjw;Lcvq;Labt;)Lcvl;	a	adjustMovementForCollisions
		p	0	entity	entity
		p	1	movement	movement
		p	2	entityBoundingBox	entityBoundingBox
		p	3	world	world
		p	4	context	context
		p	5	collisions	collisions
	m	(Lxe;)Z	a	canBeSpectated
		p	1	spectator	spectator
	m	(Lcvf;)V	a	setBoundingBox
		p	1	boundingBox	boundingBox
	m	(Ljava/lang/String;)Z	a	addScoreboardTag
		p	1	tag	tag
	m	(Lcbi;)Lakq;	a	changeDimension
		p	1	newDimension	newDimension
	m	(DDDFF)V	a	updatePositionAndAngles
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(FF)V	a	setRotation
		p	1	yaw	yaw
		p	2	pitch	pitch
	m	(Lfk;Lbyj;)V	a	playStepSound
		p	1	pos	pos
		p	2	state	state
	m	(Ljt;)V	a	readCustomDataFromTag
		p	1	tag	tag
	m	(Lbjv;I)Lawb;	a	dropItem
		p	1	item	item
		p	2	yOffset	yOffset
	m	(Lbjp;Lbjg;Lfk;Lbyj;F)Z	a	canExplosionDestroyBlock
		p	1	explosion	explosion
		p	2	world	world
		p	3	pos	pos
		p	4	state	state
		p	5	explosionPower	explosionPower
	m	(Lcvl;FF)Lcvl;	a	movementInputToVelocity
		p	0	movementInput	movementInput
		p	1	speed	speed
		p	2	yaw	yaw
	m	(Ljava/util/UUID;)V	a	setUuid
		p	1	uuid	uuid
	m	(Lakz;Lakq;)V	a	dealDamage
		p	1	attacker	attacker
		p	2	target	target
	m	(Lcvl;Lcvf;Labt;)Lcvl;	a	adjustMovementForCollisions
		p	0	movement	movement
		p	1	entityBoundingBox	entityBoundingBox
		p	2	collisions	collisions
	m	(DDD)V	a	requestTeleport
		p	1	destX	destX
		p	3	destY	destY
		p	5	destZ	destZ
	m	(Layj;Lcvl;Lajk;)Lajl;	a	interactAt
		p	1	player	player
		p	2	hitPos	hitPos
		p	3	hand	hand
	m	(Lbjw;)V	a	setWorld
		p	1	world	world
	m	(Lale;Lcvl;)V	a	move
		p	1	type	type
		p	2	movement	movement
	m	(Lbjv;)Lawb;	a	dropItem
		p	1	item	item
	m	(Lbtu;)F	a	applyRotation
		p	1	rotation	rotation
	m	(D)Z	a	shouldRender
		p	1	distance	distance
	m	(Lbsu;)F	a	applyMirror
		p	1	mirror	mirror
	m	(Lbyj;)V	a	onBlockCollision
		p	1	state	state
	m	(Lcwn;)Z	a	isTeamPlayer
		p	1	team	team
	m	(DFZ)Lcvi;	a	rayTrace
		p	1	maxDistance	maxDistance
		p	3	tickDelta	tickDelta
		p	4	includeFluids	includeFluids
	m	(Li;)V	a	populateCrashReport
		p	1	section	section
	m	(DZLbyj;Lfk;)V	a	fall
		p	1	heightDifference	heightDifference
		p	3	onGround	onGround
		p	4	landedState	landedState
		p	5	landedPosition	landedPosition
	m	(Ljava/lang/Class;)Z	a	hasPassengerType
		p	1	clazz	clazz
	m	(Laaz;)Z	a	isInFluid
		p	1	fluidTag	fluidTag
	m	(Lavy;)V	a	onStruckByLightning
		p	1	lightning	lightning
	m	(Lcvl;)Lcvl;	a	adjustMovementForPiston
		p	1	movement	movement
	m	(FI)V	a	updateTrackedHeadRotation
		p	1	yaw	yaw
		p	2	interpolationSteps	interpolationSteps
	m	(Lakq;ILajz;)V	a	updateKilledAdvancementCriterion
		p	1	killer	killer
		p	2	score	score
		p	3	damageSource	damageSource
	m	(Laaz;Z)Z	a	isSubmergedIn
		p	1	fluidTag	fluidTag
		p	2	requireLoadedChunk	requireLoadedChunk
	m	(Laah;FF)V	a	playSound
		p	1	sound	sound
		p	2	volume	volume
		p	3	pitch	pitch
	m	(Lakq$a;)V	a	updatePositionsRecursively
		p	1	positionUpdater	positionUpdater
	m	([D)Ljz;	a	toListTag
		p	1	values	values
	m	(Lcx$a;Lcvl;)V	a	lookAt
		p	1	anchorPoint	anchorPoint
		p	2	target	target
	m	(Lbjp;Lbjg;Lfk;Lbyj;Lcoj;F)F	a	getEffectiveExplosionResistance
		p	1	explosion	explosion
		p	2	world	world
		p	3	pos	pos
		p	4	blockState	blockState
		p	5	fluidState	fluidState
		p	6	max	max
	m	(DDDFFIZ)V	a	updateTrackedPositionAndAngles
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
		p	9	interpolationSteps	interpolationSteps
		p	10	interpolate	interpolate
	m	(Lakv;Lben;)V	a	equipStack
		p	1	slot	slot
		p	2	stack	stack
	m	(ZLjava/util/Set;)V	a	collectPassengers
		p	1	playersOnly	playersOnly
		p	2	output	output
	m	(Lben;F)Lawb;	a	dropStack
		p	1	stack	stack
		p	2	yOffset	yOffset
	m	(Lben;)Lawb;	a	dropStack
		p	1	stack	stack
	m	(B)V	a	handleStatus
		p	1	status	status
	m	(Lfp$a;D)D	a	calculatePistonMovementFactor
		p	1	axis	axis
		p	2	offsetFactor	offsetFactor
	m	(Lajz;F)Z	a	damage
		p	1	source	source
		p	2	amount	amount
	m	(Lcvl;Lcvf;Lbjz;Lcvq;Labt;)Lcvl;	a	adjustSingleAxisMovementForCollisions
		p	0	movement	movement
		p	1	entityBoundingBox	entityBoundingBox
		p	2	world	world
		p	3	context	context
		p	4	collisions	collisions
	m	([F)Ljz;	a	toListTag
		p	1	values	values
	m	(Lalj;Lakr;)F	a	getEyeHeight
		p	1	pose	pose
		p	2	dimensions	dimensions
	m	(Lakq;Lakq$a;)V	a	updatePassengerPosition
		p	1	passenger	passenger
		p	2	positionUpdater	positionUpdater
	m	(Lalj;)Lakr;	a	getDimensions
		p	1	pose	pose
	m	(FLcvl;)V	a	updateVelocity
		p	1	speed	speed
		p	2	movementInput	movementInput
	m	(Lcvl;Lale;)Lcvl;	a	adjustMovementForSneaking
		p	1	movement	movement
		p	2	type	type
	m	()Z	aA	isSubmergedInWater
		c	Returns whether this entity's hitbox is fully submerged in water.
	m	()V	aB	updateSwimming
	m	()Z	aC	checkWaterState
	m	()V	aD	onSwimmingStart
	m	()V	aE	attemptSprintingParticles
	m	()V	aF	spawnSprintingParticles
	m	()V	aG	setInLava
	m	()Z	aH	isInLava
	m	()F	aI	getBrightnessAtEyes
	m	()V	aJ	scheduleVelocityUpdate
	m	()Z	aK	collides
	m	()Z	aL	isPushable
	m	()Z	aM	shouldSetPositionOnLoad
	m	()Ljava/lang/String;	aN	getSavedEntityId
	m	()Z	aO	isAlive
	m	()Z	aP	isInsideWall
	m	()V	aQ	tickRiding
	m	()D	aR	getHeightOffset
	m	()D	aS	getMountedHeightOffset
	m	()Z	aT	isLiving
	m	()V	aU	removeAllPassengers
	m	()F	aV	getTargetingMargin
	m	()Lcvl;	aW	getRotationVector
	m	()Lcvk;	aX	getRotationClient
	m	()Lcvl;	aY	getRotationVecClient
	m	()V	aZ	tickNetherPortal
	m	(ILben;)Z	a_	equip
		p	1	slot	slot
		p	2	item	item
	m	()V	aa	baseTick
	m	()I	ab	getMaxNetherPortalTime
	m	()V	ac	setOnFireFromLava
	m	()I	ad	getFireTicks
	m	()V	ae	extinguish
	m	()V	af	destroy
	m	()Lfk;	ag	getLandingPos
	m	()F	ah	getJumpVelocityMultiplier
	m	()F	ai	getVelocityMultiplier
	m	()Lfk;	aj	getVelocityAffectingPos
	m	()F	ak	calculateNextStepSoundDistance
	m	()V	al	moveToBoundingBoxCenter
	m	()Laah;	am	getSwimSound
	m	()Laah;	an	getSplashSound
	m	()Laah;	ao	getHighSpeedSplashSound
	m	()V	ap	checkBlockCollision
	m	()Z	aq	hasWings
	m	()Z	ar	isSilent
	m	()Z	as	hasNoGravity
	m	()Z	at	canClimb
	m	()Lcvf;	au	getCollisionBox
	m	()Z	av	isFireImmune
	m	()Z	aw	isTouchingWater
		c	Returns whether this entity's hitbox is touching water fluid.
	m	()Z	ax	isTouchingWaterOrRain
	m	()Z	ay	isWet
		c	Returns whether this entity is touching water, or is being rained on, or is inside a bubble column...\n\n@see net.minecraft.entity.Entity\n@see net.minecraft.entity.Entity\n@see net.minecraft.entity.Entity
	m	()Z	az	isInsideWaterOrBubbleColumn
	m	(Lalj;)V	b	setPose
		p	1	pose	pose
	m	(D)V	b	setRenderDistanceMultiplier
		p	0	value	value
	m	(Ljava/lang/String;)Z	b	removeScoreboardTag
		p	1	tag	tag
	m	(Lcvf;)Z	b	doesNotCollide
		p	1	box	box
	m	(Ljt;)V	b	writeCustomDataToTag
		p	1	tag	tag
	m	(DDDFF)V	b	refreshPositionAndAngles
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(Laaz;)Z	b	updateMovementInFluid
		p	1	tag	tag
	m	(Llf;)V	b	setCustomName
		p	1	name	name
	m	(Layj;Lajk;)Z	b	interact
		p	1	player	player
		p	2	hand	hand
	m	(Lajz;)Z	b	isInvulnerableTo
		p	1	damageSource	damageSource
	m	(FF)Z	b	handleFallDamage
		p	1	fallDistance	fallDistance
		p	2	damageMultiplier	damageMultiplier
	m	(Lxe;)V	b	onStartedTrackingBy
		p	1	player	player
	m	(Lcvl;)D	b	squaredHorizontalLength
		p	0	vector	vector
	m	(IZ)V	b	setFlag
		p	1	index	index
		p	2	value	value
	m	(Lakz;)V	b	onKilledOther
		p	1	other	other
	m	(DDD)V	b	positAfterTeleport
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Layj;)V	b	onPlayerCollision
		p	1	player	player
	m	()Z	bA	isAttackable
	m	()Z	bB	isInvulnerable
	m	()Z	bC	canUsePortals
	m	()I	bD	getSafeFallDistance
	m	()Lcvl;	bF	getLastNetherPortalDirectionVector
	m	()Lfp;	bG	getLastNetherPortalDirection
	m	()Z	bH	canAvoidTraps
	m	()Z	bI	doesRenderOnFire
	m	()Ljava/util/UUID;	bJ	getUuid
	m	()Ljava/lang/String;	bK	getUuidAsString
	m	()Ljava/lang/String;	bL	getEntityName
	m	()Z	bM	canFly
	m	()D	bN	getRenderDistanceMultiplier
	m	()Z	bO	isCustomNameVisible
	m	()Z	bP	shouldRenderName
	m	()Lfp;	bQ	getHorizontalFacing
	m	()Lfp;	bR	getMovementDirection
	m	()Lli;	bS	getHoverEvent
	m	()Lcvf;	bT	getBoundingBox
	m	()Lcvf;	bU	getVisibilityBoundingBox
	m	()F	bV	getStandingEyeHeight
	m	()Lfk;	bW	getBlockPos
	m	()Lcvl;	bX	getPosVector
	m	()Lbjw;	bY	getEntityWorld
	m	()Lnet/minecraft/server/MinecraftServer;	bZ	getServer
	m	()I	ba	getDefaultNetherPortalCooldown
	m	()V	bb	animateDamage
	m	()Ljava/lang/Iterable;	bc	getItemsHand
	m	()Ljava/lang/Iterable;	bd	getArmorItems
	m	()Ljava/lang/Iterable;	be	getItemsEquipped
	m	()Z	bf	isOnFire
	m	()Z	bg	hasVehicle
	m	()Z	bh	hasPassengers
	m	()Z	bi	canBeRiddenInWater
	m	()Z	bj	isSneaking
	m	()Z	bk	bypassesSteppingEffects
	m	()Z	bl	bypassesLandingEffects
	m	()Z	bm	isSneaky
	m	()Z	bn	isDescending
	m	()Z	bo	isInSneakingPose
	m	()Z	bp	isSprinting
	m	()Z	bq	isSwimming
	m	()Z	br	isInSwimmingPose
	m	()Z	bs	shouldLeaveSwimmingPose
	m	()Z	bt	isGlowing
	m	()Z	bu	isInvisible
	m	()Lcwn;	bv	getScoreboardTeam
	m	()I	bw	getMaxAir
	m	()I	bx	getAir
	m	()Llf;	by	getDefaultName
	m	()F	bz	getHeadYaw
	m	(Lxe;)V	c	onStoppedTrackingBy
		p	1	player	player
	m	(Lfk;)V	c	setInNetherPortal
		p	1	pos	pos
	m	(Z)V	c	setSilent
		p	1	silent	silent
	m	(FF)Lcvl;	c	getRotationVector
		p	1	pitch	pitch
		p	2	yaw	yaw
	m	(DDD)V	c	updateTrackedPosition
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lalj;)Z	c	wouldPoseNotCollide
		p	1	pose	pose
	m	(Layj;)Z	c	isInvisibleTo
		p	1	player	player
	m	(Llf;)V	c	removeClickEvents
		p	0	textComponent	textComponent
	m	(Ljt;)Z	c	saveSelfToTag
		p	1	tag	tag
	m	(Lcvl;)D	c	squaredDistanceTo
		p	1	vector	vector
	m	(D)D	c	offsetX
		p	1	widthScale	widthScale
	m	()Z	ca	isImmuneToExplosion
	m	()Z	cb	entityDataRequiresOperator
	m	()Z	cc	teleportRequested
	m	()Lakq;	cd	getPrimaryPassenger
	m	()Ljava/util/List;	ce	getPassengerList
	m	()Ljava/util/Collection;	cf	getPassengersDeep
	m	()Ljava/util/stream/Stream;	cg	streamPassengersRecursively
	m	()Z	ch	hasPlayerRider
	m	()Lakq;	ci	getRootVehicle
	m	()Z	cj	isLogicalSideForUpdatingMovement
	m	()Lakq;	ck	getVehicle
	m	()Laaj;	cl	getSoundCategory
	m	()I	cm	getBurningDuration
	m	()Lcq;	cn	getCommandSource
	m	()D	co	getWaterHeight
	m	()F	cp	getWidth
	m	()F	cq	getHeight
	m	()Lcvl;	cr	getPos
	m	()Lcvl;	cs	getVelocity
	m	()D	ct	getX
	m	()D	cu	getY
	m	()D	cv	getRandomBodyY
	m	()D	cw	getEyeY
	m	()D	cx	getZ
	m	()V	cy	checkDespawn
	m	(Z)V	d	setNoGravity
		p	1	noGravity	noGravity
	m	(DDD)V	d	updatePosition
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lalj;)Lcvf;	d	calculateBoundsForPose
		p	1	pos	pos
	m	(Ljt;)Z	d	saveToTag
		p	1	tag	tag
	m	(D)D	d	getParticleX
		p	1	widthScale	widthScale
	m	(FF)Lcvl;	d	getOppositeRotationVector
		p	1	pitch	pitch
		p	2	yaw	yaw
	m	(F)V	d	playSwimSound
		p	1	volume	volume
	m	(Lcvl;)V	d	setVelocity
		p	1	velocity	velocity
	m	(Lalj;)F	e	getEyeHeight
		p	1	pose	pose
	m	(F)F	e	playFlySound
		p	1	distance	distance
	m	(Z)V	e	setSneaking
		p	1	sneaking	sneaking
	m	(DDD)Z	e	doesNotCollide
		p	1	offsetX	offsetX
		p	3	offsetY	offsetY
		p	5	offsetZ	offsetZ
	m	(Lcvl;)Lcvl;	e	adjustMovementForCollisions
		p	1	movement	movement
	m	(Ljt;)Ljt;	e	toTag
		p	1	tag	tag
	m	(D)D	e	getBodyY
		p	1	heightScale	heightScale
	m	(I)V	e	setEntityId
		p	1	id	id
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	(Z)V	f	setSprinting
		p	1	sprinting	sprinting
	m	(D)D	f	offsetZ
		p	1	widthScale	widthScale
	m	(Ljt;)V	f	fromTag
		p	1	tag	tag
	m	(F)Lcvl;	f	getRotationVec
		p	1	tickDelta	tickDelta
	m	(I)V	f	setOnFireFor
		p	1	seconds	seconds
	m	(DDD)V	f	resetPosition
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(I)V	g	setFireTicks
		p	1	ticks	ticks
	m	(F)F	g	getPitch
		p	1	tickDelta	tickDelta
	m	(D)D	g	getParticleZ
		p	1	widthScale	widthScale
	m	(Lakq;)F	g	distanceTo
		p	1	entity	entity
	m	(Z)V	g	setSwimming
		p	1	swimming	swimming
	m	(DDD)D	g	squaredDistanceTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(I)V	h	burn
		p	1	time	time
	m	(Z)V	h	setGlowing
		p	1	glowing	glowing
	m	(Lakq;)D	h	squaredDistanceTo
		p	1	entity	entity
	m	(F)F	h	getYaw
		p	1	tickDelta	tickDelta
	m	()V	h	tick
	m	(DDD)V	h	addVelocity
		p	1	deltaX	deltaX
		p	3	deltaY	deltaY
		p	5	deltaZ	deltaZ
	m	(F)Lcvl;	i	getOppositeRotationVector
		p	1	tickDelta	tickDelta
	m	(Z)V	i	setInvisible
		p	1	invisible	invisible
	m	(I)Z	i	getFlag
		p	1	index	index
	m	(Lakq;)V	i	pushAwayFrom
		p	1	entity	entity
	m	(DDD)Z	i	shouldRender
		p	1	cameraX	cameraX
		p	3	cameraY	cameraY
		p	5	cameraZ	cameraZ
	m	(Z)V	j	onBubbleColumnSurfaceCollision
		p	1	drag	drag
	m	(DDD)V	j	setVelocityClient
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lakq;)Lcvf;	j	getHardCollisionBox
		p	1	collidingEntity	collidingEntity
	m	()V	j	stopRiding
	m	(F)Lcvl;	j	getCameraPosVec
		p	1	tickDelta	tickDelta
	m	(I)V	j	setAir
		p	1	air	air
	m	(I)Z	k	allowsPermissionLevel
		p	1	permissionLevel	permissionLevel
	m	(F)V	k	setHeadYaw
		p	1	headYaw	headYaw
	m	(Z)V	k	onBubbleColumnCollision
		p	1	drag	drag
	m	()Z	k	isBeingRainedOn
	m	(Lakq;)V	k	updatePassengerPosition
		p	1	passenger	passenger
	m	(DDD)V	k	pushOutOfBlocks
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Z)V	l	setInvulnerable
		p	1	invulnerable	invulnerable
	m	(DDD)V	l	teleport
		p	1	destX	destX
		p	3	destY	destY
		p	5	destZ	destZ
	m	(F)V	l	setYaw
		p	1	yaw	yaw
	m	()Z	l	isInsideBubbleColumn
	m	(Lakq;)V	l	onPassengerLookAround
		p	1	passenger	passenger
	m	(Lakq;)Z	m	startRiding
		p	1	entity	entity
	m	()V	m	updateWaterState
	m	(Z)V	m	setCustomNameVisible
		p	1	visible	visible
	m	(DDD)V	m	setVelocity
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(DDD)V	n	setPos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lakq;)Z	n	canStartRiding
		p	1	entity	entity
	m	()V	n	updateSubmergedInWaterState
	m	(Lakq;)V	o	addPassenger
		p	1	passenger	passenger
	m	(Lakq;)V	p	removePassenger
		p	1	passenger	passenger
	m	(Lakq;)Z	q	canAddPassenger
		p	1	passenger	passenger
	m	(Lakq;)Z	r	isTeammate
		p	1	other	other
	m	(Lakq;)Z	s	isPartOf
		p	1	entity	entity
	m	()Z	t	isSpectator
	m	(Lakq;)Z	t	handleAttack
		p	1	attacker	attacker
	m	(Lakq;)V	u	copyPositionAndRotation
		p	1	entity	entity
	m	(Lakq;)V	v	copyFrom
		p	1	original	original
	m	(Lakq;)Z	w	hasPassenger
		p	1	passenger	passenger
	m	()V	w_	initDataTracker
	m	(Lakq;)Z	x	isConnectedThroughVehicle
		p	1	entity	entity
	m	(Lakq;)Z	y	hasPassengerDeep
		p	1	passenger	passenger
	m	()I	y	getPermissionLevel
	m	()V	z_	calculateDimensions
c	akq$a	net/minecraft/entity/Entity$PositionUpdater
	m	(Lakq;DDD)V	accept	accept
		p	1	entity	entity
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	akr	net/minecraft/entity/EntityDimensions
	f	F	a	width
	f	F	b	height
	f	Z	c	fixed
	m	(FFZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	fixed	fixed
	m	(F)Lakr;	a	scaled
		p	1	ratio	ratio
	m	(FF)Lakr;	a	scaled
		p	1	widthRatio	widthRatio
		p	2	heightRatio	heightRatio
	m	(FF)Lakr;	b	changing
		p	0	width	width
		p	1	height	height
	m	(FF)Lakr;	c	fixed
		p	0	width	width
		p	1	height	height
c	akt	net/minecraft/predicate/entity/EntityPredicates
	f	Ljava/util/function/Predicate;	a	VALID_ENTITY
	f	Ljava/util/function/Predicate;	b	VALID_ENTITY_LIVING
	f	Ljava/util/function/Predicate;	c	NOT_MOUNTED
	f	Ljava/util/function/Predicate;	d	VALID_INVENTORIES
	f	Ljava/util/function/Predicate;	e	EXCEPT_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	EXCEPT_SPECTATOR
	m	(Lakq;)Ljava/util/function/Predicate;	a	canBePushedBy
		p	0	entity	entity
	m	(DDDD)Ljava/util/function/Predicate;	a	maximumDistance
		p	0	x	x
	m	(Lakq;)Ljava/util/function/Predicate;	b	rides
		p	0	entity	entity
c	akt$a	net/minecraft/predicate/entity/EntityPredicates$CanPickup
	f	Lben;	a	itemstack
	m	(Lakq;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	aku	net/minecraft/entity/EntityType
	f	Lorg/apache/logging/log4j/Logger;	aZ	LOGGER
	f	Laku$b;	ba	factory
	f	Lalb;	bb	category
	f	Z	bc	saveable
	f	Z	bd	summonable
	f	Z	be	fireImmune
	f	Z	bf	spawnableFarFromPlayer
	f	Ljava/lang/String;	bg	translationKey
	f	Llf;	bh	name
	f	Lsm;	bi	lootTableId
	f	Lakr;	bj	dimensions
	m	(Laku$b;Lalb;ZZZZLakr;)V	<init>	<init>
		p	1	factory	factory
		p	2	category	category
		p	3	saveable	saveable
		p	4	summonable	summonable
		p	5	fireImmune	fireImmune
		p	6	spawnableFarFromPlayer	spawnableFarFromPlayer
		p	7	dimensions	dimensions
	m	(Ljt;Lbjw;)Ljava/util/Optional;	a	getEntityFromTag
		p	0	tag	tag
		p	1	world	world
	m	(Lbjw;Layj;Lakq;Ljt;)V	a	loadFromEntityTag
		p	0	world	world
		p	1	player	player
		p	3	itemTag	itemTag
	m	(Lbjw;)Lakq;	a	create
		p	1	world	world
	m	()Z	a	isSaveable
	m	(Laku;)Lsm;	a	getId
		p	0	type	type
	m	(Lbjw;Laku;)Lakq;	a	newInstance
		p	0	world	world
		p	1	type	type
	m	(Lbjw;Ljt;Llf;Layj;Lfk;Lalc;ZZ)Lakq;	a	spawn
		p	1	world	world
		p	2	itemTag	itemTag
		p	3	name	name
		p	4	player	player
		p	5	pos	pos
		p	6	spawnType	spawnType
		p	7	alignPosition	alignPosition
		p	8	invertY	invertY
	m	(Ljt;Lbjw;Ljava/util/function/Function;)Lakq;	a	loadEntityWithPassengers
		p	0	compoundTag	compoundTag
		p	1	world	world
		p	2	entityProcessor	entityProcessor
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
		p	0	id	id
	m	(ILbjw;)Lakq;	a	createInstanceFromId
		p	0	type	type
		p	1	world	world
	m	(Lbjw;Lben;Layj;Lfk;Lalc;ZZ)Lakq;	a	spawnFromItemStack
		p	1	world	world
		p	2	stack	stack
		p	3	player	player
		p	4	pos	pos
		p	5	spawnType	spawnType
		p	6	alignPosition	alignPosition
		p	7	invertY	invertY
	m	(Lbjz;Lfk;ZLcvf;)D	a	getOriginY
		p	1	pos	pos
		p	2	invertY	invertY
		p	3	boundingBox	boundingBox
	m	(Ljava/lang/String;Laku$a;)Laku;	a	register
		p	0	id	id
		p	1	type	type
	m	(DDD)Lcvf;	a	createSimpleBoundingBox
		p	1	feetX	feetX
		p	3	feetY	feetY
		p	5	feetZ	feetZ
	m	(Ljt;)Ljava/util/Optional;	a	fromTag
		p	0	compoundTag	compoundTag
	m	(Laaz;)Z	a	isTaggedWith
		p	1	tag	tag
	m	(Ljt;Lbjw;)Ljava/util/Optional;	b	loadEntityFromTag
		p	0	compoundTag	compoundTag
		p	1	world	world
	m	()Z	b	isSummonable
	m	(Lbjw;Ljt;Llf;Layj;Lfk;Lalc;ZZ)Lakq;	b	create
		p	1	world	world
		p	2	itemTag	itemTag
		p	3	name	name
		p	4	player	player
		p	5	pos	pos
		p	6	spawnType	spawnType
		p	7	alignPosition	alignPosition
		p	8	invertY	invertY
	m	()Z	c	isFireImmune
	m	()Z	d	isSpawnableFarFromPlayer
	m	()Lalb;	e	getCategory
	m	()Ljava/lang/String;	f	getTranslationKey
	m	()Llf;	g	getName
	m	()Lsm;	h	getLootTableId
	m	()F	i	getWidth
	m	()F	j	getHeight
	m	()Lakr;	k	getDimensions
	m	()I	l	getMaxTrackDistance
	m	()I	m	getTrackTickInterval
	m	()Z	n	alwaysUpdateVelocity
c	aku$a	net/minecraft/entity/EntityType$Builder
	f	Laku$b;	a	factory
	f	Lalb;	b	category
	f	Z	c	saveable
	f	Z	d	summonable
	f	Z	e	fireImmune
	f	Z	f	spawnableFarFromPlayer
	f	Lakr;	g	size
	m	(Laku$b;Lalb;)V	<init>	<init>
		p	1	factory	factory
		p	2	category	category
	m	(Lalb;)Laku$a;	a	create
		p	0	category	category
	m	(FF)Laku$a;	a	setDimensions
		p	1	width	width
		p	2	height	height
	m	(Ljava/lang/String;)Laku;	a	build
		p	1	id	id
	m	()Laku$a;	a	disableSummon
	m	(Laku$b;Lalb;)Laku$a;	a	create
		p	0	factory	factory
		p	1	category	category
	m	()Laku$a;	b	disableSaving
	m	()Laku$a;	c	makeFireImmune
	m	()Laku$a;	d	spawnableFarFromPlayer
c	aku$b	net/minecraft/entity/EntityType$EntityFactory
	m	(Laku;Lbjw;)Lakq;	create	create
		p	1	type	type
		p	2	world	world
c	akv	net/minecraft/entity/EquipmentSlot
	f	Lakv$a;	g	type
	f	I	h	entityId
	f	I	i	armorStandId
	f	Ljava/lang/String;	j	name
	m	(Ljava/lang/String;ILakv$a;IILjava/lang/String;)V	<init>	<init>
		p	3	type	type
		p	4	entityId	entityId
		p	5	armorStandId	armorStandId
		p	6	name	name
	m	(Ljava/lang/String;)Lakv;	a	byName
		p	0	name	name
	m	()Lakv$a;	a	getType
	m	(Lakv$a;I)Lakv;	a	fromTypeIndex
		p	0	type	type
		p	1	index	index
	m	()I	b	getEntitySlotId
	m	()I	c	getArmorStandSlotId
	m	()Ljava/lang/String;	d	getName
c	akv$a	net/minecraft/entity/EquipmentSlot$Type
c	akw	net/minecraft/entity/ExperienceOrbEntity
	f	I	ao	lastTargetUpdateTick
	f	I	b	renderTicks
	f	I	c	orbAge
	f	I	d	pickupDelay
	f	I	e	health
	f	I	f	amount
	f	Layj;	g	target
	m	(Lbjw;DDDI)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	amount	amount
	m	(I)I	a	roundToOrbSize
		p	0	value	value
	m	(I)I	b	getMendingRepairCost
		p	1	repairAmount	repairAmount
	m	(I)I	c	getMendingRepairAmount
		p	1	experienceAmount	experienceAmount
	m	()I	f	getExperienceAmount
	m	()I	i	getOrbSize
	m	()V	k	applyWaterMovement
c	akx	net/minecraft/entity/mob/FlyingEntity
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
c	aky	net/minecraft/util/Arm
	f	Llf;	c	optionName
	m	(Ljava/lang/String;ILlf;)V	<init>	<init>
		p	3	optionName	optionName
	m	()Laky;	a	getOpposite
c	akz	net/minecraft/entity/LivingEntity
	f	F	aA	handSwingProgress
	f	I	aB	lastAttackedTicks
	f	F	aC	lastLimbDistance
	f	F	aD	limbDistance
	f	F	aE	limbAngle
	f	I	aF	defaultMaximumHealth
	f	F	aG	randomLargeSeed
	f	F	aH	randomSmallSeed
	f	F	aI	bodyYaw
	f	F	aJ	prevBodyYaw
	f	F	aK	headYaw
	f	F	aL	prevHeadYaw
	f	F	aM	flyingSpeed
	f	Layj;	aN	attackingPlayer
	f	I	aO	playerHitTimer
	f	Z	aP	dead
	f	I	aQ	despawnCounter
	f	F	aR	prevStepBobbingAmount
	f	F	aS	stepBobbingAmount
	f	F	aT	lookDirection
	f	F	aU	prevLookDirection
	f	I	aW	scoreAmount
	f	F	aX	lastDamageTaken
	f	Z	aY	jumping
	f	F	aZ	sidewaysSpeed
	f	Lsb;	ao	LIVING_FLAGS
	f	Lakr;	ap	SLEEPING_DIMENSIONS
	f	Z	aq	isHandSwinging
	f	Lajk;	ar	preferredHand
	f	I	as	handSwingTicks
	f	I	at	stuckArrowTimer
	f	I	av	hurtTime
	f	I	aw	maxHurtTime
	f	F	ax	knockbackVelocity
	f	I	ay	deathTime
	f	F	az	lastHandSwingProgress
	f	Ljava/util/UUID;	b	ATTR_SPRINTING_SPEED_BOOST_ID
	f	I	bA	lastAttackTime
	f	F	bB	movementSpeed
	f	I	bC	jumpingCooldown
	f	F	bD	absorptionAmount
	f	Lfk;	bE	lastBlockPos
	f	Lajz;	bF	lastDamageSource
	f	J	bG	lastDamageTime
	f	F	bH	leaningPitch
	f	F	bI	lastLeaningPitch
	f	F	ba	upwardSpeed
	f	F	bb	forwardSpeed
	f	I	bc	bodyTrackingIncrements
	f	D	bd	serverX
	f	D	be	serverY
	f	D	bf	serverZ
	f	D	bg	serverYaw
	f	D	bh	serverPitch
	f	D	bi	serverHeadYaw
	f	I	bj	headTrackingIncrements
	f	Lben;	bk	activeItemStack
	f	I	bl	itemUseTimeLeft
	f	I	bm	roll
	f	I	bn	pushCooldown
	f	Lalp;	bo	brain
	f	Lsb;	bp	STINGER_COUNT
	f	Lsb;	bq	SLEEPING_POSITION
	f	Lalu;	br	attributes
	f	Lajy;	bs	damageTracker
	f	Ljava/util/Map;	bt	activeStatusEffects
	f	Lfy;	bu	equippedHand
	f	Lfy;	bv	equippedArmor
	f	Z	bw	effectsChanged
	f	Lakz;	bx	attacker
	f	I	by	lastAttackedTime
	f	Lakz;	bz	attacking
	f	Lals;	c	ATTR_SPRINTING_SPEED_BOOST
	f	Lsb;	d	HEALTH
	f	Lsb;	e	POTION_SWIRLS_COLOR
	f	Lsb;	f	POTION_SWIRLS_AMBIENT
	f	Lsb;	g	STUCK_ARROW_COUNT
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
		p	2	world	world
	m	(Lakq;)D	A	getAttackDistanceScalingFactor
		p	1	entity	entity
	m	(Lakq;)Z	B	tryAttack
		p	1	target	target
	m	()V	C	updatePotionVisibility
	m	(Lakq;)V	C	pushAway
		p	1	entity	entity
	m	(Lakq;)Z	D	canSee
		p	1	entity	entity
	m	(Lajz;)V	a	onDeath
		p	1	source	source
	m	(Lakq;)V	a	onDismounted
		p	1	vehicle	vehicle
	m	(DDDZ)Z	a	teleport
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	particleEffects	particleEffects
	m	(Lben;I)V	a	spawnItemParticles
		p	1	stack	stack
		p	2	count	count
	m	(Lakz;Lask;)Z	a	isTarget
		p	1	entity	entity
		p	2	predicate	predicate
	m	(Lakv;)Z	a	hasStackEquipped
		p	1	slot	slot
	m	(Lakz;)V	a	setAttacker
		p	1	attacker	attacker
	m	(Lajk;)V	a	swingHand
		p	1	hand	hand
	m	(Lfk;Z)V	a	setNearbySongPlaying
		p	1	songPosition	songPosition
		p	2	playing	playing
	m	(Laku;)Z	a	canTarget
		p	1	type	type
	m	(Lbjw;Lben;)Lben;	a	eatFood
		p	1	world	world
		p	2	stack	stack
	m	(Lajk;Z)V	a	swingHand
	m	(Lakq;FDD)V	a	takeKnockback
		p	1	attacker	attacker
		p	2	speed	speed
		p	3	xMovement	xMovement
		p	5	zMovement	zMovement
	m	(ZLajz;)Lcrx$a;	a	getLootContextBuilder
		p	1	causedByPlayer	causedByPlayer
		p	2	source	source
	m	(Lajz;IZ)V	a	dropEquipment
		p	1	source	source
		p	2	lootingMultiplier	lootingMultiplier
		p	3	allowDrops	allowDrops
	m	(Lben;Lbjw;Lakz;)V	a	applyFoodEffects
		p	1	stack	stack
		p	2	world	world
		p	3	targetEntity	targetEntity
	m	(Lfk;)V	a	setPositionInBed
		p	1	pos	pos
	m	(Lcvf;Lcvf;)V	a	push
		p	1	a	a
		p	2	b	b
	m	(Lajz;Z)V	a	dropLoot
		p	1	source	source
		p	2	causedByPlayer	causedByPlayer
	m	(Lakq;I)V	a	sendPickup
		p	1	item	item
		p	2	count	count
	m	(Lakk;)V	a	onStatusEffectApplied
		p	1	effect	effect
	m	(Laki;)Z	a	hasStatusEffect
		p	1	effect	effect
	m	(Lakk;Z)V	a	onStatusEffectUpgraded
		p	1	effect	effect
		p	2	reapplyEffect	reapplyEffect
	m	(Lcom/mojang/datafixers/Dynamic;)Lalp;	a	deserializeBrain
		p	1	dynamic	dynamic
	m	(Lalq;)Lalr;	a	getAttributeInstance
		p	1	attribute	attribute
	m	(Lajk;Lben;)V	a	setStackInHand
		p	1	hand	hand
		p	2	stack	stack
	m	(F)F	a	getLeaningPitch
		p	1	tickDelta	tickDelta
	m	(Z)V	a_	setJumping
		p	1	jumping	jumping
	m	(F)V	b	heal
		p	1	amount	amount
	m	(Laki;)Lakk;	b	getStatusEffect
		p	1	effect	effect
	m	(Lajk;)Lben;	b	getStackInHand
		p	1	hand	hand
	m	(Lajz;F)F	b	applyArmorToDamage
		p	1	source	source
		p	2	amount	amount
	m	(Lben;)V	b	onEquipStack
		p	1	stack	stack
	m	(Lalj;Lakr;)F	b	getActiveEyeHeight
		p	1	pose	pose
		p	2	dimensions	dimensions
	m	(Lakk;)V	b	onStatusEffectRemoved
		p	1	effect	effect
	m	(Lben;I)V	b	spawnConsumptionEffects
		p	1	stack	stack
		p	2	particleCount	particleCount
	m	(Lakv;)Lben;	b	getEquippedStack
		p	1	slot	slot
	m	(Lfk;Lbyj;)Z	b	canEnterTrapdoor
		p	1	pos	pos
		p	2	state	state
	m	(Lfk;)V	b	applyFrostWalker
		p	1	pos	pos
	m	(Lben;)Laah;	c	getDrinkSound
		p	1	stack	stack
	m	(Lajk;)V	c	setCurrentHand
		p	1	hand	hand
	m	(Laki;)Lakk;	c	removeStatusEffectInternal
		c	Removes a status effect from this entity without calling any listener.\n\n<p> This method does not perform any cleanup or synchronization operation.\nUnder most circumstances, calling {@link net.minecraft.entity.LivingEntity
		p	1	type	type
	m	(Lajz;F)F	c	applyEnchantmentsToDamage
		p	1	source	source
		p	2	amount	amount
	m	(F)V	c	setHealth
		p	1	health	health
	m	(Laaz;)V	c	swimUpward
		p	1	fluid	fluid
	m	(Lakz;)Z	c	canTarget
		p	1	target	target
	m	(Lakv;)V	c	sendEquipmentBreakStatus
		p	1	slot	slot
	m	(Lajz;)V	c	playHurtSound
		p	1	source	source
	m	(Ljava/util/Collection;)Z	c	containsOnlyAmbientEffects
		p	0	effects	effects
	m	(Lakk;)Z	c	addStatusEffect
		p	1	effect	effect
	m	(IZ)V	c	setLivingFlag
		p	1	mask	mask
		p	2	value	value
	m	()V	cA	initAttributes
	m	()Z	cB	canBreatheInWater
	m	()F	cC	getScaleFactor
	m	()V	cD	updatePostDeath
	m	()Z	cE	canDropLootAndXp
	m	()Z	cF	shouldAlwaysDropXp
	m	()Ljava/util/Random;	cG	getRandom
	m	()Lakz;	cH	getAttacker
	m	()I	cI	getLastAttackedTime
	m	()Lakz;	cJ	getAttacking
	m	()I	cK	getLastAttackTime
	m	()I	cL	getDespawnCounter
	m	()V	cM	tickStatusEffects
	m	()V	cN	clearPotionSwirls
	m	()Z	cO	clearStatusEffects
	m	()Ljava/util/Collection;	cP	getStatusEffects
	m	()Ljava/util/Map;	cQ	getActiveStatusEffects
	m	()Z	cR	isUndead
	m	()F	cS	getHealth
	m	()Lajz;	cT	getRecentDamageSource
	m	()V	cU	dropInventory
	m	()V	cV	dropXp
	m	()Lsm;	cW	getLootTable
	m	()Laah;	cX	getDeathSound
	m	()Lbyj;	cY	getBlockState
	m	()V	cZ	playBlockFallSound
	m	()Lalp;	cz	getBrain
	m	(Layj;)I	d	getCurrentExperience
		p	1	player	player
	m	(Lajk;)V	d	sendToolBreakStatus
		p	1	hand	hand
	m	(Lfk;)V	d	setSleepingPosition
		p	1	pos	pos
	m	(Lben;)Laah;	d	getEatSound
		p	1	stack	stack
	m	(Lajz;F)V	d	applyDamage
		p	1	source	source
		p	2	amount	amount
	m	(Lakk;)Z	d	canHaveStatusEffect
		p	1	effect	effect
	m	(Lajz;)V	d	drop
		p	1	source	source
	m	(Lakz;)V	d	takeShieldHit
		p	1	attacker	attacker
	m	(Laki;)Z	d	removeStatusEffect
		c	Removes a status effect from this entity.\n\n<p> Calling this method will call cleanup methods on the status effect and trigger synchronization of effect particles with watching clients. If this entity is a player,\nthe change in the list of effects will also be synchronized with the corresponding client.\n\n@return {@code true} if a {@link net.minecraft.entity.effect.StatusEffectInstance} with the given type was in effect before the removal.
		p	1	type	type
	m	(Lakv;)B	d	getEquipmentBreakStatus
		p	0	slot	slot
	m	()Laky;	dA	getMainArm
	m	()Z	dB	isUsingItem
	m	()Lajk;	dC	getActiveHand
	m	()Lben;	dD	getActiveItem
	m	()I	dE	getItemUseTimeLeft
	m	()I	dF	getItemUseTime
	m	()V	dG	stopUsingItem
	m	()V	dH	clearActiveItem
	m	()Z	dI	isBlocking
	m	()Z	dJ	isHoldingOntoLadder
		c	@return {@code true} if this entity should not lose height while in a climbing state\n@see net.minecraft.entity.LivingEntity
	m	()Z	dK	isFallFlying
	m	()I	dL	getRoll
	m	()Z	dM	isAffectedBySplashPotions
	m	()Ljava/util/Optional;	dO	getSleepingPosition
	m	()V	dP	clearSleepingPosition
	m	()Z	dQ	isSleeping
	m	()V	dR	wakeUp
	m	()Lfp;	dS	getSleepingDirection
	m	()I	da	getArmor
	m	()Lajy;	db	getDamageTracker
	m	()Lakz;	dc	getPrimeAdversary
	m	()F	dd	getMaximumHealth
	m	()I	de	getStuckArrowCount
	m	()I	df	getStingerCount
	m	()V	dg	tickHandSwing
	m	()Lalu;	dh	getAttributes
	m	()Lald;	di	getGroup
	m	()Lben;	dj	getMainHandStack
	m	()Lben;	dk	getOffHandStack
	m	()F	dl	getArmorVisibility
	m	()F	dm	getSoundVolume
	m	()F	dn	getSoundPitch
	m	()Z	do	isImmobile
	m	()F	dp	getJumpVelocity
	m	()V	dq	jump
	m	()V	dr	knockDownwards
	m	()F	ds	getBaseMovementSpeedMultiplier
	m	()F	dt	getMovementSpeed
	m	()V	du	tickNewAi
	m	()V	dv	tickCramming
	m	()Z	dw	isUsingRiptide
	m	()Z	dx	canMoveVoluntarily
	m	()F	dy	getAbsorptionAmount
	m	()V	dz	markEffectsDirty
	m	(FF)I	e	computeFallDamage
		p	1	fallDistance	fallDistance
		p	2	damageMultiplier	damageMultiplier
	m	(Lajz;)Laah;	e	getHurtSound
		p	1	source	source
	m	(Lcvl;)V	e	travel
		p	1	movementInput	movementInput
	m	()V	e	enterCombat
	m	(Lfk;)V	e	sleep
		p	1	pos	pos
	m	(Lakz;)V	e	knockback
		p	1	target	target
	m	(Lben;)Z	e	canPickUp
		p	1	stack	stack
	m	()V	f	endCombat
	m	(Lben;)Lben;	f	getArrowType
	m	(FF)F	f	turnHead
		p	1	bodyRotation	bodyRotation
		p	2	headRotation	headRotation
	m	(Lajz;)Z	f	tryUseTotem
		p	1	source	source
	m	(Lakz;)V	f	onKilledBy
		c	Performs secondary effects after this mob has been killed.\n\n<p> The default behaviour spawns a wither rose if {@code adversary} is a {@code WitherEntity}.
		p	1	adversary	adversary
			c	the main adversary responsible for this entity's death
	m	(Lcvl;)Lcvl;	f	applyClimbingSpeed
		p	1	motion	motion
	m	(Lajz;)Z	g	blockedByShield
		p	1	source	source
	m	(Lakz;)V	g	attackLivingEntity
		p	1	target	target
	m	(Lben;)V	g	playEquipmentBreakEffects
		p	1	stack	stack
	m	()V	k	tickMovement
	m	(I)I	l	getNextAirUnderwater
		p	1	air	air
	m	()I	l	getHandSwingDuration
	m	(I)I	m	getNextAirOnLand
		p	1	air	air
	m	(F)V	m	damageArmor
		p	1	amount	amount
	m	(I)V	n	setDespawnCounter
		p	1	despawnCounter	despawnCounter
	m	(F)V	n	damageShield
		p	1	amount	amount
	m	()V	n	initAi
	m	()V	o	tickActiveItemStack
	m	(F)V	o	setMovementSpeed
		p	1	movementSpeed	movementSpeed
	m	(I)Laah;	o	getFallSound
		p	1	distance	distance
	m	()Z	p	shouldSpawnConsumptionEffects
	m	(I)V	p	setStuckArrowCount
		p	1	stuckArrowCount	stuckArrowCount
	m	(F)F	p	getHandSwingProgress
		p	1	tickDelta	tickDelta
	m	()V	q	consumeItem
	m	(F)V	q	setAbsorptionAmount
		p	1	amount	amount
	m	(I)V	q	setStingerCount
		p	1	stingerCount	stingerCount
	m	(F)F	r	getMovementSpeed
		p	1	slipperiness	slipperiness
	m	(I)V	r	setPushCooldown
	m	()V	r	updateLeaningPitch
	m	()Z	s	isSleepingInBed
	m	()Z	x_	isBaby
	m	()Z	y_	isClimbing
	m	(Lakq;)V	z	onAttacking
		p	1	target	target
c	al	net/minecraft/advancement/criterion/BrewedPotionCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lbgd;)V	a	trigger
		p	1	player	player
		p	2	potion	potion
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lal$a;	b	conditionsFromJson
c	al$a	net/minecraft/advancement/criterion/BrewedPotionCriterion$Conditions
	f	Lbgd;	a	potion
	m	(Lbgd;)V	<init>	<init>
		p	1	potion	potion
	m	(Lbgd;)Z	a	matches
		p	1	potion	potion
	m	()Lal$a;	c	any
c	ala	net/minecraft/entity/mob/MobEntity
	f	Lsb;	b	MOB_FLAGS
	f	Z	bA	persistent
	f	Ljava/util/Map;	bB	pathfindingPenalties
	f	Lsm;	bC	lootTable
	f	J	bD	lootTableSeed
	f	Lakq;	bE	holdingEntity
	f	I	bF	holdingEntityId
	f	Ljt;	bG	leashTag
	f	Lfk;	bH	positionTarget
	f	F	bI	positionTargetRange
	f	Laom;	bp	moveControl
	f	Laok;	bq	jumpControl
	f	Larr;	br	navigation
	f	Laph;	bs	goalSelector
	f	Laph;	bt	targetSelector
	f	[F	bu	handDropChances
	f	[F	bv	armorDropChances
	f	Lase;	bw	visibilityCache
	f	Lfy;	bx	handItems
	f	Lfy;	by	armorItems
	f	Z	bz	pickUpLoot
	f	Laog;	c	bodyControl
	f	Lakz;	d	target
	f	I	e	ambientSoundChance
	f	I	f	experiencePoints
	f	Laol;	g	lookControl
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	()I	A	getMinAmbientSoundDelay
	m	()V	B	playAmbientSound
	m	()V	D	playSpawnEffects
	m	()Laah;	G	getAmbientSound
	m	()Lsm;	H	getLootTableId
	m	()Z	I	cannotDespawn
	m	()V	K	sendAiDebugData
	m	(Layj;Lajk;)Z	a	interactMob
		p	1	player	player
		p	2	hand	hand
	m	(Lbjx;Lalc;)Z	a	canSpawn
		p	1	world	world
		p	2	spawnType	spawnType
	m	(Lfk;)Z	a	isInWalkTargetRange
		p	1	pos	pos
	m	(Lben;Lben;Lakv;)Z	a	isBetterItemFor
		p	1	current	current
		p	2	previous	previous
		p	3	slot	slot
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	a	canMobSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	(Lcqm;)F	a	getPathfindingPenalty
		p	1	nodeType	nodeType
	m	(Lbjx;Lajj;Lalc;Lalm;Ljt;)Lalm;	a	initialize
		p	1	world	world
		p	2	difficulty	difficulty
		p	3	spawnType	spawnType
		p	4	entityData	entityData
		p	5	entityTag	entityTag
	m	(Lbjz;)Z	a	canSpawn
		p	1	world	world
	m	(FFF)F	a	changeAngle
		p	1	oldAngle	oldAngle
		p	2	newAngle	newAngle
		p	3	maxChangeInAngle	maxChangeInAngle
	m	(Lawb;)V	a	loot
		p	1	item	item
	m	(Layj;)Z	a	canBeLeashedBy
		p	1	player	player
	m	(Lbei;)Z	a	isHolding
	m	(Lakq;FF)V	a	lookAtEntity
		p	1	targetEntity	targetEntity
		p	2	maxYawChange	maxYawChange
		p	3	maxPitchChange	maxPitchChange
	m	(Lfk;I)V	a	setPositionTarget
		p	1	target	target
		p	2	range	range
	m	(ZZ)V	a	detachLeash
		p	1	sendPacket	sendPacket
	m	(Lakv;F)V	a	setEquipmentDropChance
		p	1	slot	slot
	m	(Lajj;)V	a	initEquipment
		p	1	difficulty	difficulty
	m	(Lcqm;F)V	a	setPathfindingPenalty
		p	1	nodeType	nodeType
		p	2	penalty	penalty
	m	(Lakv;I)Lbei;	a	getEquipmentForSlot
		p	0	equipmentSlot	equipmentSlot
		p	1	equipmentLevel	equipmentLevel
	m	(Lbjw;)Larr;	b	createNavigation
		p	1	world	world
	m	(Lakq;Z)V	b	attachLeash
		p	1	entity	entity
	m	(Lajj;)V	b	updateEnchantments
		p	1	difficulty	difficulty
	m	(Lakv;Lben;)Z	b	canEquipmentSlotContain
		p	0	slot	slot
		p	1	item	item
	m	(I)Z	c	spawnsTooManyForEachTry
		p	1	count	count
	m	(I)V	d	setHoldingEntityId
		p	1	id	id
	m	(Lakv;)F	d	getDropChance
	m	()V	dT	mobTick
	m	()I	dU	getLookPitchSpeed
	m	()I	dV	getBodyYawSpeed
	m	()I	dW	getLookYawSpeed
	m	()I	dX	getLimitPerChunk
	m	()Z	dY	canBeControlledByRider
	m	()V	dZ	setPersistent
	m	()Z	ea	canPickUpLoot
	m	()Z	eb	isPersistent
	m	()Z	ec	isInWalkTargetRange
	m	()Lfk;	ed	getPositionTarget
	m	()F	ee	getPositionTargetRange
	m	()Z	eg	hasPositionTarget
	m	()V	eh	updateLeash
	m	()Z	ei	isLeashed
	m	()Lakq;	ej	getHoldingEntity
	m	()Z	ek	isAiDisabled
	m	()Z	el	isLeftHanded
	m	()Z	em	isAttacking
	m	()Z	en	isInDaylight
	m	()V	eo	deserializeLeashTag
	m	(Lben;)Z	g	canPickupItem
		p	1	stack	stack
	m	(Lakz;)V	h	setTarget
		p	1	target	target
	m	(Lben;)Lakv;	h	getPreferredEquipmentSlot
		p	0	stack	stack
	m	(D)Z	h	canImmediatelyDespawn
		p	1	distanceSquared	distanceSquared
	m	()V	l	resetSoundDelay
	m	(Z)V	n	setCanPickUpLoot
	m	()V	n	initGoals
	m	(Z)V	o	setAiDisabled
	m	()Laog;	o	createBodyControl
	m	(Z)V	p	setLeftHanded
		p	1	leftHanded	leftHanded
	m	()Laol;	p	getLookControl
	m	(Z)V	q	setAttacking
		p	1	attacking	attacking
	m	()Laom;	r	getMoveControl
	m	(F)V	r	setForwardSpeed
		p	1	forwardSpeed	forwardSpeed
	m	()Laok;	s	getJumpControl
	m	(F)V	s	setUpwardSpeed
		p	1	upwardSpeed	upwardSpeed
	m	(F)V	t	setSidewaysSpeed
		p	1	sidewaysMovement	sidewaysMovement
	m	()Larr;	u	getNavigation
	m	()Lase;	v	getVisibilityCache
	m	()Lakz;	w	getTarget
	m	()V	z	onEatingGrass
c	alb	net/minecraft/entity/EntityCategory
	f	Ljava/util/Map;	f	BY_NAME
	f	I	g	spawnCap
	f	Z	h	peaceful
	f	Z	i	animal
	f	Ljava/lang/String;	j	name
	m	(Ljava/lang/String;ILjava/lang/String;IZZ)V	<init>	<init>
		p	3	name	name
		p	4	spawnCap	spawnCap
		p	5	peaceful	peaceful
		p	6	animal	animal
	m	()Ljava/lang/String;	a	getName
	m	()I	b	getSpawnCap
	m	()Z	c	isPeaceful
	m	()Z	d	isAnimal
c	alc	net/minecraft/entity/SpawnType
c	ald	net/minecraft/entity/EntityGroup
	f	Lald;	a	DEFAULT
	f	Lald;	b	UNDEAD
	f	Lald;	c	ARTHROPOD
	f	Lald;	d	ILLAGER
	f	Lald;	e	AQUATIC
c	ale	net/minecraft/entity/MovementType
c	alg	net/minecraft/entity/mob/MobEntityWithAi
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lfk;Lbjz;)F	a	getPathfindingFavor
		p	1	pos	pos
	m	()Z	eo	isNavigating
	m	()D	ep	getRunFromLeashSpeed
	m	(Lfk;)F	f	getPathfindingFavor
		p	1	pos	pos
	m	(F)V	u	updateForLeashLength
		p	1	leashLength	leashLength
c	ali	net/minecraft/entity/JumpingMount
	m	()Z	G_	canJump
	m	(I)V	a_	setJumpStrength
		p	1	strength	strength
	m	(I)V	b	startJumping
		p	1	height	height
	m	()V	c	stopJumping
c	alj	net/minecraft/entity/EntityPose
c	alk	net/minecraft/client/render/entity/feature/SkinOverlayOwner
	m	()Z	J_	shouldRenderOverlay
c	all	net/minecraft/entity/InteractionObserver
	m	(Laso;Lakq;)V	a	onInteractionWith
		p	1	interaction	interaction
		p	2	entity	entity
c	alm	net/minecraft/entity/EntityData
c	aln	net/minecraft/entity/SpawnRestriction
	f	Ljava/util/Map;	a	RESTRICTIONS
	m	(Laku;Laln$c;Lcbv$a;Laln$b;)V	a	register
		p	0	type	type
		p	1	location	location
		p	2	heightmapType	heightmapType
		p	3	predicate	predicate
	m	(Laku;)Laln$c;	a	getLocation
		p	0	type	type
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	a	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	(Laku;)Lcbv$a;	b	getHeightmapType
		p	0	type	type
c	aln$a	net/minecraft/entity/SpawnRestriction$Entry
	f	Lcbv$a;	a	heightmapType
	f	Laln$c;	b	location
	f	Laln$b;	c	predicate
	m	(Lcbv$a;Laln$c;Laln$b;)V	<init>	<init>
		p	1	heightmapType	heightmapType
		p	2	location	location
		p	3	predicate	predicate
c	aln$b	net/minecraft/entity/SpawnRestriction$SpawnPredicate
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	test	test
		p	1	type	type
		p	2	world	world
		p	3	spawnType	spawnType
		p	4	pos	pos
		p	5	random	random
c	aln$c	net/minecraft/entity/SpawnRestriction$Location
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	name	name
		p	2	id	id
c	alo	net/minecraft/entity/passive/TameableEntity
	f	Lsb;	bw	TAMEABLE_FLAGS
	f	Lsb;	bx	OWNER_UUID
	f	Laql;	by	sitGoal
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	()Ljava/util/UUID;	C_	getOwnerUuid
	m	(Lakz;Lakz;)Z	a	canAttackWithOwner
		p	1	target	target
		p	2	owner	owner
	m	(Ljava/util/UUID;)V	b	setOwnerUuid
		p	1	uuid	uuid
	m	(Layj;)V	e	setOwner
		p	1	player	player
	m	()Z	eq	isTamed
	m	()V	er	onTamedChanged
	m	()Z	es	isSitting
	m	()Lakz;	et	getOwner
	m	()Laql;	eu	getSitGoal
	m	(Lakz;)Z	i	isOwner
		p	1	entity	entity
	m	(Z)V	r	showEmoteParticle
		p	1	positive	positive
	m	(Z)V	s	setTamed
		p	1	tamed	tamed
	m	(Z)V	t	setSitting
		p	1	sitting	sitting
c	alp	net/minecraft/entity/ai/brain/Brain
	f	Ljava/util/Map;	a	memories
	f	Ljava/util/Map;	b	sensors
	f	Ljava/util/Map;	c	tasks
	f	Lazt;	d	schedule
	f	Ljava/util/Map;	e	requiredActivityMemories
	f	Ljava/util/Set;	f	coreActivities
	f	Ljava/util/Set;	g	possibleActivities
	f	Lazr;	h	defaultActivity
	f	J	i	activityStartTime
	m	(Ljava/util/Collection;Ljava/util/Collection;Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	2	sensors	sensors
	m	(Larl;Ljava/util/Optional;)V	a	setMemory
		p	2	value	value
	m	(Larl;Lcom/mojang/datafixers/Dynamic;)V	a	readMemory
	m	(Larl;Larm;)Z	a	isMemoryInState
		p	2	state	state
	m	(Lazr;)V	a	resetPossibleActivities
	m	(Lazr;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	setTaskList
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
		p	1	value	value
	m	(Lazr;Lcom/google/common/collect/ImmutableList;)V	a	setTaskList
	m	(JJ)V	a	refreshActivities
		p	1	timeOfDay	timeOfDay
		p	3	time	time
	m	(Larl;)Z	a	hasMemoryModule
	m	(Lxd;Lakz;)V	a	tick
	m	(Lazt;)V	a	setSchedule
	m	(Ljava/util/Set;)V	a	setCoreActivities
	m	(Larl;Ljava/lang/Object;)V	a	putMemory
		p	2	value	value
	m	()Lazt;	b	getSchedule
	m	(Larl;)V	b	forget
	m	(Lxd;Lakz;)V	b	stopAllTasks
	m	(Lazr;)V	b	setDefaultActivity
	m	(Lxd;Lakz;)V	c	updateSensors
	m	(Larl;)Ljava/util/Optional;	c	getOptionalMemory
	m	(Lazr;)Z	c	hasActivity
	m	(Lazr;)Z	d	canDoActivity
	m	()Ljava/util/stream/Stream;	d	streamRunningTasks
	m	(Lxd;Lakz;)V	d	startTasks
	m	(Lxd;Lakz;)V	e	updateTasks
	m	()Lalp;	f	copy
c	alq	net/minecraft/entity/attribute/EntityAttribute
	m	(D)D	a	clamp
		p	1	value	value
	m	()Ljava/lang/String;	a	getId
	m	()D	b	getDefaultValue
	m	()Z	c	isTracked
	m	()Lalq;	d	getParent
c	alr	net/minecraft/entity/attribute/EntityAttributeInstance
	m	(Lalr;)V	a	copyFrom
		p	1	other	other
	m	(Lals$a;)Ljava/util/Set;	a	getModifiers
		p	1	operation	operation
	m	()Lalq;	a	getAttribute
	m	(Ljava/util/UUID;)Lals;	a	getModifier
		p	1	uuid	uuid
	m	(D)V	a	setBaseValue
		p	1	baseValue	baseValue
	m	(Lals;)Z	a	hasModifier
		p	1	modifier	modifier
	m	(Lals;)V	b	addModifier
		p	1	modifier	modifier
	m	(Ljava/util/UUID;)V	b	removeModifier
		p	1	uuid	uuid
	m	()D	b	getBaseValue
	m	()Ljava/util/Set;	c	getModifiers
	m	(Lals;)V	c	removeModifier
		p	1	modifier	modifier
	m	()V	d	clearModifiers
	m	()D	e	getValue
c	als	net/minecraft/entity/attribute/EntityAttributeModifier
	f	D	a	amount
	f	Lals$a;	b	operation
	f	Ljava/util/function/Supplier;	c	nameGetter
	f	Ljava/util/UUID;	d	uuid
	f	Z	e	serialize
	m	(Ljava/util/UUID;Ljava/lang/String;DLals$a;)V	<init>	<init>
		p	1	uuid	uuid
		p	2	name	name
		p	3	amount	amount
		p	5	operation	operation
	m	(Ljava/lang/String;DLals$a;)V	<init>	<init>
		p	1	name	name
		p	2	amount	amount
		p	4	operation	operation
	m	(Ljava/util/UUID;Ljava/util/function/Supplier;DLals$a;)V	<init>	<init>
		p	1	uuid	uuid
		p	2	nameGetter	nameGetter
		p	3	amount	amount
		p	5	operation	operation
	m	()Ljava/util/UUID;	a	getId
	m	(Z)Lals;	a	setSerialize
		p	1	serialize	serialize
	m	()Ljava/lang/String;	b	getName
	m	()Lals$a;	c	getOperation
	m	()D	d	getAmount
	m	()Z	e	shouldSerialize
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	als$a	net/minecraft/entity/attribute/EntityAttributeModifier$Operation
	f	[Lals$a;	d	VALUES
	f	I	e	id
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	id	id
	m	()I	a	getId
	m	(I)Lals$a;	a	fromId
		p	0	id	id
c	alt	net/minecraft/entity/attribute/AbstractEntityAttribute
	f	Lalq;	a	parent
	f	Ljava/lang/String;	b	id
	f	D	c	defaultValue
	f	Z	d	tracked
	m	(Lalq;Ljava/lang/String;D)V	<init>	<init>
		p	1	parent	parent
		p	2	id	id
		p	3	defaultValue	defaultValue
	m	(Z)Lalt;	a	setTracked
		p	1	tracked	tracked
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	alu	net/minecraft/entity/attribute/AbstractEntityAttributeContainer
	f	Ljava/util/Map;	a	instancesByKey
	f	Ljava/util/Map;	b	instancesById
	f	Lcom/google/common/collect/Multimap;	c	attributeHierarchy
	m	(Lalr;)V	a	add
		p	1	instance	instance
	m	(Lalq;)Lalr;	a	get
		p	1	attribute	attribute
	m	(Lalu;)V	a	copyFrom
		p	1	attributeContainer	attributeContainer
	m	(Ljava/lang/String;)Lalr;	a	get
		p	1	name	name
	m	(Lcom/google/common/collect/Multimap;)V	a	removeAll
		p	1	modifiers	modifiers
	m	()Ljava/util/Collection;	a	values
	m	(Lcom/google/common/collect/Multimap;)V	b	replaceAll
		p	1	modifiers	modifiers
	m	(Lalq;)Lalr;	b	register
		p	1	attribute	attribute
	m	(Lalq;)Lalr;	c	createInstance
		p	1	attribute	attribute
c	alv	net/minecraft/entity/attribute/EntityAttributeInstanceImpl
	f	Lalu;	a	container
	f	Lalq;	b	attribute
	f	Ljava/util/Map;	c	modifiersByOperation
	f	Ljava/util/Map;	d	modifiersByName
	f	Ljava/util/Map;	e	modifiersByUuid
	f	D	f	baseValue
	f	Z	g	needsRefresh
	f	D	h	cachedValue
	m	(Lalu;Lalq;)V	<init>	<init>
		p	1	container	container
		p	2	attribute	attribute
	m	(Lals$a;)Ljava/util/Collection;	b	getAllModifiers
		p	1	operation	operation
	m	()V	f	invalidateCache
	m	()D	g	computeValue
c	alw	net/minecraft/entity/attribute/EntityAttributeContainer
	f	Ljava/util/Map;	d	instancesByName
	f	Ljava/util/Set;	e	trackedAttributes
	m	(Ljava/lang/String;)Lalv;	b	get
	m	()Ljava/util/Set;	b	getTrackedAttributes
	m	()Ljava/util/Collection;	c	buildTrackedAttributesCollection
	m	(Lalq;)Lalv;	e	get
c	alx	net/minecraft/entity/attribute/ClampedEntityAttribute
	f	D	a	minValue
	f	D	b	maxValue
	f	Ljava/lang/String;	c	name
	m	(Lalq;Ljava/lang/String;DDD)V	<init>	<init>
		p	1	parent	parent
		p	2	id	id
		p	3	defaultValue	defaultValue
		p	5	minValue	minValue
		p	7	maxValue	maxValue
	m	(Ljava/lang/String;)Lalx;	a	setName
		p	1	name	name
	m	()Ljava/lang/String;	g	getName
c	alz	net/minecraft/entity/ai/brain/task/FindPointOfInterestTask
	f	Lasu;	a	poiType
	f	Larl;	b	targetMemoryModuleType
	f	Z	c	onlyRunIfChild
	f	J	d	positionExpireTimeLimit
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	foundPositionsToExpiry
	f	I	f	tries
	m	(Lasu;Larl;Z)V	<init>	<init>
		p	1	poiType	poiType
		p	2	targetMemoryModule	targetMemoryModule
		p	3	onlyRunIfChild	onlyRunIfChild
	m	(Lxd;Lalg;)Z	a	shouldRun
	m	(Lxd;Lalg;J)V	a	run
c	am	net/minecraft/advancement/criterion/ChangedDimensionCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lcbi;Lcbi;)V	a	trigger
		p	1	player	player
		p	2	from	from
		p	3	to	to
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lam$a;	b	conditionsFromJson
c	am$a	net/minecraft/advancement/criterion/ChangedDimensionCriterion$Conditions
	f	Lcbi;	a	from
	f	Lcbi;	b	to
	m	(Lcbi;Lcbi;)V	<init>	<init>
		p	1	from	from
		p	2	to	to
	m	(Lcbi;)Lam$a;	a	to
		p	0	to	to
	m	(Lcbi;Lcbi;)Z	b	matches
		p	1	from	from
		p	2	to	to
c	ama	net/minecraft/entity/ai/brain/task/GoToWorkTask
	m	(Lxd;Laxw;J)V	a	run
	m	(Lxd;Laxw;)Z	a	shouldRun
c	amb	net/minecraft/entity/ai/brain/task/Task
	f	Ljava/util/Map;	a	requiredMemoryState
	f	Lamb$a;	b	status
	f	J	c	endTime
	f	I	d	minRunTime
	f	I	e	maxRunTime
	m	(Ljava/util/Map;II)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	minRunTime	minRunTime
		p	3	maxRunTime	maxRunTime
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
	m	(Ljava/util/Map;I)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	runTime	runTime
	m	(J)Z	a	isTimeLimitExceeded
		p	1	time	time
	m	(Lxd;Lakz;)Z	a	shouldRun
		p	1	world	world
		p	2	entity	entity
	m	(Lakz;)Z	a	hasRequiredMemoryState
		p	1	entity	entity
	m	(Lxd;Lakz;J)V	a	run
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	()Lamb$a;	a	getStatus
	m	(Lxd;Lakz;J)Z	b	tryStarting
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lxd;Lakz;J)V	c	tick
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lxd;Lakz;J)V	d	keepRunning
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lxd;Lakz;J)V	e	stop
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lxd;Lakz;J)V	f	finishRunning
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
	m	(Lxd;Lakz;J)Z	g	shouldKeepRunning
		p	1	world	world
		p	2	entity	entity
		p	3	time	time
c	amb$a	net/minecraft/entity/ai/brain/task/Task$Status
c	amc	net/minecraft/entity/ai/brain/task/LookTargetUtil
	m	(Lalp;Larl;Laku;)Z	a	canSee
		p	0	brain	brain
		p	1	memoryModuleType	memoryModuleType
		p	2	entityType	entityType
	m	(Lakz;Lakz;I)V	a	walkTowards
		p	0	entity	entity
		p	1	target	target
		p	2	completionRange	completionRange
	m	(Lakz;Lakz;)V	a	lookAtAndWalkTowardsEachOther
		p	0	first	first
		p	1	second	second
	m	(Lxd;Lgd;I)Lgd;	a	getPosClosestToOccupiedPointOfInterest
		p	0	world	world
		p	1	center	center
		p	2	radius	radius
	m	(Lalp;Lakz;)Z	a	canSee
		p	0	brain	brain
		p	1	target	target
	m	(Lakz;Lben;Lakz;)V	a	give
		p	0	entity	entity
		p	1	stack	stack
		p	2	target	target
	m	(Lakz;Lakz;)V	b	lookAtEachOther
		p	0	first	first
		p	1	second	second
	m	(Lakz;Lakz;)V	c	lookAt
		p	0	entity	entity
		p	1	target	target
	m	(Lakz;Lakz;)V	d	walkTowardsEachOther
		p	0	first	first
		p	1	second	second
c	amd	net/minecraft/entity/ai/brain/BlockPosLookTarget
	f	Lfk;	a	blockPos
	f	Lcvl;	b	pos
	m	(Lfk;)V	<init>	<init>
		p	1	blockPos	blockPos
c	ame	net/minecraft/entity/ai/brain/task/CelebrateRaidWinTask
	f	Lazn;	a	raid
	m	(II)V	<init>	<init>
		p	1	minRunTime	minRunTime
		p	2	maxRunTime	maxRunTime
	m	(Lxd;Laxw;)Z	a	shouldRun
	m	(Lbdj;I)Lben;	a	createFirework
		p	1	color	color
		p	2	flight	flight
	m	(Lxd;Laxw;J)Z	a	shouldKeepRunning
	m	(Lxd;Laxw;J)V	b	finishRunning
	m	(Lxd;Laxw;J)V	c	keepRunning
c	amf	net/minecraft/entity/ai/brain/task/WaitTask
	m	(II)V	<init>	<init>
		p	1	minRunTime	minRunTime
		p	2	maxRunTime	maxRunTime
c	amg	net/minecraft/entity/ai/brain/EntityPosWrapper
	f	Lakq;	a	entity
	m	(Lakq;)V	<init>	<init>
		p	1	entity	entity
c	amh	net/minecraft/entity/ai/brain/task/CompositeTask
	f	Ljava/util/Set;	a	memoriesToForgetWhenStopped
	f	Lamh$a;	b	order
	f	Lamh$b;	c	runMode
	f	Laod;	d	tasks
	m	(Ljava/util/Map;Ljava/util/Set;Lamh$a;Lamh$b;Ljava/util/List;)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	memoriesToForgetWhenStopped	memoriesToForgetWhenStopped
		p	3	order	order
		p	4	runMode	runMode
		p	5	tasks	tasks
c	amh$a	net/minecraft/entity/ai/brain/task/CompositeTask$Order
	f	Ljava/util/function/Consumer;	c	listModifier
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
		p	3	listModifier	listModifier
	m	(Laod;)V	a	apply
		p	1	list	list
c	amh$b	net/minecraft/entity/ai/brain/task/CompositeTask$RunMode
	m	(Laod;Lxd;Lakz;J)V	a	run
		p	1	tasks	tasks
		p	2	world	world
		p	3	entity	entity
		p	4	time	time
c	ami	net/minecraft/entity/ai/brain/task/GiveGiftsToHeroTask
	f	Ljava/util/Map;	a	GIFTS
	f	I	b	ticksLeft
	f	Z	c	done
	f	J	d	startTime
	m	(I)V	<init>	<init>
		p	1	delay	delay
	m	(Lxd;Laxw;J)V	a	run
	m	(Laxw;Layj;)Z	a	isCloseEnough
		p	1	villager	villager
		p	2	player	player
	m	(Laxw;)Ljava/util/List;	a	getGifts
		p	1	villager	villager
	m	(Lxd;)I	a	getNextGiftDelay
		p	0	world	world
	m	(Laxw;Lakz;)V	a	giveGifts
		p	1	villager	villager
		p	2	recipient	recipient
	m	(Lxd;Laxw;)Z	a	shouldRun
	m	(Layj;)Z	a	isHero
		p	1	player	player
	m	(Lxd;Laxw;J)Z	b	shouldKeepRunning
	m	(Laxw;)Z	b	isNearestPlayerHero
		p	1	villager	villager
	m	(Laxw;)Ljava/util/Optional;	c	getNearestPlayerIfHero
		p	1	villager	villager
	m	(Lxd;Laxw;J)V	c	keepRunning
	m	(Lxd;Laxw;J)V	d	finishRunning
c	amj	net/minecraft/entity/ai/brain/task/SeekSkyAfterRaidWinTask
c	amk	net/minecraft/entity/ai/brain/task/GoToPointOfInterestTask
	f	F	a	speed
	f	I	b	completionRange
	m	(FI)V	<init>	<init>
		p	1	speed	speed
		p	2	completionRange	completionRange
	m	(Lxd;Laxw;J)V	a	run
	m	(Lxd;Laxw;)Z	a	shouldRun
c	aml	net/minecraft/entity/ai/brain/task/FarmerVillagerTask
	f	Lfk;	a	currentTarget
	f	Z	b	ableToPlant
	f	Z	c	ableToPickUpSeed
	f	J	d	nextResponseTime
	f	I	e	ticksRan
	f	Ljava/util/List;	f	targetPositions
	m	(Lxd;Laxw;J)V	a	run
	m	(Lfk;Lxd;)Z	a	isSuitableTarget
		p	1	pos	pos
		p	2	world	world
	m	(Lxd;Laxw;)Z	a	shouldRun
	m	(Lxd;)Lfk;	a	chooseRandomTarget
		p	1	world	world
	m	(Lxd;Laxw;J)V	b	finishRunning
	m	(Lxd;Laxw;J)V	c	keepRunning
	m	(Lxd;Laxw;J)Z	d	shouldKeepRunning
c	amm	net/minecraft/entity/ai/brain/task/WanderIndoorsTask
	f	F	a	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lxd;Lalg;)Z	a	shouldRun
	m	(Lxd;Lalg;J)V	a	run
c	amn	net/minecraft/entity/ai/brain/task/FindEntityTask
	f	I	a	completionRange
	f	F	b	speed
	f	Laku;	c	entityType
	f	I	d	maxSquaredDistance
	f	Ljava/util/function/Predicate;	e	predicate
	f	Ljava/util/function/Predicate;	f	shouldRunPredicate
	f	Larl;	g	targetModule
	m	(Laku;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Larl;FI)V	<init>	<init>
		p	1	entityType	entityType
		p	2	maxDistance	maxDistance
		p	3	shouldRunPredicate	shouldRunPredicate
		p	4	predicate	predicate
		p	5	targetModule	targetModule
		p	6	speed	speed
		p	7	completionRange	completionRange
	m	(Laku;ILarl;FI)Lamn;	a	create
		p	0	entityType	entityType
		p	1	maxDistance	maxDistance
		p	2	targetModule	targetModule
		p	3	speed	speed
		p	4	completionRange	completionRange
c	amo	net/minecraft/entity/ai/brain/task/OpenDoorsTask
	m	(Lxd;Ljava/util/List;Ljava/util/Set;ILakz;Lalp;)V	a	findAndCloseOpenedDoors
		p	1	world	world
		p	2	path	path
		p	3	doors	doors
		p	4	lastNodeIndex	lastNodeIndex
		p	5	entity	entity
		p	6	brain	brain
	m	(Lxd;Ljava/util/List;ILakz;Lalp;)V	a	closeOpenedDoors
		p	0	world	world
		p	1	path	path
		p	2	currentPathIndex	currentPathIndex
		p	3	entity	entity
		p	4	brain	brain
	m	(Lxd;Ljava/util/List;Ljava/util/List;)Ljava/util/Set;	a	getDoorsOnPath
		p	1	world	world
		p	2	doors	doors
		p	3	path	path
c	amp	net/minecraft/entity/ai/brain/task/JumpInBedTask
	f	F	a	walkSpeed
	f	Lfk;	b	bedPos
	f	I	c	ticksOutOfBedUntilStopped
	f	I	d	jumpsRemaining
	f	I	e	ticksToNextJump
	m	(F)V	<init>	<init>
		p	1	walkSpeed	walkSpeed
	m	(Lala;)Ljava/util/Optional;	a	getNearestBed
		p	1	mob	mob
	m	(Lxd;Lala;J)V	a	run
	m	(Lxd;Lala;)Z	a	shouldRun
	m	(Lxd;Lfk;)Z	a	isBedAt
		p	1	world	world
		p	2	pos	pos
	m	(Lala;Lfk;)V	a	setWalkTarget
		p	1	mob	mob
		p	2	pos	pos
	m	(Lxd;Lala;)Z	b	shouldStartJumping
		p	1	world	world
		p	2	mob	mob
	m	(Lxd;Lala;J)V	b	finishRunning
	m	(Lxd;Lala;)Z	c	isAboveBed
		p	1	world	world
		p	2	mob	mob
	m	(Lxd;Lala;J)Z	c	shouldKeepRunning
	m	(Lxd;Lala;)Z	d	isOnBed
		p	1	world	world
		p	2	mob	mob
	m	(Lxd;Lala;J)V	d	keepRunning
	m	(Lxd;Lala;)Z	e	isBedGoneTooLong
		p	1	world	world
		p	2	mob	mob
	m	(Lxd;Lala;)Z	f	isDoneJumping
		p	1	world	world
		p	2	mob	mob
c	amq	net/minecraft/entity/ai/brain/task/HideInHomeTask
	f	F	a	walkSpeed
	f	I	b	maxDistance
	f	I	c	preferredDistance
	f	Ljava/util/Optional;	d	homePosition
	m	(IFI)V	<init>	<init>
		p	1	maxDistance	maxDistance
		p	2	walkSpeed	walkSpeed
		p	3	preferredDistance	preferredDistance
c	amr	net/minecraft/entity/ai/brain/task/HideInHomeDuringRaidTask
	m	(IF)V	<init>	<init>
		p	1	maxDistance	maxDistance
		p	2	walkSpeed	walkSpeed
c	ams	net/minecraft/entity/ai/brain/task/FollowCustomerTask
	f	F	a	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Laxw;)V	a	update
		p	1	villager	villager
	m	(Lxd;Laxw;)Z	a	shouldRun
	m	(Lxd;Laxw;J)Z	a	shouldKeepRunning
	m	(Lxd;Laxw;J)V	b	run
	m	(Lxd;Laxw;J)V	c	finishRunning
	m	(Lxd;Laxw;J)V	d	keepRunning
c	amt	net/minecraft/entity/ai/brain/task/LookAroundTask
	m	(II)V	<init>	<init>
		p	1	minRunTime	minRunTime
		p	2	maxRunTime	maxRunTime
	m	(Lxd;Lala;J)Z	a	shouldKeepRunning
	m	(Lxd;Lala;J)V	b	finishRunning
	m	(Lxd;Lala;J)V	c	keepRunning
c	amu	net/minecraft/entity/ai/brain/task/VillagerBreedTask
	f	J	a	breedEndTime
	m	(Lxd;Laxw;Lfk;)V	a	setChildHome
		p	1	world	world
		p	2	child	child
		p	3	pos	pos
	m	(Lxd;Laxw;Laxw;)V	a	goHome
		p	1	world	world
		p	2	first	first
		p	3	second	second
	m	(Laxw;)Laxw;	a	getBreedTarget
		p	1	villager	villager
	m	(Lxd;Laxw;)Z	a	shouldRun
	m	(Lxd;Laxw;J)Z	a	shouldKeepRunning
	m	(Laxw;Laxw;)Ljava/util/Optional;	a	createChild
		p	1	first	first
		p	2	second	second
	m	(Laxw;Lfk;)Z	a	canReachHome
		p	1	villager	villager
		p	2	pos	pos
	m	(Lxd;Laxw;J)V	b	run
	m	(Lxd;Laxw;)Ljava/util/Optional;	b	getReachableHome
		p	1	world	world
		p	2	villager	villager
	m	(Laxw;)Z	b	isReadyToBreed
		p	1	villager	villager
	m	(Lxd;Laxw;J)V	c	keepRunning
	m	(Lxd;Laxw;J)V	d	finishRunning
c	amv	net/minecraft/entity/ai/brain/task/SeekSkyTask
	f	F	a	speed
	m	(F)V	<init>	<init>
		p	1	speed	speed
	m	(Lxd;Lakz;Lfk;)Z	a	isSkyVisible
		p	0	world	world
		p	1	entity	entity
		p	2	pos	pos
	m	(Lxd;Lakz;)Lcvl;	b	findNearbySky
		p	1	world	world
		p	2	entity	entity
c	amw	net/minecraft/entity/ai/brain/task/WanderAroundTask
	f	Lcqq;	a	path
	f	Lfk;	b	lookTargetPos
	f	F	c	speed
	f	I	d	pathUpdateCountdownTicks
	m	(I)V	<init>	<init>
		p	1	runTime	runTime
	m	(Lala;Larn;J)Z	a	hasFinishedPath
		p	1	entity	entity
		p	2	walkTarget	walkTarget
		p	3	time	time
	m	(Lxd;Lala;)Z	a	shouldRun
	m	(Lala;Larn;)Z	a	hasReached
		p	1	entity	entity
		p	2	walkTarget	walkTarget
	m	(Lxd;Lala;J)Z	a	shouldKeepRunning
	m	(Lxd;Lala;J)V	b	finishRunning
	m	(Lxd;Lala;J)V	c	run
	m	(Lxd;Lala;J)V	d	keepRunning
c	amx	net/minecraft/entity/ai/brain/task/PickUpItemTask
	f	Ljava/util/List;	a	nearbyItems
	m	(Lxd;Laxw;J)V	a	run
	m	(Lxd;Laxw;)Z	a	shouldRun
c	amy	net/minecraft/entity/ai/brain/task/PlayWithVillagerBabiesTask
	m	(Lxd;Lalg;Lakz;)V	a	setGroundTarget
		p	1	world	world
		p	2	entity	entity
		p	3	unusedBaby	unusedBaby
	m	(Lakz;)Lakz;	a	getInteractionTarget
		p	1	entity	entity
	m	(Lakz;Lakz;)Z	a	isInteractionTargetOf
		p	1	entity	entity
		p	2	other	other
	m	(Lalg;Lakz;)V	a	setPlayTarget
		p	0	entity	entity
		p	1	target	target
	m	(Lxd;Lalg;)Z	a	shouldRun
	m	(Lxd;Lalg;J)V	a	run
	m	(Lalg;)Ljava/util/Optional;	a	getVisibleMob
		p	1	entity	entity
	m	(Lakz;)Lakz;	b	findVisibleVillagerBaby
		p	1	entity	entity
	m	(Lalg;)Ljava/util/Optional;	b	getLeastPopularBabyInteractionTarget
		p	1	entity	entity
	m	(Lalg;)Ljava/util/Map;	c	getBabyInteractionTargetCounts
		p	1	entity	entity
	m	(Lakz;)Z	c	hasInteractionTarget
		p	1	entity	entity
	m	(Lalg;)Ljava/util/List;	d	getVisibleVillagerBabies
		p	1	entity	entity
	m	(Lalg;)Z	e	hasVisibleVillagerBabies
		p	1	entity	entity
c	amz	net/minecraft/entity/ai/brain/LookTarget
	m	()Lfk;	a	getBlockPos
	m	(Lakz;)Z	a	isSeenBy
		p	1	entity	entity
	m	()Lcvl;	b	getPos
c	an	net/minecraft/advancement/criterion/ChanneledLightningCriterion
	f	Lsm;	a	ID
	m	(Lxe;Ljava/util/Collection;)V	a	trigger
		p	1	player	player
		p	2	victims	victims
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lan$a;	b	conditionsFromJson
c	an$a	net/minecraft/advancement/criterion/ChanneledLightningCriterion$Conditions
	f	[Lbb;	a	victims
	m	([Lbb;)V	<init>	<init>
		p	1	victims	victims
	m	([Lbb;)Lan$a;	a	create
		p	0	victims	victims
	m	(Lxe;Ljava/util/Collection;)Z	a	matches
		p	1	player	player
		p	2	victims	victims
c	ana	net/minecraft/entity/ai/brain/task/HideWhenBellRingsTask
c	anb	net/minecraft/entity/ai/brain/task/LoseJobOnSiteLossTask
	m	(Lxd;Laxw;J)V	a	run
	m	(Lxd;Laxw;)Z	a	shouldRun
c	anc	net/minecraft/entity/ai/brain/task/EndRaidTask
c	and	net/minecraft/entity/ai/brain/task/RingBellTask
c	ane	net/minecraft/entity/ai/brain/task/RandomTask
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1	requiredMemoryState	requiredMemoryState
		p	2	tasks	tasks
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	tasks	tasks
c	anf	net/minecraft/entity/ai/brain/task/WalkHomeTask
	f	F	a	speed
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	b	positionToExpiry
	f	I	c	tries
	f	J	d	expiryTimeLimit
	m	(F)V	<init>	<init>
		p	1	speed	speed
c	ang	net/minecraft/entity/ai/brain/task/FollowMobTask
	f	Ljava/util/function/Predicate;	a	mobType
	f	F	b	maxDistanceSquared
	m	(Ljava/util/function/Predicate;F)V	<init>	<init>
		p	1	mobType	mobType
		p	2	maxDistance	maxDistance
	m	(Lalb;F)V	<init>	<init>
		p	1	entityCategory	entityCategory
		p	2	maxDistance	maxDistance
	m	(Laku;F)V	<init>	<init>
		p	1	entityType	entityType
		p	2	maxDistance	maxDistance
c	anh	net/minecraft/entity/ai/brain/task/ForgetBellRingTask
	f	I	a	distance
	f	I	b	maxHiddenTicks
	f	I	c	hiddenTicks
	m	(II)V	<init>	<init>
		p	1	maxHiddenSeconds	maxHiddenSeconds
		p	2	distance	distance
c	ani	net/minecraft/entity/ai/brain/task/FindInteractionTargetTask
	f	Laku;	a	entityType
	f	I	b	maxSquaredDistance
	f	Ljava/util/function/Predicate;	c	predicate
	f	Ljava/util/function/Predicate;	d	shouldRunPredicate
	m	(Laku;I)V	<init>	<init>
		p	1	entityType	entityType
		p	2	maxDistance	maxDistance
	m	(Laku;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	entityType	entityType
		p	2	maxDistance	maxDistance
		p	3	shouldRunPredicate	shouldRunPredicate
		p	4	predicate	predicate
	m	(Lakz;)Z	a	test
		p	1	entity	entity
	m	(Lakz;)Ljava/util/List;	b	getVisibleMobs
		p	1	entity	entity
c	anj	net/minecraft/entity/ai/brain/task/StartRaidTask
c	ank	net/minecraft/entity/ai/brain/task/GoToNearbyEntityTask
	f	Larl;	a	entityMemory
	f	F	b	speed
	m	(Larl;F)V	<init>	<init>
		p	1	entityMemory	entityMemory
		p	2	speed	speed
	m	(Lxd;Lalg;)Z	a	shouldRun
	m	(Lxd;Lalg;J)V	a	run
	m	(Lalg;Lakq;F)V	a	setWalkTarget
		p	0	entity	entity
		p	1	target	target
		p	2	speed	speed
c	anl	net/minecraft/entity/ai/brain/task/VillagerWalkTowardsTask
	f	Larl;	a	destination
	f	F	b	speed
	f	I	c	completionRange
	f	I	d	maxRange
	f	I	e	maxRunTime
	m	(Larl;FIII)V	<init>	<init>
		p	1	destination	destination
		p	2	speed	speed
		p	3	completionRange	completionRange
		p	4	maxRange	maxRange
		p	5	maxRunTime	maxRunTime
	m	(Lxd;Laxw;J)V	a	run
	m	(Laxw;J)V	a	giveUp
		p	1	villager	villager
		p	2	time	time
	m	(Lxd;Laxw;Lfr;)Z	a	exceedsMaxRange
		p	1	world	world
		p	2	villager	villager
		p	3	pos	pos
	m	(Lxd;Laxw;)Z	a	shouldGiveUp
		p	1	world	world
		p	2	villager	villager
	m	(Lxd;Laxw;Lfr;)Z	b	reachedDestination
		p	1	world	world
		p	2	villager	villager
		p	3	pos	pos
c	anm	net/minecraft/entity/ai/brain/task/GoTowardsLookTarget
	f	F	a	speed
	f	I	b	completionRange
	m	(FI)V	<init>	<init>
		p	1	speed	speed
		p	2	completionRange	completionRange
c	ann	net/minecraft/entity/ai/brain/task/HoldTradeOffersTask
	f	Lben;	a	customerHeldStack
	f	Ljava/util/List;	b	offers
	f	I	c	offerShownTicks
	f	I	d	offerIndex
	f	I	e	ticksLeft
	m	(II)V	<init>	<init>
		p	1	rminRunTime	rminRunTime
		p	2	maxRunTime	maxRunTime
	m	(Lxd;Laxw;)Z	a	shouldRun
	m	(Lxd;Laxw;J)Z	a	shouldKeepRunning
	m	(Lbiz;)Z	a	isPossible
		p	1	offer	offer
	m	(Lakz;Laxw;)V	a	setupOffers
		p	1	customer	customer
		p	2	villager	villager
	m	(Laxw;)V	a	holdOffer
		p	1	villager	villager
	m	(Lxd;Laxw;J)V	b	run
	m	(Laxw;)V	b	loadPossibleOffers
		p	1	villager	villager
	m	(Laxw;)Lakz;	c	findPotentialCuatomer
		p	1	villager	villager
	m	(Lxd;Laxw;J)V	c	keepRunning
	m	(Laxw;)V	d	refreshShownOffer
		p	1	villager	villager
	m	(Lxd;Laxw;J)V	d	finishRunning
c	ano	net/minecraft/entity/ai/brain/task/SleepTask
	f	J	a	startTime
c	anp	net/minecraft/entity/ai/brain/task/MeetVillagerTask
c	anq	net/minecraft/entity/ai/brain/task/GoToIfNearbyTask
	f	Larl;	a	target
	f	J	b	nextUpdateTime
	f	I	c	maxDistance
	m	(Larl;I)V	<init>	<init>
		p	1	target	target
		p	2	maxDistance	maxDistance
	m	(Lxd;Lalg;)Z	a	shouldRun
	m	(Lxd;Lalg;J)V	a	run
c	anr	net/minecraft/entity/ai/brain/task/GoToNearbyPositionTask
	f	Larl;	a	memoryModuleType
	f	I	b	completionRange
	f	I	c	maxDistance
	f	J	d	nextRunTime
	m	(Larl;II)V	<init>	<init>
		p	1	memoryModuleType	memoryModuleType
		p	2	completionRange	completionRange
		p	3	maxDistance	maxDistance
	m	(Lxd;Lalg;)Z	a	shouldRun
	m	(Lxd;Lalg;J)V	a	run
c	ans	net/minecraft/entity/ai/brain/task/GoToSecondaryPositionTask
	f	Larl;	a	secondaryPositions
	f	Larl;	b	primaryPosition
	f	F	c	speed
	f	I	d	completionRange
	f	I	e	primaryPositionActivationDistance
	f	J	f	nextRunTime
	f	Lfr;	g	chosenPosition
	m	(Larl;FIILarl;)V	<init>	<init>
		p	1	secondaryPositions	secondaryPositions
		p	2	speed	speed
		p	3	completionRange	completionRange
		p	4	primaryPositionActivationDistance	primaryPositionActivationDistance
		p	5	primaryPosition	primaryPosition
	m	(Lxd;Laxw;J)V	a	run
	m	(Lxd;Laxw;)Z	a	shouldRun
c	ant	net/minecraft/entity/ai/brain/task/StayAboveWaterTask
	f	F	a	minWaterHeight
	f	F	b	chance
	m	(FF)V	<init>	<init>
		p	1	minWaterHeight	minWaterHeight
		p	2	chance	chance
	m	(Lxd;Lala;)Z	a	shouldRun
	m	(Lxd;Lala;J)Z	a	shouldKeepRunning
	m	(Lxd;Lala;J)V	b	keepRunning
c	anu	net/minecraft/entity/ai/brain/task/GatherItemsVillagerTask
	f	Ljava/util/Set;	a	items
	m	(Lxd;Laxw;)Z	a	shouldRun
	m	(Lxd;Laxw;J)Z	a	shouldKeepRunning
	m	(Laxw;Laxw;)Ljava/util/Set;	a	getGatherableItems
	m	(Laxw;Ljava/util/Set;Lakz;)V	a	giveHalfOfStack
		p	0	villager	villager
		p	1	validItems	validItems
		p	2	target	target
	m	(Lxd;Laxw;J)V	b	run
	m	(Lxd;Laxw;J)V	c	keepRunning
	m	(Lxd;Laxw;J)V	d	finishRunning
c	anv	net/minecraft/entity/ai/brain/task/ScheduleActivityTask
c	anw	net/minecraft/entity/ai/brain/task/ForgetCompletedPointOfInterestTask
	f	Larl;	a	memoryModule
	f	Ljava/util/function/Predicate;	b	condition
	m	(Lasu;Larl;)V	<init>	<init>
		p	1	poiType	poiType
		p	2	memoryModule	memoryModule
	m	(Lxd;Lfk;Lakz;)Z	a	isBedOccupiedByOthers
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	(Lxd;Lfk;)Z	a	hasCompletedPointOfInterest
		p	1	world	world
		p	2	pos	pos
c	anx	net/minecraft/entity/ai/brain/task/RunAroundAfterRaidTask
	m	(F)V	<init>	<init>
		p	1	walkSpeed	walkSpeed
	m	(Lxd;Lalg;)Z	a	shouldRun
c	any	net/minecraft/entity/ai/brain/task/FindWalkTargetTask
	f	F	a	walkSpeed
	f	I	b	maxHorizontalDistance
	f	I	c	maxVerticalDistance
	m	(FII)V	<init>	<init>
		p	1	walkSpeed	walkSpeed
		p	2	maxHorizontalDistance	maxHorizontalDistance
		p	3	maxVerticalDistance	maxVerticalDistance
	m	(F)V	<init>	<init>
		p	1	walkSpeed	walkSpeed
	m	(Lalg;Lgd;)V	a	updateWalkTarget
		p	1	entity	entity
		p	2	pos	pos
	m	(Lalg;)V	a	updateWalkTarget
		p	1	entity	entity
	m	(Lxd;Lalg;J)V	a	run
c	anz	net/minecraft/entity/ai/brain/task/StopPanickingTask
	m	(Lxd;Laxw;J)V	a	run
	m	(Laxw;)Z	a	wasHurtByNearbyEntity
		p	0	entity	entity
c	ao	net/minecraft/advancement/criterion/ConstructBeaconCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lbwg;)V	a	trigger
		p	1	player	player
		p	2	beacon	beacon
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lao$a;	b	conditionsFromJson
c	ao$a	net/minecraft/advancement/criterion/ConstructBeaconCriterion$Conditions
	f	Lbr$d;	a	level
	m	(Lbr$d;)Lao$a;	a	level
	m	(Lbwg;)Z	a	matches
		p	1	beacon	beacon
c	aoa	net/minecraft/entity/ai/brain/task/VillagerTaskListProvider
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	a	createCoreTasks
		p	0	profession	profession
	m	()Lcom/mojang/datafixers/util/Pair;	a	createFreeFollowTask
	m	(F)Lcom/google/common/collect/ImmutableList;	a	createPlayTasks
	m	()Lcom/mojang/datafixers/util/Pair;	b	createBusyFollowTask
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	b	createWorkTasks
		p	0	profession	profession
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	c	createRestTasks
		p	0	profession	profession
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	d	createMeetTasks
		p	0	profession	profession
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	e	createIdleTasks
		p	0	profession	profession
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	f	createPanicTasks
		p	0	profession	profession
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	g	createPreRaidTasks
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	h	createRaidTasks
	m	(Laxz;F)Lcom/google/common/collect/ImmutableList;	i	createHideTasks
c	aob	net/minecraft/entity/ai/brain/task/PanicTask
	m	(Lakz;)Z	a	isHostileNearby
		p	0	entity	entity
	m	(Lxd;Laxw;J)Z	a	shouldKeepRunning
	m	(Lxd;Laxw;J)V	b	run
	m	(Lakz;)Z	b	wasHurt
		p	0	entity	entity
	m	(Lxd;Laxw;J)V	c	keepRunning
c	aoc	net/minecraft/entity/ai/brain/task/WakeUpTask
c	aod	net/minecraft/util/WeightedList
	f	Ljava/util/List;	a	entries
	f	Ljava/util/Random;	b	random
	m	(Ljava/lang/Object;I)Laod;	a	add
		p	1	item	item
		p	2	weight	weight
	m	(Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/function/Function;)Ljava/lang/Object;	a	serialize
		p	1	ops	ops
		p	2	entrySerializer	entrySerializer
	m	(Ljava/util/Random;)Laod;	a	shuffle
		p	1	random	random
	m	()Laod;	a	shuffle
	m	(Ljava/util/Random;)Ljava/lang/Object;	b	pickRandom
		p	1	random	random
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/stream/Stream;	c	streamEntries
c	aod$a	net/minecraft/util/WeightedList$Entry
	f	Ljava/lang/Object;	b	item
	f	I	c	weight
	f	D	d	shuffledOrder
	m	(Laod;Ljava/lang/Object;I)V	<init>	<init>
		p	2	item	item
		p	3	weight	weight
	m	(F)V	a	setShuffledOrder
		p	1	random	random
	m	()Ljava/lang/Object;	a	getElement
	m	()I	b	getWeight
	m	()D	c	getShuffledOrder
c	aoe	net/minecraft/entity/ai/brain/task/VillagerWorkTask
	f	J	a	lastCheckedTime
	m	(Lxd;Laxw;J)V	a	run
	m	(Lxd;Laxw;)Z	a	shouldRun
c	aog	net/minecraft/entity/ai/control/BodyControl
	f	Lala;	a	entity
	f	I	b	activeTicks
	f	F	c	lastHeadYaw
	m	(Lala;)V	<init>	<init>
		p	1	entity	entity
	m	()V	a	tick
	m	()V	b	rotateLook
	m	()V	c	rotateHead
	m	()V	d	rotateBody
	m	()Z	e	isIndependent
	m	()Z	f	isMoving
c	aoi	net/minecraft/entity/ai/control/DolphinLookControl
	f	I	h	maxYawDifference
	m	(Lala;I)V	<init>	<init>
		p	1	entity	entity
		p	2	maxYawDifference	maxYawDifference
c	aoj	net/minecraft/entity/ai/control/FlightMoveControl
	f	I	i	maxPitchChange
	f	Z	j	noGravity
	m	(Lala;IZ)V	<init>	<init>
		p	1	entity	entity
		p	2	maxPitchChange	maxPitchChange
		p	3	noGravity	noGravity
c	aok	net/minecraft/entity/ai/control/JumpControl
	f	Z	a	active
	f	Lala;	b	entity
	m	(Lala;)V	<init>	<init>
		p	1	entity	entity
	m	()V	a	setActive
	m	()V	b	tick
c	aol	net/minecraft/entity/ai/control/LookControl
	f	Lala;	a	entity
	f	F	b	yawSpeed
	f	F	c	pitchSpeed
	f	Z	d	active
	f	D	e	lookX
	f	D	f	lookY
	f	D	g	lookZ
	m	(Lala;)V	<init>	<init>
		p	1	entity	entity
	m	(Lcvl;)V	a	lookAt
		p	1	direction	direction
	m	(Lakq;FF)V	a	lookAt
		p	1	entity	entity
		p	2	yawSpeed	yawSpeed
		p	3	pitchSpeed	pitchSpeed
	m	(FFF)F	a	changeAngle
		p	1	from	from
		p	2	to	to
		p	3	max	max
	m	(DDD)V	a	lookAt
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()V	a	tick
	m	(DDDFF)V	a	lookAt
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yawSpeed	yawSpeed
		p	8	pitchSpeed	pitchSpeed
	m	(Lakq;)D	b	getLookingHeightFor
		p	0	entity	entity
	m	()Z	b	shouldStayHorizontal
	m	()Z	c	isActive
	m	()D	d	getLookX
	m	()D	e	getLookY
	m	()D	f	getLookZ
	m	()F	g	getTargetPitch
	m	()F	h	getTargetYaw
c	aom	net/minecraft/entity/ai/control/MoveControl
	f	Lala;	a	entity
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	speed
	f	F	f	forwardMovement
	f	F	g	sidewaysMovement
	f	Laom$a;	h	state
	m	(Lala;)V	<init>	<init>
		p	1	entity	entity
	m	(FF)V	a	strafeTo
		p	1	forward	forward
		p	2	sideways	sideways
	m	(FFF)F	a	changeAngle
		p	1	from	from
		p	2	to	to
		p	3	max	max
	m	(DDDD)V	a	moveTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	speed	speed
	m	()V	a	tick
	m	()Z	b	isMoving
	m	()D	c	getSpeed
	m	()D	d	getTargetX
	m	()D	e	getTargetY
	m	()D	f	getTargetZ
c	aom$a	net/minecraft/entity/ai/control/MoveControl$State
c	aoo	net/minecraft/entity/ai/goal/FleeEntityGoal
	f	Lalg;	a	mob
	f	Lakz;	b	targetEntity
	f	F	c	fleeDistance
	f	Lcqq;	d	fleePath
	f	Larr;	e	fleeingEntityNavigation
	f	Ljava/lang/Class;	f	classToFleeFrom
	f	Ljava/util/function/Predicate;	g	extraInclusionSelector
	f	Ljava/util/function/Predicate;	h	inclusionSelector
	f	D	i	slowSpeed
	f	D	j	fastSpeed
	f	Lask;	k	withinRangePredicate
	m	(Lalg;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	mob	mob
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
	m	(Lalg;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	fleeFromType	fleeFromType
		p	3	extraInclusionSelector	extraInclusionSelector
		p	4	distance	distance
		p	5	slowSpeed	slowSpeed
		p	7	fastSpeed	fastSpeed
		p	9	inclusionSelector	inclusionSelector
	m	(Lalg;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1	fleeingEntity	fleeingEntity
		p	2	classToFleeFrom	classToFleeFrom
		p	3	fleeDistance	fleeDistance
		p	4	fleeSlowSpeed	fleeSlowSpeed
		p	6	fleeFastSpeed	fleeFastSpeed
		p	8	inclusionSelector	inclusionSelector
c	aop	net/minecraft/entity/ai/goal/WolfBegGoal
	f	Lauc;	a	wolf
	f	Layj;	b	begFrom
	f	Lbjw;	c	world
	f	F	d	begDistance
	f	I	e	timer
	f	Lask;	f	validPlayerPredicate
	m	(Lauc;F)V	<init>	<init>
		p	1	wolf	wolf
		p	2	begDistance	begDistance
	m	(Layj;)Z	a	isAttractive
		p	1	player	player
c	aoq	net/minecraft/entity/ai/goal/ChaseBoatState
c	aor	net/minecraft/entity/ai/goal/BreakDoorGoal
	f	I	a	breakProgress
	f	I	b	prevBreakProgress
	f	I	c	maxProgress
	f	Ljava/util/function/Predicate;	g	difficultySufficientPredicate
	m	(Lala;ILjava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	maxProgress	maxProgress
		p	3	difficultySufficientPredicate	difficultySufficientPredicate
	m	(Lala;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	difficultySufficientPredicate	difficultySufficientPredicate
	m	(Laji;)Z	a	isDifficultySufficient
		p	1	difficulty	difficulty
	m	()I	f	getMaxProgress
c	aos	net/minecraft/entity/ai/goal/BreatheAirGoal
	f	Lalg;	a	mob
	m	(Lalg;)V	<init>	<init>
		p	1	mob	mob
	m	(Lbjz;Lfk;)Z	a	isAirPos
		p	1	world	world
		p	2	pos	pos
	m	()V	g	moveToAir
c	aot	net/minecraft/entity/ai/goal/AnimalMateGoal
	f	Latc;	a	animal
	f	Lbjw;	b	world
	f	Latc;	c	mate
	f	Lask;	d	VALID_MATE_PREDICATE
	f	Ljava/lang/Class;	e	entityClass
	f	I	f	timer
	f	D	g	chance
	m	(Latc;D)V	<init>	<init>
		p	1	animal	animal
		p	2	chance	chance
	m	(Latc;DLjava/lang/Class;)V	<init>	<init>
		p	1	animal	animal
		p	2	chance	chance
		p	4	entityClass	entityClass
	m	()V	g	breed
	m	()Latc;	h	findMate
c	aou	net/minecraft/entity/ai/goal/GoToOwnerAndPurrGoal
	f	Late;	g	cat
	m	(Late;DI)V	<init>	<init>
		p	1	cat	cat
		p	2	speed	speed
		p	4	range	range
c	aov	net/minecraft/entity/ai/goal/CatSitOnBlockGoal
	f	Late;	g	cat
	m	(Late;D)V	<init>	<init>
		p	1	cat	cat
		p	2	speed	speed
c	aow	net/minecraft/entity/ai/goal/DolphinJumpGoal
	f	[I	a	OFFSET_MULTIPLIERS
	f	Lati;	b	dolphin
	f	I	c	chance
	f	Z	d	inWater
	m	(Lati;I)V	<init>	<init>
		p	1	dolphin	dolphin
		p	2	chance	chance
	m	(Lfk;III)Z	a	isWater
		p	1	pos	pos
		p	2	xOffset	xOffset
		p	3	zOffset	zOffset
		p	4	multiplier	multiplier
	m	(Lfk;III)Z	b	isAirAbove
		p	1	pos	pos
		p	2	xOffset	xOffset
		p	3	zOffset	zOffset
		p	4	multiplier	multiplier
c	aox	net/minecraft/entity/ai/goal/DoorInteractGoal
	f	Z	a	shouldStop
	f	F	b	xOffset
	f	F	c	zOffset
	f	Lala;	d	mob
	f	Lfk;	e	doorPos
	f	Z	f	doorValid
	m	(Lala;)V	<init>	<init>
		p	1	mob	mob
	m	(Lbjw;Lfk;)Z	a	isWoodenDoor
		p	0	world	world
		p	1	pos	pos
	m	(Z)V	a	setDoorOpen
		p	1	open	open
	m	()Z	g	isDoorOpen
c	aoy	net/minecraft/entity/ai/goal/EatGrassGoal
	f	Ljava/util/function/Predicate;	a	GRASS_PREDICATE
	f	Lala;	b	mob
	f	Lbjw;	c	world
	f	I	d	timer
	m	(Lala;)V	<init>	<init>
		p	1	mob	mob
	m	()I	g	getTimer
c	aoz	net/minecraft/entity/ai/goal/EscapeSunlightGoal
	f	Lalg;	a	mob
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	speed
	f	Lbjw;	f	world
	m	(Lalg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	()Z	g	targetShadedPos
	m	()Lcvl;	h	locateShadedPos
c	ap	net/minecraft/advancement/criterion/ConsumeItemCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lben;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lap$a;	b	conditionsFromJson
c	ap$a	net/minecraft/advancement/criterion/ConsumeItemCriterion$Conditions
	f	Lbj;	a	item
	m	(Lbj;)V	<init>	<init>
		p	1	item	item
	m	(Lben;)Z	a	matches
		p	1	stack	stack
	m	(Lbjv;)Lap$a;	a	item
		p	0	item	item
	m	()Lap$a;	c	any
c	apa	net/minecraft/entity/ai/goal/SwimGoal
	f	Lala;	a	mob
	m	(Lala;)V	<init>	<init>
		p	1	mob	mob
c	apb	net/minecraft/entity/ai/goal/ChaseBoatGoal
	f	I	a	updateCountdownTicks
	f	Lalg;	b	mob
	f	Lakz;	c	passenger
	f	Laoq;	d	state
	m	(Lalg;)V	<init>	<init>
		p	1	mob	mob
c	apc	net/minecraft/entity/ai/goal/FollowGroupLeaderGoal
	f	Latb;	a	fish
	f	I	b	moveDelay
	f	I	c	checkSurroundingDelay
	m	(Latb;)V	<init>	<init>
		p	1	fish	fish
	m	(Latb;)I	a	getSurroundingSearchDelay
		p	1	fish	fish
c	apd	net/minecraft/entity/ai/goal/FollowMobGoal
	f	Lala;	a	mob
	f	Ljava/util/function/Predicate;	b	targetPredicate
	f	Lala;	c	target
	f	D	d	speed
	f	Larr;	e	navigation
	f	I	f	updateCountdownTicks
	f	F	g	minDistance
	f	F	h	oldWaterPathFindingPenalty
	f	F	i	maxDistance
	m	(Lala;DFF)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	minDistance	minDistance
		p	5	maxDistance	maxDistance
c	ape	net/minecraft/entity/ai/goal/FollowOwnerGoal
	f	Lalo;	a	tameable
	f	Lakz;	b	owner
	f	Lbjz;	c	world
	f	D	d	speed
	f	Larr;	e	navigation
	f	I	f	updateCountdownTicks
	f	F	g	maxDistance
	f	F	h	minDistance
	f	F	i	oldWaterPathfindingPenalty
	f	Z	j	leavesAllowed
	m	(Lalo;DFFZ)V	<init>	<init>
		p	1	tameable	tameable
		p	2	speed	speed
		p	4	minDistance	minDistance
		p	5	maxDistance	maxDistance
		p	6	leavesAllowed	leavesAllowed
	m	(II)I	a	getRandomInt
		p	1	min	min
		p	2	max	max
	m	(Lfk;)Z	a	canTeleportTo
		p	1	pos	pos
	m	(III)Z	a	tryTeleportTo
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()V	g	tryTeleport
c	apf	net/minecraft/entity/ai/goal/FollowParentGoal
	f	Latc;	a	animal
	f	Latc;	b	parent
	f	D	c	speed
	f	I	d	delay
	m	(Latc;D)V	<init>	<init>
		p	1	animal	animal
		p	2	speed	speed
c	apg	net/minecraft/entity/ai/goal/Goal
	f	Ljava/util/EnumSet;	a	controls
	m	()Z	E_	canStop
	m	()Z	a	canStart
	m	(Ljava/util/EnumSet;)V	a	setControls
		p	1	controls	controls
	m	()Z	b	shouldContinue
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/EnumSet;	i	getControls
c	apg$a	net/minecraft/entity/ai/goal/Goal$Control
c	aph	net/minecraft/entity/ai/goal/GoalSelector
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Laqv;	b	activeGoal
	f	Ljava/util/Map;	c	goalsByControl
	f	Ljava/util/Set;	d	goals
	f	Laio;	e	profiler
	f	Ljava/util/EnumSet;	f	disabledControls
	f	I	g	timeInterval
	m	(Laio;)V	<init>	<init>
		p	1	profiler	profiler
	m	(Lapg$a;)V	a	disableControl
		p	1	control	control
	m	(ILapg;)V	a	add
		p	1	weight	weight
		p	2	goal	goal
	m	(Lapg$a;Z)V	a	setControlEnabled
		p	1	control	control
		p	2	enabled	enabled
	m	()V	a	tick
	m	(Lapg;)V	a	remove
		p	1	goal	goal
	m	(Lapg$a;)V	b	enableControl
		p	1	control	control
	m	()Ljava/util/stream/Stream;	c	getRunningGoals
c	api	net/minecraft/entity/ai/goal/GoToEntityGoal
c	apj	net/minecraft/entity/ai/goal/DiveJumpingGoal
c	apk	net/minecraft/entity/ai/goal/SitOnOwnerShoulderGoal
	f	Latw;	a	tameable
	f	Lxe;	b	owner
	f	Z	c	mounted
	m	(Latw;)V	<init>	<init>
		p	1	tameable	tameable
c	apl	net/minecraft/entity/ai/goal/PounceAtTargetGoal
	f	Lala;	a	mob
	f	Lakz;	b	target
	f	F	c	velocity
	m	(Lala;F)V	<init>	<init>
		p	1	rmob	rmob
		p	2	velocity	velocity
c	apm	net/minecraft/entity/ai/goal/FormCaravanGoal
	f	Lauh;	a	llama
	f	D	b	speed
	f	I	c	counter
	m	(Lauh;D)V	<init>	<init>
		p	1	llama	llama
		p	2	speed	speed
	m	(Lauh;I)Z	a	canFollow
		p	1	llama	llama
		p	2	length	length
c	apn	net/minecraft/entity/ai/goal/LookAtEntityGoal
	f	Lala;	a	mob
	f	Lakq;	b	target
	f	F	c	range
	f	F	d	chance
	f	Ljava/lang/Class;	e	targetType
	f	Lask;	f	targetPredicate
	f	I	g	lookTime
	m	(Lala;Ljava/lang/Class;FF)V	<init>	<init>
		p	1	mob	mob
		p	2	targetType	targetType
		p	3	range	range
		p	4	chance	chance
	m	(Lala;Ljava/lang/Class;F)V	<init>	<init>
		p	1	mob	mob
		p	2	targetType	targetType
		p	3	range	range
c	apo	net/minecraft/entity/ai/goal/LookAtCustomerGoal
	f	Laxs;	g	trader
	m	(Laxs;)V	<init>	<init>
		p	1	trader	trader
c	app	net/minecraft/entity/ai/goal/MeleeAttackGoal
	f	Lalg;	a	mob
	f	I	b	ticksUntilAttack
	f	I	c	attackIntervalTicks
	f	D	d	speed
	f	Z	e	pauseWhenMobIdle
	f	Lcqq;	f	path
	f	I	g	updateCountdownTicks
	f	D	h	targetX
	f	D	i	targetY
	f	D	j	targetZ
	f	J	k	lastUpdateTime
	m	(Lalg;DZ)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	pauseWhenMobIdle	pauseWhenMobIdle
	m	(Lakz;D)V	a	attack
		p	1	target	target
		p	2	squaredDistance	squaredDistance
	m	(Lakz;)D	a	getSquaredMaxAttackDistance
		p	1	entity	entity
c	apq	net/minecraft/entity/ai/goal/WanderAroundPointOfInterestGoal
c	aps	net/minecraft/entity/ai/goal/MoveThroughVillageGoal
	f	Lalg;	a	mob
	f	D	b	speed
	f	Lcqq;	c	targetPath
	f	Lfk;	d	target
	f	Z	e	requiresNighttime
	f	Ljava/util/List;	f	visitedTargets
	f	I	g	distance
	f	Ljava/util/function/BooleanSupplier;	h	doorPassingThroughGetter
	m	(Lalg;DZILjava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	requiresNighttime	requiresNighttime
		p	5	distance	distance
		p	6	doorPassingThroughGetter	doorPassingThroughGetter
	m	(Lfk;)Z	a	shouldVisit
		p	1	pos	pos
	m	()V	g	forgetOldTarget
c	apt	net/minecraft/entity/ai/goal/MoveToTargetPosGoal
	f	Lalg;	a	mob
	f	D	b	speed
	f	I	c	cooldown
	f	I	d	tryingTime
	f	Lfk;	e	targetPos
	f	I	f	lowestY
	f	I	g	safeWaitingTime
	f	Z	h	reached
	f	I	i	range
	f	I	j	maxYDifference
	m	(Lalg;DII)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	range	range
		p	5	maxYDifference	maxYDifference
	m	(Lalg;DI)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	range	range
	m	(Lalg;)I	a	getInterval
		p	1	mob	mob
	m	(Lbjz;Lfk;)Z	a	isTargetPos
		p	1	world	world
		p	2	pos	pos
	m	()V	g	startMovingToTarget
	m	()D	h	getDesiredSquaredDistanceToTarget
	m	()Z	j	shouldResetPath
	m	()Z	k	hasReached
	m	()Z	l	findTargetPos
c	apu	net/minecraft/entity/ai/goal/GoToWalkTargetGoal
	f	Lalg;	a	mob
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	D	e	speed
	m	(Lalg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
c	apv	net/minecraft/entity/ai/goal/GoToEntityTargetGoal
	f	Lalg;	a	mob
	f	Lakz;	b	target
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	D	f	speed
	f	F	g	maxDistance
	m	(Lalg;DF)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	maxDistance	maxDistance
c	apw	net/minecraft/entity/ai/goal/AttackGoal
	f	Lbjg;	a	world
	f	Lala;	b	mob
	f	Lakz;	c	target
	f	I	d	cooldown
	m	(Lala;)V	<init>	<init>
		p	1	mob	mob
c	apx	net/minecraft/entity/ai/goal/IronGolemLookGoal
	f	Lask;	a	CLOSE_VILLAGER_PREDICATE
	f	Latl;	b	golem
	f	Laxw;	c	targetVillager
	f	I	d	lookCountdown
	m	(Latl;)V	<init>	<init>
		p	1	golem	golem
c	apy	net/minecraft/entity/ai/goal/LongDoorInteractGoal
	f	Z	a	delayedClose
	f	I	b	ticksLeft
	m	(Lala;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	delayedClose	delayedClose
c	apz	net/minecraft/entity/ai/goal/EscapeDangerGoal
	f	Lalg;	a	mob
	f	D	b	speed
	f	D	c	targetX
	f	D	d	targetY
	f	D	e	targetZ
	m	(Lalg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	(Lbjg;Lakq;II)Lfk;	a	locateClosestWater
		p	1	blockView	blockView
		p	2	entity	entity
		p	3	rangeX	rangeX
		p	4	rangeY	rangeY
	m	()Z	g	findTarget
c	aq	net/minecraft/advancement/criterion/CuredZombieVillagerCriterion
	f	Lsm;	a	ID
	m	(Lxe;Laxp;Laxw;)V	a	trigger
		p	1	player	player
		p	2	zombie	zombie
		p	3	villager	villager
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Laq$a;	b	conditionsFromJson
c	aq$a	net/minecraft/advancement/criterion/CuredZombieVillagerCriterion$Conditions
	f	Lbb;	a	zombie
	f	Lbb;	b	villager
	m	(Lbb;Lbb;)V	<init>	<init>
		p	1	zombie	zombie
		p	2	villager	villager
	m	(Lxe;Laxp;Laxw;)Z	a	matches
		p	1	player	player
		p	2	zombie	zombie
		p	3	villager	villager
	m	()Laq$a;	c	any
c	aqa	net/minecraft/entity/ai/goal/MoveToRaidCenterGoal
	f	Lazo;	a	actor
	m	(Lazo;)V	<init>	<init>
		p	1	actor	actor
	m	(Lazn;)V	a	includeFreeRaiders
		p	1	raid	raid
c	aqc	net/minecraft/entity/ai/goal/LookAroundGoal
	f	Lala;	a	mob
	f	D	b	deltaX
	f	D	c	deltaZ
	f	I	d	lookTime
	m	(Lala;)V	<init>	<init>
		p	1	mob	mob
c	aqd	net/minecraft/entity/ai/goal/WanderAroundGoal
	f	Lalg;	a	mob
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	speed
	f	I	f	chance
	f	Z	g	ignoringChance
	m	(Lalg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	(Lalg;DI)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	chance	chance
	m	(I)V	a	setChance
		p	1	chance	chance
	m	()Lcvl;	g	getWanderTarget
	m	()V	h	ignoreChanceOnce
c	aqe	net/minecraft/entity/ai/goal/SwimAroundGoal
c	aqf	net/minecraft/entity/ai/goal/ProjectileAttackGoal
	f	Lala;	a	mob
	f	Laxb;	b	owner
	f	Lakz;	c	target
	f	I	d	updateCountdownTicks
	f	D	e	mobSpeed
	f	I	f	seenTargetTicks
	f	I	g	minIntervalTicks
	f	I	h	maxIntervalTicks
	f	F	i	maxShootRange
	f	F	j	squaredMaxShootRange
	m	(Laxb;DIIF)V	<init>	<init>
		p	1	mob	mob
		p	2	mobSpeed	mobSpeed
		p	4	minIntervalTicks	minIntervalTicks
		p	5	maxIntervalTicks	maxIntervalTicks
		p	6	maxShootRange	maxShootRange
	m	(Laxb;DIF)V	<init>	<init>
		p	1	mob	mob
		p	2	mobSpeed	mobSpeed
		p	4	intervalTicks	intervalTicks
		p	5	maxShootRange	maxShootRange
c	aqg	net/minecraft/entity/ai/goal/BowAttackGoal
	f	Laww;	a	actor
	f	D	b	speed
	f	I	c	attackInterval
	f	F	d	squaredRange
	f	I	e	cooldown
	f	I	f	targetSeeingTicker
	f	Z	g	movingToLeft
	f	Z	h	backward
	f	I	i	combatTicks
	m	(Laww;DIF)V	<init>	<init>
		p	1	actor	actor
		p	2	speed	speed
		p	4	attackInterval	attackInterval
		p	5	range	range
	m	(I)V	a	setAttackInterval
		p	1	attackInterval	attackInterval
	m	()Z	g	isHoldingBow
c	aqh	net/minecraft/entity/ai/goal/CrossbowAttackGoal
	f	Laww;	a	actor
	f	Laqh$a;	b	stage
	f	D	c	speed
	f	F	d	squaredRange
	f	I	e	seeingTargetTicker
	f	I	f	chargedTicksLeft
	m	(Laww;DF)V	<init>	<init>
		p	1	actor	actor
		p	2	speed	speed
		p	4	range	range
	m	()Z	g	isEntityHoldingCrossbow
	m	()Z	h	hasAliveTarget
	m	()Z	j	isUncharged
c	aqh$a	net/minecraft/entity/ai/goal/CrossbowAttackGoal$Stage
c	aqi	net/minecraft/entity/ai/goal/StepAndDestroyBlockGoal
	f	Lbph;	g	targetBlock
	f	Lala;	h	stepAndDestroyMob
	f	I	i	counter
	m	(Lbph;Lalg;DI)V	<init>	<init>
		p	1	targetBlock	targetBlock
		p	2	mob	mob
		p	3	speed	speed
		p	5	maxYDifference	maxYDifference
	m	(Lbjw;Lfk;)V	a	onDestroyBlock
		p	1	world	world
		p	2	pos	pos
	m	(Lfk;Lbjg;)Lfk;	a	tweakToProperPos
		p	1	pos	pos
		p	2	view	view
	m	(Lbjx;Lfk;)V	a	tickStepping
		p	1	world	world
		p	2	pos	pos
	m	()Z	m	hasAvailableTarget
c	aqj	net/minecraft/entity/ai/goal/AvoidSunlightGoal
	f	Lalg;	a	mob
	m	(Lalg;)V	<init>	<init>
		p	1	mob	mob
c	aqk	net/minecraft/entity/ai/goal/HorseBondWithPlayerGoal
	f	Laue;	a	horse
	f	D	b	speed
	f	D	c	targetX
	f	D	d	targetY
	f	D	e	targetZ
	m	(Laue;D)V	<init>	<init>
		p	1	horse	horse
		p	2	speed	speed
c	aql	net/minecraft/entity/ai/goal/SitGoal
	f	Lalo;	a	tameable
	f	Z	b	enabledWithOwner
	m	(Lalo;)V	<init>	<init>
		p	1	tameable	tameable
	m	(Z)V	a	setEnabledWithOwner
		p	1	enabledWithOwner	enabledWithOwner
c	aqm	net/minecraft/entity/ai/goal/GoToVillageGoal
	f	Lalg;	a	mob
	f	I	b	searchRange
	f	Lfk;	c	targetPosition
	m	(Lalg;I)V	<init>	<init>
		p	1	mob	mob
		p	2	searchRange	searchRange
	m	()V	g	findOtherWaypoint
c	aqn	net/minecraft/entity/ai/goal/CreeperIgniteGoal
	f	Lawi;	a	creeper
	f	Lakz;	b	target
	m	(Lawi;)V	<init>	<init>
		p	1	creeper	creeper
c	aqp	net/minecraft/entity/ai/goal/TemptGoal
	f	Lalg;	a	mob
	f	Layj;	b	closestPlayer
	f	Lask;	c	TEMPTING_ENTITY_PREDICATE
	f	D	d	speed
	f	D	e	lastPlayerX
	f	D	f	lastPlayerY
	f	D	g	lastPlayerZ
	f	D	h	lastPlayerPitch
	f	D	i	lastPlayerYaw
	f	I	j	cooldown
	f	Z	k	active
	f	Lbgt;	l	food
	f	Z	m	canBeScared
	m	(Lalg;DLbgt;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	food	food
		p	5	canBeScared	canBeScared
	m	(Lalg;DZLbgt;)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	canBeScared	canBeScared
		p	5	food	food
	m	(Lben;)Z	a	isTempedBy
		p	1	stack	stack
	m	()Z	g	canBeScared
	m	()Z	h	isActive
c	aqq	net/minecraft/entity/ai/goal/StopFollowingCustomerGoal
	f	Laxs;	a	trader
	m	(Laxs;)V	<init>	<init>
		p	1	trader	trader
c	aqr	net/minecraft/entity/ai/goal/MoveIntoWaterGoal
	f	Lalg;	a	mob
	m	(Lalg;)V	<init>	<init>
		p	1	mob	mob
c	aqs	net/minecraft/entity/ai/goal/HoldInHandsGoal
	f	Lala;	a	actor
	f	Lben;	b	item
	f	Ljava/util/function/Predicate;	c	condition
	f	Laah;	d	sound
	m	(Lala;Lben;Laah;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	actor	actor
		p	2	item	item
		p	3	sound	sound
		p	4	condition	condition
c	aqt	net/minecraft/entity/ai/goal/FlyOntoTreeGoal
	m	()Lcvl;	j	getTreeTarget
c	aqu	net/minecraft/entity/ai/goal/WanderAroundFarGoal
	f	F	h	probability
	m	(Lalg;DF)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
		p	4	probabiliity	probabiliity
c	aqv	net/minecraft/entity/ai/goal/WeightedGoal
	f	Lapg;	a	goal
	f	I	b	weight
	f	Z	c	running
	m	(ILapg;)V	<init>	<init>
		p	1	weight	weight
		p	2	goal	goal
	m	(Laqv;)Z	a	canBeReplacedBy
		p	1	goal	goal
	m	()Z	g	isRunning
	m	()I	h	getWeight
	m	()Lapg;	j	getGoal
c	aqw	net/minecraft/entity/ai/goal/ZombieAttackGoal
	f	Laxp;	d	zombie
	f	I	e	ticks
	m	(Laxp;DZ)V	<init>	<init>
		p	1	zombie	zombie
		p	2	speed	speed
		p	4	pauseWhenMobIdle	pauseWhenMobIdle
c	aqy	net/minecraft/entity/ai/goal/TrackIronGolemTargetGoal
	f	Latl;	a	golem
	f	Lakz;	b	target
	f	Lask;	c	targetPredicate
	m	(Latl;)V	<init>	<init>
		p	1	golem	golem
c	aqz	net/minecraft/entity/ai/goal/RevengeGoal
	f	Lask;	a	VALID_AVOIDABLES_PREDICATE
	f	Z	b	groupRevenge
	f	I	c	lastAttackedTime
	f	[Ljava/lang/Class;	d	noRevengeTypes
	f	[Ljava/lang/Class;	i	noHelpTypes
	m	(Lalg;[Ljava/lang/Class;)V	<init>	<init>
		p	1	mob	mob
		p	2	noRevengeTypes	noRevengeTypes
	m	([Ljava/lang/Class;)Laqz;	a	setGroupRevenge
		p	1	noHelpTypes	noHelpTypes
	m	(Lala;Lakz;)V	a	setMobEntityTarget
		p	1	mob	mob
		p	2	target	target
	m	()V	g	callSameTypeForRevenge
c	ar	net/minecraft/predicate/DamagePredicate
	f	Lar;	a	ANY
	f	Lbr$c;	b	dealt
	f	Lbr$c;	c	taken
	f	Lbb;	d	sourceEntity
	f	Ljava/lang/Boolean;	e	blocked
	f	Las;	f	type
	m	(Lbr$c;Lbr$c;Lbb;Ljava/lang/Boolean;Las;)V	<init>	<init>
		p	1	dealt	dealt
		p	2	taken	taken
		p	3	sourceEntity	sourceEntity
		p	4	blocked	blocked
		p	5	type	type
	m	(Lxe;Lajz;FFZ)Z	a	test
		p	1	player	player
		p	2	source	source
		p	3	dealt	dealt
		p	4	taken	taken
		p	5	blocked	blocked
	m	(Lcom/google/gson/JsonElement;)Lar;	a	deserialize
	m	()Lcom/google/gson/JsonElement;	a	serialize
c	ar$a	net/minecraft/predicate/DamagePredicate$Builder
	f	Lbr$c;	a	dealt
	f	Lbr$c;	b	taken
	f	Lbb;	c	sourceEntity
	f	Ljava/lang/Boolean;	d	blocked
	f	Las;	e	type
	m	(Las$a;)Lar$a;	a	type
	m	()Lar$a;	a	create
	m	(Ljava/lang/Boolean;)Lar$a;	a	blocked
		p	1	blocked	blocked
	m	()Lar;	b	build
c	ara	net/minecraft/entity/ai/goal/FollowTargetGoal
	f	Ljava/lang/Class;	a	targetClass
	f	I	b	reciprocalChance
	f	Lakz;	c	targetEntity
	f	Lask;	d	targetPredicate
	m	(Lala;Ljava/lang/Class;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	targetClass	targetClass
		p	3	checkVisibility	checkVisibility
	m	(Lala;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	mob	mob
		p	2	targetClass	targetClass
		p	3	reciprocalChance	reciprocalChance
		p	4	checkVisibility	checkVisibility
		p	5	checkCanNavigate	checkCanNavigate
		p	6	targetPredicate	targetPredicate
	m	(Lala;Ljava/lang/Class;ZZ)V	<init>	<init>
		p	1	mob	mob
		p	2	targetClass	targetClass
		p	3	checkVisibility	checkVisibility
		p	4	checkCanNavigate	checkCanNavigate
	m	(D)Lcvf;	a	getSearchBox
		p	1	distance	distance
	m	()V	g	findClosestTarget
c	arb	net/minecraft/entity/ai/goal/DisableableFollowTargetGoal
	f	Z	i	enabled
	m	(Lazo;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	actor	actor
		p	2	targetEntityClass	targetEntityClass
		p	3	reciprocalChance	reciprocalChance
		p	4	checkVisibility	checkVisibility
		p	5	checkCanNavigate	checkCanNavigate
		p	6	targetPredicate	targetPredicate
	m	(Z)V	a	setEnabled
		p	1	enabled	enabled
c	arc	net/minecraft/entity/ai/goal/RaidGoal
	f	I	i	cooldown
	m	(Lazo;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	raider	raider
		p	2	targetEntityClass	targetEntityClass
		p	3	checkVisibility	checkVisibility
		p	4	tragetPredicate	tragetPredicate
	m	()I	h	getCooldown
	m	()V	j	decreaseCooldown
c	ard	net/minecraft/entity/ai/goal/FollowTargetIfTamedGoal
	f	Lalo;	i	tameable
	m	(Lalo;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1	tameable	tameable
		p	2	targetClass	targetClass
		p	3	checkVisibility	checkVisibility
		p	4	targetPredicate	targetPredicate
c	are	net/minecraft/entity/ai/goal/TrackOwnerAttackerGoal
	f	Lalo;	a	tameable
	f	Lakz;	b	attacker
	f	I	c	lastAttackedTime
	m	(Lalo;)V	<init>	<init>
		p	1	tameable	tameable
c	arf	net/minecraft/entity/ai/goal/AttackWithOwnerGoal
	f	Lalo;	a	tameable
	f	Lakz;	b	attacking
	f	I	c	lastAttackTime
	m	(Lalo;)V	<init>	<init>
		p	1	tameable	tameable
c	arg	net/minecraft/entity/ai/goal/TrackTargetGoal
	f	Z	a	checkCanNavigate
	f	I	b	canNavigateFlag
	f	I	c	checkCanNavigateCooldown
	f	I	d	timeWithoutVisibility
	f	Lala;	e	mob
	f	Z	f	checkVisibility
	f	Lakz;	g	target
	f	I	h	maxTimeWithoutVisibility
	m	(Lala;Z)V	<init>	<init>
		p	1	mob	mob
		p	2	checkVisibility	checkVisibility
	m	(Lala;ZZ)V	<init>	<init>
		p	1	mob	mob
		p	2	checkVisibility	checkVisibility
		p	3	checkNavigable	checkNavigable
	m	(Lakz;)Z	a	canNavigateToEntity
		p	1	entity	entity
	m	(Lakz;Lask;)Z	a	canTrack
		p	1	target	target
		p	2	targetPredicate	targetPredicate
	m	(I)Larg;	a	setMaxTimeWithoutVisibility
		p	1	time	time
	m	()D	k	getFollowRange
c	ari	net/minecraft/village/VillagerGossips
	f	Ljava/util/Map;	a	entityReputation
	m	(Lari;Ljava/util/Random;I)V	a	shareGossipFrom
		p	1	from	from
		p	3	count	count
	m	(Lcom/mojang/datafixers/Dynamic;)V	a	deserialize
	m	(Ljava/util/UUID;Larj;I)V	a	startGossip
		p	1	target	target
		p	2	type	type
		p	3	value	value
	m	(Ljava/util/Random;I)Ljava/util/Collection;	a	pickGossips
		p	2	count	count
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	1	ops	ops
	m	(Ljava/util/UUID;)Lari$a;	a	getReputationFor
		p	1	target	target
	m	(II)I	a	max
		p	0	left	left
		p	1	right	right
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputationFor
		p	1	target	target
		p	2	gossipTypeFilter	gossipTypeFilter
	m	(Larj;II)I	a	mergeReputation
		p	1	type	type
		p	2	left	left
		p	3	right	right
	m	()V	b	decay
	m	()Ljava/util/stream/Stream;	c	entries
c	ari$a	net/minecraft/village/VillagerGossips$Reputation
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	associatedGossip
	m	()V	a	decay
	m	(Ljava/util/function/Predicate;)I	a	getValueFor
		p	1	gossipTypeFilter	gossipTypeFilter
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	entriesFor
		p	1	target	target
	m	(Larj;)V	a	clamp
		p	1	gossipType	gossipType
	m	()Z	b	isObsolete
	m	(Larj;)V	b	remove
		p	1	gossipType	gossipType
c	ari$b	net/minecraft/village/VillagerGossips$GossipEntry
	f	Ljava/util/UUID;	a	target
	f	Larj;	b	type
	f	I	c	value
	m	(Ljava/util/UUID;Larj;I)V	<init>	<init>
		p	1	target	target
		p	2	type	type
		p	3	value	value
	m	()I	a	getValue
	m	(Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional;	a	deserialize
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	1	ops	ops
c	arj	net/minecraft/village/VillageGossipType
	f	Ljava/lang/String;	f	key
	f	I	g	multiplier
	f	I	h	maxValue
	f	I	i	decay
	f	I	j	shareDecrement
	f	Ljava/util/Map;	k	BY_KEY
	m	(Ljava/lang/String;ILjava/lang/String;IIII)V	<init>	<init>
		p	3	key	key
		p	4	multiplier	multiplier
		p	5	maxReputation	maxReputation
		p	6	decay	decay
		p	7	shareDecrement	shareDecrement
	m	(Ljava/lang/String;)Larj;	a	byKey
		p	0	key	key
c	arl	net/minecraft/entity/ai/brain/MemoryModuleType
	f	Ljava/util/Optional;	C	factory
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1	factory	factory
	m	(Ljava/lang/String;)Larl;	a	register
		p	0	id	id
	m	()Ljava/util/Optional;	a	getFactory
	m	(Ljava/lang/String;Ljava/util/Optional;)Larl;	a	register
		p	0	id	id
		p	1	factory	factory
c	arm	net/minecraft/entity/ai/brain/MemoryModuleState
c	arn	net/minecraft/entity/ai/brain/WalkTarget
	f	Lamz;	a	lookTarget
	f	F	b	speed
	f	I	c	completionRange
	m	(Lfk;FI)V	<init>	<init>
		p	1	pos	pos
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	(Lamz;FI)V	<init>	<init>
		p	1	lookTarget	lookTarget
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	(Lcvl;FI)V	<init>	<init>
		p	1	pos	pos
		p	2	speed	speed
		p	3	completionRange	completionRange
	m	()Lamz;	a	getLookTarget
	m	()F	b	getSpeed
	m	()I	c	getCompletionRange
c	arp	net/minecraft/entity/ai/pathing/BirdNavigation
	m	(Z)V	a	setCanPathThroughDoors
		p	1	canPathThroughDoors	canPathThroughDoors
	m	(Z)V	b	setCanEnterOpenDoors
		p	1	canEnterOpenDoors	canEnterOpenDoors
c	arq	net/minecraft/entity/ai/pathing/MobNavigation
	f	Z	p	avoidSunlight
	m	(Lala;Lbjw;)V	<init>	<init>
		p	1	entity	entity
	m	(Z)V	a	setCanPathThroughDoors
	m	(Z)V	c	setAvoidSunlight
		p	1	avoidSunlight	avoidSunlight
	m	()Z	f	canEnterOpenDoors
c	arr	net/minecraft/entity/ai/pathing/EntityNavigation
	f	Lala;	a	entity
	f	Lbjw;	b	world
	f	Lcqq;	c	currentPath
	f	D	d	speed
	f	I	e	tickCount
	f	F	l	nodeReachProximity
		c	If the Chebyshev distance from the entity to the next node is less than\nor equal to this value, the entity is considered "reached" the node.
	f	Z	m	shouldRecalculate
	f	J	n	lastRecalculateTime
	f	Lcqp;	o	nodeMaker
	f	Lalr;	p	followRange
	f	Lfk;	q	currentTarget
	f	I	r	currentDistance
	f	F	s	rangeMultiplier
	f	Lcqs;	t	pathNodeNavigator
	m	()Z	a	isAtValidPosition
	m	(DDDD)Z	a	startMovingTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	speed	speed
	m	(DDDI)Lcqq;	a	findPathTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	distance	distance
	m	(Lakq;I)Lcqq;	a	findPathTo
		p	1	entity	entity
		p	2	distance	distance
	m	(I)Lcqs;	a	createPathNodeNavigator
	m	(Lcqq;D)Z	a	startMovingAlong
		p	1	path	path
		p	2	speed	speed
	m	(Lcvl;Lcvl;III)Z	a	canPathDirectlyThrough
		p	1	origin	origin
		p	2	target	target
		p	3	sizeX	sizeX
		p	4	sizeY	sizeY
		p	5	sizeZ	sizeZ
	m	(Lfk;)Z	a	isValidPosition
		p	1	pos	pos
	m	(D)V	a	setSpeed
		p	1	speed	speed
	m	(Lakq;D)Z	a	startMovingTo
		p	1	entity	entity
		p	2	speed	speed
	m	(Lfk;I)Lcqq;	a	findPathTo
		p	1	target	target
		p	2	distance	distance
	m	(Ljava/util/stream/Stream;I)Lcqq;	a	findPathToAny
		p	1	positions	positions
		p	2	distance	distance
	m	(F)V	a	setRangeMultiplier
		p	1	rangeMultiplier	rangeMultiplier
	m	(Ljava/util/Set;IZI)Lcqq;	a	findPathToAny
		p	1	positions	positions
		p	2	range	range
		p	4	distance	distance
	m	()Lcvl;	b	getPos
	m	()V	c	tick
	m	(Z)V	d	setCanSwim
		p	1	canSwim	canSwim
	m	()V	g	resetRangeMultiplier
	m	()Lfk;	h	getTargetPos
	m	()Z	i	shouldRecalculatePath
	m	()V	j	recalculatePath
	m	()Lcqq;	k	getCurrentPath
	m	()Z	m	isIdle
	m	()V	o	stop
	m	()Z	p	isInLiquid
	m	()Lcqp;	q	getNodeMaker
	m	()Z	r	canSwim
c	ars	net/minecraft/entity/ai/pathing/SpiderNavigation
	m	(Lala;Lbjw;)V	<init>	<init>
		p	1	entity	entity
c	art	net/minecraft/entity/ai/pathing/SwimNavigation
	m	(Lala;Lbjw;)V	<init>	<init>
		p	1	entity	entity
c	arw	net/minecraft/entity/ai/brain/sensor/DummySensor
c	arx	net/minecraft/entity/ai/brain/sensor/GolemLastSeenSensor
	m	(JLakz;)V	a	senseIronGolem
		p	0	time	time
		p	2	entity	entity
c	ary	net/minecraft/entity/ai/brain/sensor/HurtBySensor
c	arz	net/minecraft/entity/ai/brain/sensor/InteractableDoorsSensor
c	as	net/minecraft/predicate/entity/DamageSourcePredicate
	f	Las;	a	EMPTY
	f	Ljava/lang/Boolean;	b	isProjectile
	f	Ljava/lang/Boolean;	c	isExplosion
	f	Ljava/lang/Boolean;	d	bypassesArmor
	f	Ljava/lang/Boolean;	e	bypassesInvulnerability
	f	Ljava/lang/Boolean;	f	bypassesMagic
	f	Ljava/lang/Boolean;	g	isFire
	f	Ljava/lang/Boolean;	h	isMagic
	f	Ljava/lang/Boolean;	i	isLightning
	f	Lbb;	j	directEntity
	f	Lbb;	k	sourceEntity
	m	(Lxe;Lajz;)Z	a	test
		p	1	player	player
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getBoolean
		p	0	obj	obj
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;)Las;	a	deserialize
		p	0	element	element
	m	(Lxd;Lcvl;Lajz;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	addProperty
		p	1	json	json
		p	2	key	key
c	as$a	net/minecraft/predicate/entity/DamageSourcePredicate$Builder
	f	Ljava/lang/Boolean;	a	isProjectile
	f	Ljava/lang/Boolean;	b	isExplosion
	f	Ljava/lang/Boolean;	c	bypassesArmor
	f	Ljava/lang/Boolean;	d	bypassesInvulnerability
	f	Ljava/lang/Boolean;	e	bypassesMagic
	f	Ljava/lang/Boolean;	f	isFire
	f	Ljava/lang/Boolean;	g	isMagic
	f	Ljava/lang/Boolean;	h	isLightning
	f	Lbb;	i	directEntity
	f	Lbb;	j	sourceEntity
	m	(Ljava/lang/Boolean;)Las$a;	a	projectile
	m	(Lbb$a;)Las$a;	a	directEntity
	m	()Las$a;	a	create
	m	()Las;	b	build
	m	(Ljava/lang/Boolean;)Las$a;	h	lightning
c	asa	net/minecraft/entity/ai/brain/sensor/NearestBedSensor
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	a	positionToExpiryTime
	f	I	b	tries
	f	J	c	expiryTime
	m	(Lxd;Lala;)V	a	sense
c	asb	net/minecraft/entity/ai/brain/sensor/NearestLivingEntitiesSensor
	f	Lask;	a	CLOSE_ENTITY_PREDICATE
c	asc	net/minecraft/entity/ai/brain/sensor/NearestPlayersSensor
c	asd	net/minecraft/entity/ai/brain/sensor/SecondaryPointsOfInterestSensor
	m	(Lxd;Laxw;)V	a	sense
c	ase	net/minecraft/entity/mob/MobVisibilityCache
	f	Lala;	a	owner
	f	Ljava/util/List;	b	visibleEntities
	f	Ljava/util/List;	c	invisibleEntities
	m	(Lala;)V	<init>	<init>
		p	1	owner	owner
	m	()V	a	clear
	m	(Lakq;)Z	a	canSee
		p	1	entity	entity
c	asf	net/minecraft/entity/ai/brain/sensor/Sensor
	f	Ljava/util/Random;	a	RANDOM
	f	I	b	senseInterval
	f	J	c	lastSenseTime
	m	(I)V	<init>	<init>
		p	1	senseInterval	senseInterval
	m	()Ljava/util/Set;	a	getOutputMemoryModules
	m	(Lxd;Lakz;)V	a	sense
		p	1	world	world
		p	2	entity	entity
	m	(Lxd;Lakz;)V	b	canSense
		p	2	entity	entity
c	asg	net/minecraft/entity/ai/brain/sensor/SensorType
	f	Ljava/util/function/Supplier;	k	factory
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lasg;	a	register
		p	0	id	id
	m	()Lasf;	a	create
c	ash	net/minecraft/entity/ai/brain/sensor/VillagerBabiesSensor
	m	(Lakz;)Ljava/util/List;	a	getVisibleVillagerBabies
		p	1	entities	entities
	m	(Lakz;)Z	b	isVillagerBaby
		p	1	entity	entity
	m	(Lakz;)Ljava/util/List;	c	getVisibleMobs
		p	1	entity	entity
c	asi	net/minecraft/entity/ai/brain/sensor/VillagerHostilesSensor
	f	Lcom/google/common/collect/ImmutableMap;	a	SQUARED_DISTANCES_FOR_DANGER
	m	(Lakz;Lakz;)Z	a	isCloseEnoughForDanger
		p	1	entity	entity
		p	2	hostile	hostile
	m	(Lakz;Lakz;Lakz;)I	a	compareDistances
		p	1	entity	entity
		p	2	hostile1	hostile1
		p	3	hostile2	hostile2
	m	(Lakz;)Ljava/util/Optional;	a	getNearestHostile
		p	1	entity	entity
	m	(Lakz;)Ljava/util/Optional;	b	getVisibleMobs
		p	1	entity	entity
	m	(Lakz;)Z	c	isHostile
		p	1	entity	entity
c	ask	net/minecraft/entity/ai/TargetPredicate
	f	Lask;	a	DEFAULT
	f	D	b	baseMaxDistance
	f	Z	c	includeInvulnerable
	f	Z	d	includeTeammates
	f	Z	e	includeHidden
	f	Z	f	ignoreEntityTargetRules
	f	Z	g	useDistanceScalingFactor
	f	Ljava/util/function/Predicate;	h	predicate
	m	(Lakz;Lakz;)Z	a	test
		p	1	baseEntity	baseEntity
		p	2	targetEntity	targetEntity
	m	(Ljava/util/function/Predicate;)Lask;	a	setPredicate
		p	1	predicate	predicate
	m	()Lask;	a	includeInvulnerable
	m	(D)Lask;	a	setBaseMaxDistance
		p	1	baseMaxDistance	baseMaxDistance
	m	()Lask;	b	includeTeammates
	m	()Lask;	c	includeHidden
	m	()Lask;	d	ignoreEntityTargetRules
	m	()Lask;	e	ignoreDistanceScalingFactor
c	asm	net/minecraft/entity/ai/TargetFinder
	m	(Lalg;IILcvl;)Lcvl;	a	findTargetTowards
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
	m	(Lalg;II)Lcvl;	a	findTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
	m	(Lalg;IIILcvl;D)Lcvl;	a	findGroundTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	preferredAngle	preferredAngle
		p	5	maxAngleDifference	maxAngleDifference
	m	(Lfk;IILjava/util/function/Predicate;)Lfk;	a	findValidPositionAbove
		p	0	pos	pos
		p	1	minDistanceAboveIllegal	minDistanceAboveIllegal
		p	2	maxOffset	maxOffset
		p	3	isIllegalPredicate	isIllegalPredicate
	m	(Ljava/util/Random;IIILcvl;D)Lfk;	a	getRandomOffset
		p	0	random	random
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	preferredAngle	preferredAngle
		p	5	maxAngleDifference	maxAngleDifference
	m	(Lalg;IILcvl;D)Lcvl;	a	findTargetTowards
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
		p	4	maxAngleDifference	maxAngleDifference
	m	(Lalg;IILcvl;FII)Lcvl;	a	findAirTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredAngle	preferredAngle
		p	4	maxAngleDifference	maxAngleDifference
		p	5	distanceAboveGroundRange	distanceAboveGroundRange
		p	6	minDistanceAboveGround	minDistanceAboveGround
	m	(Lalg;IIILcvl;ZDLjava/util/function/ToDoubleFunction;ZIIZ)Lcvl;	a	findTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	preferredAngle	preferredAngle
		p	5	notInWater	notInWater
		p	6	maxAngleDifference	maxAngleDifference
		p	8	favorProvider	favorProvider
		p	9	aboveGround	aboveGround
		p	10	distanceAboveGroundRange	distanceAboveGroundRange
		p	11	minDistanceAboveGround	minDistanceAboveGround
		p	12	validPositionsOnly	validPositionsOnly
	m	(Lalg;IILjava/util/function/ToDoubleFunction;)Lcvl;	a	findGroundTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pathfindingFavor	pathfindingFavor
	m	(Lalg;IIILcvl;D)Lcvl;	b	findGroundTargetTowards
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	preferredYDifference	preferredYDifference
		p	4	pos	pos
		p	5	maxAngleDifference	maxAngleDifference
	m	(Lalg;IILcvl;)Lcvl;	b	findTargetAwayFrom
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
	m	(Lalg;II)Lcvl;	b	findGroundTarget
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
	m	(Lalg;IILcvl;)Lcvl;	c	findGroundTargetAwayFrom
		p	0	mob	mob
		p	1	maxHorizontalDistance	maxHorizontalDistance
		p	2	maxVerticalDistance	maxVerticalDistance
		p	3	pos	pos
c	aso	net/minecraft/entity/EntityInteraction
	m	(Ljava/lang/String;)Laso;	a	create
		p	0	key	key
c	asp	net/minecraft/village/ZombieSiegeManager
	f	Z	a	spawned
	f	Lasp$a;	b	state
	f	I	c	remaining
	f	I	d	countdown
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	m	(Lxd;Lfk;)Lcvl;	a	getSpawnVector
		p	1	world	world
		p	2	pos	pos
	m	(Lxd;ZZ)I	a	spawn
		p	1	world	world
		p	2	spawnMonsters	spawnMonsters
		p	3	spawnAnimals	spawnAnimals
	m	(Lxd;)Z	a	spawn
		p	1	world	world
	m	(Lxd;)V	b	trySpawnZombie
		p	1	world	world
c	asp$a	net/minecraft/village/ZombieSiegeManager$State
c	asr	net/minecraft/world/poi/PointOfInterestStorage
	f	Lasr$a;	a	pointOfInterestDistanceTracker
	m	(Ljava/util/function/Predicate;Lbjh;Lasr$b;)Ljava/util/stream/Stream;	a	get
		p	1	typePredicate	typePredicate
		p	2	pos	pos
		p	3	occupationStatus	occupationStatus
	m	(Ljava/util/function/Predicate;Lfk;ILasr$b;)J	a	count
		p	1	typePredicate	typePredicate
		p	2	pos	pos
		p	3	radius	radius
		p	4	occupationStatus	occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfk;I)Ljava/util/Optional;	a	getPosition
		p	1	typePredicate	typePredicate
		p	2	positionPredicate	positionPredicate
		p	3	pos	pos
		p	4	radius	radius
	m	(Lcam;Lgd;Ljava/util/function/BiConsumer;)V	a	scanAndPopulate
	m	(Lfk;Ljava/util/function/Predicate;)Z	a	test
		p	1	pos	pos
		p	2	predicate	predicate
	m	(Lgd;)I	a	getDistanceFromNearestOccupied
		p	1	pos	pos
	m	(Ljava/util/function/Predicate;JLasr$b;)Ljava/util/stream/Stream;	a	get
		p	1	typePredicate	typePredicate
		p	2	pos	pos
		p	4	occupationStatus	occupationStatus
	m	(Lfk;Lasu;)V	a	add
		p	1	pos	pos
		p	2	type	type
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lasr$b;Lfk;ILjava/util/Random;)Ljava/util/Optional;	a	getPosition
		p	1	typePredicate	typePredicate
		p	2	positionPredicate	positionPredicate
		p	3	occupationStatus	occupationStatus
		p	4	pos	pos
		p	5	radius	radius
		p	6	random	random
	m	(Lfk;)V	a	remove
		p	1	pos	pos
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfk;ILasr$b;)Ljava/util/stream/Stream;	a	getPositions
		p	1	typePredicate	typePredicate
		p	2	posPredicate	posPredicate
		p	3	pos	pos
		p	4	radius	radius
		p	5	occupationStatus	occupationStatus
	m	(Lcam;)Z	a	shouldScan
	m	(Lbjh;Lcam;)V	a	initForPalette
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfk;ILasr$b;)Ljava/util/Optional;	b	getPosition
		p	1	typePredicate	typePredicate
		p	2	posPredicate	posPredicate
		p	3	pos	pos
		p	4	radius	radius
		p	5	occupationStatus	occupationStatus
	m	(Lfk;)Z	b	releaseTicket
		p	1	pos	pos
	m	(Lfk;)Ljava/util/Optional;	c	getType
		p	1	pos	pos
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lfk;ILasr$b;)Ljava/util/Optional;	c	getNearestPosition
		p	1	typePredicate	typePredicate
		p	2	blockPosPredicate	blockPosPredicate
		p	3	pos	pos
		p	4	radius	radius
		p	5	occupationStatus	occupationStatus
	m	(Ljava/util/function/Predicate;Lfk;ILasr$b;)Ljava/util/stream/Stream;	c	get
		p	1	typePredicate	typePredicate
		p	2	pos	pos
		p	3	radius	radius
		p	4	occupationStatus	occupationStatus
	m	(J)Z	f	isOccupied
c	asr$a	net/minecraft/world/poi/PointOfInterestStorage$PointOfInterestDistanceTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	distances
	m	()V	a	update
c	asr$b	net/minecraft/world/poi/PointOfInterestStorage$OccupationStatus
	f	Ljava/util/function/Predicate;	d	predicate
	m	()Ljava/util/function/Predicate;	a	getPredicate
c	ass	net/minecraft/world/poi/PointOfInterest
	f	Lfk;	a	pos
	f	Lasu;	b	type
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	updateListener
	m	(Lfk;Lasu;ILjava/lang/Runnable;)V	<init>	<init>
		p	1	pos	pos
		p	2	type	type
		p	3	freeTickets	freeTickets
		p	4	updateListener	updateListener
	m	(Lfk;Lasu;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	pos	pos
		p	2	type	type
		p	3	updateListener	updateListener
	m	(Lcom/mojang/datafixers/Dynamic;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	dynamic	dynamic
		p	2	updateListener	updateListener
	m	()Z	b	reserveTicket
	m	()Z	c	releaseTicket
	m	()Z	d	hasSpace
	m	()Z	e	isOccupied
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
	m	()Lfk;	f	getPos
	m	()Lasu;	g	getType
c	ast	net/minecraft/world/poi/PointOfInterestSet
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	pointsOfInterestByPos
	f	Ljava/util/Map;	c	pointsOfInterestByType
	f	Ljava/lang/Runnable;	d	updateListener
	f	Z	e	valid
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1	updateListener	updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	updateListener	updateListener
	m	(Lfk;Ljava/util/function/Predicate;)Z	a	test
		p	1	pos	pos
		p	2	predicate	predicate
	m	(Lass;)Z	a	add
		p	1	poi	poi
	m	()Z	a	isValid
	m	(Lfk;Lasu;)V	a	add
		p	1	pos	pos
		p	2	type	type
	m	(Ljava/util/function/Predicate;Lasr$b;)Ljava/util/stream/Stream;	a	get
	m	(Lfk;)V	a	remove
		p	1	pos	pos
	m	(Ljava/util/function/Consumer;)V	a	updatePointsOfInterest
	m	()V	b	clear
	m	(Lfk;)Z	c	releaseTicket
		p	1	pos	pos
	m	(Lfk;)Ljava/util/Optional;	d	getType
		p	1	pos	pos
c	asu	net/minecraft/world/poi/PointOfInterestType
	f	I	A	ticketCount
	f	Ljava/util/function/Predicate;	B	completionCondition
	f	I	C	searchDistance
	f	Ljava/util/function/Predicate;	a	ALWAYS_TRUE
	f	Ljava/util/function/Predicate;	v	IS_USED_BY_PROFESSION
	f	Ljava/util/Set;	w	BED_STATES
	f	Ljava/util/Map;	x	BLOCK_STATE_TO_POINT_OF_INTEREST_TYPE
	f	Ljava/lang/String;	y	id
	f	Ljava/util/Set;	z	blockStates
	m	(Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)V	<init>	<init>
		p	1	id	id
		p	2	blockStates	blockStates
		p	3	ticketCount	ticketCount
		p	4	completionCondition	completionCondition
		p	5	searchDistance	searchDistance
	m	(Ljava/lang/String;Ljava/util/Set;II)V	<init>	<init>
		p	1	id	id
		p	2	blockStates	blockStates
		p	3	ticketCount	ticketCount
		p	4	searchDistance	searchDistance
	m	(Lasu;)Lasu;	a	setup
	m	(Ljava/lang/String;Ljava/util/Set;II)Lasu;	a	register
		p	0	id	id
		p	1	workStationStates	workStationStates
		p	2	ticketCount	ticketCount
		p	3	searchDistance	searchDistance
	m	(Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lasu;	a	register
		p	0	id	id
		p	1	workStationStates	workStationStates
		p	2	ticketCount	ticketCount
		p	3	completionCondition	completionCondition
		p	4	searchDistance	searchDistance
	m	(Lbph;)Ljava/util/Set;	a	getAllStatesOf
		p	0	block	block
	m	(Lbyj;)Ljava/util/Optional;	b	from
		p	0	state	state
	m	()I	b	getTicketCount
	m	()Ljava/util/function/Predicate;	c	getCompletionCondition
	m	()I	d	getSearchDistance
	m	()Ljava/util/stream/Stream;	e	getAllAssociatedStates
c	asw	net/minecraft/entity/mob/AmbientEntity
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
c	asx	net/minecraft/entity/passive/BatEntity
	f	Lsb;	b	BAT_FLAGS
	f	Lask;	c	CLOSE_PLAYER_PREDICATE
	f	Lfk;	d	hangingPosition
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	eo	isTodayAroundHalloween
	m	()Z	l	isRoosting
	m	(Z)V	r	setRoosting
c	asz	net/minecraft/entity/passive/FishEntity
	f	Lsb;	b	FROM_BUCKET
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	eq	hasSelfControl
	m	()Laah;	er	getFlopSound
	m	()Z	es	isFromBucket
	m	(Lben;)V	i	copyDataToStack
		p	1	stack	stack
	m	()Lben;	l	getFishBucketItem
	m	(Z)V	r	setFromBucket
c	asz$a	net/minecraft/entity/passive/FishEntity$FishMoveControl
	f	Lasz;	i	fish
	m	(Lasz;)V	<init>	<init>
		p	1	owner	owner
c	asz$b	net/minecraft/entity/passive/FishEntity$SwimToRandomPlaceGoal
	f	Lasz;	h	fish
	m	(Lasz;)V	<init>	<init>
		p	1	fish	fish
c	at	net/minecraft/predicate/entity/DistancePredicate
	f	Lat;	a	ANY
	f	Lbr$c;	b	x
	f	Lbr$c;	c	y
	f	Lbr$c;	d	z
	f	Lbr$c;	e	horizontal
	f	Lbr$c;	f	absolute
	m	(Lbr$c;Lbr$c;Lbr$c;Lbr$c;Lbr$c;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	horizontal	horizontal
	m	(Lbr$c;)Lat;	a	horizontal
		p	0	horizontal	horizontal
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Lat;	a	deserialize
		p	0	el	el
	m	(DDDDDD)Z	a	test
	m	(Lbr$c;)Lat;	b	y
		p	0	y	y
c	ata	net/minecraft/entity/passive/GolemEntity
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
c	atb	net/minecraft/entity/passive/SchoolingFishEntity
	f	Latb;	b	leader
	f	I	c	groupSize
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Latb;)Latb;	a	joinGroupOf
		p	1	groupLeader	groupLeader
	m	(Ljava/util/stream/Stream;)V	a	pullInOtherFish
		p	1	fish	fish
	m	()V	eA	decreaseGroupSize
	m	()I	es	getMaxGroupSize
	m	()Z	et	hasLeader
	m	()V	eu	leaveGroup
	m	()Z	ev	canHaveMoreFishInGroup
	m	()Z	ew	hasOtherFishInGroup
	m	()Z	ex	isCloseEnoughToLeader
	m	()V	ey	moveTowardLeader
	m	()V	ez	increaseGroupSize
c	atb$a	net/minecraft/entity/passive/SchoolingFishEntity$Data
	f	Latb;	a	leader
	m	(Latb;)V	<init>	<init>
		p	1	leader	leader
c	atc	net/minecraft/entity/passive/AnimalEntity
	f	I	bw	loveTicks
	f	Ljava/util/UUID;	bx	lovingPlayer
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Layj;Lben;)V	a	eat
		p	1	player	player
		p	2	stack	stack
	m	(Latc;)Z	a	canBreedWith
		p	1	other	other
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	isValidNaturalSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	ev	canEat
	m	()Lxe;	ew	getLovingPlayer
	m	()Z	ex	isInLove
	m	()V	ey	resetLoveTicks
	m	(Layj;)V	f	lovePlayer
		p	1	player	player
	m	(Lben;)Z	i	isBreedingItem
		p	1	stack	stack
	m	(I)V	s	setLoveTicks
		p	1	loveTicks	loveTicks
c	atd	net/minecraft/entity/passive/BeeEntity
	f	F	bA	lastPitch
	f	I	bB	ticksSinceSting
	f	I	bC	ticksSincePollination
	f	I	bD	cannotEnterHiveTicks
	f	I	bE	cropsGrownSincePollination
	f	I	bF	ticksLeftToFindHive
	f	I	bG	ticksUntilCanPollinate
	f	Lfk;	bH	flowerPos
	f	Lfk;	bI	hivePos
	f	Latd$k;	bJ	pollinateGoal
	f	Latd$e;	bK	moveToHiveGoal
	f	Latd$f;	bL	moveToFlowerGoal
	f	I	bM	ticksInsideWater
	f	Lsb;	bw	multipleByteTracker
	f	Lsb;	bx	anger
	f	Ljava/util/UUID;	by	targetPlayer
	f	F	bz	currentPitch
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
		p	2	world	world
	m	(Lakq;)Z	a	setBeeAttacker
		p	1	attacker	attacker
	m	(Lbjw;DDDDDLgt;)V	a	addParticle
		p	1	world	world
		p	2	lastX	lastX
		p	4	x	x
		p	6	lastZ	lastZ
		p	8	z	z
		p	10	y	y
		p	12	effect	effect
	m	(Lako;)Latd;	b	createChild
	m	(Lfk;I)Z	b	isWithinDistance
		p	1	pos	pos
		p	2	distance	distance
	m	(IZ)V	d	setBeeFlag
		p	1	bit	bit
		p	2	value	value
	m	()Z	eA	hasHive
	m	()Lfk;	eB	getHivePos
	m	()Z	eD	hasNectar
	m	()Z	eE	hasStung
	m	()V	eG	onHoneyDelivered
	m	()Z	eH	failedPollinatingTooLong
	m	()Z	eI	canEnterHive
	m	()V	eJ	updateBodyPitch
	m	()Z	eK	isHiveNearFire
	m	()I	eL	getAnger
	m	()I	eM	getCropsGrownSincePollination
	m	()V	eN	resetCropCounter
	m	()V	eO	addCropCounter
	m	()Z	eP	isHiveValid
	m	()Z	eQ	isNearTarget
	m	()Lfk;	eq	getFlowerPos
	m	()Z	er	hasFlower
	m	()V	eu	resetPollinationTicks
	m	()Z	ez	isAngry
	m	(Lfk;)V	g	setFlowerPos
		p	1	pos	pos
	m	(Lfk;)V	h	startMovingTo
		p	1	pos	pos
	m	(Lfk;)Z	i	doesHiveHaveSpace
		p	1	pos	pos
	m	(Lfk;)Z	j	isTooFar
		p	1	pos	pos
	m	(Lfk;)Z	k	isFlowers
		p	1	pos	pos
	m	(Z)V	r	setHasNectar
		p	1	hasNectar	hasNectar
	m	(Z)V	s	setHasStung
		p	1	hasStung	hasStung
	m	(Z)V	t	setNearTarget
		p	1	nearTarget	nearTarget
	m	(I)V	t	setCannotEnterHiveTicks
		p	1	ticks	ticks
	m	(I)V	u	setAnger
		p	1	ticks	ticks
	m	(F)F	v	getBodyPitch
		p	1	tickDelta	tickDelta
	m	(I)Z	v	getBeeFlag
		p	1	location	location
c	atd$a	net/minecraft/entity/passive/BeeEntity$NotAngryGoal
	m	()Z	canStart	canStart
	m	()Z	g	canBeeStart
	m	()Z	h	canBeeContinue
	m	()Z	shouldContinue	shouldContinue
c	atd$b	net/minecraft/entity/passive/BeeEntity$StingGoal
	m	(Latd;Lalg;DZ)V	<init>	<init>
		p	2	mob	mob
		p	3	speed	speed
c	atd$c	net/minecraft/entity/passive/BeeEntity$BeeFollowTargetGoal
	m	(Latd;)V	<init>	<init>
		p	1	bee	bee
	m	()Z	h	canSting
c	atd$d	net/minecraft/entity/passive/BeeEntity$EnterHiveGoal
c	atd$e	net/minecraft/entity/passive/BeeEntity$MoveToHiveGoal
	f	I	c	ticks
	f	Ljava/util/List;	d	possibleHives
	f	Lcqq;	e	path
	m	(Lfk;)Z	a	startMovingToFar
		p	1	pos	pos
	m	(Lfk;)Z	b	isPossibleHive
		p	1	pos	pos
	m	(Lfk;)V	c	addPossibleHive
		p	1	pos	pos
	m	(Lfk;)Z	d	isCloseEnough
		p	1	pos	pos
	m	()V	j	clearPossibleHives
	m	()V	k	makeChosenHivePossibleHive
	m	()V	l	reset
c	atd$f	net/minecraft/entity/passive/BeeEntity$MoveToFlowerGoal
	f	I	c	ticks
	m	()Z	j	shouldMoveToFlower
c	atd$g	net/minecraft/entity/passive/BeeEntity$GrowCropsGoal
c	atd$h	net/minecraft/entity/passive/BeeEntity$BeeRevengeGoal
	m	(Latd;Latd;)V	<init>	<init>
		p	2	bee	bee
c	atd$i	net/minecraft/entity/passive/BeeEntity$FindHiveGoal
	m	()Ljava/util/List;	j	getNearbyFreeHives
c	atd$j	net/minecraft/entity/passive/BeeEntity$BeeLookControl
	m	(Latd;Lala;)V	<init>	<init>
		p	2	entity	entity
c	atd$k	net/minecraft/entity/passive/BeeEntity$PollinateGoal
	f	Ljava/util/function/Predicate;	c	flowerPredicate
	f	I	d	pollinationTicks
	f	I	e	lastPollinationTick
	f	Z	f	running
	f	Lcvl;	g	nextTarget
	f	I	h	ticks
	m	(Ljava/util/function/Predicate;D)Ljava/util/Optional;	a	findFlower
		p	1	predicate	predicate
		p	2	searchDistance	searchDistance
	m	()Z	j	completedPollination
	m	()Z	k	isRunning
	m	()V	l	cancel
	m	()V	m	moveToNextTarget
	m	()F	n	getRandomOffset
	m	()Ljava/util/Optional;	o	getFlower
c	atd$l	net/minecraft/entity/passive/BeeEntity$BeeWanderAroundGoal
	m	()Lcvl;	g	getRandomLocation
c	ate	net/minecraft/entity/passive/CatEntity
	f	Lbgt;	bA	TAMING_INGREDIENT
	f	Lsb;	bB	CAT_TYPE
	f	Lsb;	bC	SLEEPING_WITH_OWNER
	f	Lsb;	bD	HEAD_DOWN
	f	Lsb;	bE	COLLAR_COLOR
	f	Late$a;	bF	fleeGoal
	f	Laqp;	bG	temptGoal
	f	F	bH	sleepAnimation
	f	F	bI	prevSleepAnimation
	f	F	bJ	tailCurlAnimation
	f	F	bK	prevTailCurlAnimation
	f	F	bL	headDownAnimation
	f	F	bM	prevHeadDownAniamtion
	f	Ljava/util/Map;	bz	TEXTURES
	m	(Lbdj;)V	a	setCollarColor
	m	(Lako;)Late;	b	createChild
	m	()I	eA	getCatType
	m	()Z	eB	isSleepingWithOwner
	m	()Z	eC	isHeadDown
	m	()Lbdj;	eD	getCollarColor
	m	()V	eE	hiss
	m	()V	eG	updateAnimations
	m	()V	eH	updateSleepAnimation
	m	()V	eI	updateHeadDownAnimation
	m	()Lsm;	ez	getTexture
	m	(I)V	t	setCatType
		p	1	type	type
	m	(Z)V	u	setSleepingWithOwner
		p	1	sleeping	sleeping
	m	(Z)V	v	setHeadDown
		p	1	headDown	headDown
	m	(F)F	v	getSleepAnimation
		p	1	tickDelta	tickDelta
	m	(F)F	w	getTailCurlAnimation
		p	1	tickDelta	tickDelta
	m	(F)F	x	getHeadDownAnimation
		p	1	tickDelta	tickDelta
c	ate$a	net/minecraft/entity/passive/CatEntity$CatFleeGoal
	f	Late;	i	cat
	m	(Late;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	cat	cat
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	ate$b	net/minecraft/entity/passive/CatEntity$SleepWithOwnerGoal
	f	Late;	a	cat
	f	Layj;	b	owner
	f	Lfk;	c	bedPos
	f	I	d	ticksOnBed
	m	(Late;)V	<init>	<init>
		p	1	cat	cat
	m	()V	h	dropMorningGifts
c	ate$c	net/minecraft/entity/passive/CatEntity$TemptGoal
	f	Layj;	c	player
	f	Late;	d	cat
	m	(Late;DLbgt;Z)V	<init>	<init>
		p	1	cat	cat
		p	2	speed	speed
		p	4	food	food
		p	5	canBeScared	canBeScared
c	atf	net/minecraft/entity/passive/ChickenEntity
	f	I	bB	eggLayTime
	f	Z	bC	jockey
	f	Lbgt;	bD	BREEDING_INGREDIENT
	m	(Lako;)Latf;	b	createChild
	m	()Z	eq	hasJockey
	m	(Z)V	r	setHasJockey
		p	1	hasJockey	hasJockey
c	atg	net/minecraft/entity/passive/CodEntity
c	ath	net/minecraft/entity/passive/CowEntity
	m	(Lako;)Lath;	b	createChild
c	ati	net/minecraft/entity/passive/DolphinEntity
	f	Ljava/util/function/Predicate;	b	CAN_TAKE
	f	Lsb;	bw	MOISTNESS
	f	Lask;	bx	CLOSE_PLAYER_PREDICATE
	f	Lsb;	c	TREASURE_POS
	f	Lsb;	d	HAS_FISH
	m	(Lgt;)V	a	spawnParticlesAround
		p	1	parameters	parameters
	m	(I)V	b	setMoistness
		p	1	moistness	moistness
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	eq	hasFish
	m	()I	er	getMoistness
	m	()Z	es	isCloseToTarget
	m	(Lfk;)V	g	setTreasurePos
		p	1	treasurePos	treasurePos
	m	()Lfk;	l	getTreasurePos
	m	(Z)V	r	setHasFish
		p	1	hasFish	hasFish
c	ati$a	net/minecraft/entity/passive/DolphinEntity$DolphinMoveControl
	f	Lati;	i	dolphin
c	ati$b	net/minecraft/entity/passive/DolphinEntity$LeadToNearbyTreasureGoal
	f	Lati;	a	dolphin
	m	(Lati;)V	<init>	<init>
		p	1	dolphin	dolphin
c	ati$c	net/minecraft/entity/passive/DolphinEntity$SwimWithPlayerGoal
	f	Lati;	a	dolphin
	f	D	b	speed
	f	Layj;	c	closestPlayer
	m	(Lati;D)V	<init>	<init>
		p	1	dolphin	dolphin
		p	2	speed	speed
c	ati$d	net/minecraft/entity/passive/DolphinEntity$PlayWithItemsGoal
	m	(Lben;)V	a	spitOutItem
		p	1	stack	stack
c	atj	net/minecraft/entity/Flutterer
c	atk	net/minecraft/entity/passive/FoxEntity
	f	Ljava/util/function/Predicate;	bA	PICKABLE_DROP_FILTER
	f	Ljava/util/function/Predicate;	bB	JUST_ATTACKED_SOMETHING_FILTER
	f	Ljava/util/function/Predicate;	bC	CHICKEN_AND_RABBIT_FILTER
	f	Ljava/util/function/Predicate;	bD	NOTICEABLE_PLAYER_FILTER
	f	Lapg;	bE	followChickenAndRabbitGoal
	f	Lapg;	bF	followBabyTurtleGoal
	f	Lapg;	bG	followFishGoal
	f	F	bH	headRollProgress
	f	F	bI	lastHeadRollProgress
	f	F	bJ	extraRollingHeight
	f	F	bK	lastExtraRollingHeight
	f	I	bL	eatingTime
	f	Lsb;	bw	TYPE
	f	Lsb;	bx	FOX_FLAGS
	f	Lsb;	by	OWNER
	f	Lsb;	bz	OTHER_TRUSTED
	m	(Latk$v;)V	a	setType
		p	1	type	type
	m	(Latk;Lakz;)Z	a	canJumpChase
	m	(Lako;)Latk;	b	createChild
	m	(Ljava/util/UUID;)V	b	addTrustedUuid
		p	1	uuid	uuid
	m	(Ljava/util/UUID;)Z	c	canTrust
	m	(IZ)V	d	setFoxFlag
		p	1	mask	mask
		p	2	value	value
	m	()Z	eA	isRollingHead
	m	()V	eD	addTypeSpecificGoals
	m	()Ljava/util/List;	eE	getTrustedUuids
	m	()Z	eF	isAggressive
	m	()V	eG	stopSleeping
	m	()V	eH	stopActions
	m	()Z	eI	wantsToPickupItem
	m	()Latk$v;	eq	getFoxType
	m	()Z	er	isSitting
	m	()Z	es	isWalking
	m	()Z	et	isChasing
	m	()Z	ez	isFullyCrouched
	m	(Lben;)Z	j	canEat
		p	1	stack	stack
	m	(Lben;)V	k	spit
	m	(Lben;)V	l	dropItem
	m	(Z)V	r	setSitting
		p	1	sitting	sitting
	m	(Z)V	s	setChasing
	m	(I)Z	t	getFoxFlag
		p	1	bitmask	bitmask
	m	(Z)V	t	setCrouching
	m	(Z)V	u	setRollingHead
	m	(Z)V	v	setWalking
		p	1	walking	walking
	m	(F)F	v	getHeadRoll
	m	(Z)V	w	setAggressive
		p	1	aggressive	aggressive
	m	(F)F	w	getBodyRotationHeightOffset
	m	(Z)V	x	setSleeping
		p	1	sleeping	sleeping
c	atk$a	net/minecraft/entity/passive/FoxEntity$DefendFriendGoal
	f	Lakz;	j	offender
	f	Lakz;	k	friend
	f	I	l	lastAttackedTime
	m	(Latk;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V	<init>	<init>
		p	2	targetEntityClass	targetEntityClass
		p	3	checkVisibility	checkVisibility
		p	4	checkCanNavigate	checkCanNavigate
		p	5	targetPredicate	targetPredicate
c	atk$b	net/minecraft/entity/passive/FoxEntity$StopWanderingGoal
	f	I	a	timer
c	atk$c	net/minecraft/entity/passive/FoxEntity$WorriableEntityFilter
	m	(Lakz;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	entity	entity
c	atk$d	net/minecraft/entity/passive/FoxEntity$CalmDownGoal
	f	Lask;	b	WORRIABLE_ENTITY_PREDICATE
	m	()Z	g	isAtFavoredLocation
	m	()Z	h	canCalmDown
c	atk$e	net/minecraft/entity/passive/FoxEntity$MateGoal
	m	(Latk;D)V	<init>	<init>
		p	2	chance	chance
c	atk$f	net/minecraft/entity/passive/FoxEntity$EatSweetBerriesGoal
	f	I	g	timer
	m	(Latk;DII)V	<init>	<init>
		p	2	speed	speed
		p	4	rannge	rannge
		p	5	maxYDifference	maxYDifference
	m	()V	m	eatSweetBerry
c	atk$g	net/minecraft/entity/passive/FoxEntity$FoxSwimGoal
c	atk$h	net/minecraft/entity/passive/FoxEntity$FollowParentGoal
	f	Latk;	b	fox
	m	(Latk;Latk;D)V	<init>	<init>
		p	2	fox	fox
		p	3	speed	speed
c	atk$i	net/minecraft/entity/passive/FoxEntity$FoxData
	f	Latk$v;	a	type
c	atk$j	net/minecraft/entity/passive/FoxEntity$LookAtEntityGoal
	m	(Latk;Lala;Ljava/lang/Class;F)V	<init>	<init>
		p	2	fox	fox
		p	3	targetType	targetType
		p	4	range	range
c	atk$k	net/minecraft/entity/passive/FoxEntity$FoxLookControl
c	atk$l	net/minecraft/entity/passive/FoxEntity$AttackGoal
	m	(Latk;DZ)V	<init>	<init>
		p	2	speed	speed
c	atk$m	net/minecraft/entity/passive/FoxEntity$FoxMoveControl
c	atk$n	net/minecraft/entity/passive/FoxEntity$EscapeWhenNotAggresiveGoal
	m	(Latk;D)V	<init>	<init>
		p	2	speed	speed
c	atk$o	net/minecraft/entity/passive/FoxEntity$JumpChasingGoal
c	atk$p	net/minecraft/entity/passive/FoxEntity$PickupItemGoal
c	atk$q	net/minecraft/entity/passive/FoxEntity$GoToVillageGoal
	m	(Latk;II)V	<init>	<init>
		p	2	unused	unused
		p	3	searchRange	searchRange
	m	()Z	g	canGoToVillage
c	atk$r	net/minecraft/entity/passive/FoxEntity$SitDownAndLookAroundGoal
	f	D	c	lookX
	f	D	d	lookZ
	f	I	e	timer
	f	I	f	counter
	m	()V	j	chooseNewAngle
c	atk$s	net/minecraft/entity/passive/FoxEntity$AvoidDaylightGoal
	f	I	c	timer
	m	(Latk;D)V	<init>	<init>
		p	2	speed	speed
c	atk$t	net/minecraft/entity/passive/FoxEntity$DelayedCalmDownGoal
	f	I	c	timer
	m	()Z	j	canNotCalmDown
c	atk$u	net/minecraft/entity/passive/FoxEntity$MoveToHuntGoal
c	atk$v	net/minecraft/entity/passive/FoxEntity$Type
	f	[Latk$v;	c	TYPES
	f	Ljava/util/Map;	d	NAME_TYPE_MAP
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	Ljava/util/List;	g	biomes
	m	(Ljava/lang/String;IILjava/lang/String;[Lbkt;)V	<init>	<init>
		p	3	id	id
		p	4	key	key
		p	5	biomes	biomes
	m	(I)Latk$v;	a	fromId
		p	0	id	id
	m	(Lbkt;)Latk$v;	a	fromBiome
		p	0	biome	biome
	m	(Ljava/lang/String;)Latk$v;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/util/List;	b	getBiomes
	m	()I	c	getId
c	atl	net/minecraft/entity/passive/IronGolemEntity
	f	Lsb;	b	IRON_GOLEM_FLAGS
	f	I	c	attackTicksLeft
	f	I	d	lookingAtVillagerTicksLeft
	m	()I	eq	getAttackTicksLeft
	m	()I	er	getLookingAtVillagerTicks
	m	()Z	es	isPlayerCreated
	m	()F	et	getAttackDamage
	m	()Latl$a;	l	getCrack
	m	(Z)V	r	setLookingAtVillager
		p	1	lookingAtVillager	lookingAtVillager
	m	(Z)V	s	setPlayerCreated
		p	1	playerCreated	playerCreated
c	atl$a	net/minecraft/entity/passive/IronGolemEntity$Crack
	f	Ljava/util/List;	e	VALUES
	f	F	f	maxHealthFraction
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3	maxHealthFraction	maxHealthFraction
	m	(F)Latl$a;	a	from
		p	0	healthFraction	healthFraction
c	atm	net/minecraft/entity/passive/MooshroomEntity
	f	Lsb;	bw	TYPE
	f	Laki;	bx	stewEffect
	f	I	by	stewEffectDuration
	f	Ljava/util/UUID;	bz	lightningId
	m	(Latm;)Latm$a;	a	chooseBabyType
		p	1	mooshroom	mooshroom
	m	(Latm$a;)V	a	setType
		p	1	type	type
	m	(Lako;)Latm;	c	createChild
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Latm$a;	eq	getMooshroomType
	m	(Lben;)Lorg/apache/commons/lang3/tuple/Pair;	j	getStewEffectFrom
		p	1	flower	flower
c	atm$a	net/minecraft/entity/passive/MooshroomEntity$Type
	f	Ljava/lang/String;	c	name
	f	Lbyj;	d	mushroom
	m	(Ljava/lang/String;ILjava/lang/String;Lbyj;)V	<init>	<init>
		p	3	name	name
		p	4	mushroom	mushroom
	m	()Lbyj;	a	getMushroomState
	m	(Ljava/lang/String;)Latm$a;	b	fromName
		p	0	name	name
c	atn	net/minecraft/entity/passive/OcelotEntity
	f	Lbgt;	bw	TAMING_INGREDIENT
	f	Lsb;	bx	TRUSTING
	f	Latn$a;	by	fleeGoal
	f	Latn$b;	bz	temptGoal
	m	(Lako;)Latn;	b	createChild
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()V	eq	updateFleeing
	m	()Z	er	isTrusting
	m	(Z)V	r	setTrusting
		p	1	trusting	trusting
	m	(Z)V	s	showEmoteParticle
		p	1	positive	positive
c	atn$a	net/minecraft/entity/passive/OcelotEntity$FleeGoal
	f	Latn;	i	ocelot
	m	(Latn;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	ocelot	ocelot
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	atn$b	net/minecraft/entity/passive/OcelotEntity$OcelotTemptGoal
	f	Latn;	c	ocelot
	m	(Latn;DLbgt;Z)V	<init>	<init>
		p	1	ocelot	ocelot
		p	2	speed	speed
		p	4	food	food
		p	5	canBeScared	canBeScared
c	ato	net/minecraft/entity/passive/PandaEntity
	f	Lsb;	bA	MAIN_GENE
	f	Lsb;	bB	HIDDEN_GENE
	f	Lsb;	bC	PANDA_FLAGS
	f	Z	bE	shouldGetRevenge
	f	Z	bF	shouldAttack
	f	Lcvl;	bG	playingJump
	f	F	bH	scaredAnimationProgress
	f	F	bI	lastScaredAnimationProgress
	f	F	bJ	lieOnBackAnimationProgress
	f	F	bK	lastLieOnBackAnimationProgress
	f	F	bL	rollOverAnimationProgress
	f	F	bM	lastRollOverAnimationProgress
	f	Ljava/util/function/Predicate;	bO	IS_FOOD
	f	I	bw	playingTicks
	f	Lsb;	bx	ASK_FOR_BAMBOO_TICKS
	f	Lsb;	by	SNEEZE_PROGRESS
	f	Lsb;	bz	EATING_TICKS
	m	(Lato$a;)V	a	setMainGene
		p	1	gene	gene
	m	(Lato;Lato;)V	a	initGenes
		p	1	mother	mother
		p	2	father	father
	m	(Lato$a;)V	b	setHiddenGene
		p	1	gene	gene
	m	(IZ)V	d	setPandaFlag
		p	1	mask	mask
		p	2	value	value
	m	()Lato$a;	eA	getMainGene
	m	()Lato$a;	eB	getHiddenGene
	m	()Z	eC	isPlaying
	m	()Lato$a;	eD	getProductGene
	m	()Z	eE	isLazy
	m	()Z	eF	isWorried
	m	()Z	eG	isPlayful
	m	()Z	eI	isWeak
	m	()V	eK	resetAttributes
	m	()I	eO	getEatingTicks
	m	()V	eP	updateEatingAnimation
	m	()V	eQ	playEatingAnimation
	m	()V	eR	updateScaredAnimation
	m	()V	eS	updateLieOnBackAnimation
	m	()V	eT	updateRollOverAnimation
	m	()V	eU	updatePlaying
	m	()V	eV	sneeze
	m	()Lato$a;	eW	getRandomGene
	m	()V	eX	stop
	m	()I	eq	getAskForBambooTicks
	m	()Z	er	isSneezing
	m	()Z	es	isScared
	m	()Z	et	isLyingOnBack
	m	()Z	eu	isEating
	m	()I	ez	getSneezeProgress
	m	(Lben;)Z	j	canEat
		p	1	stack	stack
	m	(Z)V	r	setScared
		p	1	scared	scared
	m	(Z)V	s	setLyingOnBack
		p	1	lyingOnBack	lyingOnBack
	m	(I)V	t	setAskForBambooTicks
		p	1	askForBambooTicks	askForBambooTicks
	m	(Z)V	t	setEating
		p	1	eating	eating
	m	(Z)V	u	setSneezing
		p	1	sneezing	sneezing
	m	(I)V	u	setSneezeProgress
		p	1	sneezeProgress	sneezeProgress
	m	(I)V	v	setEatingTicks
		p	1	eatingTicks	eatingTicks
	m	(F)F	v	getScaredAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	v	setPlaying
		p	1	playing	playing
	m	(F)F	w	getLieOnBackAnimationProgress
		p	1	tickDelta	tickDelta
	m	(I)Z	w	hasPandaFlag
		p	1	bitmask	bitmask
	m	(F)F	x	getRollOverAnimationProgress
		p	1	tickDelta	tickDelta
c	ato$a	net/minecraft/entity/passive/PandaEntity$Gene
	f	[Lato$a;	h	VALUES
	f	I	i	id
	f	Ljava/lang/String;	j	name
	f	Z	k	recessive
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3	id	id
		p	4	name	name
		p	5	recessive	recessive
	m	()I	a	getId
	m	(I)Lato$a;	a	byId
		p	0	id	id
	m	(Ljava/util/Random;)Lato$a;	a	createRandom
		p	0	random	random
	m	(Ljava/lang/String;)Lato$a;	a	byName
	m	()Ljava/lang/String;	b	getName
	m	(Lato$a;Lato$a;)Lato$a;	b	getProductGene
		p	0	mainGene	mainGene
		p	1	hiddenGene	hiddenGene
	m	()Z	c	isRecessive
c	ato$b	net/minecraft/entity/passive/PandaEntity$AttackGoal
	f	Lato;	d	panda
	m	(Lato;DZ)V	<init>	<init>
		p	1	panda	panda
		p	2	speed	speed
c	ato$c	net/minecraft/entity/passive/PandaEntity$PandaFleeGoal
	f	Lato;	i	panda
	m	(Lato;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	panda	panda
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	ato$d	net/minecraft/entity/passive/PandaEntity$PandaMateGoal
	f	Lato;	e	panda
	f	I	f	nextAskPlayerForBambooAge
	m	()Z	h	isBambooClose
c	ato$e	net/minecraft/entity/passive/PandaEntity$PandaRevengeGoal
	f	Lato;	a	panda
	m	(Lato;[Ljava/lang/Class;)V	<init>	<init>
		p	1	panda	panda
		p	2	noRevengeTypes	noRevengeTypes
c	ato$f	net/minecraft/entity/passive/PandaEntity$LieOnBackGoal
	f	Lato;	a	panda
	f	I	b	nextLieOnBackAge
	m	(Lato;)V	<init>	<init>
		p	1	panda	panda
c	ato$g	net/minecraft/entity/passive/PandaEntity$LookAtEntityGoal
	f	Lato;	g	panda
	m	(Lato;Ljava/lang/Class;F)V	<init>	<init>
		p	1	panda	panda
		p	2	targetType	targetType
		p	3	range	range
c	ato$h	net/minecraft/entity/passive/PandaEntity$PandaMoveControl
	f	Lato;	i	panda
c	ato$i	net/minecraft/entity/passive/PandaEntity$ExtinguishFireGoal
	f	Lato;	f	panda
	m	(Lato;D)V	<init>	<init>
		p	1	panda	panda
		p	2	speed	speed
c	ato$j	net/minecraft/entity/passive/PandaEntity$PlayGoal
	f	Lato;	a	panda
	m	(Lato;)V	<init>	<init>
		p	1	panda	panda
c	ato$k	net/minecraft/entity/passive/PandaEntity$PickUpFoodGoal
	f	I	b	startAge
c	ato$l	net/minecraft/entity/passive/PandaEntity$SneezeGoal
	f	Lato;	a	panda
	m	(Lato;)V	<init>	<init>
		p	1	panda	panda
c	atp	net/minecraft/entity/passive/ParrotEntity
	f	Lsb;	bD	ATTR_VARIANT
	f	Ljava/util/function/Predicate;	bE	CAN_IMITATE
	f	Lbei;	bF	COOKIE
	f	Ljava/util/Set;	bG	TAMING_INGREDIENTS
	f	Ljava/util/Map;	bH	MOB_SOUNDS
	f	Z	bJ	songPlaying
	f	Lfk;	bK	songSource
	m	(Lbjw;Lakq;)V	a	playMobSound
		p	0	world	world
		p	1	parrot	parrot
	m	(Ljava/util/Random;)Laah;	a	getRandomSound
		p	0	random	random
	m	(Laku;)Laah;	b	getSound
		p	0	imitate	imitate
	m	(Lbjw;Lakq;)Z	b	imitateNearbyMob
		p	0	world	world
		p	1	parrot	parrot
	m	(Ljava/util/Random;)F	b	getSoundPitch
		p	0	random	random
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()I	eA	getVariant
	m	()Z	eF	isInAir
	m	()Z	ez	getSongPlaying
	m	(I)V	t	setVariant
c	atp$1	net/minecraft/entity/passive/ParrotEntity$1
	m	(Lala;)Z	a	test
c	atq	net/minecraft/entity/passive/PigEntity
	f	Lsb;	bw	SADDLED
	f	Lbgt;	by	BREEDING_INGREDIENT
	m	(Lako;)Latq;	b	createChild
	m	()Z	eq	isSaddled
	m	(Z)V	r	setSaddled
		p	1	saddled	saddled
c	atr	net/minecraft/entity/passive/PolarBearEntity
	f	Lsb;	bw	WARNING
	f	F	bx	lastWarningAnimationProgress
	f	F	by	warningAnimationProgress
	f	I	bz	warningSoundCooldown
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()V	eq	playWarningSound
	m	()Z	er	isWarning
	m	(Z)V	r	setWarning
		p	1	warning	warning
	m	(F)F	v	getWarningAnimationProgress
		p	1	tickDelta	tickDelta
c	atr$a	net/minecraft/entity/passive/PolarBearEntity$FollowPlayersGoal
c	atr$b	net/minecraft/entity/passive/PolarBearEntity$PolarBearRevengeGoal
c	atr$c	net/minecraft/entity/passive/PolarBearEntity$AttackGoal
c	atr$d	net/minecraft/entity/passive/PolarBearEntity$PolarBearEscapeDangerGoal
c	ats	net/minecraft/entity/passive/PufferfishEntity
	f	Lsb;	b	PUFF_STATE
	f	Ljava/util/function/Predicate;	bw	BLOW_UP_FILTER
	f	I	c	inflateTicks
	f	I	d	deflateTicks
	m	(Lala;)V	a	sting
		p	1	mob	mob
	m	(I)V	b	setPuffState
		p	1	puffState	puffState
	m	()I	es	getPuffState
	m	(I)F	s	getScaleForPuffState
		p	0	puffState	puffState
c	ats$a	net/minecraft/entity/passive/PufferfishEntity$InflateGoal
	f	Lats;	a	pufferfish
	m	(Lats;)V	<init>	<init>
		p	1	pufferfish	pufferfish
c	att	net/minecraft/entity/passive/RabbitEntity
	f	Z	bA	lastOnGround
	f	I	bB	ticksUntilJump
	f	I	bC	moreCarrotTicks
	f	Lsb;	bw	RABBIT_TYPE
	f	Lsm;	bx	KILLER_BUNNY
	f	I	by	jumpTicks
	f	I	bz	jumpDuration
	m	(Lbjx;)I	a	chooseType
		p	1	world	world
	m	(Lako;)Latt;	b	createChild
	m	(Lbei;)Z	b	isBreedingItem
	m	(DD)V	b	lookTowards
		p	1	x	x
		p	3	z	z
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawn
	m	()Z	eB	wantsCarrots
	m	()V	eq	startJump
	m	()Laah;	er	getJumpSound
	m	()I	es	getRabbitType
	m	()V	ez	scheduleJump
	m	(D)V	i	setSpeed
		p	1	speed	speed
	m	(I)V	t	setRabbitType
		p	1	rabbitType	rabbitType
c	att$a	net/minecraft/entity/passive/RabbitEntity$RabbitAttackGoal
	m	(Latt;)V	<init>	<init>
		p	1	rabbit	rabbit
c	att$b	net/minecraft/entity/passive/RabbitEntity$FleeGoal
	f	Latt;	i	rabbit
	m	(Latt;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1	rabbit	rabbit
		p	2	fleeFromType	fleeFromType
		p	3	distance	distance
		p	4	slowSpeed	slowSpeed
		p	6	fastSpeed	fastSpeed
c	att$c	net/minecraft/entity/passive/RabbitEntity$RabbitEntityData
	f	I	a	type
	m	(I)V	<init>	<init>
		p	1	type	type
c	att$d	net/minecraft/entity/passive/RabbitEntity$RabbitJumpControl
	f	Latt;	c	rabbit
	m	(Latt;Latt;)V	<init>	<init>
		p	2	owner	owner
	m	()Z	c	isActive
c	att$e	net/minecraft/entity/passive/RabbitEntity$RabbitMoveControl
	f	Latt;	i	rabbit
	m	(Latt;)V	<init>	<init>
		p	1	owner	owner
c	att$f	net/minecraft/entity/passive/RabbitEntity$EscapeDangerGoal
	f	Latt;	f	rabbit
	m	(Latt;D)V	<init>	<init>
		p	1	rabbit	rabbit
		p	2	speed	speed
c	att$g	net/minecraft/entity/passive/RabbitEntity$EatCarrotCropGoal
	f	Latt;	g	rabbit
	f	Z	h	wantsCarrots
	m	(Latt;)V	<init>	<init>
		p	1	rabbit	rabbit
c	atu	net/minecraft/entity/passive/SalmonEntity
c	atv	net/minecraft/entity/passive/SheepEntity
	f	Laoy;	bA	eatGrassGoal
	f	Lsb;	bw	COLOR
	f	Ljava/util/Map;	bx	DROPS
	f	Ljava/util/Map;	by	COLORS
	m	(Latc;Latc;)Lbdj;	a	getChildColor
	m	(Lbdj;)[F	a	getRgbColor
		p	0	dyeColor	dyeColor
	m	(Lbdj;Lbdj;)Lbaz;	a	createDyeMixingCraftingInventory
	m	(Ljava/util/Random;)Lbdj;	a	generateDefaultColor
	m	(Lbdj;)V	b	setColor
	m	(Lako;)Latv;	b	createChild
	m	(Lbdj;)[F	c	getDyedColor
		p	0	color	color
	m	()V	eq	dropItems
	m	()Lbdj;	er	getColor
	m	()Z	es	isSheared
	m	(Z)V	r	setSheared
c	atw	net/minecraft/entity/passive/TameableShoulderEntity
	f	I	bz	ticks
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lxe;)Z	d	mountOnto
		p	1	player	player
	m	()Z	eC	isReadyToSitOnPlayer
c	atx	net/minecraft/entity/passive/SnowGolemEntity
	f	Lsb;	b	SNOW_GOLEM_FLAGS
	m	()Z	l	hasPumpkin
	m	(Z)V	r	setHasPumpkin
		p	1	hasPumpkin	hasPumpkin
c	aty	net/minecraft/entity/passive/SquidEntity
	f	F	bB	constantVelocityRate
	f	F	bE	constantVelocityX
	f	F	bF	constantVelocityY
	f	F	bG	constantVelocityZ
	m	(FFF)V	a	setConstantVelocity
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()V	eq	squirt
	m	()Z	l	hasConstantVelocity
c	aty$a	net/minecraft/entity/passive/SquidEntity$EscapeAttackerGoal
	f	I	b	timer
c	aty$b	net/minecraft/entity/passive/SquidEntity$SwimGoal
	f	Laty;	b	squid
	m	(Laty;Laty;)V	<init>	<init>
		p	2	squid	squid
c	atz	net/minecraft/entity/passive/TropicalFishEntity
	f	[I	b	COMMON_VARIANTS
	f	[Lsm;	bw	SMALL_FISH_VARIETY_IDS
	f	[Lsm;	bx	LARGE_FISH_VARIETY_IDS
	f	Z	by	commonSpawn
	f	Lsb;	c	VARIANT
	f	[Lsm;	d	SHAPE_IDS
	m	(Latz$a;Lbdj;Lbdj;)I	a	toVariant
		p	0	variety	variety
		p	1	baseColor	baseColor
		p	2	patternColor	patternColor
	m	(I)Ljava/lang/String;	b	getToolTipForVariant
		p	0	variant	variant
	m	()[F	eA	getBaseColorComponents
	m	()[F	eB	getPatternColorComponents
	m	()I	eC	getShape
	m	()Lsm;	eD	getVarietyId
	m	()Lsm;	eE	getShapeId
	m	()I	ez	getVariant
	m	(I)Lbdj;	s	getBaseDyeColor
		p	0	variant	variant
	m	(I)Lbdj;	t	getPatternDyeColor
		p	0	variant	variant
	m	(I)Ljava/lang/String;	u	getTranslationKey
		p	0	variant	variant
	m	(I)V	v	setVariant
		p	1	variant	variant
	m	(I)I	w	getShape
		p	0	variant	variant
	m	(I)I	x	getBaseDyeColorIndex
		p	0	variant	variant
	m	(I)I	y	getPatternDyeColorIndex
		p	0	variant	variant
	m	(I)I	z	getPattern
		p	0	variant	variant
c	atz$a	net/minecraft/entity/passive/TropicalFishEntity$Variety
	f	I	m	shape
	f	I	n	pattern
	f	[Latz$a;	o	VALUES
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3	shape	shape
		p	4	pattern	pattern
	m	(II)Ljava/lang/String;	a	getTranslateKey
		p	0	shape	shape
		p	1	pattern	pattern
	m	()I	a	getShape
	m	()I	b	getPattern
	m	()Ljava/lang/String;	c	getTranslationKey
c	atz$b	net/minecraft/entity/passive/TropicalFishEntity$Data
	f	I	b	shape
	f	I	c	pattern
	f	I	d	baseColor
	f	I	e	patternColor
	m	(Latz;IIII)V	<init>	<init>
		p	1	leader	leader
		p	2	shape	shape
		p	3	pattern	pattern
		p	4	baseColor	baseColor
		p	5	patternColor	patternColor
c	au	net/minecraft/advancement/criterion/EffectsChangedCriterion
	f	Lsm;	a	ID
	m	(Lxe;)V	a	trigger
		p	1	player	player
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lau$a;	b	conditionsFromJson
c	au$a	net/minecraft/advancement/criterion/EffectsChangedCriterion$Conditions
	f	Lbs;	a	effects
	m	(Lbs;)V	<init>	<init>
		p	1	effects	effects
	m	(Lbs;)Lau$a;	a	create
		p	0	effects	effects
	m	(Lxe;)Z	a	matches
		p	1	player	player
c	aua	net/minecraft/entity/passive/TurtleEntity
	f	Lsb;	bA	TRAVEL_POS
	f	Lsb;	bB	LAND_BOUND
	f	Lsb;	bC	ACTIVELY_TRAVELLING
	f	I	bD	sandDiggingCounter
	f	Ljava/util/function/Predicate;	bw	BABY_TURTLE_ON_LAND_FILTER
	f	Lsb;	bx	HOME_POS
	f	Lsb;	by	HAS_EGG
	f	Lsb;	bz	DIGGING_SAND
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	eq	hasEgg
	m	()Z	er	isDiggingSand
	m	()Lfk;	es	getHomePos
	m	()Lfk;	et	getTravelPos
	m	()Z	eu	isLandBound
	m	()Z	ez	isActivelyTravelling
	m	(Lfk;)V	g	setHomePos
		p	1	pos	pos
	m	(Lfk;)V	h	setTravelPos
		p	1	pos	pos
	m	(Z)V	r	setHasEgg
		p	1	hasEgg	hasEgg
	m	(Z)V	s	setDiggingSand
		p	1	diggingSand	diggingSand
	m	(Z)V	t	setLandBound
		p	1	landBound	landBound
	m	(Z)V	u	setActivelyTravelling
		p	1	travelling	travelling
c	aua$a	net/minecraft/entity/passive/TurtleEntity$MateGoal
	f	Laua;	d	turtle
	m	(Laua;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	aua$b	net/minecraft/entity/passive/TurtleEntity$GoHomeGoal
	f	Laua;	a	turtle
	f	D	b	speed
	f	Z	c	noPath
	f	I	d	homeReachingTryTicks
	m	(Laua;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	aua$c	net/minecraft/entity/passive/TurtleEntity$WanderInWaterGoal
	f	Laua;	g	turtle
	m	(Laua;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	aua$d	net/minecraft/entity/passive/TurtleEntity$LayEggGoal
	f	Laua;	g	turtle
	m	(Laua;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	aua$e	net/minecraft/entity/passive/TurtleEntity$TurtleMoveControl
	f	Laua;	i	turtle
	m	(Laua;)V	<init>	<init>
		p	1	turtle	turtle
	m	()V	g	updateVelocity
c	aua$f	net/minecraft/entity/passive/TurtleEntity$TurtleEscapeDangerGoal
	m	(Laua;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	aua$g	net/minecraft/entity/passive/TurtleEntity$TurtleSwimNavigation
	m	(Laua;Lbjw;)V	<init>	<init>
		p	1	owner	owner
		p	2	world	world
c	aua$h	net/minecraft/entity/passive/TurtleEntity$WanderOnLandGoal
	f	Laua;	h	turtle
	m	(Laua;DI)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
		p	4	chance	chance
c	aua$i	net/minecraft/entity/passive/TurtleEntity$ApproachFoodHoldingPlayerGoal
	f	Lask;	a	CLOSE_ENTITY_PREDICATE
	f	Laua;	b	turtle
	f	D	c	speed
	f	Layj;	d	targetPlayer
	f	I	e	cooldown
	f	Ljava/util/Set;	f	attractiveItems
	m	(Laua;DLbei;)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
		p	4	attractiveItem	attractiveItem
	m	(Lben;)Z	a	isAttractive
		p	1	stack	stack
c	aua$j	net/minecraft/entity/passive/TurtleEntity$TravelGoal
	f	Laua;	a	turtle
	f	D	b	speed
	f	Z	c	noPath
	m	(Laua;D)V	<init>	<init>
		p	1	turtle	turtle
		p	2	speed	speed
c	aub	net/minecraft/entity/mob/WaterCreatureEntity
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(I)V	a	tickWaterBreathingAir
		p	1	air	air
c	auc	net/minecraft/entity/passive/WolfEntity
	f	Lsb;	bA	BEGGING
	f	Lsb;	bB	COLLAR_COLOR
	f	F	bC	begAnimationProgress
	f	F	bD	lastBegAnimationProgress
	f	Z	bE	furWet
	f	Z	bF	canShakeWaterOff
	f	F	bG	shakeProgress
	f	F	bH	lastShakeProgress
	f	Ljava/util/function/Predicate;	bz	FOLLOW_TAMED_PREDICATE
	m	(Lbdj;)V	a	setCollarColor
		p	1	color	color
	m	(Lako;)Lauc;	b	createChild
	m	()Z	eB	isAngry
	m	()Lbdj;	eC	getCollarColor
	m	()Z	eD	isBegging
	m	()Z	ez	isFurWet
		c	Returns whether this wolf's fur is wet.\n<p>\nThe wolf's fur will remain wet until the wolf shakes.
	m	(FF)F	g	getShakeAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	u	setAngry
		p	1	angry	angry
	m	(Z)V	v	setBegging
		p	1	begging	begging
	m	(F)F	v	getFurWetBrightnessMultiplier
		c	Returns this wolf's brightness multiplier based on the fur wetness.\n<p>\nThe brightness multiplier represents how much darker the wolf gets while its fur is wet. The multiplier changes (from 0.75 to 1.0 incrementally) when a wolf shakes.\n\n@param tickDelta Progress for linearly interpolating between the previous and current game state.\n@return Brightness as a float value between 0.75 and 1.0.\n@see net.minecraft.client.render.entity.model.TintableAnimalModel
		p	1	tickDelta	tickDelta
	m	(F)F	w	getBegAnimationProgress
		p	1	tickDelta	tickDelta
c	auc$a	net/minecraft/entity/passive/WolfEntity$AvoidLlamaGoal
	f	Lauc;	j	wolf
	m	(Lauc;Lauc;Ljava/lang/Class;FDD)V	<init>	<init>
		p	2	wolf	wolf
		p	3	fleeFromType	fleeFromType
		p	4	distance	distance
		p	5	slowSpeed	slowSpeed
		p	7	fastSpeed	fastSpeed
	m	(Lauh;)Z	a	isScaredOf
		p	1	llama	llama
c	aud	net/minecraft/entity/passive/AbstractDonkeyEntity
	f	Lsb;	bF	CHEST
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	()Z	eq	hasChest
	m	()V	et	playAddChestSound
	m	(Z)V	r	setHasChest
		p	1	hasChest	hasChest
c	aue	net/minecraft/entity/passive/HorseBaseEntity
	f	Lajq;	bA	items
	f	I	bB	temper
	f	F	bC	jumpStrength
	f	I	bE	soundTicks
	f	Ljava/util/function/Predicate;	bF	IS_BRED_HORSE
	f	Lask;	bG	PARENT_HORSE_PREDICATE
	f	Lsb;	bH	HORSE_FLAGS
	f	Lsb;	bI	OWNER_UUID
	f	I	bJ	eatingGrassTicks
	f	I	bK	eatingTicks
	f	I	bL	angryTicks
	f	Z	bM	jumping
	f	F	bN	eatingGrassAnimationProgress
	f	F	bO	lastEatingGrassAnimationProgress
	f	F	bP	angryAnimationProgress
	f	F	bQ	lastAngryAnimationProgress
	f	F	bR	eatingAnimationProgress
	f	F	bS	lastEatingAnimationProgress
	f	Lalq;	bw	JUMP_STRENGTH
	f	Z	bz	inAir
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lako;Laue;)V	a	setChildAttributes
		p	1	mate	mate
		p	2	child	child
	m	(Lbum;)V	a	playWalkSound
		p	1	group	group
	m	(Ljava/util/UUID;)V	b	setOwnerUuid
		p	1	uuid	uuid
	m	(Layj;Lben;)Z	b	receiveFood
		p	1	player	player
		p	2	item	item
	m	(IZ)V	d	setHorseFlag
		p	1	bitmask	bitmask
		p	2	flag	flag
	m	(Layj;)V	e	openInventory
		p	1	player	player
	m	()Z	eA	isTame
	m	()Ljava/util/UUID;	eB	getOwnerUuid
	m	()Z	eC	isInAir
	m	()Z	eD	isEatingGrass
	m	()Z	eE	isAngry
	m	()Z	eF	isBred
	m	()I	eG	getTemper
	m	()V	eI	updateSaddle
	m	()D	eJ	getJumpStrength
	m	()Z	eK	canBeSaddled
	m	()Z	eL	isSaddled
	m	()I	eM	getMaxTemper
	m	()V	eN	walkToParent
	m	()Z	eO	eatsGrass
	m	()V	eP	playAngrySound
	m	()V	eQ	playJumpSound
	m	()Z	eR	canBreed
	m	()F	eS	getChildHealthBonus
	m	()D	eT	getChildJumpStrengthBonus
	m	()D	eU	getChildMovementSpeedBonus
	m	()Z	eV	canEquip
	m	()V	eW	updateAnger
	m	()V	eq	playEatingAnimation
	m	()I	er	getInventorySize
	m	()Laah;	es	getAngrySound
	m	()V	eu	setEating
	m	()V	ez	initCustomGoals
	m	(Layj;)V	g	putPlayerOnBack
		p	1	player	player
	m	(Layj;)Z	h	bondWithPlayer
		p	1	player	player
	m	(Lben;)Z	j	canEquip
		p	1	item	item
	m	(Z)V	s	setTame
		p	1	tame	tame
	m	(I)Z	t	getHorseFlag
		p	1	bitmask	bitmask
	m	(Z)V	t	setInAir
		p	1	inAir	inAir
	m	(I)V	u	setTemper
		p	1	temper	temper
	m	(Z)V	u	setBred
	m	(F)F	v	getEatingGrassAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	v	setSaddled
	m	(I)I	v	addTemper
		p	1	difference	difference
	m	(Z)V	w	setEatingGrass
		p	1	eatingGrass	eatingGrass
	m	(F)F	w	getAngryAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	x	setAngry
		p	1	angry	angry
	m	(F)F	x	getEatingAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Z)V	y	spawnPlayerReactionParticles
		p	1	positive	positive
c	auf	net/minecraft/entity/passive/DonkeyEntity
c	aug	net/minecraft/entity/passive/HorseEntity
	f	Ljava/util/UUID;	bF	HORSE_ARMOR_BONUS_UUID
	f	Lsb;	bG	VARIANT
	f	[Ljava/lang/String;	bH	HORSE_TEX
	f	[Ljava/lang/String;	bI	HORSE_TEX_ID
	f	[Ljava/lang/String;	bJ	HORSE_MARKING_TEX
	f	[Ljava/lang/String;	bK	HORSE_MARKING_TEX_ID
	f	Ljava/lang/String;	bL	textureLocation
	f	[Ljava/lang/String;	bM	textureLayers
	m	()[Ljava/lang/String;	eW	getTextureLayers
	m	()V	eX	clearTextureInfo
	m	()V	eY	initTextureInfo
	m	()Lben;	eq	getArmorType
	m	()I	et	getVariant
	m	()Ljava/lang/String;	eu	getTextureLocation
	m	(Lben;)V	k	equipArmor
		p	1	stack	stack
	m	(Lben;)V	l	setArmorTypeFromStack
		p	1	stack	stack
	m	(I)V	w	setVariant
		p	1	variant	variant
c	aug$a	net/minecraft/entity/passive/HorseEntity$EntityData
	f	I	a	variant
c	auh	net/minecraft/entity/passive/LlamaEntity
	f	Lsb;	bF	ATTR_STRENGTH
	f	Lsb;	bG	CARPET_COLOR
	f	Lsb;	bH	ATTR_VARIANT
	f	Z	bI	spit
	f	Lauh;	bJ	following
	f	Lauh;	bK	follower
	m	(Lauh;)V	a	follow
	m	(Lbdj;)V	a	setCarpetColor
		p	1	color	color
	m	(Lako;)Lauh;	b	createChild
	m	()Z	eW	isTrader
	m	()I	eX	getStrength
	m	()I	eY	getVariant
	m	()Lbdj;	eZ	getCarpetColor
	m	()Lauh;	fa	createChild
	m	()V	fb	stopFollowing
	m	()Z	fc	hasFollower
	m	()Z	fd	isFollowing
	m	()Lauh;	fe	getFollowing
	m	()V	ff	initializeStrength
	m	(Lakz;)V	i	spitAt
		p	1	target	target
	m	(Lben;)Lbdj;	k	getColorFromCarpet
		p	0	color	color
	m	(I)V	w	setVariant
		p	1	variant	variant
	m	(I)V	x	setStrength
		p	1	strength	strength
	m	(Z)V	z	setSpit
		p	1	spit	spit
c	auh$a	net/minecraft/entity/passive/LlamaEntity$ChaseWolvesGoal
	m	(Lauh;)V	<init>	<init>
		p	1	llama	llama
c	auh$b	net/minecraft/entity/passive/LlamaEntity$EntityData
	f	I	a	variant
	m	(I)V	<init>	<init>
		p	1	variant	variant
c	auh$c	net/minecraft/entity/passive/LlamaEntity$SpitRevengeGoal
c	aui	net/minecraft/entity/passive/MuleEntity
c	auj	net/minecraft/entity/mob/SkeletonHorseEntity
	f	Z	bG	trapped
	f	I	bH	trapTime
	m	()Z	eq	isTrapped
	m	(Z)V	r	setTrapped
		p	1	trapped	trapped
c	auk	net/minecraft/entity/ai/goal/SkeletonHorseTrapTriggerGoal
	f	Lauj;	a	skeletonHorse
	m	(Lauj;)V	<init>	<init>
		p	1	skeletonHorse	skeletonHorse
	m	(Lajj;)Laue;	a	getHorse
		p	1	localDifficulty	localDifficulty
	m	(Lajj;Laue;)Laxg;	a	getSkeleton
		p	1	localDifficulty	localDifficulty
		p	2	vehicle	vehicle
c	aul	net/minecraft/entity/passive/TraderLlamaEntity
	f	I	bF	despawnDelay
	m	()Z	fh	heldByTrader
	m	()Z	fi	leashedByPlayer
c	aul$a	net/minecraft/entity/passive/TraderLlamaEntity$DefendTraderGoal
	f	Lauh;	b	llama
	f	Lakz;	c	offender
	f	I	d	traderLastAttackedTime
	m	(Laul;Lauh;)V	<init>	<init>
		p	2	llama	llama
c	aum	net/minecraft/entity/mob/ZombieHorseEntity
c	auq	net/minecraft/entity/boss/dragon/EnderDragonPart
	f	Laus;	b	owner
	f	Ljava/lang/String;	c	name
	f	Lakr;	d	partDimensions
	m	(Laus;Ljava/lang/String;FF)V	<init>	<init>
		p	1	owner	owner
		p	2	name	name
		p	3	width	width
		p	4	height	height
c	aur	net/minecraft/entity/decoration/EnderCrystalEntity
	f	Lsb;	c	BEAM_TARGET
	f	Lsb;	d	SHOW_BOTTOM
	m	(Lajz;)V	a	crystalDestroyed
		p	1	source	source
	m	(Lfk;)V	a	setBeamTarget
	m	(Z)V	a	setShowBottom
	m	()Lfk;	f	getBeamTarget
	m	()Z	i	getShowBottom
c	aus	net/minecraft/entity/boss/dragon/EnderDragonEntity
	f	Lsb;	b	PHASE_TYPE
	f	Laur;	bC	connectedCrystal
	f	Lorg/apache/logging/log4j/Logger;	bD	LOGGER
	f	Lask;	bE	CLOSE_PLAYER_PREDICATE
	f	[Lauq;	bF	parts
	f	Lauq;	bG	partNeck
	f	Lauq;	bH	partBody
	f	Lauq;	bI	partTail1
	f	Lauq;	bJ	partTail2
	f	Lauq;	bK	partTail3
	f	Lauq;	bL	partWingRight
	f	Lauq;	bM	partWingLeft
	f	Lcbm;	bN	fight
	f	Lavk;	bO	phaseManager
	f	Lauq;	bw	partHead
	m	(Laur;Lfk;Lajz;)V	a	crystalDestroyed
		p	1	crystal	crystal
		p	2	pos	pos
		p	3	source	source
	m	(Lauq;Lajz;F)Z	a	damagePart
	m	()[Lauq;	eo	getBodyParts
	m	()Lavk;	ep	getPhaseManager
	m	()Lcbm;	eq	getFight
c	auu	net/minecraft/entity/boss/dragon/phase/AbstractPhase
	f	Laus;	a	dragon
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	auv	net/minecraft/entity/boss/dragon/phase/AbstractSittingPhase
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	auw	net/minecraft/entity/boss/dragon/phase/ChargingPlayerPhase
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcvl;	c	target
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
	m	(Lcvl;)V	a	setTarget
		p	1	target	target
c	auy	net/minecraft/entity/boss/dragon/phase/DyingPhase
	f	I	c	ticks
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	auz	net/minecraft/entity/boss/dragon/phase/HoldingPatternPhase
	f	Lask;	b	PLAYERS_IN_RANGE_PREDICATE
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	av	net/minecraft/advancement/criterion/EnchantedItemCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lben;I)V	a	trigger
		p	1	player	player
		p	2	stack	stack
		p	3	levels	levels
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lav$a;	b	conditionsFromJson
c	av$a	net/minecraft/advancement/criterion/EnchantedItemCriterion$Conditions
	f	Lbj;	a	item
	f	Lbr$d;	b	levels
	m	(Lbj;Lbr$d;)V	<init>	<init>
		p	1	item	item
	m	(Lben;I)Z	a	matches
		p	1	stack	stack
		p	2	levels	levels
	m	()Lav$a;	c	any
c	ava	net/minecraft/entity/boss/dragon/phase/HoverPhase
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avb	net/minecraft/entity/boss/dragon/phase/LandingApproachPhase
	f	Lask;	b	PLAYERS_IN_RANGE_PREDICATE
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avc	net/minecraft/entity/boss/dragon/phase/LandingPhase
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avd	net/minecraft/entity/boss/dragon/phase/Phase
	m	(Laur;Lfk;Lajz;Layj;)V	a	crystalDestroyed
		p	1	crystal	crystal
		p	2	pos	pos
		p	3	source	source
		p	4	player	player
	m	(Lajz;F)F	a	modifyDamageTaken
	m	()V	b	clientTick
	m	()V	c	serverTick
	m	()V	d	beginPhase
	m	()V	e	endPhase
	m	()Lcvl;	g	getTarget
	m	()Lavj;	i	getType
c	ave	net/minecraft/entity/boss/dragon/phase/SittingAttackingPhase
	f	I	b	ticks
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avf	net/minecraft/entity/boss/dragon/phase/SittingFlamingPhase
	f	I	b	ticks
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avg	net/minecraft/entity/boss/dragon/phase/SittingScanningPhase
	f	Lask;	b	PLAYER_WITHIN_RANGE_PREDICATE
	f	Lask;	c	CLOSE_PLAYER_PREDICATE
	f	I	d	ticks
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avh	net/minecraft/entity/boss/dragon/phase/StrafePlayerPhase
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avi	net/minecraft/entity/boss/dragon/phase/TakeoffPhase
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
c	avj	net/minecraft/entity/boss/dragon/phase/PhaseType
	f	[Lavj;	l	types
	f	Ljava/lang/Class;	m	phaseClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
	m	(ILjava/lang/Class;Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	phaseClass	phaseClass
		p	3	name	name
	m	(I)Lavj;	a	getFromId
		p	0	id	id
	m	(Laus;)Lavd;	a	create
		p	1	dragon	dragon
	m	(Ljava/lang/Class;Ljava/lang/String;)Lavj;	a	register
		p	0	phaseClass	phaseClass
		p	1	name	name
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	()I	b	getTypeId
	m	()I	c	count
c	avk	net/minecraft/entity/boss/dragon/phase/PhaseManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Laus;	b	dragon
	f	[Lavd;	c	phases
	f	Lavd;	d	current
	m	(Laus;)V	<init>	<init>
		p	1	dragon	dragon
	m	()Lavd;	a	getCurrent
	m	(Lavj;)V	a	setPhase
		p	1	type	type
	m	(Lavj;)Lavd;	b	create
		p	1	type	type
c	avn	net/minecraft/entity/boss/WitherEntity
	f	Lsb;	b	TRACKED_ENTITY_ID_1
	f	[F	bA	prevSideHeadPitches
	f	[F	bB	prevSideHeadYaws
	f	Lxa;	bF	bossBar
	f	Ljava/util/function/Predicate;	bG	CAN_ATTACK_PREDICATE
	f	Lask;	bH	HEAD_TARGET_PREDICATE
	f	Ljava/util/List;	bw	TRACKED_ENTITY_IDS
	f	Lsb;	bx	INVUL_TIMER
	f	[F	by	sideHeadPitches
	f	[F	bz	sideHeadYaws
	f	Lsb;	c	TRACKED_ENTITY_ID_2
	f	Lsb;	d	TRACKED_ENTITY_ID_3
	m	(II)V	a	setTrackedEntityId
		p	1	headIndex	headIndex
		p	2	id	id
	m	(IDDDZ)V	a	method_6877
		p	1	headIndex	headIndex
	m	(I)F	a	getHeadYaw
		p	1	headIndex	headIndex
	m	(FFF)F	a	getNextAngle
		p	1	prevAngle	prevAngle
		p	2	desiredAngle	desiredAngle
		p	3	maxDifference	maxDifference
	m	(Lbyj;)Z	b	canDestroy
		p	0	block	block
	m	(I)F	b	getHeadPitch
		p	1	headIndex	headIndex
	m	()I	eq	getInvulnerableTimer
	m	(I)V	s	setInvulTimer
		p	1	ticks	ticks
	m	(I)I	t	getTrackedEntityId
		p	1	headIndex	headIndex
	m	(I)D	u	getHeadX
		p	1	headIndex	headIndex
	m	(I)D	v	getHeadY
		p	1	headIndex	headIndex
	m	(I)D	w	getHeadZ
		p	1	headIndex	headIndex
c	avn$a	net/minecraft/entity/boss/WitherEntity$DescendAtHalfHealthGoal
c	avp	net/minecraft/entity/decoration/ArmorStandEntity
	f	Lsb;	b	ARMOR_STAND_FLAGS
	f	I	bB	disabledSlots
	f	Lgc;	bC	headRotation
	f	Lgc;	bD	bodyRotation
	f	Lgc;	bE	leftArmRotation
	f	Lgc;	bF	rightArmRotation
	f	Lgc;	bG	leftLegRotation
	f	Lgc;	bH	rightLegRotation
	f	Lsb;	bp	TRACKER_RIGHT_LEG_ROTATION
	f	Lgc;	br	DEFAULT_HEAD_ROTATION
	f	Lgc;	bs	DEFAULT_BODY_ROTATION
	f	Lgc;	bt	DEFAULT_LEFT_ARM_ROTATION
	f	Lgc;	bu	DEFAULT_RIGHT_ARM_ROTATION
	f	Lgc;	bv	DEFAULT_LEFT_LEG_ROTATION
	f	Lgc;	bw	DEFAULT_RIGHT_LEG_ROTATION
	f	Ljava/util/function/Predicate;	bx	RIDEABLE_MINECART_PREDICATE
	f	Lfy;	by	heldItems
	f	Lfy;	bz	armorItems
	f	Lsb;	c	TRACKER_HEAD_ROTATION
	f	Lsb;	d	TRACKER_BODY_ROTATION
	f	Lsb;	e	TRACKER_LEFT_ARM_ROTATION
	f	Lsb;	f	TRACKER_RIGHT_ARM_ROTATION
	f	Lsb;	g	TRACKER_LEFT_LEG_ROTATION
	m	()Z	A	canClip
	m	()Ljt;	B	serializePose
	m	(Lgc;)V	a	setHeadRotation
	m	(BIZ)B	a	setBitField
		p	1	value	value
		p	2	bitField	bitField
		p	3	set	set
	m	(Lgc;)V	b	setBodyRotation
	m	(Lgc;)V	c	setLeftArmRotation
	m	(Lgc;)V	d	setRightArmRotation
	m	(Lgc;)V	e	setLeftLegRotation
	m	(Lgc;)V	f	setRightLegRotation
	m	(Ljt;)V	g	deserializePose
	m	()Z	l	isSmall
	m	(Z)V	n	setSmall
	m	()Z	n	shouldShowArms
	m	()Z	o	shouldHideBasePlate
	m	(Z)V	o	setShowArms
	m	()Z	p	isMarker
	m	(Z)V	p	setHideBasePlate
	m	(Z)V	q	setMarker
	m	()Lgc;	r	getHeadRotation
	m	()Lgc;	s	getBodyRotation
	m	()Lgc;	u	getLeftArmRotation
	m	()Lgc;	v	getRightArmRotation
	m	()Lgc;	w	getLeftLegRotation
	m	()Lgc;	z	getRightLegRotation
c	avq	net/minecraft/entity/decoration/AbstractDecorationEntity
	f	Ljava/util/function/Predicate;	b	PREDICATE
	f	Lfk;	c	attachmentPos
	f	Lfp;	d	facing
	f	I	e	obstructionCheckCounter
	m	(Laku;Lbjw;Lfk;)V	<init>	<init>
		p	1	type	type
		p	2	world	world
		p	3	pos	pos
	m	(Lfp;)V	a	setFacing
		p	1	facing	facing
	m	(Lakq;)V	a	onBreak
		p	1	entity	entity
	m	()V	f	updateAttachmentPosition
	m	()Z	i	canStayAttached
	m	()I	k	getWidthPixels
	m	()I	l	getHeightPixels
	m	()V	m	onPlace
	m	()Lfk;	n	getDecorationBlockPos
c	avr	net/minecraft/entity/decoration/ItemFrameEntity
	f	F	ao	itemDropChance
	f	Lsb;	f	ITEM_STACK
	f	Lsb;	g	ROTATION
	m	(IZ)V	a	setRotation
		p	1	value	value
	m	(Lben;Z)V	a	setHeldItemStack
		p	1	value	value
	m	(I)V	a	setRotation
	m	(Lakq;Z)V	b	dropHeldStack
		p	1	entity	entity
		p	2	alwaysDrop	alwaysDrop
	m	(Lben;)V	b	setHeldItemStack
	m	(Lben;)V	c	removeFromFrame
		p	1	map	map
	m	()Lben;	o	getHeldItemStack
	m	()I	p	getRotation
	m	()I	q	getComparatorPower
c	avs	net/minecraft/entity/decoration/LeadKnotEntity
	m	(Lbjw;Lfk;)Lavs;	a	getOrCreate
		p	0	world	world
		p	1	pos	pos
c	avt	net/minecraft/entity/decoration/painting/PaintingMotive
	f	I	A	width
	f	I	B	height
	m	(II)V	<init>	<init>
		p	1	width	width
		p	2	height	height
	m	(Ljava/lang/String;II)Lavt;	a	register
		p	0	id	id
		p	1	width	width
		p	2	height	height
	m	()I	a	getWidth
	m	()I	b	getHeight
c	avu	net/minecraft/entity/decoration/painting/PaintingEntity
	f	Lavt;	e	motive
	m	(Lbjw;Lfk;Lfp;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
c	avw	net/minecraft/entity/projectile/FishingBobberEntity
	f	I	ao	hookCountdown
	f	I	ap	waitCountdown
	f	I	aq	fishTravelCountdown
	f	F	ar	fishAngle
	f	Lavw$a;	as	state
	f	I	at	luckOfTheSeaLevel
	f	I	au	lureLevel
	f	Lakq;	b	hookedEntity
	f	Lsb;	c	HOOK_ENTITY_ID
	f	Z	d	stuckOnBlock
	f	I	e	removalTimer
	f	Layj;	f	owner
	f	I	g	selfHitTimer
	m	(Lbjw;Layj;DDD)V	<init>	<init>
		p	1	world	world
		p	2	thrower	thrower
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Layj;Lbjw;II)V	<init>	<init>
		p	1	thrower	thrower
		p	2	world	world
		p	3	lureLevel	lureLevel
		p	4	luckOfTheSeaLevel	luckOfTheSeaLevel
	m	(Lbjw;Layj;II)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	lureLevel	lureLevel
		p	4	luckOfTheSeaLevel	luckOfTheSeaLevel
	m	(Lfk;)V	a	tickFishingLogic
		p	1	pos	pos
	m	(Lben;)I	b	use
		p	1	usedItem	usedItem
	m	()V	f	pullHookedEntity
	m	()Layj;	i	getOwner
	m	()Z	k	removeIfInvalid
	m	()V	l	smoothenMovement
	m	()V	m	checkForCollision
	m	()V	n	updateHookedEntityId
c	avw$a	net/minecraft/entity/projectile/FishingBobberEntity$State
c	avy	net/minecraft/entity/LightningEntity
	f	J	b	seed
	f	I	c	ambientTick
	f	I	d	remainingActions
	f	Z	e	cosmetic
	f	Lxe;	f	channeller
	m	(Lbjw;DDDZ)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	cosmetic	cosmetic
	m	(I)V	a	spawnFire
		p	1	spreadAttempts	spreadAttempts
	m	(Lxe;)V	d	setChanneller
		p	1	channeller	channeller
c	aw	net/minecraft/predicate/item/EnchantmentPredicate
	f	Law;	a	ANY
	f	[Law;	b	ARRAY_OF_ANY
	f	Lbhx;	c	enchantment
	f	Lbr$d;	d	levels
	m	(Lbhx;Lbr$d;)V	<init>	<init>
		p	1	enchantment	enchantment
	m	(Lcom/google/gson/JsonElement;)Law;	a	deserialize
		p	0	el	el
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/util/Map;)Z	a	test
	m	(Lcom/google/gson/JsonElement;)[Law;	b	deserializeAll
		p	0	el	el
c	awa	net/minecraft/entity/FallingBlockEntity
	f	Z	ao	hurtEntities
	f	I	ap	fallHurtMax
	f	F	aq	fallHurtAmount
	f	I	b	timeFalling
	f	Z	c	dropItem
	f	Ljt;	d	blockEntityData
	f	Lsb;	e	BLOCK_POS
	f	Lbyj;	f	block
	f	Z	g	destroyedOnLanding
	m	(Lbjw;DDDLbyj;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	block	block
	m	(Lfk;)V	a	setFallingBlockPos
		p	1	pos	pos
	m	(Z)V	a	setHurtEntities
		p	1	hurtEntities	hurtEntities
	m	()Lfk;	f	getFallingBlockPos
	m	()Lbjw;	i	getWorldClient
	m	()Lbyj;	k	getBlockState
c	awb	net/minecraft/entity/ItemEntity
	f	Ljava/util/UUID;	ao	owner
	f	F	b	hoverHeight
	f	Lsb;	c	STACK
	f	I	d	age
	f	I	e	pickupDelay
	f	I	f	health
	f	Ljava/util/UUID;	g	thrower
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;DDDLben;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	stack	stack
	m	(Lawb;)V	a	tryMerge
		p	1	other	other
	m	(Lawb;Lben;Lawb;Lben;)V	a	merge
		p	0	targetEntity	targetEntity
		p	1	targetStack	targetStack
		p	2	sourceEntity	sourceEntity
		p	3	sourceStack	sourceStack
	m	(Lawb;Lben;Lben;)V	a	merge
		p	0	targetEntity	targetEntity
		p	1	stack1	stack1
		p	2	stack2	stack2
	m	(Lben;Lben;I)Lben;	a	merge
		p	0	stack1	stack1
		p	1	stack2	stack2
		p	2	maxCount	maxCount
	m	(Lben;Lben;)Z	a	canMerge
		p	0	stack1	stack1
		p	1	stack2	stack2
	m	(I)V	a	setPickupDelay
		p	1	pickupDelay	pickupDelay
	m	(Lben;)V	b	setStack
		p	1	stack	stack
	m	(Ljava/util/UUID;)V	b	setOwner
		p	1	uuid	uuid
	m	(Ljava/util/UUID;)V	c	setThrower
		p	1	uuid	uuid
	m	()Lben;	f	getStack
	m	()Ljava/util/UUID;	i	getOwner
	m	()Ljava/util/UUID;	k	getThrower
	m	()I	l	getAge
	m	()V	m	setToDefaultPickupDelay
	m	()V	n	resetPickupDelay
	m	()V	o	setPickupDelayInfinite
	m	()Z	p	cannotPickup
	m	()V	r	setCovetedItem
	m	()V	s	setDespawnImmediately
	m	()V	u	applyBuoyancy
	m	()V	v	tryMerge
	m	()Z	w	canMerge
c	awc	net/minecraft/entity/TntEntity
	f	Lsb;	b	FUSE
	f	Lakz;	c	causingEntity
	f	I	d	fuseTimer
	m	(Lbjw;DDDLakz;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	igniter	igniter
	m	(I)V	a	setFuse
		p	1	fuse	fuse
	m	()Lakz;	f	getCausingEntity
	m	()I	i	getFuse
	m	()I	k	getFuseTimer
	m	()V	l	explode
c	awe	net/minecraft/entity/mob/IllagerEntity
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	()Lawe$a;	l	getState
c	awe$a	net/minecraft/entity/mob/IllagerEntity$State
c	awe$b	net/minecraft/entity/mob/IllagerEntity$LongDoorInteractGoal
c	awf	net/minecraft/entity/mob/AbstractSkeletonEntity
	f	Laqg;	b	bowAttackGoal
	f	Lapp;	c	meleeAttackGoal
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lben;F)Layn;	b	createArrowProjectile
		p	1	arrow	arrow
	m	()V	eq	updateAttackType
	m	()Laah;	l	getStepSound
c	awg	net/minecraft/entity/mob/BlazeEntity
	f	Lsb;	d	BLAZE_FLAGS
	m	()Z	l	isFireActive
	m	(Z)V	r	setFireActive
c	awg$a	net/minecraft/entity/mob/BlazeEntity$ShootFireballGoal
	f	Lawg;	a	blaze
	m	(Lawg;)V	<init>	<init>
		p	1	blaze	blaze
c	awh	net/minecraft/entity/mob/CaveSpiderEntity
c	awi	net/minecraft/entity/mob/CreeperEntity
	f	Lsb;	b	FUSE_SPEED
	f	I	bA	headsDropped
	f	I	bw	lastFuseTime
	f	I	bx	currentFuseTime
	f	I	by	fuseTime
	f	I	bz	explosionRadius
	f	Lsb;	c	CHARGED
	f	Lsb;	d	IGNITED
	m	(I)V	a	setFuseSpeed
		p	1	fuseSpeed	fuseSpeed
	m	()Z	eq	getIgnited
	m	()V	er	setIgnited
	m	()Z	es	shouldDropHead
	m	()V	et	onHeadDropped
	m	()V	eu	explode
	m	()V	ev	spawnEffectsCloud
	m	()I	l	getFuseSpeed
	m	(F)F	v	getClientFuseTime
		p	1	timeDelta	timeDelta
c	awj	net/minecraft/entity/CrossbowUser
	m	(Lakz;Lben;Layy;F)V	a	shoot
		p	1	target	target
		p	2	crossbow	crossbow
		p	3	projectile	projectile
		p	4	multiShotSpray	multiShotSpray
	m	(Z)V	a	setCharging
		p	1	charging	charging
	m	()Lakz;	w	getTarget
c	awk	net/minecraft/entity/mob/DrownedEntity
	f	Lart;	b	waterNavigation
	f	Z	bw	targetingUnderwater
	f	Larq;	c	landNavigation
	m	(Lbjx;Lfk;)Z	a	isValidSpawnDepth
		p	0	world	world
		p	1	pos	pos
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	eu	hasFinishedCurrentPath
	m	()Z	ez	isTargetingUnderwater
	m	(Z)V	r	setTargetingUnderwater
		p	1	targetingUnderwater	targetingUnderwater
c	awk$a	net/minecraft/entity/mob/DrownedEntity$DrownedAttackGoal
	f	Lawk;	d	drowned
	m	(Lawk;DZ)V	<init>	<init>
		p	1	drowned	drowned
		p	2	speed	speed
c	awk$b	net/minecraft/entity/mob/DrownedEntity$LeaveWaterGoal
	f	Lawk;	g	drowned
	m	(Lawk;D)V	<init>	<init>
		p	1	drowned	drowned
		p	2	speed	speed
c	awk$c	net/minecraft/entity/mob/DrownedEntity$WanderAroundOnSurfaceGoal
	f	Lalg;	a	mob
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	D	e	speed
	f	Lbjw;	f	world
	m	(Lalg;D)V	<init>	<init>
		p	1	mob	mob
		p	2	speed	speed
	m	()Lcvl;	g	getWanderTarget
c	awk$d	net/minecraft/entity/mob/DrownedEntity$DrownedMoveControl
	f	Lawk;	i	drowned
	m	(Lawk;)V	<init>	<init>
		p	1	drowned	drowned
c	awk$e	net/minecraft/entity/mob/DrownedEntity$TargetAboveWaterGoal
	f	Lawk;	a	drowned
	f	D	b	speed
	f	I	c	minY
	f	Z	d	foundTarget
	m	(Lawk;DI)V	<init>	<init>
		p	1	drowned	drowned
		p	2	speed	speed
		p	4	minY	minY
c	awk$f	net/minecraft/entity/mob/DrownedEntity$TridentAttackGoal
	f	Lawk;	a	drowned
c	awl	net/minecraft/entity/mob/ElderGuardianEntity
c	awm	net/minecraft/entity/mob/EndermanEntity
	f	Ljava/util/UUID;	b	ATTACKING_SPEED_BOOST_UUID
	f	I	bA	ageWhenTargetSet
	f	Lsb;	bw	ANGRY
	f	Ljava/util/function/Predicate;	by	PLAYER_ENDERMITE_PREDICATE
	f	I	bz	lastAngrySoundAge
	f	Lals;	c	ATTACKING_SPEED_BOOST
	f	Lsb;	d	CARRIED_BLOCK
	m	(Lakq;)Z	a	teleportTo
	m	(Lbyj;)V	b	setCarriedBlock
	m	()Z	eq	teleportRandomly
	m	()Lbyj;	er	getCarriedBlock
	m	()Z	es	isAngry
	m	(Layj;)Z	f	isPlayerStaring
		p	1	player	player
	m	()V	l	playAngrySound
	m	(DDD)Z	o	teleport
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	awm$a	net/minecraft/entity/mob/EndermanEntity$ChasePlayerGoal
	f	Lawm;	a	enderman
	m	(Lawm;)V	<init>	<init>
		p	1	enderman	enderman
c	awm$b	net/minecraft/entity/mob/EndermanEntity$PlaceBlockGoal
	f	Lawm;	a	enderman
	m	(Lawm;)V	<init>	<init>
		p	1	enderman	enderman
c	awm$c	net/minecraft/entity/mob/EndermanEntity$TeleportTowardsPlayerGoal
	f	Lawm;	i	enderman
	f	Layj;	j	targetPlayer
	f	I	k	lookAtPlayerWarmup
	f	I	l	ticksSinceUnseenTeleport
	f	Lask;	m	staringPlayerPredicate
	f	Lask;	n	validTargetPredicate
	m	(Lawm;)V	<init>	<init>
		p	1	enderman	enderman
	m	(Lawm;Lakz;)Z	a	method_18449
		p	1	playerEntity	playerEntity
c	awm$d	net/minecraft/entity/mob/EndermanEntity$PickUpBlockGoal
	f	Lawm;	a	enderman
	m	(Lawm;)V	<init>	<init>
		p	1	enderman	enderman
c	awn	net/minecraft/entity/mob/EndermiteEntity
	f	I	b	lifeTime
	f	Z	c	playerSpawned
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	l	isPlayerSpawned
	m	(Z)V	r	setPlayerSpawned
		p	1	playerSpawned	playerSpawned
c	awo	net/minecraft/entity/mob/Monster
c	awp	net/minecraft/entity/mob/EvokerEntity
	f	Latv;	bw	wololoTarget
	m	(Latv;)V	a	setWololoTarget
		p	1	sheep	sheep
	m	()Latv;	eK	getWololoTarget
c	awp$a	net/minecraft/entity/mob/EvokerEntity$ConjureFangsGoal
	m	(DDDDFI)V	a	conjureFangs
		p	1	x	x
		p	3	z	z
		p	5	maxY	maxY
		p	7	y	y
		p	10	warmup	warmup
c	awp$b	net/minecraft/entity/mob/EvokerEntity$LookAtTargetOrWololoTarget
c	awp$c	net/minecraft/entity/mob/EvokerEntity$SummonVexGoal
	f	Lask;	e	closeVexPredicate
c	awp$d	net/minecraft/entity/mob/EvokerEntity$WololoGoal
	f	Lask;	e	purpleSheepPredicate
c	awq	net/minecraft/entity/mob/GhastEntity
	f	Lsb;	b	SHOOTING
	f	I	c	fireballStrength
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()I	eo	getFireballStrength
	m	()Z	l	isShooting
	m	(Z)V	r	setShooting
		p	1	shooting	shooting
c	awq$a	net/minecraft/entity/mob/GhastEntity$LookAtTargetGoal
	f	Lawq;	a	ghast
	m	(Lawq;)V	<init>	<init>
		p	1	ghast	ghast
c	awq$b	net/minecraft/entity/mob/GhastEntity$GhastMoveControl
	f	Lawq;	i	ghast
c	awq$c	net/minecraft/entity/mob/GhastEntity$ShootFireballGoal
	f	I	a	cooldown
	f	Lawq;	b	ghast
	m	(Lawq;)V	<init>	<init>
		p	1	ghast	ghast
c	awq$d	net/minecraft/entity/mob/GhastEntity$FlyRandomlyGoal
	f	Lawq;	a	ghast
	m	(Lawq;)V	<init>	<init>
		p	1	ghast	ghast
c	awr	net/minecraft/entity/mob/GiantEntity
c	aws	net/minecraft/entity/mob/GuardianEntity
	f	Lsb;	b	SPIKES_RETRACTED
	f	Lsb;	bA	BEAM_TARGET_ID
	f	Lakz;	bB	cachedBeamTarget
	f	I	bC	beamTicks
	f	Z	bD	flopping
	f	F	bw	spikesExtensionRate
	f	F	bx	tailAngle
	f	F	by	prevTailAngle
	f	Laqd;	bz	wanderGoal
	f	F	c	spikesExtension
	f	F	d	prevSpikesExtension
	m	(I)V	a	setBeamTarget
		p	1	progress	progress
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Laah;	er	getFlopSound
	m	()Z	es	areSpikesRetracted
	m	()Z	et	hasBeamTarget
	m	()Lakz;	eu	getBeamTarget
	m	()I	l	getWarmupTime
	m	(Z)V	r	setSpikesRetracted
		p	1	retracted	retracted
	m	(F)F	v	getSpikesExtension
		p	1	tickDelta	tickDelta
	m	(F)F	w	getTailAngle
		p	1	tickDelta	tickDelta
	m	(F)F	x	getBeamProgress
		p	1	tickDelta	tickDelta
c	aws$a	net/minecraft/entity/mob/GuardianEntity$FireBeamGoal
	f	Laws;	a	guardian
	f	I	b	beamTicks
	f	Z	c	elder
	m	(Laws;)V	<init>	<init>
		p	1	guardian	guardian
c	aws$b	net/minecraft/entity/mob/GuardianEntity$GuardianTargetPredicate
	f	Laws;	a	owner
	m	(Laws;)V	<init>	<init>
		p	1	owner	owner
	m	(Lakz;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	aws$c	net/minecraft/entity/mob/GuardianEntity$GuardianMoveControl
	f	Laws;	i	guardian
	m	(Laws;)V	<init>	<init>
		p	1	guardian	guardian
c	awt	net/minecraft/entity/mob/HuskEntity
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
c	awu	net/minecraft/entity/mob/IllusionerEntity
c	awu$a	net/minecraft/entity/mob/IllusionerEntity$BlindTargetGoal
	f	I	e	targetId
c	awu$b	net/minecraft/entity/mob/IllusionerEntity$GiveInvisibilityGoal
c	awv	net/minecraft/entity/mob/MagmaCubeEntity
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canMagmaCubeSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
c	aww	net/minecraft/entity/mob/HostileEntity
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lbjx;Lfk;Ljava/util/Random;)Z	a	isSpawnDark
		p	0	world	world
		p	1	pos	pos
		p	2	random	random
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawnInDark
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	d	canSpawnIgnoreLightLevel
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	(Layj;)Z	e	isAngryAt
		p	1	player	player
	m	()V	ew	updateDespawnCounter
c	awx	net/minecraft/entity/mob/PatrolEntity
	f	Lfk;	b	patrolTarget
	f	Z	c	patrolLeader
	f	Z	d	patrolling
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	es	canLead
	m	()Lfk;	et	getPatrolTarget
	m	()Z	eu	hasPatrolTarget
	m	()Z	ev	isPatrolLeader
	m	()Z	ex	hasNoRaid
	m	()V	ey	setRandomPatrolTarget
	m	()Z	ez	isRaidCenterSet
	m	(Lfk;)V	g	setPatrolTarget
		p	1	targetPos	targetPos
	m	(Z)V	r	setPatrolLeader
		p	1	patrolLeader	patrolLeader
c	awx$a	net/minecraft/entity/mob/PatrolEntity$PatrolGoal
	f	Lawx;	a	actor
	f	D	b	leaderSpeed
	f	D	c	fellowSpeed
	m	(Lawx;DD)V	<init>	<init>
		p	1	actor	actor
		p	2	leaderSpeed	leaderSpeed
		p	4	fellowSpeed	fellowSpeed
	m	()Z	h	wander
c	awy	net/minecraft/entity/mob/PhantomEntity
	f	Lsb;	b	SIZE
	f	Lawy$a;	bw	movementType
	m	(I)V	a	setPhantomSize
	m	()V	ep	onSizeChanged
	m	()I	l	getPhantomSize
c	awy$a	net/minecraft/entity/mob/PhantomEntity$PhantomMovementType
c	awy$b	net/minecraft/entity/mob/PhantomEntity$FindTargetGoal
	f	Lask;	b	PLAYERS_IN_RANGE_PREDICATE
	f	I	c	delay
c	awy$c	net/minecraft/entity/mob/PhantomEntity$StartAttackGoal
c	awy$d	net/minecraft/entity/mob/PhantomEntity$PhantomBodyControl
c	awy$e	net/minecraft/entity/mob/PhantomEntity$CircleMovementGoal
c	awy$f	net/minecraft/entity/mob/PhantomEntity$PhantomLookControl
c	awy$g	net/minecraft/entity/mob/PhantomEntity$PhantomMoveControl
	m	(Lawy;Lala;)V	<init>	<init>
		p	2	owner	owner
c	awy$h	net/minecraft/entity/mob/PhantomEntity$MovementGoal
c	awy$i	net/minecraft/entity/mob/PhantomEntity$SwoopMovementGoal
c	awz	net/minecraft/entity/mob/ZombiePigmanEntity
	f	Ljava/util/UUID;	b	ATTACKING_SPEED_BOOST_UUID
	f	I	bw	anger
	f	I	bx	angrySoundDelay
	f	Ljava/util/UUID;	by	angerTarget
	f	Lals;	c	ATTACKING_SPEED_BOOST
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()Z	eA	isAngry
c	awz$a	net/minecraft/entity/mob/ZombiePigmanEntity$FollowPlayerIfAngryGoal
	m	(Lawz;)V	<init>	<init>
		p	1	pigman	pigman
c	awz$b	net/minecraft/entity/mob/ZombiePigmanEntity$AvoidZombiesGoal
	m	(Lawz;)V	<init>	<init>
		p	1	pigman	pigman
c	ax	net/minecraft/advancement/criterion/EnterBlockCriterion
	f	Lsm;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbph;	a	getBlock
		p	0	obj	obj
	m	(Lbph;Ljava/lang/String;)V	a	method_22464
		p	1	name	name
	m	(Lxe;Lbyj;)V	a	trigger
		p	1	player	player
		p	2	state	state
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lax$a;	b	conditionsFromJson
c	ax$a	net/minecraft/advancement/criterion/EnterBlockCriterion$Conditions
	f	Lbph;	a	block
	f	Lcc;	b	state
	m	(Lbph;Lcc;)V	<init>	<init>
		p	1	block	block
		p	2	state	state
	m	(Lbyj;)Z	a	matches
		p	1	state	state
	m	(Lbph;)Lax$a;	a	block
		p	0	block	block
c	axa	net/minecraft/entity/mob/PillagerEntity
	f	Lsb;	b	CHARGING
	f	Lajq;	bw	inventory
	m	(Lcvl;F)Le;	a	getProjectileVelocity
	m	()Z	er	isCharging
c	axb	net/minecraft/entity/ai/RangedAttackMob
	m	(Lakz;F)V	a	attack
		p	1	target	target
c	axc	net/minecraft/entity/mob/RavagerEntity
	f	Ljava/util/function/Predicate;	b	IS_NOT_RAVAGER
	f	I	bw	attackTick
	f	I	bx	stunTick
	f	I	by	roarTick
	m	(Lakq;)V	a	knockBack
		p	1	entity	entity
	m	()I	eA	getRoarTick
	m	()V	eB	spawnStunnedParticles
	m	()V	eC	roar
	m	()I	er	getStunTick
	m	()I	l	getAttackTick
c	axc$a	net/minecraft/entity/mob/RavagerEntity$AttackGoal
c	axc$b	net/minecraft/entity/mob/RavagerEntity$Navigation
	m	(Lala;Lbjw;)V	<init>	<init>
		p	1	world	world
c	axc$c	net/minecraft/entity/mob/RavagerEntity$PathNodeMaker
c	axd	net/minecraft/entity/attribute/EntityAttributes
	f	Lalq;	a	MAX_HEALTH
	f	Lalq;	b	FOLLOW_RANGE
	f	Lalq;	c	KNOCKBACK_RESISTANCE
	f	Lalq;	d	MOVEMENT_SPEED
	f	Lalq;	e	FLYING_SPEED
	f	Lalq;	f	ATTACK_DAMAGE
	f	Lalq;	g	ATTACK_KNOCKBACK
	f	Lalq;	h	ATTACK_SPEED
	f	Lalq;	i	ARMOR
	f	Lalq;	j	ARMOR_TOUGHNESS
	f	Lalq;	k	LUCK
	f	Lorg/apache/logging/log4j/Logger;	l	LOGGER
	m	(Lals;)Ljt;	a	toTag
		p	0	modifier	modifier
	m	(Lalu;)Ljz;	a	toTag
		p	0	container	container
	m	(Lalr;Ljt;)V	a	fromTag
		p	0	instance	instance
		p	1	tag	tag
	m	(Ljt;)Lals;	a	createFromTag
		p	0	tag	tag
	m	(Lalr;)Ljt;	a	toTag
		p	0	instance	instance
	m	(Lalu;Ljz;)V	a	fromTag
		p	0	container	container
		p	1	tag	tag
c	axe	net/minecraft/entity/mob/ShulkerEntity
	f	Lsb;	b	ATTACHED_FACE
	f	Lsb;	bw	COLOR
	f	Ljava/util/UUID;	bx	ATTR_COVERED_ARMOR_BONUS_UUID
	f	Lals;	by	ATTR_COVERED_ARMOR_BONUS
	f	Lsb;	c	ATTACHED_BLOCK
	f	Lsb;	d	PEEK_AMOUNT
	m	(I)V	a	setPeekAmount
	m	()Lfp;	eq	getAttachedFace
	m	()Lfk;	er	getAttachedBlock
	m	()I	es	getPeekAmount
	m	()Lbdj;	ex	getColor
	m	(Lfk;)V	g	setAttachedBlock
c	axe$a	net/minecraft/entity/mob/ShulkerEntity$ShootBulletGoal
	f	I	b	counter
c	axe$b	net/minecraft/entity/mob/ShulkerEntity$ShulkerBodyControl
c	axe$c	net/minecraft/entity/mob/ShulkerEntity$SearchForTargetGoal
	m	(Laxe;)V	<init>	<init>
		p	1	shulker	shulker
	m	(Lakz;)Z	a	method_7129
		p	0	entity	entity
c	axe$d	net/minecraft/entity/mob/ShulkerEntity$SearchForPlayerGoal
	m	(Laxe;Laxe;)V	<init>	<init>
		p	2	shulker	shulker
c	axe$e	net/minecraft/entity/mob/ShulkerEntity$PeekGoal
	f	I	b	counter
c	axf	net/minecraft/entity/mob/SilverfishEntity
	f	Laxf$b;	b	callForHelpGoal
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
c	axf$a	net/minecraft/entity/mob/SilverfishEntity$WanderAndInfestGoal
	f	Lfp;	h	direction
	f	Z	i	canInfest
	m	(Laxf;)V	<init>	<init>
		p	1	silverfish	silverfish
c	axf$b	net/minecraft/entity/mob/SilverfishEntity$CallForHelpGoal
	f	Laxf;	a	silverfish
	f	I	b	delay
	m	(Laxf;)V	<init>	<init>
		p	1	silverfish	silverfish
	m	()V	g	onHurt
c	axg	net/minecraft/entity/mob/SkeletonEntity
c	axh	net/minecraft/entity/mob/SlimeEntity
	f	F	b	targetStretch
	f	Lsb;	bw	SLIME_SIZE
	f	Z	bx	onGroundLastTick
	f	F	c	stretch
	f	F	d	lastStretch
	m	(IZ)V	a	setSize
		p	1	size	size
		p	2	heal	heal
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	c	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
	m	()I	eo	getTicksUntilNextJump
	m	()V	ep	updateStretch
	m	()Z	eq	isBig
	m	()F	er	getDamageAmount
	m	()Laah;	es	getSquishSound
	m	()Laah;	et	getJumpSound
	m	()I	eu	getSize
	m	()Z	ev	isSmall
	m	()Z	ew	makesJumpSound
	m	(Lakz;)V	i	damage
		p	1	target	target
	m	()Lgt;	l	getParticles
c	axh$a	net/minecraft/entity/mob/SlimeEntity$FaceTowardTargetGoal
	f	Laxh;	a	slime
	f	I	b	ticksLeft
	m	(Laxh;)V	<init>	<init>
		p	1	slime	slime
c	axh$b	net/minecraft/entity/mob/SlimeEntity$SwimmingGoal
	f	Laxh;	a	slime
	m	(Laxh;)V	<init>	<init>
		p	1	slime	slime
c	axh$c	net/minecraft/entity/mob/SlimeEntity$MoveGoal
	f	Laxh;	a	slime
	m	(Laxh;)V	<init>	<init>
		p	1	slime	slime
c	axh$d	net/minecraft/entity/mob/SlimeEntity$SlimeMoveControl
	f	F	i	targetYaw
	f	I	j	ticksUntilJump
	f	Laxh;	k	slime
	f	Z	l	jumpOften
	m	(Laxh;)V	<init>	<init>
		p	1	slime	slime
	m	(D)V	a	move
		p	1	speed	speed
	m	(FZ)V	a	look
		p	1	targetYaw	targetYaw
		p	2	jumpOften	jumpOften
c	axh$e	net/minecraft/entity/mob/SlimeEntity$RandomLookGoal
	f	Laxh;	a	slime
	f	F	b	targetYaw
	f	I	c	timer
	m	(Laxh;)V	<init>	<init>
		p	1	slime	slime
c	axi	net/minecraft/entity/mob/SpellcastingIllagerEntity
	f	I	b	spellTicks
	f	Lsb;	bw	SPELL
	f	Laxi$a;	bx	spell
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Laxi$a;)V	a	setSpell
		p	1	spell	spell
	m	()Z	eA	isSpellcasting
	m	()Laxi$a;	eB	getSpell
	m	()I	eC	getSpellTicks
	m	()Laah;	er	getCastSpellSound
c	axi$a	net/minecraft/entity/mob/SpellcastingIllagerEntity$Spell
	f	I	g	id
	f	[D	h	particleVelocity
	m	(Ljava/lang/String;IIDDD)V	<init>	<init>
		p	3	id	id
		p	4	particleVelocityX	particleVelocityX
		p	6	particleVelocityY	particleVelocityY
		p	8	particleVelocityZ	particleVelocityZ
	m	(I)Laxi$a;	a	byId
		p	0	id	id
c	axi$b	net/minecraft/entity/mob/SpellcastingIllagerEntity$LookAtTargetGoal
c	axi$c	net/minecraft/entity/mob/SpellcastingIllagerEntity$CastSpellGoal
	f	I	b	spellCooldown
	f	I	c	startTime
	m	()I	g	getSpellTicks
	m	()I	h	startTimeDelay
	m	()V	j	castSpell
	m	()Laah;	k	getSoundPrepare
	m	()Laxi$a;	l	getSpell
	m	()I	m	getInitialCooldown
	m	()V	start	start
	m	()V	tick	tick
c	axj	net/minecraft/entity/mob/SpiderEntity
	f	Lsb;	b	SPIDER_FLAGS
	m	()Z	l	getCanClimb
	m	(Z)V	r	setCanClimb
c	axj$a	net/minecraft/entity/mob/SpiderEntity$AttackGoal
	m	(Laxj;)V	<init>	<init>
		p	1	spider	spider
c	axj$b	net/minecraft/entity/mob/SpiderEntity$SpawnEffectData
	f	Laki;	a	effect
	m	(Ljava/util/Random;)V	a	setEffect
		p	1	random	random
c	axj$c	net/minecraft/entity/mob/SpiderEntity$FollowTargetGoal
	m	(Laxj;Ljava/lang/Class;)V	<init>	<init>
		p	1	spider	spider
		p	2	targetEntityClass	targetEntityClass
c	axk	net/minecraft/entity/mob/StrayEntity
	m	(Laku;Lbjx;Lalc;Lfk;Ljava/util/Random;)Z	b	canSpawn
		p	0	type	type
		p	1	world	world
		p	2	spawnType	spawnType
		p	3	pos	pos
		p	4	random	random
c	axl	net/minecraft/entity/mob/VexEntity
	f	Lsb;	b	VEX_FLAGS
	f	Z	bw	alive
	f	I	bx	lifeTicks
	f	Lala;	c	owner
	f	Lfk;	d	bounds
	m	(IZ)V	a	setVexFlag
		p	1	mask	mask
		p	2	value	value
	m	(Lala;)V	a	setOwner
		p	1	owner	owner
	m	(I)V	a	setLifeTicks
		p	1	lifeTicks	lifeTicks
	m	(I)Z	b	areFlagsSet
		p	1	mask	mask
	m	()Lfk;	eq	getBounds
	m	()Z	er	isCharging
	m	(Lfk;)V	g	setBounds
		p	1	pos	pos
	m	()Lala;	l	getOwner
	m	(Z)V	r	setCharging
		p	1	charging	charging
c	axl$a	net/minecraft/entity/mob/VexEntity$ChargeTargetGoal
c	axl$b	net/minecraft/entity/mob/VexEntity$TrackOwnerTargetGoal
	f	Lask;	b	TRACK_OWNER_PREDICATE
	m	(Laxl;Lalg;)V	<init>	<init>
		p	2	mob	mob
c	axl$c	net/minecraft/entity/mob/VexEntity$VexMoveControl
	m	(Laxl;Laxl;)V	<init>	<init>
		p	2	owner	owner
c	axl$d	net/minecraft/entity/mob/VexEntity$LookAtTargetGoal
c	axm	net/minecraft/entity/mob/VindicatorEntity
	f	Ljava/util/function/Predicate;	b	DIFFICULTY_ALLOWS_DOOR_BREAKING_PREDICATE
	f	Z	bw	isJohnny
c	axm$a	net/minecraft/entity/mob/VindicatorEntity$BreakDoorGoal
c	axm$b	net/minecraft/entity/mob/VindicatorEntity$FollowEntityGoal
	m	(Laxm;)V	<init>	<init>
		p	1	vindicator	vindicator
c	axm$c	net/minecraft/entity/mob/VindicatorEntity$AttackGoal
	m	(Laxm;Laxm;)V	<init>	<init>
		p	2	vindicator	vindicator
c	axn	net/minecraft/entity/mob/WitchEntity
	f	Ljava/util/UUID;	b	DRINKING_SPEED_PENALTY_MODIFIER_ID
	f	Larb;	bA	attackPlayerGoal
	f	Lals;	bw	DRINKING_SPEED_PENALTY_MODIFIER
	f	Lsb;	bx	DRINKING
	f	I	by	drinkTimeLeft
	f	Larc;	bz	raidGoal
	m	()Z	l	isDrinking
	m	(Z)V	t	setDrinking
		p	1	drinking	drinking
c	axo	net/minecraft/entity/mob/WitherSkeletonEntity
c	axp	net/minecraft/entity/mob/ZombieEntity
	f	Ljava/util/UUID;	b	BABY_SPEED_ID
	f	Laor;	bA	breakDoorsGoal
	f	Z	bB	canBreakDoors
	f	I	bC	inWaterTime
	f	I	bD	ticksUntilWaterConversion
	f	Lsb;	bw	BABY
	f	Lsb;	by	CONVERTING_IN_WATER
	f	Ljava/util/function/Predicate;	bz	DOOR_BREAK_DIFFICULTY_CHECKER
	f	Lals;	c	BABY_SPEED_BONUS
	f	Lalq;	d	SPAWN_REINFORCEMENTS
	m	(Lbjw;)V	<init>	<init>
		p	1	world	world
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	()Z	K_	burnsInDaylight
	m	(Laji;)Z	a	method_20009
		p	0	difficulty	difficulty
	m	(I)V	a	setTicksUntilWaterConversion
		p	1	ticksUntilWaterConversion	ticksUntilWaterConversion
	m	(Laku;)V	b	convertTo
		p	1	entityType	entityType
	m	()Z	eq	shouldBreakDoors
	m	()Laah;	er	getStepSound
	m	()Lben;	es	getSkull
	m	()Z	et	canConvertInWater
	m	()V	ev	convertInWater
	m	()Z	ex	isConvertingInWater
	m	()Z	ey	canBreakDoors
	m	()V	l	initCustomGoals
	m	(Z)V	s	setCanBreakDoors
		p	1	canBreakDoors	canBreakDoors
	m	(Z)V	t	setBaby
		p	1	baby	baby
	m	(F)V	v	applyAttributeModifiers
		p	1	chanceMultiplier	chanceMultiplier
c	axp$a	net/minecraft/entity/mob/ZombieEntity$DestroyEggGoal
	m	(Laxp;Lalg;DI)V	<init>	<init>
		p	2	mob	mob
		p	3	speed	speed
		p	5	maxYDifference	maxYDifference
c	axp$b	net/minecraft/entity/mob/ZombieEntity$Data
	f	Z	a	baby
	m	(Laxp;Z)V	<init>	<init>
		p	2	baby	baby
c	axq	net/minecraft/entity/mob/ZombieVillagerEntity
	f	Lsb;	b	CONVERTING
	f	I	bA	xp
	f	I	bw	conversionTimer
	f	Ljava/util/UUID;	bx	converter
	f	Ljt;	bz	offerData
	f	Lsb;	c	VILLAGER_DATA
	m	(Lxd;)V	a	finishConversion
		p	1	world	world
	m	(I)V	a	setXp
		p	1	xp	xp
	m	(Ljava/util/UUID;I)V	a	setConverting
		p	1	uuid	uuid
		p	2	delay	delay
	m	(Laxx;)V	a	setVillagerData
		p	1	data	data
	m	()I	eC	getConversionRate
	m	()Z	ez	isConverting
	m	(Ljt;)V	g	setOfferData
		p	1	offerTag	offerTag
c	axs	net/minecraft/entity/passive/AbstractTraderEntity
	f	Lbja;	bw	offers
	f	Lsb;	bx	HEAD_ROLLING_TIME_LEFT
	f	Layj;	by	customer
	f	Lajq;	bz	inventory
	m	(Lbja;[Laya$f;I)V	a	fillRecipesFromPool
		p	1	recipeList	recipeList
		p	2	pool	pool
		p	3	count	count
	m	(Lgt;)V	a	produceParticles
		p	1	parameters	parameters
	m	(Lbiz;)V	b	afterUsing
		p	1	offer	offer
	m	()V	eC	fillRecipes
	m	()I	eq	getHeadRollingTimeLeft
	m	()Z	et	hasCustomer
	m	()V	ex	playCelebrateSound
	m	()V	ey	resetCustomer
	m	()Lajq;	ez	getInventory
	m	(Z)Laah;	r	getTradingSound
		p	1	sold	sold
	m	(I)V	s	setHeadRollingTimeLeft
		p	1	ticks	ticks
c	axt	net/minecraft/world/gen/CatSpawner
	f	I	a	ticksUntilNextSpawn
	m	(Lbjw;Lfk;)I	a	spawnInSwampHut
		p	1	world	world
		p	2	pos	pos
	m	(Lxd;Lfk;)I	a	spawnInHouse
		p	1	world	world
		p	2	pos	pos
	m	(Lfk;Lbjw;)I	a	spawn
		p	1	pos	pos
		p	2	world	world
	m	(Lxd;ZZ)I	a	spawn
		p	2	spawnMonsters	spawnMonsters
		p	3	spawnAnimals	spawnAnimals
c	axu	net/minecraft/village/SimpleTrader
	f	Lbbp;	a	traderInventory
	f	Layj;	b	player
	f	Lbja;	c	recipeList
	f	I	d	experience
c	axv	net/minecraft/entity/Npc
c	axw	net/minecraft/entity/passive/VillagerEntity
	f	Ljava/util/Set;	bA	GATHERABLE_ITEMS
	f	I	bB	levelUpTimer
	f	Z	bC	levellingUp
	f	Layj;	bD	lastCustomer
	f	B	bF	foodLevel
	f	Lari;	bG	gossip
	f	J	bH	gossipStartTime
	f	J	bI	lastGossipDecayTime
	f	I	bJ	experience
	f	J	bK	lastRestockTime
	f	I	bL	restocksToday
	f	Lcom/google/common/collect/ImmutableList;	bN	MEMORY_MODULES
	f	Lcom/google/common/collect/ImmutableList;	bO	SENSORS
	f	Ljava/util/Map;	bx	ITEM_FOOD_VALUES
	f	Ljava/util/Map;	by	POINTS_OF_INTEREST
	f	Lsb;	bz	VILLAGER_DATA
	m	(Laku;Lbjw;Layb;)V	<init>	<init>
		p	1	entityType	entityType
		p	2	world	world
		p	3	type	type
	m	(J)Z	a	canSummonGolem
		p	1	time	time
	m	(JI)V	a	summonGolem
		p	1	time	time
		p	3	requiredVillagerCount	requiredVillagerCount
	m	(Lakq;)V	a	notifyDeath
		p	1	killer	killer
	m	(Lxd;)V	a	reinitializeBrain
		p	1	world	world
	m	(Laxx;)V	a	setVillagerData
		p	1	villagerData	villagerData
	m	(Laxw;J)V	a	talkWithVillager
		p	2	time	time
	m	(Larl;)V	a	releaseTicketFor
	m	(Lalp;)V	a	initBrain
		p	1	brain	brain
	m	(Lako;)Laxw;	b	createChild
	m	(J)V	b	setGolemLastSeenTime
		p	1	time	time
	m	(Lbja;)V	b	setOffers
		p	1	offers	offers
	m	(Lbei;)Z	b	canGather
		p	1	item	item
	m	(J)Z	c	hasSeenGolemRecently
		p	1	currentTime	currentTime
	m	(J)Z	d	hasRecentlyWorkedAndSlept
		p	1	worldTime	worldTime
	m	()V	eE	restock
	m	()Z	eF	shouldRestock
	m	()V	eG	playWorkSound
	m	()Z	eI	isReadyToBreed
	m	()V	eJ	eatForBreeding
	m	()Z	eK	wantsToStartBreeding
	m	()Z	eL	canBreed
	m	()Z	eM	hasSeedToPlant
	m	()V	eO	sayNo
	m	()V	eP	clearCurrentBonus
	m	()Z	eQ	needRestock
	m	()Z	eR	canRestock
	m	()Z	eU	lacksFood
	m	()V	eV	consumeAvailableFood
	m	()Z	eW	canLevelUp
	m	()V	eX	levelUp
	m	()I	eY	getAvailableFood
	m	()V	eZ	craftBread
	m	(Layj;)I	f	getReputation
		p	1	player	player
	m	()V	fa	decayGossip
	m	()Latl;	fb	spawnIronGolem
	m	()V	fc	clearDailyRestockCount
	m	(Layj;)V	g	beginTradeWith
		p	1	customer	customer
	m	(Layj;)V	h	prepareRecipesFor
		p	1	player	player
	m	(I)V	u	setExperience
		p	1	amount	amount
	m	(I)V	v	depleteFood
		p	1	amount	amount
c	axx	net/minecraft/village/VillagerData
	f	[I	a	LEVEL_BASE_EXPERIENCE
	f	Layb;	b	type
	f	Laxz;	c	profession
	f	I	d	level
	m	(Layb;Laxz;I)V	<init>	<init>
		p	3	level	level
	m	(Laxz;)Laxx;	a	withProfession
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object;	a	serialize
		p	1	ops	ops
	m	()Layb;	a	getType
	m	(Layb;)Laxx;	a	withType
	m	(I)Laxx;	a	withLevel
		p	1	level	level
	m	()Laxz;	b	getProfession
	m	(I)I	b	getLowerLevelExperience
		p	0	level	level
	m	()I	c	getLevel
	m	(I)I	c	getUpperLevelExperience
		p	0	level	level
	m	(I)Z	d	canLevelUp
		p	0	level	level
c	axy	net/minecraft/village/VillagerDataContainer
	m	()Laxx;	eA	getVillagerData
c	axz	net/minecraft/village/VillagerProfession
	f	Ljava/lang/String;	p	id
	f	Lasu;	q	workStation
	f	Lcom/google/common/collect/ImmutableSet;	r	gatherableItems
	f	Lcom/google/common/collect/ImmutableSet;	s	secondaryJobSites
	f	Laah;	t	workSound
	m	(Ljava/lang/String;Lasu;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Laah;)V	<init>	<init>
		p	1	id	id
		p	2	workStation	workStation
		p	3	gatherableItems	gatherableItems
		p	4	secondaryJobSites	secondaryJobSites
		p	5	workSound	workSound
	m	(Ljava/lang/String;Lasu;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Laah;)Laxz;	a	register
		p	0	id	id
		p	1	workStation	workStation
		p	2	gatherableItems	gatherableItems
		p	3	secondaryJobSites	secondaryJobSites
		p	4	workSound	workSound
	m	(Ljava/lang/String;Lasu;Laah;)Laxz;	a	register
		p	0	id	id
		p	1	workStation	workStation
		p	2	workSound	workSound
	m	()Lasu;	b	getWorkStation
	m	()Lcom/google/common/collect/ImmutableSet;	c	getGatherableItems
	m	()Lcom/google/common/collect/ImmutableSet;	d	getSecondaryJobSites
	m	()Laah;	e	getWorkSound
c	ay	net/minecraft/predicate/entity/EntityEquipmentPredicate
	f	Lay;	a	ANY
	f	Lbj;	c	head
	f	Lbj;	d	chest
	f	Lbj;	e	legs
	f	Lbj;	f	feet
	f	Lbj;	g	mainhand
	f	Lbj;	h	offhand
	m	(Lbj;Lbj;Lbj;Lbj;Lbj;Lbj;)V	<init>	<init>
		p	1	head	head
		p	2	chest	chest
		p	3	legs	legs
		p	4	feet	feet
		p	5	mainhand	mainhand
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Lay;	a	deserialize
	m	(Lakq;)Z	a	test
c	aya	net/minecraft/village/TradeOffers
	f	Ljava/util/Map;	a	PROFESSION_TO_LEVELED_TRADE
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	WANDERING_TRADER_TRADES
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	copyToFastUtilMap
c	aya$a	net/minecraft/village/TradeOffers$SellDyedArmorFactory
	f	Lbei;	a	sell
	f	I	b	price
	f	I	c	maxUses
	f	I	d	experience
	m	(Lbei;III)V	<init>	<init>
		p	2	price	price
		p	3	maxUses	maxUses
		p	4	experience	experience
	m	(Lbei;I)V	<init>	<init>
		p	2	price	price
	m	(Ljava/util/Random;)Lbdk;	a	getDye
c	aya$b	net/minecraft/village/TradeOffers$BuyForOneEmeraldFactory
	f	Lbei;	a	buy
	f	I	b	price
	f	I	c	maxUses
	f	I	d	experience
	f	F	e	multiplier
	m	(Lbjv;III)V	<init>	<init>
		p	2	price	price
		p	3	maxUses	maxUses
		p	4	experience	experience
c	aya$c	net/minecraft/village/TradeOffers$TypeAwareBuyForOneEmeraldFactory
	f	Ljava/util/Map;	a	map
	f	I	b	count
	f	I	c	maxUses
	f	I	d	experience
	m	(IIILjava/util/Map;)V	<init>	<init>
		p	3	experience	experience
c	aya$d	net/minecraft/village/TradeOffers$EnchantBookFactory
	f	I	a	experience
	m	(I)V	<init>	<init>
		p	1	experience	experience
c	aya$e	net/minecraft/village/TradeOffers$SellEnchantedToolFactory
	f	Lben;	a	tool
	f	I	b	basePrice
	f	I	c	maxUses
	f	I	d	experience
	f	F	e	multiplier
	m	(Lbei;III)V	<init>	<init>
		p	2	basePrice	basePrice
		p	3	maxUses	maxUses
		p	4	experience	experience
	m	(Lbei;IIIF)V	<init>	<init>
		p	2	basePrice	basePrice
		p	3	maxUses	maxUses
		p	4	experience	experience
		p	5	multiplier	multiplier
c	aya$f	net/minecraft/village/TradeOffers$Factory
	m	(Lakq;Ljava/util/Random;)Lbiz;	a	create
c	aya$g	net/minecraft/village/TradeOffers$ProcessItemFactory
	f	Lben;	a	secondBuy
	f	I	b	secondCount
	f	I	c	price
	f	Lben;	d	sell
	f	I	e	sellCount
	f	I	f	maxUses
	f	I	g	experience
	f	F	h	multiplier
	m	(Lbjv;IILbei;III)V	<init>	<init>
		p	2	secondCount	secondCount
		p	3	price	price
		p	4	sellItem	sellItem
		p	5	sellCount	sellCount
		p	6	maxUses	maxUses
		p	7	experience	experience
	m	(Lbjv;ILbei;III)V	<init>	<init>
		p	2	secondCount	secondCount
		p	3	sellItem	sellItem
		p	4	sellCount	sellCount
		p	5	maxUses	maxUses
		p	6	experience	experience
c	aya$h	net/minecraft/village/TradeOffers$SellItemFactory
	f	Lben;	a	sell
	f	I	b	price
	f	I	c	count
	f	I	d	maxUses
	f	I	e	experience
	f	F	f	multiplier
	m	(Lben;IIIIF)V	<init>	<init>
		p	2	price	price
		p	3	count	count
		p	4	maxUses	maxUses
		p	5	experience	experience
		p	6	multiplier	multiplier
c	aya$i	net/minecraft/village/TradeOffers$SellSuspiciousStewFactory
	f	Laki;	a	effect
	f	I	b	duration
	f	I	c	experience
	f	F	d	multiplier
	m	(Laki;II)V	<init>	<init>
		p	2	duration	duration
		p	3	experience	experience
c	aya$j	net/minecraft/village/TradeOffers$SellPotionHoldingItemFactory
	f	Lben;	a	sell
	f	I	b	sellCount
	f	I	c	price
	f	I	d	maxUses
	f	I	e	experience
	f	Lbei;	f	secondBuy
	f	I	g	secondCount
	f	F	h	priceMultiplier
	m	(Lbei;ILbei;IIII)V	<init>	<init>
		p	1	arrow	arrow
		p	2	secondCount	secondCount
		p	3	tippedArrow	tippedArrow
		p	4	sellCount	sellCount
		p	5	price	price
		p	6	maxUses	maxUses
		p	7	experience	experience
c	aya$k	net/minecraft/village/TradeOffers$SellMapFactory
	f	I	a	price
	f	Ljava/lang/String;	b	structure
	f	Lcrd$a;	c	iconType
	f	I	d	maxUses
	f	I	e	experience
	m	(ILjava/lang/String;Lcrd$a;II)V	<init>	<init>
		p	1	price	price
		p	2	structure	structure
		p	3	iconType	iconType
		p	4	maxUses	maxUses
		p	5	experience	experience
c	ayb	net/minecraft/village/VillagerType
	f	Layb;	a	DESERT
	f	Layb;	b	JUNGLE
	f	Layb;	c	PLAINS
	f	Layb;	d	SAVANNA
	f	Layb;	e	SNOW
	f	Layb;	f	SWAMP
	f	Layb;	g	TAIGA
	f	Ljava/util/Map;	h	BIOME_TO_TYPE
	m	(Lbkt;)Layb;	a	forBiome
		p	0	biome	biome
	m	(Ljava/lang/String;)Layb;	a	create
		p	0	id	id
c	ayc	net/minecraft/entity/passive/WanderingTraderEntity
	f	Lfk;	bx	wanderTarget
	f	I	by	despawnDelay
	m	()I	eA	getDespawnDelay
	m	()V	eE	tickDespawnDelay
	m	()Lfk;	eF	getWanderTarget
	m	(Lfk;)V	g	setWanderTarget
		p	1	pos	pos
	m	(I)V	u	setDespawnDelay
		p	1	delay	delay
c	ayc$a	net/minecraft/entity/passive/WanderingTraderEntity$WanderToTargetGoal
	f	Layc;	a	trader
	f	D	b	proximityDistance
	f	D	c	speed
	m	(Layc;Layc;DD)V	<init>	<init>
		p	2	trader	trader
		p	3	proximityDistance	proximityDistance
		p	5	speed	speed
	m	(Lfk;D)Z	a	isTooFarFrom
		p	1	pos	pos
		p	2	proximityDistance	proximityDistance
c	ayd	net/minecraft/world/WanderingTraderManager
	f	Ljava/util/Random;	a	random
	f	Lxd;	b	world
	f	I	d	spawnDelay
	f	I	e	spawnChance
	m	(Lxd;)V	<init>	<init>
		p	1	world	world
	m	()V	a	tick
c	ayg	net/minecraft/entity/player/PlayerAbilities
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	allowFlying
	f	Z	d	creativeMode
	f	Z	e	allowModifyWorld
	f	F	f	flySpeed
	f	F	g	walkSpeed
	m	()F	a	getFlySpeed
	m	(Ljt;)V	a	serialize
	m	(F)V	a	setFlySpeed
		p	1	flySpeed	flySpeed
	m	(Ljt;)V	b	deserialize
	m	(F)V	b	setWalkSpeed
		p	1	walkSpeed	walkSpeed
	m	()F	b	getWalkSpeed
c	ayh	net/minecraft/client/options/ChatVisibility
	f	I	e	id
	f	Ljava/lang/String;	f	key
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	key	key
	m	()I	a	getId
	m	(I)Layh;	a	byId
	m	()Ljava/lang/String;	b	getTranslationKey
c	ayi	net/minecraft/entity/player/PlayerInventory
	f	Lfy;	a	main
	f	Lfy;	b	armor
	f	Lfy;	c	offHand
	f	I	d	selectedSlot
	f	Layj;	e	player
	f	Ljava/util/List;	f	combinedInventory
	f	Lben;	g	cursorStack
	f	I	h	changeCount
	m	(Layj;)V	<init>	<init>
		p	1	player	player
	m	(Layl;)V	a	populateRecipeFinder
		p	1	finder	finder
	m	(Lbyj;)F	a	getBlockBreakingSpeed
		p	1	block	block
	m	(Lben;)V	a	addPickBlock
	m	(Laaz;)Z	a	contains
		p	1	tag	tag
	m	(Lben;Lben;)Z	a	canStackAddMore
		p	1	existingStack	existingStack
		p	2	stack	stack
	m	(Layi;)V	a	clone
		p	1	other	other
	m	(Lbjw;Lben;)V	a	offerOrDrop
		p	1	world	world
		p	2	stack	stack
	m	(D)V	a	scrollInHotbar
		p	1	scrollAmount	scrollAmount
	m	(Ljz;)Ljz;	a	serialize
		p	1	tag	tag
	m	(F)V	a	damageArmor
		p	1	armor	armor
	m	(Lben;)I	b	getSlotWithStack
		p	1	stack	stack
	m	(Lben;Lben;)Z	b	areItemsEqual
		p	1	stack1	stack1
		p	2	stack2	stack2
	m	(Lbyj;)Z	b	isUsingEffectiveTool
	m	(Ljz;)V	b	deserialize
		p	1	tag	tag
	m	(I)V	c	swapSlotWithHotbar
		p	1	hotbarSlot	hotbarSlot
	m	(ILben;)Z	c	insertStack
		p	1	slot	slot
		p	2	stack	stack
	m	(ILben;)I	d	addStack
		p	1	slot	slot
		p	2	stack	stack
	m	(Lben;)I	d	getOccupiedSlotWithRoomForStack
		p	1	stack	stack
	m	(I)Z	d	isValidHotbarIndex
		p	0	slot	slot
	m	(Lben;)Z	e	insertStack
		p	1	stack	stack
	m	(I)Lben;	e	getArmorStack
		p	1	slot	slot
	m	(Lben;)V	f	removeOne
		p	1	stack	stack
	m	()Lben;	f	getMainHandStack
	m	()I	g	getHotbarSize
	m	(Lben;)V	g	setCursorStack
		p	1	stack	stack
	m	(Lben;)Z	h	contains
		p	1	stack	stack
	m	()I	h	getEmptySlot
	m	()I	i	getSwappableHotbarSlot
	m	(Lben;)I	i	addStack
		p	1	stack	stack
	m	()V	j	updateItems
	m	()V	k	dropAll
	m	()I	l	getChangeCount
	m	()Lben;	m	getCursorStack
c	ayj	net/minecraft/entity/player/PlayerEntity
	f	Ljava/util/Map;	b	POSE_DIMENSIONS
	f	I	bC	experiencePickUpDelay
	f	Z	bJ	isSubmergedInWater
	f	Layg;	bK	abilities
	f	I	bL	experienceLevel
	f	I	bM	totalExperience
	f	F	bN	experienceProgress
	f	I	bO	enchantmentTableSeed
	f	Lavw;	bQ	fishHook
	f	Z	bR	spawnForced
	f	I	bS	lastPlayedLevelUpSoundTime
	f	Lcom/mojang/authlib/GameProfile;	bT	gameProfile
	f	Z	bU	reducedDebugInfo
	f	Lben;	bV	selectedItem
	f	Lbej;	bW	itemCooldownManager
	f	Lakr;	bp	STANDING_DIMENSIONS
	f	Lsb;	bq	PLAYER_MODEL_PARTS
	f	Lsb;	br	MAIN_ARM
	f	Lsb;	bs	LEFT_SHOULDER_ENTITY
	f	Lsb;	bt	RIGHT_SHOULDER_ENTITY
	f	Layi;	bu	inventory
	f	Lbbs;	bv	enderChestInventory
	f	Lbbk;	bw	playerContainer
	f	Lban;	bx	container
	f	Lbaj;	by	hungerManager
	f	Lsb;	c	ABSORPTION_AMOUNT
	f	Lsb;	d	SCORE
	f	I	f	sleepTimer
	f	Lfk;	g	spawnPosition
	m	(Lbjw;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	world	world
		p	2	profile	profile
	m	([Lsm;)V	a	unlockRecipes
		p	1	ids	ids
	m	(Lbjz;Lfk;Z)Ljava/util/Optional;	a	findRespawnPosition
		p	0	world	world
		p	1	spawnPos	spawnPos
		p	2	allowNonBed	allowNonBed
	m	(Lbjt;)V	a	setGameMode
		p	1	gameMode	gameMode
	m	(Lben;Lajk;)V	a	openEditBookScreen
		p	1	book	book
		p	2	hand	hand
	m	(Llf;Z)V	a	addChatMessage
		p	1	message	message
	m	(Lbxb;)V	a	openJigsawScreen
	m	(Lbwq;)V	a	openCommandBlockScreen
	m	(Lbjw;Lfk;Lbjt;)Z	a	canMine
	m	(Ljava/util/Collection;)I	a	unlockRecipes
		p	1	recipes	recipes
	m	(Lfk;)Lcom/mojang/datafixers/util/Either;	a	trySleep
		p	1	pos	pos
	m	(Lbjc;)V	a	openCommandBlockMinecartScreen
	m	(ZZ)V	a	wakeUp
	m	(Lfk;Lfp;Lben;)Z	a	canPlaceOn
		p	1	pos	pos
		p	2	facing	facing
		p	3	stack	stack
	m	(Lben;I)V	a	applyEnchantmentCosts
		p	1	enchantedItem	enchantedItem
		p	2	experienceLevels	experienceLevels
	m	(Laao;)V	a	resetStat
		p	1	stat	stat
	m	(Lbxh;)V	a	openEditSignScreen
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID;	a	getUuidFromProfile
		p	0	profile	profile
	m	(ILbja;IIZZ)V	a	sendTradeOffers
		p	1	syncId	syncId
		p	2	offers	offers
		p	3	levelProgress	levelProgress
		p	4	experience	experience
		p	5	leveled	leveled
		p	6	refreshable	refreshable
	m	(Lsm;)V	a	incrementStat
		p	1	stat	stat
	m	(Lakq;)V	a	addCritParticles
		p	1	target	target
	m	(Lsm;I)V	a	increaseStat
		p	1	stat	stat
		p	2	amount	amount
	m	(Lben;ZZ)Lawb;	a	dropItem
		p	1	stack	stack
	m	(Laky;)V	a	setMainArm
		p	1	arm	arm
	m	(Laao;I)V	a	increaseStat
		p	1	stat	stat
		p	2	amount	amount
	m	(Lbxl;)V	a	openStructureBlockScreen
	m	(Layk;)Z	a	isPartVisible
		p	1	modelPart	modelPart
	m	(Laah;Laaj;FF)V	a	playSound
		p	1	event	event
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
	m	(Lgt;)V	a	spawnParticles
		p	1	parameters	parameters
	m	(Lben;Z)Lawb;	a	dropItem
		p	1	stack	stack
	m	(Lajo;)Ljava/util/OptionalInt;	a	openContainer
	m	(Layj;)Z	a	shouldDamagePlayer
		p	1	player	player
	m	(Lakq;Lajk;)Lajl;	a	interact
		p	1	entity	entity
		p	2	hand	hand
	m	(Lfk;ZZ)V	a	setPlayerSpawn
	m	(Lfk;Lfp;)Z	a	isWithinSleepingRange
		p	1	sleepPos	sleepPos
		p	2	direction	direction
	m	(Laue;Laje;)V	a	openHorseInventory
	m	(Lbyj;)F	b	getBlockBreakingSpeed
		p	1	block	block
	m	(Laao;)V	b	incrementStat
		p	1	stat	stat
	m	(Ljava/util/Collection;)I	b	lockRecipes
		p	1	recipes	recipes
	m	(Lfk;Lfp;)Z	b	isBedObstructed
		p	1	pos	pos
		p	2	direction	direction
	m	(Lakq;)V	b	addEnchantedHitParticles
		p	1	target	target
	m	(Lakq;)V	c	collideWithEntity
		p	1	entity	entity
	m	(Lbyj;)Z	c	isUsingEffectiveTool
		p	1	block	block
	m	(I)V	c	addExperienceLevels
		p	1	levels	levels
	m	(Llf;)Llf;	c	addTellClickEvent
		p	1	component	component
	m	(Ljava/lang/String;)Ljava/util/UUID;	c	getOfflinePlayerUuid
		p	0	nickname	nickname
	m	(I)V	d	addExperience
		p	1	experience	experience
	m	()Z	dT	shouldCancelInteraction
	m	()Z	dU	shouldDismount
	m	()Z	dV	clipAtLedge
	m	()Z	dW	updateWaterSubmersionState
	m	()V	dX	updateSize
	m	()I	dY	getScore
	m	()V	dZ	vanishCursedItems
	m	()F	eA	getLuck
	m	()Z	eB	isCreativeLevelTwoOp
	m	()V	eb	requestRespawn
	m	()Z	ec	isMainPlayer
	m	()Lcom/mojang/authlib/GameProfile;	ed	getGameProfile
	m	()Z	ee	isSleepingLongEnough
	m	()I	ef	getSleepTimer
	m	()Lfk;	eg	getSpawnPosition
	m	()Z	eh	isSpawnForced
	m	()I	el	getEnchantmentTableSeed
	m	()I	em	getNextLevelExperience
	m	()Lbaj;	en	getHungerManager
	m	()Z	eo	canFoodHeal
	m	()Z	ep	canModifyWorld
	m	()Lbbs;	eq	getEnderChestInventory
	m	()V	er	dropShoulderEntities
	m	()Lcwl;	es	getScoreboard
	m	()Llf;	et	getNameAndUuid
	m	()Z	eu	getReducedDebugInfo
	m	()Ljt;	ev	getShoulderEntityLeft
	m	()Ljt;	ew	getShoulderEntityRight
	m	()F	ex	getAttackCooldownProgressPerTick
	m	()V	ey	resetLastAttackedTicks
	m	()Lbej;	ez	getItemCooldownManager
	m	(Lakq;)V	f	attack
		p	1	target	target
	m	(Lfk;)Z	f	doesNotSuffocate
		p	1	pos	pos
	m	()Lbej;	g	createCooldownManager
	m	(Lben;)Z	g	giveItemStack
		p	1	stack	stack
	m	(Ljt;)Z	g	addShoulderEntity
		p	1	tag	tag
	m	(Ljt;)V	h	setShoulderEntityLeft
		p	1	entityTag	entityTag
	m	(Ljt;)V	i	setShoulderEntityRight
		p	1	entityTag	entityTag
	m	(Ljt;)V	j	updateShoulderEntity
		p	1	entityTag	entityTag
	m	()V	l	updateTurtleHelmet
	m	(Z)Z	n	dropSelectedItem
		p	1	dropEntireStack	dropEntireStack
	m	(Z)V	o	disableShield
		p	1	sprinting	sprinting
	m	(Z)Z	p	canConsume
		p	1	ignoreHunger	ignoreHunger
	m	(Z)V	q	setReducedDebugInfo
		p	1	reducedDebugInfo	reducedDebugInfo
	m	()V	r	sendAbilitiesUpdate
	m	(F)V	r	addExhaustion
		p	1	exhaustion	exhaustion
	m	(F)F	s	getAttackCooldownProgress
		p	1	baseTime	baseTime
	m	(I)V	s	setScore
		p	1	score	score
	m	(I)V	t	addScore
		p	1	score	score
	m	()Z	u	isCreative
	m	()V	v_	closeContainer
c	ayj$a	net/minecraft/entity/player/PlayerEntity$SleepFailureReason
	f	Llf;	g	text
	m	(Ljava/lang/String;ILlf;)V	<init>	<init>
		p	3	text	text
	m	()Llf;	a	toText
c	ayk	net/minecraft/client/render/entity/PlayerModelPart
	f	I	h	id
	f	I	i	bitFlag
	f	Ljava/lang/String;	j	name
	f	Llf;	k	optionName
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getBitFlag
	m	()Ljava/lang/String;	c	getName
	m	()Llf;	d	getOptionName
c	ayl	net/minecraft/recipe/RecipeFinder
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	a	idToAmountMap
	m	()V	a	clear
	m	(Lbgw;ILit/unimi/dsi/fastutil/ints/IntList;)I	a	countRecipeCrafts
		p	2	limit	limit
		p	3	outMatchingInputIds	outMatchingInputIds
	m	(Lbgw;Lit/unimi/dsi/fastutil/ints/IntList;I)Z	a	findRecipe
		p	2	outMatchingInputIds	outMatchingInputIds
		p	3	amount	amount
	m	(Lbgw;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	findRecipe
		p	2	outMatchingInputIds	outMatchingInputIds
	m	(I)Lben;	a	getStackFromId
	m	(Lben;)V	a	addNormalItem
		p	1	stack	stack
	m	(II)I	a	take
		p	1	id	id
		p	2	amount	amount
	m	(Lben;)V	b	addItem
	m	(I)Z	b	contains
	m	(II)V	b	addItem
		p	1	id	id
		p	2	amount	amount
	m	(Lbgw;Lit/unimi/dsi/fastutil/ints/IntList;)I	b	countRecipeCrafts
		p	2	outMatchingInputIds	outMatchingInputIds
	m	(Lben;)I	c	getItemId
c	ayl$a	net/minecraft/recipe/RecipeFinder$Filter
	f	Lbgw;	b	recipe
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	m	(Layl;Lbgw;)V	<init>	<init>
		p	1	recipe	recipe
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)Z	a	find
		p	1	amount	amount
		p	2	outMatchingInputIds	outMatchingInputIds
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)I	b	countCrafts
		p	1	limit	limit
		p	2	outMatchingInputIds	outMatchingInputIds
c	ayn	net/minecraft/entity/projectile/ProjectileEntity
	f	Lsb;	ao	PROJECTILE_FLAGS
	f	Lsb;	ap	PIERCE_LEVEL
	f	Lbyj;	aq	inBlockState
	f	I	ar	life
	f	I	as	flyingTick
	f	D	at	damage
	f	I	au	punch
	f	Laah;	av	sound
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	aw	piercedEntities
	f	Ljava/util/List;	ax	piercingKilledEntities
	f	Lsb;	b	OPTIONAL_UUID
	f	Z	c	inGround
	f	I	d	inGroundTime
	f	Layn$a;	e	pickupType
	f	I	f	shake
	f	Ljava/util/UUID;	g	ownerUuid
	m	(Laku;DDDLbjw;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	world	world
	m	(Laku;Lakz;Lbjw;)V	<init>	<init>
		p	1	type	type
		p	2	owner	owner
		p	3	world	world
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lakz;)V	a	onHit
		p	1	target	target
	m	(Lakq;FFFFF)V	a	setProperties
		p	1	user	user
		p	2	pitch	pitch
		p	3	yaw	yaw
		p	4	roll	roll
		p	5	modifierZ	modifierZ
		p	6	modifierXYZ	modifierXYZ
	m	(Lcvh;)V	a	onEntityHit
	m	(Lcvl;Lcvl;)Lcvh;	a	getEntityCollision
		p	1	currentPosition	currentPosition
		p	2	nextPosition	nextPosition
	m	(IZ)V	a	setProjectileFlag
		p	1	index	index
		p	2	flag	flag
	m	(Lakz;F)V	a	applyEnchantmentEffects
		p	2	damageModifier	damageModifier
	m	(Lakq;)V	a	setOwner
	m	(I)V	a	setPunch
		p	1	punch	punch
	m	(Lcvi;)V	a	onHit
	m	(Z)V	a	setCritical
		p	1	critical	critical
	m	(Laah;)V	a	setSound
		p	1	sound	sound
	m	(B)V	b	setPierceLevel
		p	1	level	level
	m	(D)V	h	setDamage
		p	1	damage	damage
	m	()V	i	age
	m	()Laah;	k	getHitSound
	m	()Laah;	l	getSound
	m	()Lakq;	m	getOwner
	m	(Z)V	n	setNoClip
		p	1	noClip	noClip
	m	()Lben;	n	asItemStack
	m	(Z)V	o	setShotFromCrossbow
		p	1	shotFromCrossbow	shotFromCrossbow
	m	()D	o	getDamage
	m	()Z	q	isCritical
	m	()Z	r	isShotFromCrossbow
	m	()B	s	getPierceLevel
	m	()F	u	getDragInWater
	m	()Z	v	isNoClip
	m	()V	w	clearPiercingStatus
c	ayn$a	net/minecraft/entity/projectile/ProjectileEntity$PickupPermission
	m	(I)Layn$a;	a	fromOrdinal
		p	0	ordinal	ordinal
c	ayo	net/minecraft/entity/projectile/ExplosiveProjectileEntity
	f	Lakz;	b	owner
	f	D	c	posX
	f	D	d	posY
	f	D	e	posZ
	f	I	f	life
	f	I	g	ticks
	m	(Laku;Lakz;DDDLbjw;)V	<init>	<init>
		p	1	type	type
		p	2	owner	owner
		p	3	directionX	directionX
		p	5	directionY	directionY
		p	7	directionZ	directionZ
		p	9	world	world
	m	(Laku;DDDDDDLbjw;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	directionX	directionX
		p	10	directionY	directionY
		p	12	directionZ	directionZ
		p	14	world	world
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	()Z	M_	isBurning
	m	(Lcvi;)V	a	onCollision
	m	()Lgt;	i	getParticleType
	m	()F	k	getDrag
c	ayp	net/minecraft/entity/projectile/ArrowEntity
	f	Lsb;	ao	COLOR
	f	Lbgd;	ap	potion
	f	Ljava/util/Set;	aq	effects
	f	Z	ar	colorSet
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;Lakz;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
	m	(Lakk;)V	a	addEffect
		p	1	effect	effect
	m	(Lben;)V	b	initFromStack
		p	1	stack	stack
	m	(I)V	b	spawnParticles
	m	(I)V	c	setColor
		p	1	color	color
	m	(Lben;)I	c	getCustomPotionColor
		p	0	stack	stack
	m	()I	w	getColor
	m	()V	z	initColor
c	ayq	net/minecraft/entity/projectile/DragonFireballEntity
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	directionX	directionX
		p	10	directionY	directionY
		p	12	directionZ	directionZ
	m	(Lbjw;Lakz;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	directionX	directionX
		p	5	directionY	directionY
		p	7	directionZ	directionZ
c	ayr	net/minecraft/entity/mob/EvokerFangsEntity
	f	I	b	warmup
	f	I	d	ticksLeft
	f	Z	e	hasAttacked
	f	Lakz;	f	owner
	f	Ljava/util/UUID;	g	ownerUuid
	m	(Lbjw;DDDFILakz;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	9	warmup	warmup
		p	10	owner	owner
	m	(F)F	a	getAnimationProgress
		p	1	tickDelta	tickDelta
	m	(Lakz;)V	a	setOwner
		p	1	owner	owner
	m	(Lakz;)V	c	damage
		p	1	target	target
	m	()Lakz;	f	getOwner
c	ays	net/minecraft/entity/EnderEyeEntity
	f	Lsb;	b	ITEM
	f	D	c	velocityX
	f	D	d	velocityY
	f	D	e	velocityZ
	f	I	f	useCount
	f	Z	g	dropsItem
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lfk;)V	a	moveTowards
		p	1	pos	pos
	m	(Lben;)V	b	setItem
		p	1	stack	stack
	m	(Lben;)V	c	method_16934
		p	0	stack	stack
	m	()Lben;	i	getTrackedItem
c	ayt	net/minecraft/entity/projectile/AbstractFireballEntity
	f	Lsb;	f	ITEM
	m	(Lben;)V	b	setItem
		p	1	stack	stack
	m	()Lben;	l	getItem
c	ayu	net/minecraft/entity/FireworkEntity
	f	Lsb;	b	ITEM
	f	Lsb;	c	SHOOTER_ENTITY_ID
	f	Lsb;	d	SHOT_AT_ANGLE
	f	I	e	life
	f	I	f	lifeTime
	f	Lakz;	g	shooter
	m	(Lbjw;Lben;Lakz;)V	<init>	<init>
		p	1	world	world
		p	2	item	item
		p	3	shooter	shooter
	m	(Lbjw;Lben;DDDZ)V	<init>	<init>
		p	1	world	world
		p	2	item	item
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	shotAtAngle	shotAtAngle
	m	(Lbjw;DDDLben;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	item	item
	m	(Lcvi;)V	a	handleCollision
	m	()Z	i	wasShotAtAngle
	m	()V	k	explodeAndRemove
	m	()Z	l	hasExplosionEffects
	m	()V	m	explode
	m	()Z	n	wasShotByEntity
c	ayv	net/minecraft/entity/FlyingItemEntity
	m	()Lben;	f	getStack
c	ayw	net/minecraft/entity/projectile/FireballEntity
	f	I	f	explosionPower
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lbjw;Lakz;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	velocityX	velocityX
		p	5	velocityY	velocityY
		p	7	velocityZ	velocityZ
c	ayx	net/minecraft/entity/projectile/LlamaSpitEntity
	f	Lauh;	b	owner
	f	Ljt;	c	tag
	m	(Lbjw;Lauh;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	()V	f	readTag
c	ayy	net/minecraft/entity/projectile/Projectile
	m	(DDDFF)V	c	setVelocity
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	speed	speed
		p	8	divergence	divergence
c	ayz	net/minecraft/entity/ProjectileUtil
	m	(Lakq;ZZLakq;Lbjj$a;ZLjava/util/function/Predicate;Lcvf;)Lcvi;	a	getCollision
		p	0	entity	entity
		p	4	shapeType	shapeType
		p	6	entityCollisionPredicate	entityCollisionPredicate
		p	7	boz	boz
	m	(Lakq;ZZLakq;Lbjj$a;)Lcvi;	a	getCollision
		p	0	entity	entity
		p	4	shapeType	shapeType
	m	(Lakz;Lben;F)Layn;	a	createArrowProjectile
	m	(Lakz;Lbei;)Lajk;	a	getHandPossiblyHolding
		p	0	entity	entity
		p	1	item	item
	m	(Lakq;Lcvf;Ljava/util/function/Predicate;Lbjj$a;Z)Lcvi;	a	getCollision
		p	0	entity	entity
		p	1	box	box
		p	2	entityCollisionPredicate	entityCollisionPredicate
		p	3	shapeType	shapeType
	m	(Lbjw;Lakq;Lcvl;Lcvl;Lcvf;Ljava/util/function/Predicate;)Lcvh;	a	getEntityCollision
	m	(Lakq;)Ljava/util/Set;	a	getEntityAndRidingEntity
		p	0	entity	entity
	m	(Lakq;Lcvl;Lcvl;Lcvf;Ljava/util/function/Predicate;D)Lcvh;	a	rayTrace
	m	(Lbjw;Lakq;Lcvl;Lcvl;Lcvf;Ljava/util/function/Predicate;D)Lcvh;	a	getEntityCollision
c	az	net/minecraft/predicate/entity/EntityFlagsPredicate
	f	Laz;	a	ANY
	f	Ljava/lang/Boolean;	b	isOnFire
	f	Ljava/lang/Boolean;	c	isSneaking
	f	Ljava/lang/Boolean;	d	isSprinting
	f	Ljava/lang/Boolean;	e	isSwimming
	f	Ljava/lang/Boolean;	f	isBaby
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1	isOnFire	isOnFire
		p	2	isSneaking	isSneaking
		p	3	isSprinting	isSprinting
		p	4	isSwimming	isSwimming
	m	(Lcom/google/gson/JsonElement;)Laz;	a	deserialize
		p	0	element	element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	serializeBoolean
		p	1	json	json
		p	2	key	key
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lakq;)Z	a	test
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	deserializeBoolean
		p	0	json	json
		p	1	key	key
c	az$a	net/minecraft/predicate/entity/EntityFlagsPredicate$Builder
	f	Ljava/lang/Boolean;	a	isOnFire
	f	Ljava/lang/Boolean;	b	isSneaking
	f	Ljava/lang/Boolean;	c	isSprinting
	f	Ljava/lang/Boolean;	d	isSwimming
	f	Ljava/lang/Boolean;	e	isBaby
	m	()Laz$a;	a	create
	m	(Ljava/lang/Boolean;)Laz$a;	a	onFire
	m	()Laz;	b	build
c	aza	net/minecraft/entity/projectile/ShulkerBulletEntity
	f	Ljava/util/UUID;	ap	ownerUuid
	f	Lfk;	aq	ownerPos
	f	Ljava/util/UUID;	ar	targetUuid
	f	Lfk;	as	targetPos
	f	Lakz;	b	owner
	f	Lakq;	c	target
	f	Lfp;	d	direction
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lbjw;Lakz;Lakq;Lfp$a;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	target	target
	m	(Lfp;)V	a	setDirection
	m	(Lcvi;)V	a	onHit
c	azb	net/minecraft/entity/projectile/SmallFireballEntity
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lbjw;Lakz;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	velocityX	velocityX
		p	5	velocityY	velocityY
		p	7	velocityZ	velocityZ
c	azc	net/minecraft/entity/thrown/SnowballEntity
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;Lakz;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
	m	()Lgt;	n	getParticleParameters
c	azd	net/minecraft/entity/projectile/SpectralArrowEntity
	f	I	ao	duration
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;Lakz;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
c	aze	net/minecraft/entity/thrown/ThrownItemEntity
	f	Lsb;	e	ITEM
	m	(Laku;DDDLbjw;)V	<init>	<init>
		p	1	type	type
	m	(Laku;Lakz;Lbjw;)V	<init>	<init>
		p	1	type	type
		p	2	owner	owner
		p	3	world	world
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lben;)V	b	setItem
		p	1	item	item
	m	()Lbei;	i	getDefaultItem
	m	()Lben;	k	getItem
c	azf	net/minecraft/entity/thrown/ThrownEntity
	f	Ljava/util/UUID;	ao	ownerUuid
	f	Z	b	inGround
	f	I	c	shake
	f	Lakz;	d	owner
	f	I	e	blockX
	f	I	f	blockY
	f	I	g	blockZ
	m	(Laku;DDDLbjw;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	world	world
	m	(Laku;Lakz;Lbjw;)V	<init>	<init>
		p	1	type	type
		p	2	owner	owner
		p	3	world	world
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lcvi;)V	a	onCollision
	m	(Lakq;FFFFF)V	a	setProperties
		p	1	user	user
		p	2	pitch	pitch
		p	3	yaw	yaw
	m	()F	l	getGravity
	m	()Lakz;	m	getOwner
c	azg	net/minecraft/entity/thrown/ThrownEggEntity
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;Lakz;)V	<init>	<init>
		p	1	world	world
		p	2	thrower	thrower
c	azh	net/minecraft/entity/thrown/ThrownEnderpearlEntity
	f	Lakz;	e	owner
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;Lakz;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
c	azi	net/minecraft/entity/thrown/ThrownExperienceBottleEntity
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;Lakz;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
c	azj	net/minecraft/entity/thrown/ThrownPotionEntity
	f	Ljava/util/function/Predicate;	e	WATER_HURTS
	f	Lsb;	f	ITEM_STACK
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
	m	(Lbjw;Lakz;)V	<init>	<init>
		p	1	world	world
	m	(Ljava/util/List;Lakq;)V	a	applySplashPotion
	m	(Lakz;)Z	a	doesWaterHurt
		p	0	entityHit	entityHit
	m	(Lfk;Lfp;)V	a	extinguishFire
	m	(Lben;Lbgd;)V	a	applyLingeringPotion
	m	(Lben;)V	b	setItemStack
	m	()V	i	damageEntitiesHurtByWater
	m	()Z	k	isLingering
c	azk	net/minecraft/entity/projectile/TridentEntity
	f	I	ao	returnTimer
	f	Lsb;	ap	LOYALTY
	f	Lben;	ar	tridentStack
	f	Z	as	dealtDamage
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lbjw;Lakz;Lben;)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	item	item
	m	()Z	z	isOwnerAlive
c	azl	net/minecraft/entity/projectile/WitherSkullEntity
	f	Lsb;	f	CHARGED
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	directionX	directionX
		p	10	directionY	directionY
		p	12	directionZ	directionZ
	m	(Lbjw;Lakz;DDD)V	<init>	<init>
		p	1	world	world
		p	2	owner	owner
		p	3	directionX	directionX
		p	5	directionY	directionY
		p	7	directionZ	directionZ
	m	(Z)V	a	setCharged
		p	1	charged	charged
	m	()Z	l	isCharged
c	azn	net/minecraft/entity/raid/Raid
	f	Llp;	a	EVENT_TEXT
	f	Llp;	b	VICTORY_SUFFIX_TEXT
	f	Llp;	c	DEFEAT_SUFFIX_TEXT
	f	Llf;	d	VICTORY_TITLE
	f	Llf;	e	DEFEAT_TITLE
	f	Ljava/util/Map;	f	waveToCaptain
	f	Ljava/util/Map;	g	waveToRaiders
	f	Ljava/util/Set;	h	heroesOfTheVillage
	f	J	i	ticksActive
	f	Lfk;	j	center
	f	Lxd;	k	world
	f	Z	l	started
	f	I	m	id
	f	F	n	totalHealth
	f	I	o	badOmenLevel
	f	Z	p	active
	f	I	q	wavesSpawned
	f	Lxa;	r	bar
	f	I	s	postRaidTicks
	f	I	t	preRaidTicks
	f	Ljava/util/Random;	u	random
	f	I	v	waveCount
	f	Lazn$a;	w	status
	f	I	x	finishCooldown
	f	Ljava/util/Optional;	y	preCalculatedRavagerSpawnLocation
	m	(Lxd;Ljt;)V	<init>	<init>
		p	1	world	world
		p	2	tag	tag
	m	(ILxd;Lfk;)V	<init>	<init>
		p	1	id	id
		p	2	world	world
		p	3	pos	pos
	m	()Z	A	shouldSpawnMoreGroups
	m	()Z	B	hasSpawnedFinalWave
	m	()Z	C	hasExtraWave
	m	()Z	D	hasSpawnedExtraWave
	m	()Z	E	isSpawningExtraWave
	m	()V	F	removeObsoleteRaiders
	m	()Z	G	canSpawnRaiders
	m	()V	H	markDirty
	m	(Lakq;)V	a	addHero
		p	1	entity	entity
	m	()Z	a	isFinished
	m	(II)Lfk;	a	getRavagerSpawnLocation
		p	1	proximity	proximity
		p	2	tries	tries
	m	(Lazn$b;IZ)I	a	getCount
		p	1	member	member
		p	2	wave	wave
		p	3	extra	extra
	m	(Lazn$b;Ljava/util/Random;ILajj;Z)I	a	getBonusCount
		p	1	member	member
		p	2	random	random
		p	3	wave	wave
		p	4	localDifficulty	localDifficulty
		p	5	extra	extra
	m	(Laji;)I	a	getMaxWaves
		p	1	difficulty	difficulty
	m	(Lazo;Z)V	a	removeFromWave
		p	1	entity	entity
		p	2	countHealth	countHealth
	m	(Lfk;)V	a	playRaidHorn
		p	1	pos	pos
	m	(ILazo;)V	a	setWaveCaptain
		p	1	wave	wave
		p	2	entity	entity
	m	(ILazo;Lfk;Z)V	a	addRaider
		p	1	wave	wave
		p	2	raider	raider
		p	3	pos	pos
		p	4	existing	existing
	m	(ILazo;Z)Z	a	addToWave
		p	1	wave	wave
		p	2	entity	entity
		p	3	countHealth	countHealth
	m	(Ljt;)Ljt;	a	toTag
		p	1	tag	tag
	m	(Layj;)V	a	start
		p	1	player	player
	m	(I)Lazo;	b	getCaptain
		p	1	wave	wave
	m	()Z	b	isPreRaid
	m	(Lfk;)V	b	spawnNextWave
		p	1	pos	pos
	m	(ILazo;)Z	b	addToWave
		p	1	wave	wave
		p	2	entity	entity
	m	()Z	c	hasSpawned
	m	(I)V	c	removeLeader
		p	1	wave	wave
	m	()Z	d	hasStopped
	m	(I)Ljava/util/Optional;	d	preCalculateRavagerSpawnLocation
		p	1	proximity	proximity
	m	()Z	e	hasWon
	m	()Z	f	hasLost
	m	()Lbjw;	i	getWorld
	m	()Z	j	hasStarted
	m	()I	k	getGroupsSpawned
	m	()I	l	getMaxAcceptableBadOmenLevel
	m	()I	m	getBadOmenLevel
	m	()V	n	invalidate
	m	()V	o	tick
	m	()V	p	updateBar
	m	()F	q	getCurrentRaiderHealth
	m	()I	r	getRaiderCount
	m	()Lben;	s	getOminousBanner
	m	()Lfk;	t	getCenter
	m	()I	u	getRaidId
	m	()Z	v	isActive
	m	()F	w	getEnchantmentChance
	m	()Ljava/util/function/Predicate;	x	isInRaidDistance
	m	()V	y	updateBarToPlayers
c	azn$a	net/minecraft/entity/raid/Raid$Status
	f	[Lazn$a;	e	VALUES
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lazn$a;	b	fromName
c	azn$b	net/minecraft/entity/raid/Raid$Member
	f	[Lazn$b;	f	VALUES
	f	Laku;	g	type
	f	[I	h	countInWave
	m	(Ljava/lang/String;ILaku;[I)V	<init>	<init>
		p	3	type	type
		p	4	countInWave	countInWave
c	azo	net/minecraft/entity/raid/RaiderEntity
	f	Ljava/util/function/Predicate;	b	OBTAINABLE_OMINOUS_BANNER_PREDICATE
	f	I	bw	wave
	f	Z	bx	ableToJoinRaid
	f	I	by	outOfRaidCounter
	f	Lsb;	c	CELEBRATING
	f	Lazn;	d	raid
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(I)V	a	setWave
		p	1	wave	wave
	m	(Lazn;)V	a	setRaid
	m	(IZ)V	a	addBonusForWave
		p	1	wave	wave
		p	2	unused	unused
	m	(I)V	b	setOutOfRaidCounter
		p	1	counter	counter
	m	()Z	eD	canJoinRaid
	m	()Lazn;	eE	getRaid
	m	()Z	eF	hasActiveRaid
	m	()I	eG	getWave
	m	()Z	eH	isCelebrating
	m	()I	eI	getOutOfRaidCounter
	m	()Laah;	eq	getCelebratingSound
	m	(Z)V	u	setAbleToJoinRaid
		p	1	ableToJoinRaid	ableToJoinRaid
	m	(Z)V	v	setCelebrating
		p	1	celebrating	celebrating
c	azo$a	net/minecraft/entity/raid/RaiderEntity$PatrolApproachGoal
	f	Lask;	a	closeRaiderPredicate
	f	Lazo;	c	raider
	f	F	d	squaredDistance
	m	(Lazo;Lawe;F)V	<init>	<init>
		p	2	illager	illager
		p	3	distance	distance
c	azo$b	net/minecraft/entity/raid/RaiderEntity$PickupBannerAsLeaderGoal
	f	Lazo;	b	actor
	m	(Lazo;Lazo;)V	<init>	<init>
		p	2	actor	actor
c	azo$c	net/minecraft/entity/raid/RaiderEntity$CelebrateGoal
	f	Lazo;	b	raider
	m	(Lazo;Lazo;)V	<init>	<init>
		p	2	raider	raider
c	azo$d	net/minecraft/entity/raid/RaiderEntity$AttackHomeGoal
	f	Lazo;	a	raider
	f	D	b	speed
	f	Lfk;	c	home
	f	Ljava/util/List;	d	lastHomes
	f	I	e	distance
	f	Z	f	finished
	m	(Lazo;DI)V	<init>	<init>
		p	1	raider	raider
		p	2	speed	speed
		p	4	distance	distance
	m	(Lfk;)Z	a	canLootHome
		p	1	pos	pos
	m	()Z	g	isRaiding
	m	()Z	h	tryFindHome
	m	()V	j	purgeMemory
c	azp	net/minecraft/entity/raid/RaidManager
	f	Ljava/util/Map;	a	raids
	f	Lxd;	b	world
	f	I	c	nextAvailableId
	f	I	d	currentTime
	m	(Lxd;)V	<init>	<init>
		p	1	world	world
	m	(Lazo;Lazn;)Z	a	isValidRaiderFor
		p	0	raider	raider
		p	1	raid	raid
	m	(Lxe;)Lazn;	a	startRaid
		p	1	player	player
	m	(Lxd;Lfk;)Lazn;	a	getOrCreateRaid
		p	1	world	world
		p	2	pos	pos
	m	()V	a	tick
	m	(Lfk;I)Lazn;	a	getRaidAt
		p	1	pos	pos
	m	(Lcbh;)Ljava/lang/String;	a	nameFor
		p	0	dimension	dimension
	m	(I)Lazn;	a	getRaid
		p	1	id	id
	m	()I	e	nextId
c	azr	net/minecraft/entity/ai/brain/Activity
	f	Ljava/lang/String;	k	id
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Lazr;	a	register
		p	0	id	id
c	azs	net/minecraft/entity/ai/brain/ScheduleRuleEntry
	f	I	a	startTime
	f	F	b	priority
	m	(IF)V	<init>	<init>
		p	1	startTime	startTime
		p	2	priority	priority
	m	()I	a	getStartTime
	m	()F	b	getPriority
c	azt	net/minecraft/entity/ai/brain/Schedule
	f	Lazt;	a	EMPTY
	f	Lazt;	b	SIMPLE
	f	Lazt;	c	VILLAGER_BABY
	f	Lazt;	d	VILLAGER_DEFAULT
	f	Ljava/util/Map;	e	scheduleRules
	m	(Ljava/lang/String;)Lazu;	a	register
		p	0	id	id
	m	(Lazr;)V	a	addActivity
		p	1	activity	activity
	m	(I)Lazr;	a	getActivityForTime
		p	1	time	time
	m	(Lazr;)Lazv;	b	getRule
		p	1	activity	activity
	m	(Lazr;)Ljava/util/List;	c	getOtherRules
		p	1	activity	activity
c	azu	net/minecraft/entity/ai/brain/ScheduleBuilder
	f	Lazt;	a	schedule
	f	Ljava/util/List;	b	activities
	m	(Lazt;)V	<init>	<init>
		p	1	schedule	schedule
	m	()Lazt;	a	build
	m	(ILazr;)Lazu;	a	withActivity
		p	1	startTime	startTime
		p	2	activity	activity
c	azu$a	net/minecraft/entity/ai/brain/ScheduleBuilder$ActivityEntry
	f	I	a	startTime
	f	Lazr;	b	activity
	m	(ILazr;)V	<init>	<init>
		p	1	startTime	startTime
		p	2	activity	activity
	m	()I	a	getStartTime
	m	()Lazr;	b	getActivity
c	azv	net/minecraft/entity/ai/brain/ScheduleRule
	f	Ljava/util/List;	a	entries
	f	I	b	prioritizedEntryIndex
	m	(I)F	a	getPriority
		p	1	time	time
	m	(IF)Lazv;	a	add
		p	1	startTime	startTime
		p	2	priority	priority
	m	()V	b	sort
c	azx	net/minecraft/entity/vehicle/AbstractMinecartEntity
	f	I	aq	clientInterpolationSteps
	f	D	ar	clientX
	f	D	as	clientY
	f	D	at	clientZ
	f	D	au	clientYaw
	f	D	av	clientPitch
	f	D	aw	clientXVelocity
	f	D	ax	clientYVelocity
	f	D	ay	clientZVelocity
	f	Lsb;	b	DAMAGE_WOBBLE_TICKS
	f	Lsb;	c	DAMAGE_WOBBLE_SIDE
	f	Lsb;	d	DAMAGE_WOBBLE_STRENGTH
	f	Lsb;	e	CUSTOM_BLOCK_ID
	f	Lsb;	f	CUSTOM_BLOCK_OFFSET
	f	Lsb;	g	CUSTOM_BLOCK_PRESENT
	m	(Laku;Lbjw;DDD)V	<init>	<init>
		p	1	type	type
		p	2	world	world
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(Lajz;)V	a	dropItems
		p	1	damageSource	damageSource
	m	(Z)V	a	setCustomBlockPresent
	m	(IIIZ)V	a	onActivatorRail
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	powered	powered
	m	(Lfk;)Z	a	willHitBlockAt
		p	1	pos	pos
	m	(Lbjw;DDDLazx$a;)Lazx;	a	create
		p	0	world	world
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	type	type
	m	(F)V	a	setDamageWobbleStrength
	m	(Lfk;Lbyj;)V	b	moveOnRail
		p	1	pos	pos
		p	2	state	state
	m	(Lbyj;)V	b	setCustomBlock
	m	(I)V	c	setDamageWobbleTicks
		p	1	wobbleTicks	wobbleTicks
	m	(I)V	d	setDamageWobbleSide
		p	1	wobbleSide	wobbleSide
	m	()D	f	getMaxOffRailSpeed
	m	()V	i	moveOffRail
	m	()V	k	applySlowdown
	m	()F	l	getDamageWobbleStrength
	m	(I)V	l	setCustomBlockOffset
	m	()I	m	getDamageWobbleTicks
	m	()I	n	getDamageWobbleSide
	m	()Lazx$a;	o	getMinecartType
	m	()Lbyj;	p	getContainedBlock
	m	()Lbyj;	q	getDefaultContainedBlock
	m	()I	r	getBlockOffset
	m	()I	s	getDefaultBlockOffset
	m	()Z	u	hasCustomBlock
c	azx$a	net/minecraft/entity/vehicle/AbstractMinecartEntity$Type
c	azy	net/minecraft/entity/vehicle/StorageMinecartEntity
	f	Lfy;	b	inventory
	f	Lsm;	d	lootTableId
	f	J	e	lootSeed
	m	(Laku;DDDLbjw;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	world	world
	m	(Laku;Lbjw;)V	<init>	<init>
		p	1	type	type
	m	(ILayi;)Lban;	a	getContainer
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Lsm;J)V	a	setLootTable
		p	1	id	id
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
c	azz	net/minecraft/entity/vehicle/BoatEntity
	f	Z	aA	pressingRight
	f	Z	aB	pressingForward
	f	Z	aC	pressingBack
	f	D	aD	waterLevel
	f	Lazz$a;	aF	location
	f	Lazz$a;	aG	lastLocation
	f	D	aH	fallVelocity
	f	Z	aI	onBubbleColumnSurface
	f	Z	aJ	bubbleColumnIsDrag
	f	F	aK	bubbleWobbleStrength
	f	F	aL	bubbleWobble
	f	F	aM	lastBubbleWobble
	f	Lsb;	ao	BUBBLE_WOBBLE_TICKS
	f	[F	ap	paddlePhases
	f	F	aq	velocityDecay
	f	F	ar	ticksUnderwater
	f	F	as	yawVelocity
	f	Z	az	pressingLeft
	f	Lsb;	b	DAMAGE_WOBBLE_TICKS
	f	Lsb;	c	DAMAGE_WOBBLE_SIDE
	f	Lsb;	d	DAMAGE_WOBBLE_STRENGTH
	f	Lsb;	e	BOAT_TYPE
	f	Lsb;	f	LEFT_PADDLE_MOVING
	f	Lsb;	g	RIGHT_PADDLE_MOVING
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()I	A	getBubbleWobbleTicks
	m	(Lakq;)V	a	copyEntityData
		p	1	entity	entity
	m	(ZZ)V	a	setPaddleMovings
		p	1	leftMoving	leftMoving
		p	2	rightMoving	rightMoving
	m	(ZZZZ)V	a	setInputs
		p	1	pressingLeft	pressingLeft
		p	2	pressingRight	pressingRight
		p	3	pressingForward	pressingForward
		p	4	pressingBack	pressingBack
	m	(Lazz$b;)V	a	setBoatType
		p	1	type	type
	m	(I)Z	a	isPaddleMoving
		p	1	paddle	paddle
	m	(F)V	a	setDamageWobbleStrength
		p	1	wobbleStrength	wobbleStrength
	m	(IF)F	a	interpolatePaddlePhase
		p	1	paddle	paddle
		p	2	tickDelta	tickDelta
	m	(I)V	b	setDamageWobbleTicks
		p	1	wobbleTicks	wobbleTicks
	m	(F)F	b	interpolateBubbleWobble
		p	1	tickDelta	tickDelta
	m	(I)V	c	setDamageWobbleSide
		p	1	side	side
	m	(I)V	d	setBubbleWobbleTicks
		p	1	wobbleTicks	wobbleTicks
	m	()Lbei;	f	asItem
	m	()Laah;	i	getPaddleSoundEvent
	m	()F	m	getDamageWobbleStrength
	m	()I	n	getDamageWobbleTicks
	m	()I	o	getDamageWobbleSide
	m	()Lazz$b;	p	getBoatType
	m	()V	q	handleBubbleColumn
	m	()Lazz$a;	s	checkLocation
	m	()Z	u	checkBoatInWater
	m	()Lazz$a;	v	getUnderWaterLocation
	m	()V	w	updateVelocity
	m	()V	z	updatePaddles
c	azz$a	net/minecraft/entity/vehicle/BoatEntity$Location
c	azz$b	net/minecraft/entity/vehicle/BoatEntity$Type
	f	Ljava/lang/String;	g	name
	f	Lbph;	h	baseBlock
	m	(Ljava/lang/String;)Lazz$b;	a	getType
	m	()Ljava/lang/String;	a	getName
	m	(I)Lazz$b;	a	getType
	m	()Lbph;	b	getBaseBlock
c	b	net/minecraft/client/util/math/Matrix4f
	f	F	a	a00
	f	F	b	a01
	f	F	c	a02
	f	F	d	a03
	f	F	e	a10
	f	F	f	a11
	f	F	g	a12
	f	F	h	a13
	f	F	i	a20
	f	F	j	a21
	f	F	k	a22
	f	F	l	a23
	f	F	m	a30
	f	F	n	a31
	f	F	o	a32
	f	F	p	a33
	m	(Lb;)V	<init>	<init>
		p	1	source	source
	m	(Lc;)V	<init>	<init>
		p	1	quaternion	quaternion
	m	(Lc;)V	a	multiply
		p	1	quaternion	quaternion
	m	(DFFF)Lb;	a	viewboxMatrix
		p	0	fov	fov
		p	2	aspectRatio	aspectRatio
		p	3	cameraDepth	cameraDepth
		p	4	viewDistance	viewDistance
	m	(Lb;)V	a	multiply
		p	1	matrix	matrix
	m	(F)V	a	multiply
		p	1	scalar	scalar
	m	(Le;)V	a	addToLastColumn
		p	1	vector	vector
	m	(FFF)Lb;	a	scale
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Ljava/nio/FloatBuffer;)V	a	writeToBuffer
	m	()V	a	loadIdentity
	m	(FFFF)Lb;	a	projectionMatrix
		p	0	width	width
		p	1	height	height
		p	2	nearPlane	nearPlane
		p	3	farPlane	farPlane
	m	(II)I	a	pack
		p	0	x	x
		p	1	y	y
	m	()F	b	determinantAndAdjugate
	m	(FFF)Lb;	b	translate
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	()Z	c	invert
	m	()Lb;	d	copy
	m	()V	e	transpose
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ba	net/minecraft/advancement/criterion/EntityHurtPlayerCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lajz;FFZ)V	a	trigger
		p	1	player	player
		p	2	source	source
		p	3	dealt	dealt
		p	4	taken	taken
		p	5	blocked	blocked
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lba$a;	b	conditionsFromJson
c	ba$a	net/minecraft/advancement/criterion/EntityHurtPlayerCriterion$Conditions
	f	Lar;	a	damage
	m	(Lar;)V	<init>	<init>
		p	1	damage	damage
	m	(Lxe;Lajz;FFZ)Z	a	matches
		p	1	player	player
		p	2	source	source
		p	3	dealt	dealt
		p	4	taken	taken
		p	5	blocked	blocked
	m	(Lar$a;)Lba$a;	a	create
c	baa	net/minecraft/entity/vehicle/MinecartEntity
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	bab	net/minecraft/entity/vehicle/ChestMinecartEntity
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	bac	net/minecraft/entity/vehicle/CommandBlockMinecartEntity
	f	Lsb;	b	COMMAND
	f	Lsb;	c	LAST_OUTPUT
	f	Lbjc;	d	commandExecutor
	f	I	e	lastExecuted
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()Lbjc;	v	getCommandExecutor
c	bac$a	net/minecraft/entity/vehicle/CommandBlockMinecartEntity$CommandExecutor
	m	()Lbac;	g	getMinecart
c	bad	net/minecraft/entity/vehicle/FurnaceMinecartEntity
	f	D	b	pushX
	f	D	c	pushZ
	f	Lsb;	d	LIT
	f	I	e	fuel
	f	Lbgt;	f	ACCEPTABLE_FUEL
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Z)V	n	setLit
		p	1	lit	lit
	m	()Z	v	isLit
c	bae	net/minecraft/entity/vehicle/HopperMinecartEntity
	f	Z	d	enabled
	f	I	e	transferCooldown
	f	Lfk;	f	currentBlockPos
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()Z	C	canOperate
	m	()Z	D	isCoolingDown
	m	(I)V	m	setTransferCooldown
		p	1	cooldown	cooldown
	m	(Z)V	n	setEnabled
		p	1	enabled	enabled
	m	()Z	v	isEnabled
c	baf	net/minecraft/entity/vehicle/SpawnerMinecartEntity
	f	Lbjd;	b	logic
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	bag	net/minecraft/entity/vehicle/TntMinecartEntity
	f	I	b	fuseTicks
	m	(D)V	h	explode
	m	()V	v	prime
	m	()I	w	getFuseTicks
	m	()Z	z	isPrimed
c	baj	net/minecraft/entity/player/HungerManager
	f	I	a	foodLevel
	f	F	b	foodSaturationLevel
	f	F	c	exhaustion
	f	I	d	foodStarvationTimer
	f	I	e	prevFoodLevel
	m	(I)V	a	setFoodLevel
		p	1	foodLevel	foodLevel
	m	(Ljt;)V	a	deserialize
	m	(Layj;)V	a	update
	m	(F)V	a	addExhaustion
		p	1	exhaustion	exhaustion
	m	(IF)V	a	add
		p	1	food	food
	m	()I	a	getFoodLevel
	m	(Lbei;Lben;)V	a	eat
	m	(F)V	b	setSaturationLevelClient
		p	1	saturationLevel	saturationLevel
	m	(Ljt;)V	b	serialize
	m	()Z	c	isNotFull
	m	()F	e	getSaturationLevel
c	bak	net/minecraft/item/FoodComponent
	f	I	a	hunger
	f	F	b	saturationModifier
	f	Z	c	meat
	f	Z	d	alwaysEdible
	f	Z	e	snack
	f	Ljava/util/List;	f	statusEffects
	m	(IFZZZLjava/util/List;)V	<init>	<init>
		p	1	hunger	hunger
		p	2	saturationModifier	saturationModifier
		p	3	meat	meat
		p	4	alwaysEdible	alwaysEdible
		p	5	snack	snack
		p	6	statusEffects	statusEffects
	m	()I	a	getHunger
	m	()F	b	getSaturationModifier
	m	()Z	c	isMeat
	m	()Z	d	isAlwaysEdible
	m	()Z	e	isSnack
	m	()Ljava/util/List;	f	getStatusEffects
c	bak$a	net/minecraft/item/FoodComponent$Builder
	f	I	a	hunger
	f	F	b	saturationModifier
	f	Z	c	meat
	f	Z	d	alwaysEdible
	f	Z	e	snack
	f	Ljava/util/List;	f	statusEffects
	m	(I)Lbak$a;	a	hunger
		p	1	hunger	hunger
	m	()Lbak$a;	a	meat
	m	(F)Lbak$a;	a	saturationModifier
		p	1	saturationModifier	saturationModifier
	m	(Lakk;F)Lbak$a;	a	statusEffect
		p	1	effect	effect
		p	2	chance	chance
	m	()Lbak$a;	b	alwaysEdible
	m	()Lbak$a;	c	snack
	m	()Lbak;	d	build
c	bal	net/minecraft/item/FoodComponents
	f	Lbak;	A	POISONOUS_POTATO
	f	Lbak;	B	PORKCHOP
	f	Lbak;	C	POTATO
	f	Lbak;	D	PUFFERFISH
	f	Lbak;	E	PUMPKIN_PIE
	f	Lbak;	F	RABBIT
	f	Lbak;	G	RABBIT_STEW
	f	Lbak;	H	ROTTEN_FLESH
	f	Lbak;	I	SALMON
	f	Lbak;	J	SPIDER_EYE
	f	Lbak;	K	SUSPICIOUS_STEW
	f	Lbak;	L	SWEET_BERRIES
	f	Lbak;	M	TROPICAL_FISH
	f	Lbak;	a	APPLE
	f	Lbak;	b	BAKED_POTATO
	f	Lbak;	c	BEEF
	f	Lbak;	d	BEETROOT
	f	Lbak;	e	BEETROOT_SOUP
	f	Lbak;	f	BREAD
	f	Lbak;	g	CARROT
	f	Lbak;	h	CHICKEN
	f	Lbak;	i	CHORUS_FRUIT
	f	Lbak;	j	COD
	f	Lbak;	k	COOKED_BEEF
	f	Lbak;	l	COOKED_CHICKEN
	f	Lbak;	m	COOKED_COD
	f	Lbak;	n	COOKED_MUTTON
	f	Lbak;	o	COOKED_PORKCHOP
	f	Lbak;	p	COOKED_RABBIT
	f	Lbak;	q	COOKED_SALMON
	f	Lbak;	r	COOKIE
	f	Lbak;	s	DRIED_KELP
	f	Lbak;	t	ENCHANTED_GOLDEN_APPLE
	f	Lbak;	u	GOLDEN_APPLE
	f	Lbak;	v	GOLDEN_CARROT
	f	Lbak;	w	HONEY_BOTTLE
	f	Lbak;	x	MELON_SLICE
	f	Lbak;	y	MUSHROOM_STEW
	f	Lbak;	z	MUTTON
	m	(I)Lbak;	a	create
		p	0	hunger	hunger
c	ban	net/minecraft/container/Container
	f	Ljava/util/List;	a	slots
	f	I	b	syncId
	f	Lfy;	c	trackedStacks
		c	A list of item stacks that is used for tracking changes in {@link
	f	Ljava/util/List;	d	properties
	f	Lbbo;	e	type
	f	S	f	actionId
	f	I	g	quickCraftStage
	f	I	h	quickCraftButton
	f	Ljava/util/Set;	i	quickCraftSlots
	f	Ljava/util/List;	j	listeners
	f	Ljava/util/Set;	k	restrictedPlayers
	m	(Lbbo;I)V	<init>	<init>
		p	1	type	type
		p	2	syncId	syncId
	m	(Layj;I)Z	a	onButtonClick
		p	1	player	player
		p	2	id	id
	m	(Layi;)S	a	getNextActionId
	m	(Layj;Z)V	a	setPlayerRestriction
		p	1	player	player
		p	2	unrestricted	unrestricted
	m	(Lbwl;)I	a	calculateComparatorOutput
		p	0	entity	entity
	m	(Lbca;Lben;Z)Z	a	canInsertItemIntoSlot
		p	0	slot	slot
		p	1	stack	stack
	m	(II)V	a	setProperty
		p	1	id	id
		p	2	value	value
	m	(Lbbb;)Lbbb;	a	addProperty
	m	(Layj;Lbjw;Laje;)V	a	dropInventory
		p	1	player	player
		p	2	world	world
		p	3	inventory	inventory
	m	()Lbbo;	a	getType
	m	(Ljava/util/Set;ILben;I)V	a	calculateStackSize
		p	0	slots	slots
		p	1	rmode	rmode
		p	2	stack	stack
		p	3	stackSize	stackSize
	m	(Laje;I)V	a	checkContainerSize
		c	Checks that the size of the provided inventory is at least as large as the {@code expectedSize}.\n\n@throws IllegalArgumentException if the inventory size is smaller than {@code exceptedSize}
		p	1	expectedSize	expectedSize
	m	(ILayj;)Z	a	shouldQuickCraftContinue
	m	(Lben;Lbca;)Z	a	canInsertIntoSlot
		p	1	stack	stack
		p	2	slot	slot
	m	(Lben;IIZ)Z	a	insertItem
		p	1	stack	stack
		p	2	startIndex	startIndex
		p	3	endIndex	endIndex
		p	4	fromLast	fromLast
	m	(Lbay;)V	a	addListener
		p	1	listener	listener
	m	(Lbca;)Lbca;	a	addSlot
		p	1	slot	slot
	m	(ILben;)V	a	setStackInSlot
		p	1	slot	slot
		p	2	stack	stack
	m	(Ljava/util/List;)V	a	updateSlotStacks
		p	1	stacks	stacks
	m	(Layj;)Z	a	canUse
		p	1	player	player
	m	(I)Lbca;	a	getSlot
		p	1	index	index
	m	(IILbav;Layj;)Lben;	a	onSlotClick
		p	1	slotId	slotId
		p	2	clickData	clickData
		p	3	actionType	actionType
	m	(Lben;Lben;)Z	a	canStacksCombine
		p	0	first	first
		p	1	second	second
	m	(Lbaw;)V	a	addProperties
	m	(Lbax;Layj;Lbph;)Z	a	canUse
		p	0	context	context
		p	1	player	player
		p	2	block	block
	m	(Laje;)V	a	onContentChanged
		p	1	inventory	inventory
	m	(Lbaw;I)V	a	checkContainerDataCount
		c	Checks that the size of the {@code data} is at least as large as the {@code exceptedCount}.\n\n@throws IllegalArgumentException if the {@code data} has a smaller size than {@code exceptedCount}
		p	0	data	data
		p	1	expectedCount	expectedCount
	m	(Layj;I)Lben;	b	transferSlot
		p	1	player	player
		p	2	invSlot	invSlot
	m	()Lfy;	b	getStacks
	m	(II)I	b	packClickData
		p	0	buttonId	buttonId
		p	1	quickCraftStage	quickCraftStage
	m	(I)I	b	unpackQuickCraftStage
		p	0	clickData	clickData
	m	(Layj;)V	b	close
		p	1	player	player
	m	(Lbay;)V	b	removeListener
		p	1	listener	listener
	m	(Laje;)I	b	calculateComparatorOutput
		p	0	inventory	inventory
	m	(Lbca;)Z	b	canInsertIntoSlot
	m	(Layj;)Z	c	isNotRestricted
		p	1	player	player
	m	(I)I	c	unpackButtonId
		p	0	clickData	clickData
	m	()V	c	sendContentUpdates
		c	Sends updates to listeners if any properties or slot stacks have changed.
	m	()V	d	endQuickCraft
c	bao	net/minecraft/container/AbstractFurnaceContainer
	f	Lbjw;	c	world
	f	Laje;	d	inventory
	f	Lbaw;	e	propertyDelegate
	f	Lbgz;	f	recipeType
	m	(Lbbo;Lbgz;ILayi;)V	<init>	<init>
		p	3	syncId	syncId
	m	(Lbbo;Lbgz;ILayi;Laje;Lbaw;)V	<init>	<init>
		p	3	syncId	syncId
	m	(Lben;)Z	a	isSmeltable
		p	1	itemStack	itemStack
	m	(Lben;)Z	b	isFuel
		p	1	itemStack	itemStack
	m	()I	j	getCookProgress
	m	()I	k	getFuelProgress
	m	()Z	l	isBurning
c	bap	net/minecraft/container/AnvilContainer
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Laje;	d	result
	f	Laje;	e	inventory
	f	Lbbb;	f	levelCost
	f	Lbax;	g	context
	f	I	h	repairItemUsage
	f	Ljava/lang/String;	i	newItemName
	f	Layj;	j	player
	m	(ILayi;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
		p	3	blockContext	blockContext
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
	m	(Ljava/lang/String;)V	a	setNewItemName
	m	(I)I	d	getNextCost
		p	0	cost	cost
	m	()V	e	updateResult
	m	()I	f	getLevelCost
c	baq	net/minecraft/container/BeaconContainer
	f	Laje;	c	paymentInv
	f	Lbaq$a;	d	paymentSlot
	f	Lbax;	e	context
	f	Lbaw;	f	propertyDelegate
	m	(ILaje;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILaje;Lbaw;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
	m	(II)V	c	setEffects
		p	1	primaryEffectId	primaryEffectId
		p	2	secondaryEffectId	secondaryEffectId
	m	()I	e	getProperties
	m	()Laki;	f	getPrimaryEffect
	m	()Laki;	g	getSecondaryEffect
	m	()Z	h	hasPayment
c	baq$a	net/minecraft/container/BeaconContainer$SlotPayment
c	bar	net/minecraft/container/BlastFurnaceContainer
	m	(ILayi;Laje;Lbaw;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
c	bas	net/minecraft/container/BrewingStandContainer
	f	Laje;	c	inventory
	f	Lbaw;	d	propertyDelegate
	f	Lbca;	e	ingredientSlot
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
	m	()I	e	getFuel
	m	()I	f	getBrewTime
c	bas$a	net/minecraft/container/BrewingStandContainer$SlotFuel
	m	(Laje;III)V	<init>	<init>
		p	1	invSlot	invSlot
		p	2	xPosition	xPosition
		p	3	yPosition	yPosition
	m	(Lben;)Z	a_	matches
c	bas$b	net/minecraft/container/BrewingStandContainer$SlotIngredient
	m	(Laje;III)V	<init>	<init>
		p	1	invSlot	invSlot
		p	2	xPosition	xPosition
		p	3	yPosition	yPosition
c	bas$c	net/minecraft/container/BrewingStandContainer$SlotPotion
	m	(Laje;III)V	<init>	<init>
		p	1	invSlot	invSlot
		p	2	xPosition	xPosition
		p	3	yPosition	yPosition
	m	(Lben;)Z	b_	matches
c	bat	net/minecraft/container/CartographyTableContainer
	f	Laje;	c	inventory
	f	Lbax;	d	context
	f	Z	e	currentlyTakingItem
	f	J	f	lastTakeResultTime
	f	Lbbv;	g	resultSlot
	m	(ILayi;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
		p	3	context	context
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	inventory	inventory
	m	(Lben;Lben;Lben;)V	a	updateResult
		p	1	map	map
		p	2	item	item
		p	3	oldResult	oldResult
c	bau	net/minecraft/container/GenericContainer
	f	Laje;	c	inventory
	f	I	d	rows
	m	(Lbbo;ILayi;Laje;I)V	<init>	<init>
		p	2	syncId	syncId
		p	5	rows	rows
	m	(ILayi;Laje;)Lbau;	a	createGeneric9x3
		p	0	syncId	syncId
	m	(ILayi;)Lbau;	a	createGeneric9x1
		p	0	syncId	syncId
	m	(ILayi;Laje;)Lbau;	b	createGeneric9x6
		p	0	syncId	syncId
	m	(ILayi;)Lbau;	b	createGeneric9x2
		p	0	syncId	syncId
	m	(ILayi;)Lbau;	c	createGeneric9x3
		p	0	syncId	syncId
	m	(ILayi;)Lbau;	d	createGeneric9x4
		p	0	syncId	syncId
	m	()Laje;	e	getInventory
	m	(ILayi;)Lbau;	e	createGeneric9x5
		p	0	syncId	syncId
	m	(ILayi;)Lbau;	f	createGeneric9x6
		p	0	syncId	syncId
	m	()I	f	getRows
c	bav	net/minecraft/container/SlotActionType
c	baw	net/minecraft/container/PropertyDelegate
	c	A property delegate represents an indexed list of integer properties.\n\n<p>Property delegates are used for displaying integer values in screens,\nsuch as the progress bars in furnaces.
	m	(I)I	a	get
		p	1	index	index
	m	(II)V	a	set
		p	1	index	index
		p	2	value	value
	m	()I	a	size
c	bax	net/minecraft/container/BlockContext
	c	Block contexts allow to get a value using an optionally present {@link World} and {@link BlockPos}.
	f	Lbax;	a	EMPTY
	m	(Ljava/util/function/BiConsumer;)V	a	run
		p	1	function	function
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	run
		p	1	function	function
	m	(Lbjw;Lfk;)Lbax;	a	create
		p	0	world	world
		p	1	pos	pos
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	run
		p	1	function	function
		p	2	defaultValue	defaultValue
c	bay	net/minecraft/container/ContainerListener
	m	(Lban;Lfy;)V	a	onContainerRegistered
		p	1	container	container
	m	(Lban;II)V	a	onContainerPropertyUpdate
		p	1	container	container
		p	2	propertyId	propertyId
	m	(Lban;ILben;)V	a	onContainerSlotUpdate
		p	1	container	container
		p	2	slotId	slotId
c	baz	net/minecraft/inventory/CraftingInventory
	f	Lfy;	a	stacks
	f	I	b	width
	f	I	c	height
	f	Lban;	d	container
	m	(Lban;II)V	<init>	<init>
		p	1	container	container
		p	2	width	width
		p	3	height	height
	m	()I	f	getHeight
	m	()I	g	getWidth
c	bb	net/minecraft/predicate/entity/EntityPredicate
	f	Lbb;	a	ANY
	f	[Lbb;	b	EMPTY
	f	Lbc;	c	type
	f	Lat;	d	distance
	f	Lbp;	e	location
	f	Lbs;	f	effects
	f	Lbt;	g	nbt
	f	Laz;	h	flags
	f	Lay;	i	equipment
	f	Lbx;	j	player
	f	Ljava/lang/String;	k	team
	f	Lsm;	l	catType
	m	(Lbc;Lat;Lbp;Lbs;Lbt;Laz;Lay;Lbx;Ljava/lang/String;Lsm;)V	<init>	<init>
		p	1	type	type
		p	2	distance	distance
		p	3	location	location
		p	4	effects	effects
		p	5	nbt	nbt
		p	6	flags	flags
		p	7	equipment	equipment
		p	8	player	player
		p	9	team	team
		p	10	catType	catType
	m	([Lbb;)Lcom/google/gson/JsonElement;	a	serializeAll
		p	0	predicates	predicates
	m	(Lxe;Lakq;)Z	a	test
		p	1	player	player
	m	(Lxd;Lcvl;Lakq;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Lbb;	a	fromJson
		p	0	el	el
	m	(Lcom/google/gson/JsonElement;)[Lbb;	b	fromJsonArray
		p	0	element	element
c	bb$a	net/minecraft/predicate/entity/EntityPredicate$Builder
	f	Lbc;	a	type
	f	Lat;	b	distance
	f	Lbp;	c	location
	f	Lbs;	d	effects
	f	Lbt;	e	nbt
	f	Laz;	f	flags
	f	Lay;	g	equipment
	f	Lbx;	h	player
	f	Ljava/lang/String;	i	team
	f	Lsm;	j	catType
	m	(Lat;)Lbb$a;	a	distance
	m	(Laz;)Lbb$a;	a	flags
	m	()Lbb$a;	a	create
	m	(Lbp;)Lbb$a;	a	location
	m	(Lbt;)Lbb$a;	a	nbt
	m	(Laku;)Lbb$a;	a	type
	m	(Lbx;)Lbb$a;	a	player
	m	(Lay;)Lbb$a;	a	equipment
	m	(Lbc;)Lbb$a;	a	type
	m	(Lbs;)Lbb$a;	a	effects
	m	(Ljava/lang/String;)Lbb$a;	a	team
	m	(Laaz;)Lbb$a;	a	type
	m	(Lsm;)Lbb$a;	a	type
	m	(Lsm;)Lbb$a;	b	catType
	m	()Lbb;	b	build
c	bba	net/minecraft/container/CraftingTableContainer
	f	Lbaz;	c	craftingInv
	f	Lbbv;	d	resultInv
	f	Lbax;	e	context
	f	Layj;	f	player
	m	(ILayi;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILbjw;Layj;Lbaz;Lbbv;)V	a	updateResult
		p	0	syncId	syncId
		p	1	world	world
		p	2	player	player
		p	3	craftingInventory	craftingInventory
		p	4	resultInventory	resultInventory
c	bbb	net/minecraft/container/Property
	c	An integer property that is stored in a {@link Container}.\n\n<p>{@code Property} instances are used for tracking integer properties in property delegates\nand other sources of integer properties, and sending needed content updates to listeners.\n\n@see Container
	f	I	a	oldValue
	m	()Lbbb;	a	create
		c	Creates a new property that is not attached to any other objects.
	m	(I)V	a	set
		p	1	value	value
	m	(Lbaw;I)Lbbb;	a	create
		c	Creates a new property that accesses the {@code index} of the {@code delegate}.
		p	0	delegate	delegate
		p	1	index	index
	m	([II)Lbbb;	a	create
		c	Creates a new property that accesses the {@code index} of the {@code array}.
		p	0	array	array
		p	1	index	index
	m	()I	b	get
	m	()Z	c	hasChanged
		c	Returns true if the value of this property has changed since the last call to {@code hasChanged()}.
c	bbb$3	net/minecraft/container/Property$3
	f	I	a	value
c	bbc	net/minecraft/container/Generic3x3Container
	f	Laje;	c	inventory
	m	(ILayi;Laje;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
c	bbd	net/minecraft/container/EnchantingTableContainer
	f	[I	c	enchantmentPower
	f	[I	d	enchantmentId
	f	[I	e	enchantmentLevel
	f	Laje;	f	inventory
	f	Lbax;	g	context
	f	Ljava/util/Random;	h	random
	f	Lbbb;	i	seed
	m	(ILayi;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
	m	(Lben;II)Ljava/util/List;	a	getRandomEnchantments
		p	1	stack	stack
	m	()I	e	getLapisCount
	m	()I	f	getSeed
c	bbe	net/minecraft/container/FurnaceFuelSlot
	f	Lbao;	a	container
	m	(Lbao;Laje;III)V	<init>	<init>
		p	3	invSlot	invSlot
		p	4	xPosition	xPosition
		p	5	yPosition	yPosition
	m	(Lben;)Z	c_	isBucket
		p	0	stack	stack
c	bbf	net/minecraft/container/FurnaceContainer
	m	(ILayi;Laje;Lbaw;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
c	bbg	net/minecraft/container/FurnaceOutputSlot
	f	Layj;	a	player
	f	I	b	amount
	m	(Layj;Laje;III)V	<init>	<init>
		p	1	player	player
		p	2	inventory	inventory
		p	3	invSlot	invSlot
		p	4	xPosition	xPosition
		p	5	yPosition	yPosition
c	bbh	net/minecraft/container/GrindstoneContainer
	f	Laje;	c	resultInventory
	f	Laje;	d	craftingInventory
	f	Lbax;	e	context
	m	(ILayi;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
	m	(Lben;II)Lben;	a	grind
		p	1	item	item
		p	2	damage	damage
		p	3	amount	amount
	m	(Lben;Lben;)Lben;	b	transferEnchantments
		p	1	target	target
		p	2	source	source
	m	()V	e	updateResult
c	bbh$4	net/minecraft/container/GrindstoneContainer$4
	m	(Lbjw;)I	a	getExperience
		p	1	world	world
	m	(Lben;)I	e	getExperience
		p	1	stack	stack
c	bbi	net/minecraft/container/HopperContainer
	f	Laje;	c	inventory
	m	(ILayi;Laje;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
c	bbj	net/minecraft/container/HorseContainer
	f	Laje;	c	playerInv
	f	Laue;	d	entity
	m	(ILayi;Laje;Laue;)V	<init>	<init>
		p	1	syncId	syncId
c	bbk	net/minecraft/container/PlayerContainer
	f	Lsm;	c	BLOCK_ATLAS_TEXTURE
	f	Lsm;	d	EMPTY_HELMET_SLOT_TEXTURE
	f	Lsm;	e	EMPTY_CHESTPLATE_SLOT_TEXTURE
	f	Lsm;	f	EMPTY_LEGGINGS_SLOT_TEXTURE
	f	Lsm;	g	EMPTY_BOOTS_SLOT_TEXTURE
	f	Lsm;	h	EMPTY_OFFHAND_ARMOR_SLOT
	f	Z	i	onServer
	f	[Lsm;	j	EMPTY_ARMOR_SLOT_TEXTURES
	f	[Lakv;	k	EQUIPMENT_SLOT_ORDER
	f	Lbaz;	l	craftingInventory
	f	Lbbv;	m	craftingResultInventory
	f	Layj;	n	owner
	m	(Layi;ZLayj;)V	<init>	<init>
		p	1	inventory	inventory
		p	2	onServer	onServer
		p	3	owner	owner
c	bbl	net/minecraft/container/LecternContainer
	f	Laje;	c	inventory
	f	Lbaw;	d	propertyDelegate
	m	(ILaje;Lbaw;)V	<init>	<init>
		p	1	syncId	syncId
	m	(I)V	<init>	<init>
		p	1	syncId	syncId
	m	()Lben;	e	getBookItem
	m	()I	f	getPage
c	bbm	net/minecraft/container/LoomContainer
	f	Lbax;	c	context
	f	Lbbb;	d	selectedPattern
	f	Ljava/lang/Runnable;	e	inventoryChangeListener
	f	Lbca;	f	bannerSlot
	f	Lbca;	g	dyeSlot
	f	Lbca;	h	patternSlot
	f	Lbca;	i	outputSlot
	f	J	j	lastTakeResultTime
	f	Laje;	k	inputInventory
	f	Laje;	l	outputInventory
	m	(ILayi;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
	m	(Ljava/lang/Runnable;)V	a	setInventoryChangeListener
		p	1	inventoryChangeListener	inventoryChangeListener
	m	()I	e	getSelectedPattern
	m	()Lbca;	f	getBannerSlot
	m	()Lbca;	g	getDyeSlot
	m	()Lbca;	h	getPatternSlot
	m	()Lbca;	i	getOutputSlot
	m	()V	j	updateOutputSlot
c	bbn	net/minecraft/container/ContainerFactory
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
		p	2	inv	inv
		p	3	player	player
c	bbo	net/minecraft/container/ContainerType
	f	Lbbo$a;	x	factory
	m	(Lbbo$a;)V	<init>	<init>
		p	1	factory	factory
	m	(Ljava/lang/String;Lbbo$a;)Lbbo;	a	register
		p	0	id	id
		p	1	factory	factory
	m	(ILayi;)Lban;	a	create
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bbo$a	net/minecraft/container/ContainerType$Factory
	m	(ILayi;)Lban;	create	create
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
c	bbp	net/minecraft/village/TraderInventory
	f	Lbiy;	a	trader
	f	Lfy;	b	inventory
	f	Lbiz;	c	traderRecipe
	f	I	d	recipeIndex
	f	I	e	traderRewardedExperience
	m	(I)V	c	setRecipeIndex
		p	1	index	index
	m	(I)Z	d	needRecipeUpdate
		p	1	slot	slot
	m	()V	f	updateRecipes
	m	()Lbiz;	g	getTradeOffer
	m	()I	h	getTraderRewardedExperience
c	bbq	net/minecraft/container/MerchantContainer
	f	Lbiy;	c	trader
	f	Lbbp;	d	traderInventory
	f	I	e	levelProgress
	f	Z	f	levelled
	f	Z	g	canRefreshTrades
	m	(ILayi;Lbiy;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
		p	3	trader	trader
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	playerInventory	playerInventory
	m	(Lbja;)V	a	setOffers
	m	(Z)V	a	setCanLevel
		p	1	canLevel	canLevel
	m	(Z)V	b	setRefreshTrades
		p	1	refreshable	refreshable
	m	(Lben;Lben;)Z	b	equals
		p	1	itemStack	itemStack
		p	2	otherItemStack	otherItemStack
	m	(ILben;)V	c	autofill
		p	1	slot	slot
		p	2	stack	stack
	m	(I)V	d	setRecipeIndex
		p	1	index	index
	m	(I)V	e	setExperienceFromServer
		p	1	experience	experience
	m	()I	e	getExperience
	m	()I	f	getTraderRewardedExperience
	m	(I)V	f	setLevelProgress
		p	1	porgress	porgress
	m	()I	g	getLevelProgress
	m	(I)V	g	switchTo
		p	1	recipeIndex	recipeIndex
	m	()Z	h	canRefreshTrades
	m	()Lbja;	i	getRecipes
	m	()Z	j	isLevelled
	m	()V	k	playYesSound
c	bbr	net/minecraft/container/TradeOutputSlot
	f	Lbbp;	a	traderInventory
	f	Layj;	b	player
	f	I	g	amount
	f	Lbiy;	h	trader
	m	(Layj;Lbiy;Lbbp;III)V	<init>	<init>
		p	1	player	player
		p	2	trader	trader
		p	3	traderInventory	traderInventory
		p	4	index	index
		p	5	x	x
		p	6	y	y
c	bbs	net/minecraft/inventory/EnderChestInventory
	f	Lbwx;	a	currentBlockEntity
	m	(Lbwx;)V	a	setCurrentBlockEntity
	m	(Ljz;)V	a	readTags
	m	()Ljz;	f	getTags
c	bbt	net/minecraft/container/CraftingContainer
	m	(Layl;)V	a	populateRecipeFinder
	m	(Lbgw;)Z	a	matches
	m	(ZLbgw;Lxe;)V	a	fillInputSlots
	m	()V	e	clearCraftingSlots
	m	()I	f	getCraftingResultSlotIndex
	m	()I	g	getCraftingWidth
	m	()I	h	getCraftingHeight
	m	()I	i	getCraftingSlotCount
c	bbu	net/minecraft/recipe/RecipeUnlocker
	m	(Lbjw;Lxe;Lbgw;)Z	a	shouldCraftRecipe
		p	2	player	player
	m	(Lbgw;)V	a	setLastRecipe
		p	1	recipe	recipe
	m	()Lbgw;	aa_	getLastRecipe
	m	(Layj;)V	b	unlockLastRecipe
		p	1	player	player
c	bbv	net/minecraft/inventory/CraftingResultInventory
	f	Lfy;	a	stack
	f	Lbgw;	b	lastRecipe
c	bbw	net/minecraft/container/CraftingResultSlot
	f	Lbaz;	a	craftingInv
	f	Layj;	b	player
	f	I	g	amount
	m	(Layj;Lbaz;Laje;III)V	<init>	<init>
		p	1	player	player
		p	2	craftingInv	craftingInv
		p	3	inventory	inventory
		p	4	invSlot	invSlot
		p	5	xPosition	xPosition
		p	6	yPosition	yPosition
c	bbx	net/minecraft/container/ShulkerBoxContainer
	f	Laje;	c	inventory
	m	(ILayi;Laje;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
c	bby	net/minecraft/container/ShulkerBoxSlot
	m	(Laje;III)V	<init>	<init>
		p	1	inventory	inventory
		p	2	invSlot	invSlot
		p	3	xPosition	xPosition
c	bbz	net/minecraft/container/ArrayPropertyDelegate
	c	A {@link PropertyDelegate} that is implemented using an int array.
	f	[I	a	data
	m	(I)V	<init>	<init>
		p	1	size	size
c	bc	net/minecraft/predicate/entity/EntityTypePredicate
	f	Lbc;	a	ANY
	f	Lcom/google/common/base/Joiner;	b	COMMA_JOINER
	m	(Laaz;)Lbc;	a	create
		p	0	tag	tag
	m	(Lcom/google/gson/JsonElement;)Lbc;	a	deserialize
		p	0	element	element
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Laku;)Z	a	matches
	m	(Laku;)Lbc;	b	create
		p	0	type	type
c	bc$a	net/minecraft/predicate/entity/EntityTypePredicate$Tagged
	f	Laaz;	b	tag
c	bc$b	net/minecraft/predicate/entity/EntityTypePredicate$Single
	f	Laku;	b	type
c	bca	net/minecraft/container/Slot
	f	I	a	invSlot
	f	Laje;	c	inventory
	f	I	d	id
	f	I	e	xPosition
	f	I	f	yPosition
	m	(Laje;III)V	<init>	<init>
		p	1	inventory	inventory
		p	2	invSlot	invSlot
		p	3	xPosition	xPosition
		p	4	yPosition	yPosition
	m	(Layj;Lben;)Lben;	a	onTakeItem
		p	1	player	player
		p	2	stack	stack
	m	(Lben;I)V	a	onCrafted
		p	1	stack	stack
		p	2	amount	amount
	m	()I	a	getMaxStackAmount
	m	(Layj;)Z	a	canTakeItems
		p	1	playerEntity	playerEntity
	m	(Lben;)Z	a	canInsert
		p	1	stack	stack
	m	(I)Lben;	a	takeStack
		p	1	amount	amount
	m	(Lben;Lben;)V	a	onStackChanged
		p	1	originalItem	originalItem
	m	(I)V	b	onTake
		p	1	amount	amount
	m	()Z	b	doDrawHoveringEffect
	m	(Lben;)I	b	getMaxStackAmount
	m	()Lcom/mojang/datafixers/util/Pair;	c	getBackgroundSprite
	m	(Lben;)V	c	onCrafted
		p	1	stack	stack
	m	()V	d	markDirty
	m	(Lben;)V	d	setStack
	m	()Lben;	e	getStack
	m	()Z	f	hasStack
c	bcb	net/minecraft/container/SmokerContainer
	m	(ILayi;Laje;Lbaw;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
c	bcc	net/minecraft/recipe/RecipeInputProvider
	m	(Layl;)V	a	provideRecipeInputs
c	bcd	net/minecraft/container/StonecutterContainer
	f	Lbca;	c	inputSlot
	f	Lbca;	d	outputSlot
	f	Laje;	e	inventory
	f	Lbax;	f	context
	f	Lbbb;	g	selectedRecipe
	f	Lbjw;	h	world
	f	Ljava/util/List;	i	availableRecipes
	f	Lben;	j	inputStack
	f	J	k	lastTakeTime
	f	Ljava/lang/Runnable;	l	contentsChangedListener
	m	(ILayi;Lbax;)V	<init>	<init>
		p	1	syncId	syncId
	m	(ILayi;)V	<init>	<init>
		p	1	syncId	syncId
	m	(Laje;Lben;)V	a	updateInput
	m	(Ljava/lang/Runnable;)V	a	setContentsChangedListener
	m	()I	e	getSelectedRecipe
	m	()Ljava/util/List;	f	getAvailableRecipes
	m	()I	g	getAvailableRecipeCount
	m	()Z	h	canCraft
	m	()V	i	populateResult
c	bcf	net/minecraft/item/AirBlockItem
	f	Lbph;	a	block
	m	(Lbph;Lbei$a;)V	<init>	<init>
		p	1	block	block
		p	2	settings	settings
c	bcg	net/minecraft/item/ArmorItem
	f	Lgl;	a	DISPENSER_BEHAVIOR
	f	Lakv;	b	slot
	f	I	c	protection
	f	F	d	toughness
	f	Lbch;	e	type
	f	[Ljava/util/UUID;	k	MODIFIERS
	m	(Lbch;Lakv;Lbei$a;)V	<init>	<init>
		p	1	material	material
		p	2	slot	slot
		p	3	settings	settings
	m	()Lbch;	Q_	getMaterial
	m	(Lfl;Lben;)Z	a	dispenseArmor
		p	0	pointer	pointer
		p	1	armor	armor
	m	()Lakv;	b	getSlotType
	m	()I	e	getProtection
c	bch	net/minecraft/item/ArmorMaterial
	m	(Lakv;)I	a	getDurability
		p	1	slot	slot
	m	()I	a	getEnchantability
	m	(Lakv;)I	b	getProtectionAmount
		p	1	slot	slot
	m	()Laah;	b	getEquipSound
	m	()Lbgt;	c	getRepairIngredient
	m	()Ljava/lang/String;	d	getName
	m	()F	e	getToughness
c	bci	net/minecraft/item/ArmorMaterials
	f	Lbci;	b	CHAIN
	f	[I	g	BASE_DURABILITY
	f	Ljava/lang/String;	h	name
	f	I	i	durabilityMultiplier
	f	[I	j	protectionAmounts
	f	I	k	enchantability
	f	Laah;	l	equipSound
	f	F	m	toughness
	f	Labn;	n	repairIngredientSupplier
	m	(Ljava/lang/String;ILjava/lang/String;I[IILaah;FLjava/util/function/Supplier;)V	<init>	<init>
		p	3	name	name
		p	4	durabilityMultiplier	durabilityMultiplier
		p	5	protectionAmounts	protectionAmounts
		p	6	enchantability	enchantability
		p	7	equipSound	equipSound
		p	8	toughness	toughness
		p	9	ingredientSupplier	ingredientSupplier
c	bcj	net/minecraft/item/ArmorStandItem
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Lavp;Ljava/util/Random;)V	a	setRotations
		p	1	stand	stand
		p	2	random	random
c	bck	net/minecraft/item/ArrowItem
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lben;Lakz;)Layn;	a	createArrow
		p	1	world	world
		p	2	stack	stack
		p	3	shooter	shooter
c	bcl	net/minecraft/item/AxeItem
	f	Ljava/util/Map;	a	STRIPPED_BLOCKS
	f	Ljava/util/Set;	e	EFFECTIVE_BLOCKS
	m	(Lbfs;FFLbei$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
	m	(Lbfz;Layj;)V	a	method_20269
		p	1	p	p
c	bcm	net/minecraft/item/BannerItem
	m	(Lbph;Lbph;Lbei$a;)V	<init>	<init>
		p	1	standingBlock	standingBlock
		p	2	wallBlock	wallBlock
	m	(Lben;Ljava/util/List;)V	a	appendBannerTooltip
		p	0	stack	stack
		p	1	tooltip	tooltip
	m	()Lbdj;	b	getColor
c	bcn	net/minecraft/item/BannerPatternItem
	f	Lbwd;	a	pattern
	m	(Lbwd;Lbei$a;)V	<init>	<init>
		p	1	pattern	pattern
		p	2	settings	settings
	m	()Lbwd;	b	getPattern
	m	()Llf;	d	getDescription
c	bco	net/minecraft/item/BedItem
c	bcp	net/minecraft/item/BlockItem
	f	Lbph;	a	block
	m	(Lbph;Lbei$a;)V	<init>	<init>
		p	1	block	block
		p	2	settings	settings
	m	()Z	T_	checkStatePlacement
	m	(Lbyj;Lbzm;Ljava/lang/String;)Lbyj;	a	with
		p	0	state	state
		p	1	property	property
		p	2	name	name
	m	(Lfk;Lbjw;Lben;Lbyj;)Lbyj;	a	placeFromTag
		p	1	pos	pos
		p	2	world	world
		p	3	stack	stack
		p	4	state	state
	m	(Lbyj;)Laah;	a	getPlaceSound
		p	1	state	state
	m	(Lbcq;)Lajl;	a	place
		p	1	context	context
	m	(Lbcq;Lbyj;)Z	a	place
		p	1	context	context
		p	2	state	state
	m	(Lfk;Lbjw;Layj;Lben;Lbyj;)Z	a	postPlacement
		p	1	pos	pos
		p	2	world	world
		p	3	player	player
		p	4	stack	stack
		p	5	state	state
	m	(Lbyj;Lbzm;Ljava/lang/Comparable;)Lbyj;	a	method_18082
		p	2	value	value
	m	(Ljava/util/Map;Lbei;)V	a	appendBlocks
		p	1	map	map
		p	2	item	item
	m	(Lbjw;Layj;Lfk;Lben;)Z	a	writeTagToBlockEntity
		p	0	world	world
		p	1	player	player
		p	2	pos	pos
		p	3	stack	stack
	m	(Lbcq;Lbyj;)Z	b	canPlace
		p	1	context	context
		p	2	state	state
	m	(Lbcq;)Lbcq;	b	getPlacementContext
		p	1	context	context
	m	(Lbcq;)Lbyj;	c	getPlacementState
		p	1	context	context
	m	()Lbph;	e	getBlock
c	bcq	net/minecraft/item/ItemPlacementContext
	f	Z	a	canReplaceExisting
	f	Lfk;	g	placementPos
	m	(Lbfz;)V	<init>	<init>
		p	1	context	context
	m	(Lbjw;Layj;Lajk;Lben;Lcvg;)V	<init>	<init>
		p	1	world	world
		p	2	player	player
	m	(Lbcq;Lfk;Lfp;)Lbcq;	a	offset
		p	0	context	context
		p	1	pos	pos
		p	2	side	side
	m	()Z	b	canPlace
	m	()Z	c	canReplaceExisting
	m	()Lfp;	d	getPlayerLookDirection
	m	()[Lfp;	e	getPlacementDirections
c	bcr	net/minecraft/item/BoatItem
	f	Ljava/util/function/Predicate;	a	RIDERS
	f	Lazz$b;	b	type
	m	(Lazz$b;Lbei$a;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
c	bcs	net/minecraft/item/BoneMealItem
	m	(Lbjx;Lfk;I)V	a	createParticles
		p	0	world	world
		p	1	pos	pos
		p	2	count	count
	m	(Lben;Lbjw;Lfk;Lfp;)Z	a	useOnGround
		p	0	stack	stack
		p	1	world	world
		p	2	blockPos	blockPos
		p	3	facing	facing
	m	(Lben;Lbjw;Lfk;)Z	a	useOnFertilizable
		p	0	stack	stack
		p	1	world	world
		p	2	pos	pos
c	bct	net/minecraft/item/BookItem
c	bcu	net/minecraft/item/GlassBottleItem
	m	(Lakp;)Z	a	method_7726
		p	0	entity	entity
	m	(Lben;Layj;Lben;)Lben;	a	fill
		p	1	emptyBottle	emptyBottle
		p	2	player	player
		p	3	filledBottle	filledBottle
c	bcv	net/minecraft/item/BowItem
	m	(I)F	a	getPullProgress
		p	0	useTicks	useTicks
	m	(Layj;Layj;)V	a	method_20270
		p	1	p	p
	m	(Lben;Lbjw;Lakz;)F	b	method_7724
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;Lbjw;Lakz;)F	c	method_7723
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
c	bcw	net/minecraft/item/MushroomStewItem
c	bcx	net/minecraft/item/BucketItem
	f	Lcoi;	a	fluid
	m	(Lcoi;Lbei$a;)V	<init>	<init>
		p	1	fluid	fluid
		p	2	settings	settings
	m	(Lben;Layj;Lbei;)Lben;	a	getFilledStack
		p	1	stack	stack
		p	2	player	player
		p	3	filledBucket	filledBucket
	m	(Layj;Lbjw;Lfk;Lcvg;)Z	a	placeFluid
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
		p	4	hitResult	hitResult
	m	(Lbjw;Lben;Lfk;)V	a	onEmptied
		p	1	world	world
		p	2	stack	stack
		p	3	pos	pos
	m	(Layj;Lbjx;Lfk;)V	a	playEmptyingSound
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
	m	(Lben;Layj;)Lben;	a	getEmptiedStack
		p	1	stack	stack
		p	2	player	player
c	bcy	net/minecraft/item/CarrotOnAStickItem
	m	(Lajk;Layj;)V	a	method_20271
		p	1	p	p
c	bcz	net/minecraft/item/ChorusFruitItem
c	bd	net/minecraft/advancement/criterion/FilledBucketCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lben;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbd$a;	b	conditionsFromJson
c	bd$a	net/minecraft/advancement/criterion/FilledBucketCriterion$Conditions
	f	Lbj;	a	item
	m	(Lbj;)V	<init>	<init>
		p	1	item	item
	m	(Lben;)Z	a	matches
		p	1	stack	stack
	m	(Lbj;)Lbd$a;	a	create
		p	0	item	item
c	bda	net/minecraft/item/ClockItem
c	bda$1	net/minecraft/item/ClockItem$1
	f	D	b	time
	f	D	c	step
	f	J	d	lastTick
	m	(Lbjw;D)D	a	getTime
		p	1	world	world
		p	2	skyAngle	skyAngle
	m	(Lben;Lbjw;Lakz;)F	call	call
		p	1	stack	stack
		p	2	world	world
		p	3	user	user
c	bdb	net/minecraft/item/CompassItem
c	bdb$1	net/minecraft/item/CompassItem$1
	f	D	b	angle
	f	D	c	step
	f	J	d	lastTick
	m	(Lavr;)D	a	getYaw
		p	1	entity	entity
	m	(Lbjx;Lakq;)D	a	getAngleToSpawn
		p	1	world	world
		p	2	entity	entity
	m	(Lbjw;D)D	a	getAngle
		p	1	world	world
		p	2	entityYaw	entityYaw
	m	(Lben;Lbjw;Lakz;)F	call	call
		p	1	stack	stack
		p	2	world	world
		p	3	user	user
c	bdc	net/minecraft/item/NetworkSyncedItem
	m	(Lben;Lbjw;Layj;)Llt;	a	createSyncPacket
		p	1	stack	stack
		p	2	world	world
		p	3	player	player
c	bdd	net/minecraft/item/ItemGroup
	f	[Lbdd;	a	GROUPS
	f	Lbdd;	b	BUILDING_BLOCKS
	f	Lbdd;	c	DECORATIONS
	f	Lbdd;	d	REDSTONE
	f	Lbdd;	e	TRANSPORTATION
	f	Lbdd;	f	MISC
	f	Lbdd;	g	SEARCH
	f	Lbdd;	h	FOOD
	f	Lbdd;	i	TOOLS
	f	Lbdd;	j	COMBAT
	f	Lbdd;	k	BREWING
	f	Lbdd;	l	MATERIALS
	f	Lbdd;	m	HOTBAR
	f	Lbdd;	n	INVENTORY
	f	I	o	index
	f	Ljava/lang/String;	p	id
	f	Ljava/lang/String;	q	name
	f	Ljava/lang/String;	r	texture
	f	Z	s	scrollbar
	f	Z	t	tooltip
	f	[Lbhy;	u	enchantments
	f	Lben;	v	icon
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	index	index
		p	2	id	id
	m	()I	a	getIndex
	m	(Ljava/lang/String;)Lbdd;	a	setTexture
		p	1	texture	texture
	m	(Lfy;)V	a	appendStacks
		p	1	stacks	stacks
	m	(Lbhy;)Z	a	containsEnchantments
		p	1	target	target
	m	([Lbhy;)Lbdd;	a	setEnchantments
		p	1	targets	targets
	m	()Ljava/lang/String;	b	getId
	m	(Ljava/lang/String;)Lbdd;	b	setName
		p	1	name	name
	m	()Ljava/lang/String;	c	getName
	m	()Ljava/lang/String;	d	getTranslationKey
	m	()Lben;	e	getIcon
	m	()Lben;	f	createIcon
	m	()Ljava/lang/String;	g	getTexture
	m	()Z	h	hasTooltip
	m	()Lbdd;	i	setNoTooltip
	m	()Z	j	hasScrollbar
	m	()Lbdd;	k	setNoScrollbar
	m	()I	l	getColumn
	m	()Z	m	isTopRow
	m	()Z	n	isSpecial
	m	()[Lbhy;	o	getEnchantments
c	bdd$1	net/minecraft/item/ItemGroup$1
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$10	net/minecraft/item/ItemGroup$10
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$11	net/minecraft/item/ItemGroup$11
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$12	net/minecraft/item/ItemGroup$12
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$2	net/minecraft/item/ItemGroup$2
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$3	net/minecraft/item/ItemGroup$3
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$4	net/minecraft/item/ItemGroup$4
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$5	net/minecraft/item/ItemGroup$5
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$6	net/minecraft/item/ItemGroup$6
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$7	net/minecraft/item/ItemGroup$7
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$8	net/minecraft/item/ItemGroup$8
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bdd$9	net/minecraft/item/ItemGroup$9
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	unlocalizedName	unlocalizedName
c	bde	net/minecraft/item/CrossbowItem
	f	Z	c	charged
	f	Z	d	loaded
	m	(I)Laah;	a	getQuickChargeSound
		p	1	stage	stage
	m	(Lbjw;Lakz;Lben;Lben;)Layn;	a	createArrow
		p	0	world	world
		p	1	entity	entity
		p	2	crossbow	crossbow
		p	3	arrow	arrow
	m	(Lbjw;Lakz;Lben;)V	a	postShoot
		p	0	world	world
		p	1	entity	entity
		p	2	stack	stack
	m	(Lakz;Lben;Lben;ZZ)Z	a	loadProjectile
		p	0	shooter	shooter
		p	1	crossbow	crossbow
		p	2	projectile	projectile
		p	3	simulated	simulated
		p	4	creative	creative
	m	(Z)F	a	getSoundPitch
		p	0	flag	flag
	m	(ILben;)F	a	getPullProgress
		p	0	useTicks	useTicks
		p	1	stack	stack
	m	(Lbei;Lben;)Z	a	method_7768
		p	1	s	s
	m	(Lben;Lbei;)Z	a	hasProjectile
		p	0	crossbow	crossbow
		p	1	projectile	projectile
	m	(Lakz;Lben;)Z	a	loadProjectiles
		p	0	shooter	shooter
		p	1	projectile	projectile
	m	(Lbjw;Lakz;Lajk;Lben;Lben;FZFFF)V	a	shoot
		p	0	world	world
		p	1	shooter	shooter
		p	2	hand	hand
		p	3	crossbow	crossbow
		p	4	projectile	projectile
		p	5	soundPitch	soundPitch
		p	6	creative	creative
		p	7	speed	speed
		p	8	divergence	divergence
		p	9	simulated	simulated
	m	(Lajk;Lakz;)V	a	method_20272
		p	1	e	e
	m	(Lbjw;Lakz;Lajk;Lben;FF)V	a	shootAll
		p	0	world	world
		p	1	entity	entity
		p	2	hand	hand
		p	3	stack	stack
		p	4	speed	speed
		p	5	divergence	divergence
	m	(Lben;Z)V	a	setCharged
		p	0	stack	stack
		p	1	charged	charged
	m	(Ljava/util/Random;)[F	a	getSoundPitches
		p	0	random	random
	m	(Lben;Lbjw;Lakz;)F	b	method_7771
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;Lben;)V	b	putProjectile
		p	0	crossbow	crossbow
		p	1	projectile	projectile
	m	(Lben;Lbjw;Lakz;)F	c	method_7779
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;)Z	d	isCharged
		p	0	stack	stack
	m	(Lben;Lbjw;Lakz;)F	d	method_7776
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;)I	e	getPullTime
		p	0	stack	stack
	m	(Lben;)Ljava/util/List;	j	getProjectiles
		p	0	crossbow	crossbow
	m	(Lben;)V	k	clearProjectiles
		p	0	crossbow	crossbow
	m	(Lben;)F	l	getSpeed
		p	0	stack	stack
c	bdf	net/minecraft/item/DebugStickItem
	m	(Lbyj;Lbzm;Z)Lbyj;	a	cycle
		p	0	state	state
		p	1	property	property
		p	2	inverse	inverse
	m	(Lbyj;Lbzm;)Ljava/lang/String;	a	getValueString
		p	0	state	state
		p	1	property	property
	m	(Layj;Lbyj;Lbjx;Lfk;ZLben;)V	a	use
		p	1	player	player
		p	2	state	state
		p	3	world	world
		p	4	pos	pos
		p	5	update	update
		p	6	stack	stack
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	cycle
		p	0	elements	elements
		p	1	current	current
		p	2	inverse	inverse
	m	(Layj;Llf;)V	a	sendMessage
		p	0	player	player
		p	1	message	message
c	bdg	net/minecraft/item/MiningToolItem
	f	Ljava/util/Set;	a	effectiveBlocks
	f	F	b	miningSpeed
	f	F	c	attackDamage
	f	F	d	attackSpeed
	m	(FFLbfs;Ljava/util/Set;Lbei$a;)V	<init>	<init>
		p	1	attackDamage	attackDamage
		p	2	attackSpeed	attackSpeed
		p	3	material	material
		p	4	effectiveBlocks	effectiveBlocks
		p	5	settings	settings
	m	(Lakz;)V	a	method_20273
		p	0	e	e
	m	(Lakz;)V	b	method_20274
		p	0	e	e
c	bdh	net/minecraft/item/AutomaticItemPlacementContext
	f	Lfp;	g	facing
	m	(Lbjw;Lfk;Lfp;Lben;Lfp;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	facing	facing
		p	4	stack	stack
		p	5	side	side
c	bdi	net/minecraft/item/TallBlockItem
c	bdj	net/minecraft/util/DyeColor
	f	[Lbdj;	q	VALUES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	r	BY_FIREWORK_COLOR
	f	I	s	id
	f	Ljava/lang/String;	t	name
	f	Lcop;	u	materialColor
	f	I	v	color
	f	I	w	colorSwapped
	f	[F	x	colorComponents
	f	I	y	fireworkColor
	f	I	z	signColor
	m	(Ljava/lang/String;IILjava/lang/String;ILcop;II)V	<init>	<init>
		p	3	woolId	woolId
		p	4	name	name
		p	5	color	color
		p	6	materialColor	materialColor
	m	(Ljava/lang/String;Lbdj;)Lbdj;	a	byName
	m	()I	a	getId
	m	(I)Lbdj;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	b	getName
	m	(I)Lbdj;	b	byFireworkColor
	m	()[F	d	getColorComponents
	m	()Lcop;	e	getMaterialColor
	m	()I	f	getFireworkColor
	m	()I	g	getSignColor
c	bdk	net/minecraft/item/DyeItem
	f	Ljava/util/Map;	a	DYES
	f	Lbdj;	b	color
	m	(Lbdj;Lbei$a;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	(Lbdj;)Lbdk;	a	byColor
		p	0	color	color
	m	()Lbdj;	d	getColor
c	bdl	net/minecraft/item/DyeableArmorItem
c	bdm	net/minecraft/item/DyeableHorseArmorItem
c	bdn	net/minecraft/item/DyeableItem
	m	(Lben;I)V	a	setColor
		p	1	stack	stack
		p	2	color	color
	m	(Lben;)Z	a	hasColor
		p	1	stack	stack
	m	(Lben;Ljava/util/List;)Lben;	a	blendAndSetColor
		p	0	stack	stack
		p	1	colors	colors
	m	(Lben;)I	b	getColor
		p	1	stack	stack
	m	(Lben;)V	c	removeColor
		p	1	stack	stack
c	bdo	net/minecraft/item/EggItem
c	bdp	net/minecraft/item/ElytraItem
	m	(Lben;Lbjw;Lakz;)F	b	method_7805
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;)Z	e	isUsable
		p	0	stack	stack
c	bdq	net/minecraft/item/EmptyMapItem
c	bdr	net/minecraft/item/EnchantedBookItem
	m	(Lbia;)Lben;	a	forEnchantment
		p	0	info	info
	m	(Lben;Lbia;)V	a	addEnchantment
		p	0	stack	stack
		p	1	enchantmentInfo	enchantmentInfo
	m	(Lben;)Ljz;	e	getEnchantmentTag
		p	0	stack	stack
c	bds	net/minecraft/item/EnchantedGoldenAppleItem
c	bdt	net/minecraft/item/EndCrystalItem
c	bdu	net/minecraft/item/EnderEyeItem
c	bdv	net/minecraft/item/EnderPearlItem
c	bdw	net/minecraft/item/ExperienceBottleItem
c	bdx	net/minecraft/item/FireChargeItem
	m	(Lbjw;Lfk;)V	a	playUseSound
		p	1	world	world
		p	2	pos	pos
c	bdy	net/minecraft/item/FireworkItem
c	bdy$a	net/minecraft/item/FireworkItem$Type
	f	[Lbdy$a;	f	TYPES
	f	I	g	id
	f	Ljava/lang/String;	h	name
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getId
	m	(Lbdy$a;)I	a	method_7814
		p	0	type	type
	m	(I)Lbdy$a;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	b	getName
c	bdz	net/minecraft/item/FireworkChargeItem
	m	(Ljt;Ljava/util/List;)V	a	appendFireworkTooltip
		p	0	tag	tag
		p	1	tooltip	tooltip
	m	(Llf;[I)Llf;	a	appendColors
		p	0	line	line
		p	1	colors	colors
	m	(I)Llf;	a	getColorText
		p	0	color	color
c	be	net/minecraft/advancement/criterion/FishingRodHookedCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lben;Lavw;Ljava/util/Collection;)V	a	trigger
		p	1	player	player
		p	2	rodStack	rodStack
		p	3	bobber	bobber
		p	4	fishingLoots	fishingLoots
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbe$a;	b	conditionsFromJson
c	be$a	net/minecraft/advancement/criterion/FishingRodHookedCriterion$Conditions
	f	Lbj;	a	rod
	f	Lbb;	b	hookedEntity
	f	Lbj;	c	caughtItem
	m	(Lbj;Lbb;Lbj;)V	<init>	<init>
		p	1	rod	rod
		p	2	bobber	bobber
		p	3	item	item
	m	(Lbj;Lbb;Lbj;)Lbe$a;	a	create
		p	0	rod	rod
		p	1	bobber	bobber
		p	2	item	item
	m	(Lxe;Lben;Lavw;Ljava/util/Collection;)Z	a	matches
		p	1	player	player
		p	2	rodStack	rodStack
		p	3	bobber	bobber
		p	4	fishingLoots	fishingLoots
c	bea	net/minecraft/item/FishBucketItem
	f	Laku;	a	fishType
	m	(Laku;Lcoi;Lbei$a;)V	<init>	<init>
		p	1	type	type
		p	2	fluid	fluid
		p	3	settings	settings
	m	(Lbjw;Lben;Lfk;)V	b	spawnFish
		p	1	world	world
		p	2	stack	stack
		p	3	pos	pos
c	beb	net/minecraft/item/FishingRodItem
	m	(Lajk;Layj;)V	a	method_20275
		p	1	p	p
	m	(Lben;Lbjw;Lakz;)F	b	method_7826
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
c	bec	net/minecraft/item/FlintAndSteelItem
	m	(Lbfz;Layj;)V	a	method_20276
		p	1	p	p
	m	(Lbyj;Lbjx;Lfk;)Z	a	canIgnite
		p	0	block	block
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;)Z	a	isIgnitable
		p	0	state	state
	m	(Lbfz;Layj;)V	b	method_20277
		p	1	p	p
c	bed	net/minecraft/item/CommandBlockItem
c	bee	net/minecraft/item/DecorationItem
	f	Laku;	a	entityType
	m	(Laku;Lbei$a;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
	m	(Layj;Lfp;Lben;Lfk;)Z	a	canPlaceOn
		p	1	player	player
		p	2	side	side
		p	3	stack	stack
		p	4	pos	pos
c	bef	net/minecraft/item/HoeItem
	f	Ljava/util/Map;	a	TILLED_BLOCKS
	f	F	b	attackSpeed
	m	(Lbfs;FLbei$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackSpeed	attackSpeed
		p	3	settings	settings
	m	(Lakz;)V	a	method_20278
		p	0	e	e
	m	(Lbfz;Layj;)V	a	method_20279
		p	1	p	p
c	beg	net/minecraft/item/HoneyBottleItem
c	beh	net/minecraft/item/HorseArmorItem
	f	I	a	bonus
	f	Ljava/lang/String;	b	entityTexture
	m	(ILjava/lang/String;Lbei$a;)V	<init>	<init>
		p	1	bonus	bonus
		p	2	name	name
		p	3	settings	settings
	m	()Lsm;	f	getEntityTexture
	m	()I	g	getBonus
c	bei	net/minecraft/item/Item
	f	Lbem;	a	DAMAGED_PROPERTY_GETTER
	f	Lbem;	b	DAMAGE_PROPERTY_GETTER
	f	Lbem;	c	LEFTHANDED_PROPERTY_GETTER
	f	Lbem;	d	COOLDOWN_PROPERTY_GETTER
	f	Lbem;	e	CUSTOM_DATA_PROPERTY_GETTER
	f	Ljava/util/Map;	f	BLOCK_ITEMS
	f	Ljava/util/UUID;	g	ATTACK_DAMAGE_MODIFIER_UUID
	f	Ljava/util/UUID;	h	ATTACK_SPEED_MODIFIER_UUID
	f	Ljava/util/Random;	i	RANDOM
	f	Lbdd;	j	group
	f	Ljava/util/Map;	k	propertyGetters
	f	Lbfa;	l	rarity
	f	I	m	maxCount
	f	I	n	maxDamage
	f	Lbei;	o	recipeRemainder
	f	Ljava/lang/String;	p	translationKey
	f	Lbak;	q	foodComponent
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
	m	()Z	R_	isNetworkSynced
	m	()Laah;	S_	getEatSound
	m	()Laah;	U_	getDrinkSound
	m	(Lben;Lbjw;Lakq;IZ)V	a	inventoryTick
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
		p	4	slot	slot
		p	5	selected	selected
	m	(Lben;Lben;)Z	a	canRepair
		p	1	stack	stack
		p	2	ingredient	ingredient
	m	(Lbyj;Lbjw;Lfk;Layj;)Z	a	canMine
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	miner	miner
	m	(Lbdd;Lfy;)V	a	appendStacks
		p	1	group	group
		p	2	stacks	stacks
	m	(Lben;Layj;Lakz;Lajk;)Z	a	useOnEntity
		p	1	stack	stack
		p	2	user	user
		p	3	entity	entity
		p	4	hand	hand
	m	(Lbjw;Layj;Lajk;)Lajm;	a	use
		p	1	world	world
		p	2	user	user
		p	3	hand	hand
	m	(Lbfz;)Lajl;	a	useOnBlock
		p	1	context	context
	m	(Lben;Lbyj;)F	a	getMiningSpeed
		p	1	stack	stack
		p	2	state	state
	m	(Lbei;)I	a	getRawId
		p	0	item	item
	m	(Lben;Lakz;Lakz;)Z	a	postHit
		p	1	stack	stack
		p	2	target	target
		p	3	attacker	attacker
	m	(Lbjw;Layj;Lbjj$b;)Lcvi;	a	rayTrace
		p	0	world	world
		p	1	player	player
		p	2	fluidHandling	fluidHandling
	m	(Lbjw;Lakz;Lben;I)V	a	usageTick
		p	1	world	world
		p	2	user	user
		p	3	stack	stack
		p	4	remainingUseTicks	remainingUseTicks
	m	(Lben;Lbjw;Lakz;)Lben;	a	finishUsing
		p	1	stack	stack
		p	2	world	world
		p	3	user	user
	m	(Lsm;Lbem;)V	a	addPropertyGetter
		p	1	id	id
		p	2	property	property
	m	(Lbph;)Lbei;	a	fromBlock
		p	0	block	block
	m	(Lbdd;)Z	a	isIn
		p	1	group	group
	m	(Lben;Lbjw;Lakz;I)V	a	onStoppedUsing
		p	1	stack	stack
		p	2	world	world
		p	3	user	user
		p	4	remainingUseTicks	remainingUseTicks
	m	(Lakv;)Lcom/google/common/collect/Multimap;	a	getModifiers
		p	1	slot	slot
	m	(Lben;Lbjw;Lbyj;Lfk;Lakz;)Z	a	postMine
		p	1	stack	stack
		p	2	world	world
		p	3	state	state
		p	4	pos	pos
		p	5	miner	miner
	m	(Lben;Lbjw;Ljava/util/List;Lbfw;)V	a	appendTooltip
		p	1	stack	stack
		p	2	world	world
		p	3	tooltip	tooltip
		p	4	context	context
	m	(Laaz;)Z	a	isIn
		p	1	tag	tag
	m	(Ljt;)Z	a	postProcessTag
		p	1	tag	tag
	m	(Lsm;)Lbem;	a	getPropertyGetter
		p	1	id	id
	m	()Ljava/lang/String;	a	getTranslationKey
	m	(Lbyj;)Z	b	isEffectiveOn
		p	1	state	state
	m	(I)Lbei;	b	byRawId
		p	0	id	id
	m	(Lben;Lbjw;Layj;)V	b	onCraft
		p	1	stack	stack
		p	2	world	world
		p	3	player	player
	m	(Lben;Lbjw;Lakz;)F	b	method_7839
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;Lbjw;Lakz;)F	c	method_7849
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	()I	c	getEnchantability
	m	(Lben;Lbjw;Lakz;)F	d	method_7871
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;)Z	d_	hasEnchantmentGlint
		p	1	stack	stack
	m	(Lben;Lbjw;Lakz;)F	e	method_7883
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;)Lbfy;	e_	getUseAction
		p	1	stack	stack
	m	(Lben;)Ljava/lang/String;	f	getTranslationKey
		p	1	stack	stack
	m	(Lben;Lbjw;Lakz;)F	f	method_7874
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;)I	f_	getMaxUseTime
		p	1	stack	stack
	m	(Lben;)Llf;	g	getName
		p	1	stack	stack
	m	(Lben;)Z	g_	isEnchantable
		p	1	stack	stack
	m	(Lben;)Lbfa;	h	getRarity
		p	1	stack	stack
	m	()Z	h	hasPropertyGetters
	m	(Lben;)Z	i	isUsedOnRelease
		p	1	stack	stack
	m	()I	j	getMaxCount
	m	()I	k	getMaxDamage
	m	()Z	l	isDamageable
	m	()Llf;	m	getName
	m	()Ljava/lang/String;	n	getOrCreateTranslationKey
	m	()Z	o	shouldSyncTagToClient
	m	()Lbei;	p	getRecipeRemainder
	m	()Z	q	hasRecipeRemainder
	m	()Lbdd;	r	getGroup
	m	()Lben;	s	getStackForRender
	m	()Z	t	isFood
	m	()Lbak;	u	getFoodComponent
c	bei$a	net/minecraft/item/Item$Settings
	f	I	a	maxCount
	f	I	b	maxDamage
	f	Lbei;	c	recipeRemainder
	f	Lbdd;	d	group
	f	Lbfa;	e	rarity
	f	Lbak;	f	foodComponent
	m	(Lbak;)Lbei$a;	a	food
		p	1	foodComponent	foodComponent
	m	(I)Lbei$a;	a	maxCount
		p	1	maxCount	maxCount
	m	(Lbfa;)Lbei$a;	a	rarity
		p	1	rarity	rarity
	m	(Lbdd;)Lbei$a;	a	group
		p	1	group	group
	m	(Lbei;)Lbei$a;	a	recipeRemainder
		p	1	recipeRemainder	recipeRemainder
	m	(I)Lbei$a;	b	maxDamageIfAbsent
		p	1	maxDamage	maxDamage
	m	(I)Lbei$a;	c	maxDamage
		p	1	maxDamage	maxDamage
c	bej	net/minecraft/entity/player/ItemCooldownManager
	f	Ljava/util/Map;	a	entries
	f	I	b	tick
	m	(Lbei;)Z	a	isCoolingDown
		p	1	item	item
	m	(Lbei;I)V	a	set
		p	1	item	item
		p	2	duration	duration
	m	(Lbei;F)F	a	getCooldownProgress
		p	1	item	item
		p	2	partialTicks	partialTicks
	m	()V	a	update
	m	(Lbei;I)V	b	onCooldownUpdate
		p	1	item	item
		p	2	duration	duration
	m	(Lbei;)V	b	remove
		p	1	item	item
	m	(Lbei;)V	c	onCooldownUpdate
		p	1	item	item
c	bej$a	net/minecraft/entity/player/ItemCooldownManager$Entry
	f	I	b	startTick
	f	I	c	endTick
	m	(Lbej;II)V	<init>	<init>
		p	2	startTick	startTick
		p	3	endTick	endTick
c	bek	net/minecraft/item/ItemFrameItem
c	bel	net/minecraft/item/AliasedBlockItem
c	bem	net/minecraft/item/ItemPropertyGetter
	m	(Lben;Lbjw;Lakz;)F	call	call
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
c	ben	net/minecraft/item/ItemStack
	f	Lben;	a	EMPTY
	f	Ljava/text/DecimalFormat;	b	MODIFIER_FORMAT
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	I	d	count
	f	I	e	cooldown
	f	Lbei;	f	item
	f	Ljt;	g	tag
	f	Z	h	empty
	f	Lavr;	i	frame
	f	Lbyn;	j	lastDestroyPos
	f	Z	k	lastDestroyResult
	f	Lbyn;	l	lastPlaceOnPos
	f	Z	m	lastPlaceOnResult
	m	(Lbjv;)V	<init>	<init>
		p	1	item	item
	m	(Lbjv;I)V	<init>	<init>
		p	1	item	item
		p	2	count	count
	m	(Ljt;)V	<init>	<init>
		p	1	tag	tag
	m	()I	A	getRepairCost
	m	()Llf;	B	toHoverableText
	m	()I	C	getCooldown
	m	()I	D	getCount
	m	()Z	E	isFood
	m	()Laah;	F	getDrinkSound
	m	()Laah;	G	getEatSound
	m	()Ljava/text/DecimalFormat;	H	createModifierFormat
	m	()V	I	updateEmptyState
	m	(Ljt;)Lben;	a	fromTag
		p	0	tag	tag
	m	(Ljava/lang/String;Lkj;)V	a	putSubTag
		p	1	key	key
		p	2	tag	tag
	m	(Labb;Lbyn;)Z	a	canDestroy
		p	1	manager	manager
		p	2	pos	pos
	m	(Lbjw;Lakz;I)V	a	onStoppedUsing
		p	1	world	world
		p	2	user	user
		p	3	remainingUseTicks	remainingUseTicks
	m	(Lavr;)V	a	setFrame
		p	1	frame	frame
	m	(Lben;Lben;)Z	a	areTagsEqual
		p	0	left	left
		p	1	right	right
	m	()Z	a	isEmpty
	m	(Ljt;Lln;)V	a	method_7966
		p	1	style	style
	m	(Lbjw;Layj;I)V	a	onCraft
		p	1	world	world
		p	2	player	player
		p	3	amount	amount
	m	(ILjava/util/Random;Lxe;)Z	a	damage
		p	1	amount	amount
		p	2	random	random
		p	3	player	player
	m	(Lbjw;Layj;Lajk;)Lajm;	a	use
		p	1	world	world
		p	2	user	user
		p	3	hand	hand
	m	(Lbjw;Lakq;IZ)V	a	inventoryTick
		p	1	world	world
		p	2	entity	entity
		p	3	slot	slot
		p	4	selected	selected
	m	(ILakz;Ljava/util/function/Consumer;)V	a	damage
		p	1	amount	amount
		p	2	entity	entity
		p	3	breakCallback	breakCallback
	m	(Lbfz;)Lajl;	a	useOnBlock
		p	1	context	context
	m	(Ljava/util/List;Ljz;)V	a	appendEnchantments
		p	0	tooltip	tooltip
		p	1	enchantments	enchantments
	m	(Ljava/util/List;Ljt;Lbhx;)V	a	method_17869
		p	2	e	e
	m	(I)Lben;	a	split
		p	1	amount	amount
	m	(Lbyj;)F	a	getMiningSpeed
		p	1	state	state
	m	(Lben;)Z	a	isItemEqualIgnoreDamage
		p	1	stack	stack
	m	(Lbyn;Lbyn;)Z	a	areBlocksEqual
		p	0	first	first
		p	1	second	second
	m	(Lbjw;Lbyj;Lfk;Layj;)V	a	postMine
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	miner	miner
	m	(Layj;Lakz;Lajk;)Z	a	useOnEntity
		p	1	user	user
		p	2	entity	entity
		p	3	hand	hand
	m	(Ljava/lang/String;Lals;Lakv;)V	a	addAttributeModifier
		p	1	name	name
		p	2	modifier	modifier
		p	3	slot	slot
	m	(Llf;)Lben;	a	setCustomName
		p	1	name	name
	m	(Lbhx;I)V	a	addEnchantment
		p	1	enchantment	enchantment
		p	2	level	level
	m	(Lbjw;Lakz;)Lben;	a	finishUsing
		p	1	world	world
		p	2	user	user
	m	(Ljava/lang/String;)Ljt;	a	getOrCreateSubTag
		p	1	key	key
	m	(Lakz;Layj;)V	a	postHit
		p	1	target	target
		p	2	attacker	attacker
	m	(Layj;Lbfw;)Ljava/util/List;	a	getTooltip
		p	1	player	player
		p	2	context	context
	m	(Lakv;)Lcom/google/common/collect/Multimap;	a	getAttributeModifiers
		p	1	slot	slot
	m	(Lbyj;)Z	b	isEffectiveOn
		p	1	state	state
	m	(Llf;)Llf;	b	method_7955
		p	0	text	text
	m	(Ljava/lang/String;)Ljt;	b	getSubTag
		p	1	key	key
	m	(I)V	b	setDamage
		p	1	damage	damage
	m	(Lbjw;Lakz;I)V	b	usageTick
		p	1	world	world
		p	2	user	user
		p	3	remainingUseTicks	remainingUseTicks
	m	(Lben;Lben;)Z	b	areEqualIgnoreDamage
		p	0	left	left
		p	1	right	right
	m	(Lben;)Z	b	isItemEqual
		p	1	stack	stack
	m	()Lbei;	b	getItem
	m	(Ljt;)Ljt;	b	toTag
		p	1	tag	tag
	m	(Labb;Lbyn;)Z	b	canPlaceOn
		p	1	manager	manager
		p	2	pos	pos
	m	(Ljava/lang/String;)V	c	removeSubTag
		p	1	key	key
	m	()I	c	getMaxCount
	m	(Lben;)Z	c	isEqualIgnoreDamage
		p	1	stack	stack
	m	(I)V	c	setRepairCost
		p	1	repairCost	repairCost
	m	(Ljt;)V	c	setTag
		p	1	tag	tag
	m	(Lben;Lben;)Z	c	areItemsEqualIgnoreDamage
		p	0	left	left
		p	1	right	right
	m	()Z	d	isStackable
	m	(Lben;Lben;)Z	d	areItemsEqual
		p	0	left	left
		p	1	right	right
	m	(I)V	d	setCooldown
		p	1	cooldown	cooldown
	m	(Ljava/lang/String;)Ljava/util/Collection;	d	parseBlockTag
		p	0	tag	tag
	m	(I)V	e	setCount
		p	1	count	count
	m	()Z	e	isDamageable
	m	(I)V	f	increment
		p	1	amount	amount
	m	()Z	f	isDamaged
	m	()I	g	getDamage
	m	(I)V	g	decrement
		p	1	amount	amount
	m	()I	h	getMaxDamage
	m	()Lben;	i	copy
	m	()Ljava/lang/String;	j	getTranslationKey
	m	()I	k	getMaxUseTime
	m	()Lbfy;	l	getUseAction
	m	()Z	m	isUsedOnRelease
	m	()Z	n	hasTag
	m	()Ljt;	o	getTag
	m	()Ljt;	p	getOrCreateTag
	m	()Ljz;	q	getEnchantments
	m	()Llf;	r	getName
	m	()V	s	removeCustomName
	m	()Z	t	hasCustomName
	m	()Z	u	hasEnchantmentGlint
	m	()Lbfa;	v	getRarity
	m	()Z	w	isEnchantable
	m	()Z	x	hasEnchantments
	m	()Z	y	isInFrame
	m	()Lavr;	z	getFrame
c	beo	net/minecraft/item/Items
	f	Lbei;	A	SAND
	f	Lbei;	B	RED_SAND
	f	Lbei;	C	GRAVEL
	f	Lbei;	D	GOLD_ORE
	f	Lbei;	E	IRON_ORE
	f	Lbei;	F	COAL_ORE
	f	Lbei;	G	OAK_LOG
	f	Lbei;	H	SPRUCE_LOG
	f	Lbei;	I	BIRCH_LOG
	f	Lbei;	J	JUNGLE_LOG
	f	Lbei;	K	ACACIA_LOG
	f	Lbei;	L	DARK_OAK_LOG
	f	Lbei;	M	STRIPPED_OAK_LOG
	f	Lbei;	N	STRIPPED_SPRUCE_LOG
	f	Lbei;	O	STRIPPED_BIRCH_LOG
	f	Lbei;	P	STRIPPED_JUNGLE_LOG
	f	Lbei;	Q	STRIPPED_ACACIA_LOG
	f	Lbei;	R	STRIPPED_DARK_OAK_LOG
	f	Lbei;	S	STRIPPED_OAK_WOOD
	f	Lbei;	T	STRIPPED_SPRUCE_WOOD
	f	Lbei;	U	STRIPPED_BIRCH_WOOD
	f	Lbei;	V	STRIPPED_JUNGLE_WOOD
	f	Lbei;	W	STRIPPED_ACACIA_WOOD
	f	Lbei;	X	STRIPPED_DARK_OAK_WOOD
	f	Lbei;	Y	OAK_WOOD
	f	Lbei;	Z	SPRUCE_WOOD
	f	Lbei;	a	AIR
	f	Lbei;	aA	DEAD_BUSH
	f	Lbei;	aB	SEAGRASS
	f	Lbei;	aC	SEA_PICKLE
	f	Lbei;	aD	PISTON
	f	Lbei;	aE	WHITE_WOOL
	f	Lbei;	aF	ORANGE_WOOL
	f	Lbei;	aG	MAGENTA_WOOL
	f	Lbei;	aH	LIGHT_BLUE_WOOL
	f	Lbei;	aI	YELLOW_WOOL
	f	Lbei;	aJ	LIME_WOOL
	f	Lbei;	aK	PINK_WOOL
	f	Lbei;	aL	GRAY_WOOL
	f	Lbei;	aM	LIGHT_GRAY_WOOL
	f	Lbei;	aN	CYAN_WOOL
	f	Lbei;	aO	PURPLE_WOOL
	f	Lbei;	aP	BLUE_WOOL
	f	Lbei;	aQ	BROWN_WOOL
	f	Lbei;	aR	GREEN_WOOL
	f	Lbei;	aS	RED_WOOL
	f	Lbei;	aT	BLACK_WOOL
	f	Lbei;	aU	DANDELION
	f	Lbei;	aV	POPPY
	f	Lbei;	aW	BLUE_ORCHID
	f	Lbei;	aX	ALLIUM
	f	Lbei;	aY	AZURE_BLUET
	f	Lbei;	aZ	RED_TULIP
	f	Lbei;	aa	BIRCH_WOOD
	f	Lbei;	ab	JUNGLE_WOOD
	f	Lbei;	ac	ACACIA_WOOD
	f	Lbei;	ad	DARK_OAK_WOOD
	f	Lbei;	ae	OAK_LEAVES
	f	Lbei;	af	SPRUCE_LEAVES
	f	Lbei;	ag	BIRCH_LEAVES
	f	Lbei;	ah	JUNGLE_LEAVES
	f	Lbei;	ai	ACACIA_LEAVES
	f	Lbei;	aj	DARK_OAK_LEAVES
	f	Lbei;	ak	SPONGE
	f	Lbei;	al	WET_SPONGE
	f	Lbei;	am	GLASS
	f	Lbei;	an	LAPIS_ORE
	f	Lbei;	ao	LAPIS_BLOCK
	f	Lbei;	ap	DISPENSER
	f	Lbei;	aq	SANDSTONE
	f	Lbei;	ar	CHISELED_SANDSTONE
	f	Lbei;	as	CUT_SANDSTONE
	f	Lbei;	at	NOTE_BLOCK
	f	Lbei;	au	POWERED_RAIL
	f	Lbei;	av	DETECTOR_RAIL
	f	Lbei;	aw	STICKY_PISTON
	f	Lbei;	ax	COBWEB
	f	Lbei;	ay	GRASS
	f	Lbei;	az	FERN
	f	Lbei;	b	STONE
	f	Lbei;	bA	QUARTZ_SLAB
	f	Lbei;	bB	RED_SANDSTONE_SLAB
	f	Lbei;	bC	CUT_RED_SANDSTONE_SLAB
	f	Lbei;	bD	PURPUR_SLAB
	f	Lbei;	bE	PRISMARINE_SLAB
	f	Lbei;	bF	PRISMARINE_BRICK_SLAB
	f	Lbei;	bG	DARK_PRISMARINE_SLAB
	f	Lbei;	bH	SMOOTH_QUARTZ
	f	Lbei;	bI	SMOOTH_RED_SANDSTONE
	f	Lbei;	bJ	SMOOTH_SANDSTONE
	f	Lbei;	bK	SMOOTH_STONE
	f	Lbei;	bL	BRICKS
	f	Lbei;	bM	TNT
	f	Lbei;	bN	BOOKSHELF
	f	Lbei;	bO	MOSSY_COBBLESTONE
	f	Lbei;	bP	OBSIDIAN
	f	Lbei;	bQ	TORCH
	f	Lbei;	bR	END_ROD
	f	Lbei;	bS	CHORUS_PLANT
	f	Lbei;	bT	CHORUS_FLOWER
	f	Lbei;	bU	PURPUR_BLOCK
	f	Lbei;	bV	PURPUR_PILLAR
	f	Lbei;	bW	PURPUR_STAIRS
	f	Lbei;	bX	SPAWNER
	f	Lbei;	bY	OAK_STAIRS
	f	Lbei;	bZ	CHEST
	f	Lbei;	ba	ORANGE_TULIP
	f	Lbei;	bb	WHITE_TULIP
	f	Lbei;	bc	PINK_TULIP
	f	Lbei;	bd	OXEYE_DAISY
	f	Lbei;	be	CORNFLOWER
	f	Lbei;	bf	LILY_OF_THE_VALLEY
	f	Lbei;	bg	WITHER_ROSE
	f	Lbei;	bh	BROWN_MUSHROOM
	f	Lbei;	bi	RED_MUSHROOM
	f	Lbei;	bj	GOLD_BLOCK
	f	Lbei;	bk	IRON_BLOCK
	f	Lbei;	bl	OAK_SLAB
	f	Lbei;	bm	SPRUCE_SLAB
	f	Lbei;	bn	BIRCH_SLAB
	f	Lbei;	bo	JUNGLE_SLAB
	f	Lbei;	bp	ACACIA_SLAB
	f	Lbei;	bq	DARK_OAK_SLAB
	f	Lbei;	br	STONE_SLAB
	f	Lbei;	bs	SMOOTH_STONE_SLAB
	f	Lbei;	bt	SANDSTONE_SLAB
	f	Lbei;	bu	CUT_SANDSTONE_SLAB
	f	Lbei;	bv	PETRIFIED_OAK_SLAB
	f	Lbei;	bw	COBBLESTONE_SLAB
	f	Lbei;	bx	BRICK_SLAB
	f	Lbei;	by	STONE_BRICK_SLAB
	f	Lbei;	bz	NETHER_BRICK_SLAB
	f	Lbei;	c	GRANITE
	f	Lbei;	cA	SPRUCE_FENCE
	f	Lbei;	cB	BIRCH_FENCE
	f	Lbei;	cC	JUNGLE_FENCE
	f	Lbei;	cD	ACACIA_FENCE
	f	Lbei;	cE	DARK_OAK_FENCE
	f	Lbei;	cF	PUMPKIN
	f	Lbei;	cG	CARVED_PUMPKIN
	f	Lbei;	cH	NETHERRACK
	f	Lbei;	cI	SOUL_SAND
	f	Lbei;	cJ	GLOWSTONE
	f	Lbei;	cK	JACK_O_LANTERN
	f	Lbei;	cL	OAK_TRAPDOOR
	f	Lbei;	cM	SPRUCE_TRAPDOOR
	f	Lbei;	cN	BIRCH_TRAPDOOR
	f	Lbei;	cO	JUNGLE_TRAPDOOR
	f	Lbei;	cP	ACACIA_TRAPDOOR
	f	Lbei;	cQ	DARK_OAK_TRAPDOOR
	f	Lbei;	cR	INFESTED_STONE
	f	Lbei;	cS	INFESTED_COBBLESTONE
	f	Lbei;	cT	INFESTED_STONE_BRICKS
	f	Lbei;	cU	INFESTED_MOSSY_STONE_BRICKS
	f	Lbei;	cV	INFESTED_CRACKED_STONE_BRICKS
	f	Lbei;	cW	INFESTED_CHISELED_STONE_BRICKS
	f	Lbei;	cX	STONE_BRICKS
	f	Lbei;	cY	MOSSY_STONE_BRICKS
	f	Lbei;	cZ	CRACKED_STONE_BRICKS
	f	Lbei;	ca	DIAMOND_ORE
	f	Lbei;	cb	DIAMOND_BLOCK
	f	Lbei;	cc	CRAFTING_TABLE
	f	Lbei;	cd	FARMLAND
	f	Lbei;	ce	FURNACE
	f	Lbei;	cf	LADDER
	f	Lbei;	cg	RAIL
	f	Lbei;	ch	COBBLESTONE_STAIRS
	f	Lbei;	ci	LEVER
	f	Lbei;	cj	STONE_PRESSURE_PLATE
	f	Lbei;	ck	OAK_PRESSURE_PLATE
	f	Lbei;	cl	SPRUCE_PRESSURE_PLATE
	f	Lbei;	cm	BIRCH_PRESSURE_PLATE
	f	Lbei;	cn	JUNGLE_PRESSURE_PLATE
	f	Lbei;	co	ACACIA_PRESSURE_PLATE
	f	Lbei;	cp	DARK_OAK_PRESSURE_PLATE
	f	Lbei;	cq	REDSTONE_ORE
	f	Lbei;	cr	REDSTONE_TORCH
	f	Lbei;	cs	STONE_BUTTON
	f	Lbei;	ct	SNOW
	f	Lbei;	cu	ICE
	f	Lbei;	cv	SNOW_BLOCK
	f	Lbei;	cw	CACTUS
	f	Lbei;	cx	CLAY
	f	Lbei;	cy	JUKEBOX
	f	Lbei;	cz	OAK_FENCE
	f	Lbei;	d	POLISHED_GRANITE
	f	Lbei;	dA	REDSTONE_LAMP
	f	Lbei;	dB	SANDSTONE_STAIRS
	f	Lbei;	dC	EMERALD_ORE
	f	Lbei;	dD	ENDER_CHEST
	f	Lbei;	dE	TRIPWIRE_HOOK
	f	Lbei;	dF	EMERALD_BLOCK
	f	Lbei;	dG	SPRUCE_STAIRS
	f	Lbei;	dH	BIRCH_STAIRS
	f	Lbei;	dI	JUNGLE_STAIRS
	f	Lbei;	dJ	COMMAND_BLOCK
	f	Lbei;	dK	BEACON
	f	Lbei;	dL	COBBLESTONE_WALL
	f	Lbei;	dM	MOSSY_COBBLESTONE_WALL
	f	Lbei;	dN	BRICK_WALL
	f	Lbei;	dO	PRISMARINE_WALL
	f	Lbei;	dP	RED_SANDSTONE_WALL
	f	Lbei;	dQ	MOSSY_STONE_BRICK_WALL
	f	Lbei;	dR	GRANITE_WALL
	f	Lbei;	dS	STONE_BRICK_WALL
	f	Lbei;	dT	NETHER_BRICK_WALL
	f	Lbei;	dU	ANDESITE_WALL
	f	Lbei;	dV	RED_NETHER_BRICK_WALL
	f	Lbei;	dW	SANDSTONE_WALL
	f	Lbei;	dX	END_STONE_BRICK_WALL
	f	Lbei;	dY	DIORITE_WALL
	f	Lbei;	dZ	OAK_BUTTON
	f	Lbei;	da	CHISELED_STONE_BRICKS
	f	Lbei;	db	BROWN_MUSHROOM_BLOCK
	f	Lbei;	dc	RED_MUSHROOM_BLOCK
	f	Lbei;	dd	MUSHROOM_STEM
	f	Lbei;	de	IRON_BARS
	f	Lbei;	df	GLASS_PANE
	f	Lbei;	dg	MELON
	f	Lbei;	dh	VINE
	f	Lbei;	di	OAK_FENCE_GATE
	f	Lbei;	dj	SPRUCE_FENCE_GATE
	f	Lbei;	dk	BIRCH_FENCE_GATE
	f	Lbei;	dl	JUNGLE_FENCE_GATE
	f	Lbei;	dm	ACACIA_FENCE_GATE
	f	Lbei;	dn	DARK_OAK_FENCE_GATE
	f	Lbei;	do	BRICK_STAIRS
	f	Lbei;	dp	STONE_BRICK_STAIRS
	f	Lbei;	dq	MYCELIUM
	f	Lbei;	dr	LILY_PAD
	f	Lbei;	ds	NETHER_BRICKS
	f	Lbei;	dt	NETHER_BRICK_FENCE
	f	Lbei;	du	NETHER_BRICK_STAIRS
	f	Lbei;	dv	ENCHANTING_TABLE
	f	Lbei;	dw	END_PORTAL_FRAME
	f	Lbei;	dx	END_STONE
	f	Lbei;	dy	END_STONE_BRICKS
	f	Lbei;	dz	DRAGON_EGG
	f	Lbei;	e	DIORITE
	f	Lbei;	eA	LIME_TERRACOTTA
	f	Lbei;	eB	PINK_TERRACOTTA
	f	Lbei;	eC	GRAY_TERRACOTTA
	f	Lbei;	eD	LIGHT_GRAY_TERRACOTTA
	f	Lbei;	eE	CYAN_TERRACOTTA
	f	Lbei;	eF	PURPLE_TERRACOTTA
	f	Lbei;	eG	BLUE_TERRACOTTA
	f	Lbei;	eH	BROWN_TERRACOTTA
	f	Lbei;	eI	GREEN_TERRACOTTA
	f	Lbei;	eJ	RED_TERRACOTTA
	f	Lbei;	eK	BLACK_TERRACOTTA
	f	Lbei;	eL	BARRIER
	f	Lbei;	eM	IRON_TRAPDOOR
	f	Lbei;	eN	HAY_BLOCK
	f	Lbei;	eO	WHITE_CARPET
	f	Lbei;	eP	ORANGE_CARPET
	f	Lbei;	eQ	MAGENTA_CARPET
	f	Lbei;	eR	LIGHT_BLUE_CARPET
	f	Lbei;	eS	YELLOW_CARPET
	f	Lbei;	eT	LIME_CARPET
	f	Lbei;	eU	PINK_CARPET
	f	Lbei;	eV	GRAY_CARPET
	f	Lbei;	eW	LIGHT_GRAY_CARPET
	f	Lbei;	eX	CYAN_CARPET
	f	Lbei;	eY	PURPLE_CARPET
	f	Lbei;	eZ	BLUE_CARPET
	f	Lbei;	ea	SPRUCE_BUTTON
	f	Lbei;	eb	BIRCH_BUTTON
	f	Lbei;	ec	JUNGLE_BUTTON
	f	Lbei;	ed	ACACIA_BUTTON
	f	Lbei;	ee	DARK_OAK_BUTTON
	f	Lbei;	ef	ANVIL
	f	Lbei;	eg	CHIPPED_ANVIL
	f	Lbei;	eh	DAMAGED_ANVIL
	f	Lbei;	ei	TRAPPED_CHEST
	f	Lbei;	ej	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lbei;	ek	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lbei;	el	DAYLIGHT_DETECTOR
	f	Lbei;	em	REDSTONE_BLOCK
	f	Lbei;	en	NETHER_QUARTZ_ORE
	f	Lbei;	eo	HOPPER
	f	Lbei;	ep	CHISELED_QUARTZ_BLOCK
	f	Lbei;	eq	QUARTZ_BLOCK
	f	Lbei;	er	QUARTZ_PILLAR
	f	Lbei;	es	QUARTZ_STAIRS
	f	Lbei;	et	ACTIVATOR_RAIL
	f	Lbei;	eu	DROPPER
	f	Lbei;	ev	WHITE_TERRACOTTA
	f	Lbei;	ew	ORANGE_TERRACOTTA
	f	Lbei;	ex	MAGENTA_TERRACOTTA
	f	Lbei;	ey	LIGHT_BLUE_TERRACOTTA
	f	Lbei;	ez	YELLOW_TERRACOTTA
	f	Lbei;	f	POLISHED_DIORITE
	f	Lbei;	fA	CYAN_STAINED_GLASS
	f	Lbei;	fB	PURPLE_STAINED_GLASS
	f	Lbei;	fC	BLUE_STAINED_GLASS
	f	Lbei;	fD	BROWN_STAINED_GLASS
	f	Lbei;	fE	GREEN_STAINED_GLASS
	f	Lbei;	fF	RED_STAINED_GLASS
	f	Lbei;	fG	BLACK_STAINED_GLASS
	f	Lbei;	fH	WHITE_STAINED_GLASS_PANE
	f	Lbei;	fI	ORANGE_STAINED_GLASS_PANE
	f	Lbei;	fJ	MAGENTA_STAINED_GLASS_PANE
	f	Lbei;	fK	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lbei;	fL	YELLOW_STAINED_GLASS_PANE
	f	Lbei;	fM	LIME_STAINED_GLASS_PANE
	f	Lbei;	fN	PINK_STAINED_GLASS_PANE
	f	Lbei;	fO	GRAY_STAINED_GLASS_PANE
	f	Lbei;	fP	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lbei;	fQ	CYAN_STAINED_GLASS_PANE
	f	Lbei;	fR	PURPLE_STAINED_GLASS_PANE
	f	Lbei;	fS	BLUE_STAINED_GLASS_PANE
	f	Lbei;	fT	BROWN_STAINED_GLASS_PANE
	f	Lbei;	fU	GREEN_STAINED_GLASS_PANE
	f	Lbei;	fV	RED_STAINED_GLASS_PANE
	f	Lbei;	fW	BLACK_STAINED_GLASS_PANE
	f	Lbei;	fX	PRISMARINE
	f	Lbei;	fY	PRISMARINE_BRICKS
	f	Lbei;	fZ	DARK_PRISMARINE
	f	Lbei;	fa	BROWN_CARPET
	f	Lbei;	fb	GREEN_CARPET
	f	Lbei;	fc	RED_CARPET
	f	Lbei;	fd	BLACK_CARPET
	f	Lbei;	fe	TERRACOTTA
	f	Lbei;	ff	COAL_BLOCK
	f	Lbei;	fg	PACKED_ICE
	f	Lbei;	fh	ACACIA_STAIRS
	f	Lbei;	fi	DARK_OAK_STAIRS
	f	Lbei;	fj	SLIME_BLOCK
	f	Lbei;	fk	GRASS_PATH
	f	Lbei;	fl	SUNFLOWER
	f	Lbei;	fm	LILAC
	f	Lbei;	fn	ROSE_BUSH
	f	Lbei;	fo	PEONY
	f	Lbei;	fp	TALL_GRASS
	f	Lbei;	fq	LARGE_FERN
	f	Lbei;	fr	WHITE_STAINED_GLASS
	f	Lbei;	fs	ORANGE_STAINED_GLASS
	f	Lbei;	ft	MAGENTA_STAINED_GLASS
	f	Lbei;	fu	LIGHT_BLUE_STAINED_GLASS
	f	Lbei;	fv	YELLOW_STAINED_GLASS
	f	Lbei;	fw	LIME_STAINED_GLASS
	f	Lbei;	fx	PINK_STAINED_GLASS
	f	Lbei;	fy	GRAY_STAINED_GLASS
	f	Lbei;	fz	LIGHT_GRAY_STAINED_GLASS
	f	Lbei;	g	ANDESITE
	f	Lbei;	gA	CYAN_SHULKER_BOX
	f	Lbei;	gB	PURPLE_SHULKER_BOX
	f	Lbei;	gC	BLUE_SHULKER_BOX
	f	Lbei;	gD	BROWN_SHULKER_BOX
	f	Lbei;	gE	GREEN_SHULKER_BOX
	f	Lbei;	gF	RED_SHULKER_BOX
	f	Lbei;	gG	BLACK_SHULKER_BOX
	f	Lbei;	gH	WHITE_GLAZED_TERRACOTTA
	f	Lbei;	gI	ORANGE_GLAZED_TERRACOTTA
	f	Lbei;	gJ	MAGENTA_GLAZED_TERRACOTTA
	f	Lbei;	gK	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lbei;	gL	YELLOW_GLAZED_TERRACOTTA
	f	Lbei;	gM	LIME_GLAZED_TERRACOTTA
	f	Lbei;	gN	PINK_GLAZED_TERRACOTTA
	f	Lbei;	gO	GRAY_GLAZED_TERRACOTTA
	f	Lbei;	gP	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lbei;	gQ	CYAN_GLAZED_TERRACOTTA
	f	Lbei;	gR	PURPLE_GLAZED_TERRACOTTA
	f	Lbei;	gS	BLUE_GLAZED_TERRACOTTA
	f	Lbei;	gT	BROWN_GLAZED_TERRACOTTA
	f	Lbei;	gU	GREEN_GLAZED_TERRACOTTA
	f	Lbei;	gV	RED_GLAZED_TERRACOTTA
	f	Lbei;	gW	BLACK_GLAZED_TERRACOTTA
	f	Lbei;	gX	WHITE_CONCRETE
	f	Lbei;	gY	ORANGE_CONCRETE
	f	Lbei;	gZ	MAGENTA_CONCRETE
	f	Lbei;	ga	PRISMARINE_STAIRS
	f	Lbei;	gb	PRISMARINE_BRICK_STAIRS
	f	Lbei;	gc	DARK_PRISMARINE_STAIRS
	f	Lbei;	gd	SEA_LANTERN
	f	Lbei;	ge	RED_SANDSTONE
	f	Lbei;	gf	CHISELED_RED_SANDSTONE
	f	Lbei;	gg	CUT_RED_SANDSTONE
	f	Lbei;	gh	RED_SANDSTONE_STAIRS
	f	Lbei;	gi	REPEATING_COMMAND_BLOCK
	f	Lbei;	gj	CHAIN_COMMAND_BLOCK
	f	Lbei;	gk	MAGMA_BLOCK
	f	Lbei;	gl	NETHER_WART_BLOCK
	f	Lbei;	gm	RED_NETHER_BRICKS
	f	Lbei;	gn	BONE_BLOCK
	f	Lbei;	go	STRUCTURE_VOID
	f	Lbei;	gp	OBSERVER
	f	Lbei;	gq	SHULKER_BOX
	f	Lbei;	gr	WHITE_SHULKER_BOX
	f	Lbei;	gs	ORANGE_SHULKER_BOX
	f	Lbei;	gt	MAGENTA_SHULKER_BOX
	f	Lbei;	gu	LIGHT_BLUE_SHULKER_BOX
	f	Lbei;	gv	YELLOW_SHULKER_BOX
	f	Lbei;	gw	LIME_SHULKER_BOX
	f	Lbei;	gx	PINK_SHULKER_BOX
	f	Lbei;	gy	GRAY_SHULKER_BOX
	f	Lbei;	gz	LIGHT_GRAY_SHULKER_BOX
	f	Lbei;	h	POLISHED_ANDESITE
	f	Lbei;	hA	GREEN_CONCRETE_POWDER
	f	Lbei;	hB	RED_CONCRETE_POWDER
	f	Lbei;	hC	BLACK_CONCRETE_POWDER
	f	Lbei;	hD	TURTLE_EGG
	f	Lbei;	hE	DEAD_TUBE_CORAL_BLOCK
	f	Lbei;	hF	DEAD_BRAIN_CORAL_BLOCK
	f	Lbei;	hG	DEAD_BUBBLE_CORAL_BLOCK
	f	Lbei;	hH	DEAD_FIRE_CORAL_BLOCK
	f	Lbei;	hI	DEAD_HORN_CORAL_BLOCK
	f	Lbei;	hJ	TUBE_CORAL_BLOCK
	f	Lbei;	hK	BRAIN_CORAL_BLOCK
	f	Lbei;	hL	BUBBLE_CORAL_BLOCK
	f	Lbei;	hM	FIRE_CORAL_BLOCK
	f	Lbei;	hN	HORN_CORAL_BLOCK
	f	Lbei;	hO	TUBE_CORAL
	f	Lbei;	hP	BRAIN_CORAL
	f	Lbei;	hQ	BUBBLE_CORAL
	f	Lbei;	hR	FIRE_CORAL
	f	Lbei;	hS	HORN_CORAL
	f	Lbei;	hT	DEAD_BRAIN_CORAL
	f	Lbei;	hU	DEAD_BUBBLE_CORAL
	f	Lbei;	hV	DEAD_FIRE_CORAL
	f	Lbei;	hW	DEAD_HORN_CORAL
	f	Lbei;	hX	DEAD_TUBE_CORAL
	f	Lbei;	hY	TUBE_CORAL_FAN
	f	Lbei;	hZ	BRAIN_CORAL_FAN
	f	Lbei;	ha	LIGHT_BLUE_CONCRETE
	f	Lbei;	hb	YELLOW_CONCRETE
	f	Lbei;	hc	LIME_CONCRETE
	f	Lbei;	hd	PINK_CONCRETE
	f	Lbei;	he	GRAY_CONCRETE
	f	Lbei;	hf	LIGHT_GRAY_CONCRETE
	f	Lbei;	hg	CYAN_CONCRETE
	f	Lbei;	hh	PURPLE_CONCRETE
	f	Lbei;	hi	BLUE_CONCRETE
	f	Lbei;	hj	BROWN_CONCRETE
	f	Lbei;	hk	GREEN_CONCRETE
	f	Lbei;	hl	RED_CONCRETE
	f	Lbei;	hm	BLACK_CONCRETE
	f	Lbei;	hn	WHITE_CONCRETE_POWDER
	f	Lbei;	ho	ORANGE_CONCRETE_POWDER
	f	Lbei;	hp	MAGENTA_CONCRETE_POWDER
	f	Lbei;	hq	LIGHT_BLUE_CONCRETE_POWDER
	f	Lbei;	hr	YELLOW_CONCRETE_POWDER
	f	Lbei;	hs	LIME_CONCRETE_POWDER
	f	Lbei;	ht	PINK_CONCRETE_POWDER
	f	Lbei;	hu	GRAY_CONCRETE_POWDER
	f	Lbei;	hv	LIGHT_GRAY_CONCRETE_POWDER
	f	Lbei;	hw	CYAN_CONCRETE_POWDER
	f	Lbei;	hx	PURPLE_CONCRETE_POWDER
	f	Lbei;	hy	BLUE_CONCRETE_POWDER
	f	Lbei;	hz	BROWN_CONCRETE_POWDER
	f	Lbei;	i	GRASS_BLOCK
	f	Lbei;	iA	MOSSY_STONE_BRICK_SLAB
	f	Lbei;	iB	POLISHED_DIORITE_SLAB
	f	Lbei;	iC	MOSSY_COBBLESTONE_SLAB
	f	Lbei;	iD	END_STONE_BRICK_SLAB
	f	Lbei;	iE	SMOOTH_SANDSTONE_SLAB
	f	Lbei;	iF	SMOOTH_QUARTZ_SLAB
	f	Lbei;	iG	GRANITE_SLAB
	f	Lbei;	iH	ANDESITE_SLAB
	f	Lbei;	iI	RED_NETHER_BRICK_SLAB
	f	Lbei;	iJ	POLISHED_ANDESITE_SLAB
	f	Lbei;	iK	DIORITE_SLAB
	f	Lbei;	iL	SCAFFOLDING
	f	Lbei;	iM	IRON_DOOR
	f	Lbei;	iN	OAK_DOOR
	f	Lbei;	iO	SPRUCE_DOOR
	f	Lbei;	iP	BIRCH_DOOR
	f	Lbei;	iQ	JUNGLE_DOOR
	f	Lbei;	iR	ACACIA_DOOR
	f	Lbei;	iS	DARK_OAK_DOOR
	f	Lbei;	iT	REPEATER
	f	Lbei;	iU	COMPARATOR
	f	Lbei;	iV	STRUCTURE_BLOCK
	f	Lbei;	iW	JIGSAW
	f	Lbei;	iX	COMPOSTER
	f	Lbei;	ia	BUBBLE_CORAL_FAN
	f	Lbei;	ib	FIRE_CORAL_FAN
	f	Lbei;	ic	HORN_CORAL_FAN
	f	Lbei;	id	DEAD_TUBE_CORAL_FAN
	f	Lbei;	ie	DEAD_BRAIN_CORAL_FAN
	f	Lbei;	if	DEAD_BUBBLE_CORAL_FAN
	f	Lbei;	ig	DEAD_FIRE_CORAL_FAN
	f	Lbei;	ih	DEAD_HORN_CORAL_FAN
	f	Lbei;	ii	BLUE_ICE
	f	Lbei;	ij	CONDUIT
	f	Lbei;	ik	POLISHED_GRANITE_STAIRS
	f	Lbei;	il	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lbei;	im	MOSSY_STONE_BRICK_STAIRS
	f	Lbei;	in	POLISHED_DIORITE_STAIRS
	f	Lbei;	io	MOSSY_COBBLESTONE_STAIRS
	f	Lbei;	ip	END_STONE_BRICK_STAIRS
	f	Lbei;	iq	STONE_STAIRS
	f	Lbei;	ir	SMOOTH_SANDSTONE_STAIRS
	f	Lbei;	is	SMOOTH_QUARTZ_STAIRS
	f	Lbei;	it	GRANITE_STAIRS
	f	Lbei;	iu	ANDESITE_STAIRS
	f	Lbei;	iv	RED_NETHER_BRICK_STAIRS
	f	Lbei;	iw	POLISHED_ANDESITE_STAIRS
	f	Lbei;	ix	DIORITE_STAIRS
	f	Lbei;	iy	POLISHED_GRANITE_SLAB
	f	Lbei;	iz	SMOOTH_RED_SANDSTONE_SLAB
	f	Lbei;	j	DIRT
	f	Lbei;	k	COARSE_DIRT
	f	Lbei;	kN	SUGAR_CANE
	f	Lbei;	kO	KELP
	f	Lbei;	kP	DRIED_KELP_BLOCK
	f	Lbei;	kQ	BAMBOO
	f	Lbei;	l	PODZOL
	f	Lbei;	lD	CAKE
	f	Lbei;	lE	WHITE_BED
	f	Lbei;	lF	ORANGE_BED
	f	Lbei;	lG	MAGENTA_BED
	f	Lbei;	lH	LIGHT_BLUE_BED
	f	Lbei;	lI	YELLOW_BED
	f	Lbei;	lJ	LIME_BED
	f	Lbei;	lK	PINK_BED
	f	Lbei;	lL	GRAY_BED
	f	Lbei;	lM	LIGHT_GRAY_BED
	f	Lbei;	lN	CYAN_BED
	f	Lbei;	lO	PURPLE_BED
	f	Lbei;	lP	BLUE_BED
	f	Lbei;	lQ	BROWN_BED
	f	Lbei;	lR	GREEN_BED
	f	Lbei;	lS	RED_BED
	f	Lbei;	lT	BLACK_BED
	f	Lbei;	m	COBBLESTONE
	f	Lbei;	mr	BREWING_STAND
	f	Lbei;	ms	CAULDRON
	f	Lbei;	n	OAK_PLANKS
	f	Lbei;	nI	FLOWER_POT
	f	Lbei;	nP	SKELETON_SKULL
	f	Lbei;	nQ	WITHER_SKELETON_SKULL
	f	Lbei;	nR	PLAYER_HEAD
	f	Lbei;	nS	ZOMBIE_HEAD
	f	Lbei;	nT	CREEPER_HEAD
	f	Lbei;	nU	DRAGON_HEAD
	f	Lbei;	o	SPRUCE_PLANKS
	f	Lbei;	p	BIRCH_PLANKS
	f	Lbei;	pB	LOOM
	f	Lbei;	pH	BARREL
	f	Lbei;	pI	SMOKER
	f	Lbei;	pJ	BLAST_FURNACE
	f	Lbei;	pK	CARTOGRAPHY_TABLE
	f	Lbei;	pL	FLETCHING_TABLE
	f	Lbei;	pM	GRINDSTONE
	f	Lbei;	pN	LECTERN
	f	Lbei;	pO	SMITHING_TABLE
	f	Lbei;	pP	STONECUTTER
	f	Lbei;	pQ	BELL
	f	Lbei;	pR	LANTERN
	f	Lbei;	pT	CAMPFIRE
	f	Lbei;	pV	BEE_NEST
	f	Lbei;	pW	BEEHIVE
	f	Lbei;	pY	HONEY_BLOCK
	f	Lbei;	pZ	HONEYCOMB_BLOCK
	f	Lbei;	q	JUNGLE_PLANKS
	f	Lbei;	r	ACACIA_PLANKS
	f	Lbei;	s	DARK_OAK_PLANKS
	f	Lbei;	t	OAK_SAPLING
	f	Lbei;	u	SPRUCE_SAPLING
	f	Lbei;	v	BIRCH_SAPLING
	f	Lbei;	w	JUNGLE_SAPLING
	f	Lbei;	x	ACACIA_SAPLING
	f	Lbei;	y	DARK_OAK_SAPLING
	f	Lbei;	z	BEDROCK
	m	(Lbcp;)Lbei;	a	register
		p	0	item	item
	m	(Lbph;)Lbei;	a	register
		p	0	block	block
	m	(Ljava/lang/String;Lbei;)Lbei;	a	register
		p	0	id	id
		p	1	item	item
	m	(Lsm;Lbei;)Lbei;	a	register
		p	0	id	id
		p	1	item	item
	m	(Lbph;Lbdd;)Lbei;	a	register
		p	0	block	block
		p	1	group	group
	m	(Lbph;Lbei;)Lbei;	a	register
		p	0	block	block
		p	1	iem	iem
c	bep	net/minecraft/item/KnowledgeBookItem
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
c	beq	net/minecraft/item/LeadItem
	m	(Layj;Lbjw;Lfk;)Lajl;	a	attachHeldMobsToBlock
c	ber	net/minecraft/item/LingeringPotionItem
c	bes	net/minecraft/item/FilledMapItem
	m	([Lbkt;III)Z	a	hasPositiveDepth
		p	0	biomes	biomes
		p	1	scale	scale
		p	2	x	x
		p	3	z	z
	m	(I)Ljava/lang/String;	a	getMapName
		p	0	mapId	mapId
	m	(Lbjw;Lakq;Lcrg;)V	a	updateColors
		p	1	world	world
		p	2	entity	entity
		p	3	state	state
	m	(Lben;Lbjw;IIIZZLcbi;)Lcrg;	a	createMapState
		p	0	stack	stack
		p	1	world	world
		p	2	x	x
		p	3	z	z
		p	4	scale	scale
		p	5	showIcons	showIcons
		p	6	unlimitedTracking	unlimitedTracking
		p	7	dimension	dimension
	m	(Lbjw;IIBZZ)Lben;	a	createMap
		p	0	world	world
		p	1	x	x
		p	2	z	z
		p	3	scale	scale
		p	4	showIcons	showIcons
		p	5	unlimitedTracking	unlimitedTracking
	m	(Lbjw;Lben;)Lben;	a	copyMap
		p	0	world	world
		p	1	stack	stack
	m	(Lben;Lbjw;)Lcrg;	a	getMapState
		p	0	stack	stack
		p	1	world	world
	m	(Lben;Lbjw;I)V	a	scale
		p	0	map	map
		p	1	world	world
		p	2	amount	amount
	m	(Lxd;Lben;)V	a	fillExplorationMap
		p	1	map	map
	m	(Lbjw;Lbyj;Lfk;)Lbyj;	a	getFluidStateIfVisible
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
	m	(Lben;Lbjw;)Lcrg;	b	getOrCreateMapState
		p	0	map	map
		p	1	world	world
	m	(Lben;)I	e	getMapId
		p	0	stack	stack
	m	(Lben;)I	j	getMapColor
		p	0	stack	stack
c	bet	net/minecraft/item/MilkBucketItem
c	beu	net/minecraft/item/MinecartItem
	f	Lgl;	a	DISPENSER_BEHAVIOR
	f	Lazx$a;	b	type
	m	(Lazx$a;Lbei$a;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
c	beu$1	net/minecraft/item/MinecartItem$1
	f	Lgk;	b	defaultBehavior
c	bev	net/minecraft/item/NameTagItem
c	bew	net/minecraft/item/PickaxeItem
	f	Ljava/util/Set;	a	EFFECTIVE_BLOCKS
	m	(Lbfs;IFLbei$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
c	bex	net/minecraft/item/SkullItem
	m	(Lbph;Lbph;Lbei$a;)V	<init>	<init>
		p	1	standingBlock	standingBlock
		p	2	wallBlock	wallBlock
c	bey	net/minecraft/item/PotionItem
c	bez	net/minecraft/item/RangedWeaponItem
	f	Ljava/util/function/Predicate;	a	BOW_PROJECTILES
	f	Ljava/util/function/Predicate;	b	CROSSBOW_HELD_PROJECTILES
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Lakz;Ljava/util/function/Predicate;)Lben;	a	getHeldProjectile
		p	0	entity	entity
		p	1	predicate	predicate
	m	()Ljava/util/function/Predicate;	b	getProjectiles
	m	()Ljava/util/function/Predicate;	d	getHeldProjectiles
	m	(Lben;)Z	e	method_18816
		p	0	stack	stack
	m	(Lben;)Z	j	method_18817
		p	0	stack	stack
c	bf	net/minecraft/predicate/FluidPredicate
	f	Lbf;	a	ANY
	f	Laaz;	b	tag
	f	Lcoi;	c	fluid
	f	Lcc;	d	state
	m	(Laaz;Lcoi;Lcc;)V	<init>	<init>
		p	1	tag	tag
		p	2	fluid	fluid
		p	3	state	state
	m	(Lcom/google/gson/JsonElement;)Lbf;	a	fromJson
		p	0	json	json
	m	(Lxd;Lfk;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	bfa	net/minecraft/util/Rarity
	f	Lg;	e	formatting
c	bfb	net/minecraft/item/MusicDiscItem
	f	Ljava/util/Map;	a	MUSIC_DISCS
	f	I	b	comparatorOutput
	f	Laah;	c	sound
	m	(ILaah;Lbei$a;)V	<init>	<init>
		p	1	comparatorOutput	comparatorOutput
		p	2	sound	sound
		p	3	settings	settings
	m	(Laah;)Lbfb;	a	bySound
		p	0	sound	sound
	m	()I	f	getComparatorOutput
	m	()Llf;	g	getDescription
	m	()Laah;	v	getSound
c	bfc	net/minecraft/item/SaddleItem
c	bfd	net/minecraft/item/ScaffoldingItem
c	bfe	net/minecraft/server/network/ServerItemCooldownManager
	f	Lxe;	a	player
c	bff	net/minecraft/item/ShearsItem
	m	(Lakz;)V	a	method_20280
		p	0	e	e
c	bfg	net/minecraft/item/ShieldItem
	m	(Lben;Lbjw;Lakz;)F	b	method_8014
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
	m	(Lben;)Lbdj;	e	getColor
		p	0	stack	stack
c	bfh	net/minecraft/item/ShovelItem
	f	Ljava/util/Map;	a	PATH_BLOCKSTATES
	f	Ljava/util/Set;	e	EFFECTIVE_BLOCKS
	m	(Lbfs;FFLbei$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
	m	(Lbfz;Layj;)V	a	method_20281
		p	1	p	p
c	bfi	net/minecraft/item/SignItem
	m	(Lbei$a;Lbph;Lbph;)V	<init>	<init>
		p	1	settings	settings
		p	2	standingBlock	standingBlock
		p	3	wallBlock	wallBlock
c	bfj	net/minecraft/item/NetherStarItem
c	bfk	net/minecraft/item/SnowballItem
c	bfl	net/minecraft/item/SpawnEggItem
	f	Ljava/util/Map;	a	SPAWN_EGGS
	f	I	b	primaryColor
	f	I	c	secondaryColor
	f	Laku;	d	type
	m	(Laku;IILbei$a;)V	<init>	<init>
		p	1	type	type
		p	2	primaryColor	primaryColor
		p	3	secondaryColor	secondaryColor
		p	4	settings	settings
	m	(I)I	a	getColor
		p	1	num	num
	m	(Ljt;Laku;)Z	a	isOfSameEntityType
		p	1	tag	tag
		p	2	type	type
	m	(Laku;)Lbfl;	a	forEntity
		p	0	type	type
	m	(Ljt;)Laku;	b	getEntityType
		p	1	tag	tag
	m	()Ljava/lang/Iterable;	f	getAll
c	bfm	net/minecraft/item/SpectralArrowItem
c	bfn	net/minecraft/item/SplashPotionItem
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
c	bfo	net/minecraft/item/WallStandingBlockItem
	f	Lbph;	a	wallBlock
	m	(Lbph;Lbph;Lbei$a;)V	<init>	<init>
		p	1	standingBlock	standingBlock
		p	2	wallBlock	wallBlock
		p	3	settings	settings
c	bfp	net/minecraft/item/SuspiciousStewItem
	m	(Lben;Laki;I)V	a	addEffectToStew
		p	0	stew	stew
		p	1	effect	effect
		p	2	duration	duration
c	bfq	net/minecraft/item/SwordItem
	f	F	a	attackDamage
	f	F	b	attackSpeed
	m	(Lbfs;IFLbei$a;)V	<init>	<init>
		p	1	material	material
		p	2	attackDamage	attackDamage
		p	3	attackSpeed	attackSpeed
		p	4	settings	settings
	m	(Lakz;)V	a	method_20282
		p	0	e	e
	m	(Lakz;)V	b	method_20283
		p	0	e	e
	m	()F	f	getAttackDamage
c	bfr	net/minecraft/item/ThrowablePotionItem
c	bfs	net/minecraft/item/ToolMaterial
	m	()I	a	getDurability
	m	()F	b	getMiningSpeed
	m	()F	c	getAttackDamage
	m	()I	d	getMiningLevel
	m	()I	e	getEnchantability
	m	()Lbgt;	f	getRepairIngredient
c	bft	net/minecraft/item/ToolItem
	f	Lbfs;	a	material
	m	(Lbfs;Lbei$a;)V	<init>	<init>
		p	1	material	material
		p	2	settings	settings
	m	()Lbfs;	g	getMaterial
c	bfu	net/minecraft/item/ToolMaterials
	f	I	f	miningLevel
	f	I	g	itemDurability
	f	F	h	miningSpeed
	f	F	i	attackDamage
	f	I	j	enchantability
	f	Labn;	k	repairIngredient
	m	(Ljava/lang/String;IIIFFILjava/util/function/Supplier;)V	<init>	<init>
		p	3	miningLevel	miningLevel
		p	4	itemDurability	itemDurability
		p	5	miningSpeed	miningSpeed
		p	6	attackDamage	attackDamage
		p	7	enchantibility	enchantibility
		p	8	repairIngredient	repairIngredient
c	bfv	net/minecraft/item/TippedArrowItem
c	bfw	net/minecraft/client/item/TooltipContext
	m	()Z	a	isAdvanced
c	bfw$a	net/minecraft/client/item/TooltipContext$Default
	f	Z	c	advanced
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3	advanced	advanced
c	bfx	net/minecraft/item/TridentItem
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Lakz;Layj;)V	a	method_20285
		p	1	p	p
	m	(Lakz;)V	a	method_20284
		p	0	e	e
	m	(Lakz;)V	b	method_20286
		p	0	e	e
	m	(Lben;Lbjw;Lakz;)F	b	method_8034
		p	0	stack	stack
		p	1	world	world
		p	2	entity	entity
c	bfy	net/minecraft/util/UseAction
c	bfz	net/minecraft/item/ItemUsageContext
	f	Layj;	b	player
	f	Lajk;	c	hand
	f	Lcvg;	d	hit
	f	Lbjw;	e	world
	f	Lben;	f	stack
	m	(Layj;Lajk;Lcvg;)V	<init>	<init>
		p	1	player	player
		p	2	hand	hand
		p	3	hit	hit
	m	(Lbjw;Layj;Lajk;Lben;Lcvg;)V	<init>	<init>
		p	1	world	world
		p	2	player	player
		p	3	hand	hand
		p	4	stack	stack
		p	5	hit	hit
	m	()Lfk;	a	getBlockPos
	m	()Lfp;	f	getPlayerFacing
	m	()Z	g	shouldCancelInteraction
	m	()F	h	getPlayerYaw
	m	()Lfp;	i	getSide
	m	()Lcvl;	j	getHitPos
	m	()Z	k	hitsInsideBlock
	m	()Lben;	l	getStack
	m	()Layj;	m	getPlayer
	m	()Lajk;	n	getHand
	m	()Lbjw;	o	getWorld
c	bg	net/minecraft/advancement/criterion/ImpossibleCriterion
	f	Lsm;	a	ID
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbg$a;	b	conditionsFromJson
c	bg$a	net/minecraft/advancement/criterion/ImpossibleCriterion$Conditions
c	bga	net/minecraft/item/LilyPadItem
c	bgb	net/minecraft/item/WritableBookItem
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Ljt;)Z	b	isValid
		p	0	tag	tag
c	bgc	net/minecraft/item/WrittenBookItem
	m	(Lbei$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Lben;Lcq;Layj;)Z	a	resolve
		p	0	book	book
		p	1	commandSource	commandSource
		p	2	player	player
	m	(Ljt;)Z	b	isValid
		p	0	tag	tag
	m	(Lben;)I	e	getGeneration
		p	0	stack	stack
	m	(Lben;)I	j	getPageCount
		p	0	stack	stack
c	bgd	net/minecraft/potion/Potion
	f	Ljava/lang/String;	a	baseName
	f	Lcom/google/common/collect/ImmutableList;	b	effects
	m	(Ljava/lang/String;[Lakk;)V	<init>	<init>
		p	1	baseName	baseName
		p	2	effects	effects
	m	([Lakk;)V	<init>	<init>
		p	1	effects	effects
	m	(Ljava/lang/String;)Lbgd;	a	byId
		p	0	id	id
	m	()Ljava/util/List;	a	getEffects
	m	()Z	b	hasInstantEffect
	m	(Ljava/lang/String;)Ljava/lang/String;	b	finishTranslationKey
		p	1	prefix	prefix
c	bge	net/minecraft/recipe/BrewingRecipeRegistry
	f	Ljava/util/List;	a	POTION_RECIPES
	f	Ljava/util/List;	b	ITEM_RECIPES
	f	Ljava/util/List;	c	POTION_TYPES
	f	Ljava/util/function/Predicate;	d	POTION_TYPE_PREDICATE
	m	()V	a	registerDefaults
	m	(Lbei;)V	a	registerPotionType
		p	0	item	item
	m	(Lbei;Lbei;Lbei;)V	a	registerItemRecipe
		p	0	input	input
		p	1	ingredient	ingredient
		p	2	output	output
	m	(Lbgd;)Z	a	isBrewable
		p	0	potion	potion
	m	(Lbgd;Lbei;Lbgd;)V	a	registerPotionRecipe
		p	0	input	input
		p	2	output	output
	m	(Lben;)Z	a	isValidIngredient
		p	0	stack	stack
	m	(Lben;Lben;)Z	a	hasRecipe
		p	0	input	input
		p	1	ingredient	ingredient
	m	(Lben;Lben;)Z	b	hasItemRecipe
		p	0	input	input
		p	1	ingredien	ingredien
	m	(Lben;)Z	b	isItemRecipeIngredient
		p	0	stack	stack
	m	(Lben;)Z	c	isPotionRecipeIngredient
		p	0	stack	stack
	m	(Lben;Lben;)Z	c	hasPotionRecipe
		p	0	input	input
		p	1	ingredient	ingredient
	m	(Lben;Lben;)Lben;	d	craft
		p	0	input	input
		p	1	ingredient	ingredient
c	bge$a	net/minecraft/recipe/BrewingRecipeRegistry$Recipe
	f	Ljava/lang/Object;	a	input
	f	Lbgt;	b	ingredient
	f	Ljava/lang/Object;	c	output
c	bgf	net/minecraft/potion/PotionUtil
	m	(Lben;)Ljava/util/List;	a	getPotionEffects
		p	0	stack	stack
	m	(Lben;Ljava/util/List;F)V	a	buildTooltip
		p	0	stack	stack
		p	1	list	list
	m	(Lbgd;Ljava/util/Collection;)Ljava/util/List;	a	getPotionEffects
		p	0	potion	potion
		p	1	custom	custom
	m	(Lben;Ljava/util/Collection;)Lben;	a	setCustomPotionEffects
		p	0	stack	stack
		p	1	effects	effects
	m	(Ljava/util/Collection;)I	a	getColor
		p	0	effects	effects
	m	(Ljt;Ljava/util/List;)V	a	getCustomPotionEffects
		p	0	tag	tag
		p	1	list	list
	m	(Lben;Lbgd;)Lben;	a	setPotion
		p	0	stack	stack
		p	1	potion	potion
	m	(Lbgd;)I	a	getColor
		p	0	potion	potion
	m	(Ljt;)Ljava/util/List;	a	getPotionEffects
		p	0	tag	tag
	m	(Ljt;)Ljava/util/List;	b	getCustomPotionEffects
		p	0	tag	tag
	m	(Lben;)Ljava/util/List;	b	getCustomPotionEffects
		p	0	stack	stack
	m	(Ljt;)Lbgd;	c	getPotion
		p	0	compound	compound
	m	(Lben;)I	c	getColor
		p	0	stack	stack
	m	(Lben;)Lbgd;	d	getPotion
		p	0	stack	stack
c	bgg	net/minecraft/potion/Potions
	m	(Ljava/lang/String;Lbgd;)Lbgd;	a	register
		p	0	name	name
c	bgi	net/minecraft/recipe/AbstractCookingRecipe
	f	Lbgz;	a	type
	f	Lsm;	b	id
	f	Ljava/lang/String;	c	group
	f	Lbgt;	d	input
	f	Lben;	e	output
	f	F	f	experience
	f	I	g	cookTime
	m	(Lbgz;Lsm;Ljava/lang/String;Lbgt;Lben;FI)V	<init>	<init>
		p	1	type	type
		p	2	id	id
		p	3	group	group
		p	4	input	input
		p	5	output	output
		p	6	experience	experience
		p	7	cookTime	cookTime
	m	()F	b	getExperience
	m	()I	e	getCookTime
c	bgj	net/minecraft/recipe/ArmorDyeRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bgk	net/minecraft/recipe/BannerDuplicateRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
	m	(Lbaz;)Lfy;	b	getRemainingStacks
c	bgl	net/minecraft/recipe/BlastingRecipe
	m	(Lsm;Ljava/lang/String;Lbgt;Lben;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bgm	net/minecraft/recipe/BookCloningRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
	m	(Lbaz;)Lfy;	b	getRemainingStacks
c	bgn	net/minecraft/recipe/CampfireCookingRecipe
	m	(Lsm;Ljava/lang/String;Lbgt;Lben;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bgo	net/minecraft/recipe/CraftingRecipe
c	bgp	net/minecraft/recipe/SpecialCraftingRecipe
	f	Lsm;	a	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
c	bgq	net/minecraft/recipe/FireworkRocketRecipe
	f	Lbgt;	a	PAPER
	f	Lbgt;	b	DURATION_MODIFIER
	f	Lbgt;	c	FIREWORK_STAR
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bgr	net/minecraft/recipe/FireworkStarFadeRecipe
	f	Lbgt;	a	INPUT_STAR
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bgs	net/minecraft/recipe/FireworkStarRecipe
	f	Lbgt;	a	TYPE_MODIFIER
	f	Lbgt;	b	TRAIL_MODIFIER
	f	Lbgt;	c	FLICKER_MODIFIER
	f	Ljava/util/Map;	d	TYPE_MODIFIER_MAP
	f	Lbgt;	e	GUNPOWDER
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bgt	net/minecraft/recipe/Ingredient
	f	Lbgt;	a	EMPTY
	f	Ljava/util/function/Predicate;	b	NON_EMPTY
	f	[Lbgt$c;	c	entries
	f	[Lben;	d	matchingStacks
	f	Lit/unimi/dsi/fastutil/ints/IntList;	e	ids
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1	entries	entries
	m	(Lkv;)V	a	write
		p	1	buf	buf
	m	(Lben;)Z	a	test
	m	(Lcom/google/gson/JsonObject;)Lbgt$c;	a	entryFromJson
		p	0	json	json
	m	(Laaz;)Lbgt;	a	fromTag
		p	0	tag	tag
	m	(Ljava/util/stream/Stream;)Lbgt;	a	ofEntries
		p	0	entries	entries
	m	([Lbjv;)Lbgt;	a	ofItems
		p	0	items	items
	m	(Lcom/google/gson/JsonElement;)Lbgt;	a	fromJson
		p	0	json	json
	m	()[Lben;	a	getMatchingStacksClient
	m	([Lben;)Lbgt;	a	ofStacks
		p	0	stacks	stacks
	m	(Lbjv;)Lbgt$a;	a	method_8098
		p	0	item	item
	m	(Lben;)Lbgt$a;	b	method_8094
		p	0	stack	stack
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getIds
	m	(Lkv;)Lbgt;	b	fromPacket
		p	0	buf	buf
	m	(Lcom/google/gson/JsonElement;)Lbgt$c;	b	method_8090
		p	0	jsonElement	jsonElement
	m	()Lcom/google/gson/JsonElement;	c	toJson
	m	()Z	d	isEmpty
	m	()V	f	cacheMatchingStacks
	m	(Ljava/lang/Object;)Z	test	test
		p	1	stack	stack
c	bgt$a	net/minecraft/recipe/Ingredient$StackEntry
	f	Lben;	a	stack
	m	(Lben;)V	<init>	<init>
		p	1	stack	stack
c	bgt$b	net/minecraft/recipe/Ingredient$TagEntry
	f	Laaz;	a	tag
	m	(Laaz;)V	<init>	<init>
		p	1	tag	tag
c	bgt$c	net/minecraft/recipe/Ingredient$Entry
	m	()Ljava/util/Collection;	a	getStacks
	m	()Lcom/google/gson/JsonObject;	b	toJson
c	bgu	net/minecraft/recipe/MapCloningRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bgv	net/minecraft/recipe/MapExtendingRecipe
	m	(Lcrg;)Z	a	matches
		p	1	state	state
	m	(Lbaz;)Lben;	craft	craft
	m	(Lbaz;Lbjw;)Z	matches	matches
c	bgw	net/minecraft/recipe/Recipe
	m	()Z	V_	isIgnoredInRecipeBook
	m	()Lbgy;	W_	getSerializer
	m	(II)Z	a	fits
		p	1	width	width
		p	2	height	height
	m	(Laje;Lbjw;)Z	a	matches
		p	1	inv	inv
		p	2	world	world
	m	(Laje;)Lben;	a	craft
		p	1	inv	inv
	m	()Lfy;	a	getPreviewInputs
	m	(Laje;)Lfy;	b	getRemainingStacks
	m	()Lben;	c	getOutput
	m	()Ljava/lang/String;	d	getGroup
	m	()Lsm;	f	getId
	m	()Lbgz;	g	getType
	m	()Lben;	h	getRecipeKindIcon
c	bgx	net/minecraft/recipe/RecipeManager
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	recipes
	f	Z	d	errored
	m	(Ljava/util/Map;Lzb;Laio;)V	a	apply
	m	(Lsm;)Ljava/util/Optional;	a	get
		p	1	id	id
	m	(Lsm;Lcom/google/gson/JsonObject;)Lbgw;	a	deserialize
		p	0	id	id
		p	1	json	json
	m	(Ljava/lang/Iterable;)V	a	setRecipes
		p	1	recipes	recipes
	m	(Lbgz;Laje;Lbjw;)Ljava/util/Optional;	a	getFirstMatch
		p	1	type	type
		p	2	inventory	inventory
		p	3	world	world
	m	(Lbgz;)Ljava/util/Map;	a	getAllOfType
		p	1	type	type
	m	(Lbgz;Laje;Lbjw;)Ljava/util/List;	b	getAllMatches
		p	1	type	type
		p	2	inventory	inventory
		p	3	world	world
	m	()Ljava/util/Collection;	b	values
	m	(Lbgz;Laje;Lbjw;)Lfy;	c	getRemainingStacks
	m	()Ljava/util/stream/Stream;	c	keys
c	bgy	net/minecraft/recipe/RecipeSerializer
	f	Lbgy;	a	SHAPED
	f	Lbgy;	b	SHAPELESS
	f	Lbhg;	c	ARMOR_DYE
	f	Lbhg;	d	BOOK_CLONING
	f	Lbhg;	e	MAP_CLONING
	f	Lbhg;	f	MAP_EXTENDING
	f	Lbhg;	g	FIREWORK_ROCKET
	f	Lbhg;	h	FIREWORK_STAR
	f	Lbhg;	i	FIREWORK_STAR_FADE
	f	Lbhg;	j	TIPPED_ARROW
	f	Lbhg;	k	BANNER_DUPLICATE
	f	Lbhg;	l	SHIELD_DECORATION
	f	Lbhg;	m	SHULKER_BOX
	f	Lbhg;	n	SUSPICIOUS_STEW
	f	Lbhg;	o	REPAIR_ITEM
	f	Lbhf;	p	SMELTING
	f	Lbhf;	q	BLASTING
	f	Lbhf;	r	SMOKING
	f	Lbhf;	s	CAMPFIRE_COOKING
	m	(Lsm;Lkv;)Lbgw;	a	read
		p	1	id	id
		p	2	buf	buf
	m	(Ljava/lang/String;Lbgy;)Lbgy;	a	register
		p	0	id	id
		p	1	serializer	serializer
	m	(Lkv;Lbgw;)V	a	write
		p	1	buf	buf
		p	2	recipe	recipe
	m	(Lsm;Lcom/google/gson/JsonObject;)Lbgw;	a	read
		p	1	id	id
		p	2	json	json
c	bgz	net/minecraft/recipe/RecipeType
	f	Lbgz;	a	CRAFTING
	f	Lbgz;	b	SMELTING
	f	Lbgz;	c	BLASTING
	f	Lbgz;	d	SMOKING
	f	Lbgz;	e	CAMPFIRE_COOKING
	m	(Lbgw;Lbjw;Laje;)Ljava/util/Optional;	a	get
		p	1	recipe	recipe
		p	2	world	world
		p	3	inventory	inventory
	m	(Ljava/lang/String;)Lbgz;	a	register
c	bh	net/minecraft/advancement/criterion/InventoryChangedCriterion
	f	Lsm;	a	ID
	m	(Lxe;Layi;)V	a	trigger
		p	1	player	player
		p	2	inventory	inventory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbh$a;	b	conditionsFromJson
c	bh$a	net/minecraft/advancement/criterion/InventoryChangedCriterion$Conditions
	f	Lbr$d;	a	occupied
	f	Lbr$d;	b	full
	f	Lbr$d;	c	empty
	f	[Lbj;	d	items
	m	(Lbr$d;Lbr$d;Lbr$d;[Lbj;)V	<init>	<init>
		p	1	occupied	occupied
		p	2	full	full
		p	3	empty	empty
		p	4	items	items
	m	([Lbjv;)Lbh$a;	a	items
		p	0	items	items
	m	(Layi;)Z	a	matches
		p	1	inventory	inventory
	m	([Lbj;)Lbh$a;	a	items
		p	0	items	items
c	bha	net/minecraft/recipe/RepairItemRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bhb	net/minecraft/recipe/ShapedRecipe
	f	I	a	width
	f	I	b	height
	f	Lfy;	c	inputs
	f	Lben;	d	output
	f	Lsm;	e	id
	f	Ljava/lang/String;	f	group
	m	(Lsm;Ljava/lang/String;IILfy;Lben;)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	width	width
		p	4	height	height
		p	5	ingredients	ingredients
		p	6	output	output
	m	(Lcom/google/gson/JsonObject;)Lben;	a	getItemStack
		p	0	json	json
	m	([Ljava/lang/String;)[Ljava/lang/String;	a	combinePattern
		p	0	lines	lines
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Ljava/lang/String;)I	a	findNextIngredient
		p	0	pattern	pattern
	m	(Lbaz;IIZ)Z	a	matchesSmall
		p	1	inv	inv
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
	m	(Lbaz;)Lben;	a	craft
	m	(Ljava/lang/String;)I	b	findNextIngredientReverse
		p	0	pattern	pattern
	m	(Lcom/google/gson/JsonArray;)[Ljava/lang/String;	b	getPattern
		p	0	json	json
	m	([Ljava/lang/String;Ljava/util/Map;II)Lfy;	b	getIngredients
		p	0	pattern	pattern
		p	1	key	key
		p	2	width	width
		p	3	height	height
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	c	getComponents
		p	0	json	json
	m	()I	i	getWidth
	m	()I	j	getHeight
c	bhb$a	net/minecraft/recipe/ShapedRecipe$Serializer
	m	(Lkv;Lbhb;)V	a	write
	m	(Lsm;Lkv;)Lbhb;	b	read
	m	(Lsm;Lcom/google/gson/JsonObject;)Lbhb;	b	read
c	bhc	net/minecraft/recipe/ShapelessRecipe
	f	Lsm;	a	id
	f	Ljava/lang/String;	b	group
	f	Lben;	c	output
	f	Lfy;	d	input
	m	(Lsm;Ljava/lang/String;Lben;Lfy;)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	output	output
		p	4	input	input
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bhc$a	net/minecraft/recipe/ShapelessRecipe$Serializer
	m	(Lcom/google/gson/JsonArray;)Lfy;	a	getIngredients
		p	0	json	json
	m	(Lkv;Lbhc;)V	a	write
	m	(Lsm;Lcom/google/gson/JsonObject;)Lbhc;	b	read
	m	(Lsm;Lkv;)Lbhc;	b	read
c	bhd	net/minecraft/recipe/ShieldDecorationRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bhe	net/minecraft/recipe/ShulkerBoxColoringRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bhf	net/minecraft/recipe/CookingRecipeSerializer
	f	I	u	cookingTime
	f	Lbhf$a;	v	recipeFactory
	m	(Lbhf$a;I)V	<init>	<init>
		p	1	recipeFactory	recipeFactory
		p	2	cookingTime	cookingTime
	m	(Lkv;Lbgi;)V	a	write
	m	(Lsm;Lcom/google/gson/JsonObject;)Lbgi;	b	read
	m	(Lsm;Lkv;)Lbgi;	b	read
c	bhf$a	net/minecraft/recipe/CookingRecipeSerializer$RecipeFactory
	m	(Lsm;Ljava/lang/String;Lbgt;Lben;FI)Lbgi;	create	create
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bhg	net/minecraft/recipe/SpecialRecipeSerializer
	f	Ljava/util/function/Function;	u	id
c	bhh	net/minecraft/recipe/CuttingRecipe
	f	Lbgt;	a	input
	f	Lben;	b	output
	f	Lsm;	c	id
	f	Ljava/lang/String;	d	group
	f	Lbgz;	e	type
	f	Lbgy;	f	serializer
	m	(Lbgz;Lbgy;Lsm;Ljava/lang/String;Lbgt;Lben;)V	<init>	<init>
		p	1	type	type
		p	2	serializer	serializer
		p	3	id	id
		p	4	group	group
		p	5	input	input
		p	6	output	output
c	bhh$a	net/minecraft/recipe/CuttingRecipe$Serializer
	f	Lbhh$a$a;	u	recipeFactory
	m	(Lkv;Lbhh;)V	a	write
	m	(Lsm;Lcom/google/gson/JsonObject;)Lbhh;	b	read
	m	(Lsm;Lkv;)Lbhh;	b	read
c	bhh$a$a	net/minecraft/recipe/CuttingRecipe$Serializer$RecipeFactory
c	bhi	net/minecraft/recipe/SmeltingRecipe
	m	(Lsm;Ljava/lang/String;Lbgt;Lben;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bhj	net/minecraft/recipe/SmokingRecipe
	m	(Lsm;Ljava/lang/String;Lbgt;Lben;FI)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	experience	experience
		p	6	cookTime	cookTime
c	bhk	net/minecraft/recipe/StonecuttingRecipe
	m	(Lsm;Ljava/lang/String;Lbgt;Lben;)V	<init>	<init>
		p	1	id	id
		p	2	group	group
		p	3	input	input
		p	4	output	output
c	bhl	net/minecraft/recipe/SuspiciousStewRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bhm	net/minecraft/recipe/TippedArrowRecipe
	m	(Lbaz;Lbjw;)Z	a	matches
	m	(Lbaz;)Lben;	a	craft
c	bho	net/minecraft/enchantment/PowerEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bhp	net/minecraft/enchantment/FlameEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bhq	net/minecraft/enchantment/InfinityEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bhr	net/minecraft/enchantment/PunchEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bhs	net/minecraft/enchantment/PiercingEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bht	net/minecraft/enchantment/BindingCurseEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bhu	net/minecraft/enchantment/DamageEnchantment
	f	I	a	typeIndex
	f	[Ljava/lang/String;	d	typeNames
	m	(Lbhx$a;I[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	typeIndex	typeIndex
		p	3	slots	slots
c	bhv	net/minecraft/enchantment/UnbreakingEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(Lben;ILjava/util/Random;)Z	a	shouldPreventDamage
		p	0	item	item
		p	1	level	level
		p	2	random	random
c	bhw	net/minecraft/enchantment/EfficiencyEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bhx	net/minecraft/enchantment/Enchantment
	f	[Lakv;	a	slotTypes
	f	Lbhy;	b	type
	f	Ljava/lang/String;	c	translationKey
	f	Lbhx$a;	d	weight
	m	(Lbhx$a;Lbhy;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	type	type
		p	3	slotTypes	slotTypes
	m	(Lakz;)Ljava/util/Map;	a	getEquipment
	m	(Lben;)Z	a	isAcceptableItem
		p	1	stack	stack
	m	(I)I	a	getMinimumPower
		p	1	level	level
	m	(Lakz;Lakq;I)V	a	onTargetDamaged
		p	1	user	user
		p	2	target	target
		p	3	level	level
	m	(Lbhx;)Z	a	differs
		p	1	other	other
	m	()I	a	getMaximumLevel
	m	(ILald;)F	a	getAttackDamage
		p	1	level	level
		p	2	group	group
	m	(ILajz;)I	a	getProtectionAmount
		p	1	level	level
		p	2	source	source
	m	(Lbhx;)Z	b	isDifferent
		p	1	other	other
	m	()Z	b	isTreasure
	m	(I)I	b	getMaximumPower
		p	1	level	level
	m	(Lakz;Lakq;I)V	b	onUserDamaged
		p	1	user	user
		p	2	attacker	attacker
		p	3	level	level
	m	()Z	c	isCursed
	m	(I)Lbhx;	c	byRawId
		p	0	id	id
	m	(I)Llf;	d	getName
		p	1	level	level
	m	()Lbhx$a;	d	getWeight
	m	()I	e	getMinimumLevel
	m	()Ljava/lang/String;	f	getOrCreateTranslationKey
	m	()Ljava/lang/String;	g	getTranslationKey
c	bhx$a	net/minecraft/enchantment/Enchantment$Weight
	f	I	e	weight
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	weight	weight
	m	()I	a	getWeight
c	bhy	net/minecraft/enchantment/EnchantmentTarget
	m	(Lbei;)Z	a	isAcceptableItem
		p	1	item	item
c	bhz	net/minecraft/enchantment/EnchantmentHelper
	m	(Lbhz$a;Ljava/lang/Iterable;)V	a	accept
		p	0	enchantmentHandler	enchantmentHandler
		p	1	stacks	stacks
	m	(Ljava/util/Map;Lben;)V	a	set
		p	0	enchantments	enchantments
		p	1	stack	stack
	m	(Ljava/util/Collection;Lbhx;)Z	a	contains
		p	0	collection	collection
		p	1	enchantment	enchantment
	m	(Lakz;)F	a	getSweepingMultiplier
		p	0	entity	entity
	m	(Ljava/util/Random;Lben;IZ)Lben;	a	enchant
		p	0	random	random
		p	1	target	target
		p	2	level	level
		p	3	hasTreasure	hasTreasure
	m	(Lben;Lald;)F	a	getAttackDamage
		p	0	stack	stack
		p	1	group	group
	m	(Lbhx;Lben;)I	a	getLevel
		p	0	enchantment	enchantment
		p	1	stack	stack
	m	(Ljz;)Ljava/util/Map;	a	getEnchantments
		p	0	tag	tag
	m	(Ljava/util/Map;Ljt;Lbhx;)V	a	method_17884
		p	2	enchantment	enchantment
	m	(Lbhz$a;Lben;)V	a	accept
		p	0	enchantmentHandler	enchantmentHandler
		p	1	stack	stack
	m	(Lbhx;Lakz;)I	a	getEquipmentLevel
		p	0	ench	ench
		p	1	entity	entity
	m	(Lakz;Lakq;)V	a	onUserDamaged
		p	0	user	user
		p	1	attacker	attacker
	m	(Ljava/lang/Iterable;Lajz;)I	a	getProtectionAmount
		p	0	equipment	equipment
		p	1	source	source
	m	(Ljava/util/Random;IILben;)I	a	calculateEnchantmentPower
		p	0	random	random
		p	1	num	num
		p	2	enchantmentPower	enchantmentPower
		p	3	rstack	rstack
	m	(ILben;Z)Ljava/util/List;	a	getHighestApplicableEnchantmentsAtPower
		p	0	power	power
		p	1	stack	stack
	m	(Lben;)Ljava/util/Map;	a	getEnchantments
		p	0	stack	stack
	m	(Ljava/util/List;Lbia;)V	a	remove
		p	0	infos	infos
		p	1	info	info
	m	(Lakz;)I	b	getKnockback
		p	0	entity	entity
	m	(Lben;)I	b	getLuckOfTheSea
		p	0	stack	stack
	m	(Ljava/util/Random;Lben;IZ)Ljava/util/List;	b	getEnchantments
		p	0	random	random
		p	1	stack	stack
		p	2	level	level
		p	3	hasTreasure	hasTreasure
	m	(Lakz;Lakq;)V	b	onTargetDamaged
		p	0	user	user
		p	1	target	target
	m	(Lbhx;Lakz;)Ljava/util/Map$Entry;	b	getRandomEnchantedEquipment
	m	(Lben;)I	c	getLure
		p	0	stack	stack
	m	(Lakz;)I	c	getFireAspect
		p	0	entity	entity
	m	(Lakz;)I	d	getRespiration
		p	0	entity	entity
	m	(Lben;)Z	d	hasBindingCurse
		p	0	stack	stack
	m	(Lben;)Z	e	hasVanishingCurse
		p	0	stack	stack
	m	(Lakz;)I	e	getDepthStrider
		p	0	entity	entity
	m	(Lakz;)I	f	getEfficiency
		p	0	entity	entity
	m	(Lben;)I	f	getLoyalty
		p	0	stack	stack
	m	(Lben;)I	g	getRiptide
		p	0	stack	stack
	m	(Lakz;)I	g	getLooting
		p	0	entity	entity
	m	(Lben;)Z	h	hasChanneling
		p	0	stack	stack
	m	(Lakz;)Z	h	hasAquaAffinity
		p	0	entity	entity
	m	(Lakz;)Z	i	hasFrostWalker
		p	0	entity	entity
c	bhz$a	net/minecraft/enchantment/EnchantmentHelper$Consumer
	m	(Lbhx;I)V	accept	accept
		p	1	enchantment	enchantment
		p	2	level	level
c	bi	net/minecraft/advancement/criterion/ItemDurabilityChangedCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lben;I)V	a	trigger
		p	1	player	player
		p	2	stack	stack
		p	3	damage	damage
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbi$a;	b	conditionsFromJson
c	bi$a	net/minecraft/advancement/criterion/ItemDurabilityChangedCriterion$Conditions
	f	Lbj;	a	item
	f	Lbr$d;	b	durability
	f	Lbr$d;	c	delta
	m	(Lbj;Lbr$d;Lbr$d;)V	<init>	<init>
		p	1	item	item
	m	(Lben;I)Z	a	matches
		p	1	stack	stack
		p	2	damage	damage
	m	(Lbj;Lbr$d;)Lbi$a;	a	create
		p	0	item	item
c	bia	net/minecraft/enchantment/InfoEnchantment
	f	Lbhx;	b	enchantment
	f	I	c	level
	m	(Lbhx;I)V	<init>	<init>
		p	1	enchantment	enchantment
		p	2	level	level
c	bib	net/minecraft/enchantment/Enchantments
	f	[Lakv;	L	ALL_ARMOR
	m	(Ljava/lang/String;Lbhx;)Lbhx;	a	register
c	bic	net/minecraft/enchantment/FireAspectEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bid	net/minecraft/enchantment/LureEnchantment
	m	(Lbhx$a;Lbhy;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	type	type
		p	3	slotTypes	slotTypes
c	bie	net/minecraft/enchantment/FrostWalkerEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(Lakz;Lbjw;Lfk;I)V	a	freezeWater
		p	0	entity	entity
		p	1	world	world
		p	2	blockPos	blockPos
		p	3	level	level
c	bif	net/minecraft/enchantment/KnockbackEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slot	slot
c	big	net/minecraft/enchantment/LuckEnchantment
	m	(Lbhx$a;Lbhy;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	type	type
		p	3	slotTypes	slotTypes
c	bih	net/minecraft/enchantment/MendingEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bii	net/minecraft/enchantment/MultishotEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bij	net/minecraft/enchantment/RespirationEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bik	net/minecraft/enchantment/ProtectionEnchantment
	f	Lbik$a;	a	protectionType
	m	(Lbhx$a;Lbik$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	type	type
		p	3	slotTypes	slotTypes
	m	(Lakz;D)D	a	transformExplosionKnockback
		p	0	entity	entity
		p	1	velocity	velocity
	m	(Lakz;I)I	a	transformFireDuration
		p	0	entity	entity
		p	1	duration	duration
c	bik$a	net/minecraft/enchantment/ProtectionEnchantment$Type
	f	Ljava/lang/String;	f	name
	f	I	g	basePower
	f	I	h	powerPerLevel
	m	(Ljava/lang/String;ILjava/lang/String;II)V	<init>	<init>
		p	3	name	name
		p	4	basePower	basePower
		p	5	powerPerLevel	powerPerLevel
	m	()I	b	getBasePower
	m	()I	c	getPowerPerLevel
c	bil	net/minecraft/enchantment/QuickChargeEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slot	slot
c	bim	net/minecraft/enchantment/SweepingEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(I)F	e	getMultiplier
c	bin	net/minecraft/enchantment/ThornsEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
	m	(ILjava/util/Random;)Z	a	shouldDamageAttacker
		p	0	level	level
		p	1	random	random
	m	(ILjava/util/Random;)I	b	getDamageAmount
		p	0	level	level
		p	1	random	random
c	bio	net/minecraft/enchantment/ChannelingEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bip	net/minecraft/enchantment/ImpalingEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	biq	net/minecraft/enchantment/LoyaltyEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bir	net/minecraft/enchantment/RiptideEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bis	net/minecraft/enchantment/SilkTouchEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	bit	net/minecraft/enchantment/VanishingCurseEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	biu	net/minecraft/enchantment/DepthStriderEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	biv	net/minecraft/enchantment/AquaAffinityEnchantment
	m	(Lbhx$a;[Lakv;)V	<init>	<init>
		p	1	weight	weight
		p	2	slotTypes	slotTypes
c	biy	net/minecraft/village/Trader
	m	(Lbiz;)V	a	trade
	m	(Layj;Llf;I)V	a	sendOffers
	m	(Lbja;)V	a	setOffersFromServer
	m	(Layj;)V	e	setCurrentCustomer
		p	1	customer	customer
	m	()Lbjw;	eB	getTraderWorld
	m	()Z	eD	canRefreshTrades
	m	()I	er	getExperience
	m	()Layj;	es	getCurrentCustomer
	m	()Lbja;	eu	getOffers
	m	()Z	ev	isLevelledTrader
	m	()Laah;	ew	getYesSound
	m	(Lben;)V	i	onSellingItem
	m	(I)V	t	setExperienceFromServer
		p	1	experience	experience
c	biz	net/minecraft/village/TradeOffer
	f	Lben;	a	firstBuyItem
	f	Lben;	b	secondBuyItem
	f	Lben;	c	sellItem
	f	I	d	uses
	f	I	e	maxUses
	f	Z	f	rewardingPlayerExperience
	f	I	g	specialPrice
	f	I	h	demandBonus
	f	F	i	priceMultiplier
	f	I	j	traderExperience
	m	(Lben;Lben;IIF)V	<init>	<init>
		p	1	buyItem	buyItem
		p	2	sellItem	sellItem
		p	3	maxUses	maxUses
		p	4	rewardedExp	rewardedExp
		p	5	priceMultiplier	priceMultiplier
	m	(Lben;Lben;Lben;IIIF)V	<init>	<init>
		p	1	firstBuyItem	firstBuyItem
		p	2	secondBuyItem	secondBuyItem
		p	3	sellItem	sellItem
		p	4	uses	uses
		p	5	maxUses	maxUses
		p	6	rewardedExp	rewardedExp
		p	7	priceMultiplier	priceMultiplier
	m	(Lben;Lben;Lben;IIF)V	<init>	<init>
		p	1	firstBuyItem	firstBuyItem
		p	2	secondBuyItem	secondBuyItem
		p	3	sellItem	sellItem
		p	4	maxUses	maxUses
		p	5	rewardedExp	rewardedExp
		p	6	priceMultiplier	priceMultiplier
	m	(Lben;Lben;)Z	a	matchesBuyItems
		p	1	first	first
		p	2	second	second
	m	()Lben;	a	getOriginalFirstBuyItem
	m	(I)V	a	increaseSpecialPrice
	m	(Lben;Lben;)Z	b	depleteBuyItems
	m	()Lben;	b	getAdjustedFirstBuyItem
	m	(I)V	b	setSpecialPrice
	m	(Lben;Lben;)Z	c	acceptsBuy
		p	1	given	given
		p	2	sample	sample
	m	()Lben;	c	getSecondBuyItem
	m	()Lben;	d	getMutableSellItem
	m	()V	e	updatePriceOnDemand
	m	()Lben;	f	getSellItem
	m	()I	g	getUses
	m	()V	h	resetUses
	m	()I	i	getMaxUses
	m	()V	j	use
	m	()I	k	getDemandBonus
	m	()V	l	clearSpecialPrice
	m	()I	m	getSpecialPrice
	m	()F	n	getPriceMultiplier
	m	()I	o	getTraderExperience
	m	()Z	p	isDisabled
	m	()V	q	clearUses
	m	()Z	s	shouldRewardPlayerExperience
	m	()Ljt;	t	toTag
c	bj	net/minecraft/predicate/item/ItemPredicate
	f	Lbj;	a	ANY
	f	Laaz;	b	tag
	f	Lbei;	c	item
	f	Lbr$d;	d	count
	f	Lbr$d;	e	durability
	f	[Law;	f	enchantments
	f	[Law;	g	storedEnchantments
	f	Lbgd;	h	potion
	f	Lbt;	i	nbt
	m	(Laaz;Lbei;Lbr$d;Lbr$d;[Law;[Law;Lbgd;Lbt;)V	<init>	<init>
		p	1	tag	tag
		p	2	item	item
		p	3	count	count
		p	4	durability	durability
		p	5	enchantments	enchantments
		p	6	storedEnchantments	storedEnchantments
		p	7	potion	potion
		p	8	nbt	nbt
	m	(Lben;)Z	a	test
		p	1	stack	stack
	m	(Lcom/google/gson/JsonElement;)Lbj;	a	fromJson
		p	0	el	el
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonElement;)[Lbj;	b	deserializeAll
		p	0	el	el
c	bj$a	net/minecraft/predicate/item/ItemPredicate$Builder
	f	Ljava/util/List;	a	enchantments
	f	Ljava/util/List;	b	storedEnchantments
	f	Lbei;	c	item
	f	Laaz;	d	tag
	f	Lbr$d;	e	count
	f	Lbr$d;	f	durability
	f	Lbgd;	g	potion
	f	Lbt;	h	nbt
	m	(Ljt;)Lbj$a;	a	nbt
		p	1	nbt	nbt
	m	(Laaz;)Lbj$a;	a	tag
		p	1	tag	tag
	m	(Law;)Lbj$a;	a	enchantment
		p	1	enchantment	enchantment
	m	(Lbjv;)Lbj$a;	a	item
	m	()Lbj$a;	a	create
	m	()Lbj;	b	build
c	bja	net/minecraft/village/TraderOfferList
	m	(Lben;Lben;I)Lbiz;	a	getValidRecipe
		p	1	firstBuyItem	firstBuyItem
		p	2	secondBuyItem	secondBuyItem
		p	3	index	index
	m	(Lkv;)V	a	toPacket
		p	1	buffer	buffer
	m	()Ljt;	a	toTag
	m	(Lkv;)Lbja;	b	fromPacket
		p	0	byteBuf	byteBuf
c	bjc	net/minecraft/world/CommandBlockExecutor
	f	Ljava/text/SimpleDateFormat;	b	DATE_FORMAT
	f	J	d	lastExecution
	f	Z	e	updateLastExecution
	f	I	f	successCount
	f	Z	g	trackOutput
	f	Llf;	h	lastOutput
	f	Ljava/lang/String;	i	command
	f	Llf;	j	customName
	m	(Ljava/lang/String;)V	a	setCommand
	m	(Lbjw;)Z	a	execute
	m	(I)V	a	setSuccessCount
		p	1	successCount	successCount
	m	(Z)V	a	shouldTrackOutput
		p	1	trackOutput	trackOutput
	m	(Layj;)Z	a	interact
		p	1	player	player
	m	(Ljt;)Ljt;	a	serialize
	m	(Ljt;)V	b	deserialize
	m	(Llf;)V	b	setCustomName
	m	(Llf;)V	c	setLastOutput
		p	1	lastOutput	lastOutput
	m	()Lxd;	d	getWorld
	m	()V	e	markDirty
	m	()Lcvl;	f	getPos
	m	()Lcq;	h	getSource
	m	()I	i	getSuccessCount
	m	()Llf;	j	getLastOutput
	m	()Ljava/lang/String;	k	getCommand
	m	()Llf;	l	getCustomName
	m	()Z	m	isTrackingOutput
c	bjd	net/minecraft/world/MobSpawnerLogic
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	spawnDelay
	f	Ljava/util/List;	c	spawnPotentials
	f	Lbkk;	d	spawnEntry
	f	I	g	minSpawnDelay
	f	I	h	maxSpawnDelay
	f	I	i	spawnCount
	f	Lakq;	j	renderedEntity
	f	I	k	maxNearbyEntities
	f	I	l	requiredPlayerRange
	f	I	m	spawnRange
	m	(Lakq;)V	a	spawnEntity
	m	(Ljt;)V	a	deserialize
	m	(Laku;)V	a	setEntityId
	m	(I)V	a	sendStatus
		p	1	status	status
	m	()Lbjw;	a	getWorld
	m	(Lbkk;)V	a	setSpawnEntry
		p	1	spawnEntry	spawnEntry
	m	()Lfk;	b	getPos
	m	(Ljt;)Ljt;	b	serialize
	m	()V	c	update
	m	()Lakq;	d	getRenderedEntity
	m	()Lsm;	g	getEntityId
	m	()Z	h	isPlayerInRange
	m	()V	i	updateSpawns
c	bje	net/minecraft/world/BlockRenderView
	m	(Lbkf;Lfk;)I	a	getLightLevel
		p	1	type	type
		p	2	pos	pos
	m	(Lfk;Lnet/minecraft/world/level/ColorResolver;)I	a	getColor
		p	1	pos	pos
		p	2	colorResolver	colorResolver
	m	(Lfk;I)I	b	getBaseLightLevel
		p	1	pos	pos
		p	2	ambientDarkness	ambientDarkness
	m	()Lcoa;	e	getLightingProvider
	m	(Lfk;)Z	f	isSkyVisible
		p	1	pos	pos
c	bjf	net/minecraft/server/world/BlockAction
	f	Lfk;	a	pos
	f	Lbph;	b	block
	f	I	c	type
	f	I	d	data
	m	(Lfk;Lbph;II)V	<init>	<init>
		p	1	pos	pos
		p	2	block	block
		p	3	type	type
		p	4	data	data
	m	()Lfk;	a	getPos
	m	()Lbph;	b	getBlock
	m	()I	c	getType
	m	()I	d	getData
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bjg	net/minecraft/world/BlockView
	m	()I	H	getMaxLightLevel
	m	()I	I	getHeight
	m	(Lcvl;Lcvl;Lfk;Lcwf;Lbyj;)Lcvg;	a	rayTraceBlock
		p	1	start	start
		p	2	end	end
		p	3	pos	pos
		p	4	shape	shape
		p	5	state	state
	m	(Lbjj;)Lcvg;	a	rayTrace
		p	1	context	context
	m	(Lbjj;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	rayTrace
		p	1	context	context
		p	2	blockRaytracer	blockRaytracer
	m	(Lfk;)Lcoj;	b	getFluidState
		p	1	pos	pos
	m	(Lfk;)Lbwl;	c	getBlockEntity
		p	1	pos	pos
	m	(Lfk;)Lbyj;	d_	getBlockState
		p	1	pos	pos
	m	(Lfk;)I	h	getLuminance
		p	1	pos	pos
c	bjh	net/minecraft/util/math/ChunkPos
	f	J	a	MARKER
	f	I	b	x
	f	I	c	z
	m	(J)V	<init>	<init>
		p	1	pos	pos
	m	(Lfk;)V	<init>	<init>
		p	1	pos	pos
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
	m	(II)J	a	toLong
		p	0	chunkX	chunkX
		p	1	chunkZ	chunkZ
	m	(Lbjh;I)Ljava/util/stream/Stream;	a	stream
		p	0	center	center
		p	1	radius	radius
	m	(III)Lfk;	a	toBlockPos
		p	1	chunkRelativeX	chunkRelativeX
		p	2	chunkRelativeY	chunkRelativeY
		p	3	chunkRelativeZ	chunkRelativeZ
	m	()J	a	toLong
	m	(J)I	a	getPackedX
		p	0	pos	pos
	m	(Lbjh;Lbjh;)Ljava/util/stream/Stream;	a	stream
		p	0	pos1	pos1
		p	1	pos2	pos2
	m	(J)I	b	getPackedZ
		p	0	pos	pos
	m	()I	d	getStartX
	m	()I	e	getStartZ
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()I	f	getEndX
	m	()I	g	getEndZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionRelativeX
	m	()I	k	getRegionRelativeZ
	m	()Lfk;	l	getCenterBlockPos
c	bjh$1	net/minecraft/util/math/ChunkPos$1
	f	Lbjh;	e	position
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
		p	1	consumer	consumer
c	bji	net/minecraft/server/world/SimpleTickScheduler
	f	Ljava/util/Set;	a	scheduledTicks
	f	Ljava/util/function/Function;	b	identifierProvider
	m	(J)Ljz;	a	toNbt
		p	1	time	time
	m	(Ljz;Ljava/util/function/Function;Ljava/util/function/Function;)Lbji;	a	fromNbt
		p	0	ticks	ticks
	m	()Ljava/util/stream/Stream;	b	stream
c	bjj	net/minecraft/world/RayTraceContext
	f	Lcvl;	a	start
	f	Lcvl;	b	end
	f	Lbjj$a;	c	shapeType
	f	Lbjj$b;	d	fluid
	f	Lcvq;	e	entityPosition
	m	(Lcvl;Lcvl;Lbjj$a;Lbjj$b;Lakq;)V	<init>	<init>
		p	1	start	start
		p	2	end	end
	m	(Lbyj;Lbjg;Lfk;)Lcwf;	a	getBlockShape
	m	(Lcoj;Lbjg;Lfk;)Lcwf;	a	getFluidShape
	m	()Lcvl;	a	getEnd
	m	()Lcvl;	b	getStart
c	bjj$a	net/minecraft/world/RayTraceContext$ShapeType
	f	Lbjj$c;	c	provider
c	bjj$b	net/minecraft/world/RayTraceContext$FluidHandling
	f	Ljava/util/function/Predicate;	d	predicate
	m	(Lcoj;)Z	a	handled
c	bjj$c	net/minecraft/world/RayTraceContext$ShapeProvider
c	bjk	net/minecraft/world/CollisionView
	m	(Lakq;Lcvf;Ljava/util/Set;)Z	a	doesNotCollide
		p	1	entity	entity
		p	2	entityBoundingBox	entityBoundingBox
		p	3	otherEntities	otherEntities
	m	(Lakq;Lcwf;)Z	a	intersectsEntities
		p	1	except	except
		p	2	shape	shape
	m	(Lbyj;Lfk;Lcvq;)Z	a	canPlace
		p	1	state	state
		p	2	pos	pos
		p	3	context	context
	m	(Lcvf;)Z	a	doesNotCollide
		p	1	box	box
	m	(Lakq;Lcvf;)Z	a_	doesNotCollide
		p	1	entity	entity
		p	2	box	box
	m	(Lakq;Lcvf;)Ljava/util/stream/Stream;	b	getBlockCollisions
		p	1	entity	entity
		p	2	box	box
	m	(Lakq;Lcvf;Ljava/util/Set;)Ljava/util/stream/Stream;	b	getEntityCollisions
		p	1	entity	entity
		p	2	box	box
		p	3	excluded	excluded
	m	(Lakq;Lcvf;Ljava/util/Set;)Ljava/util/stream/Stream;	c	getCollisions
		p	1	entity	entity
		p	2	box	box
		p	3	excluded	excluded
	m	(II)Lbjg;	c	getExistingChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	()Lbzw;	f	getWorldBorder
	m	(Lakq;)Z	i	intersectsEntities
		p	1	entity	entity
	m	(Lakq;)Z	j	doesNotCollide
		p	1	entity	entity
c	bjm	net/minecraft/world/EmptyBlockView
c	bjn	net/minecraft/client/world/DummyClientTickScheduler
	f	Lbjn;	a	INSTANCE
	m	()Lbjn;	b	get
c	bjo	net/minecraft/world/EntityView
	m	()Ljava/util/List;	A	getPlayers
	m	(Lakq;Lcwf;)Z	a	intersectsEntities
		p	1	except	except
		p	2	shape	shape
	m	(DDD)Layj;	a	getClosestPlayer
		p	1	x	x
		p	3	z	z
		p	5	maxDistance	maxDistance
	m	(Lask;Lakz;)Layj;	a	getClosestPlayer
		p	1	targetPredicate	targetPredicate
		p	2	entity	entity
	m	(DDDDZ)Layj;	a	getClosestPlayer
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	maxDistance	maxDistance
		p	9	ignoreCreative	ignoreCreative
	m	(Ljava/lang/Class;Lcvf;)Ljava/util/List;	a	getNonSpectatingEntities
		p	1	entityClass	entityClass
		p	2	box	box
	m	(Lakq;Lcvf;)Ljava/util/List;	a	getEntities
		p	1	except	except
		p	2	box	box
	m	(Ljava/lang/Class;Lask;Lakz;Lcvf;)Ljava/util/List;	a	getTargets
		p	1	entityClass	entityClass
		p	2	targetPredicate	targetPredicate
		p	3	targettingEntity	targettingEntity
		p	4	box	box
	m	(Lask;DDD)Layj;	a	getClosestPlayer
		p	1	targetPredicate	targetPredicate
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lakq;D)Layj;	a	getClosestPlayer
		p	1	entity	entity
		p	2	maxDistance	maxDistance
	m	(Lakq;Lakq;)Ljava/util/stream/Stream;	a	method_8336
		p	1	e	e
	m	(DDDD)Z	a	isPlayerInRange
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	range	range
	m	(Ljava/util/Set;Lakq;)Z	a	method_8337
		p	1	e	e
	m	(Ljava/lang/Class;Lask;Lakz;DDDLcvf;)Lakz;	a	getClosestEntity
		p	1	entityClass	entityClass
		p	2	targetPredicate	targetPredicate
		p	3	entity	entity
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	box	box
	m	(Ljava/lang/Class;Lcvf;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1	entityClass	entityClass
		p	2	box	box
		p	3	predicate	predicate
	m	(Lask;Lakz;Lcvf;)Ljava/util/List;	a	getPlayers
		p	1	targetPredicate	targetPredicate
		p	2	entity	entity
		p	3	box	box
	m	(Ljava/util/List;Lask;Lakz;DDD)Lakz;	a	getClosestEntity
		p	1	entityList	entityList
		p	2	targetPredicate	targetPredicate
		p	3	entity	entity
		p	4	x	x
		p	6	y	y
		p	8	z	z
	m	(Lakq;Lcvf;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1	except	except
		p	2	box	box
		p	3	predicate	predicate
	m	(DDDDLjava/util/function/Predicate;)Layj;	a	getClosestPlayer
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	maxDistance	maxDistance
		p	9	targetPredicate	targetPredicate
	m	(Lask;Lakz;DDD)Layj;	a	getClosestPlayer
		p	1	targetPredicate	targetPredicate
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
	m	(Ljava/lang/Class;Lask;Lakz;DDDLcvf;)Lakz;	b	getClosestEntityIncludingUngeneratedChunks
		p	1	entityClass	entityClass
		p	2	targetPredicate	targetPredicate
		p	3	entity	entity
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	box	box
	m	(Ljava/util/UUID;)Layj;	b	getPlayerByUuid
		p	1	uuid	uuid
	m	(Lakq;Lcvf;Ljava/util/Set;)Ljava/util/stream/Stream;	b	getEntityCollisions
		p	1	entity	entity
		p	2	box	box
		p	3	excluded	excluded
	m	(Ljava/lang/Class;Lcvf;Ljava/util/function/Predicate;)Ljava/util/List;	b	getEntitiesIncludingUngeneratedChunks
		p	1	entityClass	entityClass
		p	2	box	box
		p	3	predicate	predicate
	m	(Lakq;Lakq;)Z	b	method_8338
		p	1	e	e
	m	(Ljava/lang/Class;Lcvf;)Ljava/util/List;	b	getEntitiesIncludingUngeneratedChunks
		p	1	entityClass	entityClass
		p	2	box	box
	m	(Lakq;Lakq;)Z	c	method_18020
		p	1	e	e
c	bjp	net/minecraft/world/explosion/Explosion
	f	Z	a	createFire
	f	Lbjp$a;	b	blockDestructionType
	f	Ljava/util/Random;	c	random
	f	Lbjw;	d	world
	f	D	e	x
	f	D	f	y
	f	D	g	z
	f	Lakq;	h	entity
	f	F	i	power
	f	Lajz;	j	damageSource
	f	Ljava/util/List;	k	affectedBlocks
	f	Ljava/util/Map;	l	affectedPlayers
	m	(Lbjw;Lakq;DDDFZLbjp$a;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	power	power
		p	10	createFire	createFire
		p	11	blockDestructionType	blockDestructionType
	m	(Lbjw;Lakq;DDDFLjava/util/List;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	power	power
		p	10	affectedBlocks	affectedBlocks
	m	(Lbjw;Lakq;DDDFZLbjp$a;Ljava/util/List;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	power	power
		p	10	createFire	createFire
		p	12	affectedBlocks	affectedBlocks
	m	(Z)V	a	affectWorld
	m	(Lajz;)V	a	setDamageSource
	m	(Lcvl;Lakq;)F	a	getExposure
		p	0	source	source
		p	1	entity	entity
	m	()V	a	collectBlocksAndDamageEntities
	m	()Lajz;	b	getDamageSource
	m	()Ljava/util/Map;	c	getAffectedPlayers
	m	()Lakz;	d	getCausingEntity
	m	()V	e	clearAffectedBlocks
	m	()Ljava/util/List;	f	getAffectedBlocks
c	bjp$a	net/minecraft/world/explosion/Explosion$DestructionType
c	bjq	net/minecraft/client/color/world/FoliageColors
	f	[I	a	colorMap
	m	([I)V	a	setColorMap
		p	0	pixels	pixels
	m	(DD)I	a	getColor
		p	0	temperature	temperature
		p	2	humidity	humidity
	m	()I	a	getSpruceColor
	m	()I	b	getBirchColor
	m	()I	c	getDefaultColor
c	bjr	net/minecraft/world/ForcedChunkState
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	a	chunks
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getChunks
c	bjs	net/minecraft/world/GameRules
	f	Lorg/apache/logging/log4j/Logger;	F	LOGGER
	f	Ljava/util/Map;	G	RULE_TYPES
	f	Ljava/util/Map;	H	rules
	m	(Lbjs$b;)V	a	forEachType
		p	0	action	action
	m	(Ljt;)V	a	load
		p	1	nbt	nbt
	m	(Ljava/util/Map$Entry;)Lbjs$f;	a	method_20748
		p	0	e	e
	m	(Ljava/lang/String;Lbjs$e;)Lbjs$d;	a	register
		p	0	name	name
		p	1	type	type
	m	(Ljt;Lbjs$d;Lbjs$f;)V	a	method_20747
		p	1	key	key
		p	2	rule	rule
	m	()Ljt;	a	toNbt
	m	(Lbjs$d;)Lbjs$f;	a	get
		p	1	key	key
	m	(Lbjs$b;Lbjs$d;Lbjs$e;)V	a	accept
		p	0	consumer	consumer
		p	1	key	key
		p	2	type	type
	m	(Lnet/minecraft/server/MinecraftServer;Lbjs$a;)V	a	method_22386
		p	0	server	server
		p	1	rule	rule
	m	(Lbjs$b;Lbjs$d;Lbjs$e;)V	b	method_20750
		p	1	key	key
		p	2	type	type
	m	(Lnet/minecraft/server/MinecraftServer;Lbjs$a;)V	b	method_8361
		p	0	server	server
		p	1	rule	rule
	m	(Ljt;Lbjs$d;Lbjs$f;)V	b	method_20751
		p	1	key	key
		p	2	rule	rule
	m	(Lbjs$d;)Z	b	getBoolean
		p	1	rule	rule
	m	(Lbjs$d;)I	c	getInt
		p	1	rule	rule
	m	(Lbjs$d;)Ljava/lang/String;	d	method_20752
		p	0	key	key
c	bjs$a	net/minecraft/world/GameRules$BooleanRule
	f	Z	a	value
	m	(Lbjs$e;Z)V	<init>	<init>
		p	1	type	type
		p	2	initialValue	initialValue
	m	()Z	a	get
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
		p	1	value	value
		p	2	server	server
	m	(ZLbjs$e;)Lbjs$a;	a	method_20756
		p	1	type	type
	m	(Lnet/minecraft/server/MinecraftServer;Lbjs$a;)V	a	method_20754
		p	0	server	server
		p	1	rule	rule
	m	(ZLjava/util/function/BiConsumer;)Lbjs$e;	b	create
		p	0	initialValue	initialValue
		p	1	changeCallback	changeCallback
	m	(Z)Lbjs$e;	b	create
		p	0	initialValue	initialValue
	m	()Lbjs$a;	d	getThis
c	bjs$b	net/minecraft/world/GameRules$RuleTypeConsumer
	m	(Lbjs$d;Lbjs$e;)V	a	accept
		p	1	key	key
		p	2	type	type
c	bjs$c	net/minecraft/world/GameRules$IntRule
	f	I	a	value
	m	(Lbjs$e;I)V	<init>	<init>
		p	1	rule	rule
		p	2	initialValue	initialValue
	m	(Lnet/minecraft/server/MinecraftServer;Lbjs$c;)V	a	method_20767
		p	0	server	server
		p	1	rule	rule
	m	()I	a	get
	m	(ILjava/util/function/BiConsumer;)Lbjs$e;	a	create
		p	0	initialValue	initialValue
		p	1	changeCallback	changeCallback
	m	(ILbjs$e;)Lbjs$c;	a	method_20765
		p	1	type	type
	m	(Ljava/lang/String;)I	b	parseInt
		p	0	string	string
	m	(I)Lbjs$e;	b	create
		p	0	initialValue	initialValue
	m	()Lbjs$c;	d	getThis
c	bjs$d	net/minecraft/world/GameRules$RuleKey
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	bjs$e	net/minecraft/world/GameRules$RuleType
	f	Ljava/util/function/Supplier;	a	argumentType
	f	Ljava/util/function/Function;	b	ruleFactory
	f	Ljava/util/function/BiConsumer;	c	changeCallback
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1	argumentType	argumentType
		p	2	ruleFactory	ruleFactory
		p	3	changeCallback	changeCallback
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	1	name	name
	m	()Lbjs$f;	a	createRule
c	bjs$f	net/minecraft/world/GameRules$Rule
	f	Lbjs$e;	a	type
	m	(Lbjs$e;)V	<init>	<init>
		p	1	type	type
	m	(Ljava/lang/String;)V	a	deserialize
		p	1	value	value
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	setFromArgument
		p	1	context	context
		p	2	name	name
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	changed
		p	1	server	server
	m	()Ljava/lang/String;	b	serialize
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	set
		p	1	context	context
		p	2	name	name
	m	()I	c	getCommandResult
	m	()Lbjs$f;	e	getThis
c	bjt	net/minecraft/world/GameMode
	f	I	f	id
	f	Ljava/lang/String;	g	name
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	name	name
	m	()I	a	getId
	m	(I)Lbjt;	a	byId
		p	0	id	id
	m	(Ljava/lang/String;Lbjt;)Lbjt;	a	byName
		p	0	name	name
		p	1	defaultMode	defaultMode
	m	(Ljava/lang/String;)Lbjt;	a	byName
		p	0	name	name
	m	(ILbjt;)Lbjt;	a	byId
		p	0	id	id
		p	1	defaultMode	defaultMode
	m	(Layg;)V	a	setAbilitites
		p	1	abilities	abilities
	m	()Ljava/lang/String;	b	getName
	m	()Llf;	c	getTranslatableName
	m	()Z	d	shouldLimitWorldModification
	m	()Z	e	isCreative
	m	()Z	f	isSurvivalLike
c	bju	net/minecraft/client/color/world/GrassColors
	f	[I	a	colorMap
	m	([I)V	a	setColorMap
		p	0	map	map
	m	(DD)I	a	getColor
		p	0	temperature	temperature
		p	2	humidity	humidity
c	bjv	net/minecraft/item/ItemConvertible
	m	()Lbei;	i	asItem
c	bjw	net/minecraft/world/World
	f	[Lfp;	a	DIRECTIONS
	f	Ljava/lang/Thread;	b	thread
	f	I	c	ambientDarkness
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Ljava/util/List;	e	blockEntities
	f	Ljava/util/List;	f	tickingBlockEntities
	f	Ljava/util/List;	g	pendingBlockEntities
	f	Ljava/util/List;	h	unloadedBlockEntities
	f	I	i	lcgBlockSeed
	f	I	j	unusedIncrement
	f	F	k	rainGradientPrev
	f	F	l	rainGradient
	f	F	m	thunderGradientPrev
	f	F	n	thunderGradient
	f	Ljava/util/Random;	o	random
	f	Lcbh;	p	dimension
	f	Lcad;	q	chunkManager
	f	Lcrm;	r	properties
	f	Z	s	isClient
	f	Z	t	iteratingTickingBlockEntities
	f	Laio;	u	profiler
	f	Lbzw;	v	border
	f	Lbkv;	w	biomeAccess
	m	(Lcrm;Lcbi;Ljava/util/function/BiFunction;Laio;Z)V	<init>	<init>
		p	1	levelProperties	levelProperties
		p	2	dimensionType	dimensionType
		p	3	chunkManagerProvider	chunkManagerProvider
		p	4	profiler	profiler
		p	5	isClient	isClient
	m	()Lcwl;	D	getScoreboard
	m	()Z	J	isDay
	m	()Z	K	isNight
	m	()V	L	tickBlockEntities
	m	()Ljava/lang/String;	M	getDebugString
	m	()V	N	calculateAmbientDarkness
	m	()V	O	initWeatherGradients
	m	()Lbkd;	P	getGeneratorType
	m	()V	Q	disconnect
	m	()J	R	getTime
	m	()J	S	getTimeOfDay
	m	()Lbjs;	T	getGameRules
	m	()Z	U	isThundering
	m	()Z	V	isRaining
	m	()I	W	getEffectiveHeight
	m	()Laio;	X	getProfiler
	m	(DDDLaah;Laaj;FFZ)V	a	playSound
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	sound	sound
	m	()V	a	tickTime
	m	(J)V	a	setTime
		p	1	time	time
	m	(Llt;)V	a	sendPacket
		p	1	packet	packet
	m	(Lh;)Li;	a	addDetailsToCrashReport
		p	1	report	report
	m	(DDDDDDLjt;)V	a	addFireworkParticle
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	velocityX	velocityX
		p	9	velocityY	velocityY
		p	11	velocityZ	velocityZ
		p	13	tag	tag
	m	(Layj;Lfk;Lfp;)Z	a	extinguishFire
	m	(Lakq;B)V	a	sendEntityStatus
		p	1	entity	entity
		p	2	status	status
	m	(Layj;Lakq;Laah;Laaj;FF)V	a	playSoundFromEntity
		p	5	volume	volume
		p	6	pitch	pitch
	m	(Lfk;Lbph;II)V	a	addBlockAction
		p	1	pos	pos
		p	2	block	block
		p	3	type	type
		p	4	data	data
	m	(Lakq;Lajz;DDDFZLbjp$a;)Lbjp;	a	createExplosion
		p	1	entity	entity
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	power	power
		p	10	createFire	createFire
	m	(Lfk;Lakq;)Z	a	isTopSolid
		p	1	pos	pos
		p	2	entity	entity
	m	(Lgt;ZDDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	(ILfk;I)V	a	setBlockBreakingInfo
		p	1	entityId	entityId
		p	2	pos	pos
		p	3	progress	progress
	m	(Ljava/util/function/Consumer;Lakq;)V	a	tickEntity
	m	(ZZ)V	a	setMobSpawnOptions
		p	1	spawnMonsters	spawnMonsters
		p	2	spawnAnimals	spawnAnimals
	m	(Lfk;Lbyj;Lbyj;I)V	a	updateListeners
		p	1	pos	pos
		p	2	oldState	oldState
		p	3	newState	newState
		p	4	flags	flags
	m	(Lakq;DDDFZLbjp$a;)Lbjp;	a	createExplosion
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	power	power
		p	9	createFire	createFire
	m	(Lfk;Lbwl;)V	a	setBlockEntity
		p	1	pos	pos
	m	(IIII)Lfk;	a	getRandomPosInChunk
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Layj;Lfk;)Z	a	canPlayerModifyAt
		p	1	player	player
		p	2	pos	pos
	m	(Layj;DDDLaah;Laaj;FF)V	a	playSound
		p	1	player	player
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	sound	sound
		p	9	category	category
		p	10	volume	volume
		p	11	pitch	pitch
	m	(I)Lakq;	a	getEntityById
		p	1	id	id
	m	(Ljava/util/Collection;)V	a	addBlockEntities
	m	(Lcvf;Lbph;)Lbyj;	a	getBlockState
		p	1	area	area
		p	2	block	block
	m	(Lcvf;Lcoo;)Z	a	containsBlockWithMaterial
		p	1	area	area
		p	2	material	material
	m	(Lfk;Lfp;)Z	a	isEmittingRedstonePower
		p	1	pos	pos
	m	(Lfk;Lbph;Lfk;)V	a	updateNeighbor
		p	1	sourcePos	sourcePos
		p	2	sourceBlock	sourceBlock
		p	3	neighborPos	neighborPos
	m	(Lfk;Lbyj;Lbyj;)V	a	onBlockChanged
		p	1	pos	pos
		p	2	oldBlock	oldBlock
		p	3	newBlock	newBlock
	m	(F)F	a	getSkyAngleRadians
	m	(Ljava/lang/String;)Lcrg;	a	getMapState
		p	1	id	id
	m	(Laku;Lcvf;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1	type	type
		p	2	box	box
		p	3	predicate	predicate
	m	(Lakq;DDDFLbjp$a;)Lbjp;	a	createExplosion
		p	1	entity	entity
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	power	power
	m	(Lfk;Lbyj;)Z	a	setBlockState
		p	1	pos	pos
	m	(Lfk;Lbph;Lfp;)V	a	updateNeighborsExcept
		p	1	pos	pos
		p	2	sourceBlock	sourceBlock
	m	(Lcrg;)V	a	putMapState
		p	1	mapState	mapState
	m	(Lbwl;)Z	a	addBlockEntity
	m	(Lfk;)V	a_	setSpawnPos
		p	1	pos	pos
	m	(ILfk;I)V	b	playGlobalEvent
		p	1	type	type
		p	2	pos	pos
		p	3	data	data
	m	(Lgt;ZDDDDDD)V	b	addImportantParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	(J)V	b	setTimeOfDay
		p	1	time	time
	m	(Lfk;Lbyj;Lbyj;)V	b	checkBlockRerender
		p	1	pos	pos
		p	2	old	old
		p	3	updated	updated
	m	(I)Z	b	isHeightInvalid
		p	0	y	y
	m	(F)F	b	getThunderGradient
	m	(Lcvf;)Z	b	isAreaNotEmpty
	m	(Lfk;Lfp;)I	b	getEmittedRedstonePower
		p	1	pos	pos
	m	(Lfk;Lbwl;)V	b	markDirty
		p	1	pos	pos
	m	(Lgt;DDDDDD)V	b	addImportantParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lfk;Lbph;)V	b	updateNeighborsAlways
		p	1	pos	pos
	m	(F)V	c	setThunderGradient
		p	1	thunderGradient	thunderGradient
	m	(Lcvf;)Z	c	doesAreaContainFireSource
	m	(I)V	c	setLightningTicksLeft
		p	1	lightningTicksLeft	lightningTicksLeft
	m	(Lfk;Lbph;)V	c	updateHorizontalAdjacent
		p	1	pos	pos
	m	(F)F	d	getRainGradient
	m	(II)Lcal;	d	getChunk
	m	(Lfk;)Lbwl;	e	getPendingBlockEntity
	m	(F)V	e	setRainGradient
		p	1	rainGradient	rainGradient
	m	(Lfk;)Lbyj;	i	getTopNonAirState
	m	(Lfk;)Z	j	isValid
		p	0	pos	pos
	m	(Lfk;)Z	k	isHeightInvalid
		p	0	pos	pos
	m	()V	k_	setDefaultSpawnClient
	m	(Lfk;)Lcal;	l	getWorldChunk
	m	(Lfk;)V	m	removeBlockEntity
	m	(Lfk;)Z	n	canSetBlock
		p	1	pos	pos
	m	(Lfk;)I	o	getReceivedStrongRedstonePower
	m	()Lnet/minecraft/server/MinecraftServer;	p	getServer
	m	(Lfk;)Z	p	isReceivingRedstonePower
	m	(Lfk;)I	q	getReceivedRedstonePower
	m	(Lfk;)Z	r	hasRain
		p	1	pos	pos
	m	()Lbgx;	s	getRecipeManager
	m	(Lfk;)Z	s	hasHighHumidity
	m	()Labb;	t	getTagManager
	m	()Z	u	isSavingDisabled
	m	()I	y	getNextMapId
c	bjx	net/minecraft/world/IWorld
	m	()Lcad;	E	getChunkManager
	m	()Lbkl;	F	getFluidTickScheduler
	m	()Lbkl;	G	getBlockTickScheduler
	m	()F	Y	getMoonSize
	m	()I	Z	getMoonPhase
	m	(Layj;Lfk;Laah;Laaj;FF)V	a	playSound
		p	1	player	player
		p	5	volume	volume
		p	6	pitch	pitch
	m	(Lgt;DDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lfk;Lbph;)V	a	updateNeighbors
		p	1	pos	pos
		p	2	block	block
	m	(Layj;ILfk;I)V	a	playLevelEvent
		p	1	player	player
		p	2	eventId	eventId
		p	4	data	data
	m	()Laji;	aa	getDifficulty
	m	(ILfk;I)V	c	playLevelEvent
		p	1	eventId	eventId
		p	3	data	data
	m	(Lfk;)Lajj;	d	getLocalDifficulty
		p	1	pos	pos
	m	(F)F	f	getSkyAngle
		p	1	tickDelta	tickDelta
	m	()Lcrm;	i	getLevelProperties
	m	()Lbjw;	q	getWorld
	m	()J	r_	getSeed
	m	()Lfk;	s_	getSpawnPos
	m	()Ljava/util/Random;	t_	getRandom
c	bjy	net/minecraft/world/SessionLockException
c	bjz	net/minecraft/world/WorldView
	m	(Lfk;)Z	A	isChunkLoaded
		p	1	pos	pos
	m	(Lcbv$a;Lfk;)Lfk;	a	getTopPosition
		p	1	heightmap	heightmap
		p	2	pos	pos
	m	(III)Lbkt;	a	getGeneratorStoredBiome
		p	1	biomeX	biomeX
		p	2	biomeY	biomeY
		p	3	biomeZ	biomeZ
	m	(Lfk;Lfk;)Z	a	isRegionLoaded
		p	1	min	min
		p	2	max	max
	m	(IIIIII)Z	a	isRegionLoaded
		p	1	minX	minX
		p	2	minY	minY
		p	3	minZ	minZ
		p	4	maxX	maxX
		p	5	maxY	maxY
		p	6	maxZ	maxZ
	m	(Lcbv$a;II)I	a	getTopY
		p	1	heightmap	heightmap
		p	2	x	x
		p	3	z	z
	m	(IILcae;)Lbzy;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	status	status
	m	(IILcae;Z)Lbzy;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	(II)Lbzy;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(II)Z	b	isChunkLoaded
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(Lfk;Lfp;)I	c	getStrongRedstonePower
		p	1	pos	pos
		p	2	direction	direction
	m	()I	c	getAmbientDarkness
	m	(Lfk;I)I	c	getLightLevel
		p	1	pos	pos
		p	2	ambientDarkness	ambientDarkness
	m	()Lbkv;	d	getBiomeAccess
	m	(Lcvf;)Z	d	containsFluid
		p	1	box	box
	m	()Lcbh;	o	getDimension
	m	()Z	p_	isClient
	m	()I	q_	getSeaLevel
	m	(Lfk;)Lbkt;	t	getBiome
		p	1	pos	pos
	m	(Lfk;)Z	u	isAir
		p	1	pos	pos
	m	(Lfk;)Z	v	isSkyVisibleAllowingSea
		p	1	pos	pos
	m	(Lfk;)F	w	getBrightness
		p	1	pos	pos
	m	(Lfk;)Lbzy;	x	getChunk
		p	1	pos	pos
	m	(Lfk;)Z	y	isWater
		p	1	pos	pos
	m	(Lfk;)I	z	getLightLevel
		p	1	pos	pos
c	bk	net/minecraft/advancement/criterion/BlockUsedCriterion
	f	Lsm;	a	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	(Lxe;Lfk;Lben;)V	a	test
		p	1	player	player
		p	2	pos	pos
		p	3	stack	stack
	m	(Lbyj;Lxe;Lfk;Lben;Lbk$a;)Z	a	method_23888
		p	4	conditions	conditions
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbk$a;	b	conditionsFromJson
c	bk$a	net/minecraft/advancement/criterion/BlockUsedCriterion$Conditions
	f	Laj;	a	block
	f	Lcc;	b	state
	f	Lbj;	c	item
	m	(Lsm;Laj;Lcc;Lbj;)V	<init>	<init>
		p	1	id	id
		p	2	block	block
		p	3	state	state
		p	4	item	item
	m	(Laj$a;Lbj$a;)Lbk$a;	a	create
		p	0	blockPredicateBuilder	blockPredicateBuilder
		p	1	itemPredicateBuilder	itemPredicateBuilder
	m	(Lbyj;Lxd;Lfk;Lben;)Z	a	test
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	stack	stack
c	bka	net/minecraft/world/level/LevelInfo
	f	J	a	seed
	f	Lbjt;	b	gameMode
	f	Z	c	structures
	f	Z	d	hardcore
	f	Lbkd;	e	generatorType
	f	Z	f	commands
	f	Z	g	bonusChest
	f	Lcom/google/gson/JsonElement;	h	generatorOptions
	m	(JLbjt;ZZLbkd;)V	<init>	<init>
		p	1	seed	seed
		p	4	structures	structures
		p	5	hardcore	hardcore
		p	6	generatorType	generatorType
	m	()Lbka;	a	setBonusChest
	m	(Lcom/google/gson/JsonElement;)Lbka;	a	setGeneratorOptions
		p	1	generatorOptions	generatorOptions
	m	()Lbka;	b	enableCommands
	m	()Z	c	hasBonusChest
	m	()J	d	getSeed
	m	()Lbjt;	e	getGameMode
	m	()Z	f	isHardcore
	m	()Z	g	hasStructures
	m	()Lbkd;	h	getGeneratorType
	m	()Z	i	allowCommands
	m	()Lcom/google/gson/JsonElement;	j	getGeneratorOptions
c	bkb	net/minecraft/world/ModifiableTestableWorld
c	bkc	net/minecraft/world/TestableWorld
	m	(Lcbv$a;Lfk;)Lfk;	a	getTopPosition
		p	1	type	type
	m	(Lfk;Ljava/util/function/Predicate;)Z	a	testBlockState
		p	2	state	state
c	bkd	net/minecraft/world/level/LevelGeneratorType
	f	[Lbkd;	a	TYPES
	f	Lbkd;	b	DEFAULT
	f	Lbkd;	c	FLAT
	f	Lbkd;	d	LARGE_BIOMES
	f	Lbkd;	e	AMPLIFIED
	f	Lbkd;	f	CUSTOMIZED
	f	Lbkd;	g	BUFFET
	f	Lbkd;	h	DEBUG_ALL_BLOCK_STATES
	f	Lbkd;	i	DEFAULT_1_1
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	Ljava/lang/String;	l	storedName
	f	I	m	version
	f	Z	n	visible
	f	Z	o	versioned
	f	Z	p	info
	f	Z	q	customizable
	m	(ILjava/lang/String;I)V	<init>	<init>
		p	1	id	id
		p	2	name	name
		p	3	version	version
	m	(ILjava/lang/String;Ljava/lang/String;I)V	<init>	<init>
		p	1	id	id
		p	2	name	name
		p	3	storedName	storedName
		p	4	version	version
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	name	name
	m	(I)Lbkd;	a	getTypeForVersion
		p	1	version	version
	m	(Z)Lbkd;	a	setCustomizable
		p	1	customizable	customizable
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbkd;	a	getTypeFromName
		p	0	name	name
	m	(Z)Lbkd;	b	setVisible
		p	1	visible	visible
	m	()Ljava/lang/String;	b	getStoredName
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()Ljava/lang/String;	d	getInfoTranslationKey
	m	()I	e	getVersion
	m	()Z	f	isCustomizable
	m	()Z	g	isVisible
	m	()Z	h	isVersioned
	m	()I	i	getId
	m	()Z	j	hasInfo
	m	()Lbkd;	k	setVersioned
	m	()Lbkd;	l	setHasInfo
c	bke	net/minecraft/world/ModifiableWorld
	m	(Lfk;Z)Z	a	removeBlock
		p	1	pos	pos
		p	2	move	move
	m	(Lfk;ZLakq;)Z	a	breakBlock
		p	1	pos	pos
		p	2	drop	drop
		p	3	breakingEntity	breakingEntity
	m	(Lfk;Lbyj;I)Z	a	setBlockState
		c	Updates the block state at a position, calling appropriate callbacks.\n\n<p>When called on the server, the new block state is stored and propagated to clients and listeners as dictated\nby the supplied flags. Note that calling this on the client will update the world locally, but may not see the\nchange persisted across loads. It's recommended to check whether this world is client before\ninteracting with the world in this way.</p>\n\n<p>Accepted values of the flags are a bitset combination of the following:</p>\n<ul>\n<li>0b0000001 // 1 - PROPAGATE_CHANGE - Propagates a change event to surrounding blocks.</li>\n<li>0b0000010 // 2 - NOTIFY_LISTENERS - Notifies listeners and clients who need to react when the block changes</li>\n<li>0b0000100 // 4 - NO_REDRAW - Used in conjunction with NOTIFY_LISTENERS to suppress the render pass on clients.</li>\n<li>0b0001000 // 8 - REDRAW_ON_MAIN_THREAD - Forces a synchronous redraw on clients.</li>\n<li>0b0010000 // 16 - FORCE_STATE - Bypass virtual blockstate changes and forces the passed state to be stored as-is.</li>\n<li>0b0100000 // 32 - SKIP_DROPS - Prevents the previous block (container) from dropping items when destroyed.</li>\n<li>0b1000000 // 64 - MECHANICAL_UPDATE - Signals that this is a mechanical update, usually caused by pistons moving blocks.</li>\n</ul>
		p	1	pos	pos
			c	the target position
		p	2	state	state
			c	the block state to set
		p	3	flags	flags
			c	the bitwise flag combination, as described above
	m	(Lfk;Z)Z	b	breakBlock
		p	1	pos	pos
		p	2	drop	drop
	m	(Lakq;)Z	c	spawnEntity
		p	1	entity	entity
c	bkf	net/minecraft/world/LightType
	f	I	c	value
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	value	value
c	bkg	net/minecraft/world/SpawnHelper
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lalb;Lxd;Lcal;Lfk;)V	a	spawnEntitiesInChunk
		p	0	category	category
		p	2	chunk	chunk
		p	3	spawnPos	spawnPos
	m	(Lbjg;Lfk;Lbyj;Lcoj;)Z	a	isClearForSpawn
		p	0	blockView	blockView
		p	1	pos	pos
		p	2	state	state
	m	(Lcaa;Lalb;Lbkt$e;Lfk;)Z	a	containsSpawnEntry
		p	0	chunkGenerator	chunkGenerator
		p	1	entityCategory	entityCategory
		p	3	pos	pos
	m	(Lbjw;Lcal;)Lfk;	a	getSpawnPos
		p	0	world	world
		p	1	chunk	chunk
	m	(Lcaa;Lalb;Ljava/util/Random;Lfk;)Lbkt$e;	a	pickRandomSpawnEntry
		p	0	chunkGenerator	chunkGenerator
		p	1	entityCategory	entityCategory
		p	2	random	random
		p	3	pos	pos
	m	(Laln$c;Lbjz;Lfk;Laku;)Z	a	canSpawn
		p	2	pos	pos
		p	3	entityType	entityType
	m	(Lbjx;Lbkt;IILjava/util/Random;)V	a	populateEntities
		p	0	world	world
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
	m	(Lbjz;Laku;II)Lfk;	a	getEntitySpawnPos
		p	1	entityType	entityType
		p	2	x	x
		p	3	z	z
c	bkh	net/minecraft/world/chunk/ChunkCache
	f	I	a	minX
	f	I	b	minZ
	f	[[Lbzy;	c	chunks
	f	Z	d	empty
	f	Lbjw;	e	world
	m	(Lbjw;Lfk;Lfk;)V	<init>	<init>
		p	1	world	world
		p	2	minPos	minPos
		p	3	maxPos	maxPos
c	bki	net/minecraft/world/PortalForcer
	f	Lxd;	a	world
	f	Ljava/util/Random;	b	random
	m	(Lxd;)V	<init>	<init>
		p	1	world	world
	m	(Lakq;F)Z	a	usePortal
	m	(Lakq;)Z	a	createPortal
		p	1	entity	entity
	m	(Lfk;Lcvl;Lfp;DDZ)Lbyo$c;	a	getPortal
		p	4	x	x
		p	6	y	y
		p	8	canActivate	canActivate
c	bkj	net/minecraft/server/world/ServerTickScheduler
	f	Ljava/util/function/Predicate;	a	invalidObjPredicate
	f	Ljava/util/function/Function;	b	idToName
	f	Ljava/util/function/Function;	c	nameToId
	f	Ljava/util/Set;	d	scheduledTickActions
	f	Ljava/util/TreeSet;	e	scheduledTickActionsInOrder
	f	Lxd;	f	world
	f	Ljava/util/Queue;	g	currentTickActions
	f	Ljava/util/List;	h	consumedTickActions
	f	Ljava/util/function/Consumer;	i	tickConsumer
	m	(Lxd;Ljava/util/function/Predicate;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	world	world
		p	2	invalidObjPredicate	invalidObjPredicate
		p	3	idToName	idToName
		p	4	nameToId	nameToId
		p	5	tickConsumer	tickConsumer
	m	(Lclb;Lfk;)V	a	copyScheduledTicks
		p	1	box	box
		p	2	offset	offset
	m	(Lbjh;ZZ)Ljava/util/List;	a	getScheduledTicksInChunk
		p	2	updateState	updateState
		p	3	getStaleTicks	getStaleTicks
	m	(Ljava/util/function/Function;Ljava/lang/Iterable;J)Ljz;	a	serializeScheduledTicks
		p	0	identifierProvider	identifierProvider
		p	1	scheduledTicks	scheduledTicks
		p	2	time	time
	m	(Lbjh;)Ljz;	a	toTag
	m	(Ljava/util/List;Ljava/util/Collection;Lclb;Z)Ljava/util/List;	a	transferTicksInBounds
		p	1	dst	dst
		p	2	src	src
		p	3	bounds	bounds
		p	4	move	move
	m	(Lbkm;)V	a	addScheduledTick
	m	(Lclb;ZZ)Ljava/util/List;	a	getScheduledTicks
		p	1	bounds	bounds
		p	2	updateState	updateState
		p	3	getStaleTicks	getStaleTicks
	m	()V	b	tick
c	bkk	net/minecraft/world/MobSpawnerEntry
	f	Ljt;	b	entityTag
	m	(ILjt;)V	<init>	<init>
		p	1	weight	weight
		p	2	entityTag	entityTag
	m	()Ljt;	a	serialize
	m	()Ljt;	b	getEntityTag
c	bkl	net/minecraft/world/TickScheduler
	m	(Lfk;Ljava/lang/Object;)Z	a	isScheduled
		p	1	pos	pos
		p	2	object	object
	m	(Lfk;Ljava/lang/Object;I)V	a	schedule
		p	1	pos	pos
		p	2	object	object
		p	3	delay	delay
	m	(Lfk;Ljava/lang/Object;ILbkn;)V	a	schedule
		p	1	pos	pos
		p	2	object	object
		p	3	delay	delay
		p	4	priority	priority
	m	(Ljava/util/stream/Stream;)V	a	scheduleAll
	m	(Lfk;Ljava/lang/Object;)Z	b	isTicking
		p	1	pos	pos
		p	2	object	object
c	bkm	net/minecraft/world/ScheduledTick
	f	Lfk;	a	pos
	f	J	b	time
	f	Lbkn;	c	priority
	f	J	d	idCounter
	f	Ljava/lang/Object;	e	object
	f	J	f	id
	m	(Lfk;Ljava/lang/Object;JLbkn;)V	<init>	<init>
		p	1	pos	pos
		p	2	t	t
		p	3	time	time
		p	5	priority	priority
	m	(Lfk;Ljava/lang/Object;)V	<init>	<init>
		p	1	pos	pos
		p	2	t	t
	m	()Ljava/util/Comparator;	a	getComparator
	m	()Ljava/lang/Object;	b	getObject
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bkn	net/minecraft/world/TickPriority
	f	I	h	index
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	index	index
	m	()I	a	getIndex
	m	(I)Lbkn;	a	byIndex
		p	0	index	index
c	bko	net/minecraft/world/biome/BadlandsBiome
c	bkp	net/minecraft/world/biome/BadlandsPlateauBiome
c	bkq	net/minecraft/world/biome/BambooJungleBiome
c	bkr	net/minecraft/world/biome/BambooJungleHillsBiome
c	bks	net/minecraft/world/biome/BeachBiome
c	bkt	net/minecraft/world/biome/Biome
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	BIOMES
	f	Lft;	c	PARENT_BIOME_ID_MAP
	f	Lcno;	d	TEMPERATURE_NOISE
	f	Lcno;	e	FOLIAGE_NOISE
	f	Ljava/lang/String;	f	translationKey
	f	F	g	depth
	f	F	h	scale
	f	F	i	temperature
	f	F	j	downfall
	f	I	k	waterColor
	f	I	l	waterFogColor
	f	Ljava/lang/String;	m	parent
	f	Lcmw;	n	surfaceBuilder
	f	Lbkt$b;	o	category
	f	Lbkt$d;	p	precipitation
	f	Ljava/util/Map;	q	carvers
	f	Ljava/util/Map;	r	features
	f	Ljava/util/List;	s	flowerFeatures
	f	Ljava/util/Map;	t	structureFeatures
	f	I	u	skyColor
	f	Ljava/util/Map;	v	spawns
	f	Ljava/lang/ThreadLocal;	w	temperatureCache
	m	(Lbkt$a;)V	<init>	<init>
		p	1	settings	settings
	m	(Lcbu$b;Lcaa;Lbjx;JLccf;Lfk;)V	a	generateFeatureStep
		p	1	step	step
		p	2	chunkGenerator	chunkGenerator
		p	3	world	world
		p	4	seed	seed
		p	6	random	random
		p	7	pos	pos
	m	(Lbjz;Lfk;Z)Z	a	canSetIce
		p	1	world	world
		p	2	pos	pos
		p	3	doWaterCheck	doWaterCheck
	m	(Ljava/util/Random;Lbzy;IIIDLbyj;Lbyj;IJ)V	a	buildSurface
		p	1	random	random
		p	2	chunk	chunk
		p	3	x	x
		p	4	z	z
		p	5	worldHeight	worldHeight
		p	6	noise	noise
		p	8	defaultBlock	defaultBlock
		p	9	defaultFluid	defaultFluid
		p	10	seaLevel	seaLevel
		p	11	seed	seed
	m	(Lcbu$b;)Ljava/util/List;	a	getFeaturesForStep
		p	1	feature	feature
	m	(Lfk;)F	a	computeTemperature
		p	1	blockPos	blockPos
	m	(Lbjz;Lfk;)Z	a	canSetIce
		p	1	world	world
		p	2	blockPos	blockPos
	m	(Lcbu$b;Lcdc;)V	a	addFeature
		p	1	step	step
	m	(Lcbu$a;)Ljava/util/List;	a	getCarversForStep
	m	(Lbkt;)Lbkt;	a	getModifiedBiome
		p	0	biome	biome
	m	(DD)I	a	getGrassColorAt
		p	1	x	x
		p	3	z	z
	m	(Lalb;Lbkt$e;)V	a	addSpawn
		p	1	type	type
	m	(Lalb;)Ljava/util/List;	a	getEntitySpawnList
		p	1	category	category
	m	()I	a	getFoliageColor
	m	(Lcdc;)V	a	addStructureFeature
	m	(Lcco;Lcch;)Lccj;	a	configureCarver
		p	0	carver	carver
		p	1	config	config
	m	(Lcbu$a;Lccj;)V	a	addCarver
		p	1	step	step
	m	(Lcfl;)Z	a	hasStructureFeature
	m	(Lcfl;)Lcgn;	b	getStructureFeatureConfig
	m	(Lfk;)F	b	getTemperature
		p	1	blockPos	blockPos
	m	(Lbjz;Lfk;)Z	b	canSetSnow
		p	2	blockPos	blockPos
	m	()Z	b	hasParent
	m	()I	c	getSkyColor
	m	()Lbkt$d;	d	getPrecipitation
	m	()Z	e	hasHighHumidity
	m	()F	f	getMaxSpawnLimit
	m	()Ljava/util/List;	g	getFlowerFeatures
	m	()Lbkt$c;	h	getTemperatureGroup
	m	()F	i	getDepth
	m	()F	j	getRainfall
	m	()Llf;	k	getName
	m	()Ljava/lang/String;	l	getTranslationKey
	m	()F	m	getScale
	m	()F	n	getTemperature
	m	()I	o	getWaterColor
	m	()I	p	getWaterFogColor
	m	()Lbkt$b;	q	getCategory
	m	()Lcmw;	r	getSurfaceBuilder
	m	()Lcni;	s	getSurfaceConfig
	m	()Ljava/lang/String;	t	getParent
	m	()I	u	calculateSkyColor
c	bkt$a	net/minecraft/world/biome/Biome$Settings
	f	Lcmw;	a	surfaceBuilder
	f	Lbkt$d;	b	precipitation
	f	Lbkt$b;	c	category
	f	Ljava/lang/Float;	d	depth
	f	Ljava/lang/Float;	e	scale
	f	Ljava/lang/Float;	f	temperature
	f	Ljava/lang/Float;	g	downfall
	f	Ljava/lang/Integer;	h	waterColor
	f	Ljava/lang/Integer;	i	waterFogColor
	f	Ljava/lang/String;	j	parent
	m	(Lbkt$d;)Lbkt$a;	a	precipitation
	m	(Lcng;Lcni;)Lbkt$a;	a	configureSurfaceBuilder
		p	1	surfaceBuilder	surfaceBuilder
	m	(I)Lbkt$a;	a	waterColor
		p	1	waterColor	waterColor
	m	(Ljava/lang/String;)Lbkt$a;	a	parent
		c	Sets the biome that this will replace as a modified version of the biome.
		p	1	parent	parent
			c	the string identifier of the biome to be replaced
	m	(Lbkt$b;)Lbkt$a;	a	category
	m	(Lcmw;)Lbkt$a;	a	surfaceBuilder
		p	1	surfaceBuilder	surfaceBuilder
	m	(F)Lbkt$a;	a	depth
		p	1	depth	depth
	m	(I)Lbkt$a;	b	waterFogColor
		p	1	waterFogColor	waterFogColor
	m	(F)Lbkt$a;	b	scale
		p	1	scale	scale
	m	(F)Lbkt$a;	c	temperature
		p	1	temperature	temperature
	m	(F)Lbkt$a;	d	downfall
		p	1	downfall	downfall
c	bkt$b	net/minecraft/world/biome/Biome$Category
	f	Lbkt$b;	i	THEEND
	f	Ljava/util/Map;	r	NAME_MAP
	f	Ljava/lang/String;	s	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	bkt$c	net/minecraft/world/biome/Biome$TemperatureGroup
	f	Ljava/util/Map;	e	NAME_MAP
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	bkt$d	net/minecraft/world/biome/Biome$Precipitation
	f	Lbkt$d;	a	NONE
	f	Lbkt$d;	b	RAIN
	f	Lbkt$d;	c	SNOW
	f	Ljava/util/Map;	d	NAME_MAP
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	bkt$e	net/minecraft/world/biome/Biome$SpawnEntry
	f	Laku;	b	type
	f	I	c	minGroupSize
	f	I	d	maxGroupSize
	m	(Laku;III)V	<init>	<init>
		p	1	type	type
		p	2	weight	weight
		p	3	minGroupSize	minGroupSize
		p	4	maxGroupSize	maxGroupSize
c	bku	net/minecraft/world/biome/DefaultBiomeFeatures
	f	Lchb;	A	LUSH_GRASS_CONFIG
	f	Lchb;	B	LILY_OF_THE_VALLEY_CONFIG
	f	Lchb;	C	BLUE_ORCHID_CONFIG
	f	Lchb;	D	DEFAULT_FLOWER_CONFIG
	f	Lchb;	E	PLAINS_FLOWER_CONFIG
	f	Lchb;	F	FOREST_FLOWER_CONFIG
	f	Lchb;	G	DEAD_BUSH_CONFIG
	f	Lchb;	H	MELON_PATCH_CONFIG
	f	Lchb;	I	PUMPKIN_PATCH_CONFIG
	f	Lchb;	J	SWEET_BERRY_BUSH_CONFIG
	f	Lchb;	K	NETHER_FIRE_CONFIG
	f	Lchb;	L	LILY_PAD_CONFIG
	f	Lchb;	M	RED_MUSHROOM_CONFIG
	f	Lchb;	N	BROWN_MUSHROOM_CONFIG
	f	Lchb;	O	LILAC_CONFIG
	f	Lchb;	P	ROSE_BUSH_CONFIG
	f	Lchb;	Q	PEONY_CONFIG
	f	Lchb;	R	SUNFLOWER_CONFIG
	f	Lchb;	S	TALL_GRASS_CONFIG
	f	Lchb;	T	LARGE_FERN_CONFIG
	f	Lchb;	U	CACTUS_CONFIG
	f	Lchb;	V	SUGAR_CANE_CONFIG
	f	Lcgd;	W	HAY_PILE_CONFIG
	f	Lcgd;	X	SNOW_PILE_CONFIG
	f	Lcgd;	Y	MELON_PILE_CONFIG
	f	Lcgd;	Z	PUMPKIN_PILE_CONFIG
	f	Lchi;	a	OAK_TREE_CONFIG
	f	Lbyj;	aA	GRANITE
	f	Lbyj;	aB	DIORITE
	f	Lbyj;	aC	ANDESITE
	f	Lbyj;	aD	COAL_ORE
	f	Lbyj;	aE	IRON_ORE
	f	Lbyj;	aF	GOLD_ORE
	f	Lbyj;	aG	REDSTONE_ORE
	f	Lbyj;	aH	DIAMOND_ORE
	f	Lbyj;	aI	LAPIS_ORE
	f	Lbyj;	aJ	STONE
	f	Lbyj;	aK	EMERALD_ORE
	f	Lbyj;	aL	INFESTED_STONE
	f	Lbyj;	aM	SAND
	f	Lbyj;	aN	CLAY
	f	Lbyj;	aO	GRASS_BLOCK
	f	Lbyj;	aP	MOSSY_COBBLESTONE
	f	Lbyj;	aQ	LARGE_FERN
	f	Lbyj;	aR	TALL_GRASS
	f	Lbyj;	aS	LILAC
	f	Lbyj;	aT	ROSE_BUSH
	f	Lbyj;	aU	PEONY
	f	Lbyj;	aV	BROWN_MUSHROOM
	f	Lbyj;	aW	RED_MUSHROOM
	f	Lbyj;	aX	SEAGRASS
	f	Lbyj;	aY	PACKED_ICE
	f	Lbyj;	aZ	BLUE_ICE
	f	Lcgd;	aa	BLUE_ICE_PILE_CONFIG
	f	Lchk;	ab	WATER_SPRING_CONFIG
	f	Lchk;	ac	LAVA_SPRING_CONFIG
	f	Lchk;	ad	NETHER_SPRING_CONFIG
	f	Lchk;	ae	ENCLOSED_NETHER_SPRING_CONFIG
	f	Lcgp;	af	HUGE_RED_MUSHROOM_CONFIG
	f	Lcgp;	ag	HUGE_BROWN_MUSHROOM_CONFIG
	f	Lbyj;	ah	GRASS
	f	Lbyj;	ai	FERN
	f	Lbyj;	aj	PODZOL
	f	Lbyj;	ak	OAK_LOG
	f	Lbyj;	al	OAK_LEAVES
	f	Lbyj;	am	JUNGLE_LOG
	f	Lbyj;	an	JUNGLE_LEAVES
	f	Lbyj;	ao	SPRUCE_LOG
	f	Lbyj;	ap	SPRUCE_LEAVES
	f	Lbyj;	aq	ACACIA_LOG
	f	Lbyj;	ar	ACACIA_LEAVES
	f	Lbyj;	as	BIRCH_LOG
	f	Lbyj;	at	BIRCH_LEAVES
	f	Lbyj;	au	DARK_OAK_LOG
	f	Lbyj;	av	DARK_OAK_LEAVES
	f	Lbyj;	aw	WATER
	f	Lbyj;	ax	LAVA
	f	Lbyj;	ay	DIRT
	f	Lbyj;	az	GRAVEL
	f	Lchi;	b	JUNGLE_TREE_CONFIG
	f	Lbyj;	ba	LILY_OF_THE_VALLEY
	f	Lbyj;	bb	BLUE_ORCHID
	f	Lbyj;	bc	POPPY
	f	Lbyj;	bd	DANDELION
	f	Lbyj;	be	DEAD_BUSH
	f	Lbyj;	bf	MELON
	f	Lbyj;	bg	PUMPKIN
	f	Lbyj;	bh	SWEET_BERRY_BUSH
	f	Lbyj;	bi	FIRE
	f	Lbyj;	bj	NETHERRACK
	f	Lbyj;	bk	LILY_PAD
	f	Lbyj;	bl	SNOW
	f	Lbyj;	bm	JACK_O_LANTERN
	f	Lbyj;	bn	SUNFLOWER
	f	Lbyj;	bo	CACTUS
	f	Lbyj;	bp	SUGAR_CANE
	f	Lbyj;	bq	RED_MUSHROOM_BLOCK
	f	Lbyj;	br	BROWN_MUSHROOM_BLOCK
	f	Lbyj;	bs	MUSHROOM_BLOCK
	f	Lchi;	c	JUNGLE_SAPLING_TREE_CONFIG
	f	Lchi;	d	PINE_TREE_CONFIG
	f	Lchi;	e	SPRUCE_TREE_CONFIG
	f	Lchi;	f	ACACIA_TREE_CONFIG
	f	Lchi;	g	BIRCH_TREE_CONFIG
	f	Lchi;	h	BIRCH_TREE_WITH_RARE_BEEHIVES_CONFIG
	f	Lchi;	i	LARGE_BIRCH_TREE_CONFIG
	f	Lchi;	j	SWAMP_TREE_CONFIG
	f	Lchi;	k	FANCY_TREE_CONFIG
	f	Lchi;	l	OAK_TREE_WITH_MORE_BEEHIVES_CONFIG
	f	Lchi;	m	FANCY_TREE_WITH_RARE_BEEHIVES_CONFIG
	f	Lchi;	n	FANCY_TREE_WITH_MORE_BEEHIVES_CONFIG
	f	Lchi;	o	OAK_TREE_WITH_RARE_BEEHIVES_CONFIG
	f	Lchi;	p	OAK_TREE_WITH_BEEHIVES_CONFIG
	f	Lchi;	q	FANCY_TREE_WITH_BEEHIVES_CONFIG
	f	Lchi;	r	BIRCH_TREE_WITH_BEEHIVES_CONFIG
	f	Lchi;	s	BIRCH_TREE_WITH_MORE_BEEHIVES_CONFIG
	f	Lchl;	t	JUNGLE_GROUND_BUSH_CONFIG
	f	Lcgr;	u	DARK_OAK_TREE_CONFIG
	f	Lcgr;	v	MEGA_SPRUCE_TREE_CONFIG
	f	Lcgr;	w	MEGA_PINE_TREE_CONFIG
	f	Lcgr;	x	MEGA_JUNGLE_TREE_CONFIG
	f	Lchb;	y	GRASS_CONFIG
	f	Lchb;	z	TAIGA_GRASS_CONFIG
	m	(Lbkt;)V	A	addMountainTrees
		p	0	biome	biome
	m	(Lbkt;)V	B	addExtraMountainTrees
		p	0	biome	biome
	m	(Lbkt;)V	C	addJungleTrees
		p	0	biome	biome
	m	(Lbkt;)V	D	addJungleEdgeTrees
		p	0	biome	biome
	m	(Lbkt;)V	E	addBadlandsPlateauTrees
		p	0	biome	biome
	m	(Lbkt;)V	F	addSnowySpruceTrees
		p	0	biome	biome
	m	(Lbkt;)V	G	addGiantSpruceTaigaTrees
		p	0	biome	biome
	m	(Lbkt;)V	H	addGiantTreeTaigaTrees
		p	0	biome	biome
	m	(Lbkt;)V	I	addJungleGrass
		p	0	biome	biome
	m	(Lbkt;)V	J	addSavannaTallGrass
		p	0	biome	biome
	m	(Lbkt;)V	K	addShatteredSavannaGrass
		p	0	biome	biome
	m	(Lbkt;)V	L	addSavannaGrass
		p	0	biome	biome
	m	(Lbkt;)V	M	addBadlandsGrass
		p	0	biome	biome
	m	(Lbkt;)V	N	addForestFlowers
		p	0	biome	biome
	m	(Lbkt;)V	O	addForestGrass
		p	0	biome	biome
	m	(Lbkt;)V	P	addSwampFeatures
		p	0	biome	biome
	m	(Lbkt;)V	Q	addMushroomFieldsFeatures
		p	0	biome	biome
	m	(Lbkt;)V	R	addPlainsFeatures
		p	0	biome	biome
	m	(Lbkt;)V	S	addDesertDeadBushes
		p	0	biome	biome
	m	(Lbkt;)V	T	addGiantTaigaGrass
		p	0	biome	biome
	m	(Lbkt;)V	U	addDefaultFlowers
		p	0	biome	biome
	m	(Lbkt;)V	V	addExtraDefaultFlowers
		p	0	biome	biome
	m	(Lbkt;)V	W	addDefaultGrass
		p	0	biome	biome
	m	(Lbkt;)V	X	addTaigaGrass
		p	0	biome	biome
	m	(Lbkt;)V	Y	addPlainsTallGrass
		p	0	biome	biome
	m	(Lbkt;)V	Z	addDefaultMushrooms
		p	0	biome	biome
	m	(Lbkt;)V	a	addLandCarvers
		p	0	biome	biome
	m	(Lbkt;)V	aa	addDefaultVegetation
		p	0	biome	biome
	m	(Lbkt;)V	ab	addBadlandsVegetation
		p	0	biome	biome
	m	(Lbkt;)V	ac	addJungleVegetation
		p	0	biome	biome
	m	(Lbkt;)V	ad	addDesertVegetation
		p	0	biome	biome
	m	(Lbkt;)V	ae	addSwampVegetation
		p	0	biome	biome
	m	(Lbkt;)V	af	addDesertFeatures
		p	0	biome	biome
	m	(Lbkt;)V	ag	addFossils
		p	0	biome	biome
	m	(Lbkt;)V	ah	addKelp
		p	0	biome	biome
	m	(Lbkt;)V	ai	addSeagrassOnStone
		p	0	biome	biome
	m	(Lbkt;)V	aj	addSeagrass
		p	0	biome	biome
	m	(Lbkt;)V	ak	addMoreSeagrass
		p	0	biome	biome
	m	(Lbkt;)V	al	addLessKelp
		p	0	biome	biome
	m	(Lbkt;)V	am	addSprings
		p	0	biome	biome
	m	(Lbkt;)V	an	addIcebergs
		p	0	biome	biome
	m	(Lbkt;)V	ao	addBlueIce
		p	0	biome	biome
	m	(Lbkt;)V	ap	addFrozenTopLayer
		p	0	biome	biome
	m	(Lbkt;)V	aq	addEndCities
		p	0	biome	biome
	m	(Lbkt;)V	b	addOceanCarvers
		p	0	biome	biome
	m	(Lbkt;)V	c	addDefaultStructures
		p	0	biome	biome
	m	(Lbkt;)V	d	addDefaultLakes
		p	0	biome	biome
	m	(Lbkt;)V	e	addDesertLakes
		p	0	biome	biome
	m	(Lbkt;)V	f	addDungeons
		p	0	biome	biome
	m	(Lbkt;)V	g	addMineables
		p	0	biome	biome
	m	(Lbkt;)V	h	addDefaultOres
		p	0	biome	biome
	m	(Lbkt;)V	i	addExtraGoldOre
		p	0	biome	biome
	m	(Lbkt;)V	j	addEmeraldOre
		p	0	biome	biome
	m	(Lbkt;)V	k	addInfestedStone
		p	0	biome	biome
	m	(Lbkt;)V	l	addDefaultDisks
		p	0	biome	biome
	m	(Lbkt;)V	m	addClay
		p	0	biome	biome
	m	(Lbkt;)V	n	addMossyRocks
		p	0	biome	biome
	m	(Lbkt;)V	o	addLargeFerns
		p	0	biome	biome
	m	(Lbkt;)V	p	addSweetBerryBushesSnowy
		p	0	biome	biome
	m	(Lbkt;)V	q	addSweetBerryBushes
		p	0	biome	biome
	m	(Lbkt;)V	r	addBamboo
		p	0	biome	biome
	m	(Lbkt;)V	s	addBambooJungleTrees
		p	0	biome	biome
	m	(Lbkt;)V	t	addTaigaTrees
		p	0	biome	biome
	m	(Lbkt;)V	u	addWaterBiomeOakTrees
		p	0	biome	biome
	m	(Lbkt;)V	v	addBirchTrees
		p	0	biome	biome
	m	(Lbkt;)V	w	addForestTrees
		p	0	biome	biome
	m	(Lbkt;)V	x	addTallBirchTrees
		p	0	biome	biome
	m	(Lbkt;)V	y	addSavannaTrees
		p	0	biome	biome
	m	(Lbkt;)V	z	addExtraSavannaTrees
		p	0	biome	biome
c	bkv	net/minecraft/world/biome/source/BiomeAccess
	f	Lbkv$a;	a	storage
	f	J	b	seed
	f	Lbkz;	c	type
	m	(Lbkv$a;JLbkz;)V	<init>	<init>
		p	1	storage	storage
		p	2	seed	seed
		p	4	type	type
	m	(Lbkw;)Lbkv;	a	withSource
		p	1	source	source
	m	(Lfk;)Lbkt;	a	getBiome
		p	1	pos	pos
c	bkv$a	net/minecraft/world/biome/source/BiomeAccess$Storage
	m	(III)Lbkt;	b	getBiomeForNoiseGen
		p	1	biomeX	biomeX
		p	2	biomeY	biomeY
		p	3	biomeZ	biomeZ
c	bkw	net/minecraft/world/biome/source/BiomeSource
	f	Ljava/util/Map;	a	structureFeatures
	f	Ljava/util/Set;	b	topMaterials
	f	Ljava/util/Set;	c	biomes
	f	Ljava/util/List;	d	SPAWN_BIOMES
	m	(Ljava/util/Set;)V	<init>	<init>
		p	1	biomes	biomes
	m	()Ljava/util/List;	a	getSpawnBiomes
	m	(IIIILjava/util/List;Ljava/util/Random;)Lfk;	a	locateBiome
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	radius	radius
	m	(Lcfl;)Z	a	hasStructureFeature
		p	1	feature	feature
	m	(IIII)Ljava/util/Set;	a	getBiomesInArea
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	radius	radius
	m	(II)F	a	getNoiseRange
	m	()Ljava/util/Set;	b	getTopMaterials
c	bkx	net/minecraft/world/biome/source/BiomeSourceConfig
c	bky	net/minecraft/world/biome/source/BiomeSourceType
	f	Lbky;	a	CHECKERBOARD
	f	Lbky;	b	FIXED
	f	Lbky;	c	VANILLA_LAYERED
	f	Lbky;	d	THE_END
	f	Ljava/util/function/Function;	e	biomeSource
	f	Ljava/util/function/Function;	f	config
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1	biomeSource	biomeSource
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;)Lbky;	a	register
		p	0	id	id
		p	1	biomeSource	biomeSource
	m	(Lcrm;)Lbkx;	a	getConfig
	m	(Lbkx;)Lbkw;	a	applyConfig
		p	1	config	config
c	bkz	net/minecraft/world/biome/source/BiomeAccessType
	m	(JIIILbkv$a;)Lbkt;	a	getBiome
		p	1	seed	seed
		p	3	x	x
		p	4	y	y
		p	5	z	z
c	bl	net/minecraft/advancement/criterion/KilledByCrossbowCriterion
	f	Lsm;	a	ID
	m	(Lxe;Ljava/util/Collection;I)V	a	trigger
		p	1	player	player
		p	2	victims	victims
		p	3	amount	amount
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbl$a;	b	conditionsFromJson
c	bl$a	net/minecraft/advancement/criterion/KilledByCrossbowCriterion$Conditions
	f	[Lbb;	a	victims
	f	Lbr$d;	b	uniqueEntityTypes
	m	([Lbb;Lbr$d;)V	<init>	<init>
		p	1	victims	victims
	m	(Lbr$d;)Lbl$a;	a	create
	m	([Lbb$a;)Lbl$a;	a	create
	m	(Lxe;Ljava/util/Collection;I)Z	a	matches
		p	1	player	player
		p	2	victims	victims
		p	3	amount	amount
c	bla	net/minecraft/world/biome/Biomes
	f	Lbkt;	b	DEFAULT
	m	(ILjava/lang/String;Lbkt;)Lbkt;	a	register
		p	0	rawId	rawId
		p	1	id	id
		p	2	biome	biome
c	blb	net/minecraft/world/biome/BirchForestBiome
c	blc	net/minecraft/world/biome/BirchForestHillsBiome
c	bld	net/minecraft/world/biome/source/CheckerboardBiomeSourceConfig
	f	[Lbkt;	a	biomes
	f	I	b	size
	m	([Lbkt;)Lbld;	a	setBiomes
		p	1	biomes	biomes
	m	()[Lbkt;	a	getBiomes
	m	(I)Lbld;	a	setSize
		p	1	size	size
	m	()I	b	getSize
c	ble	net/minecraft/world/biome/source/CheckerboardBiomeSource
	f	[Lbkt;	d	biomeArray
	f	I	e	gridSize
	m	(Lbld;)V	<init>	<init>
		p	1	config	config
c	blf	net/minecraft/world/biome/ColdOceanBiome
c	blg	net/minecraft/world/biome/DarkForestBiome
c	blh	net/minecraft/world/biome/DarkForestHillsBiome
c	bli	net/minecraft/world/biome/DeepColdOceanBiome
c	blj	net/minecraft/world/biome/DeepFrozenOceanBiome
	f	Lcno;	u	noiseSampler
c	blk	net/minecraft/world/biome/DeepLukewarmOceanBiome
c	bll	net/minecraft/world/biome/DeepOceanBiome
c	blm	net/minecraft/world/biome/DeepWarmOceanBiome
c	bln	net/minecraft/world/biome/DesertBiome
c	blo	net/minecraft/world/biome/DesertHillsBiome
c	blp	net/minecraft/world/biome/DesertLakesBiome
c	blq	net/minecraft/world/biome/EndBarrensBiome
c	blr	net/minecraft/world/biome/EndHighlandsBiome
c	bls	net/minecraft/world/biome/EndMidlandsBiome
c	blt	net/minecraft/world/biome/ErodedBadlandsBiome
c	blu	net/minecraft/world/biome/source/FixedBiomeSource
	f	Lbkt;	d	biome
	m	(Lblv;)V	<init>	<init>
		p	1	config	config
c	blv	net/minecraft/world/biome/source/FixedBiomeSourceConfig
	f	Lbkt;	a	biome
	m	()Lbkt;	a	getBiome
	m	(Lbkt;)Lblv;	a	setBiome
		p	1	biome	biome
c	blw	net/minecraft/world/biome/ForestBiome
c	blx	net/minecraft/world/biome/FlowerForestBiome
c	bly	net/minecraft/world/biome/FrozenOceanBiome
c	blz	net/minecraft/world/biome/FrozenRiverBiome
c	bm	net/minecraft/advancement/criterion/OnKilledCriterion
	f	Lsm;	a	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	(Lxe;Lakq;Lajz;)V	a	trigger
		p	1	player	player
		p	2	entity	entity
		p	3	source	source
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbm$a;	b	conditionsFromJson
c	bm$a	net/minecraft/advancement/criterion/OnKilledCriterion$Conditions
	f	Lbb;	a	entity
	f	Las;	b	killingBlow
	m	(Lsm;Lbb;Las;)V	<init>	<init>
		p	1	id	id
		p	2	entity	entity
		p	3	killingBlow	killingBlow
	m	(Lxe;Lakq;Lajz;)Z	a	test
		p	1	player	player
		p	2	entity	entity
		p	3	killingBlow	killingBlow
	m	(Lbb$a;)Lbm$a;	a	createPlayerKilledEntity
	m	(Lbb$a;Las$a;)Lbm$a;	a	createPlayerKilledEntity
	m	()Lbm$a;	c	createPlayerKilledEntity
	m	()Lbm$a;	d	createEntityKilledPlayer
c	bma	net/minecraft/world/biome/source/VoronoiBiomeAccessType
	m	(D)D	a	sqr
		p	0	d	d
	m	(JIIIDDD)D	a	calcChance
		p	0	seed	seed
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	xFraction	xFraction
		p	7	yFraction	yFraction
		p	9	zFraction	zFraction
	m	(J)D	a	distribute
		p	0	seed	seed
c	bmb	net/minecraft/world/biome/source/HorizontalVoronoiBiomeAccessType
c	bmc	net/minecraft/world/biome/GiantSpruceTaigaBiome
c	bmd	net/minecraft/world/biome/GiantSpruceTaigaHillsBiome
c	bme	net/minecraft/world/biome/GiantTreeTaigaBiome
c	bmf	net/minecraft/world/biome/GiantTreeTaigaHillsBiome
c	bmg	net/minecraft/world/biome/GravellyMountainsBiome
c	bmh	net/minecraft/world/biome/IceSpikesBiome
c	bmi	net/minecraft/world/biome/JungleBiome
c	bmj	net/minecraft/world/biome/JungleEdgeBiome
c	bmk	net/minecraft/world/biome/JungleHillsBiome
c	bml	net/minecraft/world/biome/LukewarmOceanBiome
c	bmm	net/minecraft/world/biome/ModifiedBadlandsPlateauBiome
c	bmn	net/minecraft/world/biome/ModifiedGravellyMountainsBiome
c	bmo	net/minecraft/world/biome/ModifiedJungleBiome
c	bmp	net/minecraft/world/biome/ModifiedJungleEdgeBiome
c	bmq	net/minecraft/world/biome/ModifiedWoodedBadlandsPlateauBiome
c	bmr	net/minecraft/world/biome/MountainsBiome
c	bms	net/minecraft/world/biome/MountainEdgeBiome
c	bmt	net/minecraft/world/biome/MushroomFieldsBiome
c	bmu	net/minecraft/world/biome/MushroomFieldShoreBiome
c	bmw	net/minecraft/world/biome/NetherBiome
c	bmx	net/minecraft/world/biome/OceanBiome
c	bmy	net/minecraft/world/biome/source/VanillaLayeredBiomeSource
	f	Lcpj;	d	biomeSampler
	f	Ljava/util/Set;	e	BIOMES
	m	(Lbmz;)V	<init>	<init>
		p	1	config	config
c	bmz	net/minecraft/world/biome/source/VanillaLayeredBiomeSourceConfig
	f	J	a	seed
	f	Lbkd;	b	generatorType
	f	Lcbz;	c	generatorSettings
	m	()J	a	getSeed
	m	(Lcbz;)Lbmz;	a	setGeneratorSettings
		p	1	generatorSettings	generatorSettings
	m	()Lbkd;	b	getGeneratorType
	m	()Lcbz;	c	getGeneratorSettings
c	bn	net/minecraft/advancement/criterion/LevitationCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lcvl;I)V	a	trigger
		p	1	player	player
		p	2	startPos	startPos
		p	3	duration	duration
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbn$a;	b	conditionsFromJson
c	bn$a	net/minecraft/advancement/criterion/LevitationCriterion$Conditions
	f	Lat;	a	distance
	f	Lbr$d;	b	duration
	m	(Lat;Lbr$d;)V	<init>	<init>
		p	1	distance	distance
	m	(Lxe;Lcvl;I)Z	a	matches
		p	1	player	player
		p	2	startPos	startPos
		p	3	duration	duration
	m	(Lat;)Lbn$a;	a	create
		p	0	distance	distance
c	bna	net/minecraft/world/biome/PlainsBiome
c	bnb	net/minecraft/world/biome/RiverBiome
c	bnc	net/minecraft/world/biome/SavannaBiome
c	bnd	net/minecraft/world/biome/SavannaPlateauBiome
c	bne	net/minecraft/world/biome/ShatteredSavannaBiome
c	bnf	net/minecraft/world/biome/ShatteredSavannaPlateauBiome
c	bng	net/minecraft/world/biome/EndIslandsSmallBiome
c	bnh	net/minecraft/world/biome/SnowyBeachBiome
c	bni	net/minecraft/world/biome/SnowyMountainsBiome
c	bnj	net/minecraft/world/biome/SnowyTaigaBiome
c	bnk	net/minecraft/world/biome/SnowyTaigaHillsBiome
c	bnl	net/minecraft/world/biome/SnowyTaigaMountainsBiome
c	bnm	net/minecraft/world/biome/SnowyTundraBiome
c	bnn	net/minecraft/world/biome/StoneShoreBiome
c	bno	net/minecraft/world/biome/SunflowerPlainsBiome
c	bnp	net/minecraft/world/biome/SwampBiome
c	bnq	net/minecraft/world/biome/SwampHillsBiome
c	bnr	net/minecraft/world/biome/TaigaBiome
c	bns	net/minecraft/world/biome/TaigaHillsBiome
c	bnt	net/minecraft/world/biome/TaigaMountainsBiome
c	bnu	net/minecraft/world/biome/TallBirchForestBiome
c	bnv	net/minecraft/world/biome/TallBirchHillsBiome
c	bnw	net/minecraft/world/biome/EndBiome
c	bnx	net/minecraft/world/biome/source/TheEndBiomeSource
	f	Lcnp;	d	noise
	f	Lccf;	e	random
	f	Ljava/util/Set;	f	BIOMES
	m	(Lbny;)V	<init>	<init>
		p	1	config	config
c	bny	net/minecraft/world/biome/source/TheEndBiomeSourceConfig
	f	J	a	seed
	m	()J	a	getSeed
c	bnz	net/minecraft/world/biome/VoidBiome
c	bo	net/minecraft/predicate/LightPredicate
	f	Lbo;	a	ANY
	f	Lbr$d;	b	range
	m	(Lxd;Lfk;)Z	a	test
		p	1	world	world
		p	2	pos	pos
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonElement;)Lbo;	a	fromJson
		p	0	json	json
c	boa	net/minecraft/world/biome/WarmOceanBiome
c	bob	net/minecraft/world/biome/WoodedBadlandsPlateauBiome
c	boc	net/minecraft/world/biome/WoodedHillsBiome
c	bod	net/minecraft/world/biome/WoodedMountainsBiome
c	bof	net/minecraft/block/AbstractBannerBlock
	f	Lbdj;	a	color
	m	(Lbdj;Lbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	()Lbdj;	b	getColor
c	bog	net/minecraft/block/AbstractChestBlock
	f	Ljava/util/function/Supplier;	a	entityTypeRetriever
	m	(Lbph$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	settings	settings
		p	2	entityTypeSupplier	entityTypeSupplier
	m	(Lbyj;Lbjw;Lfk;Z)Lbqt$c;	a	getBlockEntitySource
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	ignoreBlocked	ignoreBlocked
c	boh	net/minecraft/block/AbstractFurnaceBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	LIT
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Layj;)V	a	openContainer
		p	1	world	world
		p	2	pos	pos
		p	3	player	player
c	boi	net/minecraft/block/AbstractGlassBlock
c	boj	net/minecraft/block/AbstractSkullBlock
	f	Lbue$a;	a	type
	m	(Lbue$a;Lbph$c;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
	m	()Lbue$a;	b	getSkullType
c	bok	net/minecraft/block/AirBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bol	net/minecraft/block/AnvilBlock
	f	Lbze;	a	FACING
	f	Lcwf;	b	BASE_SHAPE
	f	Lcwf;	c	X_STEP_SHAPE
	f	Lcwf;	d	X_STEM_SHAPE
	f	Lcwf;	e	X_FACE_SHAPE
	f	Lcwf;	f	Z_STEP_SHAPE
	f	Lcwf;	g	Z_STEM_SHAPE
	f	Lcwf;	h	Z_FACE_SHAPE
	f	Lcwf;	i	X_AXIS_SHAPE
	f	Lcwf;	j	Z_AXIS_SHAPE
	f	Llp;	k	CONTAINER_NAME
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;)Lbyj;	e	getLandingState
		p	0	fallingState	fallingState
c	bom	net/minecraft/block/AttachedStemBlock
	f	Lbze;	a	FACING
	f	Lbuv;	b	gourdBlock
	f	Ljava/util/Map;	c	FACING_TO_SHAPE
	m	(Lbuv;Lbph$c;)V	<init>	<init>
		p	1	gourdBlock	gourdBlock
		p	2	settings	settings
	m	()Lbei;	b	getSeeds
c	bon	net/minecraft/block/BambooBlock
	f	Lcwf;	a	SMALL_LEAVES_SHAPE
	f	Lcwf;	b	LARGE_LEAVES_SHAPE
	f	Lcwf;	c	NO_LEAVES_SHAPE
	f	Lbzj;	d	AGE
	f	Lbzh;	e	LEAVES
	f	Lbzj;	f	STAGE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;)I	a	countBambooAbove
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;Lbjw;Lfk;Ljava/util/Random;I)V	a	updateLeaves
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
		p	5	height	height
	m	(Lbjg;Lfk;)I	b	countBambooBelow
		p	1	world	world
		p	2	pos	pos
c	boo	net/minecraft/block/BambooSaplingBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;)V	a	grow
		p	1	world	world
		p	2	pos	pos
c	bop	net/minecraft/block/BannerBlock
	f	Lbzj;	a	ROTATION
	f	Ljava/util/Map;	b	COLORED_BANNERS
	f	Lcwf;	c	SHAPE
	m	(Lbdj;Lbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	(Lbdj;)Lbph;	a	getForColor
		p	0	color	color
c	boq	net/minecraft/block/BarrelBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	OPEN
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bor	net/minecraft/block/BarrierBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bos	net/minecraft/block/DeadCoralFanBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bot	net/minecraft/block/DeadCoralBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bou	net/minecraft/block/CoralParentBlock
	f	Lcwf;	a	SHAPE
	f	Lbzb;	b	WATERLOGGED
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjx;Lfk;)V	a	checkLivingConditions
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lbyj;Lbjg;Lfk;)Z	b_	isInWater
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bov	net/minecraft/block/DeadCoralWallFanBlock
	f	Lbze;	a	FACING
	f	Ljava/util/Map;	c	FACING_TO_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bow	net/minecraft/block/BlockWithEntity
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	box	net/minecraft/block/AbstractPressurePlateBlock
	f	Lcwf;	a	PRESSED_SHAPE
	f	Lcwf;	b	DEFAULT_SHAPE
	f	Lcvf;	c	BOX
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;I)Lbyj;	a	setRedstoneOutput
		p	1	state	state
		p	2	rsOut	rsOut
	m	(Lbjx;Lfk;)V	a	playPressSound
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lfk;Lbyj;I)V	a	updatePlateState
		p	1	world	world
		p	2	pos	pos
		p	4	rsOut	rsOut
	m	(Lbjw;Lfk;)V	a	updateNeighbors
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lfk;)I	b	getRedstoneOutput
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;)V	b	playDepressSound
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;)I	h	getRedstoneOutput
		p	1	state	state
c	boy	net/minecraft/block/AbstractRailBlock
	f	Lcwf;	a	STRAIGHT_SHAPE
	f	Lcwf;	b	ASCENDING_SHAPE
	f	Z	c	allowCurves
	m	(ZLbph$c;)V	<init>	<init>
		p	1	allowCurves	allowCurves
		p	2	settings	settings
	m	(Lbjw;Lfk;Lbyj;Z)Lbyj;	a	updateBlockState
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	forceUpdate	forceUpdate
	m	(Lbjw;Lfk;)Z	a	isRail
		p	0	world	world
		p	1	pos	pos
	m	(Lbyj;Lbjw;Lfk;Lbph;)V	a	updateBlockState
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	neighbor	neighbor
	m	()Z	c	canMakeCurves
	m	()Lbzm;	d	getShapeProperty
	m	(Lbyj;)Z	h	isRail
		p	0	state	state
c	boz	net/minecraft/block/Stainable
	m	()Lbdj;	a	getColor
c	bp	net/minecraft/predicate/entity/LocationPredicate
	f	Lbp;	a	ANY
	f	Lbr$c;	b	x
	f	Lbr$c;	c	y
	f	Lbr$c;	d	z
	f	Lbkt;	e	biome
	f	Lcfl;	f	feature
	f	Lcbi;	g	dimension
	f	Lbo;	h	light
	f	Laj;	i	block
	f	Lbf;	j	fluid
	m	(Lbr$c;Lbr$c;Lbr$c;Lbkt;Lcfl;Lcbi;Lbo;Laj;Lbf;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	biome	biome
		p	5	feature	feature
		p	6	dimension	dimension
		p	7	light	light
		p	8	block	block
		p	9	fluid	fluid
	m	(Lbkt;)Lbp;	a	biome
		p	0	biome	biome
	m	(Lxd;DDD)Z	a	test
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(Lxd;FFF)Z	a	test
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lcfl;)Lbp;	a	feature
		p	0	feature	feature
	m	(Lcom/google/gson/JsonElement;)Lbp;	a	fromJson
		p	0	element	element
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcbi;)Lbp;	a	dimension
		p	0	dimension	dimension
c	bp$a	net/minecraft/predicate/entity/LocationPredicate$Builder
	f	Lbr$c;	a	x
	f	Lbr$c;	b	y
	f	Lbr$c;	c	z
	f	Lbkt;	d	biome
	f	Lcfl;	e	feature
	f	Lcbi;	f	dimension
	f	Lbo;	g	light
	f	Laj;	h	block
	f	Lbf;	i	fluid
	m	(Lbkt;)Lbp$a;	a	biome
		p	1	biome	biome
	m	()Lbp$a;	a	create
	m	()Lbp;	b	build
c	bpa	net/minecraft/block/BeaconBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bpb	net/minecraft/block/BedBlock
	f	Lbzh;	a	PART
	f	Lbzb;	b	OCCUPIED
	f	Lcwf;	c	TOP_SHAPE
	f	Lcwf;	d	LEG_1_SHAPE
	f	Lcwf;	e	LEG_2_SHAPE
	f	Lcwf;	f	LEG_3_SHAPE
	f	Lcwf;	g	LEG_4_SHAPE
	f	Lcwf;	h	NORTH_SHAPE
	f	Lcwf;	i	SOUTH_SHAPE
	f	Lcwf;	j	WEST_SHAPE
	f	Lcwf;	k	EAST_SHAPE
	f	Lbdj;	w	color
	m	(Lbdj;Lbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	(Laku;Lbjz;Lfk;)Ljava/util/Optional;	a	canWakeUpAt
		p	0	type	type
		p	2	pos	pos
	m	(Lbjg;Lfk;)Lfp;	a	getDirection
		p	0	world	world
		p	1	pos	pos
	m	(Laku;Lbjz;Lfk;I)Ljava/util/Optional;	a	findWakeUpPosition
		p	0	type	type
		p	2	pos	pos
		p	3	index	index
	m	(Lbyy;Lfp;)Lfp;	a	getDirectionTowardsOtherPart
		p	0	part	part
		p	1	direction	direction
	m	()Lbdj;	c	getColor
c	bpc	net/minecraft/block/BedrockBlock
c	bpd	net/minecraft/block/BeehiveBlock
	f	[Lfp;	a	GENERATE_DIRECTIONS
	f	Lbze;	b	FACING
	f	Lbzj;	c	HONEY_LEVEL
	m	(Lajk;Layj;)V	a	method_21839
		p	1	player	player
	m	(Lbjw;DDDDD)V	a	addHoneyParticle
		p	1	world	world
		p	2	minX	minX
		p	4	maxX	maxX
		p	6	minZ	minZ
		p	8	maxZ	maxZ
		p	10	height	height
	m	(Lbjw;Lbyj;Lfk;)V	a	takeHoney
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
	m	(Lbjw;Lfk;Lbyj;)V	a	spawnHoneyParticles
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lcwf;D)V	a	addHoneyParticle
		p	1	world	world
		p	2	pos	pos
		p	3	shape	shape
		p	4	height	height
	m	(Lbjw;Lbyj;Lfk;Layj;Lbwi$b;)V	a	takeHoney
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	player	player
	m	(Lbjw;Lfk;)V	a	dropHoneycomb
		p	0	world	world
		p	1	pos	pos
	m	(Lbjw;Lfk;)V	b	angerNearbyBees
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lfk;)Z	d	hasBees
		p	1	world	world
		p	2	pos	pos
c	bpe	net/minecraft/block/BeetrootsBlock
	f	Lbzj;	a	AGE
	f	[Lcwf;	c	AGE_TO_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bpf	net/minecraft/block/BellBlock
	f	Lbze;	a	FACING
	f	Lbzh;	c	ATTACHMENT
	f	Lcwf;	d	NORTH_SOUTH_SHAPE
	f	Lcwf;	e	EAST_WEST_SHAPE
	f	Lcwf;	f	BELL_WAIST_SHAPE
	f	Lcwf;	g	BELL_LIP_SHAPE
	f	Lcwf;	h	BELL_SHAPE
	f	Lcwf;	i	NORTH_SOUTH_WALLS_SHAPE
	f	Lcwf;	j	EAST_WEST_WALLS_SHAPE
	f	Lcwf;	k	WEST_WALL_SHAPE
	f	Lcwf;	w	EAST_WALL_SHAPE
	f	Lcwf;	x	NORTH_WALL_SHAPE
	f	Lcwf;	y	SOUTH_WALL_SHAPE
	f	Lcwf;	z	HANGING_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lfp;D)Z	a	isPointOnBell
		p	1	state	state
		p	2	side	side
		p	3	y	y
	m	(Lbjw;Lbyj;Lcvg;Layj;Z)Z	a	ring
		p	1	world	world
		p	2	state	state
	m	(Lbjw;Lfk;Lfp;)Z	a	ring
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;)Lcwf;	h	getShape
		p	1	state	state
	m	(Lbyj;)Lfp;	i	getPlacementSide
		p	0	state	state
c	bpg	net/minecraft/block/BlastFurnaceBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bph	net/minecraft/block/Block
	f	[Lfp;	a	FACINGS
	f	Lcom/google/common/cache/LoadingCache;	b	FULL_CUBE_SHAPE_CACHE
	f	Lcwf;	c	SOLID_MEDIUM_SQUARE_SHAPE
	f	Lcwf;	d	SOLID_SMALL_SQUARE_SHAPE
	f	F	e	slipperiness
	f	F	f	velocityMultiplier
	f	F	g	jumpVelocityMultiplier
	f	Lbyj;	h	defaultState
	f	Z	i	dynamicBounds
	f	Z	j	opaque
	f	Lsm;	k	dropTableId
	f	Lorg/apache/logging/log4j/Logger;	l	LOGGER
	f	Lft;	m	STATE_IDS
	f	I	n	lightLevel
	f	F	o	hardness
	f	F	p	resistance
	f	Z	q	randomTicks
	f	Lbum;	r	soundGroup
	f	Lcoo;	s	material
	f	Lcop;	t	materialColor
	f	Lbyk;	u	stateManager
	f	Z	v	collidable
	f	Ljava/lang/String;	w	translationKey
	f	Lbei;	x	cachedItem
	f	Ljava/lang/ThreadLocal;	y	FACE_CULL_MAP
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	()Lbph$b;	X_	getOffsetType
	m	()Z	Y_	canMobSpawnInside
	m	(Lbyj;Lbcq;)Z	a	canReplace
		p	1	state	state
		p	2	ctx	ctx
	m	(Lbyj;Lcrx$a;)Ljava/util/List;	a	getDroppedStacks
		p	1	state	state
		p	2	builder	builder
	m	(Lbyj;Lbjg;Lfk;)F	a	getAmbientOcclusionLightLevel
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	(Lben;Lbjg;Ljava/util/List;Lbfw;)V	a	buildTooltip
		p	1	stack	stack
		p	2	view	view
		p	3	tooltip	tooltip
		p	4	options	options
	m	(Lbcq;)Lbyj;	a	getPlacementState
		p	1	ctx	ctx
	m	(Lbjg;Lakq;)V	a	onEntityLand
		p	1	world	world
		p	2	entity	entity
	m	(Lbdd;Lfy;)V	a	addStacksForDisplay
		p	1	group	group
		p	2	list	list
	m	(Lbyj;Lbjg;Lfk;Lcqr;)Z	a	canPlaceAtSide
		p	1	world	world
		p	2	view	view
		p	3	pos	pos
		p	4	env	env
	m	(Lbyj;Lbjg;Lfk;Lfp;)I	a	getWeakRedstonePower
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
		p	4	facing	facing
	m	(DDDDDD)Lcwf;	a	createCuboidShape
		p	0	xMin	xMin
		p	2	yMin	yMin
		p	4	zMin	zMin
		p	6	xMax	xMax
		p	8	yMax	yMax
		p	10	zMax	zMax
	m	(Lbyj;Lxd;Lfk;Ljava/util/Random;)V	a	scheduledTick
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
	m	(Lbjx;Lfk;Lbyj;)V	a	onBroken
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbyj;Lbtu;)Lbyj;	a	rotate
		p	1	state	state
		p	2	rotation	rotation
	m	(Lcwf;Lfp;)Z	a	isFaceFullSquare
		p	0	shape	shape
		p	1	side	side
	m	(Lbjg;Lfk;Lbyj;)Lben;	a	getPickStack
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lbyj;Layj;)V	a	onBreak
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	player	player
	m	(Lbyj;Lbjx;Lfk;I)V	a	updateNeighborStates
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	flags	flags
	m	(Lbyj;Lbjw;Lfk;Lakq;)V	a	onEntityCollision
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	entity	entity
	m	(Lbyj;Lbjw;Lfk;II)Z	a	onBlockAction
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	type	type
		p	5	data	data
	m	(Lbjz;Lfk;Lfp;)Z	a	sideCoversSmallSquare
		p	0	world	world
		p	1	pos	pos
		p	2	side	side
	m	(Lbyj;Lbjw;Lfk;Layj;Lajk;Lcvg;)Lajl;	a	onUse
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	player	player
		p	5	hand	hand
		p	6	hit	hit
	m	(Lbjw;Layj;Lfk;Lbyj;Lbwl;Lben;)V	a	afterBreak
		p	1	world	world
		p	2	player	player
		p	3	pos	pos
		p	4	state	state
		p	5	blockEntity	blockEntity
		p	6	stack	stack
	m	(Lbjw;Lfk;Lbyj;Lakz;Lben;)V	a	onPlaced
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	placer	placer
		p	5	itemStack	itemStack
	m	(Lbyj;Lbjw;Lfk;Lbyj;Z)V	a	onBlockRemoved
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	newState	newState
		p	5	moved	moved
	m	(Lbyj;Lbjw;Lfk;Lbwl;Lakq;Lben;)V	a	dropStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
		p	4	entity	entity
		p	5	stack	stack
	m	(Lbjw;Lbyj;Lcvg;Lakq;)V	a	onProjectileHit
		p	1	world	world
		p	2	state	state
		p	3	hitResult	hitResult
		p	4	entity	entity
	m	(Lbyj;Lbjz;Lfk;)Z	a	canPlaceAt
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lbjp;)Z	a	shouldDropItemsOnExplosion
		p	1	explosion	explosion
	m	(Lbph;)Z	a	cannotConnect
		p	0	block	block
	m	(Lbyj;Lbjw;Lfk;Lben;)V	a	onStacksDropped
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	stack	stack
	m	(Lbyj;Lbjg;Lfk;Lcvq;)Lcwf;	a	getOutlineShape
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
		p	4	context	context
	m	(Lbyj;Lbjw;Lfk;Layj;)V	a	onBlockBreakStart
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	player	player
	m	(Lbyj;Lxd;Lfk;Lbwl;Lakq;Lben;)Ljava/util/List;	a	getDroppedStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
		p	4	entity	entity
		p	5	stack	stack
	m	(Lbjz;)I	a	getTickRate
	m	(Lbyk$a;)V	a	appendProperties
		p	1	builder	builder
	m	(Lbyj;Lxd;Lfk;Lbwl;)Ljava/util/List;	a	getDroppedStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
	m	(Laaz;)Z	a	matches
		p	1	tag	tag
	m	(Lbyj;Lfk;)J	a	getRenderingSeed
		p	1	state	state
		p	2	pos	pos
	m	(I)Lbyj;	a	getStateFromRawId
		p	0	stateId	stateId
	m	(Lbyj;)I	a	getLuminance
		p	1	state	state
	m	(Lbyj;Lbyj;Lfp;)Z	a	isSideInvisible
		p	1	state	state
		p	2	neighbor	neighbor
		p	3	facing	facing
	m	(Lcwf;)Z	a	isShapeFullCube
		p	0	shape	shape
	m	(Lbyj;Lbjg;Lfk;Laku;)Z	a	allowsSpawning
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
		p	4	type	type
	m	(Lbyj;Lbyj;Lbjw;Lfk;)Lbyj;	a	pushEntitiesUpBeforeBlockChange
		p	0	from	from
		p	1	to	to
		p	2	world	world
		p	3	pos	pos
	m	(Lbjw;Lfk;I)V	a	dropExperience
		p	1	world	world
		p	2	pos	pos
		p	3	size	size
	m	(Lbyj;Lcoi;)Z	a	canBucketPlace
		p	1	state	state
		p	2	fluid	fluid
	m	(Lbjw;Lfk;Lben;)V	a	dropStack
		p	0	world	world
		p	1	pos	pos
		p	2	stack	stack
	m	(Lbjw;Lfk;Lakq;)V	a	onSteppedOn
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	(Lbyj;Lbyj;Lbjx;Lfk;I)V	a	replaceBlock
		p	0	state	state
		p	1	newState	newState
		p	2	world	world
		p	3	pos	pos
		p	4	flags	flags
	m	(Lbyj;Lbsu;)Lbyj;	a	mirror
		p	1	state	state
		p	2	mirror	mirror
	m	(Lbei;)Lbph;	a	getBlockFromItem
		p	0	item	item
	m	(Lbyj;Lfp;Lbyj;Lbjx;Lfk;Lfk;)Lbyj;	a	getStateForNeighborUpdate
		p	1	state	state
		p	2	facing	facing
		p	3	neighborState	neighborState
		p	4	world	world
		p	5	pos	pos
		p	6	neighborPos	neighborPos
	m	(Lbyj;Lbjw;Lfk;Lbwl;)V	a	dropStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	blockEntity	blockEntity
	m	(Lbyj;Lbjw;Lfk;Lbph;Lfk;Z)V	a	neighborUpdate
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	block	block
		p	5	neighborPos	neighborPos
		p	6	moved	moved
	m	(Lbyj;Lbjw;Lfk;)I	a	getComparatorOutput
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lbyj;Layj;Lbjg;Lfk;)F	a	calcBlockBreakingDelta
		p	1	state	state
		p	2	player	player
		p	3	world	world
		p	4	pos	pos
	m	(Lbjw;Lfk;Lakq;F)V	a	onLandedUpon
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
		p	4	distance	distance
	m	(Lbyj;Lbjw;Lfk;Ljava/util/Random;)V	a	randomDisplayTick
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
	m	(Lbjw;Lfk;Lbjp;)V	a	onDestroyedByExplosion
		p	1	world	world
		p	2	pos	pos
		p	3	explosion	explosion
	m	(Lbyj;)Lcoj;	a_	getFluidState
		p	1	state	state
	m	(Lbyj;Lbjx;Lfk;)Lbyj;	b	getRenderingState
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;Lbjw;Lfk;)Lajo;	b	createContainerFactory
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lbyj;Lbjg;Lfk;)Z	b	isTranslucent
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	(Lbyj;Lbjg;Lfk;Lfp;)I	b	getStrongRedstonePower
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
		p	4	facing	facing
	m	(Lbyj;)Z	b	hasComparatorOutput
		p	1	state	state
	m	(Lbyj;Lbjw;Lfk;Lbyj;Z)V	b	onBlockAdded
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	oldState	oldState
		p	5	moved	moved
	m	(Lbyj;Lxd;Lfk;Ljava/util/Random;)V	b	randomTick
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	random	random
	m	(Lbyj;Lbjg;Lfk;Lcvq;)Lcwf;	b	getCollisionShape
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
		p	4	context	context
	m	(Lbyj;Lbjx;Lfk;I)V	b	method_9517
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	flags	flags
	m	(Lbyj;Lbjg;Lfk;)Z	c	canSuffocate
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	(Lbyj;Lbjg;Lfk;Lfp;)Z	c	shouldDrawSide
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	facing	facing
	m	(Lbjw;Lfk;)V	c	rainTick
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;)Lbtr;	c	getRenderType
		p	1	state	state
	m	(Lbyj;Lbjw;Lfk;)V	c	dropStacks
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lbjg;Lfk;)Z	c	topCoversMediumSquare
		p	0	world	world
		p	1	pos	pos
	m	(Lbyj;)Z	d	isAir
		p	1	state	state
	m	(Lbyj;Lbjg;Lfk;)Z	d	isSimpleFullBlock
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	(Lbyj;Lbjg;Lfk;Lfp;)Z	d	isSideSolidFullSquare
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	side	side
	m	(Lbyj;Lbjg;Lfk;)Lcop;	e	getMapColor
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	()Z	f	hasBlockEntity
	m	(Lbyj;)Z	f	emitsRedstonePower
		p	1	state	state
	m	(Lbyj;Lbjg;Lfk;)Z	f	hasInWallOverlay
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	(Lbyj;Lbjg;Lfk;)F	g	getHardness
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	()Lsm;	g	getDropTableId
	m	(Lbyj;)Lcoq;	g	getPistonBehavior
		p	1	state	state
	m	()F	h	getBlastResistance
	m	(Lbyj;Lbjg;Lfk;)Z	h	shouldPostProcess
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	(Lbyj;Lbjg;Lfk;)Lcwf;	i	getCullingShape
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	()Llf;	j	getName
	m	(Lbyj;)I	j	getRawIdFromState
		p	0	state	state
	m	(Lbyj;Lbjg;Lfk;)Lcwf;	j	getRayTraceShape
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	()Ljava/lang/String;	k	getTranslationKey
	m	(Lbyj;)Lcoo;	k	getMaterial
		p	1	state	state
	m	(Lbyj;Lbjg;Lfk;)Z	k	isFullOpaque
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	(Lbyj;)Z	l	hasRandomTicks
		p	1	state	state
	m	()F	l	getSlipperiness
	m	(Lbyj;Lbjg;Lfk;)I	l	getOpacity
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
	m	()F	m	getVelocityMultiplier
	m	(Lbyj;Lbjg;Lfk;)Lcvl;	m	getOffsetPos
		p	1	state	state
		p	2	view	view
		p	3	blockPos	blockPos
	m	(Lbyj;)Z	m	hasEmissiveLighting
		p	1	state	state
	m	(Lbyj;)Z	n	isOpaque
		p	1	state	state
	m	()F	n	getJumpVelocityMultiplier
	m	(Lbyj;)Z	o	hasSidedTransparency
		p	1	state	state
	m	()Lbyk;	o	getStateManager
	m	(Lbyj;)V	p	setDefaultState
		p	1	state	state
	m	()Lbyj;	p	getDefaultState
	m	()Z	q	hasDynamicBounds
	m	(Lbyj;)Lbum;	q	getSoundGroup
		p	1	state	state
c	bph$1	net/minecraft/block/Block$1
	m	(Lcwf;)Ljava/lang/Boolean;	a	load
c	bph$a	net/minecraft/block/Block$NeighborGroup
	f	Lbyj;	a	self
	f	Lbyj;	b	other
	f	Lfp;	c	facing
	m	(Lbyj;Lbyj;Lfp;)V	<init>	<init>
		p	1	self	self
		p	2	other	other
		p	3	facing	facing
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bph$b	net/minecraft/block/Block$OffsetType
c	bph$c	net/minecraft/block/Block$Settings
	f	Lcoo;	a	material
	f	Lcop;	b	materialColor
	f	Z	c	collidable
	f	Lbum;	d	soundGroup
	f	I	e	luminance
	f	F	f	resistance
	f	F	g	hardness
	f	Z	h	randomTicks
	f	F	i	slipperiness
	f	F	j	slowDownMultiplier
	f	F	k	jumpVelocityMultiplier
	f	Lsm;	l	dropTableId
	f	Z	m	opaque
	f	Z	n	dynamicBounds
	m	(Lcoo;Lcop;)V	<init>	<init>
		p	1	material	material
		p	2	materialColor	materialColor
	m	(FF)Lbph$c;	a	strength
		p	1	hardness	hardness
		p	2	resistance	resistance
	m	(Lcoo;Lbdj;)Lbph$c;	a	of
		p	0	material	material
		p	1	color	color
	m	()Lbph$c;	a	noCollision
	m	(Lbph;)Lbph$c;	a	copy
		p	0	source	source
	m	(Lbum;)Lbph$c;	a	sounds
		p	1	soundGroup	soundGroup
	m	(Lcoo;Lcop;)Lbph$c;	a	of
		p	0	material	material
		p	1	color	color
	m	(Lcoo;)Lbph$c;	a	of
		p	0	material	material
	m	(I)Lbph$c;	a	lightLevel
		p	1	luminance	luminance
	m	(F)Lbph$c;	a	slipperiness
		p	1	slipperiness	slipperiness
	m	()Lbph$c;	b	nonOpaque
	m	(Lbph;)Lbph$c;	b	dropsLike
		p	1	source	source
	m	(F)Lbph$c;	b	velocityMultiplier
		p	1	velocityMultiplier	velocityMultiplier
	m	()Lbph$c;	c	breakInstantly
	m	(F)Lbph$c;	c	jumpVelocityMultiplier
		p	1	jumpVelocityMultiplier	jumpVelocityMultiplier
	m	()Lbph$c;	d	ticksRandomly
	m	(F)Lbph$c;	d	strength
		p	1	strength	strength
	m	()Lbph$c;	e	hasDynamicBounds
	m	()Lbph$c;	f	dropsNothing
c	bpi	net/minecraft/block/Blocks
	m	(Ljava/lang/String;Lbph;)Lbph;	a	register
		p	0	id	id
		p	1	block	block
c	bpj	net/minecraft/block/Fertilizable
	m	(Lbjg;Lfk;Lbyj;Z)Z	a	isFertilizable
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	isClient	isClient
	m	(Lbjw;Ljava/util/Random;Lfk;Lbyj;)Z	a	canGrow
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
	m	(Lxd;Ljava/util/Random;Lfk;Lbyj;)V	a	grow
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
c	bpk	net/minecraft/block/BrewingStandBlock
	f	[Lbzb;	a	BOTTLE_PROPERTIES
	f	Lcwf;	b	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bpl	net/minecraft/block/BubbleColumnBlock
	f	Lbzb;	a	DRAG
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjx;Lfk;Z)V	a	update
		p	0	world	world
		p	1	pos	pos
		p	2	drag	drag
	m	(Lbjx;Lfk;)Z	a	isStillWater
		p	0	world	world
		p	1	pos	pos
	m	(Lbjg;Lfk;)Z	a	calculateDrag
		p	0	world	world
		p	1	pos	pos
c	bpm	net/minecraft/block/FluidDrainable
	m	(Lbjx;Lfk;Lbyj;)Lcoi;	b	tryDrainFluid
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	bpn	net/minecraft/block/PlantBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjg;Lfk;)Z	a_	canPlantOnTop
		p	1	floor	floor
		p	2	view	view
		p	3	pos	pos
c	bpo	net/minecraft/block/AbstractButtonBlock
	f	Lcwf;	A	WEST_PRESSED_SHAPE
	f	Lcwf;	B	EAST_PRESSED_SHAPE
	f	Z	D	wooden
	f	Lbzb;	a	POWERED
	f	Lcwf;	b	CEILING_X_SHAPE
	f	Lcwf;	c	CEILING_Z_SHAPE
	f	Lcwf;	d	FLOOR_X_SHAPE
	f	Lcwf;	e	FLOOR_Z_SHAPE
	f	Lcwf;	f	NORTH_SHAPE
	f	Lcwf;	g	SOUTH_SHAPE
	f	Lcwf;	h	WEST_SHAPE
	f	Lcwf;	i	EAST_SHAPE
	f	Lcwf;	j	CEILING_X_PRESSED_SHAPE
	f	Lcwf;	k	CEILING_Z_PRESSED_SHAPE
	f	Lcwf;	w	FLOOR_X_PRESSED_SHAPE
	f	Lcwf;	x	FLOOR_Z_PRESSED_SHAPE
	f	Lcwf;	y	NORTH_PRESSED_SHAPE
	f	Lcwf;	z	SOUTH_PRESSED_SHAPE
	m	(ZLbph$c;)V	<init>	<init>
		p	1	wooden	wooden
		p	2	settings	settings
	m	(Layj;Lbjx;Lfk;Z)V	a	playClickSound
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
		p	4	powered	powered
	m	(Z)Laah;	a	getClickSound
		p	1	powered	powered
	m	(Lbyj;Lbjw;Lfk;)V	e	tryPowerWithProjectiles
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lbyj;Lbjw;Lfk;)V	f	updateNeighbors
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bpp	net/minecraft/block/CactusBlock
	f	Lbzj;	a	AGE
	f	Lcwf;	b	COLLISION_SHAPE
	f	Lcwf;	c	OUTLINE_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bpq	net/minecraft/block/CakeBlock
	f	Lbzj;	a	BITES
	f	[Lcwf;	b	BITES_TO_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjx;Lfk;Lbyj;Layj;)Lajl;	a	tryEat
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	player	player
c	bpr	net/minecraft/block/CampfireBlock
	f	Lcwf;	a	SHAPE
	f	Lbzb;	b	LIT
	f	Lbzb;	c	SIGNAL_FIRE
	f	Lbzb;	d	WATERLOGGED
	f	Lbze;	e	FACING
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;ZZ)V	a	spawnSmokeParticle
		p	0	world	world
		p	1	pos	pos
		p	2	isSignal	isSignal
		p	3	lotsOfSmoke	lotsOfSmoke
	m	(Lbjw;Lfk;I)Z	b	isLitCampfireInRange
		p	0	world	world
		p	1	pos	pos
		p	2	range	range
	m	(Lbyj;)Z	h	doesBlockCauseSignalFire
		p	1	state	state
	m	(Lbyj;)Z	i	isLitCampfire
		p	0	state	state
c	bps	net/minecraft/block/CarrotsBlock
	f	[Lcwf;	a	AGE_TO_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bpt	net/minecraft/block/CartographyTableBlock
	f	Llp;	a	CONTAINER_NAME
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bpu	net/minecraft/block/CarvedPumpkinBlock
	f	Lbze;	a	FACING
	f	Lbyo;	b	snowGolemDispenserPattern
	f	Lbyo;	c	snowGolemPattern
	f	Lbyo;	d	ironGolemDispenserPattern
	f	Lbyo;	e	ironGolemPattern
	f	Ljava/util/function/Predicate;	f	IS_PUMPKIN_PREDICATE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjz;Lfk;)Z	a	canDispense
		p	2	pos	pos
	m	(Lbjw;Lfk;)V	a	trySpawnEntity
		p	1	world	world
		p	2	pos	pos
	m	()Lbyo;	c	getSnowGolemDispenserPattern
	m	()Lbyo;	d	getSnowGolemPattern
	m	()Lbyo;	e	getIronGolemDispenserPattern
	m	()Lbyo;	r	getIronGolemPattern
c	bpv	net/minecraft/block/CauldronBlock
	f	Lbzj;	a	LEVEL
	f	Lcwf;	b	OUTLINE_SHAPE
	f	Lcwf;	c	RAY_TRACE_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbyj;I)V	a	setLevel
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	level	level
c	bpw	net/minecraft/block/ChestBlock
	f	Lbze;	b	FACING
	f	Lbzh;	c	CHEST_TYPE
	f	Lbzb;	d	WATERLOGGED
	f	Lcwf;	e	DOUBLE_NORTH_SHAPE
	f	Lcwf;	f	DOUBLE_SOUTH_SHAPE
	f	Lcwf;	g	DOUBLE_WEST_SHAPE
	f	Lcwf;	h	DOUBLE_EAST_SHAPE
	f	Lcwf;	i	SINGLE_SHAPE
	f	Lbqt$b;	j	INVENTORY_RETRIEVER
	f	Lbqt$b;	k	NAME_RETRIEVER
	m	(Lbph$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbcq;Lfp;)Lfp;	a	getNeighborChestDirection
		p	1	ctx	ctx
		p	2	dir	dir
	m	(Lbxe;)Lbqt$b;	a	getAnimationProgressRetriever
	m	(Lbjx;Lfk;)Z	a	isChestBlocked
		p	0	world	world
		p	1	pos	pos
	m	(Lbpw;Lbyj;Lbjw;Lfk;Z)Laje;	a	getInventory
		p	0	block	block
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	ignoreBlocked	ignoreBlocked
	m	(Lbjg;Lfk;)Z	a	hasBlockOnTop
		p	0	view	view
		p	1	pos	pos
	m	(Lbjx;Lfk;)Z	b	hasOcelotOnTop
		p	0	world	world
		p	1	pos	pos
	m	()Laao;	c	getOpenStat
	m	(Lbyj;)Lbqt$a;	h	getDoubleBlockType
		p	0	state	state
	m	(Lbyj;)Lfp;	i	getFacing
		p	0	state	state
c	bpw$1	net/minecraft/block/ChestBlock$1
	m	(Lbwp;Lbwp;)Ljava/util/Optional;	a	getFromBoth
	m	(Lbwp;)Ljava/util/Optional;	a	getFrom
	m	()Ljava/util/Optional;	a	getFallback
c	bpw$2	net/minecraft/block/ChestBlock$2
	m	(Lbwp;Lbwp;)Ljava/util/Optional;	a	getFromBoth
	m	(Lbwp;)Ljava/util/Optional;	a	getFrom
	m	()Ljava/util/Optional;	a	getFallback
c	bpw$2$1	net/minecraft/block/ChestBlock$2$1
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
c	bpw$3	net/minecraft/block/ChestBlock$3
	m	(Lbwp;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	getFrom
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	getFallback
	m	(Lbwp;Lbwp;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	getFromBoth
c	bpx	net/minecraft/block/ChorusFlowerBlock
	f	Lbzj;	a	AGE
	f	Lbpy;	b	plantBlock
	m	(Lbpy;Lbph$c;)V	<init>	<init>
		p	1	plantBlock	plantBlock
		p	2	settings	settings
	m	(Lbjw;Lfk;)V	a	die
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;Ljava/util/Random;Lfk;II)V	a	generate
		p	0	world	world
		p	1	pos	pos
		p	2	random	random
		p	3	rootPos	rootPos
		p	4	size	size
		p	5	layer	layer
	m	(Lbjx;Lfk;Ljava/util/Random;I)V	a	generate
		p	0	world	world
		p	1	pos	pos
		p	2	random	random
		p	3	size	size
	m	(Lbjz;Lfk;Lfp;)Z	b	isSurroundedByAir
		p	1	pos	pos
		p	2	exceptDirection	exceptDirection
	m	(Lbjw;Lfk;I)V	b	grow
		p	1	world	world
		p	2	pos	pos
		p	3	age	age
c	bpy	net/minecraft/block/ChorusPlantBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;)Lbyj;	a	withConnectionProperties
		p	1	view	view
		p	2	pos	pos
c	bpz	net/minecraft/block/CocoaBlock
	f	Lbzj;	a	AGE
	f	[Lcwf;	b	AGE_TO_EAST_SHAPE
	f	[Lcwf;	c	AGE_TO_WEST_SHAPE
	f	[Lcwf;	d	AGE_TO_NORTH_SHAPE
	f	[Lcwf;	e	AGE_TO_SOUTH_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bq	net/minecraft/advancement/criterion/LocationArrivalCriterion
	f	Lsm;	a	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	(Lxe;)V	a	trigger
		p	1	player	player
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbq$a;	b	conditionsFromJson
c	bq$a	net/minecraft/advancement/criterion/LocationArrivalCriterion$Conditions
	f	Lbp;	a	location
	m	(Lsm;Lbp;)V	<init>	<init>
		p	1	id	id
		p	2	location	location
	m	(Lbp;)Lbq$a;	a	create
		p	0	location	location
	m	(Lxd;DDD)Z	a	matches
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	()Lbq$a;	c	createSleptInBed
	m	()Lbq$a;	d	createHeroOfTheVillage
c	bqa	net/minecraft/block/CommandBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	CONDITIONAL
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjw;Lfk;Lbjc;Z)V	a	execute
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	executor	executor
		p	5	hasCommand	hasCommand
	m	(Lbjw;Lfk;Lfp;)V	a	executeCommandChain
		p	0	world	world
		p	1	pos	pos
		p	2	facing	facing
c	bqb	net/minecraft/block/ComparatorBlock
	f	Lbzh;	a	MODE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfp;Lfk;)Lavr;	a	getAttachedItemFrame
		p	1	world	world
		p	2	facing	facing
		p	3	pos	pos
	m	(Lbjw;Lfk;Lbyj;)I	e	calculateOutputSignal
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lbyj;)V	f	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	bqc	net/minecraft/block/ComposterBlock
	f	Lbzj;	a	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	b	ITEM_TO_LEVEL_INCREASE_CHANCE
	f	Lcwf;	c	RAY_TRACE_SHAPE
	f	[Lcwf;	d	LEVEL_TO_COLLISION_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(FLbjv;)V	a	registerCompostableItem
		p	0	levelIncreaseChance	levelIncreaseChance
		p	1	item	item
	m	(Lbjw;Lfk;Z)V	a	playEffects
		p	0	world	world
		p	1	pos	pos
		p	2	fill	fill
	m	(Lbyj;Lbjx;Lfk;Lben;)Z	b	addToComposter
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	item	item
	m	()V	c	registerDefaultCompostableItems
	m	(Lbyj;Lbjx;Lfk;)V	d	emptyComposter
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bqc$a	net/minecraft/block/ComposterBlock$DummyInventory
c	bqc$b	net/minecraft/block/ComposterBlock$ComposterInventory
	f	Lbyj;	a	state
	f	Lbjx;	b	world
	f	Lfk;	c	pos
	f	Z	d	dirty
	m	(Lbyj;Lbjx;Lfk;)V	<init>	<init>
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bqc$c	net/minecraft/block/ComposterBlock$FullComposterInventory
	f	Lbyj;	a	state
	f	Lbjx;	b	world
	f	Lfk;	c	pos
	f	Z	d	dirty
	m	(Lbyj;Lbjx;Lfk;Lben;)V	<init>	<init>
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	outputItem	outputItem
c	bqd	net/minecraft/block/ConcretePowderBlock
	f	Lbyj;	a	hardenedState
	m	(Lbph;Lbph$c;)V	<init>	<init>
		p	1	hardened	hardened
		p	2	settings	settings
	m	(Lbjg;Lfk;)Z	a	hardensOnAnySide
		p	0	view	view
		p	1	pos	pos
	m	(Lbyj;)Z	r	hardensIn
		p	0	state	state
c	bqe	net/minecraft/block/ConduitBlock
	f	Lbzb;	a	WATERLOGGED
	f	Lcwf;	b	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bqf	net/minecraft/block/CoralBlockBlock
	f	Lbph;	a	deadCoralBlock
	m	(Lbph;Lbph$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
	m	(Lbjg;Lfk;)Z	a	isInWater
		p	1	world	world
		p	2	pos	pos
c	bqg	net/minecraft/block/CoralFanBlock
	f	Lbph;	a	deadCoralBlock
	m	(Lbph;Lbph$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
c	bqh	net/minecraft/block/CoralBlock
	f	Lcwf;	a	SHAPE
	f	Lbph;	c	deadCoralBlock
	m	(Lbph;Lbph$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
c	bqi	net/minecraft/block/CoralWallFanBlock
	f	Lbph;	c	deadCoralBlock
	m	(Lbph;Lbph$c;)V	<init>	<init>
		p	1	deadCoralBlock	deadCoralBlock
		p	2	settings	settings
c	bqj	net/minecraft/block/CraftingTableBlock
	f	Llf;	a	CONTAINER_NAME
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bqk	net/minecraft/block/CropBlock
	f	[Lcwf;	a	AGE_TO_SHAPE
	f	Lbzj;	b	AGE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbyj;)V	a	applyGrowth
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbph;Lbjg;Lfk;)F	a	getAvailableMoisture
		p	0	block	block
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;)I	a	getGrowthAmount
		p	1	world	world
	m	(I)Lbyj;	b	withAge
		p	1	age	age
	m	()Lbzj;	c	getAgeProperty
	m	()I	d	getMaxAge
	m	()Lbjv;	e	getSeedsItem
	m	(Lbyj;)I	h	getAge
		p	1	state	state
	m	(Lbyj;)Z	i	isMature
		p	1	state	state
c	bql	net/minecraft/block/HorizontalConnectingBlock
	f	Lbzb;	a	NORTH
	f	Lbzb;	b	EAST
	f	Lbzb;	c	SOUTH
	f	Lbzb;	d	WEST
	f	Lbzb;	e	WATERLOGGED
	f	Ljava/util/Map;	f	FACING_PROPERTIES
	f	[Lcwf;	g	collisionShapes
	f	[Lcwf;	h	boundingShapes
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	SHAPE_INDEX_CACHE
	m	(FFFFFLbph$c;)V	<init>	<init>
		p	1	radius1	radius1
		p	2	radius2	radius2
		p	3	boundingHeight1	boundingHeight1
		p	4	boundingHeight2	boundingHeight2
		p	5	collisionHeight	collisionHeight
		p	6	settings	settings
	m	(FFFFF)[Lcwf;	a	createShapes
		p	1	radius1	radius1
		p	2	radius2	radius2
		p	3	height1	height1
		p	4	offset2	offset2
		p	5	height2	height2
	m	(Lfp;)I	a	getDirectionMask
		p	0	dir	dir
	m	(Lbyj;)I	h	getShapeIndex
		p	1	state	state
c	bqm	net/minecraft/block/DaylightDetectorBlock
	f	Lbzj;	a	POWER
	f	Lbzb;	b	INVERTED
	f	Lcwf;	c	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjw;Lfk;)V	d	updateState
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	bqn	net/minecraft/block/DeadBushBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bqo	net/minecraft/block/DetectorRailBlock
	f	Lbzh;	c	SHAPE
	f	Lbzb;	d	POWERED
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbyj;)V	a	updatePoweredStatus
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getCarts
		p	1	world	world
		p	2	pos	pos
		p	3	entityClass	entityClass
		p	4	entityPredicate	entityPredicate
	m	(Lfk;)Lcvf;	a	getCartDetectionBox
		p	1	pos	pos
	m	(Lbjw;Lfk;Lbyj;Z)V	b	updateNearbyRails
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	unpowering	unpowering
c	bqp	net/minecraft/block/AbstractRedstoneGateBlock
	f	Lcwf;	b	SHAPE
	f	Lbzb;	c	POWERED
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjz;Lfk;Lbyj;)Z	a	isLocked
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lbyj;)Z	a	hasPower
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjg;Lfk;Lbyj;)I	b	getOutputLevel
		p	1	view	view
		p	2	pos	pos
		p	3	state	state
	m	(Lbjz;Lfk;Lfp;)I	b	getInputLevel
		p	2	pos	pos
		p	3	dir	dir
	m	(Lbjz;Lfk;Lbyj;)I	b	getMaxInputLevelSides
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lbyj;)I	b	getPower
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjg;Lfk;Lbyj;)Z	c	isTargetNotAligned
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lbyj;)V	c	updatePowered
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lbyj;)V	d	updateTarget
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbyj;)I	h	getUpdateDelayInternal
		p	1	state	state
	m	(Lbyj;)Z	i	isValidInput
		p	1	state	state
	m	(Lbyj;)Z	r	isRedstoneGate
		p	0	state	state
c	bqq	net/minecraft/block/FacingBlock
	f	Lbze;	a	FACING
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bqr	net/minecraft/block/DispenserBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	TRIGGERED
	f	Ljava/util/Map;	c	BEHAVIORS
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lfl;)Lfz;	a	getOutputLocation
		p	0	pointer	pointer
	m	(Lbjw;Lfk;)V	a	dispense
		p	1	world	world
		p	2	pos	pos
	m	(Lbjv;Lgl;)V	a	registerBehavior
		p	0	provider	provider
		p	1	behavior	behavior
	m	(Lben;)Lgl;	a	getBehaviorForItem
		p	1	stack	stack
c	bqs	net/minecraft/block/DoorBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	OPEN
	f	Lbzh;	c	HINGE
	f	Lbzb;	d	POWERED
	f	Lbzh;	e	HALF
	f	Lcwf;	f	NORTH_SHAPE
	f	Lcwf;	g	SOUTH_SHAPE
	f	Lcwf;	h	EAST_SHAPE
	f	Lcwf;	i	WEST_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Z)V	a	setOpen
		p	1	world	world
		p	2	pos	pos
		p	3	open	open
	m	(Lbcq;)Lbzf;	b	getHinge
		p	1	ctx	ctx
	m	(Lbjw;Lfk;Z)V	b	playOpenCloseSound
		p	1	world	world
		p	2	pos	pos
		p	3	open	open
	m	()I	c	getOpenSoundEventId
	m	()I	d	getCloseSoundEventId
c	bqt	net/minecraft/block/DoubleBlockProperties
	m	(Lbwm;Ljava/util/function/Function;Ljava/util/function/Function;Lbze;Lbyj;Lbjx;Lfk;Ljava/util/function/BiPredicate;)Lbqt$c;	a	toPropertySource
		p	0	blockEntityType	blockEntityType
		p	1	typeMapper	typeMapper
		p	4	state	state
		p	5	world	world
		p	6	pos	pos
		p	7	fallbackTester	fallbackTester
c	bqt$a	net/minecraft/block/DoubleBlockProperties$Type
c	bqt$b	net/minecraft/block/DoubleBlockProperties$PropertyRetriever
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	getFrom
		p	1	single	single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	getFromBoth
		p	1	first	first
		p	2	second	second
	m	()Ljava/lang/Object;	b	getFallback
c	bqt$c	net/minecraft/block/DoubleBlockProperties$PropertySource
	m	(Lbqt$b;)Ljava/lang/Object;	apply	apply
		p	1	retriever	retriever
c	bqt$c$a	net/minecraft/block/DoubleBlockProperties$PropertySource$Pair
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1	first	first
		p	2	second	second
c	bqt$c$b	net/minecraft/block/DoubleBlockProperties$PropertySource$Single
	f	Ljava/lang/Object;	a	single
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1	single	single
c	bqu	net/minecraft/block/TallPlantBlock
	f	Lbzh;	a	HALF
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjx;Lfk;I)V	a	placeAt
		p	1	world	world
		p	2	pos	pos
		p	3	flags	flags
c	bqv	net/minecraft/block/DragonEggBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjw;Lfk;)V	d	teleport
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bqw	net/minecraft/block/DropperBlock
	f	Lgl;	c	BEHAVIOR
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bqx	net/minecraft/block/EnchantingTableBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bqy	net/minecraft/block/EndGatewayBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bqz	net/minecraft/block/EndPortalBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	br	net/minecraft/predicate/NumberRange
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	EXCEPTION_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	EXCEPTION_SWAPPED
	f	Ljava/lang/Number;	c	min
	f	Ljava/lang/Number;	d	max
	m	(Ljava/lang/Number;Ljava/lang/Number;)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Lcom/mojang/brigadier/StringReader;Lbr$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lbr;	a	parse
		p	0	commandReader	commandReader
		p	2	converter	converter
		p	3	exceptionTypeSupplier	exceptionTypeSupplier
		p	4	mapper	mapper
	m	(Lcom/google/gson/JsonElement;Lbr;Ljava/util/function/BiFunction;Lbr$a;)Lbr;	a	fromJson
		p	0	json	json
		p	1	fallback	fallback
		p	2	asNumber	asNumber
		p	3	factory	factory
	m	()Ljava/lang/Number;	a	getMin
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	map
		p	0	object	object
		p	1	function	function
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isNextCharValid
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number;	a	fromStringReader
		p	0	reader	reader
		p	1	converter	converter
		p	2	exceptionTypeSupplier	exceptionTypeSupplier
	m	()Ljava/lang/Number;	b	getMax
	m	()Z	c	isDummy
	m	()Lcom/google/gson/JsonElement;	d	toJson
c	br$a	net/minecraft/predicate/NumberRange$Factory
	m	(Ljava/lang/Number;Ljava/lang/Number;)Lbr;	create	create
		p	1	min	min
		p	2	max	max
c	br$b	net/minecraft/predicate/NumberRange$CommandFactory
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Number;Ljava/lang/Number;)Lbr;	create	create
		p	1	reader	reader
		p	2	min	min
		p	3	max	max
c	br$c	net/minecraft/predicate/NumberRange$FloatRange
	f	Lbr$c;	e	ANY
	f	Ljava/lang/Double;	f	squaredMin
	f	Ljava/lang/Double;	g	squaredMax
	m	(Ljava/lang/Float;Ljava/lang/Float;)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Lcom/mojang/brigadier/StringReader;)Lbr$c;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lbr$c;	a	parse
		p	0	reader	reader
		p	1	mapper	mapper
	m	(Ljava/lang/Float;)Ljava/lang/Double;	a	square
		p	0	value	value
	m	(Lcom/google/gson/JsonElement;)Lbr$c;	a	fromJson
		p	0	element	element
	m	(D)Z	a	testSqrt
		p	1	value	value
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lbr$c;	a	create
		p	0	reader	reader
		p	1	min	min
		p	2	max	max
	m	(F)Lbr$c;	b	atLeast
		p	0	value	value
	m	(F)Z	d	test
		p	1	value	value
c	br$d	net/minecraft/predicate/NumberRange$IntRange
	f	Lbr$d;	e	ANY
	f	Ljava/lang/Long;	f	minSquared
	f	Ljava/lang/Long;	g	maxSquared
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Lcom/google/gson/JsonElement;)Lbr$d;	a	fromJson
		p	0	element	element
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	a	squared
		p	0	value	value
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lbr$d;	a	fromStringReader
		p	0	reader	reader
		p	1	converter	converter
	m	(Lcom/mojang/brigadier/StringReader;)Lbr$d;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lbr$d;	a	parse
		p	0	reader	reader
		p	1	min	min
		p	2	max	max
	m	(I)Lbr$d;	a	exactly
		p	0	value	value
	m	(I)Lbr$d;	b	atLeast
		p	0	value	value
	m	(I)Z	d	test
		p	1	value	value
c	bra	net/minecraft/block/EndPortalFrameBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	EYE
	f	Lcwf;	c	FRAME_SHAPE
	f	Lcwf;	d	EYE_SHAPE
	f	Lcwf;	e	FRAME_WITH_EYE_SHAPE
	f	Lbyo;	f	COMPLETED_FRAME
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	()Lbyo;	c	getCompletedFramePattern
c	brb	net/minecraft/block/EndRodBlock
	f	Lcwf;	b	Y_SHAPE
	f	Lcwf;	c	Z_SHAPE
	f	Lcwf;	d	X_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brc	net/minecraft/block/EnderChestBlock
	f	Lbze;	b	FACING
	f	Lbzb;	c	WATERLOGGED
	f	Lcwf;	d	SHAPE
	f	Llp;	e	CONTAINER_NAME
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brd	net/minecraft/block/BlockEntityProvider
	m	(Lbjg;)Lbwl;	a	createBlockEntity
		p	1	view	view
c	bre	net/minecraft/block/WallMountedBlock
	f	Lbzh;	C	FACE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjz;Lfk;Lfp;)Z	b	canPlaceAt
		p	1	pos	pos
		p	2	direction	direction
	m	(Lbyj;)Lfp;	h	getDirection
		p	0	state	state
c	brf	net/minecraft/block/FallingBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;)V	a	onDestroyedOnLanding
		p	1	world	world
		p	2	pos	pos
	m	(Lawa;)V	a	configureFallingBlockEntity
		p	1	entity	entity
	m	(Lbjw;Lfk;Lbyj;Lbyj;)V	a	onLanding
		p	1	world	world
		p	2	pos	pos
		p	3	fallingBlockState	fallingBlockState
		p	4	currentStateInPos	currentStateInPos
	m	(Lbyj;)Z	h	canFallThrough
		p	0	state	state
	m	(Lbyj;)I	i	getColor
		p	1	state	state
c	brg	net/minecraft/block/FarmlandBlock
	f	Lbzj;	a	MOISTURE
	f	Lcwf;	b	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;)Z	a	hasCrop
		p	0	world	world
		p	1	pos	pos
	m	(Lbjz;Lfk;)Z	a	isWaterNearby
		p	1	pos	pos
	m	(Lbyj;Lbjw;Lfk;)V	d	setToDirt
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	brh	net/minecraft/block/FenceBlock
	f	[Lcwf;	i	cullingShapes
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;ZLfp;)Z	a	canConnect
		p	1	state	state
		p	2	neighborIsFullSquare	neighborIsFullSquare
		p	3	dir	dir
c	bri	net/minecraft/block/FenceGateBlock
	f	Lbzb;	a	OPEN
	f	Lbzb;	b	POWERED
	f	Lbzb;	c	IN_WALL
	f	Lcwf;	d	Z_AXIS_SHAPE
	f	Lcwf;	e	X_AXIS_SHAPE
	f	Lcwf;	f	IN_WALL_Z_AXIS_SHAPE
	f	Lcwf;	g	IN_WALL_X_AXIS_SHAPE
	f	Lcwf;	h	Z_AXIS_COLLISION_SHAPE
	f	Lcwf;	i	X_AXIS_COLLISION_SHAPE
	f	Lcwf;	j	Z_AXIS_CULL_SHAPE
	f	Lcwf;	k	X_AXIS_CULL_SHAPE
	f	Lcwf;	w	IN_WALL_Z_AXIS_CULL_SHAPE
	f	Lcwf;	x	IN_WALL_X_AXIS_CULL_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lfp;)Z	a	canWallConnect
		p	0	state	state
		p	1	side	side
	m	(Lbyj;)Z	h	isWall
		p	1	state	state
c	brj	net/minecraft/block/FireBlock
	f	Lbzj;	a	AGE
	f	Lbzb;	b	NORTH
	f	Lbzb;	c	EAST
	f	Lbzb;	d	SOUTH
	f	Lbzb;	e	WEST
	f	Lbzb;	f	UP
	f	Ljava/util/Map;	g	DIRECTION_PROPERTIES
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	h	burnChances
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	spreadChances
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;ILjava/util/Random;I)V	a	trySpreadingFire
		p	1	world	world
		p	2	pos	pos
		p	3	spreadFactor	spreadFactor
		p	4	rand	rand
		p	5	currentAge	currentAge
	m	(Lbjg;Lfk;)Lbyj;	a	getStateForPosition
		p	1	world	world
		p	2	pos	pos
	m	(Lbjz;Lfk;)I	a	getBurnChance
		p	2	pos	pos
	m	(Lbjw;Lfk;)Z	a	isRainingAround
		p	1	world	world
		p	2	pos	pos
	m	(Lbph;II)V	a	registerFlammableBlock
		p	1	block	block
		p	2	burnChance	burnChance
		p	3	spreadChance	spreadChance
	m	(Lbjg;Lfk;)Z	b	areBlocksAroundFlammable
		p	1	world	world
		p	2	pos	pos
	m	()V	c	registerDefaultFlammables
	m	(Lbyj;)Z	h	isFlammable
		p	1	blockState	blockState
	m	(Lbyj;)I	i	getSpreadChance
		p	1	state	state
	m	(Lbyj;)I	r	getBurnChance
		p	1	state	state
c	brk	net/minecraft/block/FletchingTableBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brl	net/minecraft/block/FlowerBlock
	f	Lcwf;	a	SHAPE
	f	Laki;	b	effectInStew
	f	I	c	effectInStewDuration
	m	(Laki;ILbph$c;)V	<init>	<init>
		p	1	suspiciousStewEffect	suspiciousStewEffect
		p	2	effectDuration	effectDuration
		p	3	settings	settings
	m	()Laki;	c	getEffectInStew
	m	()I	d	getEffectInStewDuration
c	brm	net/minecraft/block/FlowerPotBlock
	f	Lcwf;	a	SHAPE
	f	Ljava/util/Map;	b	CONTENT_TO_POTTED
	f	Lbph;	c	content
	m	(Lbph;Lbph$c;)V	<init>	<init>
		p	1	content	content
		p	2	settings	settings
	m	()Lbph;	c	getContent
c	brn	net/minecraft/block/FrostedIceBlock
	f	Lbzj;	a	AGE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;I)Z	a	canMelt
		p	1	world	world
		p	2	pos	pos
		p	3	maxNeighbors	maxNeighbors
	m	(Lbyj;Lbjw;Lfk;)Z	e	increaseAge
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bro	net/minecraft/block/FurnaceBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brp	net/minecraft/block/GlassBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brq	net/minecraft/block/GlazedTerracottaBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brr	net/minecraft/block/GrassBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brs	net/minecraft/block/GrassPathBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brt	net/minecraft/block/GravelBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bru	net/minecraft/block/GrindstoneBlock
	f	Lcwf;	A	EAST_WEST_SHAPE
	f	Lcwf;	J	SOUTH_WALL_SHAPE
	f	Lcwf;	R	NORTH_WALL_SHAPE
	f	Lcwf;	Z	WEST_WALL_SHAPE
	f	Lcwf;	ah	EAST_WALL_SHAPE
	f	Lcwf;	ap	NORTH_SOUTH_HANGING_SHAPE
	f	Lcwf;	ax	EAST_WEST_HANGING_SHAPE
	f	Llp;	az	CONTAINER_NAME
	f	Lcwf;	h	NORTH_SOUTH_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;)Lcwf;	i	getShape
		p	1	state	state
c	brv	net/minecraft/block/TransparentBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brw	net/minecraft/block/HayBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	brx	net/minecraft/block/HoneyBlock
	f	Lcwf;	a	SHAPE
	m	(Lfk;Lakq;)Z	a	isSliding
		p	1	pos	pos
		p	2	entity	entity
	m	(Lakq;Lfk;)V	a	triggerAdvancement
		p	1	entity	entity
		p	2	pos	pos
	m	(Lbjw;Lakq;)V	a	addCollisionEffects
		p	1	world	world
		p	2	entity	entity
	m	(Lakq;I)V	a	addParticles
		p	0	entity	entity
		p	1	count	count
	m	(Lakq;)V	a	addRegularParticles
		p	0	entity	entity
	m	(Lakq;)V	b	addRichParticles
		p	0	entity	entity
	m	(Lakq;)Z	c	hasHoneyBlockEffects
		p	0	entity	entity
	m	(Lakq;)V	d	updateSlidingVelocity
		p	1	entity	entity
c	bry	net/minecraft/block/HopperBlock
	f	Lcwf;	A	WEST_RAY_TRACE_SHAPE
	f	Lbze;	a	FACING
	f	Lbzb;	b	ENABLED
	f	Lcwf;	c	TOP_SHAPE
	f	Lcwf;	d	MIDDLE_SHAPE
	f	Lcwf;	e	OUTSIDE_SHAPE
	f	Lcwf;	f	DEFAULT_SHAPE
	f	Lcwf;	g	DOWN_SHAPE
	f	Lcwf;	h	EAST_SHAPE
	f	Lcwf;	i	NORTH_SHAPE
	f	Lcwf;	j	SOUTH_SHAPE
	f	Lcwf;	k	WEST_SHAPE
	f	Lcwf;	w	DOWN_RAY_TRACE_SHAPE
	f	Lcwf;	x	EAST_RAY_TRACE_SHAPE
	f	Lcwf;	y	NORTH_RAY_TRACE_SHAPE
	f	Lcwf;	z	SOUTH_RAY_TRACE_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbyj;)V	a	updateEnabled
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	brz	net/minecraft/block/HorizontalFacingBlock
	f	Lbze;	ay	FACING
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bs	net/minecraft/predicate/entity/EntityEffectPredicate
	f	Lbs;	a	EMPTY
	f	Ljava/util/Map;	b	effects
	m	(Lakq;)Z	a	test
	m	(Lakz;)Z	a	test
	m	(Laki;)Lbs;	a	withEffect
	m	()Lbs;	a	create
	m	(Lcom/google/gson/JsonElement;)Lbs;	a	deserialize
	m	(Ljava/util/Map;)Z	a	test
	m	()Lcom/google/gson/JsonElement;	b	serialize
c	bs$a	net/minecraft/predicate/entity/EntityEffectPredicate$EffectData
	f	Lbr$d;	a	amplifier
	f	Lbr$d;	b	duration
	f	Ljava/lang/Boolean;	c	ambient
	f	Ljava/lang/Boolean;	d	visible
	m	(Lbr$d;Lbr$d;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1	amplifier	amplifier
		p	2	duration	duration
		p	3	ambient	ambient
	m	(Lakk;)Z	a	test
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lbs$a;	a	deserialize
		p	0	json	json
c	bsa	net/minecraft/block/MushroomBlock
	f	Lbzb;	a	NORTH
	f	Lbzb;	b	EAST
	f	Lbzb;	c	SOUTH
	f	Lbzb;	d	WEST
	f	Lbzb;	e	UP
	f	Lbzb;	f	DOWN
	f	Ljava/util/Map;	g	FACING_PROPERTIES
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bsb	net/minecraft/block/IceBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjw;Lfk;)V	d	melt
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bsc	net/minecraft/block/InfestedBlock
	f	Lbph;	a	regularBlock
	f	Ljava/util/Map;	b	REGULAR_TO_INFESTED
	m	(Lbph;Lbph$c;)V	<init>	<init>
		p	1	regularBlock	regularBlock
		p	2	settings	settings
	m	()Lbph;	c	getRegularBlock
	m	(Lbph;)Lbyj;	d	fromRegularBlock
		p	0	regularBlock	regularBlock
	m	(Lbyj;)Z	h	isInfestable
		p	0	block	block
c	bsd	net/minecraft/block/PaneBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Z)Z	a	connectsTo
		p	1	state	state
c	bse	net/minecraft/block/JigsawBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lcms$b;Lcms$b;)Z	a	attachmentMatches
		p	0	info1	info1
		p	1	info2	info2
c	bsf	net/minecraft/block/JukeboxBlock
	f	Lbzb;	a	HAS_RECORD
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;)V	a	removeRecord
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;Lbyj;Lben;)V	a	setRecord
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	stack	stack
c	bsg	net/minecraft/block/KelpBlock
	f	Lbzj;	a	AGE
	f	Lcwf;	b	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjx;)Lbyj;	a	getPlacementState
		p	1	world	world
c	bsh	net/minecraft/block/KelpPlantBlock
	f	Lbsg;	a	kelpBlock
	m	(Lbsg;Lbph$c;)V	<init>	<init>
		p	1	kelpBlock	kelpBlock
		p	2	settings	settings
c	bsi	net/minecraft/block/LadderBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	WATERLOGGED
	f	Lcwf;	c	EAST_SHAPE
	f	Lcwf;	d	WEST_SHAPE
	f	Lcwf;	e	SOUTH_SHAPE
	f	Lcwf;	f	NORTH_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;Lfp;)Z	a	canPlaceOn
		p	1	world	world
		p	2	pos	pos
		p	3	side	side
c	bsj	net/minecraft/block/LanternBlock
	f	Lbzb;	a	HANGING
	f	Lcwf;	b	STANDING_SHAPE
	f	Lcwf;	c	HANGING_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;)Lfp;	h	attachedDirection
		p	0	state	state
c	bsk	net/minecraft/block/LeavesBlock
	f	Lbzj;	a	DISTANCE
	f	Lbzb;	b	PERSISTENT
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjx;Lfk;)Lbyj;	a	updateDistanceFromLogs
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;)I	h	getDistanceFromLog
		p	0	state	state
c	bsl	net/minecraft/block/LecternBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	POWERED
	f	Lbzb;	c	HAS_BOOK
	f	Lcwf;	d	BOTTOM_SHAPE
	f	Lcwf;	e	MIDDLE_SHAPE
	f	Lcwf;	f	BASE_SHAPE
	f	Lcwf;	g	COLLISION_SHAPE_TOP
	f	Lcwf;	h	COLLISION_SHAPE
	f	Lcwf;	i	WEST_SHAPE
	f	Lcwf;	j	NORTH_SHAPE
	f	Lcwf;	k	EAST_SHAPE
	f	Lcwf;	w	SOUTH_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbyj;Z)V	a	setHasBook
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	hasBook	hasBook
	m	(Lbjw;Lfk;Layj;)V	a	openContainer
		p	1	world	world
		p	2	pos	pos
		p	3	player	player
	m	(Lbjw;Lfk;Lbyj;Lben;)Z	a	putBookIfAbsent
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	book	book
	m	(Lbjw;Lfk;Lbyj;)V	a	setPowered
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lbjw;Lfk;Lbyj;)V	b	updateNeighborAlways
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
	m	(Lbjw;Lfk;Lbyj;Lben;)V	b	putBook
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	book	book
	m	(Lbjw;Lfk;Lbyj;Z)V	b	setPowered
		p	0	world	world
		p	1	pos	pos
		p	2	state	state
		p	3	powered	powered
	m	(Lbyj;Lbjw;Lfk;)V	d	dropBook
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bsn	net/minecraft/block/LeverBlock
	f	Lbzb;	a	POWERED
	f	Lcwf;	b	NORTH_WALL_SHAPE
	f	Lcwf;	c	SOUTH_WALL_SHAPE
	f	Lcwf;	d	WEST_WALL_SHAPE
	f	Lcwf;	e	EAST_WALL_SHAPE
	f	Lcwf;	f	FLOOR_Z_AXIS_SHAPE
	f	Lcwf;	g	FLOOR_X_AXIS_SHAPE
	f	Lcwf;	h	CEILING_Z_AXIS_SHAPE
	f	Lcwf;	i	CEILING_X_AXIS_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjx;Lfk;F)V	a	spawnParticles
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	alpha	alpha
	m	(Lbyj;Lbjw;Lfk;)V	e	updateNeighbors
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
c	bso	net/minecraft/block/FluidBlock
	f	Lbzj;	a	LEVEL
	f	Lcoh;	b	fluid
	f	Ljava/util/List;	c	statesByLevel
	m	(Lcoh;Lbph$c;)V	<init>	<init>
		p	1	fluid	fluid
		p	2	settings	settings
	m	(Lbjx;Lfk;)V	a	playExtinguishSound
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lfk;Lbyj;)Z	a	receiveNeighborFluids
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	bsp	net/minecraft/block/FluidFillable
	m	(Lbjx;Lfk;Lbyj;Lcoj;)Z	a	tryFillWithFluid
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	fluidState	fluidState
	m	(Lbjg;Lfk;Lbyj;Lcoi;)Z	a	canFillWithFluid
		p	1	view	view
		p	2	pos	pos
		p	3	state	state
		p	4	fluid	fluid
c	bsq	net/minecraft/block/LogBlock
	f	Lcop;	b	endMaterialColor
	m	(Lcop;Lbph$c;)V	<init>	<init>
		p	1	endMaterialColor	endMaterialColor
		p	2	settings	settings
c	bsr	net/minecraft/block/LoomBlock
	f	Llp;	a	CONTAINER_NAME
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bss	net/minecraft/block/MagmaBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bst	net/minecraft/block/MelonBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bsu	net/minecraft/util/BlockMirror
	m	(II)I	a	mirror
		p	1	rotation	rotation
		p	2	fullTurn	fullTurn
	m	(Lfp;)Lbtu;	a	getRotation
	m	(Lfp;)Lfp;	b	apply
c	bsv	net/minecraft/block/MushroomPlantBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lxd;Lfk;Lbyj;Ljava/util/Random;)Z	a	trySpawningBigMushroom
		p	2	pos	pos
		p	3	state	state
		p	4	random	random
c	bsw	net/minecraft/block/MyceliumBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bsx	net/minecraft/block/NetherPortalBlock
	f	Lbzh;	a	AXIS
	f	Lcwf;	b	X_SHAPE
	f	Lcwf;	c	Z_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjx;Lfk;)Z	a	createPortalAt
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;)Lbsx$a;	b	createAreaHelper
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;)Lbyo$b;	c	findPortal
		p	1	world	world
c	bsx$a	net/minecraft/block/NetherPortalBlock$AreaHelper
	f	Lbjx;	a	world
	f	Lfp$a;	b	axis
	f	Lfp;	c	negativeDir
	f	Lfp;	d	positiveDir
	f	I	e	foundPortalBlocks
	f	Lfk;	f	lowerCorner
	f	I	g	height
	f	I	h	width
	m	(Lbjx;Lfk;Lfp$a;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	axis	axis
	m	()I	a	getHeight
	m	(Lbyj;)Z	a	validStateInsidePortal
		p	1	state	state
	m	(Lfk;Lfp;)I	a	distanceToPortalEdge
		p	1	pos	pos
		p	2	dir	dir
	m	()I	b	getWidth
	m	()I	c	findHeight
	m	()Z	d	isValid
	m	()V	e	createPortal
	m	()Z	f	wasAlreadyValid
	m	()Z	g	portalAlreadyExisted
c	bsy	net/minecraft/block/NetherWartBlock
	f	Lbzj;	a	AGE
	f	[Lcwf;	b	AGE_TO_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bsz	net/minecraft/block/NoteBlock
	f	Lbzh;	a	INSTRUMENT
	f	Lbzb;	b	POWERED
	f	Lbzj;	c	NOTE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;)V	a	playNote
		p	1	world	world
		p	2	pos	pos
c	bt	net/minecraft/predicate/NbtPredicate
	f	Lbt;	a	ANY
	f	Ljt;	b	tag
	m	(Ljt;)V	<init>	<init>
		p	1	tag	tag
	m	(Lben;)Z	a	test
		p	1	stack	stack
	m	(Lcom/google/gson/JsonElement;)Lbt;	a	fromJson
		p	0	json	json
	m	(Lkj;)Z	a	test
		p	1	tag	tag
	m	(Lakq;)Z	a	test
		p	1	entity	entity
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lakq;)Ljt;	b	entityToTag
		p	0	entity	entity
c	bta	net/minecraft/block/ObserverBlock
	f	Lbzb;	b	POWERED
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbyj;)V	a	updateNeighbors
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjx;Lfk;)V	a	scheduleTick
		p	1	world	world
		p	2	pos	pos
c	btb	net/minecraft/block/OreBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Ljava/util/Random;)I	a	getExperienceWhenMined
		p	1	random	random
c	btc	net/minecraft/block/ConnectingBlock
	f	Lbzb;	a	NORTH
	f	Lbzb;	b	EAST
	f	Lbzb;	c	SOUTH
	f	Lbzb;	d	WEST
	f	Lbzb;	e	UP
	f	Lbzb;	f	DOWN
	f	Ljava/util/Map;	g	FACING_PROPERTIES
	f	[Lcwf;	h	CONNECTIONS_TO_SHAPE
	f	[Lfp;	i	FACINGS
	m	(FLbph$c;)V	<init>	<init>
		p	1	radius	radius
		p	2	settings	settings
	m	(F)[Lcwf;	a	generateFacingsToShapeMap
		p	1	radius	radius
	m	(Lbyj;)I	h	getConnectionMask
		p	1	state	state
c	btd	net/minecraft/block/PlayerSkullBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bte	net/minecraft/block/WallPlayerSkullBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btf	net/minecraft/block/PotatoesBlock
	f	[Lcwf;	a	AGE_TO_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btg	net/minecraft/block/RedstoneBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bth	net/minecraft/block/PoweredRailBlock
	f	Lbzh;	c	SHAPE
	f	Lbzb;	d	POWERED
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;ZILbzn;)Z	a	isPoweredByOtherRails
		p	1	world	world
		p	2	pos	pos
		p	4	distance	distance
		p	5	shape	shape
	m	(Lbjw;Lfk;Lbyj;ZI)Z	a	isPoweredByOtherRails
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	boolean4	boolean4
		p	5	distance	distance
c	bti	net/minecraft/block/PressurePlateBlock
	f	Lbzb;	d	POWERED
	f	Lbti$a;	e	type
	m	(Lbti$a;Lbph$c;)V	<init>	<init>
		p	1	type	type
		p	2	settings	settings
c	bti$a	net/minecraft/block/PressurePlateBlock$ActivationRule
c	btj	net/minecraft/block/PumpkinBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btk	net/minecraft/block/RailBlock
	f	Lbzh;	c	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btl	net/minecraft/block/RailPlacementHelper
	f	Lbjw;	a	world
	f	Lfk;	b	pos
	f	Lboy;	c	block
	f	Lbyj;	d	state
	f	Z	e	allowCurves
	f	Ljava/util/List;	f	neighbors
	m	(Lbjw;Lfk;Lbyj;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbtl;)Z	a	isNeighbor
		p	1	other	other
	m	(ZZLbzn;)Lbtl;	a	updateBlockState
		p	1	powered	powered
		p	2	forceUpdate	forceUpdate
	m	(Lbzn;)V	a	computeNeighbors
		p	1	shape	shape
	m	()Ljava/util/List;	a	getNeighbors
	m	(Lfk;)Z	a	isVerticallyNearRail
		p	1	pos	pos
	m	(Lfk;)Lbtl;	b	method_10458
		p	1	pos	pos
	m	(Lbtl;)Z	b	method_10455
		p	1	placementHelper	placementHelper
	m	(Lbtl;)V	c	method_10461
		p	1	placementHelper	placementHelper
	m	()Lbyj;	c	getBlockState
	m	(Lfk;)Z	c	isNeighbor
		p	1	pos	pos
	m	(Lfk;)Z	d	method_10465
		p	1	pos	pos
c	btm	net/minecraft/block/RedstoneOreBlock
	f	Lbzb;	a	LIT
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;)V	a	spawnParticles
		p	0	world	world
		p	1	pos	pos
	m	(Lbyj;Lbjw;Lfk;)V	d	light
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
c	btn	net/minecraft/block/RedstoneWireBlock
	f	Lbzh;	a	WIRE_CONNECTION_NORTH
	f	Lbzh;	b	WIRE_CONNECTION_EAST
	f	Lbzh;	c	WIRE_CONNECTION_SOUTH
	f	Lbzh;	d	WIRE_CONNECTION_WEST
	f	Lbzj;	e	POWER
	f	Ljava/util/Map;	f	DIRECTION_TO_WIRE_CONNECTION_PROPERTY
	f	[Lcwf;	g	WIRE_CONNECTIONS_TO_SHAPE
	f	Z	h	wiresGivePower
	f	Ljava/util/Set;	i	affectedNeighbors
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;Lfp;)Lbzo;	a	getRenderConnectionType
		p	1	view	view
		p	2	pos	pos
		p	3	dir	dir
	m	(Lbyj;Lfp;)Z	a	connectsTo
		p	0	state	state
		p	1	dir	dir
	m	(Lbjw;Lfk;)V	a	updateNeighbors
		p	1	world	world
		p	2	pos	pos
	m	(ILbyj;)I	a	increasePower
		p	1	power	power
		p	2	state	state
	m	(Lbjw;Lfk;Lbyj;)Lbyj;	a	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjg;Lfk;)Z	a	connectsTo
		p	0	view	view
		p	1	pos	pos
	m	(Lbjg;Lfk;Lfp;)Z	b	couldConnectTo
		p	1	view	view
		p	2	pos	pos
		p	3	dir	dir
	m	(I)I	b	getWireColor
		p	0	powerLevel	powerLevel
	m	(Lbjw;Lfk;Lbyj;)Lbyj;	b	updateLogic
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbyj;)Z	h	connectsTo
		p	0	state	state
	m	(Lbyj;)I	i	getWireConnectionMask
		p	0	state	state
c	bto	net/minecraft/block/RedstoneLampBlock
	f	Lbzb;	a	LIT
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btp	net/minecraft/block/RedstoneTorchBlock
	f	Lbzb;	a	LIT
	f	Ljava/util/Map;	b	BURNOUT_MAP
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjw;Lfk;Ljava/util/Random;Z)V	a	update
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	random	random
		p	4	unpower	unpower
	m	(Lbjw;Lfk;Lbyj;)Z	a	shouldUnpower
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Z)Z	a	isBurnedOut
		p	0	world	world
		p	1	pos	pos
		p	2	addNew	addNew
c	btp$a	net/minecraft/block/RedstoneTorchBlock$BurnoutEntry
	f	Lfk;	a	pos
	f	J	b	time
	m	(Lfk;J)V	<init>	<init>
		p	1	pos	pos
		p	2	time	time
c	btq	net/minecraft/block/WallRedstoneTorchBlock
	f	Lbze;	b	FACING
	f	Lbzb;	c	LIT_2
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btr	net/minecraft/block/BlockRenderType
c	bts	net/minecraft/block/RepeaterBlock
	f	Lbzb;	a	LOCKED
	f	Lbzj;	d	DELAY
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btt	net/minecraft/block/PillarBlock
	f	Lbzh;	a	AXIS
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	btu	net/minecraft/util/BlockRotation
	m	(Lbtu;)Lbtu;	a	rotate
		p	1	rotation	rotation
	m	(Ljava/util/Random;)Lbtu;	a	random
		p	0	random	random
	m	(II)I	a	rotate
		p	1	rotation	rotation
		p	2	fullTurn	fullTurn
	m	(Lfp;)Lfp;	a	rotate
		p	1	direction	direction
	m	(Ljava/util/Random;)Ljava/util/List;	b	randomRotationOrder
		p	0	random	random
c	btv	net/minecraft/block/SandBlock
	f	I	a	color
	m	(ILbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
c	btw	net/minecraft/block/SaplingBlock
	f	Lbzj;	a	STAGE
	f	Lcwf;	b	SHAPE
	f	Lbxs;	c	generator
	m	(Lbxs;Lbph$c;)V	<init>	<init>
		p	1	generator	generator
		p	2	settings	settings
	m	(Lxd;Lfk;Lbyj;Ljava/util/Random;)V	a	generate
c	btx	net/minecraft/block/ScaffoldingBlock
	f	Lbzj;	a	DISTANCE
	f	Lbzb;	b	WATERLOGGED
	f	Lbzb;	c	BOTTOM
	f	Lcwf;	d	NORMAL_OUTLINE_SHAPE
	f	Lcwf;	e	BOTTOM_OUTLINE_SHAPE
	f	Lcwf;	f	COLLISION_SHAPE
	f	Lcwf;	g	OUTLINE_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;)I	a	calculateDistance
		p	0	world	world
		p	1	pos	pos
	m	(Lbjg;Lfk;I)Z	a	shouldBeBottom
		p	1	world	world
		p	2	pos	pos
		p	3	distance	distance
c	bty	net/minecraft/block/SeaPickleBlock
	f	Lbzj;	a	PICKLES
	f	Lbzb;	b	WATERLOGGED
	f	Lcwf;	c	ONE_PICKLE_SHAPE
	f	Lcwf;	d	TWO_PICKLES_SHAPE
	f	Lcwf;	e	THREE_PICKLES_SHAPE
	f	Lcwf;	f	FOUR_PICKLES_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;)Z	h	isDry
		p	1	state	state
c	btz	net/minecraft/block/SeagrassBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bu	net/minecraft/advancement/criterion/NetherTravelCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lcvl;)V	a	trigger
		p	1	player	player
		p	2	enteredPos	enteredPos
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbu$a;	b	conditionsFromJson
c	bu$a	net/minecraft/advancement/criterion/NetherTravelCriterion$Conditions
	f	Lbp;	a	enteredPos
	f	Lbp;	b	exitedPos
	f	Lat;	c	distance
	m	(Lbp;Lbp;Lat;)V	<init>	<init>
		p	1	entered	entered
		p	2	exited	exited
		p	3	distance	distance
	m	(Lat;)Lbu$a;	a	distance
		p	0	distance	distance
	m	(Lxd;Lcvl;DDD)Z	a	matches
		p	1	world	world
		p	2	enteredPos	enteredPos
		p	3	exitedPosX	exitedPosX
		p	5	exitedPosY	exitedPosY
		p	7	exitedPosZ	exitedPosZ
c	bua	net/minecraft/block/ReplaceableTallPlantBlock
	f	Lbzh;	b	HALF
c	bub	net/minecraft/block/ShulkerBoxBlock
	f	Lbzh;	a	FACING
	f	Lsm;	b	CONTENTS
	f	Lbdj;	c	color
	m	(Lbdj;Lbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	(Lbdj;)Lbph;	a	get
		p	0	dyeColor	dyeColor
	m	(Lbdj;)Lben;	b	getItemStack
		p	0	color	color
	m	(Lbei;)Lbdj;	b	getColor
		p	0	item	item
	m	()Lbdj;	c	getColor
	m	(Lbph;)Lbdj;	d	getColor
		p	0	block	block
c	buc	net/minecraft/block/AbstractSignBlock
	f	Lbzb;	a	WATERLOGGED
	f	Lcwf;	b	SHAPE
	f	Lbzs;	c	type
	m	(Lbph$c;Lbzs;)V	<init>	<init>
		p	1	settings	settings
		p	2	type	type
	m	()Lbzs;	c	getSignType
c	bud	net/minecraft/block/Waterloggable
c	bue	net/minecraft/block/SkullBlock
	f	Lbzj;	a	ROTATION
	f	Lcwf;	b	SHAPE
c	bue$a	net/minecraft/block/SkullBlock$SkullType
c	bue$b	net/minecraft/block/SkullBlock$Type
c	buf	net/minecraft/block/SlabBlock
	f	Lbzh;	a	TYPE
	f	Lbzb;	b	WATERLOGGED
	f	Lcwf;	c	BOTTOM_SHAPE
	f	Lcwf;	d	TOP_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bug	net/minecraft/block/SlimeBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	buh	net/minecraft/block/SmithingTableBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bui	net/minecraft/block/SmokerBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	buj	net/minecraft/block/SnowBlock
	f	Lbzj;	a	LAYERS
	f	[Lcwf;	b	LAYERS_TO_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	buk	net/minecraft/block/SnowyBlock
	f	Lbzb;	a	SNOWY
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bul	net/minecraft/block/SoulSandBlock
	f	Lcwf;	a	COLLISION_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bum	net/minecraft/sound/BlockSoundGroup
	f	Laah;	A	stepSound
	f	Laah;	B	placeSound
	f	Laah;	C	hitSound
	f	Laah;	D	fallSound
	f	Lbum;	a	WOOD
	f	Lbum;	b	GRAVEL
	f	Lbum;	c	GRASS
	f	Lbum;	d	STONE
	f	Lbum;	e	METAL
	f	Lbum;	f	GLASS
	f	Lbum;	g	WOOL
	f	Lbum;	h	SAND
	f	Lbum;	i	SNOW
	f	Lbum;	j	LADDER
	f	Lbum;	k	ANVIL
	f	Lbum;	l	SLIME
	f	Lbum;	m	HONEY
	f	Lbum;	n	WET_GRASS
	f	Lbum;	o	CORAL
	f	Lbum;	p	BAMBOO
	f	Lbum;	q	BAMBOO_SAPLING
	f	Lbum;	r	SCAFFOLDING
	f	Lbum;	s	SWEET_BERRY_BUSH
	f	Lbum;	t	CROP
	f	Lbum;	u	STEM
	f	Lbum;	v	NETHER_WART
	f	Lbum;	w	LANTERN
	f	F	x	volume
	f	F	y	pitch
	f	Laah;	z	breakSound
	m	(FFLaah;Laah;Laah;Laah;Laah;)V	<init>	<init>
		p	1	volume	volume
		p	2	pitch	pitch
		p	3	breakSound	breakSound
		p	4	stepSound	stepSound
		p	5	placeSound	placeSound
		p	6	hitSound	hitSound
		p	7	fallSound	fallSound
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Laah;	c	getBreakSound
	m	()Laah;	d	getStepSound
	m	()Laah;	e	getPlaceSound
	m	()Laah;	f	getHitSound
	m	()Laah;	g	getFallSound
c	bun	net/minecraft/block/SpawnerBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	buo	net/minecraft/block/SpongeBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;)V	a	update
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lfk;)Z	b	absorbWater
		p	1	world	world
		p	2	pos	pos
c	bup	net/minecraft/block/SpreadableBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;Lbjz;Lfk;)Z	b	canSurvive
		p	0	state	state
		p	2	pos	pos
	m	(Lbyj;Lbjz;Lfk;)Z	c	canSpread
		p	0	state	state
		p	2	pos	pos
c	buq	net/minecraft/block/StainedGlassBlock
	f	Lbdj;	a	color
	m	(Lbdj;Lbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
c	bur	net/minecraft/block/StainedGlassPaneBlock
	f	Lbdj;	i	color
	m	(Lbdj;Lbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
c	bus	net/minecraft/block/StairsBlock
	f	[Lcwf;	A	BOTTOM_SHAPES
	f	[I	B	SHAPE_INDICES
	f	Lbph;	C	baseBlock
	f	Lbyj;	D	baseBlockState
	f	Lbze;	a	FACING
	f	Lbzh;	b	HALF
	f	Lbzh;	c	SHAPE
	f	Lbzb;	d	WATERLOGGED
	f	Lcwf;	e	TOP_SHAPE
	f	Lcwf;	f	BOTTOM_SHAPE
	f	Lcwf;	g	BOTTOM_NORTH_WEST_CORNER_SHAPE
	f	Lcwf;	h	BOTTOM_SOUTH_WEST_CORNER_SHAPE
	f	Lcwf;	i	TOP_NORTH_WEST_CORNER_SHAPE
	f	Lcwf;	j	TOP_SOUTH_WEST_CORNER_SHAPE
	f	Lcwf;	k	BOTTOM_NORTH_EAST_CORNER_SHAPE
	f	Lcwf;	w	BOTTOM_SOUTH_EAST_CORNER_SHAPE
	f	Lcwf;	x	TOP_NORTH_EAST_CORNER_SHAPE
	f	Lcwf;	y	TOP_SOUTH_EAST_CORNER_SHAPE
	f	[Lcwf;	z	TOP_SHAPES
	m	(Lbyj;Lbph$c;)V	<init>	<init>
		p	1	baseBlockState	baseBlockState
		p	2	settings	settings
	m	(Lcwf;Lcwf;Lcwf;Lcwf;Lcwf;)[Lcwf;	a	composeShapes
		p	0	base	base
		p	1	northWest	northWest
		p	2	northEast	northEast
		p	3	southWest	southWest
		p	4	southEast	southEast
	m	(Lcwf;Lcwf;Lcwf;Lcwf;Lcwf;I)Lcwf;	a	method_10674
		p	5	i	i
	m	(ILcwf;Lcwf;Lcwf;Lcwf;Lcwf;)Lcwf;	a	composeShape
		p	0	i	i
		p	1	base	base
		p	2	northWest	northWest
		p	3	northEast	northEast
		p	4	southWest	southWest
		p	5	southEast	southEast
	m	(Lbyj;Lbjg;Lfk;Lfp;)Z	e	method_10678
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	dir	dir
	m	(Lbyj;)Z	h	isStairs
		p	0	state	state
	m	(Lbyj;)I	i	getShapeIndexIndex
		p	1	state	state
	m	(Lbyj;Lbjg;Lfk;)Lbzq;	n	method_10675
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
c	but	net/minecraft/block/SignBlock
	f	Lbzj;	c	ROTATION
	m	(Lbph$c;Lbzs;)V	<init>	<init>
		p	1	settings	settings
c	buu	net/minecraft/block/StemBlock
	f	Lbzj;	a	AGE
	f	[Lcwf;	b	AGE_TO_SHAPE
	f	Lbuv;	c	gourdBlock
	m	(Lbuv;Lbph$c;)V	<init>	<init>
		p	1	gourdBlock	gourdBlock
		p	2	settings	settings
	m	()Lbei;	c	getPickItem
	m	()Lbuv;	d	getGourdBlock
c	buv	net/minecraft/block/GourdBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	()Lbuu;	c	getStem
	m	()Lbom;	d	getAttachedStem
c	buw	net/minecraft/block/StoneButtonBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bux	net/minecraft/block/StonecutterBlock
	f	Lbze;	a	FACING
	f	Lcwf;	b	SHAPE
	f	Llp;	c	CONTAINER_NAME
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	buy	net/minecraft/block/StructureBlock
	f	Lbzh;	a	MODE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbxl;)V	a	doAction
		p	1	blockEntity	blockEntity
c	buz	net/minecraft/block/StructureVoidBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bv	net/minecraft/advancement/criterion/PlacedBlockCriterion
	f	Lsm;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbph;	a	getBlock
		p	0	obj	obj
	m	(Lxe;Lfk;Lben;)V	a	trigger
		p	1	player	player
		p	2	blockPos	blockPos
		p	3	stack	stack
	m	(Lbph;Ljava/lang/String;)V	a	method_22490
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbv$a;	b	conditionsFromJson
c	bv$a	net/minecraft/advancement/criterion/PlacedBlockCriterion$Conditions
	f	Lbph;	a	block
	f	Lcc;	b	state
	f	Lbp;	c	location
	f	Lbj;	d	item
	m	(Lbph;Lcc;Lbp;Lbj;)V	<init>	<init>
		p	1	block	block
		p	2	state	state
		p	3	location	location
		p	4	item	item
	m	(Lbyj;Lfk;Lxd;Lben;)Z	a	matches
		p	1	state	state
		p	2	pos	pos
		p	3	world	world
		p	4	stack	stack
	m	(Lbph;)Lbv$a;	a	block
		p	0	block	block
c	bva	net/minecraft/block/SugarCaneBlock
	f	Lbzj;	a	AGE
	f	Lcwf;	b	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvb	net/minecraft/block/SweetBerryBushBlock
	f	Lbzj;	a	AGE
	f	Lcwf;	b	SMALL_SHAPE
	f	Lcwf;	c	LARGE_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvc	net/minecraft/block/TallFlowerBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvd	net/minecraft/block/FernBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bve	net/minecraft/block/TallSeagrassBlock
	f	Lbzh;	c	HALF
	f	Lcwf;	d	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvf	net/minecraft/block/TntBlock
	f	Lbzb;	a	UNSTABLE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lakz;)V	a	primeTnt
		p	0	world	world
		p	1	pos	pos
		p	2	igniter	igniter
	m	(Lbjw;Lfk;)V	a	primeTnt
		p	0	world	world
		p	1	pos	pos
c	bvg	net/minecraft/block/TorchBlock
	f	Lcwf;	d	BOUNDING_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvh	net/minecraft/block/TrapdoorBlock
	f	Lbzb;	a	OPEN
	f	Lbzh;	b	HALF
	f	Lbzb;	c	POWERED
	f	Lbzb;	d	WATERLOGGED
	f	Lcwf;	e	EAST_SHAPE
	f	Lcwf;	f	WEST_SHAPE
	f	Lcwf;	g	SOUTH_SHAPE
	f	Lcwf;	h	NORTH_SHAPE
	f	Lcwf;	i	OPEN_BOTTOM_SHAPE
	f	Lcwf;	j	OPEN_TOP_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Layj;Lbjw;Lfk;Z)V	a	playToggleSound
		p	1	player	player
		p	2	world	world
		p	3	pos	pos
		p	4	open	open
c	bvi	net/minecraft/block/TrappedChestBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvj	net/minecraft/block/TripwireBlock
	f	Lbzb;	a	POWERED
	f	Lbzb;	b	ATTACHED
	f	Lbzb;	c	DISARMED
	f	Lbzb;	d	NORTH
	f	Lbzb;	e	EAST
	f	Lbzb;	f	SOUTH
	f	Lbzb;	g	WEST
	f	Lcwf;	h	ATTACHED_SHAPE
	f	Lcwf;	i	DETACHED_SHAPE
	f	Ljava/util/Map;	j	FACING_PROPERTIES
	f	Lbvk;	k	hookBlock
	m	(Lbvk;Lbph$c;)V	<init>	<init>
		p	1	hookBlock	hookBlock
		p	2	settings	settings
	m	(Lbjw;Lfk;)V	a	updatePowered
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;Lfp;)Z	a	shouldConnectTo
		p	1	state	state
		p	2	facing	facing
	m	(Lbjw;Lfk;Lbyj;)V	a	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
c	bvk	net/minecraft/block/TripwireHookBlock
	f	Lbze;	a	FACING
	f	Lbzb;	b	POWERED
	f	Lbzb;	c	ATTACHED
	f	Lcwf;	d	SOUTH_SHAPE
	f	Lcwf;	e	NORTH_SHAPE
	f	Lcwf;	f	EAST_SHAPE
	f	Lcwf;	g	WEST_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbyj;ZZILbyj;)V	a	update
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	beingRemoved	beingRemoved
	m	(Lbjw;Lfk;ZZZZ)V	a	playSound
		p	1	world	world
		p	2	pos	pos
		p	3	attached	attached
		p	4	on	on
		p	5	detached	detached
		p	6	off	off
	m	(Lbjw;Lfk;Lfp;)V	a	updateNeighborsOnAxis
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
c	bvl	net/minecraft/block/TurtleEggBlock
	f	Lbzj;	a	HATCH
	f	Lbzj;	b	EGGS
	f	Lcwf;	c	SMALL_SHAPE
	f	Lcwf;	d	LARGE_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;)Z	a	isSand
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lakq;)Z	a	breaksEgg
	m	(Lbjw;Lfk;Lakq;I)V	a	tryBreakEgg
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
		p	4	inverseChance	inverseChance
	m	(Lbjw;Lfk;Lbyj;)V	a	breakEgg
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;)Z	a	shouldHatchProgress
		p	1	world	world
c	bvm	net/minecraft/block/VineBlock
	f	Lbzb;	a	UP
	f	Lbzb;	b	NORTH
	f	Lbzb;	c	EAST
	f	Lbzb;	d	SOUTH
	f	Lbzb;	e	WEST
	f	Ljava/util/Map;	f	FACING_PROPERTIES
	f	Lcwf;	g	UP_SHAPE
	f	Lcwf;	h	WEST_SHAPE
	f	Lcwf;	i	EAST_SHAPE
	f	Lcwf;	j	NORTH_SHAPE
	f	Lcwf;	k	SOUTH_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lfp;)Lbzb;	a	getFacingProperty
		p	0	direction	direction
	m	(Lbjg;Lfk;Lfp;)Z	a	shouldConnectTo
		p	0	world	world
		p	1	pos	pos
		p	2	direction	direction
	m	(Lbjg;Lfk;)Z	a	canGrowAt
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;Lbyj;Ljava/util/Random;)Lbyj;	a	getGrownState
		p	1	above	above
		p	2	state	state
		p	3	random	random
	m	(Lbjg;Lfk;Lfp;)Z	b	shouldHaveSide
		p	1	world	world
		p	2	pos	pos
		p	3	side	side
	m	(Lbyj;)Z	h	hasAdjacentBlocks
		p	1	state	state
	m	(Lbyj;)I	i	getAdjacentBlockCount
		p	1	state	state
	m	(Lbyj;Lbjg;Lfk;)Lbyj;	n	getPlacementShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lbyj;)Z	r	hasHorizontalSide
		p	1	state	state
c	bvn	net/minecraft/block/WallBannerBlock
	f	Lbze;	a	FACING
	f	Ljava/util/Map;	b	FACING_TO_SHAPE
c	bvo	net/minecraft/block/WallBlock
	f	Lbzb;	i	UP
	f	[Lcwf;	j	UP_OUTLINE_SHAPES
	f	[Lcwf;	k	UP_COLLISION_SHAPES
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;ZLfp;)Z	a	shouldConnectTo
		p	1	state	state
		p	2	faceFullSquare	faceFullSquare
		p	3	side	side
c	bvp	net/minecraft/block/WallSignBlock
	f	Lbze;	c	FACING
	f	Ljava/util/Map;	d	FACING_TO_SHAPE
	m	(Lbph$c;Lbzs;)V	<init>	<init>
		p	1	settings	settings
c	bvq	net/minecraft/block/WallSkullBlock
	f	Lbze;	a	FACING
	f	Ljava/util/Map;	b	FACING_TO_SHAPE
c	bvr	net/minecraft/block/WallTorchBlock
	f	Lbze;	a	FACING
	f	Ljava/util/Map;	b	BOUNDING_SHAPES
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;)Lcwf;	h	getBoundingShape
		p	0	state	state
c	bvs	net/minecraft/block/LilyPadBlock
	f	Lcwf;	a	SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvt	net/minecraft/block/CobwebBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvu	net/minecraft/block/WeightedPressurePlateBlock
	f	Lbzj;	d	POWER
	f	I	e	weight
	m	(ILbph$c;)V	<init>	<init>
		p	1	weight	weight
		p	2	settings	settings
c	bvv	net/minecraft/block/WetSpongeBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvw	net/minecraft/block/WitherRoseBlock
	m	(Laki;Lbph$c;)V	<init>	<init>
		p	1	effect	effect
		p	2	settings	settings
c	bvx	net/minecraft/block/WitherSkullBlock
	f	Lbyo;	c	witherBossPattern
	f	Lbyo;	d	witherDispenserPattern
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjw;Lfk;Lbxi;)V	a	onPlaced
		p	0	world	world
		p	1	pos	pos
		p	2	blockEntity	blockEntity
	m	(Lbjw;Lfk;Lben;)Z	b	canDispense
		p	0	world	world
		p	1	pos	pos
		p	2	stack	stack
	m	()Lbyo;	c	getWitherBossPattern
	m	()Lbyo;	d	getWitherDispenserPattern
c	bvy	net/minecraft/block/WallWitherSkullBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bvz	net/minecraft/block/WoodButtonBlock
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
c	bw	net/minecraft/advancement/criterion/PlayerHurtEntityCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lakq;Lajz;FFZ)V	a	trigger
		p	1	player	player
		p	2	entity	entity
		p	3	source	source
		p	4	dealt	dealt
		p	5	taken	taken
		p	6	blocked	blocked
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbw$a;	b	conditionsFromJson
c	bw$a	net/minecraft/advancement/criterion/PlayerHurtEntityCriterion$Conditions
	f	Lar;	a	damage
	f	Lbb;	b	entity
	m	(Lar;Lbb;)V	<init>	<init>
		p	1	damage	damage
		p	2	entity	entity
	m	(Lar$a;)Lbw$a;	a	create
	m	(Lxe;Lakq;Lajz;FFZ)Z	a	matches
		p	1	player	player
		p	3	source	source
		p	4	dealt	dealt
		p	5	taken	taken
		p	6	blocked	blocked
c	bwa	net/minecraft/block/CarpetBlock
	f	Lcwf;	a	SHAPE
	f	Lbdj;	b	color
	m	(Lbdj;Lbph$c;)V	<init>	<init>
		p	1	color	color
		p	2	settings	settings
	m	()Lbdj;	c	getColor
c	bwb	net/minecraft/block/entity/AbstractFurnaceBlockEntity
	f	Lfy;	a	inventory
	f	Lbaw;	b	propertyDelegate
	f	Lbgz;	c	recipeType
	f	[I	g	TOP_SLOTS
	f	[I	h	BOTTOM_SLOTS
	f	[I	i	SIDE_SLOTS
	f	I	j	burnTime
	f	I	k	fuelTime
	f	I	l	cookTime
	f	I	m	cookTimeTotal
	f	Ljava/util/Map;	n	recipesUsed
	m	(Ljava/util/Map;Lbjv;I)V	a	addFuel
		p	0	fuelTimes	fuelTimes
		p	1	item	item
		p	2	fuelTime	fuelTime
	m	(Ljava/util/Map;Laaz;I)V	a	addFuel
		p	0	fuelTimes	fuelTimes
		p	1	tag	tag
		p	2	fuelTime	fuelTime
	m	(Lben;)I	a	getFuelTime
		p	1	fuel	fuel
	m	(Layj;IF)V	a	dropExperience
		p	0	player	player
		p	1	totalExperience	totalExperience
		p	2	experienceFraction	experienceFraction
	m	(Lbgw;)Z	b	canAcceptRecipeOutput
		p	1	recipe	recipe
	m	(Lben;)Z	b	canUseAsFuel
		p	0	stack	stack
	m	(Lbgw;)V	c	craftRecipe
		p	1	recipe	recipe
	m	(Layj;)V	d	dropExperience
		p	1	player	player
	m	()Ljava/util/Map;	f	createFuelTimeMap
	m	()I	h	getCookTime
	m	()Z	j	isBurning
c	bwc	net/minecraft/block/entity/BannerBlockEntity
	f	Llf;	a	customName
	f	Lbdj;	b	baseColor
	f	Ljz;	c	patternListTag
	f	Z	g	patternListTagRead
	f	Ljava/util/List;	h	patterns
	m	(Lbdj;)V	<init>	<init>
		p	1	baseColor	baseColor
	m	(Lben;Lbdj;)V	a	readFrom
		p	1	stack	stack
		p	2	baseColor	baseColor
	m	(Lbyj;)Lben;	a	getPickStack
	m	(Llf;)V	a	setCustomName
		p	1	customName	customName
	m	(Ljava/util/function/Supplier;)Lbdj;	a	getColorForState
	m	(Lben;)I	b	getPatternCount
		p	0	stack	stack
	m	(Lben;)V	c	loadFromItemStack
		p	0	stack	stack
	m	()Ljava/util/List;	c	getPatterns
c	bwd	net/minecraft/block/entity/BannerPattern
	f	I	O	COUNT
	f	I	P	LOOM_APPLICABLE_COUNT
	f	Ljava/lang/String;	Q	name
	f	Ljava/lang/String;	R	id
	f	[Ljava/lang/String;	S	recipePattern
	f	Lben;	T	baseStack
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3	name	name
		p	4	id	id
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lben;)V	<init>	<init>
		p	3	name	name
		p	4	id	id
		p	5	baseStack	baseStack
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3	name	name
		p	4	id	id
		p	5	recipePattern0	recipePattern0
		p	6	recipePattern1	recipePattern1
		p	7	recipePattern2	recipePattern2
	m	(Z)Lsm;	a	getSpriteId
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbwd;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	b	getId
c	bwd$a	net/minecraft/block/entity/BannerPattern$Patterns
	f	Ljava/util/List;	a	entries
	m	()Ljz;	a	toTag
	m	(Lbwd;Lbdj;)Lbwd$a;	a	add
		p	1	pattern	pattern
		p	2	color	color
c	bwe	net/minecraft/block/entity/BarrelBlockEntity
	f	Lfy;	a	inventory
	f	I	b	viewerCount
	m	(Lbyj;Laah;)V	a	playSound
	m	(Lbyj;Z)V	a	setOpen
		p	1	state	state
		p	2	open	open
	m	()V	h	tick
	m	()V	j	scheduleUpdate
c	bwf	net/minecraft/block/entity/LockableContainerBlockEntity
	f	Lajn;	a	lock
	f	Llf;	b	customName
	m	(Layj;Lajn;Llf;)Z	a	checkUnlocked
		p	0	player	player
		p	1	lock	lock
		p	2	containerName	containerName
	m	(ILayi;)Lban;	a	createContainer
	m	(Llf;)V	a	setCustomName
		p	1	customName	customName
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
	m	(Layj;)Z	e	checkUnlocked
		p	1	player	player
	m	()Llf;	g	getContainerName
c	bwg	net/minecraft/block/entity/BeaconBlockEntity
	f	[[Laki;	a	EFFECTS_BY_LEVEL
	f	Ljava/util/Set;	b	EFFECTS
	f	Ljava/util/List;	c	beamSegments
	f	I	h	level
	f	Laki;	j	primary
	f	Laki;	k	secondary
	f	Llf;	l	customName
	f	Lajn;	m	lock
	f	Lbaw;	n	propertyDelegate
	m	(Laah;)V	a	playSound
	m	(III)V	a	updateLevel
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Llf;)V	a	setCustomName
	m	(I)Laki;	b	getPotionEffectById
		p	0	id	id
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
	m	()Ljava/util/List;	f	getBeamSegments
	m	()I	h	getLevel
	m	()V	j	applyPlayerEffects
c	bwg$a	net/minecraft/block/entity/BeaconBlockEntity$BeamSegment
	f	[F	a	color
	f	I	b	height
	m	([F)V	<init>	<init>
		p	1	color	color
	m	()V	a	increaseHeight
	m	()[F	b	getColor
	m	()I	c	getHeight
c	bwh	net/minecraft/block/entity/BedBlockEntity
	f	Lbdj;	a	color
	m	(Lbdj;)V	a	setColor
		p	1	color	color
	m	()Lbdj;	d	getColor
c	bwi	net/minecraft/block/entity/BeehiveBlockEntity
	f	Ljava/util/List;	a	bees
	f	Lfk;	b	flowerPos
	m	(Lbyj;Ljava/util/List;Lbwi$b;Lbwi$a;)Z	a	method_21854
		p	4	bee	bee
	m	(Lbyj;Lbwi$b;)Ljava/util/List;	a	tryReleaseBee
		p	1	state	state
	m	(Lbyj;)I	a	getHoneyLevel
		p	0	state	state
	m	(Lakq;ZI)V	a	tryEnterHive
		p	1	entity	entity
		p	2	hasNectar	hasNectar
		p	3	ticksInHive	ticksInHive
	m	(Lakq;Z)V	a	tryEnterHive
		p	1	entity	entity
		p	2	hasNectar	hasNectar
	m	(Lbyj;Ljt;Ljava/util/List;Lbwi$b;)Z	a	releaseBee
		p	1	state	state
		p	2	compoundTag	compoundTag
	m	(Layj;Lbyj;Lbwi$b;)V	a	angerBees
		p	1	player	player
		p	2	state	state
	m	()Z	d	isNearFire
	m	()Z	f	hasNoBees
	m	()Z	h	isFullOfBees
	m	()I	j	getBeeCount
	m	()Z	k	isSmoked
	m	()V	l	sendDebugData
	m	()Ljz;	m	getBees
	m	()Z	x	hasFlowerPos
	m	()V	y	tickBees
c	bwi$a	net/minecraft/block/entity/BeehiveBlockEntity$Bee
	f	Ljt;	a	entityData
	f	I	b	ticksInHive
	f	I	c	minOccupationTIcks
	m	(Ljt;II)V	<init>	<init>
		p	1	entityData	entityData
		p	2	ticksInHive	ticksInHive
		p	3	minOccupationTicks	minOccupationTicks
c	bwi$b	net/minecraft/block/entity/BeehiveBlockEntity$BeeState
c	bwj	net/minecraft/block/entity/BellBlockEntity
	f	I	a	ringTicks
	f	Z	b	isRinging
	f	Lfp;	c	lastSideHit
	m	(Lfp;)V	a	activate
	m	()V	d	playResonateSound
c	bwk	net/minecraft/block/entity/BlastFurnaceBlockEntity
c	bwl	net/minecraft/block/entity/BlockEntity
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbwm;	b	type
	f	Lbyj;	c	cachedState
	f	Lbjw;	d	world
	f	Lfk;	e	pos
	f	Z	f	removed
	f	Z	g	invalid
	m	(Lbwm;)V	<init>	<init>
		p	1	type	type
	m	(Lbsu;)V	a	applyMirror
	m	(Lfk;)V	a	setPos
	m	(Li;)V	a	populateCrashReport
	m	(Lbtu;)V	a	applyRotation
	m	(Lbjw;Lfk;)V	a	setLocation
		p	2	pos	pos
	m	()Lmh;	a	toUpdatePacket
	m	(DDD)D	a	getSquaredDistance
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ljt;)V	a	fromTag
		p	1	tag	tag
	m	(II)Z	a_	onBlockAction
	m	()V	ab_	markRemoved
	m	()Ljt;	b	toInitialChunkDataTag
	m	(Ljt;)Ljt;	b	toTag
		p	1	tag	tag
	m	(Ljt;)Lbwl;	c	createFromTag
	m	(Ljt;)Ljt;	d	writeIdentifyingData
	m	()V	e	markDirty
	m	()D	i	getSquaredRenderDistance
	m	()Z	n	hasWorld
	m	()Lfk;	o	getPos
	m	()Lbyj;	p	getCachedState
	m	()Z	q	isRemoved
	m	()V	r	cancelRemoval
	m	()V	s	resetBlock
	m	()Z	t	shouldNotCopyTagFromItem
	m	()Lbwm;	u	getType
	m	()V	v	markInvalid
	m	()Lbjw;	w	getWorld
c	bwm	net/minecraft/block/entity/BlockEntityType
	f	Lorg/apache/logging/log4j/Logger;	H	LOGGER
	f	Ljava/util/function/Supplier;	I	supplier
	f	Ljava/util/Set;	J	blocks
	f	Lcom/mojang/datafixers/types/Type;	K	type
	m	(Ljava/util/function/Supplier;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V	<init>	<init>
		p	1	supplier	supplier
		p	2	blocks	blocks
		p	3	type	type
	m	()Lbwl;	a	instantiate
	m	(Lbph;)Z	a	supports
		p	1	block	block
	m	(Lbjg;Lfk;)Lbwl;	a	get
		p	1	world	world
		p	2	pos	pos
	m	(Ljava/lang/String;Lbwm$a;)Lbwm;	a	create
	m	(Lbwm;)Lsm;	a	getId
c	bwm$a	net/minecraft/block/entity/BlockEntityType$Builder
	f	Ljava/util/function/Supplier;	a	supplier
	f	Ljava/util/Set;	b	blocks
	m	(Ljava/util/function/Supplier;Ljava/util/Set;)V	<init>	<init>
		p	1	supplier	supplier
		p	2	blocks	blocks
	m	(Lcom/mojang/datafixers/types/Type;)Lbwm;	a	build
	m	(Ljava/util/function/Supplier;[Lbph;)Lbwm$a;	a	create
		p	0	supplier	supplier
		p	1	blocks	blocks
c	bwn	net/minecraft/block/entity/BrewingStandBlockEntity
	f	Lbaw;	a	propertyDelegate
	f	[I	b	TOP_SLOTS
	f	[I	c	BOTTOM_SLOTS
	f	[I	g	SIDE_SLOTS
	f	Lfy;	h	inventory
	f	I	i	brewTime
	f	[Z	j	slotsEmptyLastTick
	f	Lbei;	k	itemBrewing
	f	I	l	fuel
	m	()[Z	f	getSlotsEmpty
	m	()Z	h	canCraft
	m	()V	j	craft
c	bwo	net/minecraft/block/entity/CampfireBlockEntity
	f	Lfy;	a	itemsBeingCooked
	f	[I	b	cookingTimes
	f	[I	c	cookingTotalTimes
	m	(Lben;I)Z	a	addItem
		p	1	item	item
		p	2	integer	integer
	m	(Lben;)Ljava/util/Optional;	a	getRecipeFor
		p	1	item	item
	m	(Ljt;)Ljt;	d	saveInitialChunkData
		p	1	tag	tag
	m	()Lfy;	d	getItemsBeingCooked
	m	()V	f	spawnItemsBeingCooked
	m	()V	h	updateItemsBeingCooked
	m	()V	j	spawnSmokeParticles
	m	()V	k	updateListeners
c	bwp	net/minecraft/block/entity/ChestBlockEntity
	f	F	a	animationAngle
	f	F	b	lastAnimationAngle
	f	I	c	viewerCount
	f	Lfy;	i	inventory
	f	I	j	ticksOpen
	m	(Lbwp;Lbwp;)V	a	copyInventory
		p	0	from	from
		p	1	to	to
	m	(Lbjw;Lbwf;III)I	a	countViewers
		p	0	world	world
		p	1	container	container
		p	2	ticksOpen	ticksOpen
		p	3	x	x
		p	4	y	y
	m	(Lbjw;Lbwf;IIIII)I	a	tickViewerCount
		p	0	world	world
		p	1	blockEntity	blockEntity
		p	2	ticksOpen	ticksOpen
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	viewerCount	viewerCount
	m	(Laah;)V	a	playSound
	m	(Lbjg;Lfk;)I	a	getPlayersLookingInChestCount
		p	0	world	world
		p	1	pos	pos
	m	()V	h	onInvOpenOrClose
c	bwq	net/minecraft/block/entity/CommandBlockBlockEntity
	f	Z	a	powered
	f	Z	b	auto
	f	Z	c	conditionMet
	f	Z	g	needsUpdatePacket
	f	Lbjc;	h	commandExecutor
	m	(Z)V	a	setPowered
	m	(Z)V	b	setAuto
	m	(Z)V	c	setNeedsUpdatePacket
		p	1	needsUpdatePacket	needsUpdatePacket
	m	()Lbjc;	d	getCommandExecutor
	m	()Z	f	isPowered
	m	()Z	g	isAuto
	m	()Z	j	isConditionMet
	m	()Z	k	updateConditionMet
	m	()Z	l	needsUpdatePacket
	m	()Lbwq$a;	m	getCommandBlockType
	m	()Z	x	isConditionalCommandBlock
c	bwq$a	net/minecraft/block/entity/CommandBlockBlockEntity$Type
c	bwr	net/minecraft/block/entity/ComparatorBlockEntity
	f	I	a	outputSignal
	m	(I)V	a	setOutputSignal
		p	1	outputSignal	outputSignal
	m	()I	d	getOutputSignal
c	bws	net/minecraft/block/entity/ConduitBlockEntity
	f	I	a	ticks
	f	[Lbph;	b	ACTIVATING_BLOCKS
	f	F	c	ticksActive
	f	Z	g	active
	f	Z	h	eyeOpen
	f	Ljava/util/List;	i	activatingBlocks
	f	Lakz;	j	targetEntity
	f	Ljava/util/UUID;	k	targetUuid
	f	J	l	nextAmbientSoundTime
	m	(F)F	a	getRotation
		p	1	tickDelta	tickDelta
	m	(Z)V	a	setActive
		p	1	active	active
	m	(Laah;)V	a	playSound
	m	(Z)V	b	setEyeOpen
		p	1	eyeOpen	eyeOpen
	m	()Z	d	isActive
	m	()Z	f	isEyeOpen
	m	()Z	h	updateActivatingBlocks
	m	()V	j	givePlayersEffects
	m	()V	k	attackHostileEntity
	m	()V	l	updateTargetEntity
	m	()Lcvf;	m	getAttackZone
	m	()Lakz;	x	findTargetEntity
	m	()V	y	spawnNautilusParticles
c	bwt	net/minecraft/block/entity/DaylightDetectorBlockEntity
c	bwu	net/minecraft/block/entity/DispenserBlockEntity
	f	Ljava/util/Random;	a	RANDOM
	f	Lfy;	b	inventory
	m	(Lben;)I	a	addToFirstFreeSlot
		p	1	stack	stack
	m	()I	h	chooseNonEmptySlot
c	bwv	net/minecraft/block/entity/DropperBlockEntity
c	bww	net/minecraft/block/entity/EnchantingTableBlockEntity
	f	I	a	ticks
	f	F	b	nextPageAngle
	f	F	c	pageAngle
	f	F	i	nextPageTurningSpeed
	f	F	j	pageTurningSpeed
	f	Ljava/util/Random;	n	RANDOM
	f	Llf;	o	customName
	m	(Llf;)V	a	setCustomName
		p	1	value	value
c	bwx	net/minecraft/block/entity/EnderChestBlockEntity
	f	F	a	animationProgress
	f	F	b	lastAnimationProgress
	f	I	c	viewerCount
	f	I	g	ticks
	m	(Layj;)Z	a	canPlayerUse
	m	()V	d	onOpen
	m	()V	f	onClose
c	bwy	net/minecraft/block/entity/FurnaceBlockEntity
c	bwz	net/minecraft/block/entity/Hopper
	f	Lcwf;	a	INSIDE_SHAPE
	f	Lcwf;	b	ABOVE_SHAPE
	f	Lcwf;	c	INPUT_AREA_SHAPE
	m	()D	A	getHopperY
	m	()D	B	getHopperZ
	m	()Lcwf;	P_	getInputAreaShape
	m	()Lbjw;	w	getWorld
	m	()D	z	getHopperX
c	bx	net/minecraft/predicate/PlayerPredicate
	f	Lbx;	a	ANY
	f	Lbr$d;	b	experienceLevel
	f	Lbjt;	c	gamemode
	f	Ljava/util/Map;	d	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	e	recipes
	f	Ljava/util/Map;	f	advancements
	m	(Lbr$d;Lbjt;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;)V	<init>	<init>
		p	2	gamemode	gamemode
		p	3	stats	stats
		p	4	recipes	recipes
		p	5	advancements	advancements
	m	(Lcom/google/gson/JsonElement;)Lbx;	a	fromJson
		p	0	json	json
	m	(Laao;)Lsm;	a	getStatId
		p	0	stat	stat
	m	(Lcom/google/gson/JsonArray;Laao;Lbr$d;)V	a	method_22498
		p	1	stat	stat
	m	(Lcom/google/gson/JsonObject;Lsm;Ljava/lang/Boolean;)V	a	method_22501
		p	1	id	id
		p	2	present	present
	m	(Lakq;)Z	a	test
		p	1	entity	entity
	m	(Lcom/google/gson/JsonObject;Lsm;Lbx$c;)V	a	method_22500
		p	1	id	id
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Laaq;Lsm;)Laao;	a	getStat
		p	0	type	type
		p	1	id	id
	m	(Lcom/google/gson/JsonElement;)Lbx$c;	b	criterionFromJson
		p	0	json	json
c	bx$a	net/minecraft/predicate/PlayerPredicate$AdvancementCriteriaPredicate
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criteria
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V	<init>	<init>
		p	1	criteria	criteria
	m	(Lw;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	progress	progress
c	bx$b	net/minecraft/predicate/PlayerPredicate$CompletedAdvancementPredicate
	f	Z	a	done
	m	(Z)V	<init>	<init>
		p	1	done	done
	m	(Lw;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	progress	progress
c	bx$c	net/minecraft/predicate/PlayerPredicate$AdvancementPredicate
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	bx$d	net/minecraft/predicate/PlayerPredicate$Builder
	f	Lbr$d;	a	experienceLevel
	f	Lbjt;	b	gamemode
	f	Ljava/util/Map;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	m	()Lbx;	b	build
c	bxa	net/minecraft/block/entity/HopperBlockEntity
	f	Lfy;	i	inventory
	f	I	j	transferCooldown
	f	J	k	lastTickTime
	m	(Lbjw;DDD)Laje;	a	getInventoryAt
		p	0	world	world
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Laje;Laje;Lben;Lfp;)Lben;	a	transfer
		p	0	from	from
		p	1	to	to
		p	2	stack	stack
		p	3	side	side
	m	(Lben;Lben;)Z	a	canMergeItems
		p	0	first	first
		p	1	second	second
	m	(Ljava/util/function/Supplier;)Z	a	insertAndExtract
		p	1	extractMethod	extractMethod
	m	(Laje;Laje;Lben;ILfp;)Lben;	a	transfer
		p	0	from	from
		p	1	to	to
		p	2	stack	stack
		p	3	slot	slot
	m	(Lakq;)V	a	onEntityCollided
	m	(Laje;Lawb;)Z	a	extract
		p	0	inventory	inventory
		p	1	itemEntity	itemEntity
	m	(Lbwz;Laje;ILfp;)Z	a	extract
		p	0	hopper	hopper
		p	1	inventory	inventory
		p	2	slot	slot
		p	3	side	side
	m	(Lbwz;)Z	a	extract
		p	0	hopper	hopper
	m	(Laje;Lben;ILfp;)Z	a	canInsert
		p	0	inventory	inventory
		p	1	stack	stack
		p	2	slot	slot
		p	3	side	side
	m	(Laje;Lfp;)Ljava/util/stream/IntStream;	a	getAvailableSlots
		p	0	inventory	inventory
		p	1	side	side
	m	(Laje;Lben;ILfp;)Z	b	canExtract
		p	0	inv	inv
		p	1	stack	stack
		p	2	slot	slot
		p	3	facing	facing
	m	(Lbjw;Lfk;)Laje;	b	getInventoryAt
	m	(Lbwz;)Laje;	b	getInputInventory
		p	0	hopper	hopper
	m	(Laje;Lfp;)Z	b	isInventoryFull
		p	1	inv	inv
	m	(Laje;Lfp;)Z	c	isInventoryEmpty
		p	0	inv	inv
		p	1	facing	facing
	m	(Lbwz;)Ljava/util/List;	c	getInputItemEntities
	m	(I)V	c	setCooldown
		p	1	cooldown	cooldown
	m	()Z	h	isFull
	m	()Z	j	insert
	m	()Laje;	k	getOutputInventory
	m	()Z	l	needsCooldown
	m	()Z	m	isDisabled
c	bxb	net/minecraft/block/entity/JigsawBlockEntity
	f	Lsm;	a	attachmentType
	f	Lsm;	b	targetPool
	f	Ljava/lang/String;	c	finalState
	m	(Ljava/lang/String;)V	a	setFinalState
		p	1	value	value
	m	(Lsm;)V	a	setAttachmentType
		p	1	value	value
	m	(Lsm;)V	b	setTargetPool
		p	1	value	value
	m	()Lsm;	d	getAttachmentType
	m	()Lsm;	f	getTargetPool
	m	()Ljava/lang/String;	g	getFinalState
c	bxc	net/minecraft/block/entity/JukeboxBlockEntity
	f	Lben;	a	record
	m	(Lben;)V	a	setRecord
	m	()Lben;	d	getRecord
c	bxd	net/minecraft/block/entity/LecternBlockEntity
	f	Laje;	a	inventory
	f	Lbaw;	b	propertyDelegate
	f	Lben;	c	book
	f	I	g	currentPage
	f	I	h	pageCount
	m	(Layj;)Lcq;	a	getCommandSource
		p	1	player	player
	m	(Lben;Layj;)V	a	setBook
		p	1	book	book
		p	2	player	player
	m	(Lben;)V	a	setBook
		p	1	book	book
	m	(I)V	a	setCurrentPage
		p	1	currentPage	currentPage
	m	(Lben;Layj;)Lben;	b	resolveBook
		p	1	book	book
		p	2	player	player
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
	m	()Lben;	f	getBook
	m	()Z	g	hasBook
	m	()I	h	getCurrentPage
	m	()I	j	getComparatorOutput
	m	()V	k	onBookRemoved
c	bxe	net/minecraft/client/block/ChestAnimationProgress
	m	(F)F	a	getAnimationProgress
c	bxf	net/minecraft/block/entity/LootableContainerBlockEntity
	f	Lsm;	g	lootTableId
	f	J	h	lootTableSeed
	m	(Lsm;J)V	a	setLootTable
		p	1	id	id
		p	2	seed	seed
	m	(Lbjg;Ljava/util/Random;Lfk;Lsm;)V	a	setLootTable
		p	0	world	world
		p	1	random	random
		p	2	pos	pos
		p	3	id	id
	m	(Lfy;)V	a	setInvStackList
		p	1	list	list
	m	(ILayi;Layj;)Lban;	createMenu	createMenu
		p	1	syncId	syncId
	m	(Layj;)V	d	checkLootInteraction
	m	(Ljt;)Z	d	deserializeLootTable
	m	(Ljt;)Z	e	serializeLootTable
	m	()Lfy;	f	getInvStackList
c	bxg	net/minecraft/block/entity/ShulkerBoxBlockEntity
	f	[I	a	AVAILABLE_SLOTS
	f	Lfy;	b	inventory
	f	I	c	viewerCount
	f	Lbxg$a;	i	animationStage
	f	F	j	animationProgress
	f	F	k	prevAnimationProgress
	f	Lbdj;	l	cachedColor
	f	Z	m	cachedColorUpdateNeeded
	m	(F)F	a	getAnimationProgress
	m	(Lbyj;)Lcvf;	a	getBoundingBox
		p	1	state	state
	m	(Lfp;)Lcvf;	b	getBoundingBox
		p	1	openDirection	openDirection
	m	(Lfp;)Lcvf;	c	getCollisionBox
		p	1	facing	facing
	m	(Ljt;)V	f	deserializeInventory
		p	1	tag	tag
	m	(Ljt;)Ljt;	g	serializeInventory
		p	1	tag	tag
	m	()V	h	updateAnimation
	m	()Lbxg$a;	j	getAnimationStage
	m	()Lbdj;	k	getColor
	m	()V	l	pushEntities
	m	()V	m	updateNeighborStates
c	bxg$a	net/minecraft/block/entity/ShulkerBoxBlockEntity$AnimationStage
c	bxh	net/minecraft/block/entity/SignBlockEntity
	f	[Llf;	a	text
	f	Z	b	editable
	f	Layj;	c	editor
	f	[Ljava/lang/String;	g	textBeingEdited
	f	Lbdj;	h	textColor
	m	(Layj;)V	a	setEditor
	m	(ILjava/util/function/Function;)Ljava/lang/String;	a	getTextBeingEditedOnRow
		p	1	row	row
		p	2	function	function
	m	(I)Llf;	a	getTextOnRow
		p	1	row	row
	m	(Z)V	a	setEditable
	m	(Lxe;)Lcq;	a	getCommandSource
		p	1	player	player
	m	(Lbdj;)Z	a	setTextColor
		p	1	value	value
	m	(ILlf;)V	a	setTextOnRow
		p	1	row	row
		p	2	text	text
	m	(Layj;)Z	b	onActivate
	m	()Z	d	isEditable
	m	()Layj;	f	getEditor
	m	()Lbdj;	g	getTextColor
c	bxi	net/minecraft/block/entity/SkullBlockEntity
	f	Lcom/mojang/authlib/GameProfile;	a	owner
	f	I	b	ticksPowered
	f	Z	c	isPowered
	f	Lzk;	g	userCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	h	sessionService
	m	(F)F	a	getTicksPowered
		p	1	tickDelta	tickDelta
	m	(Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V	a	setSessionService
		p	0	value	value
	m	(Lcom/mojang/authlib/GameProfile;)V	a	setOwnerAndType
	m	(Lzk;)V	a	setUserCache
		p	0	value	value
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile;	b	loadProperties
		p	0	profile	profile
	m	()Lcom/mojang/authlib/GameProfile;	d	getOwner
	m	()V	f	loadOwnerProperties
c	bxj	net/minecraft/block/entity/SmokerBlockEntity
c	bxk	net/minecraft/block/entity/MobSpawnerBlockEntity
	f	Lbjd;	a	logic
	m	()Lbjd;	d	getLogic
c	bxl	net/minecraft/block/entity/StructureBlockBlockEntity
	f	Lsm;	a	structureName
	f	Ljava/lang/String;	b	author
	f	Ljava/lang/String;	c	metadata
	f	Lfk;	g	offset
	f	Lfk;	h	size
	f	Lbsu;	i	mirror
	f	Lbtu;	j	rotation
	f	Lbzr;	k	mode
	f	Z	l	ignoreEntities
	f	Z	m	powered
	f	Z	n	showAir
	f	Z	o	showBoundingBox
	f	F	p	integrity
	f	J	q	seed
	m	()F	A	getIntegrity
	m	()J	B	getSeed
	m	()Z	C	detectStructureSize
	m	()Z	D	saveStructure
	m	()Z	E	loadStructure
	m	()V	F	unloadStructure
	m	()Z	G	isStructureAvailable
	m	()Z	H	isPowered
	m	()Z	I	shouldShowAir
	m	()Z	J	shouldShowBoundingBox
	m	()V	L	updateBlockMode
	m	(Lbzr;)V	a	setMode
	m	(Layj;)Z	a	openScreen
	m	(Z)V	a	setIgnoreEntities
	m	(Lsm;)V	a	setStructureName
	m	(Ljava/util/List;)Ljava/util/List;	a	findCorners
		p	1	structureBlockEntities	structureBlockEntities
	m	(Lfk;Lfk;)Ljava/util/List;	a	findStructureBlockEntities
		p	1	pos1	pos1
		p	2	pos2	pos2
	m	(J)V	a	setSeed
	m	(Lakz;)V	a	setAuthor
	m	(Ljava/lang/String;)V	a	setStructureName
	m	(F)V	a	setIntegrity
	m	(Lfk;Ljava/util/List;)Lclb;	a	makeBoundingBox
		p	1	center	center
		p	2	corners	corners
	m	(ZLcms;)Z	a	place
		p	1	resizeDisabled	resizeDisabled
		p	2	structure	structure
	m	(Lbtu;)V	b	setRotation
	m	(Z)Z	b	saveStructure
	m	(J)Ljava/util/Random;	b	createRandom
		p	0	seed	seed
	m	(Lfk;)V	b	setOffset
	m	(Ljava/lang/String;)V	b	setMetadata
	m	(Lbsu;)V	b	setMirror
	m	(Z)Z	c	loadStructure
		p	1	resizeDisabled	resizeDisabled
	m	(Lfk;)V	c	setSize
	m	(Z)V	d	setPowered
	m	()Ljava/lang/String;	d	getStructureName
	m	(Z)V	e	setShowAir
	m	()Ljava/lang/String;	f	getStructurePath
	m	(Z)V	f	setShowBoundingBox
		p	1	showBoundingBox	showBoundingBox
	m	()Z	g	hasStructureName
	m	()Lfk;	h	getOffset
	m	()Lfk;	j	getSize
	m	()Lbsu;	k	getMirror
	m	()Lbtu;	l	getRotation
	m	()Ljava/lang/String;	m	getMetadata
	m	()Lbzr;	x	getMode
	m	()V	y	cycleMode
	m	()Z	z	shouldIgnoreEntities
c	bxl$a	net/minecraft/block/entity/StructureBlockBlockEntity$Action
c	bxm	net/minecraft/block/entity/EndGatewayBlockEntity
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	J	b	age
	f	I	c	teleportCooldown
	f	Lfk;	g	exitPortalPos
	f	Z	h	exactTeleport
	m	(Lakq;)V	a	tryTeleportingEntity
	m	(Lfk;Z)V	a	setExitPortalPos
	m	(Lxd;Lfk;)V	a	createPortal
	m	(Lcal;)Lfk;	a	findPortalPosition
	m	(F)F	a	getRecentlyGeneratedBeamHeight
		p	1	tickDelta	tickDelta
	m	(Lbjw;Lcvl;)Lcal;	a	getChunk
		p	0	world	world
		p	1	pos	pos
	m	(Lxd;)V	a	createPortal
	m	(Lbjg;Lfk;IZ)Lfk;	a	findExitPortalPos
		p	0	world	world
		p	1	pos	pos
		p	2	searchRadius	searchRadius
	m	(F)F	b	getCooldownBeamHeight
		p	1	tickDelta	tickDelta
	m	()Z	d	isRecentlyGenerated
	m	()Z	f	needsCooldownBeforeTeleporting
	m	()V	h	startTeleportCooldown
	m	()I	j	getDrawnSidesCount
	m	()Lfk;	k	findBestPortalExitPos
c	bxn	net/minecraft/block/entity/EndPortalBlockEntity
	m	(Lfp;)Z	a	shouldDrawSide
c	bxo	net/minecraft/util/Tickable
	m	()V	Z_	tick
c	bxp	net/minecraft/block/entity/TrappedChestBlockEntity
c	bxr	net/minecraft/block/sapling/LargeTreeSaplingGenerator
	m	(Lbyj;Lbjg;Lfk;II)Z	a	canGenerateLargeTree
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	x	x
		p	4	z	z
	m	(Ljava/util/Random;)Lcdc;	a	createLargeTreeFeature
	m	(Lbjx;Lcaa;Lfk;Lbyj;Ljava/util/Random;II)Z	a	generateLargeTree
c	bxs	net/minecraft/block/sapling/SaplingGenerator
	m	(Lbjx;Lcaa;Lfk;Lbyj;Ljava/util/Random;)Z	a	generate
	m	(Ljava/util/Random;Z)Lcdc;	a	createTreeFeature
c	bxt	net/minecraft/block/sapling/AcaciaSaplingGenerator
c	bxu	net/minecraft/block/sapling/BirchSaplingGenerator
c	bxv	net/minecraft/block/sapling/DarkOakSaplingGenerator
c	bxw	net/minecraft/block/sapling/JungleSaplingGenerator
c	bxx	net/minecraft/block/sapling/OakSaplingGenerator
c	bxy	net/minecraft/block/sapling/SpruceSaplingGenerator
c	by	net/minecraft/advancement/criterion/RecipeUnlockedCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lbgw;)V	a	trigger
		p	1	player	player
		p	2	recipe	recipe
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lby$a;	b	conditionsFromJson
c	by$a	net/minecraft/advancement/criterion/RecipeUnlockedCriterion$Conditions
	f	Lsm;	a	recipe
	m	(Lbgw;)Z	a	matches
		p	1	recipe	recipe
c	byb	net/minecraft/block/PistonExtensionBlock
	f	Lbze;	a	FACING
	f	Lbzh;	b	TYPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbjg;Lfk;)Lbyf;	a	getPistonBlockEntity
		p	1	world	world
		p	2	pos	pos
	m	(Lbyj;Lfp;ZZ)Lbwl;	a	createBlockEntityPiston
		p	0	pushedBlock	pushedBlock
		p	1	dir	dir
		p	2	extending	extending
c	byc	net/minecraft/block/PistonBlock
	f	Lbzb;	b	EXTENDED
	f	Lcwf;	c	EXTENDED_EAST_SHAPE
	f	Lcwf;	d	EXTENDED_WEST_SHAPE
	f	Lcwf;	e	EXTENDED_SOUTH_SHAPE
	f	Lcwf;	f	EXTENDED_NORTH_SHAPE
	f	Lcwf;	g	EXTENDED_UP_SHAPE
	f	Lcwf;	h	EXTENDED_DOWN_SHAPE
	f	Z	i	isSticky
	m	(ZLbph$c;)V	<init>	<init>
		p	1	isSticky	isSticky
		p	2	settings	settings
	m	(Lbyj;Lbjw;Lfk;Lfp;ZLfp;)Z	a	isMovable
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
		p	3	motionDir	motionDir
		p	4	canBreak	canBreak
		p	5	pistonDir	pistonDir
	m	(Lbjw;Lfk;Lbyj;)V	a	tryMove
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjw;Lfk;Lfp;)Z	a	shouldExtend
		p	1	world	world
		p	2	pos	pos
		p	3	pistonFace	pistonFace
	m	(Lbjw;Lfk;Lfp;Z)Z	a	move
		p	1	world	world
		p	2	pos	pos
		p	3	dir	dir
		p	4	retract	retract
c	byd	net/minecraft/block/PistonHeadBlock
	f	Lcwf;	A	SHORT_UP_ARM_SHAPE
	f	Lcwf;	B	SHORT_DOWN_ARM_SHAPE
	f	Lcwf;	C	SHORT_SOUTH_ARM_SHAPE
	f	Lcwf;	D	SHORT_NORTH_ARM_SHAPE
	f	Lcwf;	E	SHORT_EAST_ARM_SHAPE
	f	Lcwf;	F	SHORT_WEST_ARM_SHAPE
	f	Lbzh;	b	TYPE
	f	Lbzb;	c	SHORT
	f	Lcwf;	d	EAST_HEAD_SHAPE
	f	Lcwf;	e	WEST_HEAD_SHAPE
	f	Lcwf;	f	SOUTH_HEAD_SHAPE
	f	Lcwf;	g	NORTH_HEAD_SHAPE
	f	Lcwf;	h	UP_HEAD_SHAPE
	f	Lcwf;	i	DOWN_HEAD_SHAPE
	f	Lcwf;	j	UP_ARM_SHAPE
	f	Lcwf;	k	DOWN_ARM_SHAPE
	f	Lcwf;	w	SOUTH_ARM_SHAPE
	f	Lcwf;	x	NORTH_ARM_SHAPE
	f	Lcwf;	y	EAST_ARM_SHAPE
	f	Lcwf;	z	WEST_ARM_SHAPE
	m	(Lbph$c;)V	<init>	<init>
		p	1	settings	settings
	m	(Lbyj;)Lcwf;	h	getHeadShape
		p	1	state	state
	m	(Lbyj;)Lcwf;	i	getArmShape
		p	1	state	state
c	bye	net/minecraft/util/math/Boxes
	m	(Lcvf;Lfp;D)Lcvf;	a	stretch
		p	0	box	box
		p	1	direction	direction
		p	2	length	length
c	byf	net/minecraft/block/entity/PistonBlockEntity
	f	Lbyj;	a	pushedBlock
	f	Lfp;	b	facing
	f	Z	c	extending
	f	Z	g	source
	f	F	i	progress
	f	F	j	lastProgress
	f	J	k	savedWorldTime
	m	(Lbyj;Lfp;ZZ)V	<init>	<init>
		p	1	pushedBlock	pushedBlock
		p	2	facing	facing
		p	3	extending	extending
		p	4	source	source
	m	(Lcvf;Lfp;Lcvf;)D	a	getIntersectionSize
	m	(Lakq;Lfp;D)V	a	push
		p	1	entity	entity
		p	2	direction	direction
		p	3	amount	amount
	m	(Lcvf;)Lcvf;	a	offsetHeadBox
		p	1	box	box
	m	(Ljava/util/List;)Lcvf;	a	getApproximateHeadBox
		p	1	boxes	boxes
	m	(F)F	a	getProgress
		p	1	tickDelta	tickDelta
	m	(Lbjg;Lfk;)Lcwf;	a	getCollisionShape
	m	(F)F	b	getRenderOffsetX
		p	1	tickDelta	tickDelta
	m	(F)F	c	getRenderOffsetY
		p	1	tickDelta	tickDelta
	m	()Z	d	isExtending
	m	(F)F	d	getRenderOffsetZ
		p	1	tickDelta	tickDelta
	m	(F)F	e	getAmountExtended
		p	1	progress	progress
	m	()Lfp;	f	getFacing
	m	(F)V	f	pushEntities
		p	1	nextProgress	nextProgress
	m	()Z	h	isSource
	m	()Lfp;	j	getMovementDirection
	m	()Lbyj;	k	getPushedBlock
	m	()V	l	finish
	m	()J	m	getSavedWorldTime
	m	()Lbyj;	x	getHeadBlockState
c	byg	net/minecraft/block/piston/PistonHandler
	f	Lbjw;	a	world
	f	Lfk;	b	posFrom
	f	Z	c	retracted
	f	Lfk;	d	posTo
	f	Lfp;	e	motionDirection
	f	Ljava/util/List;	f	movedBlocks
	f	Ljava/util/List;	g	brokenBlocks
	f	Lfp;	h	pistonDirection
	m	(Lbjw;Lfk;Lfp;Z)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
		p	3	dir	dir
		p	4	retracted	retracted
	m	(Lbph;Lbph;)Z	a	isAdjacentBlockStuck
	m	(Lfk;)Z	a	canMoveAdjacentBlock
		p	1	pos	pos
	m	()Z	a	calculatePush
	m	(Lbph;)Z	a	isBlockSticky
	m	(II)V	a	setMovedBlocks
		p	1	from	from
		p	2	to	to
	m	(Lfk;Lfp;)Z	a	tryMove
		p	1	pos	pos
		p	2	dir	dir
	m	()Ljava/util/List;	c	getMovedBlocks
	m	()Ljava/util/List;	d	getBrokenBlocks
c	byi	net/minecraft/state/AbstractState
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/function/Function;	c	PROPERTY_MAP_PRINTER
	f	Lcom/google/common/collect/ImmutableMap;	d	entries
	f	Lcom/google/common/collect/Table;	e	withTable
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;)V	<init>	<init>
		p	1	owner	owner
		p	2	entries	entries
	m	(Lbzm;)Ljava/lang/Object;	a	cycle
		p	1	property	property
	m	(Ljava/util/Map;)V	a	createWithTable
		p	1	states	states
	m	()Ljava/util/Collection;	a	getProperties
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	getNext
		p	0	values	values
		p	1	value	value
	m	(Lbzm;)Z	b	contains
		p	1	property	property
	m	(Lbzm;Ljava/lang/Comparable;)Ljava/util/Map;	c	toMapWith
		p	1	property	property
		p	2	value	value
c	byi$1	net/minecraft/state/AbstractState$1
	m	(Lbzm;Ljava/lang/Comparable;)Ljava/lang/String;	a	nameValue
		p	1	property	property
		p	2	value	value
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
c	byj	net/minecraft/block/BlockState
	f	Lbyj$a;	c	shapeCache
	f	I	d	luminance
	f	Z	e	hasSidedTransparency
	m	(Lbph;Lcom/google/common/collect/ImmutableMap;)V	<init>	<init>
		p	1	block	block
		p	2	propertyMap	propertyMap
	m	(Lcom/mojang/datafixers/Dynamic;)Lbyj;	a	deserialize
		p	0	dynamic	dynamic
	m	(Lxd;Lfk;Ljava/util/Random;)V	a	scheduledTick
		p	1	world	world
		p	2	pos	pos
		p	3	random	random
	m	(Lbjw;Lfk;Layj;)V	a	onBlockBreakStart
		p	1	world	world
		p	2	pos	pos
		p	3	player	player
	m	(Lbjx;Lfk;I)V	a	updateNeighborStates
		p	1	world	world
		p	2	pos	pos
		p	3	flags	flags
	m	(Lbtu;)Lbyj;	a	rotate
		p	1	rotation	rotation
	m	(Lbjg;Lfk;Lfp;)Lcwf;	a	getCullingFace
		p	1	view	view
		p	2	pos	pos
		p	3	facing	facing
	m	(Lbjg;Lfk;Laku;)Z	a	allowsSpawning
		p	1	view	view
		p	2	pos	pos
		p	3	type	type
	m	(Lbjw;Lfk;Lben;)V	a	onStacksDropped
		p	1	world	world
		p	2	pos	pos
		p	3	stack	stack
	m	(Lbsu;)Lbyj;	a	mirror
		p	1	mirror	mirror
	m	(Lbjw;Layj;Lajk;Lcvg;)Lajl;	a	onUse
		p	1	world	world
		p	2	player	player
		p	3	hand	hand
		p	4	hit	hit
	m	(Lfk;)J	a	getRenderingSeed
		p	1	pos	pos
	m	(Laaz;)Z	a	matches
		p	1	tag	tag
	m	(Lbjz;Lfk;)Z	a	canPlaceAt
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lfk;II)Z	a	onBlockAction
		p	1	world	world
		p	2	pos	pos
		p	3	type	type
		p	4	data	data
	m	(Layj;Lbjg;Lfk;)F	a	calcBlockBreakingDelta
		p	1	player	player
		p	2	view	view
		p	3	pos	pos
	m	(Lbjw;Lfk;Lakq;)V	a	onEntityCollision
		p	1	world	world
		p	2	pos	pos
		p	3	entity	entity
	m	(Lbcq;)Z	a	canReplace
		p	1	ctx	ctx
	m	(Lcom/mojang/datafixers/types/DynamicOps;Lbyj;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	0	ops	ops
		p	1	state	state
	m	(Lcrx$a;)Ljava/util/List;	a	getDroppedStacks
		p	1	builder	builder
	m	(Lbjw;Lfk;Lbyj;Z)V	a	onBlockAdded
		p	1	world	world
		p	2	pos	pos
		p	3	oldState	oldState
		p	4	moved	moved
	m	(Lbyj;Lfp;)Z	a	isSideInvisible
		p	1	neighbor	neighbor
		p	2	facing	facing
	m	(Lbjg;Lfk;Lcqr;)Z	a	canPlaceAtSide
		p	1	view	view
		p	2	pos	pos
		p	3	env	env
	m	(Lbjg;Lfk;Lakq;)Z	a	hasSolidTopSurface
		p	1	view	view
		p	2	pos	pos
		p	3	entity	entity
	m	(Lbjw;Lfk;Lbph;Lfk;Z)V	a	neighborUpdate
		p	1	world	world
		p	2	pos	pos
		p	3	neighborBlock	neighborBlock
		p	4	neighborPos	neighborPos
	m	(Lbjw;Lfk;)I	a	getComparatorOutput
		p	1	world	world
		p	2	pos	pos
	m	(Lbjg;Lfk;)Z	a	isTranslucent
		p	1	view	view
		p	2	pos	pos
	m	(Lcoi;)Z	a	canBucketPlace
		p	1	fluid	fluid
	m	(Lbjw;Lbyj;Lcvg;Lakq;)V	a	onProjectileHit
		p	1	world	world
		p	2	state	state
		p	3	hitResult	hitResult
		p	4	projectile	projectile
	m	(Lbjg;Lfk;Lcvq;)Lcwf;	a	getOutlineShape
		p	1	view	view
		p	2	pos	pos
		p	3	context	context
	m	(Lfp;Lbyj;Lbjx;Lfk;Lfk;)Lbyj;	a	getStateForNeighborUpdate
		p	1	facing	facing
		p	2	neighborState	neighborState
		p	3	world	world
		p	4	pos	pos
		p	5	neighborPos	neighborPos
	m	(Lxd;Lfk;Ljava/util/Random;)V	b	randomTick
		p	1	world	world
		p	2	pos	pos
		p	3	random	random
	m	(Lbjg;Lfk;Lfp;)I	b	getWeakRedstonePower
		p	1	view	view
		p	2	pos	pos
		p	3	facing	facing
	m	(Lbjw;Lfk;)Lajo;	b	createContainerFactory
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;I)V	b	method_11637
		p	1	world	world
		p	2	pos	pos
		p	3	flags	flags
	m	(Lbjw;Lfk;Lbyj;Z)V	b	onBlockRemoved
		p	1	world	world
		p	2	pos	pos
		p	3	newState	newState
		p	4	moved	moved
	m	(Lbjg;Lfk;Lcvq;)Lcwf;	b	getCollisionShape
		p	1	view	view
		p	2	pos	pos
		p	3	context	context
	m	(Lbjg;Lfk;)I	b	getOpacity
		p	1	view	view
		p	2	pos	pos
	m	()V	c	initShapeCache
	m	(Lbjg;Lfk;)Lcop;	c	getTopMaterialColor
		p	1	view	view
		p	2	pos	pos
	m	(Lbjg;Lfk;Lfp;)I	c	getStrongRedstonePower
		p	1	view	view
		p	2	pos	pos
		p	3	facing	facing
	m	(Lbjg;Lfk;Lfp;)Z	d	isSideSolidFullSquare
		p	1	world	world
		p	2	pos	pos
		p	3	direction	direction
	m	()Lbph;	d	getBlock
	m	(Lbjg;Lfk;)F	d	getAmbientOcclusionLightLevel
		p	1	view	view
		p	2	pos	pos
	m	()Lcoo;	e	getMaterial
	m	(Lbjg;Lfk;)Z	e	isSimpleFullBlock
		p	1	view	view
		p	2	pos	pos
	m	()Z	f	exceedsCube
	m	(Lbjg;Lfk;)F	f	getHardness
		p	1	view	view
		p	2	pos	pos
	m	()Z	g	hasSidedTransparency
	m	(Lbjg;Lfk;)Z	g	isFullOpaque
		p	1	view	view
		p	2	pos	pos
	m	(Lbjg;Lfk;)Lcwf;	h	getOutlineShape
		p	1	view	view
		p	2	pos	pos
	m	()I	h	getLuminance
	m	()Z	i	isAir
	m	(Lbjg;Lfk;)Lcwf;	i	getCollisionShape
		p	1	view	view
		p	2	pos	pos
	m	()Lbtr;	j	getRenderType
	m	(Lbjg;Lfk;)Lcwf;	j	getCullingShape
		p	1	view	view
		p	2	pos	pos
	m	()Z	k	hasEmissiveLighting
	m	(Lbjg;Lfk;)Lcwf;	k	getRayTraceShape
		p	1	view	view
		p	2	pos	pos
	m	(Lbjg;Lfk;)Lcvl;	l	getOffsetPos
		p	1	view	view
		p	2	pos	pos
	m	()Z	l	emitsRedstonePower
	m	()Z	m	hasComparatorOutput
	m	(Lbjg;Lfk;)Z	m	canSuffocate
		p	1	view	view
		p	2	pos	pos
	m	()Lcoq;	n	getPistonBehavior
	m	(Lbjg;Lfk;)Z	n	hasInWallOverlay
		p	1	view	view
		p	2	pos	pos
	m	()Z	o	isOpaque
	m	(Lbjg;Lfk;)Z	o	shouldPostProcess
		p	1	view	view
		p	2	pos	pos
	m	()Lcoj;	p	getFluidState
	m	(Lbjg;Lfk;)Z	p	isFullCube
		p	1	world	world
		p	2	pos	pos
	m	()Z	q	hasRandomTicks
	m	()Lbum;	r	getSoundGroup
c	byj$a	net/minecraft/block/BlockState$ShapeCache
	f	[Lfp;	a	DIRECTIONS
	f	Z	b	opaque
	f	Z	c	fullOpaque
	f	Z	d	translucent
	f	I	e	lightSubtracted
	f	[Lcwf;	f	extrudedFaces
	f	Lcwf;	g	collisionShape
	f	Z	h	exceedsCube
	f	[Z	i	solidFullSquare
	f	Z	j	isFullCube
	m	(Lbyj;)V	<init>	<init>
		p	1	state	state
c	byk	net/minecraft/state/StateManager
	f	Ljava/util/regex/Pattern;	a	VALID_NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	properties
	f	Lcom/google/common/collect/ImmutableList;	d	states
	m	(Ljava/lang/Object;Lbyk$b;Ljava/util/Map;)V	<init>	<init>
		p	1	owner	owner
		p	3	namedProperties	namedProperties
	m	()Lcom/google/common/collect/ImmutableList;	a	getStates
	m	(Ljava/lang/String;)Lbzm;	a	getProperty
		p	1	name	name
	m	()Lbyl;	b	getDefaultState
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
c	byk$a	net/minecraft/state/StateManager$Builder
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	namedProperties
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1	owner	owner
	m	(Lbyk$b;)Lbyk;	a	build
	m	(Lbzm;)V	a	validate
		p	1	property	property
	m	([Lbzm;)Lbyk$a;	a	add
		p	1	properties	properties
c	byk$b	net/minecraft/state/StateManager$Factory
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;)Lbyi;	create	create
		p	1	owner	owner
		p	2	entries	entries
c	byl	net/minecraft/state/State
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Lbyl;Lbzm;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lbyl;	a	tryRead
		p	0	state	state
		p	1	property	property
		p	2	propertyName	propertyName
		p	3	input	input
		p	4	valueName	valueName
	m	(Lbzm;Ljava/lang/Comparable;)Ljava/lang/Object;	a	with
		p	1	property	property
		p	2	value	value
	m	(Lbzm;Ljava/lang/Comparable;)Ljava/lang/String;	b	nameValue
		p	0	property	property
		p	1	value	value
	m	()Lcom/google/common/collect/ImmutableMap;	b	getEntries
	m	(Lbzm;)Ljava/lang/Comparable;	c	get
		p	1	property	property
c	byn	net/minecraft/block/pattern/CachedBlockPosition
	f	Lbjz;	a	world
	f	Lfk;	b	pos
	f	Z	c	forceLoad
	f	Lbyj;	d	state
	f	Lbwl;	e	blockEntity
	f	Z	f	cachedEntity
	m	(Lbjz;Lfk;Z)V	<init>	<init>
		p	2	pos	pos
		p	3	forceLoad	forceLoad
	m	()Lbyj;	a	getBlockState
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	matchesBlockState
		p	0	state	state
	m	()Lbwl;	b	getBlockEntity
	m	()Lbjz;	c	getWorld
	m	()Lfk;	d	getBlockPos
c	byo	net/minecraft/block/pattern/BlockPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
	m	([[[Ljava/util/function/Predicate;)V	<init>	<init>
		p	1	pattern	pattern
	m	(Lfk;Lfp;Lfp;III)Lfk;	a	translate
		p	0	pos	pos
		p	1	forwards	forwards
		p	2	up	up
		p	3	offsetLeft	offsetLeft
		p	4	offsetDown	offsetDown
		p	5	offsetForwards	offsetForwards
	m	(Lbjz;Lfk;)Lbyo$b;	a	searchAround
	m	(Lbjz;Z)Lcom/google/common/cache/LoadingCache;	a	makeCache
	m	()I	a	getDepth
	m	(Lfk;Lfp;Lfp;Lcom/google/common/cache/LoadingCache;)Lbyo$b;	a	testTransform
		p	1	frontTopLeft	frontTopLeft
		p	2	forwards	forwards
		p	3	up	up
	m	()I	b	getHeight
	m	()I	c	getWidth
c	byo$a	net/minecraft/block/pattern/BlockPattern$BlockStateCacheLoader
	f	Lbjz;	a	world
	f	Z	b	forceLoad
	m	(Lfk;)Lbyn;	a	load
c	byo$b	net/minecraft/block/pattern/BlockPattern$Result
	f	Lfk;	a	frontTopLeft
	f	Lfp;	b	forwards
	f	Lfp;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
	m	(Lfk;Lfp;Lfp;Lcom/google/common/cache/LoadingCache;III)V	<init>	<init>
		p	1	frontTopLeft	frontTopLeft
		p	2	forwards	forwards
		p	3	up	up
		p	5	width	width
		p	6	height	height
		p	7	depth	depth
	m	()Lfk;	a	getFrontTopLeft
	m	(Lfp;Lfk;DLcvl;D)Lbyo$c;	a	getTeleportTarget
	m	(III)Lbyn;	a	translate
	m	()Lfp;	b	getForwards
	m	()Lfp;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
c	byo$c	net/minecraft/block/pattern/BlockPattern$TeleportTarget
	f	Lcvl;	a	pos
	f	Lcvl;	b	velocity
	f	I	c	yaw
	m	(Lcvl;Lcvl;I)V	<init>	<init>
		p	1	pos	pos
		p	2	velocity	velocity
		p	3	yaw	yaw
c	byp	net/minecraft/block/pattern/BlockPatternBuilder
	f	Lcom/google/common/base/Joiner;	a	JOINER
	f	Ljava/util/List;	b	aisles
	f	Ljava/util/Map;	c	charMap
	f	I	d	height
	f	I	e	width
	m	([Ljava/lang/String;)Lbyp;	a	aisle
	m	()Lbyp;	a	start
	m	(CLjava/util/function/Predicate;)Lbyp;	a	where
		p	1	c	c
	m	()Lbyo;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	bakePredicates
	m	()V	d	validate
c	byr	net/minecraft/util/MaterialPredicate
	f	Lbyr;	a	IS_AIR
	f	Lcoo;	b	material
	m	(Lcoo;)Lbyr;	a	create
		p	0	material	material
	m	(Lbyj;)Z	a	test
c	byr$1	net/minecraft/util/MaterialPredicate$1
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
	m	(Lbyj;)Z	test	test
c	bys	net/minecraft/predicate/block/BlockPredicate
	f	Lbph;	a	block
	m	(Lbph;)Lbys;	a	make
		p	0	block	block
	m	(Lbyj;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	byt	net/minecraft/predicate/block/BlockStatePredicate
	f	Ljava/util/function/Predicate;	a	ANY
	f	Lbyk;	b	factory
	f	Ljava/util/Map;	c	propertyTests
	m	(Lbph;)Lbyt;	a	forBlock
		p	0	block	block
	m	(Lbyj;Lbzm;Ljava/util/function/Predicate;)Z	a	testProperty
		p	1	blockState	blockState
		p	2	property	property
	m	(Lbyj;)Z	a	test
	m	(Lbzm;Ljava/util/function/Predicate;)Lbyt;	a	with
		p	1	property	property
c	byv	net/minecraft/state/property/AbstractProperty
	f	Ljava/lang/Class;	a	type
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Integer;	c	computedHashCode
	m	(Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1	name	name
		p	2	type	type
	m	()I	c	computeHashCode
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	byw	net/minecraft/block/enums/WallMountLocation
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	byx	net/minecraft/block/enums/BambooLeaves
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	byy	net/minecraft/block/enums/BedPart
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	byz	net/minecraft/block/enums/Attachment
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bz	net/minecraft/advancement/criterion/ShotCrossbowCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lben;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbz$a;	b	conditionsFromJson
c	bz$a	net/minecraft/advancement/criterion/ShotCrossbowCriterion$Conditions
	f	Lbj;	a	item
	m	(Lbj;)V	<init>	<init>
		p	1	item	item
	m	(Lben;)Z	a	matches
		p	1	stack	stack
	m	(Lbjv;)Lbz$a;	a	create
c	bza	net/minecraft/state/property/Properties
	f	Lbzb;	A	TRIGGERED
	f	Lbzb;	B	UNSTABLE
	f	Lbzb;	C	WATERLOGGED
	f	Lbzh;	D	HORIZONTAL_AXIS
	f	Lbzh;	E	AXIS
	f	Lbzb;	F	UP
	f	Lbzb;	G	DOWN
	f	Lbzb;	H	NORTH
	f	Lbzb;	I	EAST
	f	Lbzb;	J	SOUTH
	f	Lbzb;	K	WEST
	f	Lbze;	L	FACING
	f	Lbze;	M	HOPPER_FACING
	f	Lbze;	N	HORIZONTAL_FACING
	f	Lbzh;	O	WALL_MOUNT_LOCATION
	f	Lbzh;	P	ATTACHMENT
	f	Lbzh;	Q	EAST_WIRE_CONNECTION
	f	Lbzh;	R	NORTH_WIRE_CONNECTION
	f	Lbzh;	S	SOUTH_WIRE_CONNECTION
	f	Lbzh;	T	WEST_WIRE_CONNECTION
	f	Lbzh;	U	DOUBLE_BLOCK_HALF
	f	Lbzh;	V	BLOCK_HALF
	f	Lbzh;	W	RAIL_SHAPE
	f	Lbzh;	X	STRAIGHT_RAIL_SHAPE
	f	Lbzj;	Y	AGE_1
	f	Lbzj;	Z	AGE_2
	f	Lbzb;	a	ATTACHED
	f	Lbzh;	aA	DOOR_HINGE
	f	Lbzh;	aB	INSTRUMENT
	f	Lbzh;	aC	PISTON_TYPE
	f	Lbzh;	aD	SLAB_TYPE
	f	Lbzh;	aE	STAIR_SHAPE
	f	Lbzh;	aF	STRUCTURE_BLOCK_MODE
	f	Lbzh;	aG	BAMBOO_LEAVES
	f	Lbzj;	aa	AGE_3
	f	Lbzj;	ab	AGE_5
	f	Lbzj;	ac	AGE_7
	f	Lbzj;	ad	AGE_15
	f	Lbzj;	ae	AGE_25
	f	Lbzj;	af	BITES
	f	Lbzj;	ag	DELAY
	f	Lbzj;	ah	DISTANCE_1_7
	f	Lbzj;	ai	EGGS
	f	Lbzj;	aj	HATCH
	f	Lbzj;	ak	LAYERS
	f	Lbzj;	al	LEVEL_3
	f	Lbzj;	am	LEVEL_8
	f	Lbzj;	an	LEVEL_1_8
	f	Lbzj;	ao	HONEY_LEVEL
	f	Lbzj;	ap	LEVEL_15
	f	Lbzj;	aq	MOISTURE
	f	Lbzj;	ar	NOTE
	f	Lbzj;	as	PICKLES
	f	Lbzj;	at	POWER
	f	Lbzj;	au	STAGE
	f	Lbzj;	av	DISTANCE_0_7
	f	Lbzj;	aw	ROTATION
	f	Lbzh;	ax	BED_PART
	f	Lbzh;	ay	CHEST_TYPE
	f	Lbzh;	az	COMPARATOR_MODE
	f	Lbzb;	b	BOTTOM
	f	Lbzb;	c	CONDITIONAL
	f	Lbzb;	d	DISARMED
	f	Lbzb;	e	DRAG
	f	Lbzb;	f	ENABLED
	f	Lbzb;	g	EXTENDED
	f	Lbzb;	h	EYE
	f	Lbzb;	i	FALLING
	f	Lbzb;	j	HANGING
	f	Lbzb;	k	HAS_BOTTLE_0
	f	Lbzb;	l	HAS_BOTTLE_1
	f	Lbzb;	m	HAS_BOTTLE_2
	f	Lbzb;	n	HAS_RECORD
	f	Lbzb;	o	HAS_BOOK
	f	Lbzb;	p	INVERTED
	f	Lbzb;	q	IN_WALL
	f	Lbzb;	r	LIT
	f	Lbzb;	s	LOCKED
	f	Lbzb;	t	OCCUPIED
	f	Lbzb;	u	OPEN
	f	Lbzb;	v	PERSISTENT
	f	Lbzb;	w	POWERED
	f	Lbzb;	x	SHORT
	f	Lbzb;	y	SIGNAL_FIRE
	f	Lbzb;	z	SNOWY
	m	(Lbzn;)Z	a	method_11813
		p	0	shape	shape
	m	(Lfp;)Z	a	method_11814
		p	0	facing	facing
c	bzb	net/minecraft/state/property/BooleanProperty
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)Lbzb;	a	of
		p	0	name	name
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bzc	net/minecraft/block/enums/ChestType
	f	[Lbzc;	d	VALUES
	f	Ljava/lang/String;	e	name
	f	I	f	opposite
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	name	name
		p	4	opposite	opposite
	m	()Lbzc;	a	getOpposite
c	bzd	net/minecraft/block/enums/ComparatorMode
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bze	net/minecraft/state/property/DirectionProperty
	m	(Ljava/lang/String;Ljava/util/Collection;)V	<init>	<init>
		p	1	name	name
		p	2	values	values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Lbze;	a	of
		p	0	name	name
		p	1	filter	filter
	m	(Ljava/lang/String;Ljava/util/Collection;)Lbze;	a	of
		p	0	name	name
		p	1	values	values
	m	(Ljava/lang/String;[Lfp;)Lbze;	a	of
		p	0	name	name
		p	1	values	values
c	bzf	net/minecraft/block/enums/DoorHinge
c	bzg	net/minecraft/block/enums/DoubleBlockHalf
c	bzh	net/minecraft/state/property/EnumProperty
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	Ljava/util/Map;	b	byName
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V	<init>	<init>
		p	1	name	name
		p	2	type	type
		p	3	values	values
	m	(Ljava/lang/String;Ljava/lang/Class;)Lbzh;	a	of
		p	0	name	name
		p	1	type	type
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lbzh;	a	of
		p	0	name	name
		p	1	type	type
		p	2	filter	filter
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lbzh;	a	of
		p	0	name	name
		p	1	type	type
		p	2	values	values
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lbzh;	a	of
		p	0	name	name
		p	1	type	type
		p	2	values	values
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bzi	net/minecraft/block/enums/BlockHalf
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bzj	net/minecraft/state/property/IntProperty
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1	name	name
		p	2	min	min
		p	3	max	max
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	name
	m	(Ljava/lang/String;II)Lbzj;	a	of
		p	0	name	name
		p	1	min	min
		p	2	max	max
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	bzk	net/minecraft/block/enums/Instrument
	f	Ljava/lang/String;	q	name
	f	Laah;	r	sound
	m	(Ljava/lang/String;ILjava/lang/String;Laah;)V	<init>	<init>
		p	3	name	name
		p	4	sound	sound
	m	()Laah;	a	getSound
	m	(Lbyj;)Lbzk;	a	fromBlockState
		p	0	state	state
c	bzl	net/minecraft/block/enums/PistonType
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bzm	net/minecraft/state/property/Property
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	name
		p	1	value	value
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	parse
		p	1	name	name
	m	()Ljava/lang/Class;	b	getType
	m	()Ljava/util/Collection;	d	getValues
c	bzn	net/minecraft/block/enums/RailShape
	f	Ljava/lang/String;	k	name
	m	()Z	b	isAscending
c	bzo	net/minecraft/block/enums/WireConnection
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bzp	net/minecraft/block/enums/SlabType
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bzq	net/minecraft/block/enums/StairShape
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bzr	net/minecraft/block/enums/StructureBlockMode
	f	Ljava/lang/String;	e	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
c	bzs	net/minecraft/util/SignType
	f	Lbzs;	a	OAK
	f	Lbzs;	b	SPRUCE
	f	Lbzs;	c	BIRCH
	f	Lbzs;	d	ACACIA
	f	Lbzs;	e	JUNGLE
	f	Lbzs;	f	DARK_OAK
	f	Ljava/util/Set;	g	VALUES
	f	Ljava/lang/String;	h	name
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Lbzs;)Lbzs;	a	register
		p	0	type	type
	m	()Ljava/util/stream/Stream;	a	stream
	m	()Ljava/lang/String;	b	getName
c	bzu	net/minecraft/world/border/WorldBorderListener
	m	(Lbzw;DDJ)V	a	onInterpolateSize
		p	1	border	border
		p	2	fromSize	fromSize
		p	4	toSize	toSize
		p	6	time	time
	m	(Lbzw;D)V	a	onSizeChange
	m	(Lbzw;DD)V	a	onCenterChanged
		p	1	centerX	centerX
		p	2	centerZ	centerZ
	m	(Lbzw;I)V	a	onWarningTimeChanged
		p	1	warningTime	warningTime
	m	(Lbzw;D)V	b	onDamagePerBlockChanged
		p	1	damagePerBlock	damagePerBlock
	m	(Lbzw;I)V	b	onWarningBlocksChanged
		p	1	warningBlocks	warningBlocks
	m	(Lbzw;D)V	c	onSafeZoneChanged
		p	1	safeZoneRadius	safeZoneRadius
c	bzu$a	net/minecraft/world/border/WorldBorderListener$WorldBorderSyncer
	f	Lbzw;	a	border
	m	(Lbzw;)V	<init>	<init>
		p	1	border	border
c	bzv	net/minecraft/world/border/WorldBorderStage
	f	I	d	color
	m	()I	a	getColor
c	bzw	net/minecraft/world/border/WorldBorder
	f	Ljava/util/List;	a	listeners
	f	D	b	damagePerBlock
	f	D	c	buffer
	f	I	d	warningTime
	f	I	e	warningBlocks
	f	D	f	centerX
	f	D	g	centerZ
	f	I	h	maxWorldBorderRadius
	f	Lbzw$a;	i	area
	m	(Lbzu;)V	a	addListener
		p	1	listener	listener
	m	(I)V	a	setMaxWorldBorderRadius
	m	(D)V	a	setSize
		p	1	size	size
	m	(Lcrm;)V	a	save
		p	1	levelProperties	levelProperties
	m	(Lfk;)Z	a	contains
		p	1	pos	pos
	m	(Lcvf;)Z	a	contains
		p	1	box	box
	m	()Lcwf;	a	asVoxelShape
	m	(Lbjh;)Z	a	contains
		p	1	pos	pos
	m	(DDJ)V	a	interpolateSize
		p	1	fromSize	fromSize
		p	3	toSize	toSize
		p	5	time	time
	m	(Lakq;)D	a	getDistanceInsideBorder
		p	1	entity	entity
	m	(DD)D	b	getDistanceInsideBorder
		p	1	x	x
		p	3	z	z
	m	(D)V	b	setBuffer
		p	1	buffer	buffer
	m	()Lbzv;	b	getStage
	m	(Lcrm;)V	b	load
		p	1	levelProperties	levelProperties
	m	(I)V	b	setWarningTime
		p	1	warningTime	warningTime
	m	()D	c	getBoundWest
	m	(D)V	c	setDamagePerBlock
		p	1	damagePerBlock	damagePerBlock
	m	(I)V	c	setWarningBlocks
		p	1	warningBlocks	warningBlocks
	m	(DD)V	c	setCenter
		p	1	x	x
		p	3	z	z
	m	()D	d	getBoundNorth
	m	()D	e	getBoundEast
	m	()D	f	getBoundSouth
	m	()D	g	getCenterX
	m	()D	h	getCenterZ
	m	()D	i	getSize
	m	()J	j	getTargetRemainingTime
	m	()D	k	getTargetSize
	m	()Ljava/util/List;	l	getListeners
	m	()I	m	getMaxWorldBorderRadius
	m	()D	n	getBuffer
	m	()D	o	getDamagePerBlock
	m	()D	p	getShrinkingSpeed
	m	()I	q	getWarningTime
	m	()I	r	getWarningBlocks
	m	()V	s	tick
c	bzw$a	net/minecraft/world/border/WorldBorder$Area
	m	()D	a	getBoundWest
	m	()D	b	getBoundEast
	m	()D	c	getBoundNorth
	m	()D	d	getBoundSouth
	m	()D	e	getSize
	m	()D	f	getShrinkingSpeed
	m	()J	g	getTargetRemainingTime
	m	()D	h	getTargetSize
	m	()Lbzv;	i	getStage
	m	()V	j	onMaxWorldBorderRadiusChanged
	m	()V	k	onCenterChanged
	m	()Lbzw$a;	l	getAreaInstance
	m	()Lcwf;	m	asVoxelShape
c	bzw$b	net/minecraft/world/border/WorldBorder$MovingArea
	f	D	b	oldSize
	f	D	c	newSize
	f	J	d	timeEnd
	f	J	e	timeStart
	f	D	f	timeDuration
	m	(Lbzw;DDJ)V	<init>	<init>
		p	2	oldSize	oldSize
		p	4	newSize	newSize
		p	6	duration	duration
c	bzw$c	net/minecraft/world/border/WorldBorder$StaticArea
	f	D	b	size
	f	D	c	boundWest
	f	D	d	boundNorth
	f	D	e	boundEast
	f	D	f	boundSouth
	f	Lcwf;	g	shape
	m	(Lbzw;D)V	<init>	<init>
		p	1	size	size
	m	()V	n	recalculateBounds
c	bzy	net/minecraft/world/chunk/Chunk
	m	(J)V	a	setLastSaveTime
		p	1	lastSaveTime	lastSaveTime
	m	(SI)V	a	markBlockForPostProcessing
	m	(Lakq;)V	a	addEntity
		p	1	entity	entity
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getList
		p	0	lists	lists
		p	1	index	index
	m	(Lcbv$a;[J)V	a	setHeightmap
		p	1	type	type
		p	2	heightmap	heightmap
	m	(Lfk;Lbwl;)V	a	setBlockEntity
		p	1	pos	pos
		p	2	blockEntity	blockEntity
	m	(Lcbv$a;)Lcbv;	a	getHeightmap
		p	1	type	type
	m	()Lcam;	a	getHighestNonEmptySection
	m	(Lcbu$a;)Ljava/util/BitSet;	a	getCarvingMask
		p	1	carver	carver
	m	(Lfk;Lbyj;Z)Lbyj;	a	setBlockState
		p	1	pos	pos
		p	2	state	state
	m	(Ljt;)V	a	addPendingBlockEntityTag
	m	(Lcbv$a;II)I	a	sampleHeightmap
		p	1	type	type
		p	2	x	x
		p	3	z	z
	m	(Ljava/util/Map;)V	a	setStructureStarts
	m	(Z)V	a	setShouldSave
		p	1	shouldSave	shouldSave
	m	(Z)V	b	setLightOn
		p	1	lightOn	lightOn
	m	()I	b	getHighestNonEmptySectionYOffset
	m	(J)V	b	setInhabitedTime
		p	1	inhabitedTime	inhabitedTime
	m	()Ljava/util/Set;	c	getBlockEntityPositions
	m	(Lfk;)V	d	removeBlockEntity
	m	()[Lcam;	d	getSectionArray
	m	(Lfk;)V	e	markBlockForPostProcessing
	m	()Ljava/util/Collection;	f	getHeightmaps
	m	(Lfk;)Ljt;	f	getBlockEntityTagAt
		p	1	pos	pos
	m	()Lbjh;	g	getPos
	m	()Ljava/util/Map;	h	getStructureStarts
	m	()Lbzz;	i	getBiomeArray
	m	()Z	j	needsSaving
	m	()Lcae;	k	getStatus
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	l	getPostProcessingLists
	m	()Ljava/util/stream/Stream;	m	getLightSourcesStream
	m	()Lbkl;	n	getBlockTickScheduler
	m	()Lbkl;	o	getFluidTickScheduler
	m	()Lcav;	p	getUpgradeData
	m	()J	q	getInhabitedTime
	m	()Z	r	isLightOn
c	bzz	net/minecraft/world/biome/source/BiomeArray
	f	I	a	DEFAULT_LENGTH
	f	I	b	HORIZONTAL_BIT_MASK
	f	I	c	VERTICAL_BIT_MASK
	f	I	e	HORIZONTAL_SECTION_COUNT
	f	I	f	VERTICAL_SECTION_COUNT
	f	[Lbkt;	g	data
	m	(Lbjh;Lbkw;)V	<init>	<init>
		p	1	pos	pos
		p	2	source	source
	m	(Lbjh;Lbkw;[I)V	<init>	<init>
		p	1	pos	pos
		p	2	source	source
		p	3	rawIds	rawIds
	m	([Lbkt;)V	<init>	<init>
		p	1	data	data
	m	(Lkv;)V	a	toPacket
		p	1	buf	buf
	m	()[I	a	toIntArray
	m	()Lbzz;	b	copy
c	c	net/minecraft/util/math/Quaternion
	f	Lc;	a	IDENTITY
	f	F	b	b
	f	F	c	c
	f	F	d	d
	f	F	e	a
	m	(Lc;)V	<init>	<init>
		p	1	other	other
	m	(Le;FZ)V	<init>	<init>
		p	1	axis	axis
		p	2	rotationAngle	rotationAngle
		p	3	degrees	degrees
	m	(FFFF)V	<init>	<init>
		p	1	b	b
		p	2	c	c
		p	3	d	d
		p	4	a	a
	m	(FFFZ)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	degrees	degrees
	m	(Lc;)V	a	hamiltonProduct
		p	1	other	other
	m	()F	a	getB
	m	(F)V	a	scale
		p	1	scale	scale
	m	(FFFF)V	a	set
		p	1	a	a
		p	2	b	b
		p	3	c	c
		p	4	d	d
	m	()F	b	getC
	m	(F)F	b	cos
		p	0	value	value
	m	(F)F	c	sin
		p	0	value	value
	m	()F	c	getD
	m	()F	d	getA
	m	()V	e	conjugate
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()V	f	normalize
	m	()Lc;	g	copy
c	ca	net/minecraft/advancement/criterion/AbstractCriterion
	f	Ljava/util/Map;	a	progressions
	m	(Lsv;Ljava/util/function/Predicate;)V	a	test
		p	1	tracker	tracker
		p	2	tester	tester
	m	(Lsv;)V	b	grant
		p	1	tracker	tracker
c	caa	net/minecraft/world/gen/chunk/ChunkGenerator
	f	Lbjx;	a	world
	f	J	b	seed
	f	Lbkw;	c	biomeSource
	f	Lcbq;	d	config
	m	(Lbjx;Lbkw;Lcbq;)V	<init>	<init>
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	config	config
	m	(Lalb;Lfk;)Ljava/util/List;	a	getEntitySpawnList
		p	1	category	category
		p	2	pos	pos
	m	(Lbkv;Lbzy;Lcaa;Lcmo;)V	a	setStructureStarts
	m	(Lbzy;)V	a	populateBiomes
		p	1	chunk	chunk
	m	(IILcbv$a;)I	a	getHeightOnGround
		p	1	x	x
		p	2	z	z
		p	3	heightmapType	heightmapType
	m	(Lxd;ZZ)V	a	spawnEntities
		p	1	world	world
		p	2	spawnMonsters	spawnMonsters
		p	3	spawnAnimals	spawnAnimals
	m	(Lxj;)V	a	generateFeatures
		p	1	region	region
	m	(Lbkt;Lcfl;)Z	a	hasStructure
	m	(Lbjx;Lbzy;)V	a	addStructureReferences
		p	1	world	world
		p	2	chunk	chunk
	m	(Lbkv;Lbzy;Lcbu$a;)V	a	carve
	m	(Lbjw;Ljava/lang/String;Lfk;IZ)Lfk;	a	locateStructure
		p	1	world	world
		p	2	id	id
		p	3	center	center
		p	4	radius	radius
		p	5	skipExistingChunks	skipExistingChunks
	m	(Lbkv;Lfk;)Lbkt;	a	getDecorationBiome
		p	2	pos	pos
	m	()Lcbq;	a	getConfig
	m	(Lxj;Lbzy;)V	a	buildSurface
	m	(Lbjx;Lbzy;)V	b	populateNoise
		p	1	world	world
		p	2	chunk	chunk
	m	()I	b	getSpawnHeight
	m	(Lxj;)V	b	populateEntities
		p	1	region	region
	m	(Lbkt;Lcfl;)Lcgn;	b	getStructureConfig
	m	(IILcbv$a;)I	c	getHeightInGround
	m	()Lbkw;	c	getBiomeSource
	m	()J	d	getSeed
	m	()I	e	getMaxY
	m	()I	f	getSeaLevel
c	cab	net/minecraft/world/gen/chunk/ChunkGeneratorFactory
	m	(Lbjw;Lbkw;Lcbq;)Lcaa;	create	create
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	config	config
c	cac	net/minecraft/world/gen/chunk/ChunkGeneratorType
	f	Lcab;	f	factory
	f	Z	g	buffetScreenOption
	f	Ljava/util/function/Supplier;	h	settingsSupplier
	m	(Lcab;ZLjava/util/function/Supplier;)V	<init>	<init>
		p	1	factory	factory
		p	2	buffetScreenOption	buffetScreenOption
		p	3	settingsSupplier	settingsSupplier
	m	(Ljava/lang/String;Lcab;Ljava/util/function/Supplier;Z)Lcac;	a	register
	m	()Lcbq;	a	createSettings
	m	()Z	b	isBuffetScreenOption
	m	(Lbjw;Lbkw;Lcbq;)Lcaa;	create	create
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	config	config
c	cad	net/minecraft/world/chunk/ChunkManager
	m	(Lbjh;)Z	a	shouldTickChunk
		p	1	pos	pos
	m	(Lbjh;Z)V	a	setChunkForced
		p	1	pos	pos
		p	2	forced	forced
	m	(IIZ)Lcal;	a	getWorldChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	create	create
	m	(ZZ)V	a	setMobSpawnOptions
		p	1	spawnMonsters	spawnMonsters
		p	2	spawnAnimals	spawnAnimals
	m	(Lakq;)Z	a	shouldTickEntity
	m	(II)Lcal;	a	getWorldChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(IILcae;Z)Lbzy;	a	getChunk
		p	1	x	x
		p	2	z	z
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lfk;)Z	a	shouldTickBlock
		p	1	pos	pos
	m	(II)Z	b	isChunkLoaded
		p	1	x	x
		p	2	z	z
	m	()Ljava/lang/String;	e	getDebugString
	m	()Lcoa;	k	getLightingProvider
c	cae	net/minecraft/world/chunk/ChunkStatus
	f	Ljava/util/EnumSet;	n	PRE_CARVER_HEIGHTMAPS
	f	Ljava/util/EnumSet;	o	POST_CARVER_HEIGHTMAPS
	f	Lcae$c;	p	STATUS_BUMP_NO_GEN_TASK
	f	Ljava/util/List;	q	DISTANCE_TO_TARGET_GENERATION_STATUS
	f	Lit/unimi/dsi/fastutil/ints/IntList;	r	STATUS_TO_TARGET_GENERATION_RADIUS
	f	Ljava/lang/String;	s	id
	f	I	t	index
	f	Lcae;	u	previous
	f	Lcae$b;	v	task
	f	Lcae$c;	w	noGenTask
	f	I	x	taskMargin
	f	Lcae$a;	y	chunkType
	f	Ljava/util/EnumSet;	z	heightMapTypes
	m	(Ljava/lang/String;Lcae;ILjava/util/EnumSet;Lcae$a;Lcae$b;Lcae$c;)V	<init>	<init>
		p	1	id	id
		p	2	previous	previous
		p	3	taskMargin	taskMargin
		p	4	heightMapTypes	heightMapTypes
		p	5	chunkType	chunkType
		p	6	task	task
	m	(Ljava/lang/String;Lcae;ILjava/util/EnumSet;Lcae$a;Lcae$b;Lcae$c;)Lcae;	a	register
		p	0	id	id
		p	1	previous	previous
		p	2	taskMargin	taskMargin
		p	3	heightMapTypes	heightMapTypes
		p	4	chunkType	chunkType
		p	5	task	task
	m	(Lxd;Lcmo;Lxg;Ljava/util/function/Function;Lbzy;)Ljava/util/concurrent/CompletableFuture;	a	runNoGenTask
	m	(Ljava/lang/String;Lcae;ILjava/util/EnumSet;Lcae$a;Lcae$d;)Lcae;	a	register
		p	0	id	id
		p	1	previous	previous
		p	2	taskMargin	taskMargin
		p	3	heightMapTypes	heightMapTypes
		p	4	chunkType	chunkType
		p	5	task	task
	m	(I)Lcae;	a	getTargetGenerationStatus
		p	0	distance	distance
	m	(Ljava/lang/String;Lcae;ILjava/util/EnumSet;Lcae$a;Lcae$b;)Lcae;	a	register
		p	0	id	id
		p	1	previous	previous
		p	2	taskMargin	taskMargin
		p	3	heightMapTypes	heightMapTypes
		p	4	chunkType	chunkType
		p	5	task	task
	m	(Lcae;)I	a	getTargetGenerationRadius
		p	0	status	status
	m	()Ljava/util/List;	a	createOrderedList
	m	(Lxd;Lcaa;Lcmo;Lxg;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	runTask
		p	2	chunkGenerator	chunkGenerator
	m	(Ljava/lang/String;)Lcae;	a	get
		p	0	id	id
	m	()I	b	getMaxTargetGenerationRadius
	m	(Lcae;)Z	b	isAtLeast
		p	1	chunk	chunk
	m	()I	c	getIndex
	m	()Ljava/lang/String;	d	getId
	m	()Lcae;	e	getPrevious
	m	()I	f	getTaskMargin
	m	()Lcae$a;	g	getChunkType
	m	()Ljava/util/EnumSet;	h	getHeightmapTypes
c	cae$a	net/minecraft/world/chunk/ChunkStatus$ChunkType
c	cae$b	net/minecraft/world/chunk/ChunkStatus$Task
	m	(Lcae;Lxd;Lcaa;Lcmo;Lxg;Ljava/util/function/Function;Ljava/util/List;Lbzy;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1	targetStatus	targetStatus
		p	3	generator	generator
c	cae$c	net/minecraft/world/chunk/ChunkStatus$NoGenTask
c	cae$d	net/minecraft/world/chunk/ChunkStatus$SimpleTask
	m	(Lxd;Lcaa;Ljava/util/List;Lbzy;)V	doWork	doWork
		p	2	generator	generator
		p	4	chunk	chunk
	m	(Lcae;Lxd;Lcaa;Lcmo;Lxg;Ljava/util/function/Function;Ljava/util/List;Lbzy;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1	targetStatus	targetStatus
		p	3	generator	generator
c	caf	net/minecraft/world/chunk/ChunkNibbleArray
	f	[B	a	byteArray
	m	(IIII)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	value	value
	m	(II)V	a	set
		p	1	index	index
		p	2	value	value
	m	()[B	a	asByteArray
	m	(III)I	a	get
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()Lcaf;	b	copy
	m	(III)I	b	getIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)I	b	get
	m	()Z	c	isUninitialized
	m	(I)Z	c	isEven
		p	1	n	n
	m	(I)I	d	divideByTwo
		p	1	n	n
c	cag	net/minecraft/world/chunk/EmptyChunk
	f	[Lbkt;	b	BIOMES
	m	(Lbjw;Lbjh;)V	<init>	<init>
		p	1	world	world
c	cah	net/minecraft/world/StructureHolder
	m	(Ljava/lang/String;)Lclv;	a	getStructureStart
		p	1	structure	structure
	m	(Ljava/lang/String;Lclv;)V	a	setStructureStart
		p	1	structure	structure
		p	2	start	start
	m	(Ljava/lang/String;J)V	a	addStructureReference
		p	1	structure	structure
		p	2	reference	reference
	m	(Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getStructureReferences
		p	1	structure	structure
	m	(Ljava/util/Map;)V	b	setStructureReferences
		p	1	structureReferences	structureReferences
	m	()Ljava/util/Map;	v	getStructureReferences
c	cai	net/minecraft/world/chunk/IdListPalette
	f	Lft;	a	idList
	f	Ljava/lang/Object;	b	fallback
	m	(Lft;Ljava/lang/Object;)V	<init>	<init>
		p	1	idList	idList
		p	2	defaultValue	defaultValue
c	caj	net/minecraft/world/chunk/BiMapPalette
	f	Lft;	a	idList
	f	Labf;	b	map
	f	Lcar;	c	resizeHandler
	f	Ljava/util/function/Function;	d	elementDeserializer
	f	Ljava/util/function/Function;	e	elementSerializer
	f	I	f	indexBits
	m	(Lft;ILcar;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	2	indexBits	indexBits
		p	3	resizeHandler	resizeHandler
		p	4	elementDeserializer	elementDeserializer
		p	5	elementSerializer	elementSerializer
	m	(Ljz;)V	b	toTag
		p	1	tag	tag
	m	()I	b	getIndexBits
c	cak	net/minecraft/world/chunk/ReadOnlyChunk
	f	Lcal;	a	wrapped
	m	(Lcal;)V	<init>	<init>
		p	1	wrapped	wrapped
	m	(Lcbv$a;)Lcbv$a;	c	transformHeightmapType
		p	1	type	type
	m	()Lcau;	getBlockTickScheduler	getBlockTickScheduler
	m	()Lcau;	getFluidTickScheduler	getFluidTickScheduler
	m	()Lcal;	u	getWrappedChunk
c	cal	net/minecraft/world/chunk/WorldChunk
	f	Lcam;	a	EMPTY_SECTION
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	[Lcam;	c	sections
	f	Lbzz;	d	biomeArray
	f	Ljava/util/Map;	e	pendingBlockEntityTags
	f	Z	f	loadedToWorld
	f	Lbjw;	g	world
	f	Ljava/util/Map;	h	heightmaps
	f	Lcav;	i	upgradeData
	f	Ljava/util/Map;	j	blockEntities
	f	[Labe;	k	entitySections
	f	Ljava/util/Map;	l	structureStarts
	f	Ljava/util/Map;	m	structureReferences
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	n	postProcessingLists
	f	Lbkl;	o	blockTickScheduler
	f	Lbkl;	p	fluidTickScheduler
	f	Z	q	unsaved
	f	J	r	lastSaveTime
	f	Z	s	shouldSave
	f	J	t	inhabitedTime
	f	Ljava/util/function/Supplier;	u	levelTypeProvider
	f	Ljava/util/function/Consumer;	v	loadToWorldConsumer
	f	Lbjh;	w	pos
	f	Z	x	isLightOn
	m	(Lbjw;Lcat;)V	<init>	<init>
		p	1	world	world
	m	()V	A	runPostProcessing
	m	()V	B	disableTickSchedulers
	m	(Lxd;)V	a	enableTickSchedulers
		p	1	world	world
	m	(Lakq;Lcvf;Ljava/util/List;Ljava/util/function/Predicate;)V	a	getEntities
		p	1	except	except
		p	2	box	box
		p	3	entityList	entityList
	m	(Ljava/util/function/Supplier;)V	a	setLevelTypeProvider
		p	1	levelTypeProvider	levelTypeProvider
	m	(III)Lcoj;	a	getFluidState
		p	1	x	x
		p	2	y	y
	m	(Lfk;Ljt;)Lbwl;	a	loadBlockEntity
		p	1	pos	pos
	m	(Lakq;I)V	a	remove
		p	1	entity	entity
	m	(Lbzz;Lkv;Ljt;I)V	a	loadFromPacket
	m	(Lfk;Lcal$a;)Lbwl;	a	getBlockEntity
		p	1	pos	pos
	m	(Laku;Lcvf;Ljava/util/List;Ljava/util/function/Predicate;)V	a	getEntities
		p	1	type	type
		p	2	box	box
		p	3	list	list
		p	4	predicate	predicate
	m	(Lbwl;)V	a	addBlockEntity
	m	(Ljava/lang/Class;Lcvf;Ljava/util/List;Ljava/util/function/Predicate;)V	a	getEntities
		p	1	entityClass	entityClass
		p	2	box	box
		p	3	result	result
		p	4	predicate	predicate
	m	(Lakq;)V	b	remove
	m	(Z)V	c	setLoadedToWorld
	m	(Z)V	d	setUnsaved
		p	1	unsaved	unsaved
	m	()Lcoa;	e	getLightingProvider
	m	(Lfk;)Lbwl;	j	createBlockEntity
	m	()V	s	markDirty
	m	()Z	t	isEmpty
	m	()Lwo$b;	u	getLevelType
	m	()V	w	loadToWorld
	m	()Lbjw;	x	getWorld
	m	()Ljava/util/Map;	y	getBlockEntities
	m	()[Labe;	z	getEntitySectionArray
c	cal$a	net/minecraft/world/chunk/WorldChunk$CreationType
c	cam	net/minecraft/world/chunk/ChunkSection
	f	Lcaq;	a	palette
	f	I	b	yOffset
	f	S	c	nonEmptyBlockCount
	f	S	d	randomTickableBlockCount
	f	S	e	nonEmptyFluidCount
	f	Lcas;	f	container
	m	(I)V	<init>	<init>
		p	1	yOffset	yOffset
	m	(ISSS)V	<init>	<init>
		p	1	yOffset	yOffset
		p	2	nonEmptyBlockCount	nonEmptyBlockCount
		p	3	randomTickableBlockCount	randomTickableBlockCount
		p	4	nonEmptyFluidCount	nonEmptyFluidCount
	m	(Lcam;)Z	a	isEmpty
		p	0	section	section
	m	(III)Lbyj;	a	getBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()V	a	lock
	m	(Lkv;)V	a	fromPacket
	m	(IIILbyj;Z)Lbyj;	a	setBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	state	state
		p	5	lock	lock
	m	(IIILbyj;)Lbyj;	a	setBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	state	state
	m	(Lkv;)V	b	toPacket
	m	()V	b	unlock
	m	(III)Lcoj;	b	getFluidState
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()Z	c	isEmpty
	m	()Z	d	hasRandomTicks
	m	()Z	e	hasRandomBlockTicks
	m	()Z	f	hasRandomFluidTicks
	m	()I	g	getYOffset
	m	()V	h	calculateCounts
	m	()Lcas;	i	getContainer
	m	()I	j	getPacketSize
c	can	net/minecraft/world/chunk/ChunkProvider
	m	(Lbkf;Lgd;)V	a	onLightUpdate
		p	1	type	type
	m	(II)Lbjg;	c	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	()Lbjg;	l	getWorld
c	cao	net/minecraft/world/chunk/ArrayPalette
	f	Lft;	a	idList
	f	[Ljava/lang/Object;	b	array
	f	Lcar;	c	resizeListener
	f	Ljava/util/function/Function;	d	valueDeserializer
	f	I	e	indexBits
	f	I	f	size
	m	(Lft;ILcar;Ljava/util/function/Function;)V	<init>	<init>
		p	2	integer	integer
		p	3	resizeListener	resizeListener
		p	4	valueDeserializer	valueDeserializer
	m	()I	b	getSize
c	cap	net/minecraft/world/level/storage/AlphaChunkDataArray
	f	[B	a	data
	f	I	b	zOffset
	f	I	c	xOffset
	m	([BI)V	<init>	<init>
		p	1	data	data
		p	2	yCoordinateBits	yCoordinateBits
	m	(III)I	a	get
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	caq	net/minecraft/world/chunk/Palette
	m	(I)Ljava/lang/Object;	a	getByIndex
		p	1	index	index
	m	(Ljava/lang/Object;)I	a	getIndex
		p	1	object	object
	m	(Lkv;)V	a	fromPacket
		p	1	buf	buf
	m	()I	a	getPacketSize
	m	(Ljz;)V	a	fromTag
		p	1	tag	tag
	m	(Lkv;)V	b	toPacket
		p	1	buf	buf
	m	(Ljava/lang/Object;)Z	b	accepts
		p	1	object	object
c	car	net/minecraft/world/chunk/PaletteResizeListener
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1	newSize	newSize
		p	2	objectAdded	objectAdded
c	cas	net/minecraft/world/chunk/PalettedContainer
	f	Labd;	a	data
	f	Lcaq;	b	fallbackPalette
	f	Lcar;	c	noOpPaletteResizeHandler
	f	Lft;	d	idList
	f	Ljava/util/function/Function;	e	elementDeserializer
	f	Ljava/util/function/Function;	f	elementSerializer
	f	Lcaq;	h	palette
	f	I	i	paletteSize
	f	Ljava/util/concurrent/locks/ReentrantLock;	j	writeLock
	m	(Lcaq;Lft;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	<init>	<init>
		p	1	fallbackPalette	fallbackPalette
		p	2	idList	idList
		p	3	elementDeserializer	elementDeserializer
		p	4	elementSerializer	elementSerializer
		p	5	defaultElement	defaultElement
	m	()V	a	lock
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	setAndGetOldValue
		p	1	index	index
		p	2	value	value
	m	(Lkv;)V	a	fromPacket
		p	1	buf	buf
	m	(Lcas$a;)V	a	count
		p	1	consumer	consumer
	m	(Ljz;[J)V	a	read
		p	1	paletteTag	paletteTag
		p	2	data	data
	m	(III)Ljava/lang/Object;	a	get
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)Ljava/lang/Object;	a	get
		p	1	index	index
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	setSync
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	value	value
	m	(Ljt;Ljava/lang/String;Ljava/lang/String;)V	a	write
	m	(Lkv;)V	b	toPacket
		p	1	buf	buf
	m	()V	b	unlock
	m	(III)I	b	toIndex
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(I)V	b	setPaletteSize
		p	1	size	size
	m	(ILjava/lang/Object;)V	b	set
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	value	value
	m	()I	c	getPacketSize
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1	newSize	newSize
		p	2	objectAdded	objectAdded
c	cas$a	net/minecraft/world/chunk/PalettedContainer$CountConsumer
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1	object	object
		p	2	count	count
c	cat	net/minecraft/world/chunk/ProtoChunk
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbjh;	b	pos
	f	Z	c	shouldSave
	f	Lcoa;	e	lightingProvider
	f	Ljava/util/Map;	f	heightmaps
	f	Lcae;	g	status
	f	Ljava/util/Map;	h	blockEntities
	f	Ljava/util/Map;	i	blockEntityTags
	f	[Lcam;	j	sections
	f	Ljava/util/List;	k	entities
	f	Ljava/util/List;	l	lightSources
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	m	postProcessingLists
	f	Ljava/util/Map;	n	structureStarts
	f	Ljava/util/Map;	o	structureReferences
	f	Lcav;	p	upgradeData
	f	Lcau;	q	blockTickScheduler
	f	Lcau;	r	fluidTickScheduler
	f	J	s	inhabitedTime
	f	Ljava/util/Map;	t	carvingMasks
	f	Z	u	isLightOn
	m	(I)Lcam;	a	getSection
		p	1	y	y
	m	(Lcbu$a;Ljava/util/BitSet;)V	a	setCarvingMask
		p	1	carver	carver
		p	2	mask	mask
	m	(Lcae;)V	a	setStatus
	m	(SILbjh;)Lfk;	a	joinBlockPos
		p	0	sectionRel	sectionRel
		p	1	sectionY	sectionY
		p	2	chunkPos	chunkPos
	m	(Lcoa;)V	a	setLightingProvider
	m	(Ljt;)V	b	addEntity
		p	1	entityTag	entityTag
	m	(SI)V	b	addLightSource
		p	1	chunkSliceRel	chunkSliceRel
		p	2	sectionY	sectionY
	m	()Lcoa;	e	getLightingProvider
	m	(Lfk;)V	j	addLightSource
		p	1	pos	pos
	m	(Lfk;)S	k	getPackedSectionRelative
		p	0	pos	pos
	m	()Lcau;	s	getBlockTickScheduler
	m	()Lcau;	t	getFluidTickScheduler
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	w	getLightSourcesBySection
	m	()Ljava/util/Map;	x	getBlockEntities
	m	()Ljava/util/List;	y	getEntities
	m	()Ljava/util/Map;	z	getBlockEntityTags
c	cau	net/minecraft/world/ChunkTickScheduler
	f	Ljava/util/function/Predicate;	a	shouldExclude
	f	Lbjh;	b	pos
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	c	scheduledPositions
	m	(Ljava/util/function/Predicate;Lbjh;Ljz;)V	<init>	<init>
		p	1	shouldExclude	shouldExclude
	m	(Ljava/util/function/Predicate;Lbjh;)V	<init>	<init>
		p	1	shouldExclude	shouldExclude
	m	(Lbkl;Ljava/util/function/Function;)V	a	tick
		p	1	scheduler	scheduler
		p	2	dataMapper	dataMapper
	m	()Ljz;	b	toNbt
c	cav	net/minecraft/world/chunk/UpgradeData
	f	Lcav;	a	NO_UPGRADE_DATA
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	[Lfq;	c	EIGHT_WAYS
	f	Ljava/util/EnumSet;	d	sidesToUpgrade
	f	[[I	e	centerIndicesToUpgrade
	f	Ljava/util/Map;	f	BLOCK_TO_LOGIC
	f	Ljava/util/Set;	g	CALLBACK_LOGICS
	m	(Ljt;)V	<init>	<init>
		p	1	tag	tag
	m	(Lbyj;Lfp;Lbjx;Lfk;Lfk;)Lbyj;	a	applyAdjacentBlock
		p	0	oldState	oldState
		p	1	dir	dir
		p	2	world	world
		p	3	currentPos	currentPos
		p	4	otherPos	otherPos
	m	(Lcal;Lfq;)V	a	upgradeSide
		p	0	chunk	chunk
		p	1	side	side
	m	(Lcal;)V	a	upgrade
		p	1	chunk	chunk
	m	()Z	a	isDone
	m	()Ljt;	b	toTag
	m	(Lcal;)V	b	upgradeCenter
		p	1	chunk	chunk
c	cav$a	net/minecraft/world/chunk/UpgradeData$Logic
	m	(Lbjx;)V	a	postUpdate
		p	1	world	world
	m	(Lbyj;Lfp;Lbyj;Lbjx;Lfk;Lfk;)Lbyj;	a	getUpdatedState
c	cav$b	net/minecraft/world/chunk/UpgradeData$BulitinLogic
	f	[Lfp;	f	DIRECTIONS
c	cav$b$4	net/minecraft/world/chunk/UpgradeData$BulitinLogic$4
	f	Ljava/lang/ThreadLocal;	g	distanceToPositions
c	cax	net/minecraft/world/ChunkSerializer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljt;Lcal;)V	a	writeEntities
		p	0	tag	tag
		p	1	chunk	chunk
	m	(Lxd;Lcmo;Lasr;Lbjh;Ljt;)Lcat;	a	deserialize
		p	1	structureManager	structureManager
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Ljz;	a	toNbt
		p	0	lists	lists
	m	(Lcaa;Lcmo;Ljt;)Ljava/util/Map;	a	readStructureStarts
		p	0	chunkGenerator	chunkGenerator
		p	1	structureManager	structureManager
	m	(Lxd;Lbzy;)Ljt;	a	serialize
		p	1	chunk	chunk
	m	(Lbjh;Ljt;)Ljava/util/Map;	a	readStructureReferences
	m	(Lbjh;Ljava/util/Map;Ljava/util/Map;)Ljt;	a	writeStructures
		p	0	pos	pos
		p	1	structureStarts	structureStarts
		p	2	structureReferences	structureReferences
	m	(Ljt;)Lcae$a;	a	getChunkType
		p	0	tag	tag
c	cay	net/minecraft/world/storage/VersionedChunkStorage
	f	Lcaz;	a	worker
	f	Lcom/mojang/datafixers/DataFixer;	b	dataFixer
	f	Lclh;	c	featureUpdater
	m	(Ljt;)I	a	getDataVersion
		p	0	tag	tag
	m	(Lbjh;Ljt;)V	a	setTagAt
	m	(Lcbi;Ljava/util/function/Supplier;Ljt;)Ljt;	a	updateChunkTag
		p	1	dimensionType	dimensionType
		p	2	persistentStateManagerFactory	persistentStateManagerFactory
		p	3	tag	tag
	m	(Lbjh;)Ljt;	e	getNbt
	m	()V	i	completeAll
c	caz	net/minecraft/world/storage/StorageIoWorker
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/Thread;	b	thread
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	c	closed
	f	Ljava/util/Queue;	d	tasks
	f	Lcbd;	e	storage
	f	Ljava/util/Map;	f	results
	f	Z	g	active
	f	Ljava/util/concurrent/CompletableFuture;	h	future
	m	(Lcbd;Ljava/lang/String;)V	<init>	<init>
		p	1	storage	storage
		p	2	name	name
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1	taskFactory	taskFactory
	m	(Lbjh;)Ljt;	a	getNbt
		p	1	pos	pos
	m	(Lbjh;Ljt;)Ljava/util/concurrent/CompletableFuture;	a	setResult
		p	1	pos	pos
		p	2	nbt	nbt
	m	(Lbjh;Lcaz$a;)V	a	write
		p	1	pos	pos
	m	()Ljava/util/concurrent/CompletableFuture;	a	completeAll
	m	()Ljava/util/concurrent/CompletableFuture;	b	shutdown
	m	()V	c	park
	m	()V	d	work
	m	()Z	e	writeResult
	m	()V	f	writeAll
	m	()V	g	finish
	m	()Z	h	runTask
c	caz$a	net/minecraft/world/storage/StorageIoWorker$Result
	f	Ljt;	a	nbt
	f	Ljava/util/concurrent/CompletableFuture;	b	future
c	cb	net/minecraft/advancement/criterion/SlideDownBlockCriterion
	f	Lsm;	a	ID
	m	(Lcom/google/gson/JsonObject;)Lbph;	a	getBlock
		p	0	root	root
	m	(Lbph;Ljava/lang/String;)V	a	method_23905
		p	1	key	key
	m	(Lxe;Lbyj;)V	a	test
		p	1	player	player
		p	2	state	state
	m	(Lbyj;Lcb$a;)Z	a	method_23906
		p	1	conditions	conditions
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcb$a;	b	conditionsFromJson
c	cb$a	net/minecraft/advancement/criterion/SlideDownBlockCriterion$Conditions
	f	Lbph;	a	block
	f	Lcc;	b	state
	m	(Lbph;Lcc;)V	<init>	<init>
		p	1	block	block
		p	2	state	state
	m	(Lbph;)Lcb$a;	a	create
		p	0	block	block
	m	(Lbyj;)Z	a	test
		p	1	state	state
c	cba	net/minecraft/world/level/storage/AlphaChunkIo
	m	(Lcba$a;Ljt;Lbkw;)V	a	convertAlphaChunk
		p	0	alphaChunk	alphaChunk
		p	1	tag	tag
		p	2	biomeSource	biomeSource
	m	(Ljt;)Lcba$a;	a	readAlphaChunk
		p	0	tag	tag
c	cba$a	net/minecraft/world/level/storage/AlphaChunkIo$AlphaChunk
	f	J	a	lastUpdate
	f	Z	b	terrainPopulated
	f	[B	c	heightMap
	f	Lcap;	d	blockLight
	f	Lcap;	e	skyLight
	f	Lcap;	f	data
	f	[B	g	blocks
	f	Ljz;	h	entities
	f	Ljz;	i	blockEntities
	f	Ljz;	j	blockTicks
	f	I	k	x
	f	I	l	z
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
c	cbb	net/minecraft/world/storage/SectorMap
	m	(I)I	a	allocate
	m	(II)V	a	allocate
	m	(II)V	b	free
c	cbc	net/minecraft/world/storage/RegionFile
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/nio/ByteBuffer;	b	ZERO
	f	Ljava/nio/channels/FileChannel;	c	channel
	f	Ljava/nio/file/Path;	d	directory
	f	Lcbe;	e	outputChunkStreamVersion
	f	Ljava/nio/ByteBuffer;	f	header
	f	Ljava/nio/IntBuffer;	g	sectorData
	f	Ljava/nio/IntBuffer;	h	saveTimes
	f	Lcbb;	i	sectors
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lcbe;)V	<init>	<init>
		p	1	file	file
		p	2	directory	directory
	m	(Ljava/io/File;Ljava/io/File;)V	<init>	<init>
		p	1	file	file
		p	2	directory	directory
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcbc$b;	a	writeSafely
	m	(Lbjh;)Ljava/io/DataInputStream;	a	getChunkInputStream
		p	1	pos	pos
	m	(II)I	a	packSectorData
		p	1	offset	offset
		p	2	size	size
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	getInputStream
		p	0	buffer	buffer
		p	1	length	length
	m	(I)I	a	getSize
		p	0	sectorData	sectorData
	m	(B)Z	a	hasChunkStreamVersionId
	m	(Lbjh;Ljava/nio/ByteBuffer;)V	a	writeChunk
		p	1	pos	pos
	m	(Lbjh;)Z	b	isChunkValid
		p	1	pos	pos
	m	()V	b	writeHeader
	m	(B)B	b	getChunkStreamVersionId
	m	(I)I	b	getOffset
		p	0	sectorData	sectorData
	m	()V	c	fillLastSector
	m	(Lbjh;)Ljava/io/DataOutputStream;	c	getChunkOutputStream
		p	1	pos	pos
	m	(I)I	c	getSectorCount
		p	0	byteCount	byteCount
	m	(Lbjh;)Z	d	hasChunk
		p	1	pos	pos
	m	(Lbjh;)Ljava/nio/file/Path;	e	getExternalChunkPath
	m	(Lbjh;)I	f	getSectorData
		p	1	pos	pos
	m	(Lbjh;)I	g	getIndex
		p	0	pos	pos
c	cbc$a	net/minecraft/world/storage/RegionFile$ChunkBuffer
	f	Lbjh;	b	pos
c	cbc$b	net/minecraft/world/storage/RegionFile$OutputAction
c	cbd	net/minecraft/world/storage/RegionBasedStorage
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	cachedRegionFiles
	f	Ljava/io/File;	b	directory
	m	(Ljava/io/File;)V	<init>	<init>
		p	1	directory	directory
	m	(Lbjh;)Ljt;	a	getTagAt
		p	1	pos	pos
	m	(Lbjh;Ljt;)V	a	write
	m	(Lbjh;)Lcbc;	b	getRegionFile
		p	1	pos	pos
c	cbe	net/minecraft/world/storage/ChunkStreamVersion
	f	Lcbe;	a	GZIP
	f	Lcbe;	b	DEFLATE
	f	Lcbe;	c	UNCOMPRESSED
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	VERSIONS
	f	I	e	id
	f	Lcbe$a;	f	inputStreamWrapper
	f	Lcbe$a;	g	outputStreamWrapper
	m	(ILcbe$a;Lcbe$a;)V	<init>	<init>
		p	1	id	id
		p	2	inputStreamWrapper	inputStreamWrapper
		p	3	outputStreamWrapper	outputStreamWrapper
	m	()I	a	getId
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
		p	1	outputStream	outputStream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
		p	1	inputStream	inputStream
	m	(I)Lcbe;	a	get
		p	0	id	id
	m	(Lcbe;)Lcbe;	a	add
		p	0	version	version
	m	(I)Z	b	exists
		p	0	id	id
c	cbe$a	net/minecraft/world/storage/ChunkStreamVersion$Wrapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	wrap	wrap
		p	1	object	object
c	cbf	net/minecraft/world/storage/SerializingRegionBasedStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcaz;	b	worker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	loadedElements
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	d	unsavedElements
	f	Ljava/util/function/BiFunction;	e	deserializer
	f	Ljava/util/function/Function;	f	factory
	f	Lcom/mojang/datafixers/DataFixer;	g	dataFixer
	f	Lacd;	h	dataFixType
	m	(Ljava/io/File;Ljava/util/function/BiFunction;Ljava/util/function/Function;Lcom/mojang/datafixers/DataFixer;Lacd;)V	<init>	<init>
		p	1	directory	directory
		p	2	deserializer	deserializer
		p	3	factory	factory
		p	4	dataFixer	dataFixer
		p	5	dataFixType	dataFixType
	m	(J)V	a	onUpdate
		p	1	pos	pos
	m	(Lcom/mojang/datafixers/Dynamic;)I	a	getDataVersion
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(J)V	b	onLoad
		p	1	pos	pos
	m	(Lgd;)Z	b	isPosInvalid
		p	1	pos	pos
	m	(Lbjh;)V	b	loadDataAt
	m	(J)Ljava/util/Optional;	c	getIfLoaded
		p	1	pos	pos
	m	(Lbjh;)V	d	save
	m	(J)Ljava/util/Optional;	d	get
		p	1	pos	pos
	m	(J)Labu;	e	getOrCreate
		p	1	pos	pos
c	cbh	net/minecraft/world/dimension/Dimension
	f	[F	a	MOON_PHASE_TO_SIZE
	f	Lbjw;	b	world
	f	Z	c	waterVaporizes
	f	Z	d	isNether
	f	[F	e	lightLevelToBrightness
	f	Lcbi;	f	type
	f	[F	g	backgroundColor
	m	(Lbjw;Lcbi;F)V	<init>	<init>
		p	1	world	world
		p	2	type	type
	m	(II)Z	a	isFogThick
		p	1	x	x
		p	2	z	z
	m	(J)I	a	getMoonPhase
		p	1	time	time
	m	(Lbjh;Z)Lfk;	a	getSpawningBlockInChunk
		p	1	chunkPos	chunkPos
		p	2	checkMobSpawnValidity	checkMobSpawnValidity
	m	(I)F	a	getBrightness
		p	1	lightLevel	lightLevel
	m	()F	a	getCloudHeight
	m	(JF)F	a	getSkyAngle
		p	1	timeOfDay	timeOfDay
		p	3	tickDelta	tickDelta
	m	(IIZ)Lfk;	a	getTopSpawningBlockPosition
		p	1	x	x
		p	2	z	z
		p	3	checkMobSpawnValidity	checkMobSpawnValidity
	m	(FF)[F	a	getBackgroundColor
		p	1	skyAngle	skyAngle
		p	2	tickDelta	tickDelta
	m	()Z	b	hasGround
	m	(FF)Lcvl;	b	getFogColor
		p	1	skyAngle	skyAngle
		p	2	tickDelta	tickDelta
	m	()Lfk;	c	getForcedSpawnPoint
	m	()D	d	getHorizonShadingRatio
	m	()Z	e	doesWaterVaporize
	m	()Z	f	hasSkyLight
	m	()Z	g	isNether
	m	()Lbzw;	h	createWorldBorder
	m	()V	i	saveWorldData
	m	()V	j	update
	m	()Lcaa;	k	createChunkGenerator
	m	()Z	l	hasVisibleSky
	m	()Z	m	canPlayersSleep
	m	()Lcbi;	n	getType
c	cbi	net/minecraft/world/dimension/DimensionType
	f	I	d	id
	f	Ljava/lang/String;	e	suffix
	f	Ljava/lang/String;	f	saveDir
	f	Ljava/util/function/BiFunction;	g	factory
	f	Z	h	hasSkyLight
	f	Lbkz;	i	biomeAccessType
	m	(ILjava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;ZLbkz;)V	<init>	<init>
		p	1	dimensionId	dimensionId
		p	2	suffix	suffix
		p	3	saveDir	saveDir
		p	4	factory	factory
		p	5	hasSkylight	hasSkylight
	m	(Ljava/lang/String;Lcbi;)Lcbi;	a	register
		p	0	id	id
		p	1	dimension	dimension
	m	(Lcom/mojang/datafixers/Dynamic;)Lcbi;	a	deserialize
	m	(Lsm;)Lcbi;	a	byId
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Lcbi;	a	byRawId
	m	(Ljava/io/File;)Ljava/io/File;	a	getSaveDirectory
		p	1	root	root
	m	(Lbjw;)Lcbh;	a	create
	m	(Lcbi;)Lsm;	a	getId
	m	()I	b	getRawId
	m	()Ljava/lang/String;	c	getSuffix
	m	()Z	d	hasSkyLight
	m	()Lbkz;	e	getBiomeAccessType
c	cbj	net/minecraft/world/dimension/TheNetherDimension
	m	(Lbjw;Lcbi;)V	<init>	<init>
		p	1	world	world
		p	2	type	type
c	cbk	net/minecraft/world/dimension/OverworldDimension
	m	(Lbjw;Lcbi;)V	<init>	<init>
		p	1	world	world
		p	2	type	type
c	cbl	net/minecraft/entity/boss/dragon/EnderDragonSpawnState
	m	(Lxd;Lcbm;Ljava/util/List;ILfk;)V	a	run
		p	1	world	world
		p	2	fight	fight
		p	3	crystals	crystals
c	cbm	net/minecraft/entity/boss/dragon/EnderDragonFight
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	VALID_ENTITY
	f	Lxa;	c	bossBar
	f	Lxd;	d	world
	f	Ljava/util/List;	e	gateways
	f	Lbyo;	f	endPortalPattern
	f	I	g	dragonSeenTimer
	f	I	h	endCrystalsAlive
	f	I	i	crystalCountTimer
	f	I	j	playerUpdateTimer
	f	Z	k	dragonKilled
	f	Z	l	previouslyKilled
	f	Ljava/util/UUID;	m	dragonUuid
	f	Z	n	doLegacyCheck
	f	Lfk;	o	exitPortalLocation
	f	Lcbl;	p	dragonSpawnState
	f	I	q	spawnStateTimer
	f	Ljava/util/List;	r	crystals
	m	(Lxd;Ljt;)V	<init>	<init>
		p	1	world	world
	m	(Lfk;)V	a	generateEndGateway
	m	(Laus;)V	a	dragonKilled
		p	1	dragon	dragon
	m	(Z)V	a	generateEndPortal
		p	1	previouslyKilled	previouslyKilled
	m	()Ljt;	a	toTag
	m	(Laur;Lajz;)V	a	crystalDestroyed
		p	1	enderCrystal	enderCrystal
		p	2	source	source
	m	(Lcbl;)V	a	setSpawnState
	m	(Ljava/util/List;)V	a	respawnDragon
	m	(Laus;)V	b	updateFight
		p	1	dragon	dragon
	m	()V	b	tick
	m	()I	c	getAliveEndCrystals
	m	()Z	d	hasPreviouslyKilled
	m	()V	e	respawnDragon
	m	()V	f	resetEndCrystals
	m	()V	g	convertFromLegacy
	m	()V	h	checkDragonSeen
	m	()Z	i	worldContainsEndPortal
	m	()Lbyo$b;	j	findEndPortal
	m	()Z	k	loadChunks
	m	()V	l	updatePlayers
	m	()V	m	countAliveCrystals
	m	()V	n	generateNewEndGateway
	m	()Laus;	o	createDragon
c	cbn	net/minecraft/world/dimension/TheEndDimension
	f	Lfk;	f	SPAWN_POINT
	f	Lcbm;	g	enderDragonFight
	m	(Lbjw;Lcbi;)V	<init>	<init>
		p	1	world	world
		p	2	type	type
c	cbq	net/minecraft/world/gen/chunk/ChunkGeneratorConfig
	f	I	a	villageDistance
	f	I	b	villageSeparation
	f	I	c	oceanMonumentSpacing
	f	I	d	oceanMonumentSeparation
	f	I	e	strongholdDistance
	f	I	f	strongholdCount
	f	I	g	strongholdSpread
	f	I	h	templeDistance
	f	I	i	templeSeparation
	f	I	j	shipwreckSpacing
	f	I	k	shipwreckSeparation
	f	I	l	endCityDistance
	f	I	m	endCitySeparation
	f	I	n	oceanRuinSpacing
	f	I	o	oceanRuinSeparation
	f	I	p	mansionDistance
	f	I	q	mansionSeparation
	f	Lbyj;	r	defaultBlock
	f	Lbyj;	s	defaultFluid
	m	(Lbyj;)V	a	setDefaultBlock
		p	1	state	state
	m	()I	a	getVillageDistance
	m	(Lbyj;)V	b	setDefaultFluid
		p	1	state	state
	m	()I	b	getVillageSeparation
	m	()I	c	getOceanMonumentSpacing
	m	()I	d	getOceanMonumentSeparation
	m	()I	e	getStrongholdDistance
	m	()I	f	getStrongholdCount
	m	()I	g	getStrongholdSpread
	m	()I	h	getTempleDistance
	m	()I	i	getTempleSeparation
	m	()I	j	getShipwreckSpacing
	m	()I	k	getShipwreckSeparation
	m	()I	l	getOceanRuinSpacing
	m	()I	m	getOceanRuinSeparation
	m	()I	n	getEndCityDistance
	m	()I	o	getEndCitySeparation
	m	()I	p	getMansionDistance
	m	()I	q	getMansionSeparation
	m	()Lbyj;	r	getDefaultBlock
	m	()Lbyj;	s	getDefaultFluid
	m	()I	t	getMaxY
	m	()I	u	getMinY
c	cbr	net/minecraft/world/gen/chunk/DebugChunkGeneratorConfig
c	cbs	net/minecraft/world/gen/chunk/DebugChunkGenerator
	f	Lbyj;	e	AIR
	f	Lbyj;	f	BARRIER
	f	Ljava/util/List;	g	BLOCK_STATES
	f	I	h	X_SIDE_LENGTH
	f	I	i	Z_SIDE_LENGTH
	m	(Lbjx;Lbkw;Lcbr;)V	<init>	<init>
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	config	config
	m	(II)Lbyj;	a	getBlockState
		p	0	x	x
		p	1	z	z
c	cbt	net/minecraft/world/gen/chunk/FlatChunkGenerator
	f	Lbkt;	e	biome
	f	Lccc;	f	phantomSpawner
	f	Laxt;	g	catSpawner
	m	(Lbjx;Lbkw;Lciy;)V	<init>	<init>
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	config	config
	m	()Lbkt;	g	getBiome
c	cbt$a	net/minecraft/world/gen/chunk/FlatChunkGenerator$FlatChunkGeneratorBiome
c	cbu	net/minecraft/world/gen/GenerationStep
c	cbu$a	net/minecraft/world/gen/GenerationStep$Carver
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	cbu$b	net/minecraft/world/gen/GenerationStep$Feature
	f	Ljava/util/Map;	i	BY_NAME
	f	Ljava/lang/String;	j	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
c	cbv	net/minecraft/world/Heightmap
	f	Ljava/util/function/Predicate;	a	ALWAYS_TRUE
	f	Ljava/util/function/Predicate;	b	SUFFOCATES
	f	Labd;	c	storage
	f	Ljava/util/function/Predicate;	d	blockPredicate
	f	Lbzy;	e	chunk
	m	(Lbzy;Lcbv$a;)V	<init>	<init>
		p	2	type	type
	m	(III)V	a	set
		p	1	x	x
		p	2	z	z
		p	3	height	height
	m	(II)I	a	get
		p	1	x	x
		p	2	z	z
	m	(Lbzy;Ljava/util/Set;)V	a	populateHeightmaps
		p	1	types	types
	m	(I)I	a	get
		p	1	index	index
	m	()[J	a	asLongArray
	m	(IIILbyj;)Z	a	trackUpdate
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	state	state
	m	([J)V	a	setTo
		p	1	heightmap	heightmap
	m	(II)I	c	toIndex
		p	0	x	x
		p	1	z	z
c	cbv$a	net/minecraft/world/Heightmap$Type
	f	Ljava/lang/String;	g	name
	f	Lcbv$b;	h	purpose
	f	Ljava/util/function/Predicate;	i	blockPredicate
	f	Ljava/util/Map;	j	BY_NAME
	m	(Ljava/lang/String;ILjava/lang/String;Lcbv$b;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3	name	name
		p	4	purpose	purpose
		p	5	blockPredicate	blockPredicate
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcbv$a;	a	byName
		p	0	name	name
	m	()Z	b	shouldSendToClient
	m	()Z	c	isStoredServerSide
	m	()Ljava/util/function/Predicate;	d	getBlockPredicate
c	cbv$b	net/minecraft/world/Heightmap$Purpose
c	cbw	net/minecraft/world/gen/chunk/CavesChunkGeneratorConfig
c	cbx	net/minecraft/world/gen/chunk/CavesChunkGenerator
	f	[D	h	noiseFalloff
	m	(Lbjw;Lbkw;Lcbw;)V	<init>	<init>
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	config	config
	m	()[D	j	buildNoiseFalloff
c	cby	net/minecraft/world/gen/chunk/SurfaceChunkGenerator
	f	Lccf;	e	random
	f	Lbyj;	f	defaultBlock
	f	Lbyj;	g	defaultFluid
	f	Lbyj;	i	AIR
	f	I	j	verticalNoiseResolution
	f	I	k	horizontalNoiseResolution
	f	I	l	noiseSizeX
	f	I	m	noiseSizeY
	f	I	n	noiseSizeZ
	f	Lcnq;	r	surfaceDepthNoise
	m	(Lbjx;Lbkw;IIILcbq;Z)V	<init>	<init>
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	verticalNoiseResolution	verticalNoiseResolution
		p	4	horizontalNoiseResolution	horizontalNoiseResolution
		p	5	worldHeight	worldHeight
		p	6	config	config
		p	7	useSimplexNoise	useSimplexNoise
	m	([DIIDDDDII)V	a	sampleNoiseColumn
		p	1	buffer	buffer
		p	2	x	x
		p	3	z	z
	m	(Lbzy;Ljava/util/Random;)V	a	buildBedrock
	m	([DII)V	a	sampleNoiseColumn
		p	1	buffer	buffer
		p	2	x	x
		p	3	z	z
	m	(IIIDDDD)D	a	sampleNoise
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(DDI)D	a	computeNoiseFalloff
		p	1	depth	depth
		p	3	scale	scale
		p	5	y	y
	m	(II)[D	a	computeNoiseRange
		p	1	x	x
		p	2	z	z
	m	(II)[D	b	sampleNoiseColumn
		p	1	x	x
		p	2	z	z
	m	()I	i	getNoiseSizeY
c	cbz	net/minecraft/world/gen/chunk/OverworldChunkGeneratorConfig
	m	()I	v	getBiomeSize
	m	()I	w	getRiverSize
	m	()I	x	getForcedBiome
c	cc	net/minecraft/predicate/StatePredicate
	f	Lcc;	a	ANY
	f	Ljava/util/List;	b	conditions
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	testers	testers
	m	(Lbyk;Ljava/util/function/Consumer;)V	a	check
		p	1	factory	factory
		p	2	reporter	reporter
	m	(Lcoj;)Z	a	test
		p	1	state	state
	m	(Lbyk;Lbyl;)Z	a	test
		p	1	stateManager	stateManager
		p	2	container	container
	m	(Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcc$c;	a	createPredicate
		p	0	key	key
		p	1	json	json
	m	(Lbyj;)Z	a	test
		p	1	state	state
	m	(Lcom/google/gson/JsonElement;)Lcc;	a	fromJson
		p	0	json	json
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	b	asNullableString
		p	0	json	json
c	cc$a	net/minecraft/predicate/StatePredicate$Builder
	f	Ljava/util/List;	a	conditons
	m	()Lcc$a;	a	create
	m	(Lbzm;Ljava/lang/String;)Lcc$a;	a	exactMatch
		p	1	property	property
		p	2	valueName	valueName
	m	(Lbzm;Ljava/lang/Comparable;)Lcc$a;	a	exactMatch
		p	1	property	property
		p	2	value	value
	m	(Lbzm;Z)Lcc$a;	a	exactMatch
		p	1	property	property
		p	2	value	value
	m	(Lbzm;I)Lcc$a;	a	exactMatch
		p	1	property	property
		p	2	value	value
	m	()Lcc;	b	build
c	cc$b	net/minecraft/predicate/StatePredicate$ExactValueCondition
	f	Ljava/lang/String;	a	value
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
		p	2	value	value
c	cc$c	net/minecraft/predicate/StatePredicate$Condition
	f	Ljava/lang/String;	a	key
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Lbyl;Lbzm;)Z	a	test
		p	1	state	state
		p	2	property	property
	m	(Lbyk;Lbyl;)Z	a	test
		p	1	stateManager	stateManager
		p	2	state	state
	m	(Lbyk;Ljava/util/function/Consumer;)V	a	reportMissing
		p	1	factory	factory
		p	2	reporter	reporter
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	()Ljava/lang/String;	b	getKey
c	cc$d	net/minecraft/predicate/StatePredicate$RangedValueCondition
	f	Ljava/lang/String;	a	min
	f	Ljava/lang/String;	b	max
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
		p	2	min	min
		p	3	max	max
c	cca	net/minecraft/world/gen/chunk/OverworldChunkGenerator
	f	[F	h	BIOME_WEIGHT_TABLE
	f	Lcnn;	i	noiseSampler
	f	Z	j	amplified
	f	Lccc;	k	phantomSpawner
	f	Lccb;	l	pillagerSpawner
	f	Laxt;	m	catSpawner
	f	Lasp;	n	zombieSiegeManager
	m	(Lbjx;Lbkw;Lcbz;)V	<init>	<init>
		p	1	world	world
		p	2	biomeSource	biomeSource
		p	3	config	config
	m	(II)D	c	sampleNoise
		p	1	x	x
		p	2	y	y
c	ccb	net/minecraft/world/gen/PillagerSpawner
	f	I	a	ticksUntilNextSpawn
	m	(Lbjw;Lfk;Ljava/util/Random;Z)Z	a	spawnOneEntity
	m	(Lxd;ZZ)I	a	spawn
		p	2	spawnMonsters	spawnMonsters
		p	3	spawnAnimals	spawnAnimals
c	ccc	net/minecraft/world/gen/PhantomSpawner
	f	I	a	ticksUntilNextSpawn
	m	(Lxd;ZZ)I	a	spawn
		p	2	spawnMonsters	spawnMonsters
		p	3	spawnAnimals	spawnAnimals
c	ccd	net/minecraft/world/gen/chunk/FloatingIslandsChunkGeneratorConfig
	f	Lfk;	t	center
	m	(Lfk;)Lccd;	a	withCenter
	m	()Lfk;	v	getCenter
c	cce	net/minecraft/world/gen/chunk/FloatingIslandsChunkGenerator
	f	Lfk;	h	center
c	ccf	net/minecraft/world/gen/ChunkRandom
	f	I	a	sampleCount
	m	(J)V	<init>	<init>
		p	1	seed	seed
	m	(II)J	a	setSeed
		p	1	x	x
		p	2	z	z
	m	(IIJJ)Ljava/util/Random;	a	create
		p	0	x	x
		p	1	z	z
		p	2	worldSeed	worldSeed
		p	4	localSeed	localSeed
	m	(I)V	a	consume
		p	1	count	count
	m	(JII)J	a	setSeed
		p	1	worldSeed	worldSeed
		p	3	x	x
		p	4	z	z
	m	(JIII)J	a	setStructureSeed
		p	1	worldSeed	worldSeed
		p	3	x	x
		p	4	z	z
		p	5	seedModifier	seedModifier
	m	(JII)J	b	setFeatureSeed
		p	1	worldSeed	worldSeed
		p	3	index	index
		p	4	step	step
	m	(JII)J	c	setStructureSeed
		p	1	worldSeed	worldSeed
		p	3	x	x
		p	4	z	z
	m	(I)I	next	next
		p	1	bound	bound
c	ccg	net/minecraft/world/gen/carver/RavineCarver
	f	[F	m	heightToHorizontalStretchFactor
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lbzy;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V	a	carveRavine
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	width	width
		p	15	yaw	yaw
		p	16	pitch	pitch
		p	17	branchStartIndex	branchStartIndex
		p	18	branchCount	branchCount
		p	19	yawPitchRatio	yawPitchRatio
		p	21	carvingMask	carvingMask
	m	(Lbzy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcgy;)Z	a	carve
	m	(Ljava/util/Random;IILcgy;)Z	a	shouldCarve
c	cch	net/minecraft/world/gen/carver/CarverConfig
	f	Lccl;	a	DEFAULT
c	cci	net/minecraft/world/gen/carver/CaveCarver
	m	(Ljava/util/function/Function;I)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
		p	2	heightLimit	heightLimit
	m	(Lbzy;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V	a	carveTunnels
		p	1	chunk	chunk
		p	2	postToBiome	postToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	width	width
		p	15	yaw	yaw
		p	16	pitch	pitch
		p	17	branchStartIndex	branchStartIndex
		p	18	branchCount	branchCount
		p	19	yawPitchRatio	yawPitchRatio
		p	21	carvingMask	carvingMask
	m	(Lbzy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcgy;)Z	a	carve
	m	()I	a	getMaxCaveCount
	m	(Lbzy;Ljava/util/function/Function;JIIIDDDFDLjava/util/BitSet;)V	a	carveCave
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	yaw	yaw
		p	15	yawPitchRatio	yawPitchRatio
		p	17	carvingMask	carvingMask
	m	(Ljava/util/Random;IILcgy;)Z	a	shouldCarve
	m	(Ljava/util/Random;)F	a	getTunnelSystemWidth
	m	(Ljava/util/Random;)I	b	getCaveY
		p	1	random	random
	m	()D	b	getTunnelSystemHeightWidthRatio
c	ccj	net/minecraft/world/gen/carver/ConfiguredCarver
	f	Lcco;	a	carver
	f	Lcch;	b	config
	m	(Lcco;Lcch;)V	<init>	<init>
		p	1	carver	carver
		p	2	config	config
	m	(Ljava/util/Random;II)Z	a	shouldCarve
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
	m	(Lbzy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;)Z	a	carve
c	cck	net/minecraft/world/gen/carver/NetherCaveCarver
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
c	ccl	net/minecraft/world/gen/carver/DefaultCarverConfig
c	ccm	net/minecraft/world/gen/carver/UnderwaterRavineCarver
c	ccn	net/minecraft/world/gen/carver/UnderwaterCaveCarver
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lcco;Lbzy;Ljava/util/BitSet;Ljava/util/Random;Lfk$a;IIIIIIII)Z	a	carveAtPoint
		p	0	carver	carver
		p	1	chunk	chunk
		p	2	mask	mask
		p	3	random	random
		p	4	pos	pos
		p	5	seaLevel	seaLevel
		p	6	mainChunkX	mainChunkX
		p	7	mainChunkZ	mainChunkZ
		p	8	x	x
		p	9	z	z
		p	10	relativeX	relativeX
		p	11	y	y
		p	12	relativeZ	relativeZ
c	cco	net/minecraft/world/gen/carver/Carver
	f	Lbyj;	f	AIR
	f	Lbyj;	g	CAVE_AIR
	f	Lcoj;	h	WATER
	f	Lcoj;	i	LAVA
	f	Ljava/util/Set;	j	alwaysCarvableBlocks
	f	Ljava/util/Set;	k	carvableFluids
	f	I	l	heightLimit
	f	Ljava/util/function/Function;	m	configDeserializer
	m	(Ljava/util/function/Function;I)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
		p	2	heightLimit	heightLimit
	m	(IIDDIIF)Z	a	canCarveBranch
		p	1	mainChunkX	mainChunkX
		p	2	mainChunkZ	mainChunkZ
		p	3	x	x
		p	5	z	z
		p	7	branch	branch
		p	8	branchCount	branchCount
		p	9	baseWidth	baseWidth
	m	(IIIIII)Z	a	isOnBoundary
		p	1	minX	minX
		p	2	maxX	maxX
		p	3	minZ	minZ
		p	4	maxZ	maxZ
		p	5	x	x
		p	6	z	z
	m	(Ljava/lang/String;Lcco;)Lcco;	a	register
	m	(Lbyj;)Z	a	canAlwaysCarveBlock
		p	1	state	state
	m	(Lbzy;Ljava/util/function/Function;JIIIDDDDDLjava/util/BitSet;)Z	a	carveRegion
		p	2	posToBiome	posToBiome
		p	3	seed	seed
		p	5	seaLevel	seaLevel
		p	6	chunkX	chunkX
		p	7	chunkZ	chunkZ
		p	8	x	x
		p	10	y	y
		p	12	z	z
		p	14	yaw	yaw
		p	16	pitch	pitch
		p	18	carvingMask	carvingMask
	m	(Ljava/util/Random;IILcch;)Z	a	shouldCarve
		p	1	random	random
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
		p	4	config	config
	m	(Lbzy;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lfk$a;Lfk$a;Lfk$a;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z	a	carveAtPoint
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	3	carvingMask	carvingMask
		p	8	seaLevel	seaLevel
		p	9	mainChunkX	mainChunkX
		p	10	mainChunkZ	mainChunkZ
		p	11	x	x
		p	12	z	z
		p	13	relativeX	relativeX
		p	14	y	y
		p	15	relativeZ	relativeZ
		p	16	foundSurface	foundSurface
	m	(Lbzy;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lcch;)Z	a	carve
		p	1	chunk	chunk
		p	2	posToBiome	posToBiome
		p	4	seaLevel	seaLevel
		p	5	chunkX	chunkX
		p	6	chunkZ	chunkZ
		p	7	mainChunkX	mainChunkX
		p	8	mainChunkZ	mainChunkZ
		p	9	carvingMask	carvingMask
	m	(Lbzy;IIIIIIII)Z	a	isRegionUncarvable
		p	2	mainChunkX	mainChunkX
		p	3	mainChunkZ	mainChunkZ
		p	4	relMinX	relMinX
		p	5	relMaxX	relMaxX
		p	6	minY	minY
		p	7	maxY	maxY
		p	8	relMinZ	relMinZ
		p	9	relMaxZ	relMaxZ
	m	(Lbyj;Lbyj;)Z	a	canCarveBlock
		p	1	state	state
		p	2	stateAbove	stateAbove
	m	(DDDI)Z	a	isPositionExcluded
		p	1	scaledRelativeX	scaledRelativeX
		p	3	scaledRelativeY	scaledRelativeY
		p	5	scaledRelativeZ	scaledRelativeZ
		p	7	y	y
	m	()I	c	getBranchFactor
c	ccq	net/minecraft/world/gen/feature/FlowerFeature
	m	(Ljava/util/Random;Lfk;Lcgn;)Lbyj;	b	getFlowerToPlace
c	ccr	net/minecraft/world/gen/feature/HugeMushroomFeature
	m	(Lbjx;Ljava/util/Random;Lfk;ILfk$a;Lcgp;)V	a	generate
		p	1	world	world
		p	5	pos	pos
		p	6	config	config
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgp;)Z	a	generate
c	ccs	net/minecraft/world/gen/feature/BranchedTreeFeature
	m	(Lbkb;Ljava/util/Random;ILfk;ILjava/util/Set;Lclb;Lchi;)V	a	generate
		p	1	world	world
		p	2	random	random
		p	3	height	height
		p	4	pos	pos
		p	5	trunkTopOffset	trunkTopOffset
		p	6	logPositions	logPositions
		p	8	config	config
	m	(Lbkb;IIILfk;Lchi;)Ljava/util/Optional;	a	findPositionToGenerate
		p	1	world	world
		p	2	height	height
		p	5	pos	pos
		p	6	config	config
c	cct	net/minecraft/world/gen/feature/AbstractTreeFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Ljava/util/Set;Lclb;Lchl;)Z	a	generate
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	logPositions	logPositions
		p	5	leavesPositions	leavesPositions
		p	7	config	config
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchl;)Z	a	generate
	m	(Lbkb;Lfk;)V	a	setToDirt
		p	1	world	world
		p	2	pos	pos
	m	(Lbke;Lfk;Lbyj;Lclb;)V	a	setBlockState
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Lclb;Lchl;)Z	a	setLogBlockState
		p	1	world	world
		p	3	pos	pos
		p	4	logPositions	logPositions
		p	6	config	config
	m	(Lbkc;Lfk;)Z	a	canTreeReplace
		p	0	world	world
		p	1	pos	pos
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Lclb;Lchl;)Z	b	setLeavesBlockState
		p	1	world	world
		p	3	pos	pos
		p	4	leavesPositions	leavesPositions
		p	6	config	config
	m	(Lbkc;Lfk;)Z	b	isAir
		p	0	world	world
		p	1	pos	pos
	m	(Lbke;Lfk;Lbyj;)V	b	setBlockStateWithoutUpdatingNeighbors
	m	(Lbkc;Lfk;)Z	c	isNaturalDirt
		p	0	world	world
		p	1	pos	pos
	m	(Lbkc;Lfk;)Z	d	isLeaves
		p	0	world	world
		p	1	pos	pos
	m	(Lbkc;Lfk;)Z	e	isWater
		p	0	world	world
		p	1	pos	pos
	m	(Lbkc;Lfk;)Z	f	isAirOrLeaves
		p	0	world	world
		p	1	pos	pos
	m	(Lbkc;Lfk;)Z	g	isNaturalDirtOrGrass
		p	0	world	world
		p	1	pos	pos
	m	(Lbkc;Lfk;)Z	h	isDirtOrGrass
		p	0	world	world
		p	1	pos	pos
	m	(Lbkc;Lfk;)Z	i	isReplaceablePlant
		p	0	world	world
		p	1	pos	pos
c	ccu	net/minecraft/world/gen/feature/AcaciaTreeFeature
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Ljava/util/Set;Lclb;Lchi;)Z	a	generate
c	ccv	net/minecraft/world/gen/feature/BambooFeature
	f	Lbyj;	a	BAMBOO
	f	Lbyj;	aq	BAMBOO_TOP_1
	f	Lbyj;	ar	BAMBOO_TOP_2
	f	Lbyj;	as	BAMBOO_TOP_3
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgy;)Z	a	generate
c	ccw	net/minecraft/world/gen/feature/ForestRockFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgc;)Z	a	generate
c	ccx	net/minecraft/world/gen/feature/AbstractPileFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lfk;Ljava/util/Random;Lcgd;)V	a	addPileBlock
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;Ljava/util/Random;)Z	a	canPlacePileBlock
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgd;)Z	a	generate
c	ccy	net/minecraft/world/gen/feature/BlueIceFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	ccz	net/minecraft/world/gen/feature/BonusChestFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cd	net/minecraft/advancement/criterion/SummonedEntityCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lakq;)V	a	trigger
		p	1	player	player
		p	2	entity	entity
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcd$a;	b	conditionsFromJson
c	cd$a	net/minecraft/advancement/criterion/SummonedEntityCriterion$Conditions
	f	Lbb;	a	entity
	m	(Lbb;)V	<init>	<init>
		p	1	entity	entity
	m	(Lxe;Lakq;)Z	a	matches
		p	1	player	player
		p	2	entity	entity
	m	(Lbb$a;)Lcd$a;	a	create
c	cda	net/minecraft/world/gen/feature/BuriedTreasureFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cda$a	net/minecraft/world/gen/feature/BuriedTreasureFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cdb	net/minecraft/world/gen/feature/ChorusPlantFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cdc	net/minecraft/world/gen/feature/ConfiguredFeature
	f	Lorg/apache/logging/log4j/Logger;	a	log
	f	Lcdu;	b	feature
	f	Lcgn;	c	config
	m	(Lcdu;Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	feature	feature
	m	(Lcdu;Lcgn;)V	<init>	<init>
		p	1	feature	feature
		p	2	config	config
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;)Z	a	generate
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
	m	(Lcom/mojang/datafixers/Dynamic;)Lcdc;	a	deserialize
		p	0	dynamic	dynamic
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	1	ops	ops
	m	(Lcjj;)Lcdc;	a	createDecoratedFeature
	m	(F)Lcfu;	a	withChance
		p	1	chance	chance
c	cdd	net/minecraft/world/gen/feature/CoralClawFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cde	net/minecraft/world/gen/feature/CoralFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
	m	(Lbjx;Ljava/util/Random;Lfk;Lbyj;)Z	a	spawnCoral
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
	m	(Lbjx;Ljava/util/Random;Lfk;Lbyj;)Z	b	spawnCoralPiece
		p	1	world	world
		p	2	random	random
		p	3	pos	pos
		p	4	state	state
c	cdf	net/minecraft/world/gen/feature/CoralMushroomFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cdg	net/minecraft/world/gen/feature/CoralTreeFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cdh	net/minecraft/world/gen/feature/DarkOakTreeFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbkc;Lfk;I)Z	a	doesTreeFit
		p	1	world	world
		p	2	pos	pos
		p	3	treeHeight	treeHeight
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Ljava/util/Set;Lclb;Lcgr;)Z	a	generate
c	cdi	net/minecraft/world/gen/feature/DecoratedFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgj;)Z	a	generate
c	cdj	net/minecraft/world/gen/feature/DecoratedFlowerFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cdk	net/minecraft/world/gen/feature/DefaultFlowerFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lfk;Lchb;)Z	a	method_23369
	m	(Ljava/util/Random;Lfk;Lchb;)Lfk;	a	method_23371
	m	(Lchb;)I	a	method_23370
	m	(Ljava/util/Random;Lfk;Lchb;)Lbyj;	b	getFlowerToPlace
c	cdl	net/minecraft/world/gen/feature/DesertPyramidFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cdl$a	net/minecraft/world/gen/feature/DesertPyramidFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cdm	net/minecraft/structure/DesertVillageData
	m	()V	a	initialize
c	cdn	net/minecraft/world/gen/feature/DesertWellFeature
	f	Lbyt;	a	CAN_GENERATE
	f	Lbyj;	aq	slab
	f	Lbyj;	ar	wall
	f	Lbyj;	as	fluidInside
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cdo	net/minecraft/world/gen/feature/DiskFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgl;)Z	a	generate
c	cdp	net/minecraft/world/gen/feature/EndCityFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(IILcaa;)I	b	getGenerationHeight
		p	0	chunkX	chunkX
		p	1	chunkZ	chunkZ
		p	2	chunkGenerator	chunkGenerator
c	cdp$a	net/minecraft/world/gen/feature/EndCityFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cdq	net/minecraft/world/gen/feature/EndGatewayFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgm;)Z	a	generate
c	cdr	net/minecraft/world/gen/feature/EndIslandFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cds	net/minecraft/world/gen/feature/EndPortalFeature
	f	Lfk;	a	ORIGIN
	f	Z	aq	open
	m	(Z)V	<init>	<init>
		p	1	open	open
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
		p	4	pos	pos
		p	5	config	config
c	cdt	net/minecraft/world/gen/feature/LargeOakTreeFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(I)F	a	getLeafRadiusForLayer
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Lclb;Lchi;)V	a	makeLeaves
		p	1	world	world
	m	(Lbkb;Ljava/util/Random;Lfk;Lfk;ZLjava/util/Set;Lclb;Lchi;)I	a	makeOrCheckBranch
		p	3	start	start
		p	4	end	end
		p	5	make	make
	m	(II)F	a	getBaseBranchSize
		p	1	treeHeight	treeHeight
		p	2	branchCount	branchCount
	m	(Lbkb;Ljava/util/Random;Lfk;FLjava/util/Set;Lclb;Lchi;)V	a	makeLeafLayer
	m	(Lbkb;Ljava/util/Random;ILfk;Ljava/util/List;Ljava/util/Set;Lclb;Lchi;)V	a	makeLeaves
		p	1	world	world
	m	(Lbkb;Ljava/util/Random;Lfk;ILjava/util/Set;Lclb;Lchi;)V	a	makeTrunk
		p	3	pos	pos
		p	4	height	height
	m	(Lfk;Lfk;)Lfp$a;	a	getLogAxis
		p	1	branchStart	branchStart
		p	2	branchEnd	branchEnd
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Ljava/util/Set;Lclb;Lchi;)Z	a	generate
	m	(Lfk;)I	a	getLongestSide
		p	1	box	box
	m	(Lbkb;Ljava/util/Random;Lfk;ILjava/util/Set;Lclb;Lchi;)I	b	getTreeHeight
		p	3	pos	pos
		p	4	height	height
	m	(II)Z	b	isHighEnough
		p	1	treeHeight	treeHeight
		p	2	height	height
	m	(Lbkb;Ljava/util/Random;ILfk;Ljava/util/List;Ljava/util/Set;Lclb;Lchi;)V	b	makeBranches
		p	3	treeHeight	treeHeight
		p	4	treePosition	treePosition
		p	5	branchPositions	branchPositions
c	cdt$a	net/minecraft/world/gen/feature/LargeOakTreeFeature$BranchPosition
	f	I	b	endY
	m	(Lfk;I)V	<init>	<init>
		p	1	pos	pos
		p	2	endY	endY
	m	()I	r	getEndY
c	cdu	net/minecraft/world/gen/feature/Feature
	f	Ljava/util/function/Function;	a	configDeserializer
	f	Lccz;	ah	BONUS_CHEST
	f	Lcom/google/common/collect/BiMap;	ao	STRUCTURES
	f	Ljava/util/List;	ap	JIGSAW_STRUCTURES
	f	Lcfl;	b	PILLAGER_OUTPOST
	f	Lcfl;	c	MINESHAFT
	f	Lcfl;	d	WOODLAND_MANSION
	f	Lcfl;	e	JUNGLE_TEMPLE
	f	Lcfl;	f	DESERT_PYRAMID
	f	Lcfl;	g	IGLOO
	f	Lcfl;	h	SHIPWRECK
	f	Lcfn;	i	SWAMP_HUT
	f	Lcfl;	j	STRONGHOLD
	f	Lcfl;	k	OCEAN_MONUMENT
	f	Lcfl;	l	OCEAN_RUIN
	f	Lcfl;	m	NETHER_BRIDGE
	f	Lcfl;	n	END_CITY
	f	Lcfl;	o	BURIED_TREASURE
	f	Lcfl;	p	VILLAGE
	f	Lccq;	y	FLOWER
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgn;)Z	a	generate
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
		p	4	pos	pos
		p	5	config	config
	m	(Ljava/lang/String;Lcdu;)Lcdu;	a	register
		p	0	name	name
		p	1	feature	feature
	m	(Lbph;)Z	a	isStone
		p	0	block	block
	m	(Lbke;Lfk;Lbyj;)V	a	setBlockState
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbph;)Z	b	isDirt
		p	0	block	block
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgn;	b	deserializeConfig
		p	1	dynamic	dynamic
	m	(Lcgn;)Lcdc;	b	configure
		p	1	config	config
	m	()Ljava/util/List;	e	getMonsterSpawns
	m	()Ljava/util/List;	f	getCreatureSpawns
c	cdv	net/minecraft/world/gen/feature/FillLayerFeature
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgq;)Z	a	generate
c	cdw	net/minecraft/world/gen/feature/FossilFeature
	f	Lsm;	a	SPINE_1
	f	Lsm;	aA	SKULL_4
	f	Lsm;	aB	SKULL_1_COAL
	f	Lsm;	aC	SKULL_2_COAL
	f	Lsm;	aD	SKULL_3_COAL
	f	Lsm;	aE	SKULL_4_COAL
	f	[Lsm;	aF	FOSSILS
	f	[Lsm;	aG	COAL_FOSSILS
	f	Lsm;	aq	SPINE_2
	f	Lsm;	ar	SPINE_3
	f	Lsm;	as	SPINE_4
	f	Lsm;	at	SPINE_1_COAL
	f	Lsm;	au	SPINE_2_COAL
	f	Lsm;	av	SPINE_3_COAL
	f	Lsm;	aw	SPINE_4_COAL
	f	Lsm;	ax	SKULL_1
	f	Lsm;	ay	SKULL_2
	f	Lsm;	az	SKULL_3
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cdx	net/minecraft/world/gen/feature/GlowstoneBlobFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cdy	net/minecraft/world/gen/feature/JungleGroundBushFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cdz	net/minecraft/world/gen/feature/HugeBrownMushroomFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	ce	net/minecraft/advancement/criterion/TameAnimalCriterion
	f	Lsm;	a	ID
	m	(Lxe;Latc;)V	a	trigger
		p	1	player	player
		p	2	entity	entity
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lce$a;	b	conditionsFromJson
c	ce$a	net/minecraft/advancement/criterion/TameAnimalCriterion$Conditions
	f	Lbb;	a	entity
	m	(Lbb;)V	<init>	<init>
		p	1	entity	entity
	m	(Lxe;Latc;)Z	a	matches
		p	1	player	player
		p	2	entity	entity
	m	(Lbb;)Lce$a;	a	create
		p	0	entity	entity
	m	()Lce$a;	c	any
c	cea	net/minecraft/world/gen/feature/HugeRedMushroomFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	ceb	net/minecraft/world/gen/feature/IcePatchFeature
	f	Lbph;	a	ICE
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgo;)Z	a	generate
c	cec	net/minecraft/world/gen/feature/IceSpikeFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	ced	net/minecraft/world/gen/feature/IcebergFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lfk;)V	a	clearSnowAbove
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;IIZI)V	a	method_13418
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcge;)Z	a	generate
	m	(Lbjg;Lfk;)Z	a	isAirBelow
		p	1	world	world
		p	2	pos	pos
	m	(Lbph;)Z	c	isSnowyOrIcy
		p	1	block	block
c	cee	net/minecraft/world/gen/feature/IglooFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cee$a	net/minecraft/world/gen/feature/IglooFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cef	net/minecraft/world/gen/feature/JungleTempleFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cef$a	net/minecraft/world/gen/feature/JungleTempleFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	ceg	net/minecraft/world/gen/feature/KelpFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	ceh	net/minecraft/world/gen/feature/LakeFeature
	f	Lbyj;	a	CAVE_AIR
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcge;)Z	a	generate
c	cei	net/minecraft/world/gen/feature/MegaJungleTreeFeature
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Ljava/util/Set;Lclb;Lcgr;)Z	a	generate
	m	(Lbkb;Ljava/util/Random;Lfk;ILjava/util/Set;Lclb;Lchl;)V	c	makeLeaves
		p	1	world	world
c	cej	net/minecraft/world/gen/feature/MegaPineTreeFeature
	m	(Lbkb;Ljava/util/Random;IIIILjava/util/Set;Lclb;Lcgr;)V	a	makeTopLeaves
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Ljava/util/Set;Lclb;Lcgr;)Z	a	generate
c	cek	net/minecraft/world/gen/feature/MegaTreeFeature
	m	(Lbkb;Ljava/util/Random;Lfk;ILjava/util/Set;Lclb;Lchl;)V	a	makeSquaredLeafLayer
	m	(Lbkc;Lfk;I)Z	a	doesTreeFit
		p	1	world	world
		p	2	pos	pos
		p	3	height	height
	m	(Lbkb;Lfk;I)Z	a	checkTreeFitsAndReplaceGround
		p	1	world	world
		p	2	pos	pos
		p	3	height	height
	m	(Ljava/util/Random;Lcgr;)I	a	getHeight
	m	(Lbkb;Ljava/util/Random;Lfk;ILjava/util/Set;Lclb;Lchl;)V	b	makeRoundLeafLayer
	m	(Lbkb;Lfk;)Z	b	replaceGround
		p	1	world	world
		p	2	pos	pos
c	cel	net/minecraft/world/gen/feature/MineshaftFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cel$a	net/minecraft/world/gen/feature/MineshaftFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cel$b	net/minecraft/world/gen/feature/MineshaftFeature$Type
	f	Ljava/util/Map;	c	nameMap
	f	Ljava/lang/String;	d	name
	m	(I)Lcel$b;	a	byIndex
		p	0	index	index
	m	(Ljava/lang/String;)Lcel$b;	a	byName
		p	0	nam	nam
	m	()Ljava/lang/String;	a	getName
c	cem	net/minecraft/world/gen/feature/DungeonFeature
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	[Laku;	aq	MOB_SPAWNER_ENTITIES
	f	Lbyj;	ar	AIR
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Ljava/util/Random;)Laku;	a	getMobSpawnerEntity
		p	1	random	random
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cen	net/minecraft/world/gen/feature/NetherFortressFeature
	f	Ljava/util/List;	a	MONSTER_SPAWNS
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cen$a	net/minecraft/world/gen/feature/NetherFortressFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	ceo	net/minecraft/world/gen/feature/NoOpFeature
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cep	net/minecraft/world/gen/feature/OceanMonumentFeature
	f	Ljava/util/List;	a	MONSTER_SPAWNS
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cep$a	net/minecraft/world/gen/feature/OceanMonumentFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
	m	(II)V	b	method_16588
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
c	ceq	net/minecraft/world/gen/feature/OreFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Ljava/util/Random;Lcgx;DDDDDDIIIII)Z	a	generateVeinPart
		p	1	world	world
		p	2	random	random
		p	3	config	config
		p	4	startX	startX
		p	6	endX	endX
		p	8	startZ	startZ
		p	10	endZ	endZ
		p	12	startY	startY
		p	14	endY	endY
		p	16	x	x
		p	17	y	y
		p	18	z	z
		p	19	size	size
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgx;)Z	a	generate
c	cer	net/minecraft/world/gen/feature/PillagerOutpostFeature
	f	Ljava/util/List;	a	MONSTER_SPAWNS
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cer$a	net/minecraft/world/gen/feature/PillagerOutpostFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	ces	net/minecraft/structure/PlainsVillageData
	m	()V	a	initialize
c	cet	net/minecraft/world/gen/feature/RandomBooleanFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgz;)Z	a	generate
c	ceu	net/minecraft/world/gen/feature/RandomPatchFeature
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchb;)Z	a	generate
c	cev	net/minecraft/world/gen/feature/RandomRandomFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchc;)Z	a	generate
c	cew	net/minecraft/world/gen/feature/AbstractTempleFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lcaa;)I	a	getSpacing
		p	1	chunkGenerator	chunkGenerator
	m	(Lcaa;)I	b	getSeparation
		p	1	chunkGenerator	chunkGenerator
	m	()I	d	getSeedModifier
c	cex	net/minecraft/world/gen/feature/RandomFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcha;)Z	a	generate
c	cey	net/minecraft/world/gen/feature/EmeraldOreFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchd;)Z	a	generate
c	cez	net/minecraft/structure/SavannaVillageData
	m	()V	a	initialize
c	cf	net/minecraft/advancement/criterion/TickCriterion
	f	Lsm;	a	ID
	m	(Lxe;)V	a	trigger
		p	1	player	player
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcf$a;	b	conditionsFromJson
c	cf$a	net/minecraft/advancement/criterion/TickCriterion$Conditions
c	cfa	net/minecraft/world/gen/feature/SeaPickleFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgh;)Z	a	generate
c	cfb	net/minecraft/world/gen/feature/SeagrassFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lche;)Z	a	generate
c	cfc	net/minecraft/world/gen/feature/ShipwreckFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cfc$a	net/minecraft/world/gen/feature/ShipwreckFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cfd	net/minecraft/world/gen/feature/SimpleBlockFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchg;)Z	a	generate
c	cfe	net/minecraft/world/gen/feature/SimpleRandomFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchh;)Z	a	generate
c	cfg	net/minecraft/world/gen/feature/FreezeTopLayerFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cfh	net/minecraft/structure/SnowyVillageData
	m	()V	a	initialize
c	cfi	net/minecraft/world/gen/feature/EndSpikeFeature
	f	Lcom/google/common/cache/LoadingCache;	a	CACHE
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchj;)Z	a	generate
	m	(Lbjx;)Ljava/util/List;	a	getSpikes
	m	(Lbjx;Ljava/util/Random;Lchj;Lcfi$a;)V	a	generateSpike
		p	1	world	world
		p	2	random	random
		p	3	config	config
c	cfi$a	net/minecraft/world/gen/feature/EndSpikeFeature$Spike
	f	I	a	centerX
	f	I	b	centerZ
	f	I	c	radius
	f	I	d	height
	f	Z	e	guarded
	f	Lcvf;	f	boundingBox
	m	(IIIIZ)V	<init>	<init>
		p	1	centerX	centerX
		p	2	centerZ	centerZ
		p	3	radius	radius
		p	4	height	height
	m	()I	a	getCenterX
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
	m	(Lcom/mojang/datafixers/Dynamic;)Lcfi$a;	a	deserialize
		p	0	dynamic	dynamic
	m	(Lfk;)Z	a	isInChunk
		p	1	pos	pos
	m	()I	b	getCenterZ
	m	()I	c	getRadius
	m	()I	d	getHeight
	m	()Z	e	isGuarded
	m	()Lcvf;	f	getBoundingBox
c	cfi$b	net/minecraft/world/gen/feature/EndSpikeFeature$SpikeCache
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
c	cfj	net/minecraft/world/gen/feature/SpringFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lchk;)Z	a	generate
c	cfk	net/minecraft/world/gen/feature/StrongholdFeature
	f	Z	a	stateStillValid
	f	[Lbjh;	aq	startPositions
	f	Ljava/util/List;	ar	starts
	f	J	as	lastSeed
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lcaa;)V	a	initialize
		p	1	chunkGenerator	chunkGenerator
	m	()V	d	invalidateState
c	cfk$a	net/minecraft/world/gen/feature/StrongholdFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cfl	net/minecraft/world/gen/feature/StructureFeature
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;II)Ljava/util/List;	a	getStructureStarts
		p	1	world	world
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
	m	(Lbjx;Lfk;)Z	a	isApproximatelyInsideStructure
	m	()Lcfl$a;	a	getStructureStartFactory
	m	(Lbjx;Lfk;Z)Lclv;	a	isInsideStructure
		p	1	world	world
		p	2	pos	pos
		p	3	exact	exact
	m	(Lbjw;Lcaa;Lfk;IZ)Lfk;	a	locateStructure
		p	5	skipExistingChunks	skipExistingChunks
	m	(Lcaa;Ljava/util/Random;IIII)Lbjh;	a	getStart
		p	2	random	random
	m	(Lbkv;Lcaa;Ljava/util/Random;IILbkt;)Z	a	shouldStartAt
		p	4	chunkZ	chunkZ
	m	(Lbjx;Lfk;)Z	b	isInsideStructure
	m	()Ljava/lang/String;	b	getName
	m	()I	c	getRadius
c	cfl$a	net/minecraft/world/gen/feature/StructureFeature$StructureStartFactory
	m	(Lcfl;IILclb;IJ)Lclv;	create	create
		p	1	feature	feature
		p	2	x	x
		p	3	z	z
c	cfm	net/minecraft/structure/StructurePieceType
	f	Lcfm;	A	STRONGHOLD_PORTAL_ROOM
	f	Lcfm;	B	STRONGHOLD_PRISON_HALL
	f	Lcfm;	C	STRONGHOLD_RIGHT_TURN
	f	Lcfm;	D	STRONGHOLD_SQUARE_ROOM
	f	Lcfm;	E	STRONGHOLD_SPIRAL_STAIRCASE
	f	Lcfm;	F	STRONGHOLD_START
	f	Lcfm;	G	STRONGHOLD_CORRIDOR
	f	Lcfm;	H	STRONGHOLD_STAIRS
	f	Lcfm;	I	JUNGLE_TEMPLE
	f	Lcfm;	J	OCEAN_TEMPLE
	f	Lcfm;	K	IGLOO
	f	Lcfm;	L	SWAMP_HUT
	f	Lcfm;	M	DESERT_TEMPLE
	f	Lcfm;	N	OCEAN_MONUMENT_BASE
	f	Lcfm;	O	OCEAN_MONUMENT_CORE_ROOM
	f	Lcfm;	P	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Lcfm;	Q	OCEAN_MONUMENT_DOUBLE_X_Y_ROOM
	f	Lcfm;	R	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Lcfm;	S	OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM
	f	Lcfm;	T	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Lcfm;	U	OCEAN_MONUMENT_ENTRY_ROOM
	f	Lcfm;	V	OCEAN_MONUMENT_PENTHOUSE
	f	Lcfm;	W	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Lcfm;	X	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Lcfm;	Y	OCEAN_MONUMENT_WING_ROOM
	f	Lcfm;	Z	END_CITY
	f	Lcfm;	a	MINESHAFT_CORRIDOR
	f	Lcfm;	aa	WOODLAND_MANSION
	f	Lcfm;	ab	BURIED_TREASURE
	f	Lcfm;	ac	SHIPWRECK
	f	Lcfm;	b	MINESHAFT_CROSSING
	f	Lcfm;	c	MINESHAFT_ROOM
	f	Lcfm;	d	MINESHAFT_STAIRS
	f	Lcfm;	e	PILLAGER_OUTPOST
	f	Lcfm;	f	VILLAGE
	f	Lcfm;	g	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Lcfm;	h	NETHER_FORTRESS_BRIDGE_END
	f	Lcfm;	i	NETHER_FORTRESS_BRIDGE
	f	Lcfm;	j	NETHER_FORTRESS_CORRIDOR_STAIRS
	f	Lcfm;	k	NETHER_FORTRESS_CORRIDOR_BALCONY
	f	Lcfm;	l	NETHER_FORTRESS_CORRIDOR_EXIT
	f	Lcfm;	m	NETHER_FORTRESS_CORRIDOR_CROSSING
	f	Lcfm;	n	NETHER_FORTRESS_CORRIDOR_LEFT_TURN
	f	Lcfm;	o	NETHER_FORTRESS_SMALL_CORRIDOR
	f	Lcfm;	p	NETHER_FORTRESS_CORRIDOR_RIGHT_TURN
	f	Lcfm;	q	NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM
	f	Lcfm;	r	NETHER_FORTRESS_BRIDGE_PLATFORM
	f	Lcfm;	s	NETHER_FORTRESS_BRIDGE_SMALL_CROSSING
	f	Lcfm;	t	NETHER_FORTRESS_BRIDGE_STAIRS
	f	Lcfm;	u	NETHER_FORTRESS_START
	f	Lcfm;	v	STRONGHOLD_CHEST_CORRIDOR
	f	Lcfm;	w	STRONGHOLD_SMALL_CORRIDOR
	f	Lcfm;	x	STRONGHOLD_FIVE_WAY_CROSSING
	f	Lcfm;	y	STRONGHOLD_LEFT_TURN
	f	Lcfm;	z	STRONGHOLD_LIBRARY
	m	(Lcfm;Ljava/lang/String;)Lcfm;	a	register
		p	0	pieceType	pieceType
		p	1	id	id
	m	(Lcmo;Ljt;)Lclu;	load	load
		p	1	structureManager	structureManager
		p	2	tag	tag
c	cfn	net/minecraft/world/gen/feature/SwampHutFeature
	f	Ljava/util/List;	a	MONSTER_SPAWNS
	f	Ljava/util/List;	aq	CREATURE_SPAWNS
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cfn$a	net/minecraft/world/gen/feature/SwampHutFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cfo	net/minecraft/structure/TaigaVillageData
	m	()V	a	initialize
c	cfp	net/minecraft/world/gen/feature/OakTreeFeature
	m	(Lbkb;Ljava/util/Random;Lfk;Ljava/util/Set;Ljava/util/Set;Lclb;Lchi;)Z	a	generate
c	cfq	net/minecraft/world/gen/feature/VillageFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cfq$a	net/minecraft/world/gen/feature/VillageFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cfr	net/minecraft/structure/VillageGenerator
	m	(Lcaa;Lcmo;Lfk;Ljava/util/List;Lccf;Lchm;)V	a	addPieces
		p	0	chunkGenerator	chunkGenerator
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	pieces	pieces
		p	4	random	random
		p	5	config	config
c	cfr$a	net/minecraft/structure/VillageGenerator$Piece
c	cfs	net/minecraft/world/gen/feature/VinesFeature
	f	[Lfp;	a	DIRECTIONS
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cft	net/minecraft/world/gen/feature/VoidStartPlatformFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgv;)Z	a	generate
c	cfu	net/minecraft/world/gen/feature/RandomFeatureEntry
	f	Lcdc;	a	feature
	f	F	b	chance
	m	(Lcdc;F)V	<init>	<init>
		p	1	feature	feature
		p	2	chance	chance
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;)Z	a	generate
		p	1	world	world
		p	3	random	random
	m	(Lcom/mojang/datafixers/Dynamic;)Lcfu;	a	deserialize
		p	0	dynamic	dynamic
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
c	cfv	net/minecraft/world/gen/feature/WoodlandMansionFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cfv$a	net/minecraft/world/gen/feature/WoodlandMansionFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cfw	net/minecraft/world/gen/placer/BlockPlacer
	f	Lcfx;	a	type
	m	(Lcfx;)V	<init>	<init>
		p	1	type	type
c	cfx	net/minecraft/world/gen/placer/BlockPlacerType
	f	Ljava/util/function/Function;	d	deserializer
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	deserializer	deserializer
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lcfx;	a	register
		p	0	id	id
		p	1	deserializer	deserializer
	m	(Lcom/mojang/datafixers/Dynamic;)Lcfw;	a	deserialize
		p	1	dynamic	dynamic
c	cfy	net/minecraft/world/gen/placer/ColumnPlacer
	f	I	b	minSize
	f	I	c	extraSize
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	dynamic	dynamic
	m	(II)V	<init>	<init>
		p	1	minSize	minSize
		p	2	extraSize	extraSize
c	cfz	net/minecraft/world/gen/placer/DoublePlantPlacer
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	dynamic	dynamic
c	cg	net/minecraft/advancement/criterion/VillagerTradeCriterion
	f	Lsm;	a	ID
	m	(Lxe;Laxs;Lben;)V	a	handle
		p	1	player	player
		p	2	trader	trader
		p	3	stack	stack
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcg$a;	b	conditionsFromJson
c	cg$a	net/minecraft/advancement/criterion/VillagerTradeCriterion$Conditions
	f	Lbb;	a	villager
	f	Lbj;	b	item
	m	(Lbb;Lbj;)V	<init>	<init>
		p	1	entity	entity
		p	2	item	item
	m	(Lxe;Laxs;Lben;)Z	a	matches
		p	1	player	player
		p	2	trader	trader
		p	3	stack	stack
	m	()Lcg$a;	c	any
c	cga	net/minecraft/world/gen/placer/SimpleBlockPlacer
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	dynamic	dynamic
c	cgc	net/minecraft/world/gen/feature/BoulderFeatureConfig
	f	Lbyj;	a	state
	f	I	b	startRadius
	m	(Lbyj;I)V	<init>	<init>
		p	1	state	state
		p	2	startRadius	startRadius
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgc;	a	deserialize
		p	0	dynamic	dynamic
c	cgd	net/minecraft/world/gen/feature/BlockPileFeatureConfig
	f	Lchw;	a	stateProvider
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgd;	a	deserialize
c	cge	net/minecraft/world/gen/feature/SingleStateFeatureConfig
	f	Lbyj;	a	state
	m	(Lbyj;)V	<init>	<init>
		p	1	state	state
	m	(Lcom/mojang/datafixers/Dynamic;)Lcge;	a	deserialize
		p	0	dynamic	dynamic
c	cgf	net/minecraft/world/gen/feature/BuriedTreasureFeatureConfig
	f	F	a	probability
	m	(F)V	<init>	<init>
		p	1	probability	probability
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgf;	a	deserialize
		p	0	dynamic	dynamic
c	cgg	net/minecraft/world/gen/decorator/ChanceRangeDecoratorConfig
	f	F	a	chance
	f	I	b	bottomOffset
	f	I	c	topOffset
	f	I	d	top
	m	(FIII)V	<init>	<init>
		p	1	chance	chance
		p	2	bottomOffset	bottomOffset
		p	3	topOffset	topOffset
		p	4	top	top
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgg;	a	deserialize
		p	0	dynamic	dynamic
c	cgh	net/minecraft/world/gen/feature/SeaPickleFeatureConfig
	f	I	a	count
	m	(I)V	<init>	<init>
		p	1	count	count
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgh;	a	deserialize
		p	0	dynamic	dynamic
c	cgi	net/minecraft/world/gen/decorator/RangeDecoratorConfig
	f	I	a	count
	f	I	b	bottomOffset
	f	I	c	topOffset
	f	I	d	maximum
	m	(IIII)V	<init>	<init>
		p	1	count	count
		p	2	bottomOffset	bottomOffset
		p	3	topOffset	topOffset
		p	4	maximum	maximum
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgi;	a	deserialize
		p	0	dynamic	dynamic
c	cgj	net/minecraft/world/gen/feature/DecoratedFeatureConfig
	f	Lcdc;	a	feature
	f	Lcjj;	b	decorator
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgj;	a	deserialize
		p	0	dynamic	dynamic
c	cgk	net/minecraft/world/gen/decorator/DecoratorConfig
	f	Lcgu;	e	DEFAULT
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	1	ops	ops
c	cgl	net/minecraft/world/gen/feature/DiskFeatureConfig
	f	Lbyj;	a	state
	f	I	b	radius
	f	I	c	ySize
	f	Ljava/util/List;	d	targets
	m	(Lbyj;IILjava/util/List;)V	<init>	<init>
		p	1	state	state
		p	2	radius	radius
		p	3	ySize	ySize
		p	4	targets	targets
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgl;	a	deserialize
		p	0	dynamic	dynamic
c	cgm	net/minecraft/world/gen/feature/EndGatewayFeatureConfig
	f	Ljava/util/Optional;	a	exitPos
	f	Z	b	exact
	m	(Ljava/util/Optional;Z)V	<init>	<init>
		p	1	exitPos	exitPos
		p	2	exact	exact
	m	(Lfk;Z)Lcgm;	a	createConfig
		p	0	exitPortalPosition	exitPortalPosition
		p	1	exitsAtSpawn	exitsAtSpawn
	m	()Lcgm;	a	createConfig
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgm;	a	deserialize
		p	0	dynamic	dynamic
	m	()Ljava/util/Optional;	b	getExitPos
	m	()Z	c	isExact
c	cgn	net/minecraft/world/gen/feature/FeatureConfig
	f	Lcgv;	e	DEFAULT
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	1	ops	ops
c	cgo	net/minecraft/world/gen/feature/IcePatchFeatureConfig
	f	I	a	radius
	m	(I)V	<init>	<init>
		p	1	radius	radius
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgo;	a	deserialize
		p	0	dynamic	dynamic
c	cgp	net/minecraft/world/gen/feature/HugeMushroomFeatureConfig
	f	Lchw;	a	capProvider
	f	Lchw;	b	stemProvider
	f	I	c	capSize
	m	(Lchw;Lchw;I)V	<init>	<init>
		p	1	capProvider	capProvider
		p	2	stemProvider	stemProvider
		p	3	capSize	capSize
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgp;	a	deserialize
c	cgq	net/minecraft/world/gen/feature/FillLayerFeatureConfig
	f	I	a	height
	f	Lbyj;	b	state
	m	(ILbyj;)V	<init>	<init>
		p	1	height	height
		p	2	state	state
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgq;	a	deserialize
		p	0	dynamic	dynamic
c	cgr	net/minecraft/world/gen/feature/MegaTreeFeatureConfig
	f	I	a	heightInterval
	f	I	b	crownHeight
	m	(Lchw;Lchw;Ljava/util/List;III)V	<init>	<init>
		p	5	heightInterval	heightInterval
		p	6	crownHeight	crownHeight
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgr;	a	deserialize
c	cgr$a	net/minecraft/world/gen/feature/MegaTreeFeatureConfig$Builder
	f	I	e	heightInterval
	f	I	f	crownHeight
	m	(I)Lcgr$a;	a	baseHeight
	m	()Lcgr;	a	build
	m	(Ljava/util/List;)Lcgr$a;	a	treeDecorators
	m	(I)Lcgr$a;	b	heightInterval
		p	1	heightInterval	heightInterval
	m	(I)Lcgr$a;	c	crownHeight
		p	1	crownHeight	crownHeight
c	cgs	net/minecraft/world/gen/feature/MineshaftFeatureConfig
	f	D	a	probability
	f	Lcel$b;	b	type
	m	(DLcel$b;)V	<init>	<init>
		p	1	probability	probability
		p	3	type	type
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgs;	a	deserialize
		p	0	dynamic	dynamic
c	cgt	net/minecraft/world/gen/decorator/NoiseHeightmapDecoratorConfig
	f	D	a	noiseLevel
	f	I	b	belowNoise
	f	I	c	aboveNoise
	m	(DII)V	<init>	<init>
		p	1	noiseLevel	noiseLevel
		p	3	belowNoise	belowNoise
		p	4	aboveNoise	aboveNoise
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgt;	a	deserialize
		p	0	dynamic	dynamic
c	cgu	net/minecraft/world/gen/decorator/NopeDecoratorConfig
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgu;	a	deserialize
		p	0	dynamic	dynamic
c	cgv	net/minecraft/world/gen/feature/DefaultFeatureConfig
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgv;	a	deserialize
		p	0	dynamic	dynamic
c	cgw	net/minecraft/world/gen/feature/OceanRuinFeatureConfig
	f	Lcll$b;	a	biomeType
	f	F	b	largeProbability
	f	F	c	clusterProbability
	m	(Lcll$b;FF)V	<init>	<init>
		p	1	biomeType	biomeType
		p	2	largeProbability	largeProbability
		p	3	clusterProbability	clusterProbability
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgw;	a	deserialize
		p	0	dynamic	dynamic
c	cgx	net/minecraft/world/gen/feature/OreFeatureConfig
	f	Lcgx$a;	a	target
	f	I	b	size
	f	Lbyj;	c	state
	m	(Lcgx$a;Lbyj;I)V	<init>	<init>
		p	1	target	target
		p	2	state	state
		p	3	size	size
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgx;	a	deserialize
		p	0	dynamic	dynamic
c	cgx$a	net/minecraft/world/gen/feature/OreFeatureConfig$Target
	f	Ljava/util/Map;	c	nameMap
	f	Ljava/lang/String;	d	name
	f	Ljava/util/function/Predicate;	e	predicate
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcgx$a;	a	byName
		p	0	name	name
	m	()Ljava/util/function/Predicate;	b	getCondition
c	cgy	net/minecraft/world/gen/ProbabilityConfig
	f	F	b	probability
	m	(F)V	<init>	<init>
		p	1	probability	probability
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgy;	a	deserialize
		p	0	dynamic	dynamic
c	cgz	net/minecraft/world/gen/feature/RandomBooleanFeatureConfig
	f	Lcdc;	a	featureTrue
	f	Lcdc;	b	featureFalse
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgz;	a	deserialize
		p	0	dynamic	dynamic
c	ch	net/minecraft/advancement/criterion/UsedEnderEyeCriterion
	f	Lsm;	a	id
	m	(Lxe;Lfk;)V	a	trigger
		p	1	player	player
		p	2	strongholdPos	strongholdPos
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lch$a;	b	conditionsFromJson
c	ch$a	net/minecraft/advancement/criterion/UsedEnderEyeCriterion$Conditions
	f	Lbr$c;	a	distance
	m	(D)Z	a	matches
		p	1	distance	distance
c	cha	net/minecraft/world/gen/feature/RandomFeatureConfig
	f	Ljava/util/List;	a	features
	f	Lcdc;	b	defaultFeature
	m	(Lcom/mojang/datafixers/Dynamic;)Lcha;	a	deserialize
		p	0	dynamic	dynamic
c	chb	net/minecraft/world/gen/feature/RandomPatchFeatureConfig
	f	Lchw;	a	stateProvider
	f	Lcfw;	b	blockPlacer
	f	Ljava/util/Set;	c	whitelist
	f	Ljava/util/Set;	d	blacklist
	f	I	f	tries
	f	I	g	spreadX
	f	I	h	spreadY
	f	I	i	spreadZ
	f	Z	j	canReplace
	f	Z	k	project
	f	Z	l	needsWater
	m	(Lchw;Lcfw;Ljava/util/Set;Ljava/util/Set;IIIIZZZ)V	<init>	<init>
		p	1	stateProvider	stateProvider
		p	2	blockPlacer	blockPlacer
		p	3	whitelist	whitelist
		p	4	blacklist	blacklist
		p	5	tries	tries
		p	6	spreadX	spreadX
		p	7	spreadY	spreadY
		p	8	spreadZ	spreadZ
		p	9	canReplace	canReplace
		p	10	project	project
		p	11	needsWater	needsWater
	m	(Lcom/mojang/datafixers/Dynamic;)Lchb;	a	deserialize
c	chb$a	net/minecraft/world/gen/feature/RandomPatchFeatureConfig$Builder
	f	Lchw;	a	stateProvider
	f	Lcfw;	b	blockPlacer
	f	Ljava/util/Set;	c	whitelist
	f	Ljava/util/Set;	d	blacklist
	f	I	e	tries
	f	I	f	spreadX
	f	I	g	spreadY
	f	I	h	spreadZ
	f	Z	i	canReplace
	f	Z	j	project
	f	Z	k	needsWater
	m	(Lchw;Lcfw;)V	<init>	<init>
		p	1	stateProvider	stateProvider
		p	2	blockPlacer	blockPlacer
	m	()Lchb$a;	a	canReplace
	m	(I)Lchb$a;	a	tries
		p	1	tries	tries
	m	(Ljava/util/Set;)Lchb$a;	a	whitelist
		p	1	whitelist	whitelist
	m	(I)Lchb$a;	b	spreadX
		p	1	spreadX	spreadX
	m	()Lchb$a;	b	cannotProject
	m	(Ljava/util/Set;)Lchb$a;	b	blacklist
		p	1	blacklist	blacklist
	m	()Lchb$a;	c	needsWater
	m	(I)Lchb$a;	c	spreadY
		p	1	spreadY	spreadY
	m	(I)Lchb$a;	d	spreadZ
		p	1	spreadZ	spreadZ
	m	()Lchb;	d	build
c	chc	net/minecraft/world/gen/feature/RandomRandomFeatureConfig
	f	Ljava/util/List;	a	features
	f	I	b	count
	m	(Lcom/mojang/datafixers/Dynamic;)Lchc;	a	deserialize
		p	0	dynamic	dynamic
c	chd	net/minecraft/world/gen/feature/EmeraldOreFeatureConfig
	f	Lbyj;	a	target
	f	Lbyj;	b	state
	m	(Lbyj;Lbyj;)V	<init>	<init>
		p	1	target	target
		p	2	state	state
	m	(Lcom/mojang/datafixers/Dynamic;)Lchd;	a	deserialize
		p	0	dynamic	dynamic
c	che	net/minecraft/world/gen/feature/SeagrassFeatureConfig
	f	I	a	count
	f	D	b	tallSeagrassProbability
	m	(ID)V	<init>	<init>
		p	1	count	count
		p	2	tallSeagrassProbability	tallSeagrassProbability
	m	(Lcom/mojang/datafixers/Dynamic;)Lche;	a	deserialize
		p	0	dynamic	dynamic
c	chf	net/minecraft/world/gen/feature/ShipwreckFeatureConfig
	f	Z	a	isBeached
	m	(Z)V	<init>	<init>
		p	1	isBeached	isBeached
	m	(Lcom/mojang/datafixers/Dynamic;)Lchf;	a	deserialize
		p	0	dynamic	dynamic
c	chg	net/minecraft/world/gen/feature/SimpleBlockFeatureConfig
	f	Lbyj;	a	toPlace
	f	Ljava/util/List;	b	placeOn
	f	Ljava/util/List;	c	placeIn
	f	Ljava/util/List;	d	placeUnder
	m	(Lbyj;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1	toPlace	toPlace
		p	2	placeOn	placeOn
		p	3	placeIn	placeIn
		p	4	placeUnder	placeUnder
	m	(Lbyj;[Lbyj;[Lbyj;[Lbyj;)V	<init>	<init>
		p	1	toPlace	toPlace
		p	2	placeOn	placeOn
		p	3	placeIn	placeIn
		p	4	placeUnder	placeUnder
	m	(Lcom/mojang/datafixers/Dynamic;)Lchg;	a	deserialize
		p	0	dynamic	dynamic
c	chh	net/minecraft/world/gen/feature/SimpleRandomFeatureConfig
	f	Ljava/util/List;	a	features
	m	(Lcom/mojang/datafixers/Dynamic;)Lchh;	a	deserialize
		p	0	dynamic	dynamic
c	chi	net/minecraft/world/gen/feature/BranchedTreeFeatureConfig
	f	Lchq;	a	foliagePlacer
	f	I	b	heightRandA
	f	I	c	heightRandB
	f	I	d	trunkHeight
	f	I	f	trunkHeightRandom
	f	I	g	trunkTopOffset
	f	I	h	trunkTopOffsetRandom
	f	I	i	foliageHeight
	f	I	j	foliageHeightRandom
	f	I	k	maxWaterDepth
	f	Z	l	noVines
	m	(Lchw;Lchw;Lchq;Ljava/util/List;IIIIIIIIIIZ)V	<init>	<init>
		p	1	trunkProvider	trunkProvider
		p	2	leavesProvider	leavesProvider
		p	3	foliagePlacer	foliagePlacer
		p	4	treeDecorators	treeDecorators
		p	5	baseHeight	baseHeight
		p	6	heightRandA	heightRandA
		p	7	heightRandB	heightRandB
		p	8	trunkHeight	trunkHeight
		p	9	trunkHeightRandom	trunkHeightRandom
		p	10	trunkTopOffset	trunkTopOffset
		p	11	trunkTopOffsetRandom	trunkTopOffsetRandom
		p	12	foliageHeight	foliageHeight
		p	13	foliageHeightRandom	foliageHeightRandom
		p	14	maxWaterDepth	maxWaterDepth
		p	15	noVines	noVines
	m	(Lcom/mojang/datafixers/Dynamic;)Lchi;	a	deserialize
		p	0	dynamic	dynamic
c	chi$a	net/minecraft/world/gen/feature/BranchedTreeFeatureConfig$Builder
	f	Lchq;	c	foliagePlacer
	f	Ljava/util/List;	d	treeDecorators
	f	I	f	heightRandA
	f	I	g	heightRandB
	f	I	h	trunkHeight
	f	I	i	trunkHeightRandom
	f	I	j	trunkTopOffset
	f	I	k	trunkTopOffsetRandom
	f	I	l	foliageHeight
	f	I	m	foliageHeightRandom
	f	I	n	maxWaterDepth
	f	Z	o	noVines
	m	(Lchw;Lchw;Lchq;)V	<init>	<init>
		p	1	trunkProvider	trunkProvider
		p	2	leavesProvider	leavesProvider
	m	()Lchi$a;	a	noVines
	m	(I)Lchi$a;	a	baseHeight
	m	(Ljava/util/List;)Lchi$a;	a	treeDecorators
		p	1	treeDecorators	treeDecorators
	m	(I)Lchi$a;	b	heightRandA
		p	1	heightRandA	heightRandA
	m	()Lchi;	c	build
	m	(I)Lchi$a;	c	heightRandB
		p	1	heightRandB	heightRandB
	m	(I)Lchi$a;	e	trunkHeight
		p	1	trunkHeight	trunkHeight
	m	(I)Lchi$a;	f	trunkHeightRandom
		p	1	trunkHeightRandom	trunkHeightRandom
	m	(I)Lchi$a;	g	trunkTopOffset
		p	1	trunkTopOffset	trunkTopOffset
	m	(I)Lchi$a;	h	trunkTopOffsetRandom
		p	1	trunkTopOffsetRandom	trunkTopOffsetRandom
	m	(I)Lchi$a;	i	foliageHeight
		p	1	foliageHeight	foliageHeight
	m	(I)Lchi$a;	j	foliageHeightRandom
		p	1	foliageHeightRandom	foliageHeightRandom
	m	(I)Lchi$a;	k	maxWaterDepth
		p	1	maxWaterDepth	maxWaterDepth
c	chj	net/minecraft/world/gen/feature/EndSpikeFeatureConfig
	f	Z	a	crystalInvulnerable
	f	Ljava/util/List;	b	spikes
	f	Lfk;	c	crystalBeamTarget
	m	(ZLjava/util/List;Lfk;)V	<init>	<init>
		p	1	crystalInvulnerable	crystalInvulnerable
		p	2	spikes	spikes
		p	3	crystalBeamTarget	crystalBeamTarget
	m	()Z	a	isCrystalInvulerable
	m	(Lcom/mojang/datafixers/Dynamic;)Lchj;	a	deserialize
		p	0	dynamic	dynamic
	m	()Ljava/util/List;	b	getSpikes
	m	()Lfk;	c	getPos
c	chk	net/minecraft/world/gen/feature/SpringFeatureConfig
	f	Lcoj;	a	state
	f	Z	b	requiresBlockBelow
	f	I	c	rockCount
	f	I	d	holeCount
	f	Ljava/util/Set;	f	validBlocks
	m	(Lcoj;ZIILjava/util/Set;)V	<init>	<init>
		p	1	state	state
		p	2	requiresBlockBelow	requiresBlockBelow
		p	3	rockCount	rockCount
		p	4	holeCount	holeCount
		p	5	validBlocks	validBlocks
	m	(Lcom/mojang/datafixers/Dynamic;)Lchk;	a	deserialize
c	chl	net/minecraft/world/gen/feature/TreeFeatureConfig
	f	Lchw;	m	trunkProvider
	f	Lchw;	n	leavesProvider
	f	Ljava/util/List;	o	decorators
	f	I	p	baseHeight
	m	(Lchw;Lchw;Ljava/util/List;I)V	<init>	<init>
		p	1	trunkProvider	trunkProvider
		p	2	leavesProvider	leavesProvider
		p	3	decorators	decorators
		p	4	baseHeight	baseHeight
	m	(Lcom/mojang/datafixers/Dynamic;)Lchl;	b	deserialize
		p	0	configDeserializer	configDeserializer
c	chl$a	net/minecraft/world/gen/feature/TreeFeatureConfig$Builder
	f	Lchw;	a	trunkProvider
	f	Lchw;	b	leavesProvider
	f	Ljava/util/List;	c	decorators
	f	I	d	baseHeight
	m	(Lchw;Lchw;)V	<init>	<init>
		p	1	trunkProvider	trunkProvider
		p	2	leavesProvider	leavesProvider
	m	()Lchl;	b	build
	m	(I)Lchl$a;	d	baseHeight
		p	1	baseHeight	baseHeight
c	chm	net/minecraft/world/gen/feature/VillageFeatureConfig
	f	Lsm;	a	startPool
	f	I	b	size
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	startPool	startPool
		p	2	size	size
	m	(Lcom/mojang/datafixers/Dynamic;)Lchm;	a	deserialize
		p	0	dynamic	dynamic
c	cho	net/minecraft/world/gen/foliage/AcaciaFoliagePlacer
c	chp	net/minecraft/world/gen/foliage/BlobFoliagePlacer
	m	(II)V	<init>	<init>
		p	1	radius	radius
		p	2	radiusRandom	radiusRandom
c	chq	net/minecraft/world/gen/foliage/FoliagePlacer
	f	I	a	radius
	f	I	b	randomRadius
	f	Lchr;	c	type
	m	(IILchr;)V	<init>	<init>
		p	1	radius	radius
		p	2	randomRadius	randomRadius
		p	3	type	type
	m	(Ljava/util/Random;IILchi;)I	a	getRadius
		p	4	config	config
	m	(Lbkb;Ljava/util/Random;Lchi;ILfk;IILjava/util/Set;)V	a	generate
	m	(Lbkb;Ljava/util/Random;Lchi;IIILfk;Ljava/util/Set;)V	a	generate
		p	1	world	world
		p	3	config	config
		p	7	pos	pos
		p	8	positions	positions
c	chr	net/minecraft/world/gen/foliage/FoliagePlacerType
	f	Ljava/util/function/Function;	e	deserializer
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	deserializer	deserializer
	m	(Lcom/mojang/datafixers/Dynamic;)Lchq;	a	deserialize
		p	1	dynamic	dynamic
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lchr;	a	register
		p	0	id	id
		p	1	deserializer	deserializer
c	chs	net/minecraft/world/gen/foliage/PineFoliagePlacer
c	cht	net/minecraft/world/gen/foliage/SpruceFoliagePlacer
c	chw	net/minecraft/world/gen/stateprovider/BlockStateProvider
	f	Lchx;	a	stateProvider
	m	(Lchx;)V	<init>	<init>
		p	1	stateProvider	stateProvider
	m	(Ljava/util/Random;Lfk;)Lbyj;	a	getBlockState
		p	1	random	random
		p	2	pos	pos
c	chx	net/minecraft/world/gen/stateprovider/BlockStateProviderType
	f	Ljava/util/function/Function;	e	configDeserializer
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lcom/mojang/datafixers/Dynamic;)Lchw;	a	deserialize
		p	1	dynamic	dynamic
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lchx;	a	register
		p	0	id	id
		p	1	configDeserializer	configDeserializer
c	chy	net/minecraft/world/gen/stateprovider/ForestFlowerBlockStateProvider
	f	[Lbyj;	b	flowers
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
c	chz	net/minecraft/world/gen/stateprovider/PlainsFlowerBlockStateProvider
	f	[Lbyj;	b	tulips
	f	[Lbyj;	c	flowers
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
c	ci	net/minecraft/advancement/criterion/UsedTotemCriterion
	f	Lsm;	a	ID
	m	(Lxe;Lben;)V	a	trigger
		p	1	player	player
		p	2	stack	stack
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lci$a;	b	conditionsFromJson
c	ci$a	net/minecraft/advancement/criterion/UsedTotemCriterion$Conditions
	f	Lbj;	a	item
	m	(Lbj;)V	<init>	<init>
		p	1	item	item
	m	(Lben;)Z	a	matches
		p	1	stack	stack
	m	(Lbjv;)Lci$a;	a	create
c	cia	net/minecraft/world/gen/stateprovider/PillarBlockStateProvider
	f	Lbph;	b	block
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lbph;)V	<init>	<init>
		p	1	block	block
c	cib	net/minecraft/world/gen/stateprovider/SimpleBlockStateProvider
	f	Lbyj;	b	state
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lbyj;)V	<init>	<init>
		p	1	state	state
c	cic	net/minecraft/world/gen/stateprovider/WeightedBlockStateProvider
	f	Laod;	b	states
	m	(Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Laod;)V	<init>	<init>
		p	1	states	states
	m	(Lbyj;I)Lcic;	a	addState
		p	1	state	state
		p	2	weight	weight
c	cie	net/minecraft/structure/pool/EmptyPoolElement
	f	Lcie;	a	INSTANCE
c	cif	net/minecraft/structure/pool/FeaturePoolElement
	f	Lcdc;	a	feature
	f	Ljt;	b	tag
	m	(Lcdc;)V	<init>	<init>
		p	1	feature	feature
c	cig	net/minecraft/structure/JigsawJunction
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Lcim$a;	e	destProjection
	m	(IIIILcim$a;)V	<init>	<init>
		p	1	sourceX	sourceX
		p	2	sourceGroundY	sourceGroundY
		p	3	sourceZ	sourceZ
		p	4	deltaY	deltaY
		p	5	destProjection	destProjection
	m	()I	a	getSourceX
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
	m	(Lcom/mojang/datafixers/Dynamic;)Lcig;	a	deserialize
		p	0	dynamic	dynamic
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	cih	net/minecraft/structure/pool/StructurePoolBasedGenerator
	f	Lcin;	a	REGISTRY
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Lsm;ILcih$a;Lcaa;Lcmo;Lfk;Ljava/util/List;Ljava/util/Random;)V	a	addPieces
		p	0	startPoolId	startPoolId
		p	1	size	size
		p	2	pieceFactory	pieceFactory
		p	3	chunkGenerator	chunkGenerator
		p	4	structureManager	structureManager
		p	5	pos	pos
		p	6	pieces	pieces
		p	7	random	random
c	cih$a	net/minecraft/structure/pool/StructurePoolBasedGenerator$PieceFactory
	m	(Lcmo;Lcik;Lfk;ILbtu;Lclb;)Lclo;	create	create
		p	1	structureManager	structureManager
		p	2	poolElement	poolElement
		p	3	pos	pos
		p	5	rotation	rotation
		p	6	elementBounds	elementBounds
c	cih$b	net/minecraft/structure/pool/StructurePoolBasedGenerator$ShapedPoolStructurePiece
	f	Lclo;	a	piece
	f	Ljava/util/concurrent/atomic/AtomicReference;	b	pieceShape
	f	I	c	minY
	f	I	d	currentSize
	m	(Lclo;Ljava/util/concurrent/atomic/AtomicReference;II)V	<init>	<init>
		p	1	piece	piece
		p	2	pieceShape	pieceShape
		p	3	minY	minY
		p	4	currentSize	currentSize
c	cih$c	net/minecraft/structure/pool/StructurePoolBasedGenerator$StructurePoolGenerator
	f	I	a	maxSize
	f	Lcih$a;	b	pieceFactory
	f	Lcaa;	c	chunkGenerator
	f	Lcmo;	d	structureManager
	f	Ljava/util/List;	e	children
	f	Ljava/util/Random;	f	random
	f	Ljava/util/Deque;	g	structurePieces
	m	(Lsm;ILcih$a;Lcaa;Lcmo;Lfk;Ljava/util/List;Ljava/util/Random;)V	<init>	<init>
		p	1	startingPool	startingPool
		p	2	maxSize	maxSize
		p	4	chunkGenerator	chunkGenerator
		p	5	structureManager	structureManager
		p	7	children	children
		p	8	random	random
	m	(Lclo;Ljava/util/concurrent/atomic/AtomicReference;II)V	a	generatePiece
		p	1	piece	piece
		p	2	pieceShape	pieceShape
		p	3	minY	minY
		p	4	currentSize	currentSize
c	cii	net/minecraft/structure/pool/ListPoolElement
	f	Ljava/util/List;	a	elements
c	cij	net/minecraft/structure/pool/SinglePoolElement
	f	Lsm;	a	location
	f	Lcom/google/common/collect/ImmutableList;	b	processors
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
		p	1	location	location
		p	2	processors	processors
c	cik	net/minecraft/structure/pool/StructurePoolElement
	f	Lcim$a;	a	projection
	m	(Lcmo;Lfk;Lbtu;)Lclb;	a	getBoundingBox
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	rotation	rotation
	m	(Lcim$a;)Lcik;	a	setProjection
		p	1	projection	projection
	m	()Lcil;	a	getType
	m	(Lcmo;Lfk;Lbtu;Ljava/util/Random;)Ljava/util/List;	a	getStructureBlockInfos
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	rotation	rotation
		p	4	random	random
	m	(Lcmo;Lbjx;Lcaa;Lfk;Lbtu;Lclb;Ljava/util/Random;)Z	a	generate
		p	1	structureManager	structureManager
		p	2	world	world
	m	()Lcim$a;	c	getProjection
c	cil	net/minecraft/structure/pool/StructurePoolElementType
	m	(Ljava/lang/String;Lcil;)Lcil;	a	register
c	cim	net/minecraft/structure/pool/StructurePool
	f	Lcim;	a	EMPTY
	f	Lcim;	b	INVALID
	f	Lsm;	c	id
	f	Lcom/google/common/collect/ImmutableList;	d	elementCounts
	f	Ljava/util/List;	e	elements
	f	Lsm;	f	terminatorsId
	f	Lcim$a;	g	projection
	m	(Lsm;Lsm;Ljava/util/List;Lcim$a;)V	<init>	<init>
		p	1	id	id
		p	2	terminatorsId	terminatorsId
		p	3	elementCounts	elementCounts
		p	4	projection	projection
	m	(Ljava/util/Random;)Lcik;	a	getRandomElement
		p	1	random	random
	m	()Lsm;	a	getTerminatorsId
	m	()Lsm;	b	getId
	m	(Ljava/util/Random;)Ljava/util/List;	b	getElementIndicesInRandomOrder
		p	1	random	random
	m	()I	c	getElementCount
c	cim$a	net/minecraft/structure/pool/StructurePool$Projection
	f	Ljava/util/Map;	c	PROJECTIONS_BY_ID
	f	Ljava/lang/String;	d	id
	f	Lcom/google/common/collect/ImmutableList;	e	processors
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Lcim$a;	a	getById
		p	0	id	id
	m	()Lcom/google/common/collect/ImmutableList;	b	getProcessors
c	cin	net/minecraft/structure/pool/StructurePoolRegistry
	f	Ljava/util/Map;	a	pools
	m	(Lcim;)V	a	add
		p	1	pool	pool
	m	(Lsm;)Lcim;	a	get
		p	1	id	id
c	cip	net/minecraft/world/gen/decorator/AlterGroundTreeDecorator
c	ciq	net/minecraft/world/gen/decorator/BeehiveTreeDecorator
	f	F	b	chance
	m	(F)V	<init>	<init>
		p	1	chance	chance
c	cir	net/minecraft/world/gen/decorator/CocoaBeansTreeDecorator
c	cis	net/minecraft/world/gen/decorator/LeaveVineTreeDecorator
c	cit	net/minecraft/world/gen/decorator/TreeDecorator
	c	Tree decorators can add additional blocks to trees, such as vines or beehives.
	f	Lciu;	a	type
	m	(Lbke;Lfk;Lbyj;Ljava/util/Set;Lclb;)V	a	setBlockStateAndEncompassPosition
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	5	box	box
	m	(Lbke;Lfk;Lbzb;Ljava/util/Set;Lclb;)V	a	placeVine
		p	1	world	world
		p	2	pos	pos
		p	3	directionProperty	directionProperty
		p	5	box	box
	m	(Lbjx;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lclb;)V	a	generate
		p	1	world	world
		p	2	random	random
		p	3	logPositions	logPositions
		p	4	leavesPositions	leavesPositions
		p	6	box	box
c	ciu	net/minecraft/world/gen/decorator/TreeDecoratorType
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lciu;	a	register
c	civ	net/minecraft/world/gen/decorator/TrunkVineTreeDecorator
c	cix	net/minecraft/world/gen/chunk/FlatChunkGeneratorLayer
	f	Lbyj;	a	blockState
	f	I	b	thickness
	f	I	c	startY
	m	(ILbph;)V	<init>	<init>
		p	1	thickness	thickness
		p	2	block	block
	m	()I	a	getThickness
	m	(I)V	a	setStartY
		p	1	startY	startY
	m	()Lbyj;	b	getBlockState
	m	()I	c	getStartY
c	ciy	net/minecraft/world/gen/chunk/FlatChunkGeneratorConfig
	f	Lcdc;	A	SWAMP_HUT
	f	Lcdc;	B	DESERT_PYRAMID
	f	Lcdc;	C	JUNGLE_TEMPLE
	f	Lcdc;	D	IGLOO
	f	Lcdc;	E	SHIPWRECK
	f	Lcdc;	F	OCEAN_MONUMENT
	f	Lcdc;	G	WATER_LAKE
	f	Lcdc;	H	LAVA_LAKE
	f	Lcdc;	I	END_CITY
	f	Lcdc;	J	WOODLAND_MANSION
	f	Lcdc;	K	NETHER_BRIDGE
	f	Lcdc;	L	OCEAN_RUIN
	f	Lcdc;	M	PILLAGER_OUTPOST
	f	Ljava/util/List;	N	layers
	f	Ljava/util/Map;	O	structures
	f	Lbkt;	P	biome
	f	[Lbyj;	Q	layerBlocks
	f	Z	R	hasNoTerrain
	f	I	S	groundHeight
	f	Ljava/util/Map;	t	FEATURE_TO_GENERATION_STEP
	f	Ljava/util/Map;	u	STRUCTURE_TO_FEATURES
	f	Ljava/util/Map;	v	FEATURE_TO_FEATURE_CONFIG
	f	Lorg/apache/logging/log4j/Logger;	w	LOGGER
	f	Lcdc;	x	MINESHAFT
	f	Lcdc;	y	VILLAGE
	f	Lcdc;	z	STRONGHOLD
	m	()Z	A	hasNoTerrain
	m	()[Lbyj;	C	getLayerBlocks
	m	(Lcom/mojang/datafixers/Dynamic;)Lciy;	a	fromDynamic
		p	0	dynamic	dynamic
	m	(Lbkt;)V	a	setBiome
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	setStructureOption
		p	1	structure	structure
		p	2	key	key
		p	3	value	value
	m	(Ljava/lang/String;)Lbph;	a	parseBlock
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	toDynamic
		p	1	dynamicOps	dynamicOps
	m	(Ljava/lang/String;I)Lcix;	a	parseLayerString
		p	0	string	string
		p	1	startY	startY
	m	(I)V	a	removeLayerBlock
		p	1	layer	layer
	m	(Ljava/lang/String;)Lciy;	b	fromString
		p	0	string	string
	m	(Ljava/lang/String;)Ljava/util/List;	c	parseLayersString
		p	0	string	string
	m	(Ljava/lang/String;)V	d	addStructure
		p	1	id	id
	m	()Lbkt;	v	getBiome
	m	()Ljava/util/Map;	w	getStructures
	m	()Ljava/util/List;	x	getLayers
	m	()V	y	updateLayerBlocks
	m	()Lciy;	z	getDefaultConfig
c	cj	net/minecraft/command/FloatRangeArgument
	f	Lcj;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ONLY_INTS_EXCEPTION
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
	m	()Ljava/lang/Float;	a	getMin
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lcj;	a	parse
		p	0	reader	reader
		p	1	allowFloats	allowFloats
		p	2	transform	transform
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	mapFloat
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	parseFloat
		p	0	reader	reader
		p	1	allowFloats	allowFloats
	m	()Ljava/lang/Float;	b	getMax
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	peekDigit
		p	0	reader	reader
		p	1	allowFloats	allowFloats
c	cjb	net/minecraft/world/gen/decorator/CarvingMaskDecorator
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjc;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjc	net/minecraft/world/gen/decorator/CarvingMaskDecoratorConfig
	f	Lcbu$a;	a	step
	f	F	b	probability
	m	(Lcbu$a;F)V	<init>	<init>
		p	1	step	step
		p	2	probability	probability
	m	(Lcom/mojang/datafixers/Dynamic;)Lcjc;	a	deserialize
		p	0	dynamic	dynamic
c	cjd	net/minecraft/world/gen/decorator/ChanceDecoratorConfig
	f	I	a	chance
	m	(I)V	<init>	<init>
		p	1	chance	chance
	m	(Lcom/mojang/datafixers/Dynamic;)Lcjd;	a	deserialize
		p	0	dynamic	dynamic
c	cje	net/minecraft/world/gen/decorator/ChanceHeightmapDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjf	net/minecraft/world/gen/decorator/ChanceHeightmapDoubleDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjg	net/minecraft/world/gen/decorator/ChancePassthroughDecorator
	m	(Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjh	net/minecraft/world/gen/decorator/ChanceTopSolidHeightmapDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cji	net/minecraft/world/gen/decorator/ChorusPlantDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcgu;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjj	net/minecraft/world/gen/decorator/ConfiguredDecorator
	f	Lcka;	a	decorator
	f	Lcgk;	b	config
	m	(Lcka;Lcgk;)V	<init>	<init>
		p	1	decorator	decorator
	m	(Lcka;Lcom/mojang/datafixers/Dynamic;)V	<init>	<init>
		p	1	decorator	decorator
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
	m	(Lcom/mojang/datafixers/Dynamic;)Lcjj;	a	deserialize
		p	0	dynamic	dynamic
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcdc;)Z	a	generate
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
		p	4	pos	pos
c	cjk	net/minecraft/world/gen/decorator/CountBiasedRangeDecorator
	m	(Ljava/util/Random;Lcgi;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjl	net/minecraft/world/gen/decorator/CountChanceHeightmapDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckc;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjm	net/minecraft/world/gen/decorator/CountChanceHeightmapDoubleDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckc;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjn	net/minecraft/world/gen/decorator/CountDepthAverageDecorator
	m	(Ljava/util/Random;Lcjw;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjo	net/minecraft/world/gen/decorator/CountHeightmapDoubleDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjp	net/minecraft/world/gen/decorator/CountHeight64Decorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjq	net/minecraft/world/gen/decorator/CountHeightmap32Decorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjr	net/minecraft/world/gen/decorator/CountHeightmapDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjs	net/minecraft/world/gen/decorator/CountTopSolidDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjt	net/minecraft/world/gen/decorator/CountVeryBiasedRangeDecorator
	m	(Ljava/util/Random;Lcgi;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cju	net/minecraft/world/gen/decorator/CountExtraHeightmapDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcke;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjv	net/minecraft/world/gen/decorator/DarkOakTreeDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcgu;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjw	net/minecraft/world/gen/decorator/CountDepthDecoratorConfig
	f	I	a	count
	f	I	b	baseline
	f	I	c	spread
	m	(III)V	<init>	<init>
		p	1	count	count
		p	2	baseline	baseline
		p	3	spread	spread
	m	(Lcom/mojang/datafixers/Dynamic;)Lcjw;	a	deserialize
		p	0	dynamic	dynamic
c	cjx	net/minecraft/world/gen/decorator/EmeraldOreDecorator
	m	(Ljava/util/Random;Lcgu;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjy	net/minecraft/world/gen/decorator/EndGatewayDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcgu;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cjz	net/minecraft/world/gen/decorator/EndIslandDecorator
	m	(Ljava/util/Random;Lcgu;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cka	net/minecraft/world/gen/decorator/Decorator
	f	Ljava/util/function/Function;	M	configDeserializer
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configDeserializer	configDeserializer
	m	(Lcgk;)Lcjj;	a	configure
	m	(Lbjx;Lcaa;Ljava/util/Random;Lfk;Lcgk;Lcdc;)Z	a	generate
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
		p	4	pos	pos
		p	5	decoratorConfig	decoratorConfig
	m	(Lcom/mojang/datafixers/Dynamic;)Lcgk;	a	deserialize
	m	(Ljava/lang/String;Lcka;)Lcka;	a	register
		p	0	registryName	registryName
		p	1	decorator	decorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcgk;Lfk;)Ljava/util/stream/Stream;	a	getPositions
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
		p	4	config	config
		p	5	pos	pos
c	ckb	net/minecraft/world/gen/decorator/ForestRockDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckc	net/minecraft/world/gen/decorator/CountChanceDecoratorConfig
	f	I	a	count
	f	F	b	chance
	m	(IF)V	<init>	<init>
		p	1	count	count
		p	2	chance	chance
	m	(Lcom/mojang/datafixers/Dynamic;)Lckc;	a	deserialize
		p	0	dynamic	dynamic
c	ckd	net/minecraft/world/gen/decorator/CountDecoratorConfig
	f	I	a	count
	m	(I)V	<init>	<init>
		p	1	count	count
	m	(Lcom/mojang/datafixers/Dynamic;)Lckd;	a	deserialize
		p	0	dynamic	dynamic
c	cke	net/minecraft/world/gen/decorator/CountExtraChanceDecoratorConfig
	f	I	a	count
	f	F	b	extraChance
	f	I	c	extraCount
	m	(IFI)V	<init>	<init>
		p	1	count	count
		p	2	extraChance	extraChance
		p	3	extraCount	extraCount
	m	(Lcom/mojang/datafixers/Dynamic;)Lcke;	a	deserialize
		p	0	dynamic	dynamic
c	ckf	net/minecraft/world/gen/decorator/IcebergDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckg	net/minecraft/world/gen/decorator/LavaLakeDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckh	net/minecraft/world/gen/decorator/WaterLakeDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cki	net/minecraft/world/gen/decorator/DungeonsDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcjd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckj	net/minecraft/world/gen/decorator/TopSolidHeightmapNoiseBiasedDecoratorConfig
	f	I	a	noiseToCountRatio
	f	D	b	noiseFactor
	f	D	c	noiseOffset
	f	Lcbv$a;	d	heightmap
	m	(IDDLcbv$a;)V	<init>	<init>
		p	1	noiseToCountRatio	noiseToCountRatio
		p	2	noiseFactor	noiseFactor
		p	4	noiseOffset	noiseOffset
		p	6	heightmap	heightmap
	m	(Lcom/mojang/datafixers/Dynamic;)Lckj;	a	deserialize
		p	0	dynamic	dynamic
c	ckk	net/minecraft/world/gen/decorator/NoiseHeightmap32Decorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcgt;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckl	net/minecraft/world/gen/decorator/NoiseHeightmapDoubleDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcgt;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckm	net/minecraft/world/gen/decorator/NopeDecorator
	m	(Ljava/util/Random;Lcgu;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckn	net/minecraft/world/gen/decorator/HeightmapRangeDecoratorConfig
	f	I	a	min
	f	I	b	max
	m	(II)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(Lcom/mojang/datafixers/Dynamic;)Lckn;	a	deserialize
		p	0	dynamic	dynamic
c	cko	net/minecraft/world/gen/decorator/SimpleDecorator
	m	(Ljava/util/Random;Lcgk;Lfk;)Ljava/util/stream/Stream;	a	getPositions
		p	1	random	random
		p	2	config	config
		p	3	pos	pos
c	ckp	net/minecraft/world/gen/decorator/HeightmapDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lcgu;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckq	net/minecraft/world/gen/decorator/HeightmapNoiseBiasedDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckj;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckr	net/minecraft/world/gen/decorator/HeightmapRangeDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckn;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cks	net/minecraft/world/gen/decorator/ChanceRangeDecorator
	m	(Ljava/util/Random;Lcgg;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckt	net/minecraft/world/gen/decorator/CountRangeDecorator
	m	(Ljava/util/Random;Lcgi;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cku	net/minecraft/world/gen/decorator/HellFireDecorator
	m	(Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckv	net/minecraft/world/gen/decorator/LightGemChanceDecorator
	m	(Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckw	net/minecraft/world/gen/decorator/MagmaDecorator
	m	(Lbjx;Lcaa;Ljava/util/Random;Lckd;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	ckx	net/minecraft/world/gen/decorator/RandomCountRangeDecorator
	m	(Ljava/util/Random;Lcgi;Lfk;)Ljava/util/stream/Stream;	a	getPositions
c	cla	net/minecraft/structure/VillageStructureStart
c	clb	net/minecraft/util/math/BlockBox
	f	I	a	minX
	f	I	b	minY
	f	I	c	minZ
	f	I	d	maxX
	f	I	e	maxY
	f	I	f	maxZ
	m	([I)V	<init>	<init>
		p	1	data	data
	m	(Lclb;)V	<init>	<init>
		p	1	source	source
	m	(IIII)V	<init>	<init>
		p	1	minX	minX
		p	2	minZ	minZ
		p	3	maxX	maxX
		p	4	maxZ	maxZ
	m	(Lgg;Lgg;)V	<init>	<init>
		p	1	v1	v1
		p	2	v2	v2
	m	(IIIIII)V	<init>	<init>
		p	1	minX	minX
		p	2	minY	minY
		p	3	minZ	minZ
		p	4	maxX	maxX
		p	5	maxY	maxY
		p	6	maxZ	maxZ
	m	()Lclb;	a	empty
	m	(IIIIIIIIILfp;)Lclb;	a	rotated
		p	0	x	x
		p	1	y	y
		p	2	z	z
		p	3	offsetX	offsetX
		p	4	offsetY	offsetY
		p	5	offsetZ	offsetZ
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	facing	facing
	m	(IIII)Z	a	intersectsXZ
		p	1	minX	minX
		p	2	minZ	minZ
		p	3	maxX	maxX
		p	4	maxZ	maxZ
	m	(III)V	a	offset
		p	1	dx	dx
		p	2	dy	dy
		p	3	dz	dz
	m	(IIIIII)Lclb;	a	create
		p	0	x1	x1
		p	1	y1	y1
		p	2	z1	z1
		p	3	x2	x2
		p	4	y2	y2
		p	5	z2	z2
	m	()Lgg;	b	getDimensions
	m	(Lgg;)Z	b	contains
		p	1	vec	vec
	m	(Lclb;)Z	b	intersects
		p	1	other	other
	m	(III)Lclb;	b	translated
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lclb;)V	c	encompass
		p	1	region	region
	m	()I	c	getBlockCountX
	m	()I	d	getBlockCountY
	m	()I	e	getBlockCountZ
	m	()Ljx;	g	toNbt
c	clc	net/minecraft/structure/BuriedTreasureGenerator
c	clc$a	net/minecraft/structure/BuriedTreasureGenerator$Piece
	m	(Lfk;)V	<init>	<init>
		p	1	pos	pos
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lbyj;)Z	a	isLiquid
		p	1	state	state
c	cld	net/minecraft/structure/DesertTempleGenerator
	f	[Z	e	hasPlacedChest
	m	(Ljava/util/Random;II)V	<init>	<init>
		p	1	random	random
		p	2	x	x
		p	3	z	z
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
c	cle	net/minecraft/structure/EndCityGenerator
	f	Lcmp;	a	PLACEMENT_DATA
	f	Lcmp;	b	IGNORE_AIR_PLACEMENT_DATA
	f	Lcle$b;	c	BUILDING
	f	Ljava/util/List;	d	SMALL_TOWER_BRIDGE_ATTACHMENTS
	f	Lcle$b;	e	SMALL_TOWER
	f	Lcle$b;	f	BRIDGE_PIECE
	f	Ljava/util/List;	g	FAT_TOWER_BRIDGE_ATTACHMENTS
	f	Lcle$b;	h	FAT_TOWER
	m	(Lcmo;Lfk;Lbtu;Ljava/util/List;Ljava/util/Random;)V	a	addPieces
		p	0	structureManager	structureManager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
	m	(Lcmo;Lcle$b;ILcle$a;Lfk;Ljava/util/List;Ljava/util/Random;)Z	b	createPart
		p	0	manager	manager
		p	1	piece	piece
		p	2	depth	depth
		p	3	parent	parent
		p	4	pos	pos
		p	5	pieces	pieces
		p	6	random	random
	m	(Lcmo;Lcle$a;Lfk;Ljava/lang/String;Lbtu;Z)Lcle$a;	b	createPiece
		p	0	structureManager	structureManager
		p	1	lastPiece	lastPiece
		p	2	relativePosition	relativePosition
		p	3	template	template
		p	4	rotation	rotation
		p	5	ignoreAir	ignoreAir
	m	(Ljava/util/List;Lcle$a;)Lcle$a;	b	addPiece
		p	0	pieces	pieces
		p	1	piece	piece
c	cle$3	net/minecraft/structure/EndCityGenerator$3
	f	Z	a	shipGenerated
c	cle$a	net/minecraft/structure/EndCityGenerator$Piece
	f	Ljava/lang/String;	d	template
	f	Lbtu;	e	rotation
	f	Z	f	ignoreAir
	m	(Lcmo;Ljava/lang/String;Lfk;Lbtu;Z)V	<init>	<init>
		p	1	manager	manager
		p	2	template	template
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	ignoreAir	ignoreAir
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcmo;)V	a	initializeStructureData
		p	1	manager	manager
c	cle$b	net/minecraft/structure/EndCityGenerator$Part
	m	()V	a	init
	m	(Lcmo;ILcle$a;Lfk;Ljava/util/List;Ljava/util/Random;)Z	a	create
		p	1	manager	manager
		p	2	depth	depth
		p	3	root	root
		p	4	pos	pos
		p	5	pieces	pieces
		p	6	random	random
c	clf	net/minecraft/structure/IglooGenerator
	f	Lsm;	a	TOP_TEMPLATE
	f	Lsm;	b	MIDDLE_TEMPLATE
	f	Lsm;	c	BOTTOM_TEMPLATE
	m	(Lcmo;Lfk;Lbtu;Ljava/util/List;Ljava/util/Random;Lcgv;)V	a	addPieces
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
		p	5	defaultConfig	defaultConfig
c	clf$a	net/minecraft/structure/IglooGenerator$Piece
	f	Lsm;	d	template
	f	Lbtu;	e	rotation
	m	(Lcmo;Lsm;Lfk;Lbtu;I)V	<init>	<init>
		p	1	manager	manager
		p	2	identifier	identifier
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	yOffset	yOffset
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcmo;)V	a	initializeStructureData
		p	1	manager	manager
c	clg	net/minecraft/structure/JungleTempleGenerator
	f	Z	e	placedMainChest
	f	Z	f	placedHiddenChest
	f	Z	g	placedTrap1
	f	Z	h	placedTrap2
	f	Lclg$a;	i	COBBLESTONE_RANDOMIZER
	m	(Ljava/util/Random;II)V	<init>	<init>
		p	1	random	random
		p	2	x	x
		p	3	z	z
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
c	clg$a	net/minecraft/structure/JungleTempleGenerator$CobblestoneRandomizer
c	clh	net/minecraft/world/FeatureUpdater
	f	Ljava/util/Map;	a	OLD_TO_NEW
	f	Ljava/util/Map;	b	ANCIENT_TO_OLD
	f	Z	c	needsUpdate
	f	Ljava/util/Map;	d	featureIdToChunkTag
	f	Ljava/util/Map;	e	updateStates
	m	(Ljt;)Ljt;	a	getUpdatedReferences
	m	(Lcrl;)V	a	init
	m	(Lcbi;Lcrl;)Lclh;	a	create
	m	(Ljt;Lbjh;)Ljt;	a	getUpdatedStarts
	m	(II)Z	a	needsUpdate
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(J)V	a	markResolved
	m	(IILjava/lang/String;)Z	a	needsUpdate
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	id	id
c	cli	net/minecraft/structure/MineshaftGenerator
	m	(Ljava/util/List;Ljava/util/Random;IIILfp;ILcel$b;)Lcli$c;	a	method_14712
		p	1	random	random
	m	(Lclu;Ljava/util/List;Ljava/util/Random;IIILfp;I)Lcli$c;	b	method_14711
		p	2	random	random
c	cli$a	net/minecraft/structure/MineshaftGenerator$MineshaftCorridor
	f	Z	b	hasRails
	f	Z	c	hasCobwebs
	f	Z	d	hasSpawner
	f	I	e	length
c	cli$b	net/minecraft/structure/MineshaftGenerator$MineshaftCrossing
	f	Lfp;	b	direction
	f	Z	c	twoFloors
	m	(Ljava/util/List;Ljava/util/Random;IIILfp;)Lclb;	a	method_14717
		p	5	facing	facing
c	cli$c	net/minecraft/structure/MineshaftGenerator$MineshaftPart
	f	Lcel$b;	a	mineshaftType
c	cli$d	net/minecraft/structure/MineshaftGenerator$MineshaftRoom
	f	Ljava/util/List;	b	entrances
	m	(ILjava/util/Random;IILcel$b;)V	<init>	<init>
		p	2	random	random
c	cli$e	net/minecraft/structure/MineshaftGenerator$MineshaftStairs
	m	(Ljava/util/List;Ljava/util/Random;IIILfp;)Lclb;	a	method_14720
		p	1	random	random
c	clj	net/minecraft/structure/NetherFortressGenerator
	m	(Lclj$class_3404;Ljava/util/List;Ljava/util/Random;IIILfp;I)Lclj$m;	b	generatePiece
c	clj$a	net/minecraft/structure/NetherFortressGenerator$BridgeCrossing
	m	(Ljava/util/Random;II)V	<init>	<init>
		p	1	random	random
		p	2	x	x
		p	3	z	z
c	clj$b	net/minecraft/structure/NetherFortressGenerator$BridgeEnd
	f	I	a	seed
c	clj$c	net/minecraft/structure/NetherFortressGenerator$Bridge
c	clj$d	net/minecraft/structure/NetherFortressGenerator$CorridorStairs
c	clj$e	net/minecraft/structure/NetherFortressGenerator$CorridorBalcony
c	clj$f	net/minecraft/structure/NetherFortressGenerator$CorridorExit
c	clj$g	net/minecraft/structure/NetherFortressGenerator$CorridorCrossing
c	clj$h	net/minecraft/structure/NetherFortressGenerator$CorridorLeftTurn
	f	Z	a	containsChest
c	clj$i	net/minecraft/structure/NetherFortressGenerator$SmallCorridor
c	clj$j	net/minecraft/structure/NetherFortressGenerator$CorridorRightTurn
	f	Z	a	containsChest
c	clj$k	net/minecraft/structure/NetherFortressGenerator$CorridorNetherWartsRoom
c	clj$l	net/minecraft/structure/NetherFortressGenerator$BridgePlatform
	f	Z	a	hasBlazeSpawner
c	clj$m	net/minecraft/structure/NetherFortressGenerator$Piece
c	clj$o	net/minecraft/structure/NetherFortressGenerator$BridgeSmallCrossing
c	clj$p	net/minecraft/structure/NetherFortressGenerator$BridgeStairs
c	clj$q	net/minecraft/structure/NetherFortressGenerator$Start
	f	Ljava/util/List;	b	bridgePieces
	f	Ljava/util/List;	c	corridorPieces
c	clk	net/minecraft/structure/OceanMonumentGenerator
c	clk$h	net/minecraft/structure/OceanMonumentGenerator$Base
c	clk$j	net/minecraft/structure/OceanMonumentGenerator$CoreRoom
c	clk$k	net/minecraft/structure/OceanMonumentGenerator$DoubleXRoom
c	clk$l	net/minecraft/structure/OceanMonumentGenerator$DoubleXYRoom
c	clk$m	net/minecraft/structure/OceanMonumentGenerator$DoubleYRoom
c	clk$n	net/minecraft/structure/OceanMonumentGenerator$DoubleYZRoom
c	clk$o	net/minecraft/structure/OceanMonumentGenerator$DoubleZRoom
c	clk$p	net/minecraft/structure/OceanMonumentGenerator$Entry
c	clk$q	net/minecraft/structure/OceanMonumentGenerator$Penthouse
c	clk$r	net/minecraft/structure/OceanMonumentGenerator$Piece
	f	Lbyj;	a	PRISMARINE
	f	Lbyj;	b	PRISMARINE_BRICKS
	f	Lbyj;	c	DARK_PRISMARINE
	f	Lbyj;	e	SEA_LANTERN
	f	Lbyj;	f	WATER
	f	Ljava/util/Set;	g	ICE_BLOCKS
	m	(Lbjx;Lclb;IIIIII)V	a	setAirAndWater
		p	1	world	world
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	width	width
		p	7	height	height
		p	8	depth	depth
c	clk$s	net/minecraft/structure/OceanMonumentGenerator$SimpleRoom
c	clk$t	net/minecraft/structure/OceanMonumentGenerator$SimpleRoomTop
c	clk$u	net/minecraft/structure/OceanMonumentGenerator$WingRoom
c	cll	net/minecraft/world/gen/feature/OceanRuinFeature
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	configFactory	configFactory
c	cll$a	net/minecraft/world/gen/feature/OceanRuinFeature$Start
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	cll$b	net/minecraft/world/gen/feature/OceanRuinFeature$BiomeType
	f	Ljava/util/Map;	c	nameMap
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;)Lcll$b;	a	byName
		p	0	name	name
	m	()Ljava/lang/String;	a	getName
c	clm	net/minecraft/structure/OceanRuinGenerator
	f	[Lsm;	a	WARM_RUINS
	f	[Lsm;	b	BRICK_RUINS
	f	[Lsm;	c	CRACKED_RUINS
	f	[Lsm;	d	MOSSY_RUINS
	f	[Lsm;	e	BIG_BRICK_RUINS
	f	[Lsm;	f	BIG_MOSSY_RUINS
	f	[Lsm;	g	BIG_CRACKED_RUINS
	f	[Lsm;	h	BIG_WARM_RUINS
	m	(Lcmo;Lfk;Lbtu;Ljava/util/List;Ljava/util/Random;Lcgw;)V	a	addPieces
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
		p	5	config	config
	m	(Lcmo;Ljava/util/Random;Lbtu;Lfk;Lcgw;Ljava/util/List;)V	a	method_14825
		p	0	manager	manager
		p	1	random	random
		p	2	rotation	rotation
		p	3	pos	pos
		p	4	config	config
		p	5	pieces	pieces
	m	(Ljava/util/Random;II)Ljava/util/List;	a	getRoomPositions
		p	0	random	random
		p	1	x	x
		p	2	z	z
	m	(Lcmo;Lfk;Lbtu;Ljava/util/List;Ljava/util/Random;Lcgw;ZF)V	a	method_14822
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
		p	5	config	config
		p	6	large	large
		p	7	integrity	integrity
	m	(Ljava/util/Random;)Lsm;	a	getRandomWarmRuin
		p	0	random	random
	m	(Ljava/util/Random;)Lsm;	b	getRandomBigWarmRuin
		p	0	random	random
c	clm$a	net/minecraft/structure/OceanRuinGenerator$Piece
	f	Lcll$b;	d	biomeType
	f	F	e	integrity
	f	Lsm;	f	template
	f	Lbtu;	g	rotation
	f	Z	h	large
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcmo;Lsm;Lfk;Lbtu;FLcll$b;Z)V	<init>	<init>
		p	1	structureManager	structureManager
		p	2	template	template
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	integrity	integrity
		p	6	biomeType	biomeType
		p	7	large	large
	m	(Lcmo;)V	a	initialize
		p	1	structureManager	structureManager
c	cln	net/minecraft/structure/PillagerOutpostGenerator
	m	(Lcaa;Lcmo;Lfk;Ljava/util/List;Lccf;)V	a	addPieces
		p	0	chunkGenerator	chunkGenerator
		p	1	structureManager	structureManager
		p	2	pos	pos
		p	3	pieces	pieces
		p	4	random	random
c	cln$a	net/minecraft/structure/PillagerOutpostGenerator$Piece
	m	(Lcmo;Lcik;Lfk;ILbtu;Lclb;)V	<init>	<init>
		p	1	manager	manager
		p	2	element	element
		p	3	pos	pos
		p	4	groundLevelDelta	groundLevelDelta
		p	5	rotation	rotation
		p	6	boundingBox	boundingBox
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
c	clo	net/minecraft/structure/PoolStructurePiece
	f	Lcik;	a	poolElement
	f	Lfk;	b	pos
	f	Lbtu;	c	rotation
	f	I	d	groundLevelDelta
	f	Ljava/util/List;	e	junctions
	f	Lcmo;	f	structureManager
	m	(Lcmo;Ljt;Lcfm;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
		p	3	type	type
	m	(Lcfm;Lcmo;Lcik;Lfk;ILbtu;Lclb;)V	<init>	<init>
		p	1	type	type
		p	2	manager	manager
		p	3	poolElement	poolElement
		p	4	pos	pos
		p	5	groundLevelDelta	groundLevelDelta
		p	6	rotation	rotation
		p	7	boundingBox	boundingBox
	m	(Lcig;)V	a	addJunction
		p	1	junction	junction
	m	()Lcik;	b	getPoolElement
	m	()Lfk;	c	getPos
	m	()I	d	getGroundLevelDelta
	m	()Ljava/util/List;	e	getJunctions
c	clp	net/minecraft/structure/StructurePieceWithDimensions
	f	I	a	width
	f	I	b	height
	f	I	c	depth
	f	I	d	hPos
	m	(Lcfm;Ljava/util/Random;IIIIII)V	<init>	<init>
		p	1	type	type
		p	2	random	random
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	width	width
		p	7	height	height
		p	8	depth	depth
	m	(Lbjx;Lclb;I)Z	a	method_14839
		p	1	world	world
		p	2	boundingBox	boundingBox
c	clq	net/minecraft/structure/ShipwreckGenerator
	f	[Lsm;	b	BEACHED_TEMPLATES
	f	[Lsm;	c	REGULAR_TEMPLATES
	m	(Lcmo;Lfk;Lbtu;Ljava/util/List;Ljava/util/Random;Lchf;)V	a	addParts
		p	0	structureManager	structureManager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	children	children
		p	4	random	random
		p	5	config	config
c	clq$a	net/minecraft/structure/ShipwreckGenerator$Piece
	f	Lbtu;	d	rotation
	f	Lsm;	e	template
	f	Z	f	grounded
	m	(Lcmo;Lsm;Lfk;Lbtu;Z)V	<init>	<init>
		p	1	manager	manager
		p	2	identifier	identifier
		p	3	pos	pos
		p	4	rotation	rotation
		p	5	grounded	grounded
	m	(Lcmo;Ljt;)V	<init>	<init>
		p	1	manager	manager
		p	2	tag	tag
	m	(Lcmo;)V	a	initializeStructureData
		p	1	manager	manager
c	clr	net/minecraft/structure/StrongholdGenerator
c	clr$a	net/minecraft/structure/StrongholdGenerator$ChestCorridor
	f	Z	a	chestGenerated
c	clr$b	net/minecraft/structure/StrongholdGenerator$SmallCorridor
	f	I	a	length
c	clr$c	net/minecraft/structure/StrongholdGenerator$FiveWayCrossing
	f	Z	a	lowerLeftExists
	f	Z	b	upperLeftExists
	f	Z	c	lowerRightExists
	f	Z	e	upperRightExists
c	clr$d	net/minecraft/structure/StrongholdGenerator$LeftTurn
c	clr$e	net/minecraft/structure/StrongholdGenerator$Library
	f	Z	a	tall
c	clr$g	net/minecraft/structure/StrongholdGenerator$PortalRoom
	f	Z	a	spawnerPlaced
c	clr$h	net/minecraft/structure/StrongholdGenerator$PrisonHall
c	clr$i	net/minecraft/structure/StrongholdGenerator$RightTurn
c	clr$j	net/minecraft/structure/StrongholdGenerator$SquareRoom
	f	I	a	roomType
c	clr$k	net/minecraft/structure/StrongholdGenerator$StoneBrickRandomizer
c	clr$l	net/minecraft/structure/StrongholdGenerator$SpiralStaircase
	f	Z	a	isStructureStart
c	clr$m	net/minecraft/structure/StrongholdGenerator$Start
c	clr$n	net/minecraft/structure/StrongholdGenerator$Corridor
	f	Z	a	leftExitExists
	f	Z	b	rightExitExixts
c	clr$o	net/minecraft/structure/StrongholdGenerator$Stairs
c	clr$p	net/minecraft/structure/StrongholdGenerator$Piece
	f	Lclr$p$a;	d	entryDoor
	m	(Ljava/util/Random;)Lclr$p$a;	a	getRandomEntrance
		p	1	random	random
	m	(Lbjx;Ljava/util/Random;Lclb;Lclr$p$a;III)V	a	generateEntrance
		p	1	world	world
		p	2	random	random
		p	3	boundingBox	boundingBox
		p	4	type	type
		p	5	x	x
		p	6	y	y
		p	7	z	z
c	clr$p$a	net/minecraft/structure/StrongholdGenerator$Piece$EntranceType
c	cls	net/minecraft/structure/StructureFeatures
	f	Lorg/apache/logging/log4j/Logger;	p	LOGGER
	m	(Ljava/lang/String;Lcfl;)Lcfl;	a	register
		p	0	name	name
		p	1	feature	feature
	m	(Lcaa;Lcmo;Ljt;)Lclv;	a	readStructureStart
		p	0	chunkGenerator	chunkGenerator
		p	1	structureManager	structureManager
	m	()V	a	initialize
c	clt	net/minecraft/world/ChunkUpdateState
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	a	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	b	remaining
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(J)V	a	add
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAll
	m	(J)Z	b	contains
	m	(J)Z	c	isRemaining
	m	(J)V	d	markResolved
c	clu	net/minecraft/structure/StructurePiece
	f	Lfp;	a	facing
	f	Lbsu;	b	mirror
	f	Lbtu;	c	rotation
	f	Lcfm;	d	type
	f	Ljava/util/Set;	e	BLOCKS_NEEDING_POST_PROCESSING
	f	Lbyj;	m	AIR
	f	Lclb;	n	boundingBox
	m	(Lcfm;I)V	<init>	<init>
		p	1	type	type
	m	(Lcfm;Ljt;)V	<init>	<init>
		p	1	type	type
		p	2	tag	tag
	m	(Lbjx;Lbyj;IIILclb;)V	a	addBlock
		p	1	world	world
		p	2	block	block
		p	3	x	x
		p	4	y	y
		p	5	z	z
	m	(Lbjx;Lclb;Ljava/util/Random;FIIILbyj;)V	a	addBlockWithRandomThreshold
		p	1	world	world
		p	2	bounds	bounds
		p	3	random	random
		p	4	threshold	threshold
		p	5	x	x
		p	6	y	y
		p	7	z	z
	m	(Lfp;)V	a	setOrientation
		p	1	orientation	orientation
	m	(II)I	a	applyXTransform
	m	(III)V	a	translate
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbjx;Lclb;Ljava/util/Random;IIILfp;Lsm;)Z	a	addDispenser
		p	1	world	world
		p	2	boundingBox	boundingBox
		p	3	random	random
		p	4	x	x
		p	5	y	y
		p	6	z	z
		p	7	facing	facing
		p	8	lootTbaleId	lootTbaleId
	m	(Lbjz;IIILclb;)Z	a	isUnderSeaLevel
		p	2	x	x
		p	3	z	z
		p	4	y	y
	m	(Lbjx;Lclb;IIIIIILbyj;Z)V	a	method_14919
		p	1	world	world
		p	2	bounds	bounds
		p	3	minX	minX
		p	4	minY	minY
		p	5	minZ	minZ
		p	6	maxX	maxX
		p	7	maxY	maxY
		p	8	maxZ	maxZ
		p	9	block	block
	m	(Lbjx;Lclb;Ljava/util/Random;FIIIIIILbyj;Lbyj;ZZ)V	a	fillWithOutlineUnderSealevel
		p	3	random	random
	m	(Lbjx;Lclb;IIIIIILbyj;Lbyj;Z)V	a	fillWithOutline
		p	1	world	world
		p	10	inside	inside
	m	(Lbjx;Lclb;Ljava/util/Random;IIILsm;)Z	a	addChest
		p	1	world	world
		p	2	boundingBox	boundingBox
		p	3	random	random
		p	4	x	x
		p	5	y	y
		p	6	z	z
		p	7	lootTableId	lootTableId
	m	(Lbjx;Lclb;Ljava/util/Random;Lfk;Lsm;Lbyj;)Z	a	addChest
		p	1	world	world
		p	2	boundingBox	boundingBox
		p	3	random	random
		p	4	pos	pos
		p	5	lootTableId	lootTableId
		p	6	block	block
	m	(Lbjg;IIILclb;)Lbyj;	a	getBlockAt
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lbjx;Lclb;IIIIIIZLjava/util/Random;Lclu$a;)V	a	fillWithOutline
		p	3	minX	minX
		p	4	minY	minY
		p	5	minZ	minZ
		p	6	maxX	maxX
		p	7	maxY	maxY
		p	8	maxZ	maxZ
		p	9	replaceBlocks	replaceBlocks
		p	10	random	random
	m	(Ljt;)V	a	toNbt
		p	1	tag	tag
	m	(Lbjx;Lcaa;Ljava/util/Random;Lclb;Lbjh;)Z	a	generate
		p	1	world	world
		p	2	generator	generator
		p	3	random	random
		p	4	box	box
		p	5	pos	pos
	m	()Lbtu;	ad_	getRotation
	m	(II)I	b	applyZTransform
	m	(Lbjx;Lclb;IIIIII)V	b	fill
		p	1	world	world
		p	2	bounds	bounds
		p	3	minX	minX
		p	4	minY	minY
		p	5	minZ	minZ
		p	6	maxX	maxX
		p	7	maxY	maxY
	m	(Lbjx;Lbyj;IIILclb;)V	b	method_14936
		p	1	world	world
		p	3	x	x
		p	4	y	y
		p	5	z	z
	m	(I)I	d	applyYTransform
	m	()Ljt;	f	getTag
	m	()Lclb;	g	getBoundingBox
	m	()Lfp;	i	getFacing
	m	()Lcfm;	k	getType
c	clu$a	net/minecraft/structure/StructurePiece$BlockRandomizer
	f	Lbyj;	a	block
	m	()Lbyj;	a	getBlock
	m	(Ljava/util/Random;IIIZ)V	a	setBlock
		p	1	random	random
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	placeBlock	placeBlock
c	clv	net/minecraft/structure/StructureStart
	f	Lclv;	a	DEFAULT
	f	Ljava/util/List;	b	children
	f	Lclb;	c	boundingBox
	f	Lccf;	d	random
	f	Lcfl;	e	feature
	f	I	f	chunkX
	f	I	g	chunkZ
	f	I	h	references
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	1	feature	feature
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
		p	4	box	box
		p	5	references	references
	m	()Lfk;	a	getPos
	m	(Lcaa;Lcmo;IILbkt;)V	a	initialize
		p	1	chunkGenerator	chunkGenerator
		p	2	structureManager	structureManager
		p	3	x	x
		p	4	z	z
		p	5	biome	biome
	m	(II)Ljt;	a	toTag
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(Lbjx;Lcaa;Ljava/util/Random;Lclb;Lbjh;)V	a	generateStructure
		p	1	world	world
	m	()V	b	setBoundingBoxFromChildren
	m	()Lclb;	c	getBoundingBox
	m	()Ljava/util/List;	d	getChildren
	m	()Z	e	hasChildren
	m	()I	f	getChunkX
	m	()I	g	getChunkZ
	m	()Z	h	isInExistingChunk
	m	()V	i	incrementReferences
	m	()I	j	getReferences
	m	()I	k	getReferenceCountToBeInExistingChunk
	m	()Lcfl;	l	getFeature
c	clv$1	net/minecraft/structure/StructureStart$1
	m	(Lcfl;IILclb;IJ)V	<init>	<init>
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
c	clw	net/minecraft/structure/SwampHutGenerator
	f	Z	e	hasWitch
	f	Z	f	hasCat
c	clx	net/minecraft/structure/SimpleStructurePiece
	f	Lcms;	a	structure
	f	Lcmp;	b	placementData
	f	Lfk;	c	pos
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Ljava/lang/String;Lfk;Lbjx;Ljava/util/Random;Lclb;)V	a	handleMetadata
		p	1	metadata	metadata
		p	2	pos	pos
		p	3	world	world
		p	4	random	random
		p	5	boundingBox	boundingBox
	m	(Lcms;Lfk;Lcmp;)V	a	setStructureData
		p	1	structure	structure
		p	2	pos	pos
		p	3	placementData	placementData
c	cly	net/minecraft/structure/WoodlandMansionGenerator
	m	(Lcmo;Lfk;Lbtu;Ljava/util/List;Ljava/util/Random;)V	a	addPieces
		p	0	manager	manager
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
		p	4	random	random
c	cly$a	net/minecraft/structure/WoodlandMansionGenerator$FirstFloorRoomPool
c	cly$b	net/minecraft/structure/WoodlandMansionGenerator$RoomPool
	m	(Ljava/util/Random;Z)Ljava/lang/String;	a	getMediumFunctionalRoom
		p	1	random	random
		p	2	staircase	staircase
	m	(Ljava/util/Random;)Ljava/lang/String;	a	getSmallRoom
		p	1	random	random
	m	(Ljava/util/Random;)Ljava/lang/String;	b	getSmallSecretRoom
		p	1	random	random
	m	(Ljava/util/Random;Z)Ljava/lang/String;	b	getMediumGenericRoom
		p	1	random	random
		p	2	staircase	staircase
	m	(Ljava/util/Random;)Ljava/lang/String;	c	getMediumSecretRoom
		p	1	random	random
	m	(Ljava/util/Random;)Ljava/lang/String;	d	getBigRoom
		p	1	random	random
	m	(Ljava/util/Random;)Ljava/lang/String;	e	getBigSecretRoom
		p	1	random	random
c	cly$c	net/minecraft/structure/WoodlandMansionGenerator$MansionParameters
	f	Ljava/util/Random;	a	random
c	cly$d	net/minecraft/structure/WoodlandMansionGenerator$LayoutGenerator
	f	Lcmo;	a	manager
	f	Ljava/util/Random;	b	random
	m	(Lcmo;Ljava/util/Random;)V	<init>	<init>
		p	1	manager	manager
		p	2	random	random
	m	(Lfk;Lbtu;Ljava/util/List;Lcly$c;)V	a	generate
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	pieces	pieces
	m	(Ljava/util/List;Lfk;Lbtu;Lfp;Lfp;Lcly$b;Z)V	a	addMediumRoom
		p	7	staircase	staircase
	m	(Ljava/util/List;Lcly$e;)V	a	addEntrance
	m	(Ljava/util/List;Lfk;Lbtu;Lcly$b;)V	a	addBigSecretRoom
	m	(Ljava/util/List;Lfk;Lbtu;Lfp;Lcly$b;)V	a	addSmallRoom
	m	(Ljava/util/List;Lcly$e;Lcly$class_3478;Lfp;IIII)V	a	addRoof
	m	(Ljava/util/List;Lfk;Lbtu;Lfp;Lfp;Lcly$b;)V	a	addBigRoom
c	cly$e	net/minecraft/structure/WoodlandMansionGenerator$GenerationPiece
	f	Lbtu;	a	rotation
	f	Lfk;	b	position
	f	Ljava/lang/String;	c	template
c	cly$f	net/minecraft/structure/WoodlandMansionGenerator$SecondFloorRoomPool
c	cly$h	net/minecraft/structure/WoodlandMansionGenerator$ThirdFloorRoomPool
c	cly$i	net/minecraft/structure/WoodlandMansionGenerator$Piece
	f	Ljava/lang/String;	d	template
	f	Lbtu;	e	rotation
	f	Lbsu;	f	mirror
c	cm	net/minecraft/command/TranslatableBuiltInExceptions
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_LOW
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	method_18479
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	method_9184
		p	0	message	message
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	method_9188
		p	0	symbol	symbol
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	method_18480
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	method_9179
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	method_9186
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	method_9182
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	method_9190
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	method_18481
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	method_9178
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	method_9180
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	method_9181
		p	0	value	value
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	method_9185
		p	0	value	value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	method_9183
		p	0	found	found
		p	1	max	max
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	method_9187
		p	0	found	found
		p	1	min	min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	method_9191
		p	0	character	character
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	method_9189
		p	0	expected	expected
c	cma	net/minecraft/structure/rule/AlwaysTrueRuleTest
	f	Lcma;	a	INSTANCE
c	cmb	net/minecraft/structure/processor/BlockIgnoreStructureProcessor
	f	Lcmb;	a	IGNORE_STRUCTURE_BLOCKS
	f	Lcmb;	b	IGNORE_AIR
	f	Lcmb;	c	IGNORE_AIR_AND_STRUCTURE_BLOCKS
	f	Lcom/google/common/collect/ImmutableList;	d	blocks
c	cmc	net/minecraft/structure/rule/BlockMatchRuleTest
	f	Lbph;	a	block
	m	(Lbph;)V	<init>	<init>
		p	1	block	block
c	cmd	net/minecraft/structure/processor/BlockRotStructureProcessor
	f	F	a	integrity
	m	(F)V	<init>	<init>
		p	1	integrity	integrity
c	cme	net/minecraft/structure/rule/BlockStateMatchRuleTest
	f	Lbyj;	a	blockState
	m	(Lbyj;)V	<init>	<init>
		p	1	blockState	blockState
c	cmf	net/minecraft/structure/processor/GravityStructureProcessor
	f	Lcbv$a;	a	heightmap
	f	I	b	offset
	m	(Lcbv$a;I)V	<init>	<init>
		p	1	heightmap	heightmap
		p	2	offset	offset
c	cmg	net/minecraft/structure/processor/JigsawReplacementStructureProcessor
	f	Lcmg;	a	INSTANCE
c	cmh	net/minecraft/structure/processor/NopStructureProcessor
	f	Lcmh;	a	INSTANCE
c	cmi	net/minecraft/structure/processor/StructureProcessorRule
	f	Lcmm;	a	inputPredicate
	f	Lcmm;	b	locationPredicate
	f	Lbyj;	c	outputState
	f	Ljt;	d	tag
	m	(Lbyj;Lbyj;Ljava/util/Random;)Z	a	test
		p	1	input	input
		p	2	location	location
		p	3	random	random
	m	()Lbyj;	a	getOutputState
	m	()Ljt;	b	getTag
c	cmj	net/minecraft/structure/rule/RandomBlockMatchRuleTest
	f	Lbph;	a	block
	f	F	b	probability
	m	(Lbph;F)V	<init>	<init>
		p	1	block	block
		p	2	probability	probability
c	cmk	net/minecraft/structure/rule/RandomBlockStateMatchRuleTest
	f	Lbyj;	a	blockState
	f	F	b	probability
	m	(Lbyj;F)V	<init>	<init>
		p	1	blockState	blockState
		p	2	probability	probability
c	cml	net/minecraft/structure/processor/RuleStructureProcessor
	f	Lcom/google/common/collect/ImmutableList;	a	rules
c	cmm	net/minecraft/structure/rule/RuleTest
	c	Rule tests are used in structure generation to check if a block state matches some condition.
	m	()Lcmn;	a	getType
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	1	ops	ops
	m	(Lbyj;Ljava/util/Random;)Z	a	test
		p	1	state	state
		p	2	random	random
	m	(Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic;	b	serializeWithId
		p	1	ops	ops
c	cmn	net/minecraft/structure/rule/RuleTestType
	m	(Ljava/lang/String;Lcmn;)Lcmn;	a	register
		p	0	id	id
		p	1	test	test
c	cmo	net/minecraft/structure/StructureManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	structures
	f	Lcom/mojang/datafixers/DataFixer;	c	dataFixer
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Ljava/nio/file/Path;	e	generatedPath
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1	server	server
		p	2	worldDir	worldDir
		p	3	dataFixer	dataFixer
	m	(Ljt;)Lcms;	a	createStructure
		p	1	tag	tag
	m	(Lsm;Ljava/lang/String;)Ljava/nio/file/Path;	a	getStructurePath
		p	1	id	id
		p	2	extension	extension
	m	(Ljava/io/InputStream;)Lcms;	a	readStructure
		p	1	structureInputStream	structureInputStream
	m	(Lsm;)Lcms;	a	getStructureOrBlank
		p	1	id	id
	m	(Lsm;Ljava/lang/String;)Ljava/nio/file/Path;	b	getAndCheckStructurePath
		p	1	id	id
		p	2	extension	extension
	m	(Lsm;)Lcms;	b	getStructure
		p	1	identifier	identifier
	m	(Lsm;)Z	c	saveStructure
		p	1	id	id
	m	(Lsm;)V	d	unloadStructure
		p	1	id	id
	m	(Lsm;)Lcms;	e	loadStructureFromResource
		p	1	id	id
	m	(Lsm;)Lcms;	f	loadStructureFromFile
		p	1	id	id
c	cmp	net/minecraft/structure/StructurePlacementData
	f	Lbsu;	a	mirror
	f	Lbtu;	b	rotation
	f	Lfk;	c	position
	f	Z	d	ignoreEntities
	f	Lbjh;	e	chunkPosition
	f	Lclb;	f	boundingBox
	f	Z	g	placeFluids
	f	Ljava/util/Random;	h	random
	f	Ljava/util/List;	j	processors
	m	(Lcmq;)Lcmp;	a	addProcessor
		p	1	processor	processor
	m	(Lbjh;)Lcmp;	a	setChunkPosition
		p	1	chunkPosition	chunkPosition
	m	(Lbtu;)Lcmp;	a	setRotation
	m	()Lcmp;	a	copy
	m	(Z)Lcmp;	a	setIgnoreEntities
	m	(Lclb;)Lcmp;	a	setBoundingBox
		p	1	boundingBox	boundingBox
	m	(Ljava/util/Random;)Lcmp;	a	setRandom
		p	1	random	random
	m	(Lfk;)Lcmp;	a	setPosition
		p	1	position	position
	m	(Lbsu;)Lcmp;	a	setMirrored
	m	()Lcmp;	b	clearProcessors
	m	(Lcmq;)Lcmp;	b	removeProcessor
		p	1	processor	processor
	m	(Lfk;)Ljava/util/Random;	b	getRandom
		p	1	pos	pos
	m	()Lbsu;	c	getMirror
	m	()Lbtu;	d	getRotation
	m	()Lfk;	e	getPosition
	m	()Z	g	shouldIgnoreEntities
	m	()Ljava/util/List;	j	getProcessors
	m	()Z	l	shouldPlaceFluids
c	cmq	net/minecraft/structure/processor/StructureProcessor
	m	(Lbjz;Lfk;Lcms$b;Lcms$b;Lcmp;)Lcms$b;	a	process
		p	2	pos	pos
		p	5	placementData	placementData
	m	()Lcmr;	a	getType
c	cmr	net/minecraft/structure/processor/StructureProcessorType
	m	(Ljava/lang/String;Lcmr;)Lcmr;	a	register
		p	0	id	id
		p	1	processor	processor
c	cms	net/minecraft/structure/Structure
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/List;	b	entities
	f	Lfk;	c	size
	f	Ljava/lang/String;	d	author
	m	([I)Ljz;	a	createIntListTag
	m	()Lfk;	a	getSize
	m	(Lbjx;Lfk;Lcmp;Ljava/util/List;)Ljava/util/List;	a	process
		p	0	world	world
		p	1	pos	pos
		p	2	placementData	placementData
		p	3	blockInfos	blockInfos
	m	(Ljt;)Ljt;	a	toTag
		p	1	tag	tag
	m	(Lbjx;Lfk;Lcmp;)V	a	place
	m	([D)Ljz;	a	createDoubleListTag
	m	(Ljava/lang/String;)V	a	setAuthor
		p	1	name	name
	m	()Ljava/lang/String;	b	getAuthor
	m	(Ljt;)V	b	fromTag
		p	1	tag	tag
	m	(Lcmp;Lfk;)Lclb;	b	calculateBoundingBox
		p	1	placementData	placementData
		p	2	pos	pos
c	cms$b	net/minecraft/structure/Structure$StructureBlockInfo
	f	Lfk;	a	pos
	f	Lbyj;	b	state
	f	Ljt;	c	tag
	m	(Lfk;Lbyj;Ljt;)V	<init>	<init>
		p	1	pos	pos
		p	2	state	state
		p	3	tag	tag
c	cms$c	net/minecraft/structure/Structure$StructureEntityInfo
	f	Lcvl;	a	pos
	f	Lfk;	b	blockPos
	f	Ljt;	c	tag
	m	(Lcvl;Lfk;Ljt;)V	<init>	<init>
		p	1	pos	pos
		p	2	blockPos	blockPos
		p	3	tag	tag
c	cmt	net/minecraft/structure/rule/TagMatchRuleTest
	f	Laaz;	a	tag
	m	(Laaz;)V	<init>	<init>
		p	1	tag	tag
c	cmv	net/minecraft/world/gen/surfacebuilder/BadlandsSurfaceBuilder
	f	Lbyj;	S	WHITE_TERACOTTA
	f	Lbyj;	T	ORANGE_TERRACOTTA
	f	Lbyj;	U	TERACOTTA
	f	Lbyj;	V	YELLOW_TERACOTTA
	f	Lbyj;	W	BROWN_TERACOTTA
	f	Lbyj;	X	RED_TERACOTTA
	f	Lbyj;	Y	LIGHT_GRAY_TERACOTTA
	f	[Lbyj;	a	layerBlocks
	f	J	b	seed
	f	Lcno;	c	heightCutoffNoise
	f	Lcno;	d	heightNoise
	f	Lcno;	e	layerNoise
	m	(III)Lbyj;	a	calculateLayerBlockState
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
	m	(J)V	b	initLayerBlocks
		p	1	seed	seed
c	cmw	net/minecraft/world/gen/surfacebuilder/ConfiguredSurfaceBuilder
	f	Lcng;	a	surfaceBuilder
	f	Lcni;	b	config
	m	(Lcng;Lcni;)V	<init>	<init>
		p	1	surfaceBuilder	surfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJ)V	a	generate
		p	1	random	random
		p	2	chunk	chunk
		p	3	biome	biome
		p	9	defaultBlock	defaultBlock
		p	10	defaultFluid	defaultFluid
		p	12	seed	seed
	m	()Lcni;	a	getConfig
	m	(J)V	a	initSeed
		p	1	seed	seed
c	cmx	net/minecraft/world/gen/surfacebuilder/DefaultSurfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;Lbyj;Lbyj;Lbyj;I)V	a	generate
		p	1	random	random
		p	2	chunk	chunk
		p	3	biome	biome
		p	4	x	x
		p	5	z	z
		p	6	height	height
		p	7	noise	noise
		p	9	defaultBlock	defaultBlock
		p	10	fluidBlock	fluidBlock
		p	11	topBlock	topBlock
		p	12	underBlock	underBlock
		p	13	underwaterBlock	underwaterBlock
		p	14	seaLevel	seaLevel
c	cmy	net/minecraft/world/gen/surfacebuilder/ErodedBadlandsSurfaceBuilder
	f	Lbyj;	S	WHITE_TERRACOTTA
	f	Lbyj;	T	ORANGE_TERRACOTTA
	f	Lbyj;	U	TERACOTTA
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	generate	generate
c	cmz	net/minecraft/world/gen/surfacebuilder/FrozenOceanSurfaceBuilder
	f	J	U	seed
	f	Lbyj;	a	PACKED_ICE
	f	Lbyj;	b	SNOW_BLOCK
	f	Lbyj;	c	AIR
	f	Lbyj;	d	GRAVEL
	f	Lbyj;	e	ICE
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cn	net/minecraft/server/function/CommandFunction
	f	[Lcn$c;	a	elements
	f	Lsm;	b	id
	m	(Lsm;[Lcn$c;)V	<init>	<init>
		p	1	id	id
		p	2	elements	elements
	m	(Lsm;Lsy;Ljava/util/List;)Lcn;	a	create
		p	0	id	id
		p	1	commandFunctionManager	commandFunctionManager
		p	2	fileLines	fileLines
	m	()Lsm;	a	getId
	m	()[Lcn$c;	b	getElements
c	cn$a	net/minecraft/server/function/CommandFunction$LazyContainer
	f	Lcn$a;	a	EMPTY
	f	Lsm;	b	id
	f	Z	c	initialized
	f	Ljava/util/Optional;	d	function
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	(Lcn;)V	<init>	<init>
		p	1	function	function
	m	(Lsy;)Ljava/util/Optional;	a	get
		p	1	manager	manager
	m	()Lsm;	a	getId
c	cn$b	net/minecraft/server/function/CommandFunction$CommandElement
	f	Lcom/mojang/brigadier/ParseResults;	a	parsed
	m	(Lcom/mojang/brigadier/ParseResults;)V	<init>	<init>
		p	1	parsed	parsed
c	cn$c	net/minecraft/server/function/CommandFunction$Element
	m	(Lsy;Lcq;Ljava/util/ArrayDeque;I)V	a	execute
		p	1	manager	manager
		p	2	source	source
		p	3	stack	stack
		p	4	maxChainLength	maxChainLength
c	cn$d	net/minecraft/server/function/CommandFunction$FunctionElement
	f	Lcn$a;	a	function
c	cna	net/minecraft/world/gen/surfacebuilder/GiantTreeTaigaSurfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cnb	net/minecraft/world/gen/surfacebuilder/GravellyMountainSurfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cnc	net/minecraft/world/gen/surfacebuilder/MountainSurfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cnd	net/minecraft/world/gen/surfacebuilder/NetherSurfaceBuilder
	f	Lbyj;	S	GLOWSTONE
	f	J	a	seed
	f	Lcnn;	b	noise
	f	Lbyj;	c	CAVE_AIR
	f	Lbyj;	d	NETHERRACK
	f	Lbyj;	e	GRAVEL
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cne	net/minecraft/world/gen/surfacebuilder/NopeSurfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cnf	net/minecraft/world/gen/surfacebuilder/ShatteredSavannaSurfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cng	net/minecraft/world/gen/surfacebuilder/SurfaceBuilder
	f	Lcnh;	A	GRASS_SAND_UNDERWATER_CONFIG
	f	Lcnh;	B	SAND_SAND_UNDERWATER_CONFIG
	f	Lcnh;	C	BADLANDS_CONFIG
	f	Lcnh;	D	MYCELIUM_CONFIG
	f	Lcnh;	E	NETHER_CONFIG
	f	Lcnh;	F	END_CONFIG
	f	Ljava/util/function/Function;	a	factory
	f	Lbyj;	f	AIR
	f	Lbyj;	g	DIRT
	f	Lbyj;	h	GRASS_BLOCK
	f	Lbyj;	i	PODZOL
	f	Lbyj;	j	GRAVEL
	f	Lbyj;	k	STONE
	f	Lbyj;	l	COARSE_DIRT
	f	Lbyj;	m	SAND
	f	Lbyj;	n	RED_SAND
	f	Lbyj;	o	WHITE_TERRACOTTA
	f	Lbyj;	p	MYCELIUM
	f	Lbyj;	q	NETHERRACK
	f	Lbyj;	r	END_STONE
	f	Lcnh;	s	AIR_CONFIG
	f	Lcnh;	t	PODZOL_CONFIG
	f	Lcnh;	u	GRAVEL_CONFIG
	f	Lcnh;	v	GRASS_CONFIG
	f	Lcnh;	w	DIRT_CONFIG
	f	Lcnh;	x	STONE_CONFIG
	f	Lcnh;	y	COARSE_DIRT_CONFIG
	f	Lcnh;	z	SAND_CONFIG
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcni;)V	a	generate
		p	1	random	random
		p	2	chunk	chunk
		p	3	biome	biome
		p	4	x	x
		p	5	z	z
		p	6	height	height
		p	7	noise	noise
		p	9	defaultBlock	defaultBlock
		p	10	defaultFluid	defaultFluid
		p	11	seaLevel	seaLevel
		p	12	seed	seed
		p	14	surfaceBlocks	surfaceBlocks
	m	(Ljava/lang/String;Lcng;)Lcng;	a	register
	m	(J)V	a	initSeed
		p	1	seed	seed
c	cnh	net/minecraft/world/gen/surfacebuilder/TernarySurfaceConfig
	f	Lbyj;	a	topMaterial
	f	Lbyj;	b	underMaterial
	f	Lbyj;	c	underwaterMaterial
	m	(Lbyj;Lbyj;Lbyj;)V	<init>	<init>
		p	1	topMaterial	topMaterial
		p	2	underMaterial	underMaterial
		p	3	underwaterMaterial	underwaterMaterial
	m	(Lcom/mojang/datafixers/Dynamic;)Lcnh;	a	deserialize
		p	0	dynamic	dynamic
	m	()Lbyj;	c	getUnderwaterMaterial
c	cni	net/minecraft/world/gen/surfacebuilder/SurfaceConfig
	m	()Lbyj;	a	getTopMaterial
	m	()Lbyj;	b	getUnderMaterial
c	cnj	net/minecraft/world/gen/surfacebuilder/SwampSurfaceBuilder
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	a	generate
c	cnk	net/minecraft/world/gen/surfacebuilder/WoodedBadlandsSurfaceBuilder
	f	Lbyj;	S	WHITE_TERRACOTTA
	f	Lbyj;	T	ORANGE_TERRACOTTA
	f	Lbyj;	U	TERRACOTTA
	m	(Ljava/util/Random;Lbzy;Lbkt;IIIDLbyj;Lbyj;IJLcnh;)V	generate	generate
c	cnm	net/minecraft/util/math/noise/PerlinNoiseSampler
	f	D	a	originX
	f	D	b	originY
	f	D	c	originZ
	f	[B	d	permutations
	m	(Ljava/util/Random;)V	<init>	<init>
		p	1	random	random
	m	(DDDDD)D	a	sample
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(IDDD)D	a	grad
		p	0	hash	hash
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(I)I	a	getGradient
		p	1	hash	hash
	m	(IIIDDDDDD)D	a	sample
		p	1	sectionX	sectionX
		p	2	sectionY	sectionY
		p	3	sectionZ	sectionZ
		p	4	localX	localX
		p	6	localY	localY
		p	8	localZ	localZ
		p	10	fadeLocalX	fadeLocalX
		p	12	fadeLocalY	fadeLocalY
		p	14	fadeLocalZ	fadeLocalZ
c	cnn	net/minecraft/util/math/noise/OctavePerlinNoiseSampler
	f	[Lcnm;	a	octaveSamplers
	m	(I)Lcnm;	a	getOctave
		p	1	octave	octave
	m	(D)D	a	maintainPrecision
	m	(DDDDDZ)D	a	sample
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(DDD)D	a	sample
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	cno	net/minecraft/util/math/noise/OctaveSimplexNoiseSampler
	f	[Lcnp;	a	octaveSamplers
	m	(DDZ)D	a	sample
		p	1	x	x
		p	3	y	y
c	cnp	net/minecraft/util/math/noise/SimplexNoiseSampler
	f	[[I	a	gradients
	f	D	b	originX
	f	D	c	originY
	f	D	d	originZ
	f	D	e	sqrt3
	f	D	f	SKEW_FACTOR_2D
	f	D	g	UNSKEW_FACTOR_2D
	f	[I	h	permutations
	m	(Ljava/util/Random;)V	<init>	<init>
		p	1	random	random
	m	([IDDD)D	a	dot
		p	0	gArr	gArr
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(IDDDD)D	a	grad
		p	1	hash	hash
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(I)I	a	getGradient
		p	1	hash	hash
	m	(DD)D	a	sample
		p	1	x	x
		p	3	y	y
c	cnq	net/minecraft/util/math/noise/NoiseSampler
	m	(DDDD)D	a	sample
		p	1	x	x
		p	3	y	y
c	cns	net/minecraft/world/chunk/light/ChunkBlockLightProvider
	f	[Lfp;	e	DIRECTIONS
	f	Lfk$a;	f	mutablePos
	m	(Lcan;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
	m	(J)I	d	getLightSourceLuminance
		p	1	blockPos	blockPos
c	cnt	net/minecraft/world/chunk/light/BlockLightStorage
	m	(Lcan;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
c	cnt$a	net/minecraft/world/chunk/light/BlockLightStorage$Data
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1	map	map
	m	()Lcnt$a;	a	copy
c	cnu	net/minecraft/world/chunk/ChunkToNibbleArrayMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	arrays
	f	[J	b	cachePositions
	f	[Lcaf;	c	cacheArrays
	f	Z	d	cacheEnabled
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1	arrays	arrays
	m	(J)V	a	replaceWithCopy
		p	1	pos	pos
	m	(JLcaf;)V	a	put
		p	1	pos	pos
		p	3	data	data
	m	()Lcnu;	b	copy
	m	(J)Z	b	containsKey
		p	1	chunkPos	chunkPos
	m	(J)Lcaf;	c	get
		p	1	chunkPos	chunkPos
	m	()V	c	clearCache
	m	()V	d	disableCache
	m	(J)Lcaf;	d	removeChunk
		p	1	chunkPos	chunkPos
c	cnv	net/minecraft/world/chunk/light/LevelPropagator
	f	I	a	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	b	pendingIdUpdatesByLevel
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	c	pendingUpdates
	f	I	d	minPendingLevel
	f	Z	e	hasPendingUpdates
	m	(III)V	<init>	<init>
		p	1	levelCount	levelCount
		p	2	expectedLevelSize	expectedLevelSize
		p	3	expectedTotalSize	expectedTotalSize
	m	(J)Z	a	isMarker
		p	1	id	id
	m	(JIIZ)V	a	removePendingUpdate
		p	1	id	id
		p	3	level	level
		p	4	levelCount	levelCount
		p	5	removeFully	removeFully
	m	(JII)V	a	addPendingUpdate
		p	1	id	id
		p	3	level	level
		p	4	targetLevel	targetLevel
	m	(JJI)I	a	recalculateLevel
		p	1	id	id
		p	3	excludedId	excludedId
		p	5	maxLevel	maxLevel
	m	(II)I	a	minLevel
		p	1	a	a
		p	2	b	b
	m	(JI)V	a	setLevel
		p	1	id	id
		p	3	level	level
	m	(JIZ)V	a	propagateLevel
		p	1	id	id
		p	3	level	level
		p	4	decrease	decrease
	m	(JJIZ)V	a	updateLevel
		p	1	sourceId	sourceId
		p	3	id	id
		p	5	level	level
		p	6	decrease	decrease
	m	(I)V	a	increaseMinPendingLevel
		p	1	maxLevel	maxLevel
	m	(JJIIIZ)V	a	updateLevel
		p	1	sourceId	sourceId
		p	3	id	id
		p	5	level	level
		p	6	currentLevel	currentLevel
		p	7	pendingLevel	pendingLevel
		p	8	decrease	decrease
	m	(JJI)I	b	getPropagatedLevel
		p	1	sourceId	sourceId
		p	3	targetId	targetId
		p	5	level	level
	m	(I)I	b	applyPendingUpdates
		p	1	maxSteps	maxSteps
	m	()Z	b	hasPendingUpdates
	m	(JJIZ)V	b	propagateLevel
		p	1	sourceId	sourceId
		p	3	targetId	targetId
		p	5	level	level
		p	6	decrease	decrease
	m	(J)I	c	getLevel
		p	1	id	id
	m	(J)V	e	removePendingUpdate
		p	1	id	id
	m	(J)V	f	resetLevel
		p	1	id	id
c	cnv$1	net/minecraft/world/chunk/light/LevelPropagator$1
	m	(I)V	rehash	rehash
		p	1	newN	newN
c	cnv$2	net/minecraft/world/chunk/light/LevelPropagator$2
	m	(I)V	rehash	rehash
		p	1	newN	newN
c	cnw	net/minecraft/world/chunk/ColumnChunkNibbleArray
c	cnx	net/minecraft/world/chunk/light/ChunkLightProvider
	f	Lcan;	a	chunkProvider
	f	Lbkf;	b	type
	f	Lcnz;	c	lightStorage
	f	Lfk$a;	d	reusableBlockPos
	f	[Lfp;	e	DIRECTIONS
	f	[J	g	cachedChunkPositions
	f	[Lbjg;	h	cachedChunks
	m	(Lcan;Lbkf;Lcnz;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
		p	2	type	type
		p	3	lightStorage	lightStorage
	m	(Lbjg;Lbyj;Lfk;Lbyj;Lfk;Lfp;I)I	a	getRealisticOpacity
		p	0	world	world
		p	1	state1	state1
		p	2	pos1	pos1
		p	3	state2	state2
		p	4	pos2	pos2
		p	5	direction	direction
		p	6	opacity2	opacity2
	m	(Lfk;I)V	a	addLightSource
		p	1	pos	pos
		p	2	level	level
	m	(Lbyj;JLfp;)Lcwf;	a	getOpaqueShape
		p	1	world	world
		p	2	pos	pos
		p	4	facing	facing
	m	()Z	a	hasUpdates
	m	(Lbjh;Z)V	a	setLightEnabled
		p	1	pos	pos
		p	2	lightEnabled	lightEnabled
	m	(JLorg/apache/commons/lang3/mutable/MutableInt;)Lbyj;	a	getStateForLighting
		p	1	pos	pos
	m	(Lcaf;J)I	a	getCurrentLevelFromArray
		p	1	array	array
		p	2	blockPos	blockPos
	m	(JLcaf;)V	a	setLightArray
		p	1	pos	pos
		p	3	lightArray	lightArray
	m	(II)Lbjg;	a	getChunk
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(Lfk;)V	a	checkBlock
		p	1	pos	pos
	m	(IZZ)I	a	doLightUpdates
		p	1	maxSteps	maxSteps
		p	2	doSkylight	doSkylight
		p	3	skipEdgeLightPropagation	skipEdgeLightPropagation
	m	(Lbjh;Z)V	b	setRetainData
		p	1	pos	pos
		p	2	retainData	retainData
	m	()V	d	clearChunkCache
c	cny	net/minecraft/world/chunk/light/ChunkLightingView
	m	(Lgd;)Lcaf;	a	getLightArray
		p	1	pos	pos
	m	(Lfk;)I	b	getLightLevel
c	cny$a	net/minecraft/world/chunk/light/ChunkLightingView$Empty
c	cnz	net/minecraft/world/chunk/light/LightStorage
	f	Lcaf;	a	EMPTY
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	b	nonEmptySections
	f	Lcnu;	e	uncachedLightArrays
	f	Lcnu;	f	lightArrays
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	h	dirtySections
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	lightArraysToAdd
	f	Z	j	hasLightUpdates
	f	[Lfp;	k	DIRECTIONS
	f	Lbkf;	l	lightType
	f	Lcan;	m	chunkProvider
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	lightArraysToRemove
	m	(Lbkf;Lcan;Lcnu;)V	<init>	<init>
		p	1	lightType	lightType
		p	2	chunkProvider	chunkProvider
		p	3	lightData	lightData
	m	()Z	a	hasLightUpdates
	m	(Lcnx;J)V	a	removeChunkData
		p	1	storage	storage
		p	2	blockChunkPos	blockChunkPos
	m	(JZ)Lcaf;	a	getLightArray
		p	1	sectionPos	sectionPos
		p	3	cached	cached
	m	(Lcnx;ZZ)V	a	updateLightArrays
		p	1	lightProvider	lightProvider
		p	2	doSkylight	doSkylight
		p	3	skipEdgeLightPropagation	skipEdgeLightPropagation
	m	(JLcaf;)V	a	setLightArray
		p	1	pos	pos
		p	3	array	array
	m	(Lcnu;J)Lcaf;	a	getLightArray
		p	1	storage	storage
		p	2	sectionPos	sectionPos
	m	(JI)V	b	set
		p	1	blockPos	blockPos
		p	3	value	value
	m	(JZ)V	b	setLightEnabled
	m	(JZ)V	c	setRetainData
	m	(JZ)V	d	updateSectionStatus
		p	1	pos	pos
		p	3	empty	empty
	m	()V	d	updateAll
	m	(J)I	d	getLight
		p	1	blockPos	blockPos
	m	()V	e	notifyChunkProvider
	m	(J)Z	g	hasLight
		p	1	sectionPos	sectionPos
	m	(J)Lcaf;	h	getLightArray
		p	1	sectionPos	sectionPos
	m	(J)I	i	get
		p	1	blockPos	blockPos
	m	(J)Lcaf;	j	createLightArray
		p	1	pos	pos
	m	(J)V	k	onLightArrayCreated
		p	1	blockPos	blockPos
	m	(J)V	l	onChunkRemoved
c	co	net/minecraft/command/CommandException
	f	Llf;	a	message
	m	(Llf;)V	<init>	<init>
		p	1	message	message
	m	()Llf;	a	getTextMessage
c	coa	net/minecraft/world/chunk/light/LightingProvider
	f	Lcnx;	a	blockLightProvider
	f	Lcnx;	b	skyLightProvider
	m	(Lcan;ZZ)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
		p	2	hasBlockLight	hasBlockLight
		p	3	hasSkyLight	hasSkyLight
	m	(Lbkf;Lgd;Lcaf;)V	a	queueData
		p	1	lightType	lightType
	m	(Lfk;I)V	a	addLightSource
		p	1	pos	pos
		p	2	level	level
	m	(Lbkf;)Lcny;	a	get
		p	1	lightType	lightType
	m	()Z	a	hasUpdates
	m	(Lfk;)V	a	checkBlock
		p	1	pos	pos
	m	(IZZ)I	a	doLightUpdates
		p	1	maxUpdateCount	maxUpdateCount
		p	2	doSkylight	doSkylight
		p	3	skipEdgeLightPropagation	skipEdgeLightPropagation
	m	(Lbjh;Z)V	a	setLightEnabled
		p	1	pos	pos
		p	2	lightEnabled	lightEnabled
	m	(Lbjh;Z)V	b	setRetainData
		p	1	pos	pos
		p	2	retainData	retainData
	m	(Lfk;I)I	b	getLight
		p	1	pos	pos
		p	2	ambientDarkness	ambientDarkness
c	cob	net/minecraft/world/chunk/light/LightingView
	m	(Lfk;Z)V	a	updateSectionStatus
		p	1	pos	pos
		p	2	status	status
	m	(Lgd;Z)V	a	updateSectionStatus
		p	1	pos	pos
		p	2	status	status
c	coc	net/minecraft/world/chunk/light/ChunkSkyLightProvider
	f	[Lfp;	e	DIRECTIONS
	f	[Lfp;	f	HORIZONTAL_DIRECTIONS
	m	(Lcan;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
c	cod	net/minecraft/world/chunk/light/SkyLightStorage
	f	[Lfp;	k	LIGHT_REDUCTION_DIRECTIONS
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	m	pendingSkylightUpdates
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	lightEnabled
	f	Z	p	hasSkyLightUpdates
	m	(Lcan;)V	<init>	<init>
		p	1	chunkProvider	chunkProvider
	m	(I)Z	a	isAboveMinimumHeight
		p	1	blockY	blockY
	m	()V	f	checkForUpdates
	m	(J)Z	n	isAboveTopmostLightArray
		p	1	pos	pos
	m	(J)Z	o	isLightEnabled
		p	1	sectionPos	sectionPos
c	cod$a	net/minecraft/world/chunk/light/SkyLightStorage$Data
	f	I	b	defaultTopArraySectionY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topArraySectionY
	m	()Lcod$a;	a	copy
c	cog	net/minecraft/fluid/EmptyFluid
c	coh	net/minecraft/fluid/BaseFluid
	f	Lbzb;	a	FALLING
	f	Lbzj;	b	LEVEL
	f	Ljava/util/Map;	f	shapeCache
	m	(Lbjg;Lfk;Lbyj;Lfp;Lfk;Lbyj;Lcoj;Lcoi;)Z	a	canFlow
		p	1	world	world
		p	2	fluidPos	fluidPos
		p	3	fluidBlockState	fluidBlockState
		p	4	flowDirection	flowDirection
		p	5	flowTo	flowTo
		p	6	flowToBlockState	flowToBlockState
	m	(Z)Lcoj;	a	getStill
		p	1	falling	falling
	m	(Lbjx;Lfk;Lbyj;Lfp;Lcoj;)V	a	flow
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	direction	direction
		p	5	fluidState	fluidState
	m	(Lbjx;Lfk;Lbyj;)V	a	beforeBreakingBlock
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjg;Lfk;Lbyj;Lcoi;)Z	a	canFill
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	fluid	fluid
	m	(IZ)Lcoj;	a	getFlowing
		p	1	level	level
		p	2	falling	falling
	m	(Lbjx;Lfk;Lcoj;)V	a	tryFlow
		p	1	world	world
		p	2	fluidPos	fluidPos
		p	3	state	state
	m	(Lbjz;Lfk;Lbyj;)Lcoj;	a	getUpdatedState
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lbjg;Lcoi;Lfk;Lbyj;Lfp;Lfk;Lbyj;Lcoj;)Z	a	canFlowThrough
		p	1	world	world
		p	2	fluid	fluid
		p	3	pos	pos
		p	4	state	state
		p	5	face	face
		p	6	fromPos	fromPos
		p	7	fromState	fromState
		p	8	fluidState	fluidState
	m	(Lfp;Lbjg;Lfk;Lbyj;Lfk;Lbyj;)Z	a	receivesFlow
		p	1	face	face
		p	2	world	world
		p	3	pos	pos
		p	4	state	state
		p	5	fromPos	fromPos
		p	6	fromState	fromState
	m	(Lbjw;Lfk;Lcoj;Lcoj;)I	a	getNextTickDelay
		p	1	world	world
		p	2	pos	pos
		p	3	oldState	oldState
		p	4	newState	newState
	m	(Lbjz;Lfk;Lbyj;)Ljava/util/Map;	b	getSpread
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcoj;Lbjg;Lfk;)Z	c	isFluidAboveEqual
		p	0	state	state
		p	1	world	world
		p	2	pos	pos
	m	(Lbjz;)I	c	getLevelDecreasePerBlock
		p	1	world	world
	m	()Lcoi;	d	getFlowing
	m	()Lcoi;	e	getStill
	m	()Z	f	isInfinite
	m	(Lcoj;)Z	h	isMatchingAndStill
		p	1	state	state
c	coi	net/minecraft/fluid/Fluid
	f	Lcoj;	a	defaultState
	f	Lft;	c	STATE_IDS
	f	Lbyk;	d	stateManager
	m	()Lbei;	a	getBucketItem
	m	(Lbjg;Lfk;Lcoj;)Lcvl;	a	getVelocity
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcoi;)Z	a	matchesType
		p	1	fluid	fluid
	m	(Lbjw;Lfk;Lcoj;Ljava/util/Random;)V	a	randomDisplayTick
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	random	random
	m	(Lcoj;Lbjg;Lfk;)F	a	getHeight
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Laaz;)Z	a	matches
		p	1	tag	tag
	m	(Lbjw;Lfk;Lcoj;)V	a	onScheduledTick
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcoj;)F	a	getHeight
		p	1	state	state
	m	(Lcoj;Lbjg;Lfk;Lcoi;Lfp;)Z	a	canBeReplacedWith
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
		p	4	fluid	fluid
		p	5	direction	direction
	m	(Lbjz;)I	a	getTickRate
		p	1	world	world
	m	(Lbyk$a;)V	a	appendProperties
	m	(Lbjw;Lfk;Lcoj;Ljava/util/Random;)V	b	onRandomTick
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Lcoj;)Lbyj;	b	toBlockState
		p	1	state	state
	m	(Lcoj;Lbjg;Lfk;)Lcwf;	b	getShape
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	()Z	b	isEmpty
	m	(Lcoj;)Z	c	isStill
		p	1	state	state
	m	()F	c	getBlastResistance
	m	(Lcoj;)I	d	getLevel
		p	1	state	state
	m	(Lcoj;)V	f	setDefaultState
		p	1	state	state
	m	()Lbyk;	g	getStateManager
	m	()Lcoj;	h	getDefaultState
	m	()Lgt;	i	getParticle
	m	()Z	j	hasRandomTicks
c	coj	net/minecraft/fluid/FluidState
	m	(Lbjw;Lfk;)V	a	onScheduledTick
		p	1	world	world
		p	2	pos	pos
	m	(Lbjg;Lfk;)F	a	getHeight
		p	1	world	world
		p	2	pos	pos
	m	(Lbjw;Lfk;Ljava/util/Random;)V	a	randomDisplayTick
		p	1	world	world
		p	2	pos	pos
		p	3	random	random
	m	(Lcom/mojang/datafixers/types/DynamicOps;Lcoj;)Lcom/mojang/datafixers/Dynamic;	a	serialize
		p	0	ops	ops
		p	1	state	state
	m	(Laaz;)Z	a	matches
		p	1	tag	tag
	m	(Lcom/mojang/datafixers/Dynamic;)Lcoj;	a	deserialize
		p	0	dynamic	dynamic
	m	(Lbjw;Lfk;Ljava/util/Random;)V	b	onRandomTick
		p	1	world	world
		p	2	pos	pos
		p	3	random	random
	m	(Lbjg;Lfk;)Z	b	method_15756
		p	1	world	world
		p	2	pos	pos
	m	(Lbjg;Lfk;)Lcvl;	c	getVelocity
		p	1	world	world
		p	2	pos	pos
	m	()Lcoi;	c	getFluid
	m	(Lbjg;Lfk;)Lcwf;	d	getShape
		p	1	world	world
		p	2	pos	pos
	m	()Z	d	isStill
	m	()Z	e	isEmpty
	m	()F	f	getHeight
	m	()I	g	getLevel
	m	()Z	h	hasRandomTicks
	m	()Lbyj;	i	getBlockState
	m	()Lgt;	j	getParticle
	m	()F	k	getBlastResistance
c	cok	net/minecraft/fluid/FluidStateImpl
	m	(Lcoi;Lcom/google/common/collect/ImmutableMap;)V	<init>	<init>
		p	1	fluid	fluid
c	col	net/minecraft/fluid/Fluids
	f	Lcoh;	b	FLOWING_WATER
	f	Lcoh;	c	WATER
	f	Lcoh;	d	FLOWING_LAVA
	f	Lcoh;	e	LAVA
	m	(Ljava/lang/String;Lcoi;)Lcoi;	a	register
		p	0	id	id
		p	1	value	value
c	com	net/minecraft/fluid/LavaFluid
	m	(Lbjz;Lfk;)Z	a	canLightFire
		p	1	world	world
		p	2	pos	pos
	m	(Lbjx;Lfk;)V	a	playExtinguishEvent
		p	1	world	world
		p	2	pos	pos
	m	(Lbjz;Lfk;)Z	b	hasBurnableBlock
		p	1	world	world
		p	2	pos	pos
c	com$a	net/minecraft/fluid/LavaFluid$Flowing
c	com$b	net/minecraft/fluid/LavaFluid$Still
c	com/mojang/blaze3d/platform/GLX	com/mojang/blaze3d/platform/GLX
	m	(Lcxx;)I	_getRefreshRate	_getRefreshRate
		p	0	window	window
	m	(IZ)V	_init	_init
		p	0	debugVerbosity	debugVerbosity
		p	1	debugSync	debugSync
	m	(IZZZ)V	_renderCrosshair	_renderCrosshair
		p	0	size	size
		p	1	drawX	drawX
		p	2	drawY	drawY
		p	3	drawZ	drawZ
	m	(Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V	_setGlfwErrorCallback	_setGlfwErrorCallback
		p	0	callback	callback
	m	(Lcxx;)Z	_shouldClose	_shouldClose
		p	0	window	window
	m	(I)Ljava/lang/String;	getErrorString	getErrorString
		p	0	code	code
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	make	make
		p	0	factory	factory
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	make	make
		p	0	object	object
		p	1	initializer	initializer
c	com/mojang/blaze3d/systems/RenderSystem	com/mojang/blaze3d/systems/RenderSystem
	m	(I)V	activeTexture	activeTexture
		p	0	texture	texture
	m	(IF)V	alphaFunc	alphaFunc
		p	0	func	func
		p	1	ref	ref
	m	(Ljava/util/function/Supplier;)V	assertThread	assertThread
		p	0	check	check
	m	(I)V	bindTexture	bindTexture
		p	0	texture	texture
	m	(FFFF)V	blendColor	blendColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(I)V	blendEquation	blendEquation
		p	0	mode	mode
	m	(II)V	blendFunc	blendFunc
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
	m	(Lcxk$q;Lcxk$k;)V	blendFunc	blendFunc
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
	m	(IIII)V	blendFuncSeparate	blendFuncSeparate
		p	0	srcFactorRGB	srcFactorRGB
		p	1	dstFactorRGB	dstFactorRGB
		p	2	srcFactorAlpha	srcFactorAlpha
		p	3	dstFactorAlpha	dstFactorAlpha
	m	(Lcxk$q;Lcxk$k;Lcxk$q;Lcxk$k;)V	blendFuncSeparate	blendFuncSeparate
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
		p	2	srcAlpha	srcAlpha
		p	3	dstAlpha	dstAlpha
	m	(IZ)V	clear	clear
		p	0	mask	mask
		p	1	getError	getError
	m	(FFFF)V	clearColor	clearColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(D)V	clearDepth	clearDepth
		p	0	depth	depth
	m	(I)V	clearStencil	clearStencil
		p	0	stencil	stencil
	m	(FFF)V	color3f	color3f
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
	m	(FFFF)V	color4f	color4f
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(ZZZZ)V	colorMask	colorMask
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(II)V	colorMaterial	colorMaterial
		p	0	face	face
		p	1	mode	mode
	m	(I)V	deleteTexture	deleteTexture
		p	0	texture	texture
	m	(I)V	depthFunc	depthFunc
		p	0	func	func
	m	(Z)V	depthMask	depthMask
		p	0	mask	mask
	m	(III)V	drawArrays	drawArrays
		p	0	mode	mode
		p	1	first	first
		p	2	count	count
	m	(J)V	flipFrame	flipFrame
		p	0	window	window
	m	(IFFFF)V	fog	fog
		p	0	pname	pname
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(F)V	fogDensity	fogDensity
		p	0	density	density
	m	(F)V	fogEnd	fogEnd
		p	0	end	end
	m	(Lcxk$m;)V	fogMode	fogMode
		p	0	mode	mode
	m	(I)V	fogMode	fogMode
		p	0	mode	mode
	m	(F)V	fogStart	fogStart
		p	0	start	start
	m	(II)V	fogi	fogi
		p	0	pname	pname
		p	1	param	param
	m	(ILjava/util/function/Consumer;)V	getString	getString
		p	0	name	name
		p	1	consumer	consumer
	m	(ILjava/util/function/Supplier;)V	glBindBuffer	glBindBuffer
		p	0	target	target
		p	1	buffer	buffer
	m	(ILjava/nio/ByteBuffer;I)V	glBufferData	glBufferData
		p	0	target	target
		p	1	data	data
		p	2	usage	usage
	m	(I)V	glDeleteBuffers	glDeleteBuffers
		p	0	buffer	buffer
	m	(Ljava/util/function/Consumer;)V	glGenBuffers	glGenBuffers
		p	0	consumer	consumer
	m	(IFF)V	glMultiTexCoord2f	glMultiTexCoord2f
		p	0	texture	texture
		p	1	s	s
		p	2	t	t
	m	(ILjava/nio/IntBuffer;)V	glUniform1	glUniform1
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform1	glUniform1
		p	0	location	location
		p	1	value	value
	m	(II)V	glUniform1i	glUniform1i
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/IntBuffer;)V	glUniform2	glUniform2
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform2	glUniform2
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/IntBuffer;)V	glUniform3	glUniform3
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform3	glUniform3
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	glUniform4	glUniform4
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/IntBuffer;)V	glUniform4	glUniform4
		p	0	location	location
		p	1	value	value
	m	(IZLjava/nio/FloatBuffer;)V	glUniformMatrix2	glUniformMatrix2
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(IZLjava/nio/FloatBuffer;)V	glUniformMatrix3	glUniformMatrix3
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(IZLjava/nio/FloatBuffer;)V	glUniformMatrix4	glUniformMatrix4
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(Z)V	initGameThread	initGameThread
		p	0	assertNotRenderThread	assertNotRenderThread
	m	(IZ)V	initRenderer	initRenderer
		p	0	debugVerbosity	debugVerbosity
		p	1	debugSync	debugSync
	m	(I)V	limitDisplayFPS	limitDisplayFPS
		p	0	fps	fps
	m	(F)V	lineWidth	lineWidth
		p	0	width	width
	m	(Lcxk$o;)V	logicOp	logicOp
		p	0	op	op
	m	(I)V	matrixMode	matrixMode
		p	0	mode	mode
	m	(Lb;)V	multMatrix	multMatrix
		p	0	matrix	matrix
	m	(FFF)V	normal3f	normal3f
		p	0	nx	nx
		p	1	ny	ny
		p	2	nz	nz
	m	(DDDDDD)V	ortho	ortho
		p	0	l	l
		p	2	r	r
		p	4	b	b
		p	6	t	t
		p	8	n	n
		p	10	f	f
	m	(II)V	pixelStore	pixelStore
		p	0	pname	pname
		p	1	param	param
	m	(IF)V	pixelTransfer	pixelTransfer
		p	0	pname	pname
		p	1	param	param
	m	(II)V	polygonMode	polygonMode
		p	0	face	face
		p	1	mode	mode
	m	(FF)V	polygonOffset	polygonOffset
		p	0	factor	factor
		p	1	units	units
	m	(IIIIIILjava/nio/ByteBuffer;)V	readPixels	readPixels
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
		p	4	format	format
		p	5	type	type
		p	6	pixels	pixels
	m	(Lcxc;)V	recordRenderCall	recordRenderCall
		p	0	renderCall	renderCall
	m	(I)V	renderCrosshair	renderCrosshair
		p	0	size	size
	m	(FFFF)V	rotatef	rotatef
		p	0	angle	angle
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(DDD)V	scaled	scaled
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(FFF)V	scalef	scalef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V	setErrorCallback	setErrorCallback
		p	0	callback	callback
	m	(IIII)V	setupDefaultState	setupDefaultState
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
	m	(Lb;)V	setupLevelDiffuseLighting	setupLevelDiffuseLighting
		p	0	modelMatrix	modelMatrix
	m	(Ljava/util/function/IntSupplier;I)V	setupOverlayColor	setupOverlayColor
		p	0	texture	texture
		p	1	size	size
	m	(I)V	shadeModel	shadeModel
		p	0	mode	mode
	m	(III)V	stencilFunc	stencilFunc
		p	0	func	func
		p	1	ref	ref
		p	2	mask	mask
	m	(I)V	stencilMask	stencilMask
		p	0	mask	mask
	m	(III)V	stencilOp	stencilOp
		p	0	sfail	sfail
		p	1	dpfail	dpfail
		p	2	dppass	dppass
	m	(III)V	texParameter	texParameter
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(DDD)V	translated	translated
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(FFF)V	translatef	translatef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(IIII)V	viewport	viewport
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
c	com/mojang/realmsclient/dto/Backup	com/mojang/realmsclient/dto/Backup
	m	(Ljava/lang/String;)Ljava/lang/String;	format	format
		p	0	key	key
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup;	parse	parse
		p	0	node	node
	m	(Z)V	setUploadedVersion	setUploadedVersion
		p	1	uploadedVersion	uploadedVersion
c	com/mojang/realmsclient/dto/BackupList	com/mojang/realmsclient/dto/BackupList
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/Ops	com/mojang/realmsclient/dto/Ops
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/PendingInvite	com/mojang/realmsclient/dto/PendingInvite
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/PendingInvitesList	com/mojang/realmsclient/dto/PendingInvitesList
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/PlayerInfo	com/mojang/realmsclient/dto/PlayerInfo
	m	(Z)V	setAccepted	setAccepted
		p	1	accepted	accepted
	m	(Ljava/lang/String;)V	setName	setName
		p	1	name	name
	m	(Z)V	setOnline	setOnline
		p	1	online	online
	m	(Z)V	setOperator	setOperator
		p	1	operator	operator
	m	(Ljava/lang/String;)V	setUuid	setUuid
		p	1	uuid	uuid
c	com/mojang/realmsclient/dto/RealmsDescriptionDto	com/mojang/realmsclient/dto/RealmsDescriptionDto
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
		p	2	description	description
c	com/mojang/realmsclient/dto/RealmsNews	com/mojang/realmsclient/dto/RealmsNews
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/RealmsServer	com/mojang/realmsclient/dto/RealmsServer
	m	()Lcom/mojang/realmsclient/dto/RealmsServer;	clone	clone
	m	(Ljava/util/Map;)Ljava/util/Map;	cloneSlots	cloneSlots
		p	1	slots	slots
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$b;	getState	getState
		p	0	state	state
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$c;	getWorldType	getWorldType
		p	0	state	state
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer;	parse	parse
		p	0	json	json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer;	parse	parse
		p	0	node	node
	m	(Lcom/google/gson/JsonArray;)Ljava/util/List;	parseInvited	parseInvited
		p	0	jsonArray	jsonArray
	m	(Lcom/google/gson/JsonArray;)Ljava/util/Map;	parseSlots	parseSlots
		p	0	jsonArray	jsonArray
	m	(Ljava/lang/String;)V	setDescription	setDescription
		p	1	motd	motd
	m	(Ljava/lang/String;)V	setName	setName
		p	1	name	name
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)V	sortInvited	sortInvited
		p	0	server	server
	m	(Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V	updateServerPing	updateServerPing
		p	1	serverPlayerList	serverPlayerList
c	com/mojang/realmsclient/dto/RealmsServer$a	com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	f	Ljava/lang/String;	a	refOwner
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	owner	owner
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I	a	compare
c	com/mojang/realmsclient/dto/RealmsServer$b	com/mojang/realmsclient/dto/RealmsServer$State
	f	Lcom/mojang/realmsclient/dto/RealmsServer$b;	a	CLOSED
	f	Lcom/mojang/realmsclient/dto/RealmsServer$b;	b	OPEN
	f	Lcom/mojang/realmsclient/dto/RealmsServer$b;	c	UNINITIALIZED
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$b;	valueOf	valueOf
		p	0	name	name
c	com/mojang/realmsclient/dto/RealmsServer$c	com/mojang/realmsclient/dto/RealmsServer$WorldType
	f	Lcom/mojang/realmsclient/dto/RealmsServer$c;	a	NORMAL
	f	Lcom/mojang/realmsclient/dto/RealmsServer$c;	b	MINIGAME
	f	Lcom/mojang/realmsclient/dto/RealmsServer$c;	c	ADVENTUREMAP
	f	Lcom/mojang/realmsclient/dto/RealmsServer$c;	d	EXPERIENCE
	f	Lcom/mojang/realmsclient/dto/RealmsServer$c;	e	INSPIRATION
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$c;	valueOf	valueOf
		p	0	name	name
c	com/mojang/realmsclient/dto/RealmsServerAddress	com/mojang/realmsclient/dto/RealmsServerAddress
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/RealmsServerList	com/mojang/realmsclient/dto/RealmsServerList
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/RealmsServerPlayerList	com/mojang/realmsclient/dto/RealmsServerPlayerList
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;	parse	parse
		p	0	node	node
	m	(Lcom/google/gson/JsonArray;)Ljava/util/List;	parsePlayers	parsePlayers
		p	0	jsonArray	jsonArray
c	com/mojang/realmsclient/dto/RealmsServerPlayerLists	com/mojang/realmsclient/dto/RealmsServerPlayerLists
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/RealmsWorldOptions	com/mojang/realmsclient/dto/RealmsWorldOptions
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;)V	<init>	<init>
		p	1	pvp	pvp
		p	2	spawnAnimals	spawnAnimals
		p	3	spawnMonsters	spawnMonsters
		p	4	spawnNPCs	spawnNPCs
		p	5	spawnProtection	spawnProtection
		p	6	commandBlocks	commandBlocks
		p	7	difficulty	difficulty
		p	8	gameMode	gameMode
		p	9	forceGameMode	forceGameMode
		p	10	slotName	slotName
	m	()Lcom/mojang/realmsclient/dto/RealmsWorldOptions;	clone	clone
	m	(I)Ljava/lang/String;	getDefaultSlotName	getDefaultSlotName
		p	1	i	i
	m	(I)Ljava/lang/String;	getSlotName	getSlotName
		p	1	i	i
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions;	parse	parse
		p	0	jsonObject	jsonObject
	m	(Z)V	setEmpty	setEmpty
		p	1	empty	empty
c	com/mojang/realmsclient/dto/RealmsWorldResetDto	com/mojang/realmsclient/dto/RealmsWorldResetDto
	m	(Ljava/lang/String;JIZ)V	<init>	<init>
		p	1	seed	seed
		p	2	worldTemplateId	worldTemplateId
		p	4	levelType	levelType
		p	5	generateStructures	generateStructures
c	com/mojang/realmsclient/dto/RegionPingResult	com/mojang/realmsclient/dto/RegionPingResult
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	regionName	regionName
		p	2	ping	ping
c	com/mojang/realmsclient/dto/ServerActivity	com/mojang/realmsclient/dto/ServerActivity
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/ServerActivity;	parse	parse
		p	0	element	element
c	com/mojang/realmsclient/dto/ServerActivityList	com/mojang/realmsclient/dto/ServerActivityList
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/ServerActivityList;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/Subscription	com/mojang/realmsclient/dto/Subscription
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription;	parse	parse
		p	0	json	json
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$a;	typeFrom	typeFrom
		p	0	subscriptionType	subscriptionType
c	com/mojang/realmsclient/dto/Subscription$a	com/mojang/realmsclient/dto/Subscription$SubscriptionType
	f	Lcom/mojang/realmsclient/dto/Subscription$a;	a	NORMAL
	f	Lcom/mojang/realmsclient/dto/Subscription$a;	b	RECURRING
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$a;	valueOf	valueOf
		p	0	name	name
c	com/mojang/realmsclient/dto/UploadInfo	com/mojang/realmsclient/dto/UploadInfo
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo;	parse	parse
		p	0	json	json
	m	(Ljava/lang/String;)V	setToken	setToken
		p	1	token	token
c	com/mojang/realmsclient/dto/WorldDownload	com/mojang/realmsclient/dto/WorldDownload
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload;	parse	parse
		p	0	json	json
c	com/mojang/realmsclient/dto/WorldTemplate	com/mojang/realmsclient/dto/WorldTemplate
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate;	parse	parse
		p	0	node	node
c	com/mojang/realmsclient/dto/WorldTemplate$a	com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	f	Lcom/mojang/realmsclient/dto/WorldTemplate$a;	a	WORLD_TEMPLATE
	f	Lcom/mojang/realmsclient/dto/WorldTemplate$a;	b	MINIGAME
	f	Lcom/mojang/realmsclient/dto/WorldTemplate$a;	c	ADVENTUREMAP
	f	Lcom/mojang/realmsclient/dto/WorldTemplate$a;	d	EXPERIENCE
	f	Lcom/mojang/realmsclient/dto/WorldTemplate$a;	e	INSPIRATION
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplate$a;	valueOf	valueOf
		p	0	name	name
c	com/mojang/realmsclient/dto/WorldTemplatePaginatedList	com/mojang/realmsclient/dto/WorldTemplatePaginatedList
	m	(Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;	parse	parse
		p	0	json	json
c	coo	net/minecraft/block/Material
	f	Lcoo;	A	WOOL
		c	Material for wool and bed blocks.
	f	Lcoo;	B	TNT
	f	Lcoo;	C	LEAVES
	f	Lcoo;	D	GLASS
		c	Material for glass and glass-like blocks (includes sea lanterns and conduits).
	f	Lcoo;	E	ICE
		c	Material for ice that can melt. See {@link
	f	Lcoo;	F	CACTUS
	f	Lcoo;	G	STONE
		c	Material for blocks that are stone or made from it, and generally prefer to be broken by a pickaxe.
	f	Lcoo;	H	METAL
	f	Lcoo;	I	SNOW_BLOCK
		c	Material for full sized snow blocks.
	f	Lcoo;	J	REPAIR_STATION
		c	Material for blocks that can repair tools, including grindstone and anvils.
	f	Lcoo;	K	BARRIER
	f	Lcoo;	L	PISTON
	f	Lcoo;	M	UNUSED_PLANT
		c	Not in use, but has foliage color.
	f	Lcoo;	N	GOURD
		c	Material for gourds. Includes the carved pumpkin and jack o' lantern.
	f	Lcoo;	O	EGG
		c	Material for egg blocks, such as dragon and turtle eggs.
	f	Lcoo;	P	CAKE
	f	Lcop;	Q	color
	f	Lcoq;	R	pistonBehavior
	f	Z	S	blocksMovement
	f	Z	T	burnable
	f	Z	U	breakByHand
	f	Z	V	liquid
	f	Z	W	blocksLight
	f	Z	X	replaceable
	f	Z	Y	solid
	f	Lcoo;	a	AIR
	f	Lcoo;	b	STRUCTURE_VOID
		c	Material for structure void block.
	f	Lcoo;	c	PORTAL
		c	Material for the various portal blocks.
	f	Lcoo;	d	CARPET
	f	Lcoo;	e	PLANT
		c	Material for plants such as flowers and crops
	f	Lcoo;	f	UNDERWATER_PLANT
		c	Material for underwater plants without the replaceable property.
	f	Lcoo;	g	REPLACEABLE_PLANT
	f	Lcoo;	h	REPLACEABLE_UNDERWATER_PLANT
	f	Lcoo;	i	WATER
	f	Lcoo;	j	BUBBLE_COLUMN
	f	Lcoo;	k	LAVA
	f	Lcoo;	l	SNOW_LAYER
		c	Material for non-full blocks of snow. Has the replaceable property.
	f	Lcoo;	m	FIRE
	f	Lcoo;	n	SUPPORTED
		c	Material for blocks that require a supporting block such as redstone components, torches, flower pots, and skulls.
	f	Lcoo;	o	COBWEB
	f	Lcoo;	p	REDSTONE_LAMP
	f	Lcoo;	q	ORGANIC_PRODUCT
		c	Material for blocks that come from mobs such as honey, slime, or infested blocks. Includes clay but not bone blocks.
	f	Lcoo;	r	SOIL
		c	Material for the top layer of soil. Path, dirt, podzol, soul soil, farmland and similar.
	f	Lcoo;	s	SOLID_ORGANIC
		c	Organic blocks that are solid, including hay, and grass blocks.
	f	Lcoo;	t	DENSE_ICE
		c	Material for ice blocks that do not melt. See {@link
	f	Lcoo;	u	AGGREGATE
		c	A material or structure formed from a loosely compacted mass of fragments or particles.
	f	Lcoo;	v	SPONGE
	f	Lcoo;	w	SHULKER_BOX
	f	Lcoo;	x	WOOD
		c	Material for wood logs, and things crafted from them.
	f	Lcoo;	y	BAMBOO_SAPLING
	f	Lcoo;	z	BAMBOO
	m	(Lcop;ZZZZZZZLcoq;)V	<init>	<init>
		p	1	color	color
		p	2	liquid	liquid
		p	3	solid	solid
		p	4	blocksMovement	blocksMovement
		p	5	blocksLight	blocksLight
		p	6	breakByHand	breakByHand
		p	7	burnable	burnable
		p	8	replaceable	replaceable
		p	9	pistonBehavior	pistonBehavior
	m	()Z	a	isLiquid
	m	()Z	b	isSolid
	m	()Z	c	blocksMovement
	m	()Z	d	isBurnable
	m	()Z	e	isReplaceable
	m	()Z	f	blocksLight
	m	()Z	g	canBreakByHand
	m	()Lcoq;	h	getPistonBehavior
	m	()Lcop;	i	getColor
c	coo$a	net/minecraft/block/Material$Builder
	f	Lcoq;	a	pistonBehavior
	f	Z	b	blocksMovement
	f	Z	c	burnable
	f	Z	d	breakByHand
	f	Z	e	liquid
	f	Z	f	replaceable
	f	Z	g	solid
	f	Lcop;	h	color
	f	Z	i	blocksLight
	m	(Lcop;)V	<init>	<init>
		p	1	color	color
	m	()Lcoo$a;	a	liquid
	m	()Lcoo$a;	b	notSolid
	m	()Lcoo$a;	c	allowsMovement
	m	()Lcoo$a;	d	requiresTool
	m	()Lcoo$a;	e	burnable
	m	()Lcoo$a;	f	replaceable
	m	()Lcoo$a;	g	destroyedByPiston
	m	()Lcoo$a;	h	blocksPistons
	m	()Lcoo;	i	build
	m	()Lcoo$a;	j	lightPassesThrough
c	cop	net/minecraft/block/MaterialColor
	f	Lcop;	A	BLUE
	f	Lcop;	B	BROWN
	f	Lcop;	C	GREEN
	f	Lcop;	D	RED
	f	Lcop;	E	BLACK
	f	Lcop;	F	GOLD
	f	Lcop;	G	DIAMOND
	f	Lcop;	H	LAPIS
	f	Lcop;	I	EMERALD
	f	Lcop;	J	SPRUCE
	f	Lcop;	K	NETHER
	f	Lcop;	L	WHITE_TERRACOTTA
	f	Lcop;	M	ORANGE_TERRACOTTA
	f	Lcop;	N	MAGENTA_TERRACOTTA
	f	Lcop;	O	LIGHT_BLUE_TERRACOTTA
	f	Lcop;	P	YELLOW_TERRACOTTA
	f	Lcop;	Q	LIME_TERRACOTTA
	f	Lcop;	R	PINK_TERRACOTTA
	f	Lcop;	S	GRAY_TERRACOTTA
	f	Lcop;	T	LIGHT_GRAY_TERRACOTTA
	f	Lcop;	U	CYAN_TERRACOTTA
	f	Lcop;	V	PURPLE_TERRACOTTA
	f	Lcop;	W	BLUE_TERRACOTTA
	f	Lcop;	X	BROWN_TERRACOTTA
	f	Lcop;	Y	GREEN_TERRACOTTA
	f	Lcop;	Z	RED_TERRACOTTA
	f	[Lcop;	a	COLORS
	f	Lcop;	aa	BLACK_TERRACOTTA
	f	I	ab	color
	f	I	ac	id
	f	Lcop;	b	AIR
	f	Lcop;	c	GRASS
	f	Lcop;	d	SAND
	f	Lcop;	e	WEB
	f	Lcop;	f	LAVA
	f	Lcop;	g	ICE
	f	Lcop;	h	IRON
	f	Lcop;	i	FOLIAGE
	f	Lcop;	j	WHITE
	f	Lcop;	k	CLAY
	f	Lcop;	l	DIRT
	f	Lcop;	m	STONE
	f	Lcop;	n	WATER
	f	Lcop;	o	WOOD
	f	Lcop;	p	QUARTZ
	f	Lcop;	q	ORANGE
	f	Lcop;	r	MAGENTA
	f	Lcop;	s	LIGHT_BLUE
	f	Lcop;	t	YELLOW
	f	Lcop;	u	LIME
	f	Lcop;	v	PINK
	f	Lcop;	w	GRAY
	f	Lcop;	x	LIGHT_GRAY
	f	Lcop;	y	CYAN
	f	Lcop;	z	PURPLE
	m	(II)V	<init>	<init>
		p	1	id	id
		p	2	color	color
	m	(I)I	a	getRenderColor
		p	1	shade	shade
c	coq	net/minecraft/block/piston/PistonBehavior
c	cor	net/minecraft/fluid/WaterFluid
c	cor$a	net/minecraft/fluid/WaterFluid$Flowing
c	cor$b	net/minecraft/fluid/WaterFluid$Still
c	cot	net/minecraft/world/biome/layer/util/LayerSampler
	m	(II)I	a	sample
		p	1	x	x
		p	2	z	z
c	cou	net/minecraft/world/biome/layer/util/LayerFactory
c	cov	net/minecraft/world/biome/layer/util/CachingLayerSampler
	f	Lcqi;	a	operator
	f	Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;	b	cache
	f	I	c	cacheCapacity
	m	(Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;ILcqi;)V	<init>	<init>
		p	1	cache	cache
		p	2	cacheCapacity	cacheCapacity
		p	3	operator	operator
	m	()I	a	getCapacity
c	cox	net/minecraft/world/biome/layer/util/LayerSampleContext
	m	(Lcqi;Lcot;)Lcot;	a	createSampler
		p	1	operator	operator
		p	2	parent	parent
	m	(II)I	a	choose
		p	1	a	a
		p	2	b	b
	m	(JJ)V	a	initSeed
		p	1	x	x
		p	3	y	y
	m	(Lcqi;)Lcot;	a	createSampler
		p	1	operator	operator
	m	(Lcqi;Lcot;Lcot;)Lcot;	a	createSampler
		p	1	operator	operator
	m	(IIII)I	a	choose
		p	1	a	a
		p	2	b	b
		p	3	c	c
		p	4	d	d
c	coy	net/minecraft/world/biome/layer/util/LayerRandomnessSource
	m	(I)I	a	nextInt
		p	1	bound	bound
	m	()Lcnm;	b	getNoiseSampler
c	coz	net/minecraft/world/biome/layer/util/CachingLayerContext
	f	Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;	a	cache
	f	I	b	cacheCapacity
	f	Lcnm;	c	noiseSampler
	f	J	d	worldSeed
	f	J	e	localSeed
	m	(IJJ)V	<init>	<init>
		p	1	cacheCapacity	cacheCapacity
		p	2	seed	seed
		p	4	salt	salt
	m	(Lcqi;Lcov;)Lcov;	a	createSampler
	m	(Lcqi;Lcov;Lcov;)Lcov;	a	createSampler
	m	(JJ)J	b	addSalt
		p	0	seed	seed
		p	2	salt	salt
	m	(Lcqi;)Lcov;	b	createSampler
c	cp	net/minecraft/server/command/CommandOutput
	f	Lcp;	a_	DUMMY
	m	()Z	I_	shouldBroadcastConsoleToOps
	m	()Z	a	sendCommandFeedback
	m	(Llf;)V	a	sendMessage
		p	1	message	message
	m	()Z	b	shouldTrackOutput
c	cpb	net/minecraft/world/biome/layer/AddDeepOceanLayer
c	cpc	net/minecraft/world/biome/layer/AddClimateLayers
c	cpc$a	net/minecraft/world/biome/layer/AddClimateLayers$AddTemperateBiomesLayer
c	cpc$b	net/minecraft/world/biome/layer/AddClimateLayers$AddCoolBiomesLayer
c	cpc$c	net/minecraft/world/biome/layer/AddClimateLayers$AddSpecialBiomesLayer
c	cpd	net/minecraft/world/biome/layer/IncreaseEdgeCurvatureLayer
c	cpe	net/minecraft/world/biome/layer/AddMushroomIslandLayer
	f	I	b	MUSHROOM_FIELDS_ID
c	cpf	net/minecraft/world/biome/layer/AddColdClimatesLayer
c	cpg	net/minecraft/world/biome/layer/EaseBiomeEdgeLayer
	f	I	b	DESERT_ID
	f	I	c	MOUNTAINS_ID
	f	I	d	WOODED_MOUNTAINS_ID
	f	I	e	SNOWY_TUNDRA_ID
	f	I	f	JUNGLE_ID
	f	I	g	BAMBOO_JUNGLE_ID
	f	I	h	JUNGLE_EDGE_ID
	f	I	i	BADLANDS_ID
	f	I	j	BADLANDS_PLATEAU_ID
	f	I	k	WOODED_BADLANDS_PLATEAU_ID
	f	I	l	PLAINS_ID
	f	I	m	GIANT_TREE_TAIGA_ID
	f	I	n	MOUNTAIN_EDGE_ID
	f	I	o	SWAMP_ID
	f	I	p	TAIGA_ID
	f	I	q	SNOWY_TAIGA_ID
c	cph	net/minecraft/world/biome/layer/SetBaseBiomesLayer
	f	I	a	BIRCH_FOREST_ID
	f	I	b	DESERT_ID
	f	I	c	MOUNTAINS_ID
	f	I	d	FOREST_ID
	f	I	e	SNOWY_TUNDRA_ID
	f	I	f	JUNGLE_ID
	f	I	g	BADLANDS_PLATEAU_ID
	f	I	h	WOODED_BADLANDS_PLATEAU_ID
	f	I	i	MUSHROOM_FIELDS_ID
	f	I	j	PLAINS_ID
	f	I	k	GIANT_TREE_TAIGA_ID
	f	I	l	DARK_FOREST_ID
	f	I	m	SAVANNA_ID
	f	I	n	SWAMP_ID
	f	I	o	TAIGA_ID
	f	I	p	SNOWY_TAIGA_ID
	f	[I	q	OLD_GROUP_1
	f	[I	r	DRY_BIOMES
	f	[I	s	TEMPERATE_BIOMES
	f	[I	t	COOL_BIOMES
	f	[I	u	SNOWY_BIOMES
	f	[I	w	chosenGroup1
	m	(Lbkd;I)V	<init>	<init>
		p	1	generatorType	generatorType
c	cpi	net/minecraft/world/biome/layer/ContinentLayer
c	cpj	net/minecraft/world/biome/source/BiomeLayerSampler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcov;	b	sampler
	m	(Lcou;)V	<init>	<init>
		p	1	layerFactory	layerFactory
	m	(I)Lbkt;	a	getBiome
		p	1	id	id
	m	(II)Lbkt;	a	sample
		p	1	x	x
		p	2	y	y
c	cpk	net/minecraft/world/biome/layer/BiomeLayers
	f	I	a	WARM_OCEAN_ID
	f	I	b	LUKEWARM_OCEAN_ID
	f	I	c	OCEAN_ID
	f	I	d	COLD_OCEAN_ID
	f	I	e	FROZEN_OCEAN_ID
	f	I	f	DEEP_WARM_OCEAN_ID
	f	I	g	DEEP_LUKEWARM_OCEAN_ID
	f	I	h	DEEP_OCEAN_ID
	f	I	i	DEEP_COLD_OCEAN_ID
	f	I	j	DEEP_FROZEN_OCEAN_ID
	m	(JLbkd;Lcbz;)Lcpj;	a	build
		p	0	seed	seed
		p	2	generatorType	generatorType
		p	3	settings	settings
	m	(Lbkd;Lcbz;Ljava/util/function/LongFunction;)Lcou;	a	build
		p	0	generatorType	generatorType
		p	1	settings	settings
		p	2	contextProvider	contextProvider
	m	(JLcpz;Lcou;ILjava/util/function/LongFunction;)Lcou;	a	stack
		p	0	seed	seed
		p	2	layer	layer
		p	3	parent	parent
		p	4	count	count
		p	5	contextProvider	contextProvider
	m	(I)Z	a	isOcean
		p	0	id	id
	m	(II)Z	a	areSimilar
		p	0	id1	id1
		p	1	id2	id2
	m	(JJ)Lcoz;	a	method_15849
		p	2	salt	salt
	m	(I)Z	b	isShallowOcean
		p	0	id	id
c	cpl	net/minecraft/world/biome/layer/OceanTemperatureLayer
c	cpm	net/minecraft/world/biome/layer/ApplyOceanTemperatureLayer
c	cpn	net/minecraft/world/biome/layer/AddBambooJungleLayer
	f	I	b	JUNGLE_ID
	f	I	c	BAMBOO_JUNGLE_ID
c	cpo	net/minecraft/world/biome/layer/AddSunflowerPlainsLayer
	f	I	b	PLAINS_ID
	f	I	c	SUNFLOWER_PLAINS
c	cpp	net/minecraft/world/biome/layer/AddHillsLayer
	f	I	A	SNOWY_TAIGA_HILLS_ID
	f	I	B	TAIGA_HILLS_ID
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	I	c	BIRCH_FOREST_ID
	f	I	d	BIRCH_FOREST_HILLS_ID
	f	I	e	DESERT_ID
	f	I	f	DESERT_HILLS_ID
	f	I	g	MOUNTAINS_ID
	f	I	h	WOODED_MOUNTAINS_ID
	f	I	i	FOREST_ID
	f	I	j	WOODED_HILLS_ID
	f	I	k	SNOWY_TUNDRA_ID
	f	I	l	SNOWY_MOUNTAINS_ID
	f	I	m	JUNGLE_ID
	f	I	n	JUNGLE_HILLS_ID
	f	I	o	BAMBOO_JUNGLE_ID
	f	I	p	BAMBOO_JUNGLE_HILLS_ID
	f	I	q	BADLANDS_ID
	f	I	r	WOODED_BADLANDS_PLATEAU_ID
	f	I	s	PLAINS_ID
	f	I	t	GIANT_TREE_TAIGA_ID
	f	I	u	GIANT_TREE_TAIGA_HILLS_ID
	f	I	v	DARK_FOREST_ID
	f	I	w	SAVANNA_ID
	f	I	x	SAVANNA_PLATEAU_ID
	f	I	y	TAIGA_ID
	f	I	z	SNOWY_TAIGA_ID
c	cpq	net/minecraft/world/biome/layer/AddIslandLayer
c	cpr	net/minecraft/world/biome/layer/SimpleLandNoiseLayer
c	cps	net/minecraft/world/biome/layer/NoiseToRiverLayer
	f	I	b	RIVER_ID
	m	(I)I	c	isValidForRiver
		p	0	value	value
c	cpt	net/minecraft/world/biome/layer/AddRiversLayer
	f	I	b	FROZEN_RIVER_ID
	f	I	c	SNOWY_TUNDRA_ID
	f	I	d	MUSHROOM_FIELDS_ID
	f	I	e	MUSHROOM_FIELD_SHORE_ID
	f	I	f	RIVER_ID
c	cpu	net/minecraft/world/biome/layer/AddEdgeBiomesLayer
	f	I	b	BEACH_ID
	f	I	c	SNOWY_BEACH_ID
	f	I	d	DESERT_ID
	f	I	e	MOUNTAINS_ID
	f	I	f	WOODED_MOUNTAINS_ID
	f	I	g	FOREST_ID
	f	I	h	JUNGLE_ID
	f	I	i	JUNGLE_EDGE_ID
	f	I	j	JUNGLE_HILLS_ID
	f	I	k	BADLANDS_ID
	f	I	l	WOODED_BADLANDS_PLATEAU_ID
	f	I	m	BADLANDS_PLATEAU_ID
	f	I	n	ERODED_BADLANDS_ID
	f	I	o	MODIFIED_WOODED_BADLANDS_PLATEAU_ID
	f	I	p	MODIFIED_BADLANDS_PLATEAU_ID
	f	I	q	MUSHROOM_FIELDS_ID
	f	I	r	MUSHROOM_FIELD_SHORE_ID
	f	I	s	RIVER_ID
	f	I	t	MOUNTAIN_EDGE_ID
	f	I	u	STONE_SHORE_ID
	f	I	v	SWAMP_ID
	f	I	w	TAIGA_ID
	m	(I)Z	c	isWooded
		p	0	id	id
	m	(I)Z	d	isBadlands
		p	1	id	id
c	cpv	net/minecraft/world/biome/layer/SmoothenShorelineLayer
c	cpw	net/minecraft/world/biome/layer/ScaleLayer
	m	(Lcox;IIII)I	a	sample
		p	1	context	context
c	cpy	net/minecraft/world/biome/layer/type/InitLayer
	m	(Lcoy;II)I	a	sample
		p	1	context	context
		p	2	x	x
		p	3	y	y
	m	(Lcox;)Lcou;	a	create
		p	1	context	context
	m	(Lcox;II)I	a	method_15857
		p	2	x	x
		p	3	z	z
c	cpz	net/minecraft/world/biome/layer/type/ParentedLayer
	m	(Lcox;Lcou;)Lcou;	a	create
		p	1	context	context
		p	2	parent	parent
	m	(Lcox;Lcot;II)I	a	sample
		p	1	context	context
		p	2	parent	parent
		p	3	x	x
		p	4	z	z
c	cq	net/minecraft/server/command/ServerCommandSource
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	REQUIRES_PLAYER_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	REQUIRES_ENTITY_EXCEPTION
	f	Lcp;	c	output
	f	Lcvl;	d	position
	f	Lxd;	e	world
	f	I	f	level
	f	Ljava/lang/String;	g	simpleName
	f	Llf;	h	name
	f	Lnet/minecraft/server/MinecraftServer;	i	minecraftServer
	f	Z	j	silent
	f	Lakq;	k	entity
	f	Lcom/mojang/brigadier/ResultConsumer;	l	resultConsumer
	f	Lcx$a;	m	entityAnchor
	f	Lcvk;	n	rotation
	m	(Lcp;Lcvl;Lcvk;Lxd;ILjava/lang/String;Llf;Lnet/minecraft/server/MinecraftServer;Lakq;ZLcom/mojang/brigadier/ResultConsumer;Lcx$a;)V	<init>	<init>
		p	1	output	output
		p	2	pos	pos
		p	3	rot	rot
		p	4	world	world
		p	5	level	level
		p	6	simpleName	simpleName
		p	7	name	name
		p	8	server	server
		p	9	entity	entity
		p	10	silent	silent
		p	11	resultConsumer	resultConsumer
		p	12	entityAnchor	entityAnchor
	m	(Lcp;Lcvl;Lcvk;Lxd;ILjava/lang/String;Llf;Lnet/minecraft/server/MinecraftServer;Lakq;)V	<init>	<init>
		p	1	output	output
		p	2	pos	pos
		p	3	rot	rot
		p	4	world	world
		p	5	level	level
		p	6	simpleName	simpleName
		p	7	name	name
		p	8	server	server
		p	9	entity	entity
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	onCommandComplete
		p	1	context	context
		p	2	success	success
		p	3	result	result
	m	(Lcx$a;)Lcq;	a	withEntityAnchor
		p	1	anchor	anchor
	m	(Lcvl;)Lcq;	a	withPosition
		p	1	position	position
	m	(Lakq;)Lcq;	a	withEntity
		p	1	entity	entity
	m	(Lcom/mojang/brigadier/ResultConsumer;)Lcq;	a	withConsumer
		p	1	resultConsumer	resultConsumer
	m	()Lcq;	a	withSilent
	m	(Lxd;)Lcq;	a	withWorld
		p	1	world	world
	m	(Llf;)V	a	sendError
		p	1	message	message
	m	(Lcvk;)Lcq;	a	withRotation
		p	1	rotation	rotation
	m	(Lakq;Lcx$a;)Lcq;	a	withLookingAt
		p	1	entity	entity
		p	2	anchor	anchor
	m	(Llf;Z)V	a	sendFeedback
		p	1	message	message
		p	2	broadcastToOps	broadcastToOps
	m	(Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lcq;	a	mergeConsumers
	m	(I)Lcq;	a	withLevel
		p	1	level	level
	m	(Llf;)V	b	sendToOps
		p	1	message	message
	m	(I)Lcq;	b	withMaxLevel
		p	1	level	level
	m	()Llf;	b	getDisplayName
	m	(Lcvl;)Lcq;	b	withLookingAt
		p	1	position	position
	m	()Ljava/lang/String;	c	getName
	m	()Lcvl;	d	getPosition
	m	()Lxd;	e	getWorld
	m	()Lakq;	f	getEntity
	m	()Lakq;	g	getEntityOrThrow
	m	()Lxe;	h	getPlayer
	m	()Lcvk;	i	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	j	getMinecraftServer
	m	()Lcx$a;	k	getEntityAnchor
c	cqa	net/minecraft/world/biome/layer/type/MergingLayer
	m	(Lcox;Lcou;Lcou;)Lcou;	a	create
		p	1	context	context
		p	2	layer1	layer1
		p	3	layer2	layer2
	m	(Lcoy;Lcot;Lcot;II)I	a	sample
		p	1	context	context
		p	2	sampler1	sampler1
		p	3	sampler2	sampler2
		p	4	x	x
		p	5	z	z
c	cqb	net/minecraft/world/biome/layer/type/DiagonalCrossSamplingLayer
	m	(Lcoy;IIIII)I	a	sample
		p	1	context	context
		p	2	sw	sw
		p	3	se	se
		p	4	ne	ne
		p	5	nw	nw
		p	6	center	center
c	cqc	net/minecraft/world/biome/layer/type/IdentitySamplingLayer
	m	(Lcoy;I)I	a	sample
		p	1	context	context
		p	2	value	value
c	cqd	net/minecraft/world/biome/layer/type/SouthEastSamplingLayer
	m	(Lcoy;I)I	a	sample
		p	1	context	context
		p	2	se	se
c	cqe	net/minecraft/world/biome/layer/type/CrossSamplingLayer
	m	(Lcoy;IIIII)I	a	sample
		p	1	context	context
		p	2	n	n
		p	3	e	e
		p	4	s	s
		p	5	w	w
		p	6	center	center
c	cqf	net/minecraft/world/biome/layer/util/IdentityCoordinateTransformer
c	cqg	net/minecraft/world/biome/layer/util/NorthWestCoordinateTransformer
c	cqh	net/minecraft/world/biome/layer/util/CoordinateTransformer
	m	(I)I	a	transformX
		p	1	x	x
	m	(I)I	b	transformZ
		p	1	y	y
c	cqi	net/minecraft/world/biome/layer/util/LayerOperator
	m	(II)I	apply	apply
		p	1	x	x
		p	2	z	z
c	cql	net/minecraft/entity/ai/pathing/PathMinHeap
	f	[Lcqo;	a	pathNodes
	f	I	b	count
	m	(Lcqo;F)V	a	setNodeWeight
		p	1	node	node
	m	()V	a	clear
	m	(Lcqo;)Lcqo;	a	push
		p	1	node	node
	m	(I)V	a	shiftUp
	m	(I)V	b	shiftDown
	m	()Lcqo;	c	pop
	m	()Z	e	isEmpty
c	cqm	net/minecraft/entity/ai/pathing/PathNodeType
	f	F	w	defaultPenalty
	m	()F	a	getDefaultPenalty
c	cqn	net/minecraft/entity/ai/pathing/BirdPathNodeMaker
c	cqo	net/minecraft/entity/ai/pathing/PathNode
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	d	heapIndex
	f	F	e	penalizedPathLength
	f	F	f	distanceToNearestTarget
	f	F	g	heapWeight
	f	Lcqo;	h	previous
	f	Z	i	visited
	f	F	j	pathLength
	f	F	k	penalty
	f	Lcqm;	l	type
	f	I	m	hashCode
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()Lfk;	a	getPos
	m	(III)Lcqo;	a	copyWithNewPosition
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lcqo;)F	a	getDistance
		p	1	node	node
	m	(III)I	b	hash
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lcqo;)F	b	getSquaredDistance
		p	1	node	node
	m	(Lkv;)Lcqo;	b	fromBuffer
		p	0	buffer	buffer
	m	(Lfk;)F	c	getManhattanDistance
		p	1	pos	pos
	m	(Lcqo;)F	c	getManhattanDistance
		p	1	node	node
	m	()Z	c	isInHeap
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	cqp	net/minecraft/entity/ai/pathing/PathNodeMaker
	f	Lala;	b	entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	pathNodeCache
	f	Z	g	canEnterOpenDoors
	f	Z	h	canOpenDoors
	f	Z	i	canSwim
	m	(III)Lcqo;	a	getNode
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbjg;III)Lcqm;	a	getNodeType
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lbjg;IIILala;IIIZZ)Lcqm;	a	getNodeType
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	mob	mob
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	canOpenDoors	canOpenDoors
		p	10	canEnterOpenDoors	canEnterOpenDoors
	m	(DDD)Lcqu;	a	getNode
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()V	a	clear
	m	([Lcqo;Lcqo;)I	a	getSuccessors
		p	1	successors	successors
		p	2	node	node
	m	(Z)V	a	setCanEnterOpenDoors
		p	1	canEnterOpenDoors	canEnterOpenDoors
	m	(Lbkh;Lala;)V	a	init
	m	()Lcqo;	b	getStart
	m	(Z)V	b	setCanOpenDoors
		p	1	canOpenDoors	canOpenDoors
	m	(Z)V	c	setCanSwim
		p	1	canSwim	canSwim
	m	()Z	c	canEnterOpenDoors
	m	()Z	d	canOpenDoors
	m	()Z	e	canSwim
c	cqq	net/minecraft/entity/ai/pathing/Path
	f	Ljava/util/List;	a	nodes
	f	I	e	currentNodeIndex
	f	Lfk;	f	target
	f	F	g	manhattanDistanceFromTarget
	f	Z	h	reachesTarget
	m	(Ljava/util/List;Lfk;Z)V	<init>	<init>
		p	1	nodes	nodes
		p	2	target	target
		p	3	reachesTarget	reachesTarget
	m	(ILcqo;)V	a	setNode
		p	1	index	index
		p	2	node	node
	m	(I)Lcqo;	a	getNode
		p	1	index	index
	m	(Lakq;)Lcvl;	a	getNodePosition
	m	(Lcqq;)Z	a	equalsPath
	m	()V	a	next
	m	(Lakq;I)Lcvl;	a	getNodePosition
		p	1	entity	entity
		p	2	index	index
	m	()Z	b	isFinished
	m	(Lkv;)Lcqq;	b	fromBuffer
		p	0	buffer	buffer
	m	(I)V	b	setLength
		p	1	length	length
	m	(I)V	c	setCurrentNodeIndex
		p	1	index	index
	m	()Lcqo;	c	getEnd
	m	()Ljava/util/List;	d	getNodes
	m	()I	e	getLength
	m	()I	f	getCurrentNodeIndex
	m	()Lcvl;	g	getCurrentPosition
	m	()Z	h	reachesTarget
	m	()Lfk;	k	getTarget
	m	()F	l	getManhattanDistanceFromTarget
c	cqr	net/minecraft/block/BlockPlacementEnvironment
c	cqs	net/minecraft/entity/ai/pathing/PathNodeNavigator
	f	Lcql;	a	minHeap
	f	[Lcqo;	c	successors
	f	I	d	range
	f	Lcqp;	e	pathNodeMaker
	m	(Lcqp;I)V	<init>	<init>
		p	1	pathNodeMaker	pathNodeMaker
		p	2	range	range
	m	(Lcqo;Ljava/util/Map;FIF)Lcqq;	a	findPathToAny
		p	1	startNode	startNode
		p	2	positions	positions
		p	3	followRange	followRange
		p	4	distance	distance
		p	5	rangeMultiplier	rangeMultiplier
	m	(Lbkh;Lala;Ljava/util/Set;FIF)Lcqq;	a	findPathToAny
		p	1	world	world
		p	2	mob	mob
		p	3	positions	positions
		p	4	followRange	followRange
		p	5	distance	distance
		p	6	rangeMultiplier	rangeMultiplier
	m	(Lcqo;Lfk;Z)Lcqq;	a	createPath
		p	1	endNode	endNode
		p	2	target	target
		p	3	reachesTarget	reachesTarget
	m	(Lcqo;Ljava/util/Set;)F	a	calculateDistances
		p	1	node	node
		p	2	targets	targets
c	cqt	net/minecraft/entity/ai/pathing/WaterPathNodeMaker
	m	(III)Lcqo;	b	getPathNodeInWater
		p	1	x	x
		p	2	y	y
	m	(III)Lcqm;	c	getNodeType
		p	1	x	x
		p	2	y	y
c	cqu	net/minecraft/entity/ai/pathing/TargetPathNode
	f	F	m	nearestNodeDistance
	f	Lcqo;	n	nearestNode
	f	Z	o	reached
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lcqo;)V	<init>	<init>
		p	1	node	node
	m	(FLcqo;)V	a	updateNearestNode
		p	1	distance	distance
		p	2	node	node
	m	(Lkv;)Lcqu;	c	fromBuffer
		p	0	buffer	buffer
	m	()Lcqo;	d	getNearestNode
	m	()V	e	markReached
	m	()Z	f	isReached
c	cqv	net/minecraft/entity/ai/pathing/AmphibiousPathNodeMaker
c	cqw	net/minecraft/entity/ai/pathing/LandPathNodeMaker
	f	F	j	waterPathNodeTypeWeight
	m	(Lbjg;ZZLfk;Lcqm;)Lcqm;	a	adjustNodeType
		p	1	world	world
		p	2	canOpenDoors	canOpenDoors
		p	3	canEnterOpenDoors	canEnterOpenDoors
		p	4	pos	pos
		p	5	type	type
	m	(Lala;III)Lcqm;	a	getNodeType
		p	1	entity	entity
		p	2	x	x
		p	3	y	y
	m	(Lbjg;IIIIIIZZLjava/util/EnumSet;Lcqm;Lfk;)Lcqm;	a	getNodeType
		p	1	world	world
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	sizeX	sizeX
		p	6	sizeY	sizeY
		p	7	sizeZ	sizeZ
		p	8	canOpenDoors	canOpenDoors
		p	9	canEnterOpenDoors	canEnterOpenDoors
		p	10	nearbyTypes	nearbyTypes
		p	11	type	type
		p	12	pos	pos
	m	(Lbjg;Lfk;)D	a	getHeight
		p	0	world	world
		p	1	pos	pos
	m	(IIIIDLfp;)Lcqo;	a	getPathNode
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	maxYStep	maxYStep
		p	5	height	height
		p	7	direction	direction
	m	(Lala;Lfk;)Lcqm;	a	getNodeType
		p	1	entity	entity
	m	(Lcqo;Lcqo;Lcqo;Lcqo;)Z	a	isValidDiagonalSuccessor
		p	1	node	node
		p	2	successor1	successor1
		p	3	successor2	successor2
		p	4	diagonalSuccessor	diagonalSuccessor
	m	(Lbjg;III)Lcqm;	b	getPathNodeType
		p	0	world	world
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbjg;III)Lcqm;	c	getBasicPathNodeType
c	cr	net/minecraft/server/command/CommandManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/CommandDispatcher;	b	dispatcher
	m	(Z)V	<init>	<init>
		p	1	isDedicatedServer	isDedicatedServer
	m	(Lcr$a;)Ljava/util/function/Predicate;	a	getCommandValidator
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcq;Ljava/util/Map;)V	a	makeTreeForSource
		p	1	tree	tree
		p	2	result	result
		p	3	source	source
		p	4	resultNodes	resultNodes
	m	(Lcq;Ljava/lang/String;)I	a	execute
		p	1	commandSource	commandSource
		p	2	command	command
	m	(Lxe;)V	a	sendCommandTree
		p	1	player	player
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	0	name	name
		p	1	type	type
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	getException
		p	0	parse	parse
c	cr$a	net/minecraft/server/command/CommandManager$CommandParser
c	cra	net/minecraft/scoreboard/ScoreboardSynchronizer
	f	Lcrb;	a	compound
	m	(Lcrb;)V	<init>	<init>
		p	1	compound	compound
c	crb	net/minecraft/world/PersistentState
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	key
	f	Z	c	dirty
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Z)V	a	setDirty
		p	1	dirty	dirty
	m	(Ljt;)V	a	fromTag
		p	1	tag	tag
	m	(Ljava/io/File;)V	a	save
	m	(Ljt;)Ljt;	b	toTag
		p	1	tag	tag
	m	()V	b	markDirty
	m	()Z	c	isDirty
	m	()Ljava/lang/String;	d	getId
c	crc	net/minecraft/item/map/MapBannerMarker
	f	Lfk;	a	pos
	f	Lbdj;	b	color
	f	Llf;	c	name
	m	(Lfk;Lbdj;Llf;)V	<init>	<init>
		p	1	pos	pos
		p	2	dyeColor	dyeColor
		p	3	name	name
	m	()Lfk;	a	getPos
	m	(Ljt;)Lcrc;	a	fromNbt
		p	0	tag	tag
	m	(Lbjg;Lfk;)Lcrc;	a	fromWorldBlock
		p	0	blockView	blockView
		p	1	blockPos	blockPos
	m	()Lcrd$a;	c	getIconType
	m	()Llf;	d	getName
	m	()Ljt;	e	getNbt
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/lang/String;	f	getKey
c	crd	net/minecraft/item/map/MapIcon
	f	Lcrd$a;	a	type
	f	B	b	x
	f	B	c	z
	f	B	d	rotation
	f	Llf;	e	text
	m	(Lcrd$a;BBBLlf;)V	<init>	<init>
		p	1	type	type
		p	2	x	x
		p	3	z	z
		p	4	rotation	rotation
		p	5	text	text
	m	()B	a	getTypeId
	m	()Lcrd$a;	b	getType
	m	()B	c	getX
	m	()B	d	getZ
	m	()B	e	getRotation
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Z	f	isAlwaysRendered
	m	()Llf;	g	getText
c	crd$a	net/minecraft/item/map/MapIcon$Type
	f	B	B	id
	f	Z	C	alwaysRender
	f	I	D	tintColor
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3	renderNotHeld	renderNotHeld
	m	(Ljava/lang/String;IZI)V	<init>	<init>
		p	3	alwaysRender	alwaysRender
		p	4	tintColor	tintColor
	m	()B	a	getId
	m	(B)Lcrd$a;	a	byId
		p	0	id	id
	m	()Z	b	isAlwaysRendered
	m	()Z	c	hasTintColor
	m	()I	d	getTintColor
c	cre	net/minecraft/item/map/MapFrameMarker
	f	Lfk;	a	pos
	f	I	b	rotation
	f	I	c	entityId
	m	(Lfk;II)V	<init>	<init>
		p	1	pos	pos
		p	2	rotation	rotation
		p	3	entityId	entityId
	m	(Lfk;)Ljava/lang/String;	a	getKey
		p	0	pos	pos
	m	()Ljt;	a	toTag
	m	(Ljt;)Lcre;	a	fromTag
		p	0	tag	tag
	m	()Lfk;	b	getPos
	m	()I	c	getRotation
	m	()I	d	getEntityId
	m	()Ljava/lang/String;	e	getKey
c	crf	net/minecraft/world/IdCountsState
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	idCounts
	m	()I	a	getNextMapId
c	crg	net/minecraft/item/map/MapState
	f	I	a	xCenter
	f	I	b	zCenter
	f	Lcbi;	c	dimension
	f	Z	d	showIcons
	f	Z	e	unlimitedTracking
	f	B	f	scale
	f	[B	g	colors
	f	Z	h	locked
	f	Ljava/util/List;	i	updateTrackers
	f	Ljava/util/Map;	j	icons
	f	Ljava/util/Map;	k	updateTrackersByPlayer
	f	Ljava/util/Map;	l	banners
	f	Ljava/util/Map;	m	frames
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(DDI)V	a	calculateCenter
		p	1	x	x
		p	3	z	z
		p	5	scale	scale
	m	(Lfk;I)V	a	removeFrame
		p	1	pos	pos
		p	2	id	id
	m	(Lcrd$a;Lbjx;Ljava/lang/String;DDDLlf;)V	a	addIcon
		p	1	type	type
		p	2	world	world
		p	3	key	key
		p	4	x	x
		p	6	z	z
		p	8	rotation	rotation
		p	10	text	text
	m	(Lbjx;Lfk;)V	a	addBanner
		p	1	world	world
		p	2	pos	pos
	m	(Lbjg;II)V	a	removeBanner
		p	1	world	world
		p	2	x	x
		p	3	z	z
	m	(Lben;Lfk;Ljava/lang/String;Lcrd$a;)V	a	addDecorationsTag
		p	0	stack	stack
		p	1	pos	pos
		p	2	id	id
		p	3	type	type
	m	(Layj;)Lcrg$a;	a	getPlayerSyncData
		p	1	player	player
	m	(Layj;Lben;)V	a	update
		p	1	player	player
		p	2	stack	stack
	m	(II)V	a	markDirty
		p	1	x	x
		p	2	z	z
	m	(Lcrg;)V	a	copyFrom
		p	1	state	state
	m	(Lben;Lbjg;Layj;)Llt;	a	getPlayerMarkerPacket
		p	1	map	map
		p	2	world	world
		p	3	pos	pos
	m	(IIIZZLcbi;)V	a	init
		p	1	x	x
		p	2	z	z
		p	3	scale	scale
		p	4	showIcons	showIcons
		p	5	unlimitedTracking	unlimitedTracking
		p	6	dimension	dimension
c	crg$a	net/minecraft/item/map/MapState$PlayerUpdateTracker
	f	Layj;	a	player
	f	Z	d	dirty
	f	I	e	startX
	f	I	f	startZ
	f	I	g	endX
	f	I	h	endZ
	f	I	i	emptyPacketsRequested
	m	(Lcrg;Layj;)V	<init>	<init>
		p	1	player	player
	m	(II)V	a	markDirty
		p	1	x	x
		p	2	z	z
	m	(Lben;)Llt;	a	getPacket
		p	1	stack	stack
c	crj	net/minecraft/command/DataCommandStorage
	f	Ljava/util/Map;	a	storages
	f	Lcrl;	b	stateManager
	m	(Lcrl;)V	<init>	<init>
		p	1	stateManager	stateManager
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getSaveKey
		p	0	namespace	namespace
	m	()Ljava/util/stream/Stream;	a	getIds
	m	(Lsm;Ljt;)V	a	set
		p	1	id	id
		p	2	tag	tag
	m	(Ljava/lang/String;Ljava/lang/String;)Lcrj$a;	a	createStorage
		p	1	namespace	namespace
		p	2	saveKey	saveKey
	m	(Lsm;)Ljt;	a	get
		p	1	id	id
c	crj$a	net/minecraft/command/DataCommandStorage$PersistentState
	f	Ljava/util/Map;	a	map
	m	(Ljava/lang/String;Ljt;)V	a	set
		p	1	name	name
		p	2	tag	tag
	m	(Ljava/lang/String;)Ljt;	a	get
		p	1	name	name
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	b	getIds
		p	1	namespace	namespace
c	crk	net/minecraft/world/level/UnmodifiableLevelProperties
	f	Lcrm;	b	properties
c	crl	net/minecraft/world/PersistentStateManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	loadedStates
	f	Lcom/mojang/datafixers/DataFixer;	c	dataFixer
	f	Ljava/io/File;	d	directory
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1	directory	directory
		p	2	dataFixer	dataFixer
	m	(Lcrb;)V	a	set
		p	1	state	state
	m	(Ljava/lang/String;)Ljava/io/File;	a	getFile
		p	1	id	id
	m	(Ljava/lang/String;I)Ljt;	a	readTag
		p	1	id	id
		p	2	dataVersion	dataVersion
	m	()V	a	save
	m	(Ljava/io/PushbackInputStream;)Z	a	isCompressed
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)Lcrb;	a	getOrCreate
		p	1	factory	factory
		p	2	id	id
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)Lcrb;	b	get
		p	1	factory	factory
		p	2	id	id
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)Lcrb;	c	readFromFile
		p	1	factory	factory
		p	2	id	id
c	crm	net/minecraft/world/level/LevelProperties
	f	Lbjt;	A	gameMode
	f	Z	B	structures
	f	Z	C	hardcore
	f	Z	D	commandsAllowed
	f	Z	E	initialized
	f	Laji;	F	difficulty
	f	Z	G	difficultyLocked
	f	D	H	borderCenterX
	f	D	I	borderCenterZ
	f	D	J	borderSize
	f	J	K	borderSizeLerpTime
	f	D	L	borderSizeLerpTarget
	f	D	M	borderSafeZone
	f	D	N	borderDamagePerBlock
	f	I	O	borderWarningBlocks
	f	I	P	borderWarningTime
	f	Ljava/util/Set;	Q	disabledDataPacks
	f	Ljava/util/Set;	R	enabledDataPacks
	f	Ljava/util/Map;	S	worldData
	f	Ljt;	T	customBossEvents
	f	I	U	wanderingTraderSpawnDelay
	f	I	V	wanderingTraderSpawnChance
	f	Ljava/util/UUID;	W	wanderingTraderId
	f	Lbjs;	Z	gameRules
	f	Laji;	a	DEFAULT_DIFFICULTY
	f	Lcvc;	aa	scheduledEvents
	f	Ljava/lang/String;	b	versionName
	f	I	c	versionId
	f	Z	d	versionSnapshot
	f	J	e	randomSeed
	f	Lbkd;	f	generatorType
	f	Ljt;	g	generatorOptions
	f	Ljava/lang/String;	h	legacyCustomOptions
	f	I	i	spawnX
	f	I	j	spawnY
	f	I	k	spawnZ
	f	J	l	time
	f	J	m	timeOfDay
	f	J	n	lastPlayed
	f	J	o	sizeOnDisk
	f	Lcom/mojang/datafixers/DataFixer;	p	dataFixer
	f	I	q	playerWorldId
	f	Z	r	playerDataLoaded
	f	Ljt;	s	playerData
	f	Ljava/lang/String;	t	levelName
	f	I	u	version
	f	I	v	clearWeatherTime
	f	Z	w	raining
	f	I	x	rainTime
	f	Z	y	thundering
	f	I	z	thunderTime
	m	(Lbka;Ljava/lang/String;)V	<init>	<init>
		p	2	levelName	levelName
	m	()Ljt;	A	getGeneratorOptions
	m	()D	B	getBorderCenterX
	m	()D	C	getBorderCenterZ
	m	()D	D	getBorderSize
	m	()J	E	getBorderSizeLerpTime
	m	()D	F	getBorderSizeLerpTarget
	m	()D	G	getBorderSafeZone
	m	()D	H	getBorderDamagePerBlock
	m	()I	I	getBorderWarningBlocks
	m	()I	J	getBorderWarningTime
	m	()I	K	getVersionId
	m	()Z	L	isVersionSnapshot
	m	()Ljava/lang/String;	M	getVersionName
	m	()Ljava/util/Set;	N	getDisabledDataPacks
	m	()Ljava/util/Set;	O	getEnabledDataPacks
	m	()Ljt;	P	getCustomBossEvents
	m	()I	Q	getWanderingTraderSpawnDelay
	m	()I	R	getWanderingTraderSpawnChance
	m	()V	T	loadPlayerData
	m	(Lbjt;)V	a	setGameMode
	m	(Ljava/lang/String;)V	a	setLevelName
		p	1	levelName	levelName
	m	(Ljt;)Ljt;	a	cloneWorldTag
		p	1	playerTag	playerTag
	m	(J)V	a	setTime
		p	1	time	time
	m	(Li;)V	a	populateCrashReport
	m	(Lbka;)V	a	loadLevelInfo
		p	1	levelInfo	levelInfo
	m	(Lcbi;)Ljt;	a	getWorldData
	m	(I)V	a	setSpawnX
		p	1	spawnX	spawnX
	m	(Lcbi;Ljt;)V	a	setWorldData
		p	1	type	type
	m	(Laji;)V	a	setDifficulty
	m	(Lbkd;)V	a	setGeneratorType
	m	(Ljt;Ljt;)V	a	updateProperties
		p	1	levelTag	levelTag
		p	2	playerTag	playerTag
	m	(D)V	a	setBorderSize
		p	1	borderSize	borderSize
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1	wanderingTraderId	wanderingTraderId
	m	(Z)V	a	setThundering
		p	1	thundering	thundering
	m	(Lfk;)V	a	setSpawnPos
	m	()J	a	getSeed
	m	(Z)V	b	setRaining
		p	1	raining	raining
	m	(J)V	b	setTimeOfDay
		p	1	timeOfDay	timeOfDay
	m	(I)V	b	setSpawnY
		p	1	spawnY	spawnY
	m	()I	b	getSpawnX
	m	(Ljt;)V	b	setGeneratorOptions
	m	(D)V	b	setBorderSizeLerpTarget
		p	1	borderSizeLerpTarget	borderSizeLerpTarget
	m	()I	c	getSpawnY
	m	(I)V	c	setSpawnZ
		p	1	spawnZ	spawnZ
	m	(Ljt;)V	c	setCustomBossEvents
		p	1	customBossEvents	customBossEvents
	m	(J)J	c	sha256Hash
		p	0	seed	seed
	m	(Z)V	c	setCommandsAllowed
		p	1	commandsAllowed	commandsAllowed
	m	(D)V	c	borderCenterZ
		p	1	borderCenterZ	borderCenterZ
	m	()I	d	getSpawnZ
	m	(D)V	d	setBorderCenterX
		p	1	borderCenterX	borderCenterX
	m	(Z)V	d	setInitialized
		p	1	initialized	initialized
	m	(J)V	d	setBorderSizeLerpTime
		p	1	borderSizeLerpTime	borderSizeLerpTime
	m	(I)V	d	setVersion
		p	1	version	version
	m	(Z)V	e	setDifficultyLocked
		p	1	difficultyLocked	difficultyLocked
	m	(I)V	e	setThunderTime
		p	1	thunderTime	thunderTime
	m	()J	e	getTime
	m	(D)V	e	setBorderSafeZone
		p	1	borderSafeZone	borderSafeZone
	m	(D)V	f	setBorderDamagePerBlock
		p	1	borderDamagePerBlock	borderDamagePerBlock
	m	(Z)V	f	setStructures
		p	1	structures	structures
	m	()J	f	getTimeOfDay
	m	(I)V	f	setRainTime
		p	1	rainTime	rainTime
	m	(Z)V	g	setHardcore
		p	1	hardcore	hardcore
	m	(I)V	g	setClearWeatherTime
		p	1	clearWeatherTime	clearWeatherTime
	m	()Ljt;	h	getPlayerData
	m	(I)V	h	setBorderWarningBlocks
		p	1	borderWarningBlocks	borderWarningBlocks
	m	()Ljava/lang/String;	i	getLevelName
	m	(I)V	i	setBorderWarningTime
		p	1	borderWarningTime	borderWarningTime
	m	(I)V	j	setWanderingTraderSpawnDelay
		p	1	wanderingTraderSpawnDelay	wanderingTraderSpawnDelay
	m	()I	j	getVersion
	m	(I)V	k	setWanderingTraderSpawnChance
		p	1	wanderingTraderSpawnChance	wanderingTraderSpawnChance
	m	()J	k	getLastPlayed
	m	()Z	l	isThundering
	m	()I	m	getThunderTime
	m	()Z	n	isRaining
	m	()I	o	getRainTime
	m	()Lbjt;	p	getGameMode
	m	()Z	q	hasStructures
	m	()Z	r	isHardcore
	m	()Lbkd;	s	getGeneratorType
	m	()Z	t	areCommandsAllowed
	m	()Z	u	isInitialized
	m	()Lbjs;	v	getGameRules
	m	()Laji;	w	getDifficulty
	m	()Z	x	isDifficultyLocked
	m	()Lcvc;	y	getScheduledEvents
	m	()I	z	getClearWeatherTime
c	crn	net/minecraft/world/WorldSaveHandler
	f	Lcom/mojang/datafixers/DataFixer;	a	dataFixer
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	worldDir
	f	Ljava/io/File;	d	playerDataDir
	f	J	e	saveStartTime
	f	Ljava/lang/String;	f	worldName
	f	Lcmo;	g	structureManager
	m	(Ljava/io/File;Ljava/lang/String;Lnet/minecraft/server/MinecraftServer;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1	worldsDirectory	worldsDirectory
		p	2	worldName	worldName
		p	3	server	server
		p	4	dataFixer	dataFixer
	m	(Lcrm;Ljt;)V	a	saveWorld
	m	()Ljava/io/File;	a	getWorldDir
	m	(Lcrm;)V	a	saveWorld
	m	()V	b	checkSessionLock
	m	()Lcrm;	c	readProperties
	m	()[Ljava/lang/String;	d	getSavedPlayerIds
	m	()Lcmo;	f	getStructureManager
	m	()Lcom/mojang/datafixers/DataFixer;	g	getDataFixer
	m	()V	h	writeSessionLock
c	cro	net/minecraft/world/level/storage/LevelStorageException
c	crp	net/minecraft/world/level/storage/LevelStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	TIME_FORMATTER
	f	Ljava/nio/file/Path;	c	savesDirectory
	f	Ljava/nio/file/Path;	d	backupsDirectory
	f	Lcom/mojang/datafixers/DataFixer;	e	dataFixer
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1	savesDirectory	savesDirectory
		p	2	backupsDirectory	backupsDirectory
		p	3	dataFixer	dataFixer
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	renameLevel
		p	1	name	name
		p	2	newName	newName
	m	([Ljava/io/File;)Z	a	deleteFilesRecursively
		p	0	files	files
	m	(Ljava/lang/String;Labs;)Z	a	convertLevel
		p	1	name	name
		p	2	progressListener	progressListener
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lcrm;	a	readLevelProperties
		p	0	file	file
		p	1	dataFixer	dataFixer
	m	(Ljava/lang/String;)Z	a	requiresConversion
		p	1	name	name
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)Lcrm;	a	getLevelProperties
		p	0	savesDirectory	savesDirectory
		p	1	dataFixer	dataFixer
		p	2	name	name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;Lnet/minecraft/server/MinecraftServer;)Lcrn;	a	createSaveHandler
		p	1	name	name
		p	2	server	server
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;Lnet/minecraft/server/MinecraftServer;)Lcrn;	a	createSaveHandler
		p	0	savesDirectory	savesDirectory
		p	1	dataFixer	dataFixer
		p	2	name	name
		p	3	server	server
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;	b	resolveFile
	m	()Ljava/util/List;	b	getLevelList
	m	(Ljava/lang/String;)Lcrm;	b	getLevelProperties
	m	()Ljava/nio/file/Path;	c	getSavesDirectory
	m	(Ljava/lang/String;)Z	c	isLevelNameValid
	m	(Ljava/lang/String;)Z	d	deleteLevel
		p	1	name	name
	m	()Ljava/nio/file/Path;	d	getBackupsDirectory
	m	()I	e	getCurrentVersion
	m	(Ljava/lang/String;)Z	e	levelExists
		p	1	name	name
	m	(Ljava/lang/String;)J	f	backupLevel
		p	1	name	name
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	g	resolvePath
c	crp$1	net/minecraft/world/level/storage/LevelStorage$1
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
c	crq	net/minecraft/world/level/storage/LevelSummary
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	displayName
	f	J	c	lastPlayed
	f	J	d	getSizeOnDisk
	f	Z	e	requiresConversion
	f	Lbjt;	f	gameMode
	f	Z	g	isHardcore
	f	Z	h	commandsAllowed
	f	Ljava/lang/String;	i	versionName
	f	I	j	versionId
	f	Z	k	isSnapshot
	f	Lbkd;	l	generatorType
	m	(Lcrm;Ljava/lang/String;Ljava/lang/String;JZ)V	<init>	<init>
		p	1	properties	properties
		p	2	name	name
		p	3	displayName	displayName
		p	4	size	size
		p	6	requiresConversion	requiresConversion
	m	(Lcrq;)I	a	compareTo
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getDisplayName
	m	()J	c	getSizeOnDisk
	m	()Z	d	requiresConversion
	m	()J	e	getLastPlayed
	m	()Lbjt;	f	getGameMode
	m	()Z	g	isHardcore
	m	()Z	h	hasCheats
	m	()Llf;	i	getVersion
	m	()Z	l	isDifferentVersion
	m	()Z	m	isFutureLevel
	m	()Z	n	isLegacyCustomizedWorld
	m	()Z	o	isOutdatedLevel
c	crr	net/minecraft/world/level/storage/AnvilLevelStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljava/io/File;Ljava/lang/Iterable;Lbkw;IILabs;)V	a	convertRegions
		p	4	currentCount	currentCount
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;Labs;)Z	a	convertLevel
	m	(Ljava/io/File;Ljava/util/Collection;)V	a	addRegionFiles
	m	(Ljava/io/File;Ljava/io/File;Lbkw;IILabs;)V	a	convertRegion
		p	1	baseFolder	baseFolder
		p	4	progressStart	progressStart
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	makeMcrLevelDatBackup
c	crs	net/minecraft/world/PlayerSaveHandler
	m	(Layj;)V	a	savePlayerData
	m	(Layj;)Ljt;	b	loadPlayerData
c	crt	net/minecraft/loot/BinomialLootTableRange
	f	I	d	n
	f	F	e	p
	m	(IF)V	<init>	<init>
		p	1	n	n
		p	2	p	p
	m	(IF)Lcrt;	a	create
		p	0	n	n
		p	1	p	p
c	crt$a	net/minecraft/loot/BinomialLootTableRange$Serializer
	m	(Lcrt;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcrt;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	range	range
		p	2	unused	unused
		p	3	context	context
c	cru	net/minecraft/loot/LootTables
	f	Lsm;	L	WHITE_SHEEP_ENTITY
	f	Lsm;	M	ORANGE_SHEEP_ENTITY
	f	Lsm;	N	MAGENTA_SHEEP_ENTITY
	f	Lsm;	O	LIGHT_BLUE_SHEEP_ENTITY
	f	Lsm;	P	YELLOW_SHEEP_ENTITY
	f	Lsm;	Q	LIME_SHEEP_ENTITY
	f	Lsm;	R	PINK_SHEEP_ENTITY
	f	Lsm;	S	GRAY_SHEEP_ENTITY
	f	Lsm;	T	LIGHT_GRAY_SHEEP_ENTITY
	f	Lsm;	U	CYAN_SHEEP_ENTITY
	f	Lsm;	V	PURPLE_SHEEP_ENTITY
	f	Lsm;	W	BLUE_SHEEP_ENTITY
	f	Lsm;	X	BROWN_SHEEP_ENTITY
	f	Lsm;	Y	GREEN_SHEEP_ENTITY
	f	Lsm;	Z	RED_SHEEP_ENTITY
	f	Lsm;	a	EMPTY
	f	Lsm;	aa	BLACK_SHEEP_ENTITY
	f	Ljava/util/Set;	at	LOOT_TABLES
	f	Ljava/util/Set;	au	LOOT_TABLES_READ_ONLY
	f	Lsm;	b	SPAWN_BONUS_CHEST
	f	Lsm;	e	VILLAGE_WEAPONSMITH_CHEST
	f	Lsm;	f	VILLAGE_TOOLSMITH_CHEST
	f	Lsm;	g	VILLAGE_ARMORER_CHEST
	f	Lsm;	h	VILLAGE_CARTOGRAPHER_CHEST
	f	Lsm;	i	VILLAGE_MASON_CHEST
	f	Lsm;	j	VILLAGE_SHEPARD_CHEST
	f	Lsm;	k	VILLAGE_BUTCHER_CHEST
	f	Lsm;	l	VILLAGE_FLETCHER_CHEST
	f	Lsm;	m	VILLAGE_FISHER_CHEST
	f	Lsm;	n	VILLAGE_TANNERY_CHEST
	f	Lsm;	o	VILLAGE_TEMPLE_CHEST
	f	Lsm;	p	VILLAGE_DESERT_HOUSE_CHEST
	f	Lsm;	q	VILLAGE_PLAINS_CHEST
	f	Lsm;	r	VILLAGE_TAIGA_HOUSE_CHEST
	f	Lsm;	s	VILLAGE_SNOWY_HOUSE_CHEST
	f	Lsm;	t	VILLAGE_SAVANNA_HOUSE_CHEST
	m	()Ljava/util/Set;	a	getAll
	m	(Ljava/lang/String;)Lsm;	a	register
		p	0	id	id
	m	(Lsm;)Lsm;	a	registerLootTable
		p	0	id	id
c	crv	net/minecraft/loot/ConstantLootTableRange
	f	I	d	value
	m	(I)V	<init>	<init>
		p	1	value	value
	m	(I)Lcrv;	a	create
		p	0	value	value
c	crv$a	net/minecraft/loot/ConstantLootTableRange$Serializer
	m	(Lcrv;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcrv;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	range	range
		p	2	unused	unused
		p	3	context	context
c	crw	net/minecraft/util/BoundedIntUnaryOperator
	f	Ljava/lang/Integer;	a	min
	f	Ljava/lang/Integer;	b	max
	f	Ljava/util/function/IntUnaryOperator;	c	operator
	m	(II)Lcrw;	a	create
	m	(I)Lcrw;	a	createMin
	m	(I)Lcrw;	b	createMax
c	crw$a	net/minecraft/util/BoundedIntUnaryOperator$Serializer
	m	(Lcrw;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcrw;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	crx	net/minecraft/loot/context/LootContext
	f	Ljava/util/Random;	a	random
	f	F	b	luck
	f	Lxd;	c	world
	f	Ljava/util/function/Function;	d	supplierGetter
	f	Ljava/util/Set;	e	suppliers
	f	Ljava/util/function/Function;	f	conditionGetter
	f	Ljava/util/Set;	g	conditions
	f	Ljava/util/Map;	h	parameters
	f	Ljava/util/Map;	i	drops
	m	(Lsm;)Lcsa;	a	getSupplier
		p	1	id	id
	m	(Lctx;)Z	a	hasParameter
		p	1	parameter	parameter
	m	(Lsm;Ljava/util/function/Consumer;)V	a	drop
		p	1	id	id
		p	2	itemDropper	itemDropper
	m	(Lcum;)Z	a	addCondition
		p	1	condition	condition
	m	(Lcsa;)Z	a	addDrop
		p	1	supplier	supplier
	m	()Ljava/util/Random;	a	getRandom
	m	(Lcsa;)V	b	removeDrop
		p	1	supplier	supplier
	m	(Lsm;)Lcum;	b	getCondition
		p	1	id	id
	m	()F	b	getLuck
	m	(Lcum;)V	b	removeCondition
		p	1	condition	condition
	m	()Lxd;	c	getWorld
	m	(Lctx;)Ljava/lang/Object;	c	get
		p	1	parameter	parameter
c	crx$a	net/minecraft/loot/context/LootContext$Builder
	f	Lxd;	a	world
	f	Ljava/util/Map;	b	parameters
	f	Ljava/util/Map;	c	drops
	f	Ljava/util/Random;	d	random
	f	F	e	luck
	m	(Lxd;)V	<init>	<init>
		p	1	world	world
	m	(Lcty;)Lcrx;	a	build
		p	1	type	type
	m	(JLjava/util/Random;)Lcrx$a;	a	setRandom
		p	1	seed	seed
		p	3	random	random
	m	(Lctx;Ljava/lang/Object;)Lcrx$a;	a	put
		p	1	key	key
		p	2	value	value
	m	(F)Lcrx$a;	a	setLuck
		p	1	luck	luck
	m	()Lxd;	a	getWorld
	m	(Ljava/util/Random;)Lcrx$a;	a	setRandom
		p	1	random	random
	m	(Lctx;)Ljava/lang/Object;	a	get
		p	1	parameter	parameter
	m	(Lsm;Lcrx$b;)Lcrx$a;	a	putDrop
		p	1	id	id
		p	2	value	value
	m	(J)Lcrx$a;	a	setRandom
		p	1	seed	seed
	m	(Lctx;Ljava/lang/Object;)Lcrx$a;	b	putNullable
		p	1	key	key
		p	2	value	value
	m	(Lctx;)Ljava/lang/Object;	b	getNullable
		p	1	parameter	parameter
c	crx$b	net/minecraft/loot/context/LootContext$Dropper
	m	(Lcrx;Ljava/util/function/Consumer;)V	add	add
		p	1	context	context
c	crx$c	net/minecraft/loot/context/LootContext$EntityTarget
	f	Ljava/lang/String;	e	type
	f	Lctx;	f	parameter
	m	(Ljava/lang/String;ILjava/lang/String;Lctx;)V	<init>	<init>
		p	3	type	type
		p	4	parameter	parameter
	m	()Lctx;	a	getParameter
	m	(Ljava/lang/String;)Lcrx$c;	a	fromString
		p	0	type	type
c	crx$c$a	net/minecraft/loot/context/LootContext$EntityTarget$Serializer
	m	(Lcom/google/gson/stream/JsonWriter;Lcrx$c;)V	a	write
	m	(Lcom/google/gson/stream/JsonReader;)Lcrx$c;	a	read
	m	(Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object;	read	read
		p	1	reader	reader
	m	(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V	write	write
		p	1	writer	writer
		p	2	entity	entity
c	cry	net/minecraft/loot/context/LootContextAware
	m	()Ljava/util/Set;	a	getRequiredParameters
	m	(Lcsg;)V	a	check
		p	1	reporter	reporter
c	crz	net/minecraft/loot/LootPool
	f	[Lcsq;	a	entries
	f	[Lcum;	b	conditions
	f	Ljava/util/function/Predicate;	c	predicate
	f	[Lcti;	d	functions
	f	Ljava/util/function/BiFunction;	e	javaFunctions
	f	Lcsd;	f	rollsRange
	f	Lcsf;	g	bonusRollsRange
	m	([Lcsq;[Lcum;[Lcti;Lcsd;Lcsf;)V	<init>	<init>
		p	1	entries	entries
		p	2	conditions	conditions
		p	3	functions	functions
		p	4	rollsRange	rollsRange
		p	5	bonusRollsRange	bonusRollsRange
	m	(Ljava/util/function/Consumer;Lcrx;)V	a	drop
		p	1	itemDropper	itemDropper
		p	2	context	context
	m	()Lcrz$a;	a	builder
	m	(Lcrx;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Lcsp;)V	a	method_342
		p	3	choice	choice
	m	(Lcsg;)V	a	check
	m	(Ljava/util/function/Consumer;Lcrx;)V	b	supplyOnce
		p	1	itemDropper	itemDropper
		p	2	context	context
c	crz$a	net/minecraft/loot/LootPool$Builder
	f	Ljava/util/List;	a	entries
	f	Ljava/util/List;	b	conditions
	f	Ljava/util/List;	c	functions
	f	Lcsd;	d	rollsRange
	f	Lcsf;	e	bonusRollsRange
	m	(Lcsq$a;)Lcrz$a;	a	withEntry
		p	1	entryBuilder	entryBuilder
	m	(Lcum$a;)Lcrz$a;	a	withCondition
	m	(Lcsd;)Lcrz$a;	a	withRolls
		p	1	rollsRange	rollsRange
	m	()Lcrz$a;	a	getThis
	m	(Lcti$a;)Lcrz$a;	a	withFunction
	m	()Lcrz;	b	build
c	crz$b	net/minecraft/loot/LootPool$Serializer
	m	(Lcrz;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcrz;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	cs	net/minecraft/server/command/CommandSource
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	getCompletions
		p	1	context	context
		p	2	builder	builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestIdentifiers
		p	0	candidates	candidates
		p	1	builder	builder
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestFromIdentifier
		p	0	candidates	candidates
		p	1	builder	builder
		p	2	identifier	identifier
		p	3	tooltip	tooltip
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestMatching
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestPositions
		p	1	candidates	candidates
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestFromIdentifier
		p	0	candidates	candidates
		p	1	builder	builder
		p	2	identifier	identifier
		p	3	tooltip	tooltip
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestIdentifiers
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	forEachMatching
		p	0	candidates	candidates
		p	3	identifier	identifier
		p	4	action	action
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	forEachMatching
		p	0	candidates	candidates
		p	2	identifier	identifier
		p	3	action	action
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestIdentifiers
		p	0	candiates	candiates
		p	1	builder	builder
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggestColumnPositions
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestMatching
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestMatching
	m	(I)Z	c	hasPermissionLevel
		p	1	level	level
	m	()Ljava/util/Collection;	l	getPlayerNames
	m	()Ljava/util/Collection;	m	getTeamNames
	m	()Ljava/util/Collection;	n	getSoundIds
	m	()Ljava/util/stream/Stream;	o	getRecipeIds
	m	()Ljava/util/Collection;	p	getEntitySuggestions
	m	()Ljava/util/Collection;	q	getBlockPositionSuggestions
	m	()Ljava/util/Collection;	r	getPositionSuggestions
c	cs$a	net/minecraft/server/command/CommandSource$RelativePosition
	f	Lcs$a;	a	ZERO_LOCAL
	f	Lcs$a;	b	ZERO_WORLD
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	csa	net/minecraft/loot/LootTable
	f	Lcsa;	a	EMPTY
	f	Lcty;	b	GENERIC
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lcty;	d	type
	f	[Lcrz;	e	pools
	f	[Lcti;	f	functions
	f	Ljava/util/function/BiFunction;	g	combinedFunction
	m	(Lcty;[Lcrz;[Lcti;)V	<init>	<init>
		p	1	type	type
		p	2	pools	pools
		p	3	functions	functions
	m	(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	limitedConsumer
		p	0	itemDropper	itemDropper
	m	(Ljava/util/function/Consumer;Lben;)V	a	method_331
		p	1	stack	stack
	m	()Lcty;	a	getType
	m	(Lcrx;)Ljava/util/List;	a	getDrops
		p	1	context	context
	m	(Lcrx;Ljava/util/function/Consumer;)V	a	drop
		p	1	context	context
		p	2	itemDropper	itemDropper
	m	(Laje;Ljava/util/Random;)Ljava/util/List;	a	getFreeSlots
		p	1	inventory	inventory
		p	2	random	random
	m	(Laje;Lcrx;)V	a	supplyInventory
		p	1	inventory	inventory
		p	2	context	context
	m	(Ljava/util/List;ILjava/util/Random;)V	a	shuffle
		p	1	drops	drops
		p	2	freeSlots	freeSlots
		p	3	random	random
	m	(Lcsg;)V	a	check
		p	1	reporter	reporter
	m	()Lcsa$a;	b	builder
	m	(Lcrx;Ljava/util/function/Consumer;)V	b	dropLimited
		p	1	context	context
		p	2	dropItemConsumer	dropItemConsumer
c	csa$a	net/minecraft/loot/LootTable$Builder
	f	Ljava/util/List;	a	pools
	f	Ljava/util/List;	b	functions
	f	Lcty;	c	type
	m	()Lcsa$a;	a	getThis
	m	(Lcty;)Lcsa$a;	a	withType
		p	1	context	context
	m	(Lcti$a;)Lcsa$a;	a	withFunction
	m	(Lcrz$a;)Lcsa$a;	a	withPool
		p	1	poolBuilder	poolBuilder
	m	()Lcsa;	b	create
c	csa$b	net/minecraft/loot/LootTable$Serializer
	m	(Lcsa;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcsa;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	supplier	supplier
		p	2	unused	unused
		p	3	context	context
c	csb	net/minecraft/loot/LootManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	suppliers
	f	Lcsc;	d	conditionManager
	m	(Lcsc;)V	<init>	<init>
		p	1	conditionManager	conditionManager
	m	(Lsm;)Lcsa;	a	getSupplier
		p	1	id	id
	m	(Ljava/util/Map;Lzb;Laio;)V	a	apply
	m	(Lcsg;Lsm;Lcsa;)V	a	check
		p	0	reporter	reporter
		p	1	id	id
		p	2	table	table
	m	()Ljava/util/Set;	a	getSupplierNames
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	method_368
		p	0	key	key
		p	1	value	value
	m	(Lcsa;)Lcom/google/gson/JsonElement;	a	toJson
		p	0	supplier	supplier
c	csc	net/minecraft/loot/condition/LootConditionManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	conditions
	m	(Ljava/util/Map;Lzb;Laio;)V	a	apply
	m	(Lsm;)Lcum;	a	get
		p	1	id	id
	m	()Ljava/util/Set;	a	getIds
c	csd	net/minecraft/loot/LootTableRange
	f	Lsm;	a	CONSTANT
	f	Lsm;	b	UNIFORM
	f	Lsm;	c	BINOMIAL
	m	(Ljava/util/Random;)I	a	next
		p	1	random	random
	m	()Lsm;	a	getType
c	cse	net/minecraft/loot/LootTableRanges
	f	Ljava/util/Map;	a	types
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lcsd;	a	fromJson
		p	0	json	json
		p	1	context	context
	m	(Lcsd;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	toJson
		p	0	range	range
		p	1	context	context
c	csf	net/minecraft/loot/UniformLootTableRange
	f	F	d	min
	f	F	e	max
	m	(FF)V	<init>	<init>
		p	1	min	min
		p	2	max	max
	m	(F)V	<init>	<init>
		p	1	value	value
	m	(FF)Lcsf;	a	between
		p	0	min	min
		p	1	max	max
	m	(I)Z	a	contains
		p	1	value	value
	m	(Ljava/util/Random;)F	b	nextFloat
		p	1	random	random
	m	()F	b	getMinValue
	m	()F	c	getMaxValue
c	csf$a	net/minecraft/loot/UniformLootTableRange$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcsf;	a	deserialize
	m	(Lcsf;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	csg	net/minecraft/loot/LootTableReporter
	f	Lcom/google/common/collect/Multimap;	a	messages
	f	Ljava/util/function/Supplier;	b	nameFactory
	f	Lcty;	c	contextType
	f	Ljava/util/function/Function;	d	conditionGetter
	f	Ljava/util/Set;	e	conditions
	f	Ljava/util/function/Function;	f	supplierGetter
	f	Ljava/util/Set;	g	suppliers
	f	Ljava/lang/String;	h	name
	m	(Lsm;)Z	a	hasSupplier
		p	1	id	id
	m	(Lcty;)Lcsg;	a	withContextType
		p	1	contextType	contextType
	m	(Ljava/lang/String;)V	a	report
		p	1	message	message
	m	(Ljava/lang/String;Lsm;)Lcsg;	a	withSupplier
		p	1	name	name
		p	2	id	id
	m	(Lcry;)V	a	checkContext
		p	1	contextAware	contextAware
	m	()Lcom/google/common/collect/Multimap;	a	getMessages
	m	(Ljava/lang/String;Lsm;)Lcsg;	b	withCondition
		p	1	name	name
		p	2	id	id
	m	(Lsm;)Z	b	hasCondition
		p	1	id	id
	m	()Ljava/lang/String;	b	getContext
	m	(Ljava/lang/String;)Lcsg;	b	makeChild
		p	1	name	name
	m	(Lsm;)Lcsa;	c	getSupplier
		p	1	id	id
	m	(Lsm;)Lcum;	d	getCondition
		p	1	id	id
c	csh	net/minecraft/loot/entry/AlternativeEntry
	m	([Lcsq$a;)Lcsh$a;	a	builder
		p	0	children	children
	m	([Lcsi;Lcrx;Ljava/util/function/Consumer;)Z	a	method_387
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
c	csh$a	net/minecraft/loot/entry/AlternativeEntry$Builder
	f	Ljava/util/List;	a	children
	m	([Lcsq$a;)V	<init>	<init>
		p	1	children	children
	m	()Lcsh$a;	a	getThisBuilder
c	csi	net/minecraft/loot/entry/EntryCombiner
	f	Lcsi;	a	ALWAYS_FALSE
	f	Lcsi;	b	ALWAYS_TRUE
	m	(Lcrx;Ljava/util/function/Consumer;)Z	a	doExpand
	m	(Lcsi;Lcrx;Ljava/util/function/Consumer;)Z	a	method_16777
		p	2	context	context
		p	3	lootChoiceExpander	lootChoiceExpander
	m	(Lcsi;)Lcsi;	a	and
		p	1	other	other
	m	(Lcsi;)Lcsi;	b	or
		p	1	other	other
	m	(Lcsi;Lcrx;Ljava/util/function/Consumer;)Z	b	method_16779
		p	2	context	context
		p	3	lootChoiceExpander	lootChoiceExpander
c	csj	net/minecraft/loot/entry/CombinedEntry
	f	[Lcsq;	c	children
	f	Lcsi;	e	predicate
	m	([Lcsq;[Lcum;)V	<init>	<init>
		p	1	children	children
		p	2	conditions	conditions
	m	([Lcsi;)Lcsi;	a	combine
		p	1	children	children
	m	(Lsm;Ljava/lang/Class;Lcsj$a;)Lcsj$b;	a	createSerializer
		p	0	id	id
		p	1	type	type
		p	2	entry	entry
c	csj$a	net/minecraft/loot/entry/CombinedEntry$Factory
	m	([Lcsq;[Lcum;)Lcsj;	create	create
		p	1	children	children
		p	2	conditions	conditions
c	csj$b	net/minecraft/loot/entry/CombinedEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcsj;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcsj;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcsq;[Lcum;)Lcsj;	a	fromJson
		p	1	json	json
		p	2	context	context
		p	3	children	children
		p	4	conditions	conditions
c	csk	net/minecraft/loot/entry/DynamicEntry
	f	Lsm;	c	instance
	f	Lsm;	h	name
	m	(Lsm;II[Lcum;[Lcti;)V	<init>	<init>
		p	1	name	name
		p	2	weight	weight
		p	3	quality	quality
		p	4	conditions	conditions
		p	5	functions	functions
	m	(Lsm;)Lcsr$a;	a	builder
		p	0	name	name
	m	(Lsm;II[Lcum;[Lcti;)Lcsr;	a	method_391
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
c	csk$a	net/minecraft/loot/entry/DynamicEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lcum;[Lcti;)Lcsk;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcsk;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	csl	net/minecraft/loot/entry/EmptyEntry
	m	(II[Lcum;[Lcti;)V	<init>	<init>
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	()Lcsr$a;	a	Serializer
c	csl$a	net/minecraft/loot/entry/EmptyEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lcum;[Lcti;)Lcsl;	a	fromJson
c	csm	net/minecraft/loot/entry/GroupEntry
	m	(Lcsi;Lcsi;Lcrx;Ljava/util/function/Consumer;)Z	a	method_399
		p	2	context	context
		p	3	lootChoiceExpander	lootChoiceExpander
	m	([Lcsi;Lcrx;Ljava/util/function/Consumer;)Z	a	method_400
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
c	csn	net/minecraft/loot/entry/ItemEntry
	f	Lbei;	c	item
	m	(Lbei;II[Lcum;[Lcti;)V	<init>	<init>
		p	1	item	item
		p	2	weight	weight
		p	3	quality	quality
		p	4	conditions	conditions
		p	5	functions	functions
	m	(Lbjv;II[Lcum;[Lcti;)Lcsr;	a	method_409
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	(Lbjv;)Lcsr$a;	a	builder
		p	0	itemProvider	itemProvider
c	csn$a	net/minecraft/loot/entry/ItemEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcsn;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lcum;[Lcti;)Lcsn;	a	fromJson
c	cso	net/minecraft/loot/entry/LootEntries
	f	Ljava/util/Map;	a	idSerializers
	f	Ljava/util/Map;	b	classSerializers
	m	(Lcsq$b;)V	a	register
		p	0	serializer	serializer
c	cso$a	net/minecraft/loot/entry/LootEntries$Serializer
	m	(Ljava/lang/Class;)Lcsq$b;	a	getSerializer
		p	0	clazz	clazz
	m	(Lcsq;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcsq;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	csp	net/minecraft/loot/LootChoice
	m	(Ljava/util/function/Consumer;Lcrx;)V	a	drop
		p	1	itemDropper	itemDropper
		p	2	context	context
	m	(F)I	a	getWeight
		p	1	luck	luck
c	csq	net/minecraft/loot/entry/LootEntry
	f	Ljava/util/function/Predicate;	c	conditionPredicate
	f	[Lcum;	d	conditions
	m	([Lcum;)V	<init>	<init>
		p	1	conditions	conditions
	m	(Lcrx;)Z	a	test
		p	1	context	context
	m	(Lcsg;)V	a	check
c	csq$a	net/minecraft/loot/entry/LootEntry$Builder
	f	Ljava/util/List;	a	conditions
	m	(Lcsq$a;)Lcsh$a;	a	withChild
		p	1	builder	builder
	m	(Lcum$a;)Lcsq$a;	a	withCondition
	m	()Lcsq;	b	build
	m	()Lcsq$a;	d	getThisBuilder
	m	()Lcsq$a;	e	getThis
	m	()[Lcum;	f	getConditions
c	csq$b	net/minecraft/loot/entry/LootEntry$Serializer
	f	Lsm;	a	id
	f	Ljava/lang/Class;	b	type
	m	(Lsm;Ljava/lang/Class;)V	<init>	<init>
		p	1	id	id
		p	2	type	type
	m	(Lcom/google/gson/JsonObject;Lcsq;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
		p	1	json	json
		p	2	entry	entry
		p	3	context	context
	m	()Lsm;	a	getIdentifier
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcsq;	b	fromJson
		p	1	json	json
		p	2	context	context
		p	3	conditions	conditions
	m	()Ljava/lang/Class;	b	getType
c	csr	net/minecraft/loot/entry/LeafEntry
	f	Ljava/util/function/BiFunction;	c	compiledFunctions
	f	I	e	weight
	f	I	f	quality
	f	[Lcti;	g	functions
	f	Lcsp;	h	choice
	m	(II[Lcum;[Lcti;)V	<init>	<init>
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	(Ljava/util/function/Consumer;Lcrx;)V	a	drop
		p	1	itemDropper	itemDropper
		p	2	context	context
	m	(Lcsr$d;)Lcsr$a;	a	builder
		p	0	factory	factory
c	csr$a	net/minecraft/loot/entry/LeafEntry$Builder
	f	I	a	weight
	f	I	b	quality
	f	Ljava/util/List;	c	functions
	m	(I)Lcsr$a;	a	setWeight
		p	1	weight	weight
	m	()[Lcti;	a	getFunctions
	m	(Lcti$a;)Lcsr$a;	a	withFunction
	m	(I)Lcsr$a;	b	setQuality
		p	1	quality	quality
c	csr$b	net/minecraft/loot/entry/LeafEntry$BasicBuilder
	f	Lcsr$d;	c	factory
	m	(Lcsr$d;)V	<init>	<init>
		p	1	factory	factory
	m	()Lcsr$b;	g	getThisBuilder
c	csr$c	net/minecraft/loot/entry/LeafEntry$Choice
c	csr$d	net/minecraft/loot/entry/LeafEntry$Factory
	m	(II[Lcum;[Lcti;)Lcsr;	build	build
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
c	csr$e	net/minecraft/loot/entry/LeafEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcsr;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcsr;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lcum;[Lcti;)Lcsr;	b	fromJson
		p	1	entryJson	entryJson
		p	2	context	context
		p	3	weight	weight
		p	4	quality	quality
		p	5	conditions	conditions
		p	6	functions	functions
c	css	net/minecraft/loot/entry/LootTableEntry
	f	Lsm;	c	id
	m	(Lsm;II[Lcum;[Lcti;)V	<init>	<init>
		p	1	id	id
		p	2	weight	weight
		p	3	quality	quality
		p	4	conditions	conditions
		p	5	functions	functions
	m	(Lsm;)Lcsr$a;	a	builder
		p	0	id	id
	m	(Lsm;II[Lcum;[Lcti;)Lcsr;	a	method_430
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
c	css$a	net/minecraft/loot/entry/LootTableEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcss;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lcum;[Lcti;)Lcss;	a	fromJson
c	cst	net/minecraft/loot/entry/SequenceEntry
	m	([Lcsi;Lcrx;Ljava/util/function/Consumer;)Z	a	method_452
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
c	csu	net/minecraft/loot/entry/TagEntry
	f	Laaz;	c	name
	f	Z	h	expand
	m	(Laaz;ZII[Lcum;[Lcti;)V	<init>	<init>
		p	1	name	name
		p	2	expand	expand
		p	3	weight	weight
		p	4	quality	quality
		p	5	conditions	conditions
		p	6	functions	functions
	m	(Laaz;II[Lcum;[Lcti;)Lcsr;	a	method_444
		p	1	weight	weight
		p	2	quality	quality
		p	3	conditions	conditions
		p	4	functions	functions
	m	(Lcrx;Ljava/util/function/Consumer;)Z	a	grow
		p	1	context	context
		p	2	lootChoiceExpander	lootChoiceExpander
	m	(Laaz;)Lcsr$a;	b	builder
		p	0	name	name
c	csu$a	net/minecraft/loot/entry/TagEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lcum;[Lcti;)Lcsu;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcsu;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	csw	net/minecraft/loot/function/ApplyBonusLootFunction
	f	Ljava/util/Map;	a	FACTORIES
	f	Lbhx;	c	enchantment
	f	Lcsw$b;	d	formula
	m	([Lcum;Lbhx;Lcsw$b;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	enchantment	enchantment
		p	3	formula	formula
	m	(Lbhx;I[Lcum;)Lcti;	a	method_462
		p	2	conditions	conditions
	m	(Lbhx;)Lcth$a;	a	oreDrops
		p	0	enchantment	enchantment
	m	(Lbhx;IF[Lcum;)Lcti;	a	method_459
		p	3	conditions	conditions
	m	(Lbhx;[Lcum;)Lcti;	a	method_457
		p	1	conditions	conditions
	m	(Lbhx;FI)Lcth$a;	a	binomialWithBonusCount
		p	0	enchantment	enchantment
		p	1	probability	probability
		p	2	extra	extra
	m	(Lbhx;I)Lcth$a;	a	uniformBonusCount
		p	0	enchantment	enchantment
		p	1	bonusMultiplier	bonusMultiplier
	m	(Lbhx;)Lcth$a;	b	uniformBonusCount
		p	0	enchantment	enchantment
	m	(Lbhx;[Lcum;)Lcti;	b	method_453
		p	1	conditions	conditions
c	csw$a	net/minecraft/loot/function/ApplyBonusLootFunction$BinomialWithBonusCount
	f	Lsm;	a	ID
	f	I	b	extra
	f	F	c	probability
	m	(IF)V	<init>	<init>
		p	1	extra	extra
		p	2	probability	probability
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcsw$b;	a	fromJson
		p	0	json	json
		p	1	context	context
c	csw$b	net/minecraft/loot/function/ApplyBonusLootFunction$Formula
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
		p	1	json	json
		p	2	context	context
	m	(Ljava/util/Random;II)I	a	getValue
		p	1	random	random
		p	2	initialCount	initialCount
		p	3	enchantmentLevel	enchantmentLevel
	m	()Lsm;	a	getId
c	csw$c	net/minecraft/loot/function/ApplyBonusLootFunction$FormulaFactory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcsw$b;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	context	context
c	csw$d	net/minecraft/loot/function/ApplyBonusLootFunction$OreDrops
	f	Lsm;	a	ID
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcsw$b;	a	fromJson
		p	0	json	json
		p	1	context	context
c	csw$e	net/minecraft/loot/function/ApplyBonusLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcsw;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcsw;	a	fromJson
c	csw$f	net/minecraft/loot/function/ApplyBonusLootFunction$UniformBonusCount
	f	Lsm;	a	ID
	f	I	b	bonusMultiplier
	m	(I)V	<init>	<init>
		p	1	bonusMultiplier	bonusMultiplier
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcsw$b;	a	fromJson
		p	0	json	json
		p	1	context	context
c	csx	net/minecraft/loot/function/ExplosionDecayLootFunction
	m	([Lcum;)V	<init>	<init>
		p	1	conditions	conditions
	m	()Lcth$a;	b	builder
c	csx$a	net/minecraft/loot/function/ExplosionDecayLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcsx;	a	fromJson
c	csy	net/minecraft/loot/function/CopyStateFunction
	f	Lbph;	a	block
	f	Ljava/util/Set;	c	properties
	m	([Lcum;Lbph;Ljava/util/Set;)V	<init>	<init>
		p	3	properties	properties
	m	(Lbph;)Lcsy$a;	a	getBuilder
c	csy$a	net/minecraft/loot/function/CopyStateFunction$Builder
	f	Lbph;	a	block
	f	Ljava/util/Set;	b	properties
	m	()Lcsy$a;	a	getThisBuilder
c	csy$b	net/minecraft/loot/function/CopyStateFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcsy;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcsy;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	csz	net/minecraft/loot/function/CopyNameLootFunction
	f	Lcsz$a;	a	source
	m	([Lcum;Lcsz$a;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	source	source
	m	(Lcsz$a;)Lcth$a;	a	builder
		p	0	source	source
	m	(Lcsz$a;[Lcum;)Lcti;	a	method_474
		p	1	conditions	conditions
c	csz$a	net/minecraft/loot/function/CopyNameLootFunction$Source
	f	Ljava/lang/String;	e	name
	f	Lctx;	f	parameter
	m	(Ljava/lang/String;ILjava/lang/String;Lctx;)V	<init>	<init>
		p	3	name	name
		p	4	parameter	parameter
	m	(Ljava/lang/String;)Lcsz$a;	a	get
		p	0	name	name
c	csz$b	net/minecraft/loot/function/CopyNameLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcsz;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcsz;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ct	net/minecraft/command/arguments/ColorArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_COLOR_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lg;	a	parse
	m	()Lct;	a	color
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lg;	a	getColor
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	cta	net/minecraft/loot/function/CopyNbtLootFunction
	f	Lcta$c;	a	source
	f	Ljava/util/List;	c	operations
	f	Ljava/util/function/Function;	d	ENTITY_TAG_GETTER
	f	Ljava/util/function/Function;	e	BLOCK_ENTITY_TAG_GETTER
	m	([Lcum;Lcta$c;Ljava/util/List;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	source	source
		p	3	operations	operations
	m	(Lben;Lkj;Lcta$b;)V	a	method_16846
		p	2	operation	operation
	m	(Lcta$c;)Lcta$a;	a	builder
		p	0	source	source
	m	(Lbwl;)Lkj;	a	method_16847
		p	0	blockEntity	blockEntity
	m	(Ljava/lang/String;)Lde$h;	b	parseNbtPath
		p	0	nbtPath	nbtPath
c	cta$a	net/minecraft/loot/function/CopyNbtLootFunction$Builder
	f	Lcta$c;	a	source
	f	Ljava/util/List;	b	operations
	m	(Lcta$c;)V	<init>	<init>
		p	1	source	source
	m	(Ljava/lang/String;Ljava/lang/String;)Lcta$a;	a	withOperation
		p	1	source	source
		p	2	target	target
	m	()Lcta$a;	a	getThisBuilder
	m	(Ljava/lang/String;Ljava/lang/String;Lcta$d;)Lcta$a;	a	withOperation
		p	1	source	source
		p	2	target	target
		p	3	operator	operator
c	cta$b	net/minecraft/loot/function/CopyNbtLootFunction$Operation
	f	Ljava/lang/String;	a	sourcePath
	f	Lde$h;	b	parsedSourcePath
	f	Ljava/lang/String;	c	targetPath
	f	Lde$h;	d	parsedTargetPath
	f	Lcta$d;	e	operator
	m	(Ljava/lang/String;Ljava/lang/String;Lcta$d;)V	<init>	<init>
		p	1	source	source
		p	2	target	target
		p	3	operator	operator
	m	()Lcom/google/gson/JsonObject;	a	toJson
	m	(Lcom/google/gson/JsonObject;)Lcta$b;	a	fromJson
		p	0	json	json
	m	(Ljava/util/function/Supplier;Lkj;)V	a	execute
		p	1	itemTagTagGetter	itemTagTagGetter
		p	2	sourceEntityTag	sourceEntityTag
c	cta$c	net/minecraft/loot/function/CopyNbtLootFunction$Source
	f	Ljava/lang/String;	e	name
	f	Lctx;	f	parameter
	f	Ljava/util/function/Function;	g	getter
	m	(Ljava/lang/String;ILjava/lang/String;Lctx;Ljava/util/function/Function;)V	<init>	<init>
		p	3	name	name
		p	4	parameter	parameter
		p	5	operator	operator
	m	(Ljava/lang/String;)Lcta$c;	a	get
		p	0	name	name
	m	(Lctx;Ljava/util/function/Function;Lcrx;)Lkj;	a	method_16861
		p	2	context	context
c	cta$d	net/minecraft/loot/function/CopyNbtLootFunction$Operator
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Lkj;Lde$h;Ljava/util/List;)V	a	merge
		p	1	itemTag	itemTag
		p	2	tragetPath	tragetPath
		p	3	sourceTags	sourceTags
	m	(Ljava/lang/String;)Lcta$d;	a	get
		p	0	name	name
c	cta$d$2	net/minecraft/loot/function/CopyNbtLootFunction$Operator$2
	m	(Ljava/util/List;Lkj;)V	a	method_16867
		p	1	foundTag	foundTag
	m	(Lkj;Lkj;)V	a	method_16866
		p	1	listTag	listTag
c	cta$d$3	net/minecraft/loot/function/CopyNbtLootFunction$Operator$3
	m	(Lkj;Lkj;)V	a	method_16868
		p	1	compoundTag	compoundTag
	m	(Ljava/util/List;Lkj;)V	a	method_16869
		p	1	foundTag	foundTag
c	cta$e	net/minecraft/loot/function/CopyNbtLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcta;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcta;	a	fromJson
c	ctb	net/minecraft/loot/function/EnchantRandomlyLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/List;	c	enchantments
	m	([Lcum;Ljava/util/Collection;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	enchantments	enchantments
	m	([Lcum;)Lcti;	a	method_488
		p	0	conditions	conditions
	m	()Lcth$a;	c	builder
c	ctb$b	net/minecraft/loot/function/EnchantRandomlyLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctb;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lctb;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctc	net/minecraft/loot/function/EnchantWithLevelsLootFunction
	f	Lcsd;	a	range
	f	Z	c	treasureEnchantmentsAllowed
	m	([Lcum;Lcsd;Z)V	<init>	<init>
		p	1	conditions	conditions
		p	2	range	range
		p	3	treasureEnchantmentsAllowed	treasureEnchantmentsAllowed
	m	(Lcsd;)Lctc$a;	a	builder
		p	0	range	range
c	ctc$a	net/minecraft/loot/function/EnchantWithLevelsLootFunction$Builder
	f	Lcsd;	a	range
	f	Z	b	treasureEnchantmentsAllowed
	m	(Lcsd;)V	<init>	<init>
		p	1	range	range
	m	()Lctc$a;	a	getThisBuilder
	m	()Lctc$a;	e	allowTreasureEnchantments
c	ctc$b	net/minecraft/loot/function/EnchantWithLevelsLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctc;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lctc;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctd	net/minecraft/loot/function/ExplorationMapLootFunction
	f	Lcrd$a;	a	DEFAULT_DECORATION
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	destination
	f	Lcrd$a;	e	decoration
	f	B	f	zoom
	f	I	g	searchRadius
	f	Z	h	skipExistingChunks
	m	([Lcum;Ljava/lang/String;Lcrd$a;BIZ)V	<init>	<init>
		p	1	conditions	conditions
		p	2	destination	destination
		p	3	decoration	decoration
		p	4	zoom	zoom
		p	5	searchRadius	searchRadius
		p	6	skipExistingChunks	skipExistingChunks
	m	()Lctd$a;	b	create
c	ctd$a	net/minecraft/loot/function/ExplorationMapLootFunction$Builder
	f	Ljava/lang/String;	a	destination
	f	Lcrd$a;	b	decoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipExistingChunks
	m	(Z)Lctd$a;	a	withSkipExistingChunks
		p	1	skipExistingChunks	skipExistingChunks
	m	()Lctd$a;	a	getThisBuilder
	m	(Ljava/lang/String;)Lctd$a;	a	withDestination
		p	1	destination	destination
	m	(Lcrd$a;)Lctd$a;	a	withDecoration
		p	1	decoration	decoration
	m	(B)Lctd$a;	a	withZoom
		p	1	zoom	zoom
c	ctd$b	net/minecraft/loot/function/ExplorationMapLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctd;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lctd;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cte	net/minecraft/loot/function/FillPlayerHeadLootFunction
	f	Lcrx$c;	a	entity
	m	([Lcum;Lcrx$c;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	entity	entity
c	cte$a	net/minecraft/loot/function/FillPlayerHeadLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcte;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcte;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctf	net/minecraft/loot/function/LootFunctionConsumingBuilder
	m	(Lcti$a;)Ljava/lang/Object;	b	withFunction
		p	1	lootFunctionBuilder	lootFunctionBuilder
	m	()Ljava/lang/Object;	c	getThis
c	ctg	net/minecraft/loot/function/LimitCountLootFunction
	f	Lcrw;	a	limit
	m	([Lcum;Lcrw;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	limit	limit
	m	(Lcrw;[Lcum;)Lcti;	a	method_508
		p	1	conditions	conditions
	m	(Lcrw;)Lcth$a;	a	builder
		p	0	limit	limit
c	ctg$a	net/minecraft/loot/function/LimitCountLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lctg;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctg;	a	fromJson
c	cth	net/minecraft/loot/function/ConditionalLootFunction
	f	Ljava/util/function/Predicate;	a	predicate
	f	[Lcum;	b	conditions
	m	([Lcum;)V	<init>	<init>
		p	1	conditions	conditions
	m	(Lben;Lcrx;)Lben;	a	process
		p	1	stack	stack
		p	2	context	context
	m	(Ljava/util/function/Function;)Lcth$a;	a	builder
		p	0	joiner	joiner
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1	itemStack	itemStack
		p	2	context	context
	m	(Lben;Lcrx;)Lben;	b	apply
c	cth$a	net/minecraft/loot/function/ConditionalLootFunction$Builder
	f	Ljava/util/List;	a	conditionList
	m	(Lcum$a;)Lcth$a;	a	withCondition
	m	()Lcth$a;	d	getThisBuilder
	m	()Lcth$a;	f	getThis
	m	()[Lcum;	g	getConditions
c	cth$b	net/minecraft/loot/function/ConditionalLootFunction$Joiner
	f	Ljava/util/function/Function;	a	joiner
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	joiner	joiner
	m	()Lcth$b;	a	getThisBuilder
c	cth$c	net/minecraft/loot/function/ConditionalLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcth;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcth;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcth;	b	fromJson
		p	1	json	json
		p	2	context	context
		p	3	conditions	conditions
c	cti	net/minecraft/loot/function/LootFunction
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Lcrx;Lben;)V	a	method_514
		p	3	stack	stack
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lcrx;)Ljava/util/function/Consumer;	a	apply
		p	0	itemApplier	itemApplier
		p	1	itemDropper	itemDropper
		p	2	context	context
c	cti$a	net/minecraft/loot/function/LootFunction$Builder
	m	()Lcti;	b	build
c	cti$b	net/minecraft/loot/function/LootFunction$Factory
	f	Lsm;	a	id
	f	Ljava/lang/Class;	b	functionClass
	m	(Lsm;Ljava/lang/Class;)V	<init>	<init>
		p	1	id	id
		p	2	clazz	clazz
	m	(Lcom/google/gson/JsonObject;Lcti;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
		p	1	json	json
		p	2	function	function
		p	3	context	context
	m	()Lsm;	a	getId
	m	()Ljava/lang/Class;	b	getFunctionClass
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcti;	b	fromJson
		p	1	json	json
		p	2	context	context
c	ctj	net/minecraft/loot/function/LootFunctions
	f	Ljava/util/function/BiFunction;	a	NOOP
	f	Ljava/util/Map;	b	byId
	f	Ljava/util/Map;	c	byClass
	m	(Lsm;)Lcti$b;	a	get
		p	0	id	id
	m	(Lcti$b;)V	a	register
		p	0	function	function
	m	([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	join
		p	0	lootFunctions	lootFunctions
	m	(Lcti;)Lcti$b;	a	getFactory
		p	0	function	function
	m	(Lben;Lcrx;)Lben;	a	method_592
		p	0	stack	stack
		p	1	context	context
	m	([Ljava/util/function/BiFunction;Lben;Lcrx;)Lben;	a	method_595
		p	1	stack	stack
		p	2	context	context
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lben;Lcrx;)Lben;	a	method_591
		p	2	stack	stack
		p	3	context	context
c	ctj$a	net/minecraft/loot/function/LootFunctions$Factory
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcti;	a	deserialize
	m	(Lcti;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	function	function
		p	2	unused	unused
		p	3	context	context
c	ctk	net/minecraft/loot/function/LootingEnchantLootFunction
	f	Lcsf;	a	countRange
	f	I	c	limit
	m	([Lcum;Lcsf;I)V	<init>	<init>
		p	1	conditions	conditions
		p	2	countRange	countRange
		p	3	limit	limit
	m	(Lcsf;)Lctk$a;	a	builder
		p	0	countRange	countRange
	m	()Z	b	hasLimit
c	ctk$a	net/minecraft/loot/function/LootingEnchantLootFunction$Builder
	f	Lcsf;	a	countRange
	f	I	b	limit
	m	(Lcsf;)V	<init>	<init>
		p	1	countRange	countRange
	m	()Lctk$a;	a	getThisBuilder
	m	(I)Lctk$a;	a	withLimit
		p	1	limit	limit
c	ctk$b	net/minecraft/loot/function/LootingEnchantLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctk;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lctk;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctl	net/minecraft/loot/function/SetAttributesLootFunction
	f	Ljava/util/List;	a	attributes
	m	([Lcum;Ljava/util/List;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	attributes	attributes
c	ctl$b	net/minecraft/loot/function/SetAttributesLootFunction$Attribute
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	attribute
	f	Lals$a;	c	operation
	f	Lcsf;	d	amountRange
	f	Ljava/util/UUID;	e	id
	f	[Lakv;	f	slots
	m	(Ljava/lang/String;Ljava/lang/String;Lals$a;Lcsf;[Lakv;Ljava/util/UUID;)V	<init>	<init>
		p	1	name	name
		p	2	attribute	attribute
		p	3	operation	operation
		p	4	amountRange	amountRange
		p	5	slots	slots
		p	6	id	id
	m	(Ljava/lang/String;)Lals$a;	a	fromName
		p	0	name	name
	m	(Lals$a;)Ljava/lang/String;	a	getName
		p	0	operation	operation
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lctl$b;	a	deserialize
		p	0	json	json
		p	1	context	context
	m	(Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject;	a	serialize
		p	1	context	context
c	ctl$d	net/minecraft/loot/function/SetAttributesLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctl;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lctl;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctm	net/minecraft/loot/function/SetContentsLootFunction
	f	Ljava/util/List;	a	entries
	m	([Lcum;Ljava/util/List;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	entries	entries
	m	(Lcrx;Lfy;Lcsq;)V	a	method_599
		p	2	entry	entry
	m	(Lfy;Lcrx;Lcsp;)V	a	method_600
		p	2	choice	choice
	m	()Lctm$a;	b	builder
c	ctm$a	net/minecraft/loot/function/SetContentsLootFunction$Builer
	f	Ljava/util/List;	a	entries
	m	(Lcsq$a;)Lctm$a;	a	withEntry
		p	1	entryBuilder	entryBuilder
	m	()Lctm$a;	a	getThisBuilder
c	ctm$b	net/minecraft/loot/function/SetContentsLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lctm;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctm;	a	fromJson
c	ctn	net/minecraft/loot/function/SetLootTableLootFunction
	f	Lsm;	a	id
	f	J	c	seed
	m	([Lcum;Lsm;J)V	<init>	<init>
		p	1	conditions	conditions
		p	2	id	id
		p	3	seed	seed
c	ctn$a	net/minecraft/loot/function/SetLootTableLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lctn;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctn;	a	fromJson
c	cto	net/minecraft/loot/function/SetCountLootFunction
	f	Lcsd;	a	countRange
	m	([Lcum;Lcsd;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	countRange	countRange
	m	(Lcsd;[Lcum;)Lcti;	a	method_620
		p	1	conditions	conditions
	m	(Lcsd;)Lcth$a;	a	builder
		p	0	countRange	countRange
c	cto$a	net/minecraft/loot/function/SetCountLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcto;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcto;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctp	net/minecraft/loot/function/SetDamageLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcsf;	c	durabilityRange
	m	([Lcum;Lcsf;)V	<init>	<init>
		p	1	contents	contents
		p	2	durabilityRange	durabilityRange
	m	(Lcsf;[Lcum;)Lcti;	a	method_634
		p	1	conditions	conditions
	m	(Lcsf;)Lcth$a;	a	builder
		p	0	durabilityRange	durabilityRange
c	ctp$a	net/minecraft/loot/function/SetDamageLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctp;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lctp;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctq	net/minecraft/loot/function/SetLoreLootFunction
	f	Z	a	replace
	f	Ljava/util/List;	c	lore
	f	Lcrx$c;	d	entity
	m	([Lcum;ZLjava/util/List;Lcrx$c;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	replace	replace
		p	3	lore	lore
		p	4	entity	entity
	m	(Lben;Z)Ljz;	a	getLoreForMerge
		p	1	stack	stack
		p	2	otherLoreExists	otherLoreExists
c	ctq$b	net/minecraft/loot/function/SetLoreLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lctq;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctq;	a	fromJson
c	ctr	net/minecraft/loot/function/SetNameLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Llf;	c	name
	f	Lcrx$c;	d	entity
	m	([Lcum;Llf;Lcrx$c;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	name	name
		p	3	entity	entity
	m	(Lcq;Lakq;Llf;)Llf;	a	method_16189
		p	2	textComponent	textComponent
	m	(Lcrx;Lcrx$c;)Ljava/util/function/UnaryOperator;	a	applySourceEntity
		p	0	context	context
		p	1	sourceEntity	sourceEntity
	m	(Llf;)Llf;	b	method_16191
		p	0	textComponent	textComponent
c	ctr$a	net/minecraft/loot/function/SetNameLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctr;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lctr;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cts	net/minecraft/loot/function/SetNbtLootFunction
	f	Ljt;	a	tag
	m	([Lcum;Ljt;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	tag	tag
	m	(Ljt;[Lcum;)Lcti;	a	method_675
		p	1	conditions	conditions
	m	(Ljt;)Lcth$a;	a	builder
		p	0	tag	tag
c	cts$a	net/minecraft/loot/function/SetNbtLootFunction$Builder
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lcts;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcts;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	ctt	net/minecraft/loot/function/SetStewEffectLootFunction
	f	Ljava/util/Map;	a	effects
	m	([Lcum;Ljava/util/Map;)V	<init>	<init>
		p	1	conditions	conditions
		p	2	effects	effects
	m	()Lctt$a;	b	builder
c	ctt$a	net/minecraft/loot/function/SetStewEffectLootFunction$Builder
	f	Ljava/util/Map;	a	map
	m	(Laki;Lcsf;)Lctt$a;	a	withEffect
		p	1	effect	effect
		p	2	durationRange	durationRange
	m	()Lctt$a;	a	getThisBuilder
c	ctt$b	net/minecraft/loot/function/SetStewEffectLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lctt;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctt;	a	fromJson
c	ctu	net/minecraft/loot/function/FurnaceSmeltLootFunction
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	([Lcum;)V	<init>	<init>
		p	1	conditions	conditions
	m	()Lcth$a;	b	builder
c	ctu$a	net/minecraft/loot/function/FurnaceSmeltLootFunction$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lcum;)Lctu;	a	fromJson
c	ctx	net/minecraft/loot/context/LootContextParameter
	f	Lsm;	a	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	()Lsm;	a	getIdentifier
c	cty	net/minecraft/loot/context/LootContextType
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	allowed
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1	required	required
		p	2	allowed	allowed
	m	(Lcsg;Lcry;)V	a	check
		p	1	reporter	reporter
		p	2	parameterConsumer	parameterConsumer
	m	()Ljava/util/Set;	a	getRequired
	m	(Lctx;)Ljava/lang/String;	b	method_779
		p	1	parameter	parameter
	m	()Ljava/util/Set;	b	getAllowed
c	cty$a	net/minecraft/loot/context/LootContextType$Builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	allowed
	m	(Lctx;)Lcty$a;	a	require
		p	1	parameter	parameter
	m	()Lcty;	a	build
	m	(Lctx;)Lcty$a;	b	allow
		p	1	parameter	parameter
c	ctz	net/minecraft/loot/context/LootContextTypes
	f	Lcom/google/common/collect/BiMap;	k	MAP
	m	(Lcty;)Lsm;	a	getId
		p	0	type	type
	m	(Lcty$a;)V	a	method_760
		p	0	builder	builder
	m	(Lsm;)Lcty;	a	get
		p	0	id	id
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Lcty;	a	register
		p	0	name	name
		p	1	type	type
	m	(Lcty$a;)V	b	method_763
		p	0	builder	builder
	m	(Lcty$a;)V	c	method_756
		p	0	builder	builder
	m	(Lcty$a;)V	d	method_15971
		p	0	builder	builder
	m	(Lcty$a;)V	e	method_758
		p	0	builder	builder
	m	(Lcty$a;)V	f	method_764
		p	0	builder	builder
	m	(Lcty$a;)V	i	method_15970
		p	0	builder	builder
	m	(Lcty$a;)V	j	method_755
		p	0	builder	builder
c	cu	net/minecraft/command/arguments/TextArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_COMPONENT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Llf;	a	parse
	m	()Lcu;	a	text
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Llf;	a	getTextArgument
		p	0	context	context
		p	1	name	name
c	cua	net/minecraft/loot/context/LootContextParameters
	m	(Ljava/lang/String;)Lctx;	a	register
		p	0	name	name
c	cuc	net/minecraft/loot/condition/AlternativeLootCondition
	f	[Lcum;	a	terms
	f	Ljava/util/function/Predicate;	b	predicate
	m	([Lcum;)V	<init>	<init>
		p	1	terms	terms
	m	(Lcrx;)Z	a	test
	m	([Lcum$a;)Lcuc$a;	a	builder
		p	0	terms	terms
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cuc$a	net/minecraft/loot/condition/AlternativeLootCondition$Builder
	f	Ljava/util/List;	a	terms
	m	([Lcum$a;)V	<init>	<init>
		p	1	terms	terms
c	cuc$b	net/minecraft/loot/condition/AlternativeLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcuc;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcuc;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cud	net/minecraft/loot/condition/TableBonusLootCondition
	f	Lbhx;	a	enchantment
	f	[F	b	chances
	m	(Lbhx;[F)V	<init>	<init>
		p	1	enchantment	enchantment
		p	2	chances	chances
	m	(Lcrx;)Z	a	test
	m	(Lbhx;[F)Lcum$a;	a	builder
		p	0	enchantment	enchantment
		p	1	chances	chances
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cud$a	net/minecraft/loot/condition/TableBonusLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcud;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcud;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cue	net/minecraft/loot/condition/ReferenceLootCondition
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lsm;	b	id
	m	(Lsm;)V	<init>	<init>
		p	1	id	id
	m	(Lcrx;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cue$a	net/minecraft/loot/condition/ReferenceLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcue;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcue;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cuf	net/minecraft/loot/condition/LootConditionConsumingBuilder
	m	(Lcum$a;)Ljava/lang/Object;	b	withCondition
		p	1	builder	builder
	m	()Ljava/lang/Object;	c	getThis
c	cug	net/minecraft/loot/condition/DamageSourcePropertiesLootCondition
	f	Las;	a	predicate
	m	(Las;)V	<init>	<init>
		p	1	predicate	predicate
	m	(Lcrx;)Z	a	test
	m	(Las$a;)Lcum$a;	a	builder
		p	0	builder	builder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cug$a	net/minecraft/loot/condition/DamageSourcePropertiesLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcug;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcug;	a	fromJson
c	cuh	net/minecraft/loot/condition/EntityScoresLootCondition
	f	Ljava/util/Map;	a	scores
	f	Lcrx$c;	b	target
	m	(Ljava/util/Map;Lcrx$c;)V	<init>	<init>
		p	1	scores	scores
		p	2	target	target
	m	(Lakq;Lcwl;Ljava/lang/String;Lcsf;)Z	a	entityScoreIsInRange
		p	1	entity	entity
		p	2	scoreboard	scoreboard
		p	3	objective	objective
		p	4	scoreRange	scoreRange
	m	(Lcrx;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cuh$b	net/minecraft/loot/condition/EntityScoresLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcuh;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcuh;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cui	net/minecraft/loot/condition/SurvivesExplosionLootCondition
	f	Lcui;	a	INSTANCE
	m	(Lcrx;)Z	a	test
	m	()Lcum$a;	b	builder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cui$a	net/minecraft/loot/condition/SurvivesExplosionLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcui;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcui;	a	fromJson
c	cuj	net/minecraft/loot/condition/InvertedLootCondition
	f	Lcum;	a	term
	m	(Lcum;)V	<init>	<init>
		p	1	term	term
	m	(Lcrx;)Z	a	test
	m	(Lcum$a;)Lcum$a;	a	builder
		p	0	term	term
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cuj$a	net/minecraft/loot/condition/InvertedLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcuj;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcuj;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cuk	net/minecraft/loot/condition/LocationCheckLootCondition
	f	Lbp;	a	predicate
	f	Lfk;	b	offset
	m	(Lbp;Lfk;)V	<init>	<init>
		p	1	predicate	predicate
		p	2	offset	offset
	m	(Lcrx;)Z	a	test
	m	(Lbp$a;)Lcum$a;	a	builder
		p	0	predicateBuilder	predicateBuilder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cuk$a	net/minecraft/loot/condition/LocationCheckLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcuk;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcuk;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cul	net/minecraft/loot/condition/BlockStatePropertyLootCondition
	f	Lbph;	a	block
	f	Lcc;	b	properties
	m	(Lcrx;)Z	a	test
	m	(Lbph;)Lcul$a;	a	builder
		p	0	block	block
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cul$a	net/minecraft/loot/condition/BlockStatePropertyLootCondition$Builder
	f	Lbph;	a	block
	f	Lcc;	b	propertyValues
	m	(Lbph;)V	<init>	<init>
		p	1	block	block
c	cul$b	net/minecraft/loot/condition/BlockStatePropertyLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcul;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcul;	a	fromJson
c	cum	net/minecraft/loot/condition/LootCondition
c	cum$a	net/minecraft/loot/condition/LootCondition$Builder
	m	()Lcum$a;	a	invert
	m	(Lcum$a;)Lcuc$a;	a	withCondition
		p	1	condition	condition
c	cum$b	net/minecraft/loot/condition/LootCondition$Factory
	f	Lsm;	a	id
	f	Ljava/lang/Class;	b	conditionClass
	m	(Lsm;Ljava/lang/Class;)V	<init>	<init>
		p	1	id	id
		p	2	clazz	clazz
	m	(Lcom/google/gson/JsonObject;Lcum;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
		p	1	json	json
		p	2	condition	condition
		p	3	context	context
	m	()Lsm;	a	getId
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcum;	b	fromJson
		p	1	json	json
		p	2	context	context
	m	()Ljava/lang/Class;	b	getConditionClass
c	cun	net/minecraft/loot/condition/LootConditions
	f	Ljava/util/Map;	a	byId
	f	Ljava/util/Map;	b	byClass
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	method_929
		p	1	operand	operand
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	joinAnd
		p	0	predicates	predicates
	m	(Lsm;)Lcum$b;	a	get
		p	0	id	id
	m	(Ljava/lang/Object;)Z	a	method_928
		p	0	predicates	predicates
	m	(Lcum$b;)V	a	register
		p	0	condition	condition
	m	(Lcum;)Lcum$b;	a	getFactory
		p	0	condition	condition
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	method_927
		p	1	operand	operand
	m	(Ljava/lang/Object;)Z	b	method_921
		p	0	predicates	predicates
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	joinOr
		p	0	predicates	predicates
c	cun$a	net/minecraft/loot/condition/LootConditions$Factory
	m	(Lcum;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lcum;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	condition	condition
		p	2	unused	unused
		p	3	context	context
c	cuo	net/minecraft/loot/condition/EntityPropertiesLootCondition
	f	Lbb;	a	predicate
	f	Lcrx$c;	b	entity
	m	(Lbb;Lcrx$c;)V	<init>	<init>
		p	1	predicate	predicate
		p	2	entity	entity
	m	(Lcrx$c;Lbb$a;)Lcum$a;	a	builder
		p	0	entity	entity
		p	1	predicateBuilder	predicateBuilder
	m	(Lcrx;)Z	a	test
	m	(Lcrx$c;)Lcum$a;	a	create
		p	0	entity	entity
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cuo$a	net/minecraft/loot/condition/EntityPropertiesLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcuo;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcuo;	a	fromJson
c	cup	net/minecraft/loot/condition/KilledByPlayerLootCondition
	f	Lcup;	a	INSTANCE
	m	(Lcrx;)Z	a	test
	m	()Lcum$a;	b	builder
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cup$a	net/minecraft/loot/condition/KilledByPlayerLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcup;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcup;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cuq	net/minecraft/loot/condition/RandomChanceLootCondition
	f	F	a	chance
	m	(F)V	<init>	<init>
		p	1	chance	chance
	m	(Lcrx;)Z	a	test
	m	(F)Lcum$a;	a	builder
		p	0	chance	chance
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cuq$a	net/minecraft/loot/condition/RandomChanceLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcuq;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcuq;	a	fromJson
c	cur	net/minecraft/loot/condition/RandomChanceWithLootingLootCondition
	f	F	a	chance
	f	F	b	lootingMultiplier
	m	(FF)V	<init>	<init>
		p	1	chance	chance
		p	2	lootingMultiplier	lootingMultiplier
	m	(Lcrx;)Z	a	test
	m	(FF)Lcum$a;	a	builder
		p	0	chance	chance
		p	1	lootingMultiplier	lootingMultiplier
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cur$a	net/minecraft/loot/condition/RandomChanceWithLootingLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcur;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcur;	a	fromJson
c	cus	net/minecraft/loot/condition/MatchToolLootCondition
	f	Lbj;	a	predicate
	m	(Lbj;)V	<init>	<init>
		p	1	predicate	predicate
	m	(Lcrx;)Z	a	test
	m	(Lbj$a;)Lcum$a;	a	builder
		p	0	predicate	predicate
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cus$a	net/minecraft/loot/condition/MatchToolLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcus;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcus;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cut	net/minecraft/loot/condition/TimeCheckLootCondition
	f	Ljava/lang/Long;	a	period
	f	Lcsf;	b	value
	m	(Ljava/lang/Long;Lcsf;)V	<init>	<init>
		p	1	period	period
		p	2	value	value
	m	(Lcrx;)Z	a	test
c	cut$b	net/minecraft/loot/condition/TimeCheckLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcut;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcut;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cuu	net/minecraft/loot/condition/WeatherCheckLootCondition
	f	Ljava/lang/Boolean;	a	raining
	f	Ljava/lang/Boolean;	b	thundering
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1	raining	raining
		p	2	thundering	thundering
	m	(Lcrx;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	cuu$b	net/minecraft/loot/condition/WeatherCheckLootCondition$Factory
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcuu;	a	fromJson
	m	(Lcom/google/gson/JsonObject;Lcuu;Lcom/google/gson/JsonSerializationContext;)V	a	toJson
c	cuy	net/minecraft/world/timer/FunctionTimerCallback
	f	Lsm;	a	name
	m	(Lnet/minecraft/server/MinecraftServer;Lcvc;J)V	a	call
c	cuy$a	net/minecraft/world/timer/FunctionTimerCallback$Serializer
	m	(Ljt;Lcuy;)V	a	serialize
	m	(Ljt;)Lcuy;	a	deserialize
c	cuz	net/minecraft/world/timer/FunctionTagTimerCallback
	f	Lsm;	a	name
	m	(Lnet/minecraft/server/MinecraftServer;Lcvc;J)V	a	call
c	cuz$a	net/minecraft/world/timer/FunctionTagTimerCallback$Serializer
	m	(Ljt;Lcuz;)V	a	serialize
	m	(Ljt;)Lcuz;	a	deserialize
c	cv	net/minecraft/command/arguments/NbtCompoundTagArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()Lcv;	a	nbtCompound
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljt;	a	getCompoundTag
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljt;	a	parse
c	cva	net/minecraft/world/timer/TimerCallback
	m	(Ljava/lang/Object;Lcvc;J)V	a	call
		p	1	server	server
		p	2	events	events
		p	3	time	time
c	cva$a	net/minecraft/world/timer/TimerCallback$Serializer
	f	Lsm;	a	id
	f	Ljava/lang/Class;	b	callbackClass
	m	(Ljt;Lcva;)V	a	serialize
		p	1	tag	tag
		p	2	callback	callback
	m	()Lsm;	a	getId
	m	()Ljava/lang/Class;	b	getCallbackClass
	m	(Ljt;)Lcva;	b	deserialize
		p	1	tag	tag
c	cvb	net/minecraft/world/timer/TimerCallbackSerializer
	f	Lcvb;	a	INSTANCE
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	serializersByType
	f	Ljava/util/Map;	d	serializersByClass
	m	(Lcva;)Ljt;	a	serialize
		p	1	callback	callback
	m	(Lcva$a;)Lcvb;	a	registerSerializer
		p	1	serializer	serializer
	m	(Ljt;)Lcva;	a	deserialize
		p	1	tag	tag
	m	(Ljava/lang/Class;)Lcva$a;	a	getSerializer
c	cvc	net/minecraft/world/timer/Timer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcvb;	b	callback
	f	Ljava/util/Queue;	c	events
	f	Lcom/google/common/primitives/UnsignedLong;	d	eventCounter
	f	Lcom/google/common/collect/Table;	e	eventsByName
	m	(Lcvb;)V	<init>	<init>
		p	1	timerCallbackSerializer	timerCallbackSerializer
	m	(Ljava/lang/String;JLcva;)V	a	setEvent
		p	1	name	name
		p	2	triggerTime	triggerTime
		p	4	callback	callback
	m	(Ljt;)V	a	addEvent
		p	1	tag	tag
	m	(Lcvc$a;)Ljt;	a	serialize
		p	1	event	event
	m	(Ljava/lang/Object;J)V	a	processEvents
		p	1	server	server
		p	2	time	time
	m	(Ljz;)V	a	fromTag
		p	1	tag	tag
	m	()Ljz;	b	toTag
	m	()Ljava/util/Comparator;	c	createEventComparator
c	cvc$a	net/minecraft/world/timer/Timer$Event
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	id
	f	Ljava/lang/String;	c	name
	f	Lcva;	d	callback
	m	(JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Lcva;)V	<init>	<init>
		p	1	triggerTime	triggerTime
		p	3	id	id
		p	4	name	name
		p	5	callback	callback
c	cvf	net/minecraft/util/math/Box
	f	D	a	x1
	f	D	b	y1
	f	D	c	z1
	f	D	d	x2
	f	D	e	y2
	f	D	f	z2
	m	(DDDDDD)V	<init>	<init>
		p	1	x1	x1
		p	3	y1	y1
		p	5	z1	z1
		p	7	x2	x2
		p	9	y2	y2
		p	11	z2	z2
	m	(Lfk;)V	<init>	<init>
		p	1	pos	pos
	m	(Lcvl;Lcvl;)V	<init>	<init>
		p	1	pos1	pos1
		p	2	pos2	pos2
	m	(Lfk;Lfk;)V	<init>	<init>
		p	1	pos1	pos1
		p	2	pos2	pos2
	m	(Lcvf;Lcvl;[DLfp;DDD)Lfp;	a	traceCollisionSide
		p	0	box	box
		p	1	intersectingVector	intersectingVector
		p	2	traceDistanceResult	traceDistanceResult
		p	3	approachDirection	approachDirection
		p	4	xDelta	xDelta
		p	6	yDelta	yDelta
		p	8	zDelta	zDelta
	m	(DDDDDD)Z	a	intersects
		p	1	minX	minX
		p	3	minY	minY
		p	5	minZ	minZ
		p	7	maxX	maxX
		p	9	maxY	maxY
		p	11	maxZ	maxZ
	m	()D	a	getAverageSideLength
	m	([DLfp;DDDDDDDDLfp;DDD)Lfp;	a	traceCollisionSide
		p	0	traceDistanceResult	traceDistanceResult
		p	1	approachDirection	approachDirection
		p	2	xDelta	xDelta
		p	4	yDelta	yDelta
		p	6	zDelta	zDelta
		p	8	begin	begin
		p	10	minX	minX
		p	12	maxX	maxX
		p	14	minZ	minZ
		p	16	maxZ	maxZ
		p	18	resultDirection	resultDirection
		p	19	startX	startX
		p	21	startY	startY
		p	23	startZ	startZ
	m	(Lcvl;)Lcvf;	a	stretch
		p	1	scale	scale
	m	(DDD)Lcvf;	a	shrink
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcvl;Lcvl;)Z	a	intersects
		p	1	from	from
		p	2	to	to
	m	(Lclb;)Lcvf;	a	from
		p	0	mutable	mutable
	m	(Lfp$a;)D	a	getMin
		p	1	axis	axis
	m	(Lcvf;)Lcvf;	a	intersection
		p	1	box	box
	m	(Ljava/lang/Iterable;Lcvl;Lcvl;Lfk;)Lcvg;	a	rayTrace
		p	0	boxes	boxes
		p	1	from	from
		p	2	to	to
		p	3	pos	pos
	m	(Lfk;)Lcvf;	a	offset
		p	1	blockPos	blockPos
	m	()D	b	getXLength
	m	(Lcvl;)Lcvf;	b	offset
		p	1	vec3d	vec3d
	m	(Lcvl;Lcvl;)Ljava/util/Optional;	b	rayTrace
		p	1	min	min
		p	2	max	max
	m	(DDD)Lcvf;	b	stretch
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfp$a;)D	b	getMax
		p	1	axis	axis
	m	(Lcvf;)Lcvf;	b	union
		p	1	box	box
	m	(Lcvf;)Z	c	intersects
		p	1	box	box
	m	()D	c	getYLength
	m	(Lcvl;)Z	c	contains
		p	1	vec	vec
	m	(DDD)Lcvf;	c	expand
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()D	d	getZLength
	m	(DDD)Lcvf;	d	offset
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(DDD)Z	e	contains
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Z	e	isValid
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Lcvl;	f	getCenter
	m	(D)Lcvf;	g	expand
		p	1	value	value
	m	(D)Lcvf;	h	contract
		p	1	value	value
c	cvg	net/minecraft/util/hit/BlockHitResult
	f	Lfp;	b	side
	f	Lfk;	c	blockPos
	f	Z	d	missed
	f	Z	e	insideBlock
	m	(ZLcvl;Lfp;Lfk;Z)V	<init>	<init>
		p	1	missed	missed
		p	2	pos	pos
		p	3	side	side
		p	4	blockPos	blockPos
		p	5	insideBlock	insideBlock
	m	(Lcvl;Lfp;Lfk;Z)V	<init>	<init>
		p	1	pos	pos
		p	2	side	side
		p	3	blockPos	blockPos
	m	()Lfk;	a	getBlockPos
	m	(Lcvl;Lfp;Lfk;)Lcvg;	a	createMissed
		p	0	pos	pos
		p	1	side	side
		p	2	blockPos	blockPos
	m	(Lfp;)Lcvg;	a	withSide
		p	1	side	side
	m	()Lfp;	b	getSide
	m	()Z	d	isInsideBlock
c	cvh	net/minecraft/util/hit/EntityHitResult
	f	Lakq;	b	entity
	m	(Lakq;)V	<init>	<init>
		p	1	entity	entity
	m	(Lakq;Lcvl;)V	<init>	<init>
		p	1	entity	entity
		p	2	pos	pos
	m	()Lakq;	a	getEntity
c	cvi	net/minecraft/util/hit/HitResult
	f	Lcvl;	a	pos
	m	(Lcvl;)V	<init>	<init>
		p	1	pos	pos
	m	()Lcvi$a;	c	getType
	m	()Lcvl;	e	getPos
c	cvi$a	net/minecraft/util/hit/HitResult$Type
c	cvj	net/minecraft/client/util/math/PosAndRot
	f	Lcvl;	a	pos
	f	F	b	pitch
	f	F	c	yaw
	m	(Lcvl;FF)V	<init>	<init>
		p	1	pos	pos
		p	2	pitch	pitch
		p	3	yaw	yaw
	m	()Lcvl;	a	getPos
	m	()F	b	getPitch
	m	()F	c	getYaw
c	cvk	net/minecraft/util/math/Vec2f
	f	Lcvk;	a	ZERO
	f	Lcvk;	b	SOUTH_EAST_UNIT
	f	Lcvk;	c	EAST_UNIT
	f	Lcvk;	d	WEST_UNIT
	f	Lcvk;	e	SOUTH_UNIT
	f	Lcvk;	f	NORTH_UNIT
	f	Lcvk;	g	MAX_SOUTH_EAST
	f	Lcvk;	h	MIN_SOUTH_EAST
	f	F	i	x
	f	F	j	y
	m	(FF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
	m	(Lcvk;)Z	c	equals
		p	1	other	other
c	cvl	net/minecraft/util/math/Vec3d
	f	Lcvl;	a	ZERO
	f	D	b	x
	f	D	c	y
	f	D	d	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(D)Lcvl;	a	multiply
		p	1	mult	mult
	m	(Lcvl;)Lcvl;	a	reverseSubtract
	m	(Lcvk;)Lcvl;	a	fromPolar
		p	0	polar	polar
	m	(F)Lcvl;	a	rotateX
	m	(Lfp$a;)D	a	getComponentAlongAxis
	m	(DDD)Lcvl;	a	subtract
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Ljava/util/EnumSet;)Lcvl;	a	floorAlongAxes
		p	1	axes	axes
	m	(FF)Lcvl;	a	fromPolar
		p	0	pitch	pitch
		p	1	yaw	yaw
	m	(F)Lcvl;	b	rotateY
	m	(DDD)Lcvl;	b	add
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcvl;)D	b	dotProduct
	m	(DDD)D	c	squaredDistanceTo
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcvl;)Lcvl;	c	crossProduct
	m	(DDD)Lcvl;	d	multiply
		p	1	multX	multX
		p	3	multY	multY
		p	5	multZ	multZ
	m	(Lcvl;)Lcvl;	d	subtract
	m	()Lcvl;	d	normalize
	m	()Lcvl;	e	negate
	m	(Lcvl;)Lcvl;	e	add
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()D	f	length
	m	(Lcvl;)D	f	distanceTo
	m	()D	g	lengthSquared
	m	(Lcvl;)D	g	squaredDistanceTo
	m	(Lcvl;)Lcvl;	h	multiply
		p	1	mult	mult
c	cvn	net/minecraft/util/shape/ArrayVoxelShape
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xPoints
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	yPoints
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zPoints
	m	(Lcvu;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1	shape	shape
		p	2	xPoints	xPoints
		p	3	yPoints	yPoints
		p	4	zPoints	zPoints
	m	(Lcvu;[D[D[D)V	<init>	<init>
		p	1	shape	shape
		p	2	xPoints	xPoints
		p	3	yPoints	yPoints
		p	4	zPoints	zPoints
c	cvo	net/minecraft/util/shape/BitSetVoxelSet
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
	m	(Lcvu;)V	<init>	<init>
		p	1	other	other
	m	(III)V	<init>	<init>
		p	1	xSize	xSize
		p	2	ySize	ySize
		p	3	zSize	zSize
	m	(IIIIIIIII)V	<init>	<init>
		p	1	xMask	xMask
		p	2	yMask	yMask
		p	3	zMask	zMask
		p	4	xMin	xMin
		p	5	yMin	yMin
		p	6	zMin	zMin
		p	7	xMax	xMax
		p	8	yMax	yMax
		p	9	zMax	zMax
	m	(Lcvu;Lcvu;Lcvx;Lcvx;Lcvx;Lcvp;)Lcvo;	a	combine
		p	0	first	first
		p	1	second	second
		p	2	xPoints	xPoints
		p	3	yPoints	yPoints
		p	4	zPoints	zPoints
		p	5	function	function
	m	(III)I	a	getIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	cvp	net/minecraft/util/BooleanBiFunction
	f	Lcvp;	a	FALSE
	f	Lcvp;	b	NOT_OR
	f	Lcvp;	c	ONLY_SECOND
	f	Lcvp;	d	NOT_FIRST
	f	Lcvp;	e	ONLY_FIRST
	f	Lcvp;	f	NOT_SECOND
	f	Lcvp;	g	NOT_SAME
	f	Lcvp;	h	NOT_AND
	f	Lcvp;	i	AND
	f	Lcvp;	j	SAME
	f	Lcvp;	k	SECOND
	f	Lcvp;	l	CAUSES
	f	Lcvp;	m	FIRST
	f	Lcvp;	n	CAUSED_BY
	f	Lcvp;	o	OR
	f	Lcvp;	p	TRUE
c	cvq	net/minecraft/entity/EntityContext
	m	()Lcvq;	a	absent
	m	(Lakq;)Lcvq;	a	of
		p	0	entity	entity
	m	(Lbei;)Z	a	isHolding
		p	1	item	item
	m	(Lcwf;Lfk;Z)Z	a	isAbove
		p	1	shape	shape
		p	2	pos	pos
		p	3	defaultValue	defaultValue
	m	()Z	b	isDescending
c	cvr	net/minecraft/util/shape/FractionalDoubleList
	f	I	a	sectionCount
	m	(I)V	<init>	<init>
		p	1	sectionCount	sectionCount
	m	(I)D	getDouble	getDouble
		p	1	position	position
c	cvs	net/minecraft/util/shape/SimpleVoxelShape
	m	(Lcvu;)V	<init>	<init>
		p	1	shape	shape
c	cvt	net/minecraft/util/shape/FractionalPairList
	f	Lcvr;	a	mergedList
	f	I	b	firstSectionCount
	f	I	c	secondSectionCount
	f	I	d	gcd
	m	(II)V	<init>	<init>
		p	1	firstSectionCount	firstSectionCount
		p	2	secondSectionCount	secondSectionCount
c	cvu	net/minecraft/util/shape/VoxelSet
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	f	[Lfp$a;	d	AXES
	m	(III)V	<init>	<init>
		p	1	xSize	xSize
		p	2	ySize	ySize
		p	3	zSize	zSize
	m	(Lfp$a;)I	a	getMin
		p	1	axis	axis
	m	(IIIIZ)V	a	setColumn
		p	1	minZ	minZ
		p	2	maxZ	maxZ
		p	3	x	x
		p	4	y	y
		p	5	included	included
	m	(Lfi;III)Z	a	inBoundsAndContains
		p	1	cycle	cycle
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lfp$a;II)I	a	getBeginningAxisCoord
		p	2	begin	begin
		p	3	end	end
	m	(Lcvu$b;Z)V	a	forEachEdge
	m	(Lcvu$a;Lfi;)V	a	forEachDirection
		p	2	direction	direction
	m	()Z	a	isEmpty
	m	(Lcvu$a;)V	a	forEachDirection
	m	(Lcvu$b;Lfi;Z)V	a	forEachEdge
		p	2	direction	direction
	m	(IIIZZ)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	resize	resize
		p	5	included	included
	m	(IIIII)Z	a	isRectangleFull
		p	1	minX	minX
		p	2	maxX	maxX
		p	3	minZ	minZ
		p	4	maxZ	maxZ
		p	5	y	y
	m	(IIII)Z	a	isColumnFull
		p	1	minZ	minZ
		p	2	maxZ	maxZ
		p	3	x	x
		p	4	y	y
	m	(Lfp$a;)I	b	getMax
		p	1	axis	axis
	m	(Lfi;III)Z	b	contains
		p	1	cycle	cycle
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lcvu$b;Z)V	b	forEachBox
		p	1	consumer	consumer
		p	2	largest	largest
	m	(III)Z	b	contains
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()I	b	getXSize
	m	(Lfp$a;II)I	b	getEndingAxisCoord
		p	2	from	from
		p	3	to	to
	m	()I	c	getYSize
	m	(Lfp$a;)I	c	getSize
		p	1	axis	axis
	m	(III)Z	c	inBoundsAndContains
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()I	d	getZSize
c	cvu$a	net/minecraft/util/shape/VoxelSet$PositionConsumer
	m	(Lfp;III)V	consume	consume
		p	1	direction	direction
		p	2	x	x
		p	3	y	y
		p	4	z	z
c	cvu$b	net/minecraft/util/shape/VoxelSet$PositionBiConsumer
	m	(IIIIII)V	consume	consume
		p	1	x1	x1
		p	2	y1	y1
		p	3	z1	z1
		p	4	x2	x2
		p	5	y2	y2
		p	6	z2	z2
c	cvv	net/minecraft/entity/EntityContextImpl
	f	Lcvq;	a	ABSENT
	f	Z	b	descending
	f	D	c	minY
	f	Lbei;	d	heldItem
	m	(ZDLbei;)V	<init>	<init>
		p	1	descending	descending
		p	2	minY	minY
		p	4	heldItem	heldItem
	m	(Lakq;)V	<init>	<init>
		p	1	entity	entity
c	cvv$1	net/minecraft/entity/EntityContextImpl$1
	m	(ZDLbei;)V	<init>	<init>
		p	1	sneaking	sneaking
c	cvw	net/minecraft/util/shape/IdentityPairList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	merged
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1	values	values
c	cvx	net/minecraft/util/shape/PairList
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getPairs
	m	(Lcvx$a;)Z	a	forEachPair
		p	1	predicate	predicate
c	cvx$a	net/minecraft/util/shape/PairList$Consumer
	m	(III)Z	merge	merge
		p	1	x	x
		p	2	y	y
		p	3	index	index
c	cvy	net/minecraft/util/shape/SimplePairList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleArrayList;	a	valueIndices
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	b	minValues
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	c	maxValues
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V	<init>	<init>
		p	1	first	first
		p	2	second	second
		p	3	includeFirstOnly	includeFirstOnly
		p	4	includeSecondOnly	includeSecondOnly
c	cw	net/minecraft/command/arguments/DimensionArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_DIMENSION_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lcbi;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcbi;	a	getDimensionArgument
		p	0	context	context
		p	1	name	name
	m	()Lcw;	a	dimension
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	cwa	net/minecraft/util/shape/DisjointPairList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	first
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	second
	f	Z	c	inverted
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V	<init>	<init>
		p	1	first	first
		p	2	second	second
		p	3	inverted	inverted
	m	(Lcvx$a;)Z	b	iterateSections
	m	(I)D	getDouble	getDouble
		p	1	position	position
c	cwb	net/minecraft/util/OffsetDoubleList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	oldList
	f	D	b	offset
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V	<init>	<init>
		p	1	oldList	oldList
		p	2	offset	offset
	m	(I)D	getDouble	getDouble
		p	1	position	position
c	cwc	net/minecraft/util/shape/VoxelShapes
	f	Lcwf;	a	UNBOUNDED
	f	Lcwf;	b	FULL_CUBE
	f	Lcwf;	c	EMPTY
	m	(Lcwf;Lcwf;Lfp;)Z	a	isSideCovered
		p	0	shape	shape
		p	1	neighbor	neighbor
		p	2	direction	direction
	m	(Lcvp;Lcvu;IILcvu;IIIII)Z	a	method_1070
		p	7	z1	z1
		p	8	z2	z2
		p	9	index3	index3
	m	(Lcwf;Lcwf;)Lcwf;	a	union
		p	0	first	first
		p	1	second	second
	m	(Lfp$a;Lcvf;Lbjz;DLcvq;Ljava/util/stream/Stream;)D	a	calculatePushVelocity
		p	1	box	box
		p	2	world	world
		p	3	initial	initial
		p	5	context	context
		p	6	shapes	shapes
	m	(Lcvx;Lcvx;Lcvx;Lcvu;Lcvu;Lcvp;)Z	a	matchesAnywhere
		p	0	mergedX	mergedX
		p	1	mergedY	mergedY
		p	2	mergedZ	mergedZ
		p	3	shape1	shape1
		p	4	shape2	shape2
		p	5	predicate	predicate
	m	(DDD)I	a	clamp
		p	0	value	value
		p	2	min	min
		p	4	max	max
	m	(DD)I	a	findRequiredBitResolution
		p	0	min	min
		p	2	max	max
	m	(DDDDDD)Lcwf;	a	cuboid
		p	0	xMin	xMin
		p	2	yMin	yMin
		p	4	zMin	zMin
		p	6	xMax	xMax
		p	8	yMax	yMax
		p	10	zMax	zMax
	m	()Lcwf;	a	empty
	m	(Lfp$a;Lcvf;Ljava/util/stream/Stream;D)D	a	calculateMaxOffset
		p	0	axis	axis
		p	1	box	box
		p	2	shapes	shapes
		p	3	maxDist	maxDist
	m	(II)J	a	lcm
		p	0	a	a
		p	1	b	b
	m	(Lcvx;Lcvp;Lcvu;ILcvu;IIII)Z	a	method_1076
		p	6	y1	y1
		p	7	y2	y2
		p	8	index2	index2
	m	(Lcwf;Lfp;)Lcwf;	a	extrudeFace
		p	0	shape	shape
		p	1	direction	direction
	m	(Lcvx;Lcvx;Lcvp;Lcvu;Lcvu;III)Z	a	method_1075
		p	5	x1	x1
		p	6	x2	x2
		p	7	index1	index1
	m	(Lcwf;[Lcwf;)Lcwf;	a	union
		p	0	first	first
		p	1	others	others
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lcvx;	a	createListPair
		p	0	size	size
		p	1	first	first
		p	2	second	second
		p	3	includeFirst	includeFirst
		p	4	includeSecond	includeSecond
	m	(Lcvf;)Lcwf;	a	cuboid
		p	0	box	box
	m	(Lcwf;Lcwf;Lcvp;)Lcwf;	a	combineAndSimplify
		p	0	first	first
		p	1	second	second
		p	2	function	function
	m	(Lcvf;Lbjz;DLcvq;Lfi;Ljava/util/stream/Stream;)D	a	calculatePushVelocity
		p	0	box	box
		p	1	world	world
		p	2	initial	initial
		p	4	context	context
		p	5	direction	direction
		p	6	shapes	shapes
	m	(Lcwf;Lcwf;)Z	b	unionCoversFullCube
		p	0	one	one
		p	1	two	two
	m	(Lcwf;Lcwf;Lcvp;)Lcwf;	b	combine
		p	0	one	one
		p	1	two	two
		p	2	function	function
	m	()Lcwf;	b	fullCube
	m	(Lcwf;Lcwf;Lfp;)Z	b	adjacentSidesCoverSquare
		p	0	one	one
		p	1	two	two
		p	2	direction	direction
	m	(Lcwf;Lcwf;Lcvp;)Z	c	matchesAnywhere
		p	0	shape1	shape1
		p	1	shape2	shape2
		p	2	predicate	predicate
c	cwc$a	net/minecraft/util/shape/VoxelShapes$BoxConsumer
	m	(DDDDDD)V	consume	consume
		p	1	minX	minX
		p	3	minY	minY
		p	5	minZ	minZ
		p	7	maxX	maxX
		p	9	maxY	maxY
		p	11	maxZ	maxZ
c	cwd	net/minecraft/util/shape/SlicedVoxelShape
	f	Lcwf;	b	shape
	f	Lfp$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	POINTS
	m	(Lcwf;Lfp$a;I)V	<init>	<init>
		p	1	shape	shape
		p	2	axis	axis
		p	3	sliceWidth	sliceWidth
	m	(Lcvu;Lfp$a;I)Lcvu;	a	createVoxelSet
		p	0	voxelSet	voxelSet
		p	2	sliceWidth	sliceWidth
c	cwe	net/minecraft/util/shape/CroppedVoxelSet
	f	Lcvu;	d	parent
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
	m	(Lcvu;IIIIII)V	<init>	<init>
		p	1	parent	parent
		p	2	xMin	xMin
		p	3	yMin	yMin
		p	4	zMin	zMin
		p	5	xMax	xMax
		p	6	yMax	yMax
		p	7	zMax	zMax
c	cwf	net/minecraft/util/shape/VoxelShape
	f	Lcvu;	a	voxels
	f	[Lcwf;	b	shapeCache
	m	(Lcvu;)V	<init>	<init>
		p	1	voxels	voxels
	m	(Lfi;Lcvf;D)D	a	calculateMaxDistance
		p	1	axisCycle	axisCycle
		p	2	box	box
		p	3	maxDist	maxDist
	m	(Lcvl;Lcvl;Lfk;)Lcvg;	a	rayTrace
		p	1	start	start
		p	2	end	end
		p	3	pos	pos
	m	(Lfp$a;Lcvf;D)D	a	calculateMaxDistance
		p	1	axis	axis
		p	2	box	box
		p	3	maxDist	maxDist
	m	(Lfp$a;D)I	a	getCoordIndex
		p	2	coord	coord
	m	(Lfp$a;DD)D	a	getBeginningCoord
		p	2	from	from
		p	4	to	to
	m	()Lcvf;	a	getBoundingBox
	m	(Lfp$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getPointPositions
		p	1	axis	axis
	m	(Lfp;)Lcwf;	a	getFace
		p	1	facing	facing
	m	(Lcwc$a;)V	a	forEachEdge
	m	(Lfp$a;I)D	a	getPointPosition
		p	1	axis	axis
		p	2	index	index
	m	(DDD)Lcwf;	a	offset
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcwc$a;)V	b	forEachBox
	m	(Lfp$a;DD)D	b	getEndingCoord
		p	2	from	from
		p	4	to	to
	m	(Lfp$a;)D	b	getMinimum
		p	1	axis	axis
	m	(DDD)Z	b	contains
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfp;)Lcwf;	b	getUncachedFace
		p	1	facing	facing
	m	()Z	b	isEmpty
	m	()Lcwf;	c	simplify
	m	(Lfp$a;)D	c	getMaximum
		p	1	axis	axis
	m	()Ljava/util/List;	d	getBoundingBoxes
c	cwi	net/minecraft/scoreboard/ScoreboardObjective
	f	Lcwl;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Lcwo;	c	criterion
	f	Llf;	d	displayName
	f	Lcwo$a;	e	renderType
	m	(Lcwl;Ljava/lang/String;Lcwo;Llf;Lcwo$a;)V	<init>	<init>
		p	1	scoreboard	scoreboard
		p	2	name	name
		p	3	criterion	criterion
		p	4	displayName	displayName
		p	5	renderType	renderType
	m	(Llf;)V	a	setDisplayName
		p	1	name	name
	m	(Lln;)V	a	method_1119
		p	1	style	style
	m	()Lcwl;	a	getScoreboard
	m	(Lcwo$a;)V	a	setRenderType
		p	1	renderType	renderType
	m	()Ljava/lang/String;	b	getName
	m	()Lcwo;	c	getCriterion
	m	()Llf;	d	getDisplayName
	m	()Llf;	e	toHoverableText
	m	()Lcwo$a;	f	getRenderType
c	cwj	net/minecraft/scoreboard/Team
	f	Lcwl;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Set;	c	playerList
	f	Llf;	d	displayName
	f	Llf;	e	prefix
	f	Llf;	f	suffix
	f	Z	g	friendlyFire
	f	Z	h	showFriendlyInvisibles
	f	Lcwn$b;	i	nameTagVisibilityRule
	f	Lcwn$b;	j	deathMessageVisibilityRule
	f	Lg;	k	color
	f	Lcwn$a;	l	collisionRule
	m	(Lcwl;Ljava/lang/String;)V	<init>	<init>
		p	1	scoreboard	scoreboard
		p	2	name	name
	m	(Lg;)V	a	setColor
		p	1	color	color
	m	(Lcwn$a;)V	a	setCollisionRule
	m	(Llf;)V	a	setDisplayName
	m	(I)V	a	setFriendlyFlagsBitwise
	m	(Z)V	a	setFriendlyFireAllowed
		p	1	friendlyFire	friendlyFire
	m	(Lcwn$b;)V	a	setNameTagVisibilityRule
	m	(Lcwn;Llf;)Llf;	a	modifyText
	m	(Llf;)V	b	setPrefix
	m	(Lcwn$b;)V	b	setDeathMessageVisibilityRule
	m	(Z)V	b	setShowFriendlyInvisibles
		p	1	showFriendlyInvisible	showFriendlyInvisible
	m	()Llf;	c	getDisplayName
	m	(Llf;)V	c	setSuffix
	m	()Llf;	d	getFormattedName
	m	()Llf;	e	getPrefix
	m	()Llf;	f	getSuffix
	m	()I	m	getFriendlyFlagsBitwise
c	cwk	net/minecraft/scoreboard/ScoreboardPlayerScore
	f	Ljava/util/Comparator;	a	COMPARATOR
	f	Lcwl;	b	scoreboard
	f	Lcwi;	c	objective
	f	Ljava/lang/String;	d	playerName
	f	I	e	score
	f	Z	f	locked
	f	Z	g	forceUpdate
	m	(Lcwl;Lcwi;Ljava/lang/String;)V	<init>	<init>
		p	1	scoreboard	scoreboard
		p	2	objective	objective
		p	3	playerName	playerName
	m	(Z)V	a	setLocked
		p	1	locked	locked
	m	(I)V	a	incrementScore
	m	()V	a	incrementScore
	m	()I	b	getScore
	m	(I)V	c	setScore
		p	1	score	score
	m	()V	c	clearScore
	m	()Lcwi;	d	getObjective
	m	()Ljava/lang/String;	e	getPlayerName
	m	()Lcwl;	f	getScoreboard
	m	()Z	g	isLocked
c	cwl	net/minecraft/scoreboard/Scoreboard
	f	Ljava/util/Map;	a	objectives
	f	Ljava/util/Map;	b	objectivesByCriterion
	f	Ljava/util/Map;	c	playerObjectives
	f	[Lcwi;	d	objectiveSlots
	f	Ljava/util/Map;	e	teams
	f	Ljava/util/Map;	f	teamsByPlayer
	f	[Ljava/lang/String;	g	displaySlotNames
	m	(Lcwi;)V	a	updateObjective
		p	1	objective	objective
	m	(Ljava/lang/String;Lcwj;)Z	a	addPlayerToTeam
		p	1	playerName	playerName
	m	(Ljava/lang/String;Lcwo;Llf;Lcwo$a;)Lcwi;	a	addObjective
		p	1	name	name
		p	2	criterion	criterion
		p	3	displayName	displayName
		p	4	renderType	renderType
	m	(I)Lcwi;	a	getObjectiveForSlot
	m	(Lakq;)V	a	resetEntityScore
	m	(Ljava/lang/String;)V	a	updatePlayerScore
		p	1	playerName	playerName
	m	(Ljz;)V	a	fromTag
	m	(Lcwj;)V	a	updateScoreboardTeamAndPlayers
	m	(Lcwk;)V	a	updateScore
		p	1	score	score
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lcwi;)V	a	method_1182
		p	3	objective	objective
	m	(Ljava/lang/String;Lcwi;)V	a	updatePlayerScore
		p	1	playerName	playerName
		p	2	objective	objective
	m	(ILcwi;)V	a	setObjectiveSlot
		p	1	slot	slot
		p	2	objective	objective
	m	(Lcwo;)Ljava/util/List;	a	method_1179
		p	0	criterion	criterion
	m	(Ljz;Lcwk;)V	a	method_1161
		p	1	score	score
	m	(Lcwo;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	forEachScore
		p	1	criterion	criterion
		p	2	player	player
		p	3	action	action
	m	(Ljava/lang/String;Lcwj;)V	b	removePlayerFromTeam
		p	1	playerName	playerName
	m	(Lcwk;)Z	b	method_1177
		p	0	score	score
	m	(Ljava/lang/String;Lcwi;)Z	b	playerHasObjective
		p	1	playerName	playerName
		p	2	objective	objective
	m	(Lcwi;)V	b	updateExistingObjective
		p	1	objective	objective
	m	(Lcwj;)V	b	updateScoreboardTeam
	m	(I)Ljava/lang/String;	b	getDisplaySlotName
		p	0	slotId	slotId
	m	(Ljava/lang/String;)Z	b	containsObjective
		p	1	name	name
	m	()Ljava/util/Collection;	c	getObjectives
	m	(Lcwi;)V	c	updateRemovedObjective
		p	1	objective	objective
	m	(Ljava/lang/String;Lcwi;)Lcwk;	c	getPlayerScore
		p	1	player	player
		p	2	objective	objective
	m	(Ljava/lang/String;)Lcwi;	c	getObjective
		p	1	name	name
	m	(Lcwj;)V	c	updateRemovedTeam
	m	(Ljava/lang/String;)Lcwi;	d	getNullableObjective
		p	1	name	name
	m	(Lcwj;)V	d	removeTeam
	m	(Ljava/lang/String;Lcwi;)V	d	resetPlayerScore
		p	1	playerName	playerName
		p	2	objective	objective
	m	()Ljava/util/Collection;	d	getObjectiveNames
	m	(Ljava/lang/String;)Ljava/util/Map;	e	getPlayerObjectives
	m	(Ljava/lang/String;Lcwi;)Lcwk;	e	method_1187
		p	2	objective	objective
	m	()Ljava/util/Collection;	e	getKnownPlayers
	m	(Ljava/lang/String;)Lcwj;	f	getTeam
	m	()Ljava/util/Collection;	f	getTeamNames
	m	(Ljava/lang/String;)Lcwj;	g	addTeam
	m	()Ljava/util/Collection;	g	getTeams
	m	(Ljava/lang/String;)Z	h	clearPlayerTeam
	m	()[Ljava/lang/String;	h	getDisplaySlotNames
	m	(Lcwi;)Ljava/util/Collection;	i	getAllPlayerScores
		p	1	objective	objective
	m	()Ljz;	i	toTag
	m	(Ljava/lang/String;)Lcwj;	i	getPlayerTeam
	m	(Lcwi;)V	j	removeObjective
		p	1	objective	objective
	m	(Ljava/lang/String;)I	j	getDisplaySlotId
		p	0	slotName	slotName
c	cwm	net/minecraft/scoreboard/ScoreboardState
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcwl;	b	scoreboard
	f	Ljt;	c	tag
	m	(Lcwj;Ljz;)V	a	deserializeTeamPlayers
		p	1	team	team
	m	()Ljz;	a	serializeTeams
	m	(Ljz;)V	a	deserializeTeams
	m	(Lcwl;)V	a	setScoreboard
	m	(Ljz;)V	b	deserializeObjectives
	m	(Ljt;)V	c	deserializeDisplaySlots
	m	(Ljt;)V	d	serializeSlots
	m	()Ljz;	e	serializeObjectives
c	cwn	net/minecraft/scoreboard/AbstractTeam
	m	(Lcwn;)Z	a	isEqual
	m	()Ljava/lang/String;	b	getName
	m	(Llf;)Llf;	d	modifyText
	m	()Ljava/util/Collection;	g	getPlayerList
	m	()Z	h	isFriendlyFireAllowed
	m	()Z	i	shouldShowFriendlyInvisibles
	m	()Lcwn$b;	j	getNameTagVisibilityRule
	m	()Lcwn$b;	k	getDeathMessageVisibilityRule
	m	()Lcwn$a;	l	getCollisionRule
	m	()Lg;	n	getColor
c	cwn$a	net/minecraft/scoreboard/AbstractTeam$CollisionRule
	f	Ljava/lang/String;	e	name
	f	I	f	value
	f	Ljava/util/Map;	g	COLLISION_RULES
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	name	name
		p	4	value	value
	m	(Ljava/lang/String;)Lcwn$a;	a	getRule
		p	0	name	name
	m	()Llf;	b	getTranslationKey
c	cwn$b	net/minecraft/scoreboard/AbstractTeam$VisibilityRule
	f	Ljava/lang/String;	e	name
	f	I	f	value
	f	Ljava/util/Map;	g	VISIBILITY_RULES
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	name	name
		p	4	value	value
	m	(Ljava/lang/String;)Lcwn$b;	a	getRule
		p	0	name	name
	m	()Llf;	b	getTranslationKey
c	cwo	net/minecraft/scoreboard/ScoreboardCriterion
	f	Ljava/util/Map;	a	OBJECTIVES
	f	[Lcwo;	m	TEAM_KILLS
	f	[Lcwo;	n	KILLED_BY_TEAMS
	f	Ljava/lang/String;	o	name
	f	Z	p	readOnly
	f	Lcwo$a;	q	criterionType
	m	(Ljava/lang/String;ZLcwo$a;)V	<init>	<init>
		p	1	name	name
		p	2	readOnly	readOnly
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
	m	(Laaq;Lsm;)Ljava/util/Optional;	a	createStatCriterion
		p	0	statType	statType
		p	1	id	id
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	createStatCriterion
		p	0	name	name
	m	()Ljava/lang/String;	c	getName
	m	()Z	d	isReadOnly
	m	()Lcwo$a;	e	getCriterionType
c	cwo$a	net/minecraft/scoreboard/ScoreboardCriterion$RenderType
	f	Ljava/lang/String;	c	name
	f	Ljava/util/Map;	d	CRITERION_TYPES
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Lcwo$a;	a	getType
		p	0	name	name
	m	()Ljava/lang/String;	a	getName
c	cwr	net/minecraft/client/util/GlfwUtil
	m	()V	a	makeJvmCrash
	m	()D	b	getTime
c	cws	net/minecraft/client/sound/Source
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	pointer
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	c	playing
	f	I	d	bufferSize
	f	Leds;	e	stream
	m	(I)V	<init>	<init>
		p	1	pointer	pointer
	m	(Lcvl;)V	a	setPosition
	m	(Leds;)V	a	setStream
		p	1	stream	stream
	m	(Ljavax/sound/sampled/AudioFormat;I)I	a	getBufferSize
		p	0	format	format
		p	1	time	time
	m	()Lcws;	a	create
	m	(F)V	a	setPitch
	m	(Z)V	a	setLooping
	m	(Lcwx;)V	a	setBuffer
	m	(F)V	b	setVolume
	m	(Z)V	b	setRelative
	m	()V	b	close
	m	(F)V	c	setAttenuation
	m	()V	c	play
	m	()V	d	pause
	m	()V	e	resume
	m	()V	f	stop
	m	()Z	g	isStopped
	m	()V	h	disableAttenuation
	m	()V	i	tick
	m	()I	j	getSourceState
	m	()I	k	removeProcessedBuffers
c	cwt	net/minecraft/client/sound/SoundEngine
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	J	b	devicePointer
	f	J	c	contextPointer
	f	Lcwt$a;	d	EMPTY_SOURCE_SET
	f	Lcwt$a;	e	streamingSources
	f	Lcwt$a;	f	staticSources
	f	Lcwu;	g	listener
	m	()V	a	init
	m	(Lcwt$c;)Lcws;	a	createSource
		p	1	mode	mode
	m	(Lcws;)V	a	release
		p	1	source	source
	m	()V	b	close
	m	()Lcwu;	c	getListener
	m	()Ljava/lang/String;	d	getDebugString
	m	()I	e	getMonoSourceCount
	m	()J	f	openDevice
c	cwt$a	net/minecraft/client/sound/SoundEngine$SourceSet
	m	()Lcws;	a	createSource
	m	(Lcws;)Z	a	release
	m	()V	b	close
	m	()I	c	getMaxSourceCount
	m	()I	d	getSourceCount
c	cwt$b	net/minecraft/client/sound/SoundEngine$SourceSetImpl
	f	I	a	maxSourceCount
	f	Ljava/util/Set;	b	sources
	m	(I)V	<init>	<init>
		p	1	maxSourceCount	maxSourceCount
c	cwt$c	net/minecraft/client/sound/SoundEngine$RunMode
c	cwu	net/minecraft/client/sound/Listener
	f	F	a	volume
	m	(F)V	a	setVolume
		p	1	volume	volume
	m	(Lcvl;)V	a	setPosition
		p	1	position	position
	m	()F	a	getVolume
	m	(Le;Le;)V	a	setOrientation
	m	()V	b	init
c	cwv	net/minecraft/client/sound/OggAudioStream
	f	J	a	pointer
	f	Ljavax/sound/sampled/AudioFormat;	b	format
	f	Ljava/io/InputStream;	c	inputStream
	f	Ljava/nio/ByteBuffer;	d	buffer
	m	(Ljava/io/InputStream;)V	<init>	<init>
		p	1	inputStream	inputStream
	m	(Ljava/nio/FloatBuffer;Lcwv$a;)V	a	readChannels
	m	(Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcwv$a;)V	a	readChannels
	m	(Lcwv$a;)Z	a	readOggFile
	m	()Z	c	readHeader
	m	()V	d	increaseBufferSize
c	cwv$a	net/minecraft/client/sound/OggAudioStream$ChannelList
	f	Ljava/util/List;	a	buffers
	f	I	b	size
	f	Ljava/nio/ByteBuffer;	d	buffer
	m	(F)V	a	addChannel
	m	()Ljava/nio/ByteBuffer;	a	getBuffer
	m	()V	b	init
c	cww	net/minecraft/client/sound/AlUtil
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljavax/sound/sampled/AudioFormat;)I	a	getFormatId
		p	0	format	format
	m	(Ljava/lang/String;)Z	a	checkErrors
		p	0	sectionName	sectionName
	m	(JLjava/lang/String;)Z	a	checkAlcErrors
		p	0	deviceHandle	deviceHandle
		p	2	sectionName	sectionName
	m	(I)Ljava/lang/String;	a	getErrorMessage
		p	0	errorCode	errorCode
	m	(I)Ljava/lang/String;	b	getAlcErrorMessage
		p	0	errorCode	errorCode
c	cwx	net/minecraft/client/sound/StaticSound
	f	Ljava/nio/ByteBuffer;	a	sample
	f	Ljavax/sound/sampled/AudioFormat;	b	format
	f	Z	c	hasBuffer
	f	I	d	streamBufferPointer
	m	(Ljava/nio/ByteBuffer;Ljavax/sound/sampled/AudioFormat;)V	<init>	<init>
		p	1	sample	sample
		p	2	format	format
	m	()Ljava/util/OptionalInt;	a	getStreamBufferPointer
	m	()V	b	close
	m	()Ljava/util/OptionalInt;	c	takeStreamBufferPointer
c	cwy	net/minecraft/client/font/Glyph
	m	(Z)F	a	getAdvance
		p	1	isBold	isBold
	m	()F	a	getBearingX
	m	()F	b	getBoldOffset
	m	()F	c	getShadowOffset
c	cwz	net/minecraft/client/font/Font
	m	(C)Lcxa;	a	getGlyph
		p	1	character	character
c	cx	net/minecraft/command/arguments/EntityAnchorArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	INVALID_ANCHOR_EXCEPTION
	m	()Lcx;	a	entityAnchor
	m	(Lcom/mojang/brigadier/StringReader;)Lcx$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcx$a;	a	getEntityAnchor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	cx$a	net/minecraft/command/arguments/EntityAnchorArgumentType$EntityAnchor
	f	Ljava/util/Map;	c	anchors
	f	Ljava/lang/String;	d	id
	f	Ljava/util/function/BiFunction;	e	offset
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	3	id	id
		p	4	offset	offset
	m	(Ljava/lang/String;)Lcx$a;	a	fromId
		p	0	id	id
	m	(Lcq;)Lcvl;	a	positionAt
	m	(Lakq;)Lcvl;	a	positionAt
c	cxa	net/minecraft/client/font/RenderableGlyph
	m	(II)V	a	upload
		p	1	x	x
		p	2	y	y
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()Z	f	hasColor
	m	()F	g	getOversample
	m	()F	h	getXMin
	m	()F	i	getXMax
	m	()F	j	getYMin
	m	()F	k	getYMax
	m	()F	l	getAscent
c	cxb	net/minecraft/client/font/TrueTypeFont
	f	Lorg/lwjgl/stb/STBTTFontinfo;	b	info
	f	F	c	oversample
	f	Lit/unimi/dsi/fastutil/chars/CharSet;	d	excludedCharacters
	f	F	e	shiftX
	f	F	f	shiftY
	f	F	g	scaleFactor
	f	F	h	ascent
	m	(C)Lcxb$a;	b	getGlyph
c	cxb$a	net/minecraft/client/font/TrueTypeFont$TtfGlyph
	f	I	b	width
	f	I	c	height
	f	F	d	bearingX
	f	F	e	ascent
	f	F	f	advance
	f	I	g	glyphIndex
	m	(Lcxb;IIIIFFI)V	<init>	<init>
		p	1	outerClass	outerClass
		p	2	xMin	xMin
		p	3	xMax	xMax
		p	4	yMax	yMax
		p	5	yMin	yMin
		p	6	advance	advance
		p	7	bearing	bearing
		p	8	index	index
c	cxc	com/mojang/blaze3d/systems/RenderCall
c	cxd	com/mojang/blaze3d/systems/RenderCallStorage
	f	Ljava/util/List;	a	recordingQueues
c	cxe	net/minecraft/client/gl/Framebuffer
	f	I	a	textureWidth
	f	I	b	textureHeight
	f	I	c	viewportWidth
	f	I	d	viewportHeight
	f	Z	e	useDepthAttachment
	f	I	f	fbo
	f	I	g	colorAttachment
	f	I	h	depthAttachment
	f	[F	i	clearColor
	f	I	j	texFilter
	m	(IIZZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	useDepth	useDepth
		p	4	getError	getError
	m	(IIZ)V	a	resize
		p	1	width	width
		p	2	height	height
		p	3	getError	getError
	m	(I)V	a	setTexFilter
	m	(FFFF)V	a	setClearColor
		p	1	r	r
		p	2	g	g
		p	3	b	b
		p	4	a	a
	m	(Z)V	a	beginWrite
		p	1	setViewport	setViewport
	m	(II)V	a	draw
		p	1	width	width
		p	2	height	height
	m	()V	a	delete
	m	(Z)V	b	clear
		p	1	getError	getError
	m	(IIZ)V	b	initFbo
		p	1	width	width
		p	2	height	height
		p	3	getError	getError
	m	()V	b	checkFramebufferStatus
	m	(IIZ)V	c	draw
		p	1	width	width
		p	2	height	height
	m	()V	c	beginRead
	m	(Z)V	c	bind
		p	1	updateViewport	updateViewport
	m	(IIZ)V	d	resizeInternal
		p	1	width	width
		p	2	height	height
		p	3	getError	getError
	m	()V	d	endRead
	m	(IIZ)V	e	drawInternal
		p	1	width	width
		p	2	height	height
	m	()V	e	endWrite
c	cxf	net/minecraft/client/util/Clipboard
	f	Ljava/nio/ByteBuffer;	a	clipboardBuffer
	m	(JLjava/lang/String;)V	a	setClipboard
		p	1	window	window
	m	(JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String;	a	getClipboard
		p	1	window	window
	m	(JLjava/nio/ByteBuffer;[B)V	a	setClipboard
c	cxg	net/minecraft/client/util/Untracker
	f	Ljava/lang/invoke/MethodHandle;	a	ALLOCATOR_UNTRACK
	m	(Lorg/lwjgl/system/Pointer;)V	a	untrack
		p	0	pointer	pointer
	m	(J)V	a	untrack
		p	0	address	address
c	cxh	net/minecraft/client/WindowSettings
	f	I	a	width
	f	I	b	height
	f	Ljava/util/OptionalInt;	c	fullscreenWidth
	f	Ljava/util/OptionalInt;	d	fullscreenHeight
	f	Z	e	fullscreen
	m	(IILjava/util/OptionalInt;Ljava/util/OptionalInt;Z)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	fullscreenWidth	fullscreenWidth
		p	4	fullscreenHeight	fullscreenHeight
		p	5	fullscreen	fullscreen
c	cxi	com/mojang/blaze3d/platform/FramebufferInfo
	c	Contains global constants for the frame buffer and frame buffer states,\nnormalized to the current implementation running on the target system.
	f	I	a	FRAME_BUFFER
	f	I	b	RENDER_BUFFER
	f	I	c	COLOR_ATTACHMENT
	f	I	d	DEPTH_ATTACHMENT
	f	I	e	FRAME_BUFFER_COMPLETE
		c	{@see GL30
	f	I	f	FRAME_BUFFER_INCOMPLETE_ATTACHMENT
		c	{@see GL30
	f	I	g	FRAME_BUFFER_INCOMPLETE_MISSING_ATTACHMENT
		c	{@see GL30
	f	I	h	FRAME_BUFFER_INCOMPLETE_DRAW_BUFFER
		c	{@see GL30
	f	I	i	FRAME_BUFFER_INCOMPLETE_READ_BUFFER
		c	{@see GL30
c	cxj	net/minecraft/client/gl/GlDebug
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lcom/google/common/base/Joiner;	e	NEWLINE_JOINER
	f	Lcom/google/common/base/Joiner;	f	SEMICOLON_JOINER
	f	Ljava/util/Map;	g	CONSTANTS
	f	Ljava/util/List;	h	KHR_VERBOSITY_LEVELS
	f	Ljava/util/List;	i	ARB_VERBOSITY_LEVELS
	m	(ILjava/lang/String;)V	a	registerConstant
		p	0	constant	constant
		p	1	description	description
	m	(IIIIIJJ)V	a	info
		p	0	source	source
		p	1	type	type
		p	2	id	id
		p	3	severity	severity
	m	(I)Ljava/lang/String;	a	unknown
		p	0	opcode	opcode
	m	(IZ)V	a	enableDebug
		p	0	verbosity	verbosity
		p	1	sync	sync
	m	(I)Ljava/lang/String;	b	getSource
		p	0	opcode	opcode
	m	(I)Ljava/lang/String;	c	getType
		p	0	opcode	opcode
	m	(I)Ljava/lang/String;	d	getSeverity
		p	0	opcode	opcode
c	cxk	com/mojang/blaze3d/platform/GlStateManager
	f	Ljava/nio/FloatBuffer;	a	MATRIX_BUFFER
	f	Lcxk$a;	b	ALPHA_TEST
	f	Lcxk$c;	c	LIGHTING
	f	[Lcxk$c;	d	LIGHT_ENABLE
	f	Lcxk$h;	e	COLOR_MATERIAL
	f	Lcxk$b;	f	BLEND
	f	Lcxk$j;	g	DEPTH
	f	Lcxk$n;	h	FOG
	f	Lcxk$i;	i	CULL
	f	Lcxk$p;	j	POLY_OFFSET
	f	Lcxk$f;	k	COLOR_LOGIC
	f	Lcxk$v;	l	TEX_GEN
	f	Lcxk$d;	m	CLEAR
	f	Lcxk$s;	n	STENCIL
	f	Ljava/nio/FloatBuffer;	o	colorBuffer
	f	Le;	p	DIFFUSE_LIGHT_0_POSITION
	f	Le;	q	DIFFUSE_LIGHT_1_POSITION
	f	I	r	activeTexture
	f	[Lcxk$w;	s	TEXTURES
	f	I	t	modelShadeMode
	f	Lcxk$c;	u	RESCALE_NORMAL
	f	Lcxk$g;	v	COLOR_MASK
	f	Lcxk$e;	w	COLOR
	f	Lcxk$l;	x	fboMode
	m	()V	A	disableFog
	m	(I)V	A	enableVertexAttribArray
		p	0	index	index
	m	()V	B	enableCull
	m	(I)V	B	method_22607
		p	0	index	index
	m	()V	C	disableCull
	m	(I)Ljava/lang/String;	C	getString
		p	0	name	name
	m	()V	D	enablePolygonOffset
	m	(I)I	D	getInteger
		p	0	pname	pname
	m	()V	E	disablePolygonOffset
	m	()V	F	enableLineOffset
	m	()V	G	disableLineOffset
	m	()V	H	enableColorLogicOp
	m	()V	I	disableColorLogicOp
	m	()V	J	enableTexture
	m	()V	K	disableTexture
	m	()I	L	getTexLevelParameter
	m	()V	M	enableRescaleNormal
	m	()V	N	disableRescaleNormal
	m	()V	O	loadIdentity
	m	()V	P	pushMatrix
	m	()V	Q	popMatrix
	m	()V	R	clearCurrentColor
	m	()I	S	getError
	m	(ZZZZ)V	a	colorMask
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(IZ)V	a	clear
		p	0	mask	mask
		p	1	getError	getError
	m	(DDD)V	a	scaled
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(D)V	a	clearDepth
		p	0	depth	depth
	m	(IIIJ)V	a	texCoordPointer
		p	0	size	size
		p	1	type	type
		p	2	stride	stride
		p	3	pointer	pointer
	m	(IILjava/nio/FloatBuffer;)V	a	light
		p	0	light	light
		p	1	pname	pname
		p	2	params	params
	m	(I)V	a	enableLight
		p	0	light	light
	m	(III)V	a	texEnv
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(F)V	a	fogDensity
		p	0	density	density
	m	(ILjava/nio/IntBuffer;)V	a	uniform1
		p	0	location	location
		p	1	value	value
	m	(I[F)V	a	fog
		p	0	pname	pname
		p	1	params	params
	m	(Lb;)V	a	setupLevelDiffuseLighting
		p	0	modelMatrix	modelMatrix
	m	(Z)V	a	depthMask
		p	0	mask	mask
	m	(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String;	a	initFramebufferSupport
		c	Configures the frame buffer and populates {@link FrameBufferInfo} with the appropriate constants\nfor the current GLCapabilities.\n\n@returns human-readable string representing the selected frame buffer technology.\n@throws IllegalStateException if no known frame buffer technology is supported.
		p	0	capabilities	capabilities
	m	(ILjava/nio/FloatBuffer;)V	a	lightModel
		p	0	pname	pname
		p	1	params	params
	m	(IIF)V	a	texParameter
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(DDDDDD)V	a	ortho
		p	0	l	l
		p	2	r	r
		p	4	b	b
		p	6	t	t
		p	8	n	n
		p	10	f	f
	m	(FFF)V	a	normal3f
		p	0	nx	nx
		p	1	ny	ny
		p	2	nz	nz
	m	(IZLjava/nio/FloatBuffer;)V	a	uniformMatrix2
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(IFF)V	a	multiTexCoords2f
		p	0	texture	texture
		p	1	s	s
		p	2	t	t
	m	(FF)V	a	polygonOffset
		p	0	factor	factor
		p	1	units	units
	m	(IIIII)V	a	framebufferTexture2D
		p	0	target	target
		p	1	attachment	attachment
		p	2	textureTarget	textureTarget
		p	3	texture	texture
		p	4	level	level
	m	(IIIIJ)V	a	getTexImage
		p	0	target	target
		p	1	level	level
		p	2	format	format
		p	3	type	type
		p	4	pixels	pixels
	m	(II)V	a	colorMaterial
		p	0	face	face
		p	1	mode	mode
	m	(IIJ)V	a	normalPointer
		p	0	type	type
		p	1	stride	stride
		p	2	pointer	pointer
	m	(Lcxk$t;I)V	a	texGenMode
		p	0	coord	coord
		p	1	mode	mode
	m	()V	a	pushLightingAttributes
	m	(IIIIIIIILjava/nio/IntBuffer;)V	a	texImage2D
		p	0	target	target
		p	1	level	level
		p	2	internalFormat	internalFormat
		p	3	width	width
		p	4	height	height
		p	5	border	border
		p	6	format	format
		p	7	type	type
		p	8	pixels	pixels
	m	(FFFF)V	a	blendColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(Ljava/nio/FloatBuffer;)V	a	multMatrix
		p	0	matrix	matrix
	m	(IF)V	a	alphaFunc
		p	0	func	func
		p	1	ref	ref
	m	(IIIIIILjava/nio/ByteBuffer;)V	a	readPixels
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
		p	4	format	format
		p	5	type	type
		p	6	pixels	pixels
	m	(ILjava/nio/ByteBuffer;I)V	a	bufferData
		p	0	target	target
		p	1	data	data
		p	2	usage	usage
	m	(IIII)V	a	blendFuncSeparate
		p	0	srcFactorRGB	srcFactorRGB
		p	1	dstFactorRGB	dstFactorRGB
		p	2	srcFactorAlpha	srcFactorAlpha
		p	3	dstFactorAlpha	dstFactorAlpha
	m	(Lcxk$t;)V	a	enableTexGen
		p	0	coord	coord
	m	(IIIIIIIIJ)V	a	texSubImage2D
		p	0	target	target
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	width	width
		p	5	height	height
		p	6	format	format
		p	7	type	type
		p	8	pixels	pixels
	m	(ILjava/lang/CharSequence;)V	a	shaderSource
		p	0	shader	shader
		p	1	source	source
	m	(IIIZIJ)V	a	vertexAttribPointer
		p	0	index	index
		p	1	size	size
		p	2	type	type
		p	3	normalized	normalized
		p	4	stride	stride
		p	5	pointer	pointer
	m	(Lcxk$t;ILjava/nio/FloatBuffer;)V	a	texGenParam
		p	0	coord	coord
		p	1	pname	pname
		p	2	params	params
	m	(II)V	b	blendFunc
		p	0	srcFactor	srcFactor
		p	1	dstFactor	dstFactor
	m	(ILjava/nio/IntBuffer;)V	b	uniform2
		p	0	location	location
		p	1	value	value
	m	(DDD)V	b	translated
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(IF)V	b	pixelTransfer
		p	0	pname	pname
		p	1	param	param
	m	(FFFF)V	b	clearColor
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(III)V	b	texParameter
		p	0	target	target
		p	1	pname	pname
		p	2	param	param
	m	(IZLjava/nio/FloatBuffer;)V	b	uniformMatrix3
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(ILjava/nio/FloatBuffer;)V	b	uniform1
		p	0	location	location
		p	1	value	value
	m	(Lb;)V	b	multMatrix
		p	0	matrix	matrix
	m	(FFF)V	b	scalef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(IIII)V	b	renderbufferStorage
		p	0	target	target
		p	1	internalFormat	internalFormat
		p	2	width	width
		p	3	height	height
	m	(I)V	b	depthFunc
		p	0	func	func
	m	(ILjava/lang/CharSequence;)I	b	getUniformLocation
		p	0	program	program
		p	1	name	name
	m	(F)V	b	fogStart
		p	0	start	start
	m	(Lcxk$t;)V	b	disableTexGen
		p	0	coord	coord
	m	()V	b	pushTextureAttributes
	m	(IIIJ)V	b	vertexPointer
		p	0	size	size
		p	1	type	type
		p	2	stride	stride
		p	3	pointer	pointer
	m	(FFFF)V	c	rotatef
		p	0	angle	angle
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(FFF)V	c	translatef
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(III)I	c	getTexLevelParameter
		p	0	target	target
		p	1	level	level
		p	2	pname	pname
	m	(II)I	c	getProgram
		p	0	program	program
		p	1	pname	pname
	m	(Lcxk$t;)Lcxk$u;	c	getGenCoordState
		p	0	coord	coord
	m	(IZLjava/nio/FloatBuffer;)V	c	uniformMatrix4
		p	0	location	location
		p	1	transpose	transpose
		p	2	value	value
	m	(F)V	c	fogEnd
		p	0	end	end
	m	(ILjava/nio/FloatBuffer;)V	c	uniform2
		p	0	location	location
		p	1	value	value
	m	(I)V	c	blendEquation
		p	0	mode	mode
	m	(IIIJ)V	c	colorPointer
		p	0	size	size
		p	1	type	type
		p	2	stride	stride
		p	3	pointer	pointer
	m	()V	c	popAttributes
	m	(IIII)V	c	framebufferRenderbuffer
		p	0	target	target
		p	1	attachment	attachment
		p	2	renderbufferTarget	renderbufferTarget
		p	3	renderbuffer	renderbuffer
	m	(ILjava/nio/IntBuffer;)V	c	uniform3
		p	0	location	location
		p	1	value	value
	m	(ILjava/lang/CharSequence;)I	c	getAttribLocation
		p	0	program	program
		p	1	name	name
	m	()V	d	disableAlphaTest
	m	(ILjava/nio/FloatBuffer;)V	d	uniform3
		p	0	location	location
		p	1	value	value
	m	(II)V	d	attachShader
		p	0	program	program
		p	1	shader	shader
	m	(IIII)V	d	blendFuncSeparateUntracked
		p	0	srcFactorRGB	srcFactorRGB
		p	1	dstFactorRGB	dstFactorRGB
		p	2	srcFactorAlpha	srcFactorAlpha
		p	3	dstFactorAlpha	dstFactorAlpha
	m	(FFFF)V	d	color4f
		p	0	red	red
		p	1	green	green
		p	2	blue	blue
		p	3	alpha	alpha
	m	(III)V	d	stencilFunc
		p	0	func	func
		p	1	ref	ref
		p	2	mask	mask
	m	(I)V	d	deleteShader
		p	0	shader	shader
	m	(F)V	d	lineWidth
		p	0	width	width
	m	(ILjava/nio/IntBuffer;)V	d	uniform4
		p	0	location	location
		p	1	value	value
	m	(I)I	e	createShader
		p	0	type	type
	m	(III)V	e	stencilOp
		p	0	sfail	sfail
		p	1	dpfail	dpfail
		p	2	dppass	dppass
	m	(IIII)V	e	viewport
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
	m	(FFFF)Ljava/nio/FloatBuffer;	e	getBuffer
		p	0	a	a
		p	1	b	b
		p	2	c	c
		p	3	d	d
	m	(ILjava/nio/FloatBuffer;)V	e	uniform4
		p	0	location	location
		p	1	value	value
	m	(II)I	e	getShader
		p	0	shader	shader
		p	1	pname	pname
	m	()V	e	enableAlphaTest
	m	(IIII)V	f	combineColor
		p	0	combineColor	combineColor
		p	1	source0Color	source0Color
		p	2	source1Color	source1Color
		p	3	source2Color	source2Color
	m	(III)V	f	drawArrays
		p	0	mode	mode
		p	1	first	first
		p	2	count	count
	m	(II)V	f	uniform1
		p	0	location	location
		p	1	value	value
	m	(ILjava/nio/FloatBuffer;)V	f	texEnv
		p	0	pname	pname
		p	1	params	params
	m	()V	f	enableLighting
	m	(I)V	f	compileShader
		p	0	shader	shader
	m	(II)V	g	bindBuffers
		p	0	target	target
		p	1	buffer	buffer
	m	(I)V	g	useProgram
		p	0	program	program
	m	()V	g	disableLighting
	m	(II)V	h	bindFramebuffer
		p	0	target	target
		p	1	framebuffer	framebuffer
	m	()V	h	enableColorMaterial
	m	(I)V	h	deleteProgram
		p	0	program	program
	m	()V	i	disableColorMaterial
	m	(II)V	i	bindRenderbuffer
		p	0	target	target
		p	1	renderbuffer	renderbuffer
	m	(I)V	i	linkProgram
		p	0	program	program
	m	(II)Ljava/lang/String;	j	getShaderInfoLog
		p	0	shader	shader
		p	1	maxLength	maxLength
	m	(I)V	j	deleteBuffers
		p	0	buffer	buffer
	m	()V	j	disableDepthTest
	m	()V	k	enableDepthTest
	m	(II)Ljava/lang/String;	k	getProgramInfoLog
		p	0	program	program
		p	1	maxLength	maxLength
	m	(I)V	k	deleteRenderbuffers
		p	0	renderbuffers	renderbuffers
	m	(II)V	l	setupOverlayColor
		p	0	texture	texture
		p	1	size	size
	m	(I)V	l	deleteFramebuffers
		p	0	framebuffers	framebuffers
	m	()V	l	disableBlend
	m	(II)V	m	fogi
		p	0	pname	pname
		p	1	param	param
	m	()V	m	enableBlend
	m	(I)I	m	checkFramebufferStatus
		p	0	target	target
	m	(I)V	n	activeTextureUntracked
		p	0	texture	texture
	m	()I	n	createProgram
	m	(II)V	n	polygonMode
		p	0	face	face
		p	1	mode	mode
	m	(I)V	o	clientActiveTexture
		p	0	texture	texture
	m	()I	o	genBuffers
	m	(II)V	o	pixelStore
		p	0	pname	pname
		p	1	param	param
	m	()I	p	genFramebuffers
	m	(I)V	p	fogMode
		p	0	mode	mode
	m	(II)V	p	combineColor
		p	0	combineColor	combineColor
		p	1	source0Color	source0Color
	m	(II)V	q	combineAlpha
		p	0	combineAlpha	combineAlpha
		p	1	source0Alpha	source0Alpha
	m	()I	q	genRenderbuffers
	m	(I)V	q	logicOp
		p	0	op	op
	m	()V	r	setupOutline
	m	(I)V	r	activeTexture
		p	0	texture	texture
	m	(I)V	s	deleteTexture
		p	0	texture	texture
	m	()V	s	teardownOutline
	m	(I)V	t	bindTexture
		p	0	texture	texture
	m	()V	t	teardownOverlayColor
	m	(I)V	u	shadeModel
		p	0	mode	mode
	m	(I)V	v	stencilMask
		p	0	mask	mask
	m	()V	w	setupEndPortalTexGen
	m	(I)V	w	clearStencil
		p	0	stencil	stencil
	m	(I)V	x	matrixMode
		p	0	mode	mode
	m	()V	x	clearTexGen
	m	(I)V	y	enableClientState
		p	0	cap	cap
	m	()V	y	mulTextureByProjModelView
	m	(I)V	z	disableClientState
		p	0	cap	cap
	m	()V	z	enableFog
c	cxk$a	com/mojang/blaze3d/platform/GlStateManager$AlphaTestState
	f	Lcxk$c;	a	capState
	f	I	b	func
	f	F	c	ref
c	cxk$b	com/mojang/blaze3d/platform/GlStateManager$BlendFuncState
	f	Lcxk$c;	a	capState
	f	I	b	srcFactorRGB
	f	I	c	dstFactorRGB
	f	I	d	srcFactorAlpha
	f	I	e	dstFactorAlpha
c	cxk$c	com/mojang/blaze3d/platform/GlStateManager$CapabilityTracker
	f	I	a	cap
	f	Z	b	state
	m	(I)V	<init>	<init>
		p	1	cap	cap
	m	(Z)V	a	setState
		p	1	state	state
	m	()V	a	disable
	m	()V	b	enable
c	cxk$d	com/mojang/blaze3d/platform/GlStateManager$ClearState
	f	D	a	clearDepth
	f	Lcxk$e;	b	clearColor
	f	I	c	clearStencil
c	cxk$e	com/mojang/blaze3d/platform/GlStateManager$Color4
	f	F	a	red
	f	F	b	green
	f	F	c	blue
	f	F	d	alpha
	m	(FFFF)V	<init>	<init>
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
c	cxk$f	com/mojang/blaze3d/platform/GlStateManager$LogicOpState
	f	Lcxk$c;	a	capState
	f	I	b	op
c	cxk$g	com/mojang/blaze3d/platform/GlStateManager$ColorMask
	f	Z	a	red
	f	Z	b	green
	f	Z	c	blue
	f	Z	d	alpha
c	cxk$h	com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState
	f	Lcxk$c;	a	capState
	f	I	b	face
	f	I	c	mode
c	cxk$i	com/mojang/blaze3d/platform/GlStateManager$CullFaceState
	f	Lcxk$c;	a	capState
	f	I	b	mode
c	cxk$j	com/mojang/blaze3d/platform/GlStateManager$DepthTestState
	f	Lcxk$c;	a	capState
	f	Z	b	mask
	f	I	c	func
c	cxk$k	com/mojang/blaze3d/platform/GlStateManager$DstFactor
c	cxk$l	com/mojang/blaze3d/platform/GlStateManager$FBOMode
c	cxk$m	com/mojang/blaze3d/platform/GlStateManager$FogMode
	f	I	d	value
c	cxk$n	com/mojang/blaze3d/platform/GlStateManager$FogState
	f	Lcxk$c;	a	capState
	f	I	b	mode
	f	F	c	density
	f	F	d	start
	f	F	e	end
c	cxk$o	com/mojang/blaze3d/platform/GlStateManager$LogicOp
	f	I	q	value
c	cxk$p	com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	f	Lcxk$c;	a	capFill
	f	Lcxk$c;	b	capLine
	f	F	c	factor
	f	F	d	units
c	cxk$q	com/mojang/blaze3d/platform/GlStateManager$SrcFactor
c	cxk$r	com/mojang/blaze3d/platform/GlStateManager$StencilSubState
	f	I	a	func
	f	I	b	ref
	f	I	c	mask
c	cxk$s	com/mojang/blaze3d/platform/GlStateManager$StencilState
	f	Lcxk$r;	a	subState
	f	I	b	mask
	f	I	c	sfail
	f	I	d	dpfail
	f	I	e	dppass
c	cxk$t	com/mojang/blaze3d/platform/GlStateManager$TexCoord
c	cxk$u	com/mojang/blaze3d/platform/GlStateManager$TexGenCoordState
	f	Lcxk$c;	a	capState
	f	I	b	coord
	f	I	c	mode
	m	(II)V	<init>	<init>
		p	1	coord	coord
		p	2	cap	cap
c	cxk$v	com/mojang/blaze3d/platform/GlStateManager$TexGenState
	f	Lcxk$u;	a	s
	f	Lcxk$u;	b	t
	f	Lcxk$u;	c	r
	f	Lcxk$u;	d	q
c	cxk$w	com/mojang/blaze3d/platform/GlStateManager$Texture2DState
	f	Lcxk$c;	a	capState
	f	I	b	boundTexture
c	cxk$x	com/mojang/blaze3d/platform/GlStateManager$Viewport
	f	I	b	x
	f	I	c	y
	f	I	d	width
	f	I	e	height
c	cxl	com/mojang/blaze3d/platform/GlDebugInfo
	m	()Ljava/lang/String;	a	getVendor
	m	()Ljava/lang/String;	b	getCpuInfo
	m	()Ljava/lang/String;	c	getRenderer
	m	()Ljava/lang/String;	d	getVersion
c	cxm	net/minecraft/client/util/InputUtil
	f	Lcxm$a;	a	UNKNOWN_KEYCODE
	f	Ljava/lang/invoke/MethodHandle;	b	GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE
	f	I	c	GLFW_RAW_MOUSE_MOTION
	m	(Ljava/lang/String;)Lcxm$a;	a	fromName
		p	0	s	s
	m	(I)Ljava/lang/String;	a	getKeycodeName
	m	(JI)Z	a	isKeyPressed
		p	0	handle	handle
	m	(JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V	a	setKeyboardCallbacks
		p	0	handle	handle
	m	(II)Lcxm$a;	a	getKeyCode
	m	(JZ)V	a	setRawMouseMotionMode
		p	0	window	window
		p	2	value	value
	m	()Z	a	isRawMouseMotionSupported
	m	(JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;)V	a	setMouseCallbacks
		p	0	handle	handle
	m	(JIDD)V	a	setCursorParameters
	m	(I)Ljava/lang/String;	b	getScancodeName
c	cxm$a	net/minecraft/client/util/InputUtil$KeyCode
	f	Ljava/lang/String;	a	name
	f	Lcxm$b;	b	type
	f	I	c	keyCode
	f	Ljava/util/Map;	d	NAMES
	m	(Ljava/lang/String;Lcxm$b;I)V	<init>	<init>
		p	1	keyName	keyName
		p	2	type	type
	m	()Lcxm$b;	a	getCategory
	m	()I	b	getKeyCode
	m	()Ljava/lang/String;	c	getName
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	cxm$b	net/minecraft/client/util/InputUtil$Type
	f	[Ljava/lang/String;	d	mouseButtons
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	e	map
	f	Ljava/lang/String;	f	name
	m	(Lcxm$b;Ljava/lang/String;I)V	a	mapKey
		p	0	type	type
		p	1	name	name
		p	2	keyCode	keyCode
	m	()Ljava/lang/String;	a	getName
	m	(I)Lcxm$a;	a	createFromCode
c	cxn	net/minecraft/client/render/DiffuseLighting
	m	(Lb;)V	a	enableForLevel
		p	0	modelMatrix	modelMatrix
	m	()V	a	enable
	m	()V	b	disable
	m	()V	c	disableGuiDepthLighting
	m	()V	d	enableGuiDepthLighting
c	cxo	net/minecraft/client/util/GlAllocationUtils
	m	(I)Ljava/nio/ByteBuffer;	a	allocateByteBuffer
		p	0	size	size
	m	(I)Ljava/nio/FloatBuffer;	b	allocateFloatBuffer
		p	0	size	size
c	cxp	net/minecraft/client/util/Monitor
	f	J	a	handle
	f	Ljava/util/List;	b	videoModes
	f	Lcxw;	c	currentVideoMode
	f	I	d	x
	f	I	e	y
	m	(Lcxw;)I	a	findClosestVideoModeIndex
	m	()V	a	populateVideoModes
	m	(I)Lcxw;	a	getVideoMode
	m	(Ljava/util/Optional;)Lcxw;	a	findClosestVideoMode
	m	()Lcxw;	b	getCurrentVideoMode
	m	()I	c	getViewportX
	m	()I	d	getViewportY
	m	()I	e	getVideoModeCount
	m	()J	f	getHandle
c	cxq	net/minecraft/client/util/MonitorFactory
c	cxr	net/minecraft/client/texture/NativeImage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	WRITE_TO_FILE_OPEN_OPTIONS
	f	Lcxr$a;	c	format
	f	I	d	width
	f	I	e	height
	f	Z	f	isStbImage
	f	J	g	pointer
	f	J	h	sizeBytes
	m	(Lcxr$a;IIZJ)V	<init>	<init>
		p	1	format	format
		p	2	width	width
		p	3	height	height
		p	4	useStb	useStb
		p	5	pointer	pointer
	m	(IIZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	useStb	useStb
	m	(Lcxr$a;IIZ)V	<init>	<init>
		p	1	format	format
		p	2	width	width
		p	3	height	height
		p	4	useStb	useStb
	m	(IIIILcxr;)V	a	resizeSubRectTo
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	targetImage	targetImage
	m	(Ljava/lang/String;)Lcxr;	a	read
		p	0	dataUri	dataUri
	m	(Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V	a	makeGlyphBitmapSubpixel
		p	1	fontInfo	fontInfo
		p	2	glyphIndex	glyphIndex
		p	3	width	width
		p	4	height	height
		p	5	scaleX	scaleX
		p	6	scaleY	scaleY
		p	7	shiftX	shiftX
		p	8	shiftY	shiftY
		p	9	startX	startX
		p	10	startY	startY
	m	(Lcxr;)V	a	copyFrom
		p	1	image	image
	m	(Ljava/io/File;)V	a	writeFile
	m	(IIIIIIZZ)V	a	copyRect
		p	1	x	x
		p	2	y	y
		p	3	translateX	translateX
		p	4	translateY	translateY
		p	5	width	width
		p	6	height	height
		p	7	flipX	flipX
		p	8	flipY	flipY
	m	(IIIIIIIZZZZ)V	a	upload
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	unpackSkipPixels	unpackSkipPixels
		p	5	unpackSkipRows	unpackSkipRows
		p	6	width	width
		p	7	height	height
		p	8	blur	blur
		p	9	clamp	clamp
		p	10	mipmap	mipmap
		p	11	close	close
	m	(Z)V	a	setTextureClamp
		p	0	clamp	clamp
	m	(IZ)V	a	loadFromTextureImage
		p	1	level	level
		p	2	removeAlpha	removeAlpha
	m	(IIIIIIIZZ)V	a	upload
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	unpackSkipPixels	unpackSkipPixels
		p	5	unpackSkipRows	unpackSkipRows
		p	6	width	width
		p	7	height	height
		p	8	mipmap	mipmap
		p	9	close	close
	m	(IIIZ)V	a	upload
		p	1	level	level
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	mipmap	mipmap
	m	(Ljava/nio/file/Path;)V	a	writeFile
	m	(ZZ)V	a	setTextureFilter
		p	0	blur	blur
		p	1	mipmap	mipmap
	m	(Lcxr$a;Ljava/nio/ByteBuffer;)Lcxr;	a	read
	m	()I	a	getWidth
	m	(III)V	a	setPixelRgba
		p	1	x	x
		p	2	y	y
		p	3	color	color
	m	(Ljava/io/InputStream;)Lcxr;	a	read
	m	(Lcxr$a;Ljava/io/InputStream;)Lcxr;	a	read
	m	(Ljava/nio/ByteBuffer;)Lcxr;	a	read
	m	(II)I	a	getPixelRgba
		p	1	x	x
		p	2	y	y
	m	(IIIII)V	a	fillRect
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	color	color
	m	()I	b	getHeight
	m	(IIIIIIIZZZZ)V	b	uploadInternal
		p	1	level	level
		p	2	xOffset	xOffset
		p	3	yOffset	yOffset
		p	4	unpackSkipPixels	unpackSkipPixels
		p	5	unpackSkipRows	unpackSkipRows
		p	6	width	width
		p	7	height	height
		p	8	blur	blur
		p	9	clamp	clamp
		p	10	mipmap	mipmap
		p	11	close	close
	m	(II)B	b	getPixelOpacity
		p	1	x	x
		p	2	y	y
	m	(III)V	b	blendPixel
		p	1	x	x
		p	2	y	y
		p	3	radius	radius
	m	()Lcxr$a;	c	getFormat
	m	()[I	d	makePixelArray
	m	()[B	e	getBytes
	m	()V	f	mirrorVertically
	m	()V	g	untrack
	m	()V	h	checkAllocated
c	cxr$a	net/minecraft/client/texture/NativeImage$Format
	f	I	e	channelCount
	f	I	f	pixelDataFormat
	f	Z	g	hasRed
	f	Z	h	hasGreen
	f	Z	i	hasBlue
	f	Z	j	hasLuminance
	f	Z	k	hasAlpha
	f	I	l	redOffset
	f	I	m	greenOffset
	f	I	n	blueOffset
	f	I	o	luminanceChannelOffset
	f	I	p	alphaChannelOffset
	f	Z	q	writeable
	m	(Ljava/lang/String;IIIZZZZZIIIIIZ)V	<init>	<init>
		p	3	channels	channels
		p	4	glFormat	glFormat
		p	5	hasRed	hasRed
		p	6	hasGreen	hasGreen
		p	7	hasBlue	hasBlue
		p	8	hasLuminance	hasLuminance
		p	9	hasAlpha	hasAlpha
		p	10	redOffset	redOffset
		p	11	greenOffset	greenOffset
		p	12	blueOffset	blueOffset
		p	13	luminanceOffset	luminanceOffset
		p	14	alphaOffset	alphaOffset
		p	15	writeable	writeable
	m	()I	a	getChannelCount
	m	()V	b	setPackAlignment
	m	(I)Lcxr$a;	b	getFormat
		p	0	glFormat	glFormat
	m	()V	c	setUnpackAlignment
	m	()I	d	getPixelDataFormat
	m	()Z	e	hasAlphaChannel
	m	()I	f	getAlphaChannelOffset
	m	()Z	g	hasOpacityChannel
	m	()I	h	getOpacityOffset
	m	()Z	i	isWriteable
c	cxr$b	net/minecraft/client/texture/NativeImage$GLFormat
	f	I	f	glConstant
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	glConstant	glConstant
	m	()I	a	getGlConstant
c	cxr$c	net/minecraft/client/texture/NativeImage$WriteCallback
	f	Ljava/nio/channels/WritableByteChannel;	a	channel
	f	Ljava/io/IOException;	b	exception
	m	(Ljava/nio/channels/WritableByteChannel;)V	<init>	<init>
		p	1	channel	channel
	m	()V	a	throwStoredException
	m	(JJI)V	invoke	invoke
		p	1	context	context
		p	3	data	data
		p	5	size	size
c	cxs	net/minecraft/client/util/PngFile
	f	I	a	width
	f	I	b	height
	m	(Ljava/lang/String;Ljava/io/InputStream;)V	<init>	<init>
		p	1	name	name
		p	2	in	in
	m	(Ljava/io/InputStream;)Lcxs$a;	a	createReader
		p	0	is	is
c	cxs$a	net/minecraft/client/util/PngFile$Reader
	f	Z	a	errored
	m	(J)I	a	eof
		p	1	user	user
	m	(I)V	a	skip
		p	1	n	n
	m	(JI)V	a	skip
		p	1	user	user
		p	3	n	n
	m	(JJI)I	a	read
		p	1	user	user
		p	3	data	data
		p	5	size	size
	m	(JI)I	b	read
		p	1	data	data
		p	3	size	size
c	cxs$b	net/minecraft/client/util/PngFile$ChannelReader
	f	Ljava/nio/channels/ReadableByteChannel;	b	channel
	f	J	c	buffer
	f	I	d	bufferSize
	f	I	e	bufferPosition
	f	I	f	readPosition
	m	(I)V	b	readToBuffer
		p	1	size	size
c	cxs$c	net/minecraft/client/util/PngFile$SeekableChannelReader
	f	Ljava/nio/channels/SeekableByteChannel;	b	channel
	m	(Ljava/nio/channels/SeekableByteChannel;)V	<init>	<init>
		p	1	channel	channel
c	cxt	net/minecraft/client/util/MonitorTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	pointerToMonitorMap
	f	Lcxq;	b	monitorFactory
	m	(Lcxq;)V	<init>	<init>
		p	1	monitorFactory	monitorFactory
	m	(III)I	a	clamp
		p	0	value	value
		p	1	min	min
		p	2	max	max
	m	(JI)V	a	handleMonitorEvent
		p	1	monitor	monitor
		p	3	event	event
	m	(Lcxx;)Lcxp;	a	getMonitor
	m	(J)Lcxp;	a	getMonitor
	m	()V	a	stop
c	cxv	net/minecraft/client/texture/TextureUtil
c	cxw	net/minecraft/client/util/VideoMode
	f	I	a	width
	f	I	b	height
	f	I	c	redBits
	f	I	d	greenBits
	f	I	e	blueBits
	f	I	f	refreshRate
	f	Ljava/util/regex/Pattern;	g	PATTERN
	m	()I	a	getWidth
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	fromString
	m	()I	b	getHeight
	m	()I	c	getRedBits
	m	()I	d	getGreenBits
	m	()I	e	getBlueBits
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()I	f	getRefreshRate
	m	()Ljava/lang/String;	g	asString
c	cxx	net/minecraft/client/util/Window
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lorg/lwjgl/glfw/GLFWErrorCallback;	b	errorCallback
	f	Lcxy;	c	eventHandler
	f	Lcxt;	d	monitorTracker
	f	J	e	handle
	f	I	f	windowedX
	f	I	g	windowedY
	f	I	h	windowedWidth
	f	I	i	windowedHeight
	f	Ljava/util/Optional;	j	videoMode
	f	Z	k	fullscreen
	f	Z	l	currentFullscreen
	f	I	m	x
	f	I	n	y
	f	I	o	width
	f	I	p	height
	f	I	q	framebufferWidth
	f	I	r	framebufferHeight
	f	I	s	scaledWidth
	f	I	t	scaledHeight
	f	D	u	scaleFactor
	f	Ljava/lang/String;	v	phase
	f	Z	w	videoModeDirty
	f	I	x	framerateLimit
	f	Z	y	vsync
	m	(Lcxy;Lcxt;Lcxh;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	eventHandler	eventHandler
		p	2	monitorTracker	monitorTracker
		p	3	settings	settings
		p	4	videoMode	videoMode
		p	5	title	title
	m	(Ljava/util/function/BiConsumer;)V	a	acceptError
		p	0	consumer	consumer
	m	(I)V	a	setFramerateLimit
		p	1	framerateLimit	framerateLimit
	m	(IJ)V	a	logGlError
		p	1	error	error
		p	2	description	description
	m	(Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer;	a	readImage
		p	1	in	in
		p	2	x	x
		p	3	y	y
		p	4	channels	channels
	m	(Z)V	a	setVsync
		p	1	vsync	vsync
	m	(Ljava/util/Optional;)V	a	setVideoMode
		p	1	videoMode	videoMode
	m	()I	a	getRefreshRate
	m	(IZ)I	a	calculateScaleFactor
		p	1	guiScale	guiScale
		p	2	forceUnicodeFont	forceUnicodeFont
	m	(JII)V	a	onWindowPosChanged
		p	1	window	window
		p	3	x	x
		p	4	y	y
	m	(Ljava/io/InputStream;Ljava/io/InputStream;)V	a	setIcon
		p	1	icon16	icon16
		p	2	icon32	icon32
	m	(JZ)V	a	onWindowFocusChanged
		p	1	window	window
		p	3	focused	focused
	m	(D)V	a	setScaleFactor
		p	1	scaleFactor	scaleFactor
	m	(Ljava/lang/String;)V	a	setPhase
		p	1	phase	phase
	m	(Ljava/lang/String;)V	b	setTitle
	m	()Z	b	shouldClose
	m	(JII)V	b	onFramebufferSizeChanged
		p	1	window	window
		p	3	width	width
		p	4	height	height
	m	(IJ)V	b	throwGlError
		p	0	error	error
		p	1	description	description
	m	(Z)V	b	setRawMouseMotion
		p	1	rawMouseMotion	rawMouseMotion
	m	()V	c	logOnGlError
	m	(JII)V	c	onWindowSizeChanged
		p	1	window	window
		p	3	width	width
		p	4	height	height
	m	(Z)V	c	updateFullscreen
		p	1	vsync	vsync
	m	()I	d	getFramerateLimit
	m	()V	e	swapBuffers
	m	()Ljava/util/Optional;	f	getVideoMode
	m	()V	g	applyVideoMode
	m	()V	h	toggleFullscreen
	m	()J	i	getHandle
	m	()Z	j	isFullscreen
	m	()I	k	getFramebufferWidth
	m	()I	l	getFramebufferHeight
	m	()I	m	getWidth
	m	()I	n	getHeight
	m	()I	o	getScaledWidth
	m	()I	p	getScaledHeight
	m	()I	q	getX
	m	()I	r	getY
	m	()D	s	getScaleFactor
	m	()Lcxp;	t	getMonitor
	m	()V	u	throwOnGlError
	m	()V	v	updateFramebufferSize
	m	()V	w	updateWindowRegion
c	cxx$a	net/minecraft/client/util/Window$GlErroredException
c	cxy	net/minecraft/client/WindowEventHandler
	m	(Z)V	a	onWindowFocusChanged
		p	1	focused	focused
	m	()V	a	onResolutionChanged
c	cxz	net/minecraft/client/gl/Uniform
	m	(FF)V	a	set
		p	1	value1	value1
		p	2	value2	value2
	m	([F)V	a	set
		p	1	values	values
	m	(IIII)V	a	set
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
		p	4	value4	value4
	m	(F)V	a	set
		p	1	value1	value1
	m	(FFF)V	a	set
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
	m	(Lb;)V	a	set
		p	1	values	values
	m	(FFFF)V	a	set
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
		p	4	value4	value4
	m	(FFFF)V	b	setForDataType
		p	1	value1	value1
		p	2	value2	value2
		p	3	value3	value3
		p	4	value4	value4
c	cy	net/minecraft/command/arguments/EntityArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	TOO_MANY_ENTITIES_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	TOO_MANY_PLAYERS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ENTITY_NOT_FOUND_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	PLAYER_NOT_FOUND_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	NOT_ALLOWED_EXCEPTION
	f	Ljava/util/Collection;	g	EXAMPLES
	f	Z	h	singleTarget
	f	Z	i	playersOnly
	m	(ZZ)V	<init>	<init>
		p	1	singleTarget	singleTarget
		p	2	playersOnly	playersOnly
	m	(Lcom/mojang/brigadier/StringReader;)Lep;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lakq;	a	getEntity
		p	0	context	context
		p	1	name	name
	m	()Lcy;	a	entity
	m	()Lcy;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
		p	0	context	context
		p	1	name	name
	m	()Lcy;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
	m	()Lcy;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lxe;	e	getPlayer
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	cy$a	net/minecraft/command/arguments/EntityArgumentType$Serializer
	m	(Lcy;Lkv;)V	a	toPacket
	m	(Lkv;)Lcy;	a	fromPacket
	m	(Lcy;Lcom/google/gson/JsonObject;)V	a	toJson
c	cya	net/minecraft/client/gl/GlBlendState
	f	Lcya;	a	activeBlendState
	f	I	b	srcRgb
	f	I	c	srcAlpha
	f	I	d	dstRgb
	f	I	e	dstAlpha
	f	I	f	func
	f	Z	g	separateBlend
	f	Z	h	blendDisabled
	m	(III)V	<init>	<init>
		p	1	srcRgb	srcRgb
		p	2	dstRgb	dstRgb
		p	3	func	func
	m	(IIIII)V	<init>	<init>
		p	1	srcRgb	srcRgb
		p	2	dstRgb	dstRgb
		p	3	srcAlpha	srcAlpha
		p	4	dstAlpha	dstAlpha
		p	5	func	func
	m	(ZZIIIII)V	<init>	<init>
		p	1	separateBlend	separateBlend
		p	2	blendDisabled	blendDisabled
		p	3	srcRgb	srcRgb
		p	4	dstRgb	dstRgb
		p	5	srcAlpha	srcAlpha
		p	6	dstAlpha	dstAlpha
		p	7	func	func
	m	()V	a	enable
	m	(Ljava/lang/String;)I	a	getFuncFromString
	m	()Z	b	isBlendDisabled
	m	(Ljava/lang/String;)I	b	getComponentFromString
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	cyb	net/minecraft/client/gl/GlProgram
	m	()I	a	getProgramRef
	m	()V	b	markUniformsDirty
	m	()Lcyc;	c	getVertexShader
	m	()Lcyc;	d	getFragmentShader
c	cyc	net/minecraft/client/gl/GlShader
	f	Lcyc$a;	a	shaderType
	f	Ljava/lang/String;	b	name
	f	I	c	shaderRef
	f	I	d	refCount
	m	(Lcyc$a;ILjava/lang/String;)V	<init>	<init>
		p	1	shaderType	shaderType
		p	2	shaderRef	shaderRef
		p	3	name	name
	m	(Lcyb;)V	a	attachTo
	m	()V	a	release
	m	(Lcyc$a;Ljava/lang/String;Ljava/io/InputStream;)Lcyc;	a	createFromResource
		p	0	type	type
		p	1	name	name
		p	2	sourceCode	sourceCode
	m	()Ljava/lang/String;	b	getName
c	cyc$a	net/minecraft/client/gl/GlShader$Type
	f	Lcyc$a;	a	VERTEX
	f	Lcyc$a;	b	FRAGMENT
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	d	fileExtension
	f	I	e	glType
	f	Ljava/util/Map;	f	loadedShaders
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getFileExtension
	m	()Ljava/util/Map;	c	getLoadedShaders
	m	()I	d	getGlType
c	cyd	net/minecraft/client/gl/GlProgramManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	()I	a	createProgram
	m	(Lcyb;)V	a	deleteProgram
	m	(I)V	a	useProgram
	m	(Lcyb;)V	b	linkProgram
c	cye	net/minecraft/client/gl/GlUniform
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	loc
	f	I	c	count
	f	I	d	dataType
	f	Ljava/nio/IntBuffer;	e	intData
	f	Ljava/nio/FloatBuffer;	f	floatData
	f	Ljava/lang/String;	g	name
	f	Z	h	stateDirty
	f	Lcyb;	i	program
	m	(Ljava/lang/String;IILcyb;)V	<init>	<init>
		p	1	name	name
		p	2	dataType	dataType
		p	3	count	count
		p	4	program	program
	m	(I)V	a	setLoc
	m	(Ljava/lang/String;)I	a	getTypeIndex
		p	0	typeName	typeName
	m	(ILjava/lang/CharSequence;)I	a	getUniformLocation
	m	()Ljava/lang/String;	a	getName
	m	(II)V	a	uniform1
	m	(ILjava/lang/CharSequence;)I	b	getAttribLocation
	m	()V	b	upload
	m	()V	c	markStateDirty
	m	()V	d	uploadInts
	m	()V	e	uploadFloats
	m	()V	f	uploadMatrix
c	cyf	net/minecraft/client/render/TransformingVertexConsumer
	f	Lcyo;	g	vertexConsumer
	f	Lb;	h	textureMatrix
	f	La;	i	normalMatrix
	f	F	j	x
	f	F	k	y
	f	F	l	z
	f	I	m	u1
	f	I	n	v1
	f	I	o	light
	f	F	p	normalX
	f	F	q	normalY
	f	F	r	normalZ
	m	(Lcyo;Lcyl$a;)V	<init>	<init>
		p	1	vertexConsumer	vertexConsumer
	m	()V	b	init
c	cyg	net/minecraft/client/render/BufferBuilder
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	f	Ljava/nio/ByteBuffer;	h	buffer
	f	Ljava/util/List;	i	parameters
	f	I	j	lastParameterIndex
	f	I	k	buildStart
	f	I	l	elementOffset
	f	I	m	nextDrawStart
	f	I	n	vertexCount
	f	Lcyq;	o	currentElement
	f	I	p	currentElementId
	f	I	q	drawMode
	f	Lcyp;	r	format
	f	Z	u	building
	m	(I)V	<init>	<init>
		p	1	initialCapacity	initialCapacity
	m	(ILcyp;)V	a	begin
		p	1	drawMode	drawMode
		p	2	format	format
	m	(Lcyg$b;)V	a	restoreState
	m	(Ljava/nio/FloatBuffer;FFFII)F	a	getDistanceSq
		p	0	buffer	buffer
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(FFF)V	b	sortQuads
		p	1	cameraX	cameraX
		p	2	cameraY	cameraY
		p	3	cameraZ	cameraZ
	m	()V	b	grow
	m	(I)V	c	grow
		p	1	size	size
	m	()Lcyg$b;	c	popState
	m	(I)I	d	roundBufferSize
		p	0	amount	amount
	m	()V	d	end
	m	()Lcom/mojang/datafixers/util/Pair;	f	popData
	m	()V	g	clear
	m	()V	h	reset
	m	()Z	j	isBuilding
c	cyg$a	net/minecraft/client/render/BufferBuilder$DrawArrayParameters
	f	Lcyp;	a	vertexFormat
	f	I	b	count
	f	I	c	mode
	m	(Lcyp;II)V	<init>	<init>
		p	1	vertexFormat	vertexFormat
		p	2	count	count
		p	3	mode	mode
	m	()Lcyp;	a	getVertexFormat
	m	()I	b	getCount
	m	()I	c	getMode
c	cyg$b	net/minecraft/client/render/BufferBuilder$State
	f	Ljava/nio/ByteBuffer;	a	buffer
	f	Lcyp;	b	format
	m	(Ljava/nio/ByteBuffer;Lcyp;)V	<init>	<init>
		p	1	buffer	buffer
		p	2	format	format
c	cyh	net/minecraft/client/render/BufferRenderer
	m	(Lcyg;)V	a	draw
		p	0	bufferBuilder	bufferBuilder
	m	(Ljava/nio/ByteBuffer;ILcyp;I)V	a	draw
		p	0	buffer	buffer
		p	1	mode	mode
		p	2	vertexFormat	vertexFormat
		p	3	count	count
c	cyi	net/minecraft/client/render/BufferVertexConsumer
	m	(IS)V	a	putShort
		p	1	index	index
		p	2	value	value
	m	(SSI)Lcyo;	a	texture
		p	1	u	u
		p	2	v	v
		p	3	index	index
	m	(IF)V	a	putFloat
		p	1	index	index
		p	2	value	value
	m	(IB)V	a	putByte
		p	1	index	index
		p	2	value	value
	m	()V	e	nextElement
	m	()Lcyq;	i	getCurrentElement
c	cyj	net/minecraft/client/render/VertexFormats
	f	Lcyq;	a	POSITION_ELEMENT
	f	Lcyq;	b	COLOR_ELEMENT
	f	Lcyq;	c	TEXTURE_ELEMENT
	f	Lcyq;	d	OVERLAY_ELEMENT
	f	Lcyq;	e	LIGHT_ELEMENT
	f	Lcyq;	f	NORMAL_ELEMENT
	f	Lcyq;	g	PADDING_ELEMENT
	f	Lcyp;	h	POSITION_COLOR_TEXTURE_LIGHT_NORMAL
	f	Lcyp;	i	POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL
	f	Lcyp;	j	POSITION_TEXTURE_COLOR_LIGHT
	f	Lcyp;	k	POSITION
	f	Lcyp;	l	POSITION_COLOR
	f	Lcyp;	m	POSITION_COLOR_LIGHT
	f	Lcyp;	n	POSITION_TEXTURE
	f	Lcyp;	o	POSITION_COLOR_TEXTURE
	f	Lcyp;	p	POSITION_TEXTURE_COLOR
	f	Lcyp;	q	POSITION_COLOR_TEXTURE_LIGHT
	f	Lcyp;	r	POSITION_TEXTURE_LIGHT_COLOR
	f	Lcyp;	s	POSITION_TEXTURE_COLOR_NORMAL
c	cyk	net/minecraft/client/render/FixedColorVertexConsumer
	f	Z	a	colorFixed
	f	I	b	fixedRed
	f	I	c	fixedGreen
	f	I	d	fixedBlue
	f	I	e	fixedAlpha
	m	(IIII)V	b	fixedColor
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
c	cyl	net/minecraft/client/util/math/MatrixStack
	f	Ljava/util/Deque;	a	stack
	m	(Lc;)V	a	multiply
		p	1	quaternion	quaternion
	m	(FFF)V	a	scale
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(DDD)V	a	translate
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()V	a	push
	m	()V	b	pop
	m	()Lcyl$a;	c	peek
	m	()Z	d	isEmpty
c	cyl$a	net/minecraft/client/util/math/MatrixStack$Entry
	f	Lb;	a	modelMatrix
	f	La;	b	normalMatrix
	m	()Lb;	a	getModel
	m	()La;	b	getNormal
c	cym	net/minecraft/client/render/Tessellator
	f	Lcyg;	a	buffer
	f	Lcym;	b	INSTANCE
	m	(I)V	<init>	<init>
		p	1	bufferCapacity	bufferCapacity
	m	()Lcym;	a	getInstance
	m	()V	b	draw
	m	()Lcyg;	c	getBuffer
c	cyn	net/minecraft/client/gl/VertexBuffer
	f	I	a	id
	f	Lcyp;	b	format
	f	I	c	vertexCount
	m	(Lcyp;)V	<init>	<init>
		p	1	format	format
	m	(Lcyg;)V	a	upload
		p	1	buffer	buffer
	m	()V	a	bind
	m	(Lb;I)V	a	draw
		p	1	matrix	matrix
		p	2	mode	mode
	m	()V	b	unbind
	m	(Lcyg;)Ljava/util/concurrent/CompletableFuture;	b	submitUpload
		p	1	buffer	buffer
	m	(Lcyg;)V	c	uploadInternal
		p	1	buffer	buffer
c	cyo	net/minecraft/client/render/VertexConsumer
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	m	(Lcyl$a;Ldrn;FFFII)V	a	quad
		p	1	matrixEntry	matrixEntry
		p	2	quad	quad
		p	3	red	red
		p	4	green	green
		p	5	blue	blue
		p	6	light	light
		p	7	overlay	overlay
	m	(La;FFF)Lcyo;	a	normal
		p	1	matrix	matrix
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(FFFF)Lcyo;	a	color
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(Lb;FFF)Lcyo;	a	vertex
		p	1	matrix	matrix
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(FFF)Lcyo;	a	normal
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lcyl$a;Ldrn;[FFFF[IIZ)V	a	quad
		p	1	matrixEntry	matrixEntry
		p	2	quad	quad
		p	3	brightnesses	brightnesses
		p	4	red	red
		p	5	green	green
		p	6	blue	blue
		p	7	lights	lights
		p	8	overlay	overlay
		p	9	useQuadColorData	useQuadColorData
	m	(FFFFFFFFFIIFFF)V	a	vertex
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	red	red
		p	5	green	green
		p	6	blue	blue
		p	7	alpha	alpha
		p	8	u	u
		p	9	v	v
		p	10	overlay	overlay
		p	11	light	light
		p	12	normalX	normalX
		p	13	normalY	normalY
		p	14	normalZ	normalZ
	m	(DDD)Lcyo;	a	vertex
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()V	a	next
	m	(I)Lcyo;	a	light
		p	1	uv	uv
	m	(FF)Lcyo;	a	texture
		p	1	u	u
		p	2	v	v
	m	(IIII)Lcyo;	a	color
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(II)Lcyo;	a	overlay
		p	1	u	u
		p	2	v	v
	m	(II)Lcyo;	b	light
		p	1	u	u
		p	2	v	v
	m	(I)Lcyo;	b	overlay
		p	1	uv	uv
c	cyp	net/minecraft/client/render/VertexFormat
	f	Lcom/google/common/collect/ImmutableList;	a	elements
	f	Lit/unimi/dsi/fastutil/ints/IntList;	b	offsets
	f	I	c	size
	m	(J)V	a	startDrawing
		p	1	pointer	pointer
	m	()I	a	getVertexSizeInteger
	m	()I	b	getVertexSize
	m	()Lcom/google/common/collect/ImmutableList;	c	getElements
	m	()V	d	endDrawing
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	cyq	net/minecraft/client/render/VertexFormatElement
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcyq$a;	b	format
	f	Lcyq$b;	c	type
	f	I	d	index
	f	I	e	count
	f	I	f	size
	m	(ILcyq$a;Lcyq$b;I)V	<init>	<init>
		p	1	index	index
		p	2	format	format
		p	3	type	type
		p	4	count	count
	m	(JI)V	a	startDrawing
		p	1	pointer	pointer
		p	3	stride	stride
	m	()Lcyq$a;	a	getFormat
	m	(ILcyq$b;)Z	a	isValidType
		p	1	index	index
	m	()Lcyq$b;	b	getType
	m	()I	c	getCount
	m	()I	d	getIndex
	m	()I	e	getSize
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Z	f	isPosition
	m	()V	g	endDrawing
c	cyq$a	net/minecraft/client/render/VertexFormatElement$Format
	f	I	h	size
	f	Ljava/lang/String;	i	name
	f	I	j	glId
	m	(Ljava/lang/String;IILjava/lang/String;I)V	<init>	<init>
		p	3	size	size
		p	4	name	name
		p	5	glId	glId
	m	()I	a	getSize
	m	()Ljava/lang/String;	b	getName
	m	()I	c	getGlId
c	cyq$b	net/minecraft/client/render/VertexFormatElement$Type
	f	Ljava/lang/String;	g	name
	f	Lcyq$b$a;	h	stater
	f	Ljava/util/function/IntConsumer;	i	finisher
	m	(Ljava/lang/String;ILjava/lang/String;Lcyq$b$a;Ljava/util/function/IntConsumer;)V	<init>	<init>
		p	3	name	name
	m	(I)V	a	endDrawing
		p	1	elementIndex	elementIndex
	m	()Ljava/lang/String;	a	getName
	m	(IIIJI)V	a	startDrawing
		p	1	count	count
		p	2	glId	glId
		p	3	stride	stride
		p	4	pointer	pointer
		p	6	elementIndex	elementIndex
c	cyq$b$a	net/minecraft/client/render/VertexFormatElement$Type$Starter
	m	(IIIJI)V	setupBufferState	setupBufferState
		p	1	count	count
		p	2	glId	glId
		p	3	stride	stride
		p	4	pointer	pointer
		p	6	elementIndex	elementIndex
c	cyr	net/minecraft/client/render/VertexConsumers
	m	(Lcyo;Lcyo;)Lcyo;	a	dual
		p	0	first	first
		p	1	second	second
c	cyr$a	net/minecraft/client/render/VertexConsumers$Dual
	f	Lcyo;	a	first
	f	Lcyo;	b	second
	m	(Lcyo;Lcyo;)V	<init>	<init>
		p	1	first	first
		p	2	second	second
c	cys	net/minecraft/client/util/math/Vector3d
	f	D	a	x
	f	D	b	y
	f	D	c	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	cyt	com/mojang/realmsclient/KeyCombo
	f	[C	a	chars
	f	I	b	matchIndex
	f	Ljava/lang/Runnable;	c	onCompletion
	m	(C)Z	a	keyPressed
		p	1	c	c
	m	()V	a	reset
c	cyu	com/mojang/realmsclient/RealmsMainScreen
	f	Z	A	createdTrial
	f	Z	B	showingPopup
	f	Z	C	hasUnreadNews
	f	Ljava/lang/String;	D	newsLink
	f	I	E	carouselIndex
	f	I	F	carouselTick
	f	Z	G	hasSwitchedCarouselImage
	f	Lnet/minecraft/realms/RealmsScreen;	H	realmsGenericErrorScreen
	f	Z	I	regionsPinged
	f	Ljava/util/List;	J	keyCombos
	f	I	K	clicks
	f	Ljava/util/concurrent/locks/ReentrantLock;	L	connectLock
	f	Z	M	expiredHover
	f	Lcyu$g;	N	showPopupButton
	f	Lcyu$c;	O	pendingInvitesButton
	f	Lcyu$b;	P	newsButton
	f	Lnet/minecraft/realms/RealmsButton;	Q	createTrialButton
	f	Lnet/minecraft/realms/RealmsButton;	R	buyARealmButton
	f	Lnet/minecraft/realms/RealmsButton;	S	closeButton
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Z	b	overrideConfigure
	f	Z	d	dontSetConnectedToRealms
	f	Lczl;	f	realmsDataFetcher
	f	I	g	lastScrollYPosition
	f	Lnet/minecraft/realms/RealmsScreen;	h	lastScreen
	f	Lcyu$d;	i	realmSelectionList
	f	J	j	selectedServerId
	f	Lnet/minecraft/realms/RealmsButton;	k	playButton
	f	Lnet/minecraft/realms/RealmsButton;	l	backButton
	f	Lnet/minecraft/realms/RealmsButton;	m	renewButton
	f	Lnet/minecraft/realms/RealmsButton;	n	configureButton
	f	Lnet/minecraft/realms/RealmsButton;	o	leaveButton
	f	Ljava/lang/String;	p	toolTip
	f	Ljava/util/List;	q	realmsServers
	f	I	r	numberOfPendingInvites
	f	I	s	animTick
	f	Z	t	hasParentalConsent
	f	Z	u	checkedParentalConsent
	f	Z	v	checkedClientCompatability
	f	Z	w	hasFetchedServers
	f	Z	x	popupOpenedByUser
	f	Z	y	justClosedPopup
	f	Z	z	trialsAvailable
	m	(Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	lastScreen	lastScreen
	m	()I	A	popupX0
	m	()I	B	popupY0
	m	()V	C	renderLocal
	m	()V	D	renderStage
	m	(Ljava/lang/String;)V	a	browseURL
		p	1	url	url
	m	(IIZIIZZ)V	a	renderNews
		p	1	xm	xm
		p	2	ym	ym
		p	3	unread	unread
		p	4	x	x
		p	5	y	y
		p	6	selectedOrHovered	selectedOrHovered
		p	7	active	active
	m	(IIIIZ)V	a	renderMoreInfo
		p	1	xm	xm
		p	2	ym	ym
		p	3	x	x
		p	4	y	y
		p	5	hoveredOrFocused	hoveredOrFocused
	m	(IIIIZZ)V	a	drawInvitationPendingIcon
		p	1	xm	xm
		p	2	ym	ym
		p	3	x	x
		p	4	y	y
		p	5	selectedOrHovered	selectedOrHovered
		p	6	active	active
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)V	a	updateButtonStates
		p	1	server	server
	m	(IIII)V	a	drawExpired
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(J)Lcom/mojang/realmsclient/dto/RealmsServer;	a	findServer
		p	1	id	id
	m	(IIIII)V	a	drawExpiring
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
		p	5	daysLeft	daysLeft
	m	(II)V	a	drawRealmsLogo
		p	1	x	x
		p	2	y	y
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V	a	play
		p	1	server	server
		p	2	cancelScreen	cancelScreen
	m	()Z	a	shouldShowMessageInList
	m	(Ljava/lang/String;II)V	a	renderMousehoverTooltip
		p	1	msg	msg
		p	2	x	x
		p	3	y	y
	m	(DD)Z	a	isOutsidePopup
		p	1	xm	xm
		p	3	ym	ym
	m	(DD)Z	b	inPendingInvitationArea
		p	1	xm	xm
		p	3	ym	ym
	m	(IIII)V	b	drawOpen
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(II)V	b	drawPopup
		p	1	xm	xm
		p	2	ym	ym
	m	()Z	b	shouldShowPopup
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V	b	connectToServer
		p	1	server	server
		p	2	cancelScreen	cancelScreen
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)Z	b	shouldPlayButtonBeActive
		p	1	server	server
	m	(IIII)V	c	drawClose
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	()V	c	addButtons
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)Z	c	shouldRenewButtonBeActive
		p	1	server	server
	m	(CI)Z	charTyped	charTyped
		p	1	ch	ch
		p	2	mods	mods
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	(IIII)V	d	drawLeave
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	()V	d	postInit
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)Z	d	shouldConfigureButtonBeVisible
		p	1	server	server
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)Z	e	shouldLeaveButtonBeVisible
		p	1	server	server
	m	()V	e	removeSelection
	m	(IIII)V	e	drawConfigure
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)V	f	configureClicked
	m	()Lcyu;	f	newScreen
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)V	g	leaveClicked
		p	1	selectedServer	selectedServer
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)Z	h	isSelfOwnedServer
		p	1	serverData	serverData
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)Z	i	isSelfOwnedNonExpiredServer
		p	1	serverData	serverData
	m	()Z	k	hasParentalConsent
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	()Z	l	shouldShowPopupButton
	m	()V	m	pingRegions
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	()Ljava/util/List;	n	getOwnedNonExpiredWorldIds
	m	()V	o	onPlay
	m	()V	p	onRenew
	m	()V	q	createTrial
	m	()V	r	checkClientCompatability
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
	m	()V	s	checkUnreadNews
	m	()V	t	checkParentalConsent
	m	()V	u	switchToStage
	m	()V	v	switchToLocal
	m	()V	w	switchToProd
	m	()V	x	stopRealmsFetcher
	m	()V	y	saveListScrollPosition
	m	()V	z	onClosePopup
c	cyu$a	com/mojang/realmsclient/RealmsMainScreen$CloseButton
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	a	a
c	cyu$b	com/mojang/realmsclient/RealmsMainScreen$NewsButton
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	a	a
c	cyu$c	com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	a	a
c	cyu$d	com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	m	(IIDDI)V	itemClicked	itemClicked
		p	1	clickSlotPos	clickSlotPos
		p	2	slot	slot
		p	3	xm	xm
		p	5	ym	ym
		p	7	width	width
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	xm	xm
		p	3	ym	ym
		p	5	buttonNum	buttonNum
	m	(I)V	selectItem	selectItem
		p	1	item	item
c	cyu$e	com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListEntry
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	a	mServerData
	m	(Lcyu;Lcom/mojang/realmsclient/dto/RealmsServer;)V	<init>	<init>
		p	2	serverData	serverData
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;IIII)V	b	renderMcoServerItem
		p	1	serverData	serverData
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	rowTop	rowTop
		p	3	rowLeft	rowLeft
		p	4	rowWidth	rowWidth
		p	5	rowHeight	rowHeight
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovered	hovered
		p	9	a	a
c	cyu$f	com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListTrialEntry
	m	(IIIII)V	a	renderTrialItem
		p	1	i	i
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	rowTop	rowTop
		p	3	rowLeft	rowLeft
		p	4	rowWidth	rowWidth
		p	5	rowHeight	rowHeight
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovered	hovered
		p	9	a	a
c	cyu$g	com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	a	a
c	cyv	com/mojang/realmsclient/client/FileDownload
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Z	b	cancelled
	f	Z	c	finished
	f	Z	d	error
	f	Z	e	extracting
	f	Ljava/io/File;	g	resourcePackPath
	f	Ljava/lang/Thread;	i	currentThread
	f	Lorg/apache/http/client/config/RequestConfig;	j	requestConfig
	f	[Ljava/lang/String;	k	INVALID_FILE_NAMES
	m	(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;)V	a	untarGzipArchive
		p	1	name	name
		p	2	file	file
		p	3	levelStorageSource	levelStorageSource
	m	(Ljava/lang/String;)J	a	contentLength
		p	1	downloadLink	downloadLink
	m	()V	a	cancel
	m	(Ljava/lang/String;)Ljava/lang/String;	b	findAvailableFolderName
		p	0	folder	folder
	m	()Z	b	isFinished
	m	()Z	c	isError
	m	()Z	d	isExtracting
c	cyv$a	com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	f	Ljava/awt/event/ActionListener;	b	listener
	m	(Lcyv;Ljava/io/OutputStream;)V	<init>	<init>
		p	2	out	out
	m	(Ljava/awt/event/ActionListener;)V	a	setListener
		p	1	listener	listener
	m	(I)V	afterWrite	afterWrite
		p	1	n	n
c	cyv$b	com/mojang/realmsclient/client/FileDownload$ProgressListener
	f	Ljava/lang/String;	b	worldName
	f	Ljava/io/File;	c	tempFile
	f	Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;	d	levelStorageSource
	f	Lczv$a;	e	downloadStatus
	f	Lcom/mojang/realmsclient/dto/WorldDownload;	f	worldDownload
	m	(Lcyv;Ljava/lang/String;Ljava/io/File;Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;Lczv$a;Lcom/mojang/realmsclient/dto/WorldDownload;)V	<init>	<init>
		p	2	worldName	worldName
		p	3	tempFile	tempFile
		p	4	levelStorageSource	levelStorageSource
		p	5	downloadStatus	downloadStatus
		p	6	worldDownload	worldDownload
	m	(Ljava/awt/event/ActionEvent;)V	actionPerformed	actionPerformed
		p	1	e	e
c	cyv$c	com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	f	Ljava/io/File;	b	tempFile
	f	Lczv$a;	c	downloadStatus
	f	Lcom/mojang/realmsclient/dto/WorldDownload;	d	worldDownload
	m	(Lcyv;Ljava/io/File;Lczv$a;Lcom/mojang/realmsclient/dto/WorldDownload;)V	<init>	<init>
		p	2	tempFile	tempFile
		p	3	downloadStatus	downloadStatus
		p	4	worldDownload	worldDownload
	m	(Ljava/awt/event/ActionEvent;)V	actionPerformed	actionPerformed
		p	1	e	e
c	cyw	com/mojang/realmsclient/client/FileUpload
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	file
	f	J	c	worldId
	f	I	d	slotId
	f	Lcom/mojang/realmsclient/dto/UploadInfo;	e	uploadInfo
	f	Ljava/lang/String;	f	sessionId
	f	Ljava/lang/String;	g	username
	f	Ljava/lang/String;	h	clientVersion
	f	Lczc;	i	uploadStatus
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	j	cancelled
	f	Ljava/util/concurrent/CompletableFuture;	k	uploadTask
	f	Lorg/apache/http/client/config/RequestConfig;	l	requestConfig
	m	(Ljava/io/File;JILcom/mojang/realmsclient/dto/UploadInfo;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lczc;)V	<init>	<init>
		p	1	file	file
		p	2	worldId	worldId
		p	4	slotId	slotId
		p	5	uploadInfo	uploadInfo
		p	6	sessionId	sessionId
		p	7	username	username
		p	8	clientVersion	clientVersion
		p	9	uploadStatus	uploadStatus
	m	(JI)Z	a	shouldRetry
		p	1	retryDelaySeconds	retryDelaySeconds
		p	3	currentAttempt	currentAttempt
	m	(I)Ldap;	a	requestUpload
		p	1	currentAttempt	currentAttempt
	m	(Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V	a	cleanup
		p	1	request	request
		p	2	client	client
	m	(Ljava/util/function/Consumer;)V	a	upload
		p	1	callback	callback
	m	(Lorg/apache/http/HttpResponse;Ldap$a;)V	a	handleResponse
		p	1	response	response
		p	2	uploadResultBuilder	uploadResultBuilder
	m	()V	a	cancel
	m	(Lorg/apache/http/HttpResponse;)J	a	getRetryDelaySeconds
		p	1	response	response
	m	(Lorg/apache/http/client/methods/HttpPost;)V	a	setupRequest
		p	1	request	request
	m	()Z	b	isFinished
	m	(JI)Ldap;	b	retryUploadAfter
		p	1	retryDelaySeconds	retryDelaySeconds
		p	3	currentAttempt	currentAttempt
c	cyw$a	com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	f	J	a	length
	f	Ljava/io/InputStream;	b	content
	f	Lczc;	c	uploadStatus
	m	(Ljava/io/InputStream;JLczc;)V	<init>	<init>
		p	1	content	content
		p	2	length	length
		p	4	uploadStatus	uploadStatus
	m	(Ljava/io/OutputStream;)V	writeTo	writeTo
		p	1	outstream	outstream
c	cyx	com/mojang/realmsclient/client/Ping
	m	()Ljava/util/List;	a	pingAllRegions
	m	([Lcyx$a;)Ljava/util/List;	a	ping
		p	0	regions	regions
	m	(Ljava/lang/String;)I	a	ping
		p	0	host	host
	m	(Ljava/net/Socket;)V	a	close
		p	0	socket	socket
	m	()J	b	now
c	cyx$a	com/mojang/realmsclient/client/Ping$Region
	f	Lcyx$a;	a	US_EAST_1
	f	Lcyx$a;	b	US_WEST_2
	f	Lcyx$a;	c	US_WEST_1
	f	Lcyx$a;	d	EU_WEST_1
	f	Lcyx$a;	e	AP_SOUTHEAST_1
	f	Lcyx$a;	f	AP_SOUTHEAST_2
	f	Lcyx$a;	g	AP_NORTHEAST_1
	f	Lcyx$a;	h	SA_EAST_1
	f	Ljava/lang/String;	i	name
	f	Ljava/lang/String;	j	endpoint
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3	name	name
		p	4	endpoint	endpoint
	m	(Ljava/lang/String;)Lcyx$a;	valueOf	valueOf
		p	0	name	name
c	cyy	com/mojang/realmsclient/client/RealmsClient
	f	Lcyy$b;	a	currentEnvironment
	f	Z	b	initialized
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	sessionId
	f	Ljava/lang/String;	e	username
	f	Lcom/google/gson/Gson;	f	gson
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/net/Proxy;)V	<init>	<init>
		p	1	sessionId	sessionId
		p	2	username	username
		p	3	proxy	proxy
	m	(JLjava/lang/String;)V	a	uninvite
		p	1	worldId	worldId
		p	3	profileUuid	profileUuid
	m	(Lcom/mojang/realmsclient/dto/PingResult;)V	a	sendPingResults
		p	1	pingResult	pingResult
	m	()Lcyy;	a	createRealmsClient
	m	(Lczb;)Ljava/lang/String;	a	execute
		p	1	r	r
	m	(J)Lcom/mojang/realmsclient/dto/RealmsServer;	a	getOwnWorld
		p	1	worldId	worldId
	m	(JI)Z	a	switchSlot
		p	1	worldId	worldId
		p	3	slot	slot
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	url
		p	1	path	path
		p	2	queryString	queryString
	m	(IILcom/mojang/realmsclient/dto/RealmsServer$c;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;	a	fetchWorldTemplates
		p	1	page	page
		p	2	pageSize	pageSize
		p	3	type	type
	m	(JLjava/lang/String;Ljava/lang/String;)V	a	initializeWorld
		p	1	worldId	worldId
		p	3	name	name
		p	4	motd	motd
	m	(Ljava/lang/String;)V	a	acceptInvitation
		p	1	invitationId	invitationId
	m	(JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean;	a	resetWorldWithSeed
		p	1	worldId	worldId
		p	3	seed	seed
		p	4	levelType	levelType
		p	5	generateStructures	generateStructures
	m	(JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V	a	updateSlot
		p	1	worldId	worldId
		p	3	slot	slot
		p	4	options	options
	m	(JLjava/lang/String;Ljava/lang/String;)V	b	update
		p	1	worldId	worldId
		p	3	name	name
		p	4	motd	motd
	m	()V	b	switchToStage
	m	(Ljava/lang/String;)V	b	rejectInvitation
		p	1	invitationId	invitationId
	m	(JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer;	b	invite
		p	1	worldId	worldId
		p	3	profileName	profileName
	m	(JI)Lcom/mojang/realmsclient/dto/WorldDownload;	b	download
		p	1	worldId	worldId
		p	3	slotId	slotId
	m	(J)Lcom/mojang/realmsclient/dto/RealmsServerAddress;	b	join
		p	1	worldId	worldId
	m	()V	c	switchToProd
	m	(Ljava/lang/String;)Ljava/lang/String;	c	url
		p	1	path	path
	m	(J)V	c	uninviteMyselfFrom
		p	1	worldId	worldId
	m	(JLjava/lang/String;)V	c	restoreWorld
		p	1	worldId	worldId
		p	3	backupId	backupId
	m	(J)Lcom/mojang/realmsclient/dto/BackupList;	d	backupsFor
		p	1	worldId	worldId
	m	(JLjava/lang/String;)Ljava/lang/Boolean;	d	putIntoMinigameMode
		p	1	worldId	worldId
		p	3	minigameId	minigameId
	m	()V	d	switchToLocal
	m	(JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops;	e	op
		p	1	worldId	worldId
		p	3	profileUuid	profileUuid
	m	(J)Ljava/lang/Boolean;	e	open
		p	1	worldId	worldId
	m	()Lcom/mojang/realmsclient/dto/RealmsServerList;	e	listWorlds
	m	(JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops;	f	deop
		p	1	worldId	worldId
		p	3	profileUuid	profileUuid
	m	()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists;	f	getLiveStats
	m	(J)Ljava/lang/Boolean;	f	close
		p	1	worldId	worldId
	m	(JLjava/lang/String;)Ljava/lang/Boolean;	g	resetWorldWithTemplate
		p	1	worldId	worldId
		p	3	worldTemplateId	worldTemplateId
	m	()Ljava/lang/Boolean;	g	mcoEnabled
	m	(J)Lcom/mojang/realmsclient/dto/Subscription;	g	subscriptionFor
		p	1	worldId	worldId
	m	(JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo;	h	upload
		p	1	worldId	worldId
		p	3	uploadToken	uploadToken
	m	()Ljava/lang/Boolean;	h	stageAvailable
	m	(J)V	h	deleteWorld
		p	1	worldId	worldId
	m	()Lcyy$a;	i	clientCompatible
	m	()I	j	pendingInvitesCount
	m	()Lcom/mojang/realmsclient/dto/PendingInvitesList;	k	pendingInvites
	m	()V	l	agreeToTos
	m	()Lcom/mojang/realmsclient/dto/RealmsNews;	m	getNews
	m	()Ljava/lang/Boolean;	n	trialAvailable
c	cyy$a	com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	f	Lcyy$a;	a	COMPATIBLE
	f	Lcyy$a;	b	OUTDATED
	f	Lcyy$a;	c	OTHER
	m	(Ljava/lang/String;)Lcyy$a;	valueOf	valueOf
		p	0	name	name
c	cyy$b	com/mojang/realmsclient/client/RealmsClient$Environment
	f	Lcyy$b;	a	PRODUCTION
	f	Lcyy$b;	b	STAGE
	f	Lcyy$b;	c	LOCAL
	f	Ljava/lang/String;	d	baseUrl
	f	Ljava/lang/String;	e	protocol
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3	baseUrl	baseUrl
		p	4	protocol	protocol
	m	(Ljava/lang/String;)Lcyy$b;	valueOf	valueOf
		p	0	name	name
c	cyz	com/mojang/realmsclient/client/RealmsClientConfig
	f	Ljava/net/Proxy;	a	proxy
	m	()Ljava/net/Proxy;	a	getProxy
	m	(Ljava/net/Proxy;)V	a	setProxy
		p	0	proxy	proxy
c	cz	net/minecraft/command/arguments/EntitySummonArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	NOT_FOUND_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lsm;)Lsm;	a	validate
	m	()Lcz;	a	entitySummon
	m	(Lcom/mojang/brigadier/StringReader;)Lsm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lsm;	a	getEntitySummon
		p	0	context	context
		p	1	name	name
c	cza	com/mojang/realmsclient/client/RealmsError
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	errorMessage
	f	I	c	errorCode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	error	error
	m	()Ljava/lang/String;	a	getErrorMessage
	m	()I	b	getErrorCode
c	czb	com/mojang/realmsclient/client/Request
	f	Ljava/net/HttpURLConnection;	a	connection
	f	Ljava/lang/String;	b	url
	f	Z	c	connected
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1	url	url
		p	2	connectTimeout	connectTimeout
		p	3	readTimeout	readTimeout
	m	(Ljava/lang/String;II)Lczb;	a	get
		p	0	url	url
		p	1	connectTimeoutMillis	connectTimeoutMillis
		p	2	readTimeoutMillis	readTimeoutMillis
	m	(Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String;	a	getHeader
		p	0	connection	connection
		p	1	header	header
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	cookie
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;)Lczb;	a	get
		p	0	url	url
	m	(Ljava/io/InputStream;)Ljava/lang/String;	a	read
		p	1	in	in
	m	(Ljava/lang/String;Ljava/lang/String;II)Lczb;	a	post
		p	0	uri	uri
		p	1	content	content
		p	2	connectTimeoutMillis	connectTimeoutMillis
		p	3	readTimeoutMillis	readTimeoutMillis
	m	(Ljava/net/HttpURLConnection;)I	a	getRetryAfterHeader
		p	0	connection	connection
	m	()I	a	getRetryAfterHeader
	m	(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V	a	cookie
		p	0	connection	connection
		p	1	key	key
		p	2	value	value
	m	()I	b	responseCode
	m	(Ljava/lang/String;Ljava/lang/String;)Lczb;	b	post
		p	0	uri	uri
		p	1	content	content
	m	(Ljava/lang/String;)Lczb;	b	delete
		p	0	url	url
	m	(Ljava/lang/String;Ljava/lang/String;II)Lczb;	b	put
		p	0	url	url
		p	1	content	content
		p	2	connectTimeoutMillis	connectTimeoutMillis
		p	3	readTimeoutMillis	readTimeoutMillis
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getHeader
		p	1	header	header
	m	()Ljava/lang/String;	c	text
	m	(Ljava/lang/String;Ljava/lang/String;)Lczb;	c	put
		p	0	url	url
		p	1	content	content
	m	()Lczb;	d	connect
	m	()Lczb;	e	doConnect
	m	()V	f	dispose
c	czb$a	com/mojang/realmsclient/client/Request$Delete
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1	uri	uri
		p	2	connectTimeout	connectTimeout
		p	3	readTimeout	readTimeout
	m	()Lczb$a;	f	doConnect
c	czb$b	com/mojang/realmsclient/client/Request$Get
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1	uri	uri
		p	2	connectTimeout	connectTimeout
		p	3	readTimeout	readTimeout
	m	()Lczb$b;	f	doConnect
c	czb$c	com/mojang/realmsclient/client/Request$Post
	f	Ljava/lang/String;	c	content
	m	(Ljava/lang/String;Ljava/lang/String;II)V	<init>	<init>
		p	1	uri	uri
		p	2	content	content
		p	3	connectTimeout	connectTimeout
		p	4	readTimeout	readTimeout
	m	()Lczb$c;	f	doConnect
c	czb$d	com/mojang/realmsclient/client/Request$Put
	f	Ljava/lang/String;	c	content
	m	(Ljava/lang/String;Ljava/lang/String;II)V	<init>	<init>
		p	1	uri	uri
		p	2	content	content
		p	3	connectTimeout	connectTimeout
		p	4	readTimeout	readTimeout
	m	()Lczb$d;	f	doConnect
c	czc	com/mojang/realmsclient/client/UploadStatus
	f	Ljava/lang/Long;	a	bytesWritten
	f	Ljava/lang/Long;	b	totalBytes
c	czd	com/mojang/realmsclient/dto/ValueObject
	m	(Ljava/lang/reflect/Field;)Z	isStatic	isStatic
		p	0	f	f
c	cze	com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	f	Lorg/apache/logging/log4j/Logger;	a	logger
	m	(Lorg/apache/logging/log4j/Logger;)V	<init>	<init>
		p	1	logger	logger
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	uncaughtException	uncaughtException
		p	1	t	t
		p	2	e	e
c	czf	com/mojang/realmsclient/exception/RealmsHttpException
	m	(Ljava/lang/String;Ljava/lang/Exception;)V	<init>	<init>
		p	1	s	s
		p	2	e	e
c	czg	com/mojang/realmsclient/exception/RealmsServiceException
	f	I	a	httpResultCode
	f	Ljava/lang/String;	b	httpResponseContent
	f	I	c	errorCode
	f	Ljava/lang/String;	d	errorMsg
	m	(ILjava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	1	httpResultCode	httpResultCode
		p	2	httpResponseText	httpResponseText
		p	3	errorCode	errorCode
		p	4	errorMsg	errorMsg
	m	(ILjava/lang/String;Lcza;)V	<init>	<init>
		p	1	httpResultCode	httpResultCode
		p	2	httpResponseText	httpResponseText
		p	3	error	error
c	czh	com/mojang/realmsclient/exception/RetryCallException
	f	I	e	delaySeconds
	m	(I)V	<init>	<init>
		p	1	delaySeconds	delaySeconds
c	czi	net/minecraft/client/util/TextFormat
	f	Z	A	isFormat
	f	Ljava/lang/String;	B	toString
	f	Lczi;	a	BLACK
	f	Lczi;	b	DARK_BLUE
	f	Lczi;	c	DARK_GREEN
	f	Lczi;	d	DARK_AQUA
	f	Lczi;	e	DARK_RED
	f	Lczi;	f	DARK_PURPLE
	f	Lczi;	g	GOLD
	f	Lczi;	h	GRAY
	f	Lczi;	i	DARK_GRAY
	f	Lczi;	j	BLUE
	f	Lczi;	k	GREEN
	f	Lczi;	l	AQUA
	f	Lczi;	m	RED
	f	Lczi;	n	LIGHT_PURPLE
	f	Lczi;	o	YELLOW
	f	Lczi;	p	WHITE
	f	Lczi;	q	OBFUSCATED
	f	Lczi;	r	BOLD
	f	Lczi;	s	STRIKETHROUGH
	f	Lczi;	t	UNDERLINE
	f	Lczi;	u	ITALIC
	f	Lczi;	v	RESET
	f	Ljava/util/Map;	w	FORMATTING_BY_CHAR
	f	Ljava/util/Map;	x	FORMATTING_BY_NAME
	f	Ljava/util/regex/Pattern;	y	STRIP_FORMATTING_PATTERN
	f	C	z	code
	m	(Ljava/lang/String;ICZ)V	<init>	<init>
		p	3	code	code
		p	4	isFormat	isFormat
	m	(Ljava/lang/String;IC)V	<init>	<init>
		p	3	code	code
	m	()C	a	getChar
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/String;)Lczi;	valueOf	valueOf
		p	0	name	name
c	czj	com/mojang/realmsclient/gui/LongRunningTask
	f	Lczz;	a	longRunningMcoTaskScreen
	m	(Lczz;)V	a	setScreen
		p	1	longRunningMcoTaskScreen	longRunningMcoTaskScreen
	m	()Z	a	aborted
	m	(Ljava/lang/String;)V	a	error
		p	1	errorMessage	errorMessage
	m	(Ljava/lang/String;)V	b	setTitle
		p	1	title	title
	m	()V	b	tick
	m	()V	c	init
	m	()V	d	abortTask
c	czk	com/mojang/realmsclient/gui/RealmsConstants
	m	(I)I	a	row
		p	0	i	i
c	czl	com/mojang/realmsclient/gui/RealmsDataFetcher
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ScheduledExecutorService;	b	scheduler
	f	Z	c	stopped
	f	Lczl$c;	d	serverListUpdateTask
	f	Lczl$b;	e	pendingInviteUpdateTask
	f	Lczl$e;	f	trialAvailabilityTask
	f	Lczl$a;	g	liveStatsTask
	f	Lczl$f;	h	unreadNewsTask
	f	Ljava/util/Set;	i	removedServers
	f	Ljava/util/List;	j	servers
	f	Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists;	k	livestats
	f	I	l	pendingInvitesCount
	f	Z	m	trialAvailable
	f	Z	n	hasUnreadNews
	f	Ljava/lang/String;	o	newsLink
	f	Ljava/util/concurrent/ScheduledFuture;	p	serverListScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	q	pendingInviteScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	r	trialAvailableScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	s	liveStatsScheduledFuture
	f	Ljava/util/concurrent/ScheduledFuture;	t	unreadNewsScheduledFuture
	f	Ljava/util/Map;	u	fetchStatus
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)V	a	removeItem
		p	1	server	server
	m	(Ljava/util/List;)V	a	initWithSpecificTaskList
		p	1	tasks	tasks
	m	()Z	a	isStopped
	m	(Lczl$d;)Z	a	isFetchedSinceLastTry
		p	1	task	task
	m	(Ljava/util/List;)V	b	setServers
		p	1	newServers	newServers
	m	()V	b	init
	m	()V	c	markClean
	m	(Ljava/util/List;)V	c	sort
		p	1	servers	servers
	m	()V	d	forceUpdate
	m	()Ljava/util/List;	e	getServers
	m	()I	f	getPendingInvitesCount
	m	()Z	g	isTrialAvailable
	m	()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists;	h	getLivestats
	m	()Z	i	hasUnreadNews
	m	()Ljava/lang/String;	j	newsLink
	m	()V	k	stop
	m	()V	m	scheduleTasks
	m	()V	n	cancelTasks
	m	()Z	o	isActive
c	czl$a	com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask
	m	()V	a	getLiveStats
c	czl$b	com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask
	m	()V	a	updatePendingInvites
c	czl$c	com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask
	m	()V	a	updateServersList
c	czl$d	com/mojang/realmsclient/gui/RealmsDataFetcher$Task
	f	Lczl$d;	a	SERVER_LIST
	f	Lczl$d;	b	PENDING_INVITE
	f	Lczl$d;	c	TRIAL_AVAILABLE
	f	Lczl$d;	d	LIVE_STATS
	f	Lczl$d;	e	UNREAD_NEWS
	m	(Ljava/lang/String;)Lczl$d;	valueOf	valueOf
		p	0	name	name
c	czl$e	com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask
	m	()V	a	getTrialAvailable
c	czl$f	com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask
	m	()V	a	getUnreadNews
c	czm	com/mojang/realmsclient/gui/RealmsWorldSlotButton
	f	Ljava/util/function/Supplier;	a	serverDataProvider
	f	Ljava/util/function/Consumer;	b	toolTipSetter
	f	Lczm$b;	c	listener
	f	I	d	slotIndex
	f	I	e	animTick
	f	Lczm$c;	f	state
	m	(IIIILjava/util/function/Supplier;Ljava/util/function/Consumer;IILczm$b;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	serverDataProvider	serverDataProvider
		p	6	toolTipSetter	toolTipSetter
		p	7	id	id
		p	8	slotIndex	slotIndex
		p	9	listener	listener
	m	(IIIIZLjava/lang/String;IJLjava/lang/String;ZZLczm$a;Ljava/lang/String;)V	a	drawSlotFrame
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
		p	5	currentlyActiveSlot	currentlyActiveSlot
		p	6	text	text
		p	7	i	i
		p	8	imageId	imageId
		p	10	image	image
		p	11	empty	empty
		p	12	minigame	minigame
		p	13	action	action
		p	14	actionPrompt	actionPrompt
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	a	a
c	czm$a	com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	f	Lczm$a;	a	NOTHING
	f	Lczm$a;	b	SWITCH_SLOT
	f	Lczm$a;	c	JOIN
	m	(Ljava/lang/String;)Lczm$a;	valueOf	valueOf
		p	0	name	name
c	czm$b	com/mojang/realmsclient/gui/RealmsWorldSlotButton$Listener
	m	(ILczm$a;ZZ)V	a	onSlotClick
c	czm$c	com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	f	Z	a	isCurrentlyActiveSlot
	f	Ljava/lang/String;	b	slotName
	f	J	c	imageId
	f	Ljava/lang/String;	d	image
	f	Z	e	empty
	f	Z	f	minigame
	f	Lczm$a;	g	action
	f	Ljava/lang/String;	h	actionPrompt
	m	(ZLjava/lang/String;JLjava/lang/String;ZZLczm$a;Ljava/lang/String;)V	<init>	<init>
		p	1	isCurrentlyActiveSlot	isCurrentlyActiveSlot
		p	2	slotName	slotName
		p	3	imageId	imageId
		p	5	image	image
		p	6	empty	empty
		p	7	minigame	minigame
		p	8	action	action
		p	9	actionPrompt	actionPrompt
c	czn	com/mojang/realmsclient/gui/screens/RealmsAcceptRejectButton
	f	I	a	width
	f	I	b	height
	f	I	c	x
	f	I	d	y
	m	(IIII)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	x	x
		p	4	y	y
	m	()I	a	getRight
	m	(IIZ)V	a	render
		p	1	x	x
		p	2	y	y
		p	3	hovered	hovered
	m	(IIII)V	a	render
		p	1	offsetX	offsetX
		p	2	offsetY	offsetY
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/realms/RealmListEntry;Ljava/util/List;IDD)V	a	handleClick
		p	0	selectionList	selectionList
		p	1	entry	entry
		p	2	buttons	buttons
		p	3	button	button
		p	4	mouseX	mouseX
		p	6	mouseY	mouseY
	m	(Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V	a	render
		p	0	buttons	buttons
		p	1	selectionList	selectionList
		p	2	offsetX	offsetX
		p	3	offsetY	offsetY
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(I)V	a	handleClick
		p	1	index	index
	m	()I	b	getBottom
c	czo	com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	f	[Ljava/lang/String;	a	difficulties
	f	[Ljava/lang/String;	b	gameModes
	f	Lnet/minecraft/realms/RealmsScreen;	c	lastScreen
	f	I	d	BUTTON_BACK_ID
	f	Lcom/mojang/realmsclient/dto/Backup;	e	backup
	f	Ljava/util/List;	f	keys
	f	Lczo$a;	g	backupInfoList
	m	(Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/Backup;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	backup	backup
	m	(Ljava/lang/String;)Ljava/lang/String;	a	gameDifficultyMetadata
		p	1	value	value
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	checkForSpecificMetadata
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;)Ljava/lang/String;	b	gameModeMetadata
		p	1	value	value
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czo$a	com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
	m	(I)Z	isSelectedItem	isSelectedItem
		p	1	item	item
	m	(IIIILnet/minecraft/realms/Tezzelator;II)V	renderItem	renderItem
		p	1	i	i
		p	2	x	x
		p	3	y	y
		p	4	h	h
		p	5	t	t
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
c	czp	com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	lastScrollPosition
	f	Lczs;	c	lastScreen
	f	Ljava/util/List;	d	backups
	f	Ljava/lang/String;	e	toolTip
	f	Lczp$a;	f	backupObjectSelectionList
	f	I	g	selectedBackup
	f	I	h	slotId
	f	Lnet/minecraft/realms/RealmsButton;	i	downloadButton
	f	Lnet/minecraft/realms/RealmsButton;	j	restoreButton
	f	Lnet/minecraft/realms/RealmsButton;	k	changesButton
	f	Ljava/lang/Boolean;	l	noBackups
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	m	serverData
	f	Lnet/minecraft/realms/RealmsLabel;	n	titleLabel
	m	(Lczs;Lcom/mojang/realmsclient/dto/RealmsServer;I)V	<init>	<init>
		p	1	lastscreen	lastscreen
		p	2	serverData	serverData
		p	3	slotId	slotId
	m	(Ljava/lang/String;II)V	a	renderMousehoverTooltip
		p	1	msg	msg
		p	2	x	x
		p	3	y	y
	m	(Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V	a	addToChangeList
		p	1	backup	backup
		p	2	key	key
	m	()V	b	generateChangeList
	m	(I)V	b	restoreClicked
		p	1	selectedBackup	selectedBackup
	m	()V	c	postInit
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	()V	d	updateButtonStates
	m	()Z	e	shouldChangesButtonBeVisible
	m	()Z	f	shouldRestoreButtonBeVisible
	m	()V	g	downloadClicked
	m	()V	h	downloadWorldData
	m	()V	i	restore
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czp$a	com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	m	(I)V	a	selectInviteListItem
		p	1	item	item
	m	(Lcom/mojang/realmsclient/dto/Backup;)V	a	addEntry
		p	1	backup	backup
	m	(IIDDI)V	itemClicked	itemClicked
		p	1	clickSlotPos	clickSlotPos
		p	2	slot	slot
		p	3	xm	xm
		p	5	ym	ym
		p	7	width	width
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	xm	xm
		p	3	ym	ym
		p	5	buttonNum	buttonNum
	m	(I)V	selectItem	selectItem
		p	1	item	item
c	czp$b	com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionListEntry
	f	Lcom/mojang/realmsclient/dto/Backup;	a	mBackup
	m	(Lczp;Lcom/mojang/realmsclient/dto/Backup;)V	<init>	<init>
		p	2	backup	backup
	m	(IIII)V	a	drawRestore
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(Lcom/mojang/realmsclient/dto/Backup;IIII)V	a	renderBackupItem
		p	1	backup	backup
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(Ljava/util/Date;)Ljava/lang/String;	a	getMediumDatePresentation
		p	1	lastModifiedDate	lastModifiedDate
	m	(IIII)V	b	drawInfo
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	rowTop	rowTop
		p	3	rowLeft	rowLeft
		p	4	rowWidth	rowWidth
		p	5	rowHeight	rowHeight
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovered	hovered
		p	9	a	a
c	czq	com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/realms/RealmsScreen;	b	lastScreen
	f	Lcyu;	c	mainScreen
	f	J	e	serverId
	f	Ljava/lang/String;	f	title
	f	Ljava/lang/String;	g	message
	f	I	h	left_x
	f	I	i	right_x
	f	I	j	default_button_width
	f	I	k	default_button_offset
	f	Ljava/util/List;	l	playButtonIds
	f	Ljava/util/List;	m	resetButtonIds
	f	Ljava/util/List;	n	downloadButtonIds
	f	Ljava/util/List;	o	downloadConfirmationIds
	f	Ljava/util/List;	p	slotsThatHasBeenDownloaded
	f	I	q	animTick
	m	(Lnet/minecraft/realms/RealmsScreen;Lcyu;J)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	mainScreen	mainScreen
		p	3	serverId	serverId
	m	(I)I	a	getFramePositionX
		p	1	i	i
	m	(Ljava/lang/String;)V	a	setTitle
		p	1	title	title
	m	(J)V	a	fetchServerData
		p	1	worldId	worldId
	m	()V	a	addButtons
	m	(IIIIZLjava/lang/String;IJLjava/lang/String;Z)V	a	drawSlotFrame
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
		p	5	active	active
		p	6	text	text
		p	7	i	i
		p	8	imageId	imageId
		p	10	image	image
		p	11	empty	empty
	m	(I)V	b	downloadWorld
		p	1	slotId	slotId
	m	(I)V	c	switchSlot
		p	1	id	id
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	()V	d	backButtonClicked
	m	()Z	e	isMinigame
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czq$a	com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$DownloadButton
	m	(Lczq;IILjava/lang/String;)V	<init>	<init>
		p	2	id	id
		p	3	x	x
		p	4	msg	msg
c	czq$b	com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$PlayButton
	m	(Lczq;IILjava/lang/String;)V	<init>	<init>
		p	2	id	id
		p	3	x	x
		p	4	msg	msg
c	czr	com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	f	Lnet/minecraft/realms/RealmsScreen;	a	lastScreen
	f	Z	b	outdated
	m	(Lnet/minecraft/realms/RealmsScreen;Z)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	outdated	outdated
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czs	com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	toolTip
	f	Lcyu;	c	lastScreen
	f	J	e	serverId
	f	I	f	left_x
	f	I	g	right_x
	f	I	h	default_button_width
	f	I	i	default_button_offset
	f	Lnet/minecraft/realms/RealmsButton;	j	playersButton
	f	Lnet/minecraft/realms/RealmsButton;	k	settingsButton
	f	Lnet/minecraft/realms/RealmsButton;	l	subscriptionButton
	f	Lnet/minecraft/realms/RealmsButton;	m	optionsButton
	f	Lnet/minecraft/realms/RealmsButton;	n	backupButton
	f	Lnet/minecraft/realms/RealmsButton;	o	resetWorldButton
	f	Lnet/minecraft/realms/RealmsButton;	p	switchMinigameButton
	f	Z	q	stateChanged
	f	I	r	animTick
	f	I	s	clicks
	m	(Lcyu;J)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	serverId	serverId
	m	(II)I	a	centerButton
		p	1	i	i
		p	2	total	total
	m	()V	a	stateChanged
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	saveSettings
		p	1	name	name
		p	2	desc	desc
	m	(Lnet/minecraft/realms/RealmsButton;)V	a	hide
		p	1	button	button
	m	(Lnet/minecraft/realms/RealmsScreen;)V	a	closeTheWorld
		p	1	screenInCaseOfCancel	screenInCaseOfCancel
	m	(Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V	a	saveSlotSettings
		p	1	options	options
	m	(JI)V	a	switchSlot
		p	1	worldId	worldId
		p	3	selectedSlot	selectedSlot
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;)V	a	joinRealm
		p	1	serverData	serverData
	m	(Lcom/mojang/realmsclient/dto/WorldTemplate;)V	a	callback
	m	(ILcom/mojang/realmsclient/dto/RealmsServer;)V	a	switchToFullSlot
		p	1	selectedSlot	selectedSlot
		p	2	serverData	serverData
	m	(J)V	a	fetchServerData
		p	1	worldId	worldId
	m	(Ljava/lang/String;II)V	a	renderMousehoverTooltip
		p	1	msg	msg
		p	2	x	x
		p	3	y	y
	m	(ZLnet/minecraft/realms/RealmsScreen;)V	a	openTheWorld
		p	1	join	join
		p	2	screenInCaseOfCancel	screenInCaseOfCancel
	m	(IIII)V	a	drawServerStatus
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(IIIII)V	a	drawExpiring
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
		p	5	daysLeft	daysLeft
	m	(I)V	a	addSlotButton
		p	1	i	i
	m	(Lcom/mojang/realmsclient/dto/WorldTemplate;)V	b	switchMinigame
		p	1	selectedWorldTemplate	selectedWorldTemplate
	m	(Lnet/minecraft/realms/RealmsButton;)V	b	show
		p	1	button	button
	m	(IIII)V	b	drawExpired
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(ILcom/mojang/realmsclient/dto/RealmsServer;)V	b	switchToEmptySlot
		p	1	selectedSlot	selectedSlot
		p	2	serverData	serverData
	m	()Lczs;	b	getNewScreen
	m	(I)I	b	leftButton
		p	1	i	i
	m	()V	c	backButtonClicked
	m	(IIII)V	c	drawOpen
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(I)I	c	frame
		p	1	i	i
	m	()V	d	disableButtons
	m	(IIII)V	d	drawClose
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	()V	e	switchToMinigame
	m	()Z	f	isMinigame
	m	()V	g	hideRegularButtons
	m	()V	h	showRegularButtons
	m	()V	i	hideMinigameButtons
	m	()V	j	showMinigameButtons
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czt	com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	f	Lnet/minecraft/realms/RealmsScreen;	a	parent
	f	Ljava/lang/String;	b	title1
	f	Ljava/lang/String;	c	yesButton
	f	Ljava/lang/String;	d	noButton
	f	I	e	id
	f	Ljava/lang/String;	f	title2
	f	I	g	delayTicker
	m	(Lnet/minecraft/realms/RealmsScreen;Ljava/lang/String;Ljava/lang/String;I)V	<init>	<init>
		p	1	parent	parent
		p	2	title1	title1
		p	3	title2	title2
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czu	com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	a	server
	f	Lcyu;	b	lastScreen
	f	Lnet/minecraft/realms/RealmsEditBox;	c	nameBox
	f	Lnet/minecraft/realms/RealmsEditBox;	d	descriptionBox
	f	Lnet/minecraft/realms/RealmsButton;	e	createButton
	f	Lnet/minecraft/realms/RealmsLabel;	f	createRealmLabel
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;Lcyu;)V	<init>	<init>
		p	1	server	server
		p	2	lastScreen	lastScreen
	m	()V	a	createWorld
	m	()Z	b	valid
	m	(CI)Z	charTyped	charTyped
		p	1	character	character
		p	2	mods	mods
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czv	com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/realms/RealmsScreen;	b	lastScreen
	f	Lcom/mojang/realmsclient/dto/WorldDownload;	c	worldDownload
	f	Ljava/lang/String;	d	downloadTitle
	f	Lcom/google/common/util/concurrent/RateLimiter;	e	narrationRateLimiter
	f	Lnet/minecraft/realms/RealmsButton;	f	cancelButton
	f	Ljava/lang/String;	g	worldName
	f	Lczv$a;	h	downloadStatus
	f	Ljava/lang/String;	j	status
	f	Ljava/lang/String;	k	progress
	f	Z	l	cancelled
	f	Z	m	showDots
	f	Z	n	finished
	f	Z	o	extracting
	f	Ljava/lang/Long;	p	previousWrittenBytes
	f	Ljava/lang/Long;	q	previousTimeSnapshot
	f	J	r	bytesPersSecond
	f	I	s	animTick
	f	[Ljava/lang/String;	t	DOTS
	f	I	u	dotIndex
	f	I	v	WARNING_ID
	f	I	w	confirmationId
	f	Z	x	checked
	f	Ljava/util/concurrent/locks/ReentrantLock;	y	downloadLock
	m	(Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	worldDownload	worldDownload
		p	3	worldName	worldName
	m	()V	a	checkDownloadSize
	m	(J)Ljava/lang/String;	a	humanReadableSpeed
		p	0	bytes	bytes
	m	(Ljava/lang/String;)J	a	getContentLength
		p	1	downloadLink	downloadLink
	m	(I)V	a	setConfirmationId
		p	1	confirmationId	confirmationId
	m	()V	b	backButtonClicked
	m	(J)Ljava/lang/String;	b	humanReadableSize
		p	0	bytes	bytes
	m	(J)V	c	drawDownloadSpeed0
		p	1	bytesPersSecond	bytesPersSecond
	m	()V	c	drawDots
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	()V	d	drawProgressBar
	m	()V	e	drawDownloadSpeed
	m	()V	f	downloadSave
	m	()V	g	downloadCancelled
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czv$a	com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	f	Ljava/lang/Long;	a	bytesWritten
	f	Ljava/lang/Long;	b	totalBytes
c	czw	com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	f	Lnet/minecraft/realms/RealmsScreen;	a	nextScreen
	f	Ljava/lang/String;	b	line1
	f	Ljava/lang/String;	c	line2
	m	(Lczg;Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	realmsServiceException	realmsServiceException
		p	2	nextScreen	nextScreen
	m	(Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	title	title
		p	2	message	message
		p	3	nextScreen	nextScreen
	m	(Ljava/lang/String;Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	message	message
		p	2	nextScreen	nextScreen
	m	(Lczg;)V	a	errorMessage
		p	1	realmsServiceException	realmsServiceException
	m	(Ljava/lang/String;)V	a	errorMessage
		p	1	message	message
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	errorMessage
		p	1	title	title
		p	2	message	message
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czx	com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/realms/RealmsEditBox;	b	profileName
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	c	serverData
	f	Lczs;	d	configureScreen
	f	Lnet/minecraft/realms/RealmsScreen;	e	lastScreen
	f	I	f	BUTTON_INVITE_ID
	f	I	g	BUTTON_CANCEL_ID
	f	Lnet/minecraft/realms/RealmsButton;	h	inviteButton
	f	I	i	PROFILENAME_EDIT_BOX
	f	Ljava/lang/String;	j	errorMsg
	f	Z	k	showError
	m	(Lczs;Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/RealmsServer;)V	<init>	<init>
		p	1	configureScreen	configureScreen
		p	2	lastScreen	lastScreen
		p	3	serverData	serverData
	m	(Ljava/lang/String;)V	a	showError
		p	1	errorMsg	errorMsg
	m	()V	a	onInvite
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czy	com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	f	Lnet/minecraft/realms/RealmsConfirmResultListener;	a	listener
	f	Ljava/lang/String;	b	yesButton
	f	Ljava/lang/String;	c	noButton
	f	I	d	id
	f	Lczy$a;	e	type
	f	Ljava/lang/String;	f	line2
	f	Ljava/lang/String;	g	line3
	f	Ljava/lang/String;	h	okButton
	f	Z	i	yesNoQuestion
	m	(Lnet/minecraft/realms/RealmsConfirmResultListener;Lczy$a;Ljava/lang/String;Ljava/lang/String;ZI)V	<init>	<init>
		p	1	listener	listener
		p	2	type	type
		p	3	line2	line2
		p	4	line3	line3
		p	5	yesNoQuestion	yesNoQuestion
		p	6	id	id
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	czy$a	com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	f	Lczy$a;	a	Warning
	f	Lczy$a;	b	Info
	f	I	c	colorCode
	f	Ljava/lang/String;	d	text
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3	text	text
		p	4	colorCode	colorCode
	m	(Ljava/lang/String;)Lczy$a;	valueOf	valueOf
		p	0	name	name
c	czz	com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	f	[Ljava/lang/String;	a	symbols
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	I	c	BUTTON_CANCEL_ID
	f	I	d	BUTTON_BACK_ID
	f	Lnet/minecraft/realms/RealmsScreen;	e	lastScreen
	f	Lczj;	f	taskThread
	f	Ljava/lang/String;	g	title
	f	Z	h	error
	f	Ljava/lang/String;	i	errorMessage
	f	Z	j	aborted
	f	I	k	animTicks
	f	Lczj;	l	task
	f	I	m	buttonLength
	m	(Lnet/minecraft/realms/RealmsScreen;Lczj;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	task	task
	m	()V	a	start
	m	(Ljava/lang/String;)V	b	setTitle
		p	1	title	title
	m	()Z	b	aborted
	m	()V	c	cancelOrBackButtonClicked
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	d	net/minecraft/client/util/math/Rotation3
	f	Lb;	a	matrix
	f	Z	b	initialized
	f	Le;	c	translation
	f	Lc;	d	rotation2
	f	Le;	e	scale
	f	Lc;	f	rotation1
	f	Ld;	g	IDENTITY
	m	(Lb;)V	<init>	<init>
		p	1	transformation	transformation
	m	(Le;Lc;Le;Lc;)V	<init>	<init>
		p	1	translation	translation
		p	2	rotation2	rotation2
		p	3	scale	scale
		p	4	rotation1	rotation1
	m	(Lb;)Lcom/mojang/datafixers/util/Pair;	a	getLinearTransformationAndTranslationFromAffine
		p	0	affineTransform	affineTransform
	m	(Ld;)Ld;	a	multiply
		p	1	other	other
	m	()Ld;	a	identity
	m	(Le;Lc;Le;Lc;)Lb;	a	setup
		p	0	translation	translation
		p	1	rotation2	rotation2
		p	2	scale	scale
		p	3	rotation1	rotation1
	m	()Ld;	b	invert
	m	()Lb;	c	getMatrix
	m	()Lc;	d	getRotation2
	m	()V	e	init
c	da	net/minecraft/command/arguments/GameProfileArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	UNKNOWN_PLAYER_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lda$a;	a	parse
	m	()Lda;	a	gameProfile
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getProfileArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	da$a	net/minecraft/command/arguments/GameProfileArgumentType$GameProfileArgument
c	da$b	net/minecraft/command/arguments/GameProfileArgumentType$SelectorBacked
	f	Lep;	a	selector
c	daa	com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	f	Lczl;	a	realmsDataFetcher
	f	I	b	numberOfPendingInvites
	f	Z	c	checkedMcoAvailability
	f	Z	d	trialAvailable
	f	Z	e	validClient
	f	Z	f	hasUnreadNews
	f	Ljava/util/List;	g	tasks
	m	(Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	lastScreen	lastScreen
	m	()V	a	checkIfMcoEnabled
	m	(II)V	a	drawIcons
		p	1	xm	xm
		p	2	ym	ym
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	xm	xm
		p	3	ym	ym
		p	5	button	button
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dab	com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	f	Lnet/minecraft/realms/RealmsScreen;	a	nextScreen
	m	(Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	nextScreen	nextScreen
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dac	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/realms/RealmsScreen;	b	lastScreen
	f	Ljava/lang/String;	c	toolTip
	f	Z	d	loaded
	f	Ldac$a;	e	pendingInvitationSelectionList
	f	Lnet/minecraft/realms/RealmsLabel;	f	titleLabel
	f	I	g	selectedInvite
	f	Lnet/minecraft/realms/RealmsButton;	h	acceptButton
	f	Lnet/minecraft/realms/RealmsButton;	i	rejectButton
	m	(Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	lastScreen	lastScreen
	m	(Ljava/lang/String;II)V	a	renderMousehoverTooltip
		p	1	msg	msg
		p	2	x	x
		p	3	y	y
	m	(Lcom/mojang/realmsclient/dto/PendingInvite;)Ljava/lang/String;	a	getAgePresentation
		p	0	invite	invite
	m	(I)V	a	updateList
		p	1	slot	slot
	m	(I)V	b	reject
		p	1	slot	slot
	m	()V	b	updateButtonStates
	m	(I)V	c	accept
		p	1	slot	slot
	m	(I)Z	d	shouldAcceptAndRejectButtonBeVisible
		p	1	invite	invite
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dac$a	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	m	(I)V	a	removeAtIndex
		p	1	index	index
	m	(I)V	b	selectInviteListItem
		p	1	item	item
	m	(I)V	selectItem	selectItem
		p	1	item	item
c	dac$b	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry
	f	Lcom/mojang/realmsclient/dto/PendingInvite;	a	mPendingInvite
	f	Ljava/util/List;	c	buttons
	m	(Ldac;Lcom/mojang/realmsclient/dto/PendingInvite;)V	<init>	<init>
		p	2	pendingInvite	pendingInvite
	m	(Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V	a	renderPendingInvitationItem
		p	1	invite	invite
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	rowTop	rowTop
		p	3	rowLeft	rowLeft
		p	4	rowWidth	rowWidth
		p	5	rowHeight	rowHeight
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovered	hovered
		p	9	a	a
c	dac$b$a	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$AcceptButton
c	dac$b$b	com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$RejectButton
c	dad	com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	toolTip
	f	Lczs;	c	lastScreen
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	d	serverData
	f	Ldad$a;	e	invitedObjectSelectionList
	f	I	f	column1_x
	f	I	g	column_width
	f	I	h	column2_x
	f	Lnet/minecraft/realms/RealmsButton;	i	removeButton
	f	Lnet/minecraft/realms/RealmsButton;	j	opdeopButton
	f	I	k	selectedInvitedIndex
	f	Ljava/lang/String;	l	selectedInvited
	f	I	m	player
	f	Z	n	stateChanged
	f	Lnet/minecraft/realms/RealmsLabel;	o	titleLabel
	m	(Lczs;Lcom/mojang/realmsclient/dto/RealmsServer;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	serverData	serverData
	m	(IIII)V	a	drawRemoveIcon
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(I)Z	a	shouldRemoveAndOpdeopButtonBeVisible
		p	1	player	player
	m	()V	a	updateButtonStates
	m	(Ljava/lang/String;II)V	a	renderMousehoverTooltip
		p	1	msg	msg
		p	2	x	x
		p	3	y	y
	m	(Lcom/mojang/realmsclient/dto/Ops;)V	a	updateOps
		p	1	ops	ops
	m	(IIII)V	b	drawOpped
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(I)V	b	op
		p	1	index	index
	m	()V	b	backButtonClicked
	m	(I)V	c	deop
		p	1	index	index
	m	(IIII)V	c	drawNormal
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	(I)V	d	uninvite
		p	1	index	index
	m	(I)V	e	deleteFromInvitedList
		p	1	selectedInvitedIndex	selectedInvitedIndex
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dad$a	com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	m	(I)V	a	selectInviteListItem
		p	1	item	item
	m	(Lcom/mojang/realmsclient/dto/PlayerInfo;)V	a	addEntry
		p	1	playerInfo	playerInfo
	m	(IIDDI)V	itemClicked	itemClicked
		p	1	clickSlotPos	clickSlotPos
		p	2	slot	slot
		p	3	xm	xm
		p	5	ym	ym
		p	7	width	width
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	xm	xm
		p	3	ym	ym
		p	5	buttonNum	buttonNum
	m	(I)V	selectItem	selectItem
		p	1	item	item
c	dad$b	com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionListEntry
	f	Lcom/mojang/realmsclient/dto/PlayerInfo;	a	mPlayerInfo
	m	(Ldad;Lcom/mojang/realmsclient/dto/PlayerInfo;)V	<init>	<init>
		p	2	playerInfo	playerInfo
	m	(Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V	a	renderInvitedItem
		p	1	invited	invited
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	rowTop	rowTop
		p	3	rowLeft	rowLeft
		p	4	rowWidth	rowWidth
		p	5	rowHeight	rowHeight
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovered	hovered
		p	9	a	a
c	dae	com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	f	[Ljava/lang/String;	a	levelTypes
	f	Ldaf;	b	lastScreen
	f	Lnet/minecraft/realms/RealmsLabel;	c	titleLabel
	f	Lnet/minecraft/realms/RealmsEditBox;	d	seedEdit
	f	Ljava/lang/Boolean;	e	generateStructures
	f	Ljava/lang/Integer;	f	levelTypeIndex
	f	I	g	BUTTON_CANCEL_ID
	f	I	h	BUTTON_RESET_ID
	f	I	i	SEED_EDIT_BOX
	f	Lnet/minecraft/realms/RealmsButton;	j	resetButton
	f	Lnet/minecraft/realms/RealmsButton;	k	levelTypeButton
	f	Lnet/minecraft/realms/RealmsButton;	l	generateStructuresButton
	f	Ljava/lang/String;	m	buttonTitle
	m	(Ldaf;Ljava/lang/String;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	buttonTitle	buttonTitle
	m	(Ldaf;)V	<init>	<init>
		p	1	lastScreen	lastScreen
	m	()V	a	onReset
	m	()Ljava/lang/String;	b	levelTypeTitle
	m	()Ljava/lang/String;	c	generateStructuresTitle
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	daf	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	f	I	a	slot
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lnet/minecraft/realms/RealmsScreen;	c	lastScreen
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	d	serverData
	f	Lnet/minecraft/realms/RealmsScreen;	e	returnScreen
	f	Lnet/minecraft/realms/RealmsLabel;	f	titleLabel
	f	Lnet/minecraft/realms/RealmsLabel;	g	subtitleLabel
	f	Ljava/lang/String;	h	title
	f	Ljava/lang/String;	i	subtitle
	f	Ljava/lang/String;	j	buttonTitle
	f	I	k	subtitleColor
	f	I	l	BUTTON_CANCEL_ID
	f	I	m	BUTTON_FRAME_START
	f	Ldaf$b;	r	typeToReset
	f	I	v	confirmationId
	m	(Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	serverData	serverData
		p	3	returnScreen	returnScreen
	m	(Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	serverData	serverData
		p	3	returnScreen	returnScreen
		p	4	title	title
		p	5	subtitle	subtitle
		p	6	subtitleColor	subtitleColor
		p	7	buttonTitle	buttonTitle
	m	(Ljava/lang/String;)V	a	setResetTitle
		p	1	title	title
	m	(IILjava/lang/String;JLjava/lang/String;Ldaf$b;ZZ)V	a	drawFrame
		p	1	x	x
		p	2	y	y
		p	3	text	text
		p	4	imageId	imageId
		p	6	image	image
		p	7	resetType	resetType
		p	8	hoveredOrFocused	hoveredOrFocused
		p	9	hovered	hovered
	m	(Ldaf$c;)V	a	resetWorld
		p	1	resetWorldInfo	resetWorldInfo
	m	(Lnet/minecraft/realms/RealmsScreen;)V	a	switchSlot
		p	1	screen	screen
	m	(I)V	a	setConfirmationId
		p	1	confirmationId	confirmationId
	m	(Lcom/mojang/realmsclient/dto/WorldTemplate;)V	a	callback
	m	(Ldaf$c;)V	b	triggerResetWorld
		p	1	resetWorldInfo	resetWorldInfo
	m	(I)V	b	setSlot
		p	1	slot	slot
	m	()V	b	switchSlot
	m	(Lcom/mojang/realmsclient/dto/WorldTemplate;)V	b	resetWorldWithTemplate
		p	1	template	template
	m	(I)I	c	frame
		p	1	i	i
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	daf$3	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$3
	m	(Ldaf;IILjava/lang/String;JLjava/lang/String;Ldaf$b;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	imageId	imageId
		p	7	image	image
		p	8	resetType	resetType
c	daf$4	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$4
	m	(Ldaf;IILjava/lang/String;JLjava/lang/String;Ldaf$b;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	imageId	imageId
		p	7	image	image
		p	8	resetType	resetType
c	daf$5	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$5
	m	(Ldaf;IILjava/lang/String;JLjava/lang/String;Ldaf$b;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	imageId	imageId
		p	7	image	image
		p	8	resetType	resetType
c	daf$6	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$6
	m	(Ldaf;IILjava/lang/String;JLjava/lang/String;Ldaf$b;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	imageId	imageId
		p	7	image	image
		p	8	resetType	resetType
c	daf$7	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$7
	m	(Ldaf;IILjava/lang/String;JLjava/lang/String;Ldaf$b;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	imageId	imageId
		p	7	image	image
		p	8	resetType	resetType
c	daf$8	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$8
	m	(Ldaf;IILjava/lang/String;JLjava/lang/String;Ldaf$b;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	imageId	imageId
		p	7	image	image
		p	8	resetType	resetType
c	daf$a	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	f	J	a	imageId
	f	Ljava/lang/String;	c	image
	f	Ldaf$b;	d	resetType
	m	(Ldaf;IILjava/lang/String;JLjava/lang/String;Ldaf$b;)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	imageId	imageId
		p	7	image	image
		p	8	resetType	resetType
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	a	a
c	daf$b	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType
	f	Ldaf$b;	a	NONE
	f	Ldaf$b;	b	GENERATE
	f	Ldaf$b;	c	UPLOAD
	f	Ldaf$b;	d	ADVENTURE
	f	Ldaf$b;	e	SURVIVAL_SPAWN
	f	Ldaf$b;	f	EXPERIENCE
	f	Ldaf$b;	g	INSPIRATION
	m	(Ljava/lang/String;)Ldaf$b;	valueOf	valueOf
		p	0	name	name
c	daf$c	com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo
	f	Ljava/lang/String;	a	seed
	f	I	b	levelType
	f	Z	c	generateStructures
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	1	seed	seed
		p	2	levelType	levelType
		p	3	generateStructures	generateStructures
c	dag	com/mojang/realmsclient/gui/screens/RealmsResourcePackScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/realms/RealmsScreen;	b	lastScreen
	f	Lcom/mojang/realmsclient/dto/RealmsServerAddress;	c	serverAddress
	f	Ljava/util/concurrent/locks/ReentrantLock;	d	connectLock
	m	(Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/RealmsServerAddress;Ljava/util/concurrent/locks/ReentrantLock;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	serverAddress	serverAddress
		p	3	connectLock	connectLock
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
c	dah	com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback
	m	(Ljava/lang/Object;)V	a	callback
c	dai	com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldaf;	b	lastScreen
	f	J	c	worldId
	f	I	d	slotId
	f	Lnet/minecraft/realms/RealmsButton;	e	uploadButton
	f	Ljava/text/DateFormat;	f	DATE_FORMAT
	f	Ljava/util/List;	g	levelList
	f	I	h	selectedWorld
	f	Ldai$b;	i	worldSelectionList
	f	Ljava/lang/String;	j	worldLang
	f	Ljava/lang/String;	k	conversionLang
	f	[Ljava/lang/String;	l	gameModesLang
	f	Lnet/minecraft/realms/RealmsLabel;	m	titleLabel
	f	Lnet/minecraft/realms/RealmsLabel;	n	subtitleLabel
	m	(JILdaf;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slotId	slotId
		p	4	lastScreen	lastScreen
	m	()V	a	loadLevelList
	m	()V	b	upload
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dai$a	com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldListEntry
	f	Lnet/minecraft/realms/RealmsLevelSummary;	a	levelSummary
	m	(Ldai;Lnet/minecraft/realms/RealmsLevelSummary;)V	<init>	<init>
		p	2	levelSummary	levelSummary
	m	(Lnet/minecraft/realms/RealmsLevelSummary;IIIILnet/minecraft/realms/Tezzelator;II)V	a	renderItem
		p	1	levelSummary	levelSummary
		p	2	i	i
		p	3	x	x
		p	4	y	y
		p	5	h	h
		p	6	t	t
		p	7	mouseX	mouseX
		p	8	mouseY	mouseY
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	rowTop	rowTop
		p	3	rowLeft	rowLeft
		p	4	rowWidth	rowWidth
		p	5	rowHeight	rowHeight
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovered	hovered
		p	9	a	a
c	dai$b	com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	m	(Lnet/minecraft/realms/RealmsLevelSummary;)V	a	addEntry
		p	1	levelSummary	levelSummary
	m	(I)V	selectItem	selectItem
		p	1	item	item
c	daj	com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldah;	b	lastScreen
	f	I	d	selectedTemplate
	f	Ljava/lang/String;	e	title
	f	Lnet/minecraft/realms/RealmsButton;	f	selectButton
	f	Lnet/minecraft/realms/RealmsButton;	g	trailerButton
	f	Lnet/minecraft/realms/RealmsButton;	h	publisherButton
	f	Ljava/lang/String;	i	toolTip
	f	Ljava/lang/String;	j	currentLink
	f	Lcom/mojang/realmsclient/dto/RealmsServer$c;	k	worldType
	f	I	l	clicks
	f	Ljava/lang/String;	m	warning
	f	Ljava/lang/String;	n	warningURL
	f	Z	o	displayWarning
	f	Z	p	hoverWarning
	f	Ljava/util/List;	q	noTemplatesMessage
	m	(Ljava/lang/String;)V	a	setTitle
		p	1	title	title
	m	(Ljava/lang/String;II)V	a	renderMousehoverTooltip
		p	1	msg	msg
		p	2	x	x
		p	3	y	y
	m	(Ljava/lang/String;)V	b	setWarning
		p	1	string	string
	m	()V	b	updateButtonStates
	m	()Z	c	shouldSelectButtonBeActive
	m	()Z	d	shouldPublisherBeVisible
	m	()Z	f	shouldTrailerBeVisible
	m	()V	g	backButtonClicked
	m	()V	h	selectTemplate
	m	()V	i	onTrailer
	m	()V	j	onPublish
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	daj$a	com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	m	(Lcom/mojang/realmsclient/dto/WorldTemplate;)V	a	addEntry
		p	1	template	template
	m	(IIDDI)V	itemClicked	itemClicked
		p	1	clickSlotPos	clickSlotPos
		p	2	slot	slot
		p	3	xm	xm
		p	5	ym	ym
		p	7	width	width
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	xm	xm
		p	3	ym	ym
		p	5	buttonNum	buttonNum
	m	(I)V	selectItem	selectItem
		p	1	item	item
c	daj$b	com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry
	f	Lcom/mojang/realmsclient/dto/WorldTemplate;	a	mTemplate
	m	(Ldaj;Lcom/mojang/realmsclient/dto/WorldTemplate;)V	<init>	<init>
		p	2	template	template
	m	(Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V	a	renderWorldTemplateItem
		p	1	worldTemplate	worldTemplate
		p	2	x	x
		p	3	y	y
		p	4	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	drawIcons
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
		p	5	link	link
		p	6	trailerLink	trailerLink
		p	7	recommendedPlayers	recommendedPlayers
	m	(IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V	a	drawImage
		p	1	x	x
		p	2	y	y
		p	3	xm	xm
		p	4	ym	ym
		p	5	worldTemplate	worldTemplate
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	rowTop	rowTop
		p	3	rowLeft	rowLeft
		p	4	rowWidth	rowWidth
		p	5	rowHeight	rowHeight
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovered	hovered
		p	9	a	a
c	dak	com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	f	Lczs;	a	configureWorldScreen
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	b	serverData
	f	I	c	COMPONENT_WIDTH
	f	Lnet/minecraft/realms/RealmsButton;	d	doneButton
	f	Lnet/minecraft/realms/RealmsEditBox;	e	descEdit
	f	Lnet/minecraft/realms/RealmsEditBox;	f	nameEdit
	f	Lnet/minecraft/realms/RealmsLabel;	g	titleLabel
	m	(Lczs;Lcom/mojang/realmsclient/dto/RealmsServer;)V	<init>	<init>
		p	1	configureWorldScreen	configureWorldScreen
		p	2	serverData	serverData
	m	()V	a	save
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dal	com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	f	Lnet/minecraft/realms/RealmsButton;	A	forceGameModeButton
	f	Lnet/minecraft/realms/RealmsLabel;	B	titleLabel
	f	Lczs;	a	parent
	f	[Ljava/lang/String;	b	difficulties
	f	[Ljava/lang/String;	c	gameModes
	f	[[Ljava/lang/String;	d	gameModeHints
	f	Lnet/minecraft/realms/RealmsEditBox;	e	nameEdit
	f	I	f	column1_x
	f	I	g	column_width
	f	I	h	column2_x
	f	Lcom/mojang/realmsclient/dto/RealmsWorldOptions;	i	options
	f	Lcom/mojang/realmsclient/dto/RealmsServer$c;	j	worldType
	f	I	k	activeSlot
	f	I	l	difficultyIndex
	f	I	m	gameModeIndex
	f	Ljava/lang/Boolean;	n	pvp
	f	Ljava/lang/Boolean;	o	spawnNPCs
	f	Ljava/lang/Boolean;	p	spawnAnimals
	f	Ljava/lang/Boolean;	q	spawnMonsters
	f	Ljava/lang/Integer;	r	spawnProtection
	f	Ljava/lang/Boolean;	s	commandBlocks
	f	Ljava/lang/Boolean;	t	forceGameMode
	f	Lnet/minecraft/realms/RealmsButton;	u	pvpButton
	f	Lnet/minecraft/realms/RealmsButton;	v	spawnAnimalsButton
	f	Lnet/minecraft/realms/RealmsButton;	w	spawnMonstersButton
	f	Lnet/minecraft/realms/RealmsButton;	x	spawnNPCsButton
	f	Lnet/minecraft/realms/RealmsSliderButton;	y	spawnProtectionButton
	f	Lnet/minecraft/realms/RealmsButton;	z	commandBlocksButton
	m	(Lczs;Lcom/mojang/realmsclient/dto/RealmsWorldOptions;Lcom/mojang/realmsclient/dto/RealmsServer$c;I)V	<init>	<init>
		p	2	options	options
		p	3	worldType	worldType
		p	4	activeSlot	activeSlot
	m	()V	a	createDifficultyAndGameMode
	m	()Ljava/lang/String;	b	difficultyTitle
	m	()Ljava/lang/String;	c	gameModeTitle
	m	()Ljava/lang/String;	d	pvpTitle
	m	()Ljava/lang/String;	e	spawnAnimalsTitle
	m	()Ljava/lang/String;	f	spawnMonstersTitle
	m	()Ljava/lang/String;	g	spawnNPCsTitle
	m	()Ljava/lang/String;	h	commandBlocksTitle
	m	()Ljava/lang/String;	i	forceGameModeTitle
	m	()Ljava/lang/String;	j	getSlotName
	m	()V	k	saveSettings
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dal$a	com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	m	(Ldal;IIIIIFF)V	<init>	<init>
		p	2	id	id
		p	3	x	x
		p	4	y	y
		p	5	width	width
		p	6	currentValue	currentValue
		p	7	minValue	minValue
		p	8	maxValue	maxValue
c	dam	com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/realms/RealmsScreen;	b	lastScreen
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	c	serverData
	f	Lnet/minecraft/realms/RealmsScreen;	d	mainScreen
	f	I	e	BUTTON_BACK_ID
	f	I	f	BUTTON_DELETE_ID
	f	I	g	BUTTON_SUBSCRIPTION_ID
	f	Ljava/lang/String;	h	subscriptionTitle
	f	Ljava/lang/String;	i	subscriptionStartLabelText
	f	Ljava/lang/String;	j	timeLeftLabelText
	f	Ljava/lang/String;	k	daysLeftLabelText
	f	I	l	daysLeft
	f	Ljava/lang/String;	m	startDate
	f	Lcom/mojang/realmsclient/dto/Subscription$a;	n	type
	f	Ljava/lang/String;	o	PURCHASE_LINK
	m	(Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	serverData	serverData
		p	3	mainScreen	mainScreen
	m	(I)Ljava/lang/String;	a	daysLeftPresentation
		p	1	daysLeft	daysLeft
	m	(J)V	a	getSubscription
		p	1	worldId	worldId
	m	(J)Ljava/lang/String;	b	localPresentation
		p	1	cetTime	cetTime
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	id	id
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dan	com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lnet/minecraft/realms/RealmsScreen;	b	lastScreen
	f	Lcyu;	c	mainScreen
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	d	realmsServer
	f	Lnet/minecraft/realms/RealmsButton;	e	agreeButton
	f	Z	f	onLink
	f	Ljava/lang/String;	g	realmsToSUrl
	m	(Lnet/minecraft/realms/RealmsScreen;Lcyu;Lcom/mojang/realmsclient/dto/RealmsServer;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	mainScreen	mainScreen
		p	3	realmsServer	realmsServer
	m	()V	a	agreedToTos
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	x	x
		p	3	y	y
		p	5	buttonNum	buttonNum
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dao	com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldaf;	b	lastScreen
	f	Lnet/minecraft/realms/RealmsLevelSummary;	c	selectedLevel
	f	J	d	worldId
	f	I	e	slotId
	f	Lczc;	f	uploadStatus
	f	Lcom/google/common/util/concurrent/RateLimiter;	g	narrationRateLimiter
	f	Ljava/lang/String;	i	status
	f	Ljava/lang/String;	j	progress
	f	Z	k	cancelled
	f	Z	l	uploadFinished
	f	Z	m	showDots
	f	Z	n	uploadStarted
	f	Lnet/minecraft/realms/RealmsButton;	o	backButton
	f	Lnet/minecraft/realms/RealmsButton;	p	cancelButton
	f	I	q	animTick
	f	[Ljava/lang/String;	r	DOTS
	f	I	s	dotIndex
	f	Ljava/lang/Long;	t	previousWrittenBytes
	f	Ljava/lang/Long;	u	previousTimeSnapshot
	f	J	v	bytesPersSecond
	f	Ljava/util/concurrent/locks/ReentrantLock;	w	uploadLock
	m	(JILdaf;Lnet/minecraft/realms/RealmsLevelSummary;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slotId	slotId
		p	4	lastScreen	lastScreen
		p	5	selectedLevel	selectedLevel
	m	(J)Ljava/lang/String;	a	humanReadableByteCount
		p	0	bytes	bytes
	m	(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V	a	addFileToTarGz
		p	1	tOut	tOut
		p	2	path	path
		p	3	base	base
		p	4	root	root
	m	(JLdao$a;)D	a	convertToUnit
		p	0	bytes	bytes
		p	2	unit	unit
	m	(Ljava/io/File;)Z	a	verify
		p	1	archive	archive
	m	()V	a	onBack
	m	(Ljava/io/File;)Ljava/io/File;	b	tarGzipArchive
		p	1	pathToDirectoryFile	pathToDirectoryFile
	m	(JLdao$a;)Ljava/lang/String;	b	humanReadableSize
		p	0	bytes	bytes
		p	2	unit	unit
	m	()V	b	onCancel
	m	(J)Ldao$a;	b	getLargestUnit
		p	0	bytes	bytes
	m	()V	c	drawDots
	m	(J)V	c	drawUploadSpeed0
		p	1	bytesPersSecond	bytesPersSecond
	m	(ZI)V	confirmResult	confirmResult
		p	1	result	result
		p	2	buttonId	buttonId
	m	()V	d	drawProgressBar
	m	()V	e	drawUploadSpeed
	m	()V	f	upload
	m	()V	g	uploadCancelled
	m	(III)Z	keyPressed	keyPressed
		p	1	eventKey	eventKey
		p	2	scancode	scancode
		p	3	mods	mods
	m	(IIF)V	render	render
		p	1	xm	xm
		p	2	ym	ym
		p	3	a	a
c	dao$a	com/mojang/realmsclient/gui/screens/RealmsUploadScreen$Unit
	f	Ldao$a;	a	B
	f	Ldao$a;	b	KB
	f	Ldao$a;	c	MB
	f	Ldao$a;	d	GB
	m	(Ljava/lang/String;)Ldao$a;	valueOf	valueOf
		p	0	name	name
c	dap	com/mojang/realmsclient/gui/screens/UploadResult
	f	I	a	statusCode
	f	Ljava/lang/String;	b	errorMessage
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	statusCode	statusCode
		p	2	errorMessage	errorMessage
c	dap$a	com/mojang/realmsclient/gui/screens/UploadResult$Builder
	f	I	a	statusCode
	f	Ljava/lang/String;	b	errorMessage
	m	(I)Ldap$a;	a	withStatusCode
		p	1	statusCode	statusCode
	m	()Ldap;	a	build
	m	(Ljava/lang/String;)Ldap$a;	a	withErrorMessage
		p	1	errorMessage	errorMessage
c	daq	com/mojang/realmsclient/util/JsonUtils
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;J)J	a	getLongOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	a	getStringOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date;	a	getDateOr
		p	0	key	key
		p	1	node	node
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;I)I	a	getIntOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
	m	(Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z	a	getBooleanOr
		p	0	key	key
		p	1	node	node
		p	2	defaultValue	defaultValue
c	dar	com/mojang/realmsclient/util/RealmsPersistence
	m	()Ldar$a;	a	readFile
	m	(Ldar$a;)V	a	writeFile
		p	0	data	data
c	dar$a	com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	f	Ljava/lang/String;	a	newsLink
	f	Z	b	hasUnreadNews
c	das	com/mojang/realmsclient/util/RealmsTasks
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(I)V	b	pause
		p	0	seconds	seconds
c	das$a	com/mojang/realmsclient/util/RealmsTasks$CloseServerTask
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	b	serverData
	f	Lczs;	c	configureScreen
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;Lczs;)V	<init>	<init>
		p	1	realmsServer	realmsServer
		p	2	configureWorldScreen	configureWorldScreen
c	das$b	com/mojang/realmsclient/util/RealmsTasks$DownloadTask
	f	J	b	worldId
	f	I	c	slot
	f	Lnet/minecraft/realms/RealmsScreen;	d	lastScreen
	f	Ljava/lang/String;	e	downloadName
	m	(JILjava/lang/String;Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slot	slot
		p	4	downloadName	downloadName
		p	5	lastScreen	lastScreen
c	das$c	com/mojang/realmsclient/util/RealmsTasks$OpenServerTask
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	b	serverData
	f	Lnet/minecraft/realms/RealmsScreen;	c	returnScreen
	f	Z	d	join
	f	Lnet/minecraft/realms/RealmsScreen;	e	mainScreen
	m	(Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;Lnet/minecraft/realms/RealmsScreen;Z)V	<init>	<init>
		p	1	realmsServer	realmsServer
		p	2	returnScreen	returnScreen
		p	3	mainScreen	mainScreen
		p	4	join	join
c	das$d	com/mojang/realmsclient/util/RealmsTasks$RealmsConnectTask
	f	Lnet/minecraft/realms/RealmsConnect;	b	realmsConnect
	f	Lcom/mojang/realmsclient/dto/RealmsServerAddress;	c	a
	m	(Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/RealmsServerAddress;)V	<init>	<init>
		p	1	lastScreen	lastScreen
		p	2	address	address
c	das$e	com/mojang/realmsclient/util/RealmsTasks$RealmsGetServerDetailsTask
	f	Lcom/mojang/realmsclient/dto/RealmsServer;	b	server
	f	Lnet/minecraft/realms/RealmsScreen;	c	lastScreen
	f	Lcyu;	d	mainScreen
	f	Ljava/util/concurrent/locks/ReentrantLock;	e	connectLock
	m	(Lcyu;Lnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/util/concurrent/locks/ReentrantLock;)V	<init>	<init>
		p	1	mainScreen	mainScreen
		p	2	lastScreen	lastScreen
		p	3	server	server
		p	4	connectLock	connectLock
	m	(I)V	a	sleep
		p	1	sleepTimeSeconds	sleepTimeSeconds
c	das$f	com/mojang/realmsclient/util/RealmsTasks$ResettingWorldTask
	f	Ljava/lang/String;	b	seed
	f	Lcom/mojang/realmsclient/dto/WorldTemplate;	c	worldTemplate
	f	I	d	levelType
	f	Z	e	generateStructures
	f	J	f	serverId
	f	Lnet/minecraft/realms/RealmsScreen;	g	lastScreen
	f	I	h	confirmationId
	f	Ljava/lang/String;	i	title
	m	(JLnet/minecraft/realms/RealmsScreen;Lcom/mojang/realmsclient/dto/WorldTemplate;)V	<init>	<init>
		p	1	serverId	serverId
		p	3	lastScreen	lastScreen
		p	4	worldTemplate	worldTemplate
	m	(JLnet/minecraft/realms/RealmsScreen;Ljava/lang/String;IZ)V	<init>	<init>
		p	1	serverId	serverId
		p	3	lastScreen	lastScreen
		p	4	seed	seed
		p	5	levelType	levelType
		p	6	generateStructures	generateStructures
	m	(I)V	a	setConfirmationId
		p	1	confirmationId	confirmationId
	m	(Ljava/lang/String;)V	c	setResetTitle
		p	1	title	title
c	das$g	com/mojang/realmsclient/util/RealmsTasks$RestoreTask
	f	Lcom/mojang/realmsclient/dto/Backup;	b	backup
	f	J	c	worldId
	f	Lczs;	d	lastScreen
	m	(Lcom/mojang/realmsclient/dto/Backup;JLczs;)V	<init>	<init>
		p	1	backup	backup
		p	2	worldId	worldId
		p	4	lastScreen	lastScreen
c	das$h	com/mojang/realmsclient/util/RealmsTasks$SwitchMinigameTask
	f	J	b	worldId
	f	Lcom/mojang/realmsclient/dto/WorldTemplate;	c	worldTemplate
	f	Lczs;	d	lastScreen
	m	(JLcom/mojang/realmsclient/dto/WorldTemplate;Lczs;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	worldTemplate	worldTemplate
		p	4	lastScreen	lastScreen
c	das$i	com/mojang/realmsclient/util/RealmsTasks$SwitchSlotTask
	f	J	b	worldId
	f	I	c	slot
	f	Lnet/minecraft/realms/RealmsConfirmResultListener;	d	listener
	f	I	e	confirmId
	m	(JILnet/minecraft/realms/RealmsConfirmResultListener;I)V	<init>	<init>
		p	1	worldId	worldId
		p	3	slot	slot
		p	4	listener	listener
		p	5	confirmId	confirmId
c	das$j	com/mojang/realmsclient/util/RealmsTasks$WorldCreationTask
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/String;	c	motd
	f	J	d	worldId
	f	Lnet/minecraft/realms/RealmsScreen;	e	lastScreen
	m	(JLjava/lang/String;Ljava/lang/String;Lnet/minecraft/realms/RealmsScreen;)V	<init>	<init>
		p	1	worldId	worldId
		p	3	name	name
		p	4	motd	motd
		p	5	lastScreen	lastScreen
c	dat	com/mojang/realmsclient/util/RealmsTextureManager
	f	Ljava/util/Map;	a	textures
	f	Ljava/util/Map;	b	skinFetchStatus
	f	Ljava/util/Map;	c	fetchedSkins
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	withBoundFace
		p	0	uuid	uuid
		p	1	r	r
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	bindWorldTemplate
		p	0	id	id
		p	1	image	image
	m	(Ljava/util/UUID;)V	a	bindDefaultFace
		p	0	uuid	uuid
	m	(Ljava/lang/String;)V	a	bindFace
		p	0	uuid	uuid
	m	(Ljava/lang/String;Ljava/lang/String;)I	b	getTextureId
		p	0	id	id
		p	1	image	image
c	dat$a	com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	f	Ljava/lang/String;	a	image
	f	I	b	textureId
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	image	image
		p	2	textureId	textureId
c	dau	com/mojang/realmsclient/util/RealmsUtil
	f	Lcom/google/common/cache/LoadingCache;	a	gameProfileCache
	f	Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;	b	authenticationService
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	m	(Ljava/lang/Long;)Ljava/lang/String;	a	convertToAgePresentation
		p	0	timeDiff	timeDiff
	m	(Ljava/lang/String;)Ljava/lang/String;	a	uuidToName
		p	0	uuid	uuid
	m	(Ljava/lang/String;)Ljava/util/Map;	b	getTextures
		p	0	uuid	uuid
	m	(Ljava/lang/String;)V	c	browseTo
		p	0	uri	uri
c	dau$1	com/mojang/realmsclient/util/RealmsUtil$1
	m	(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	a	load
c	dav	com/mojang/realmsclient/util/SkinProcessor
	f	[I	a	pixels
	f	I	b	width
	f	I	c	height
	m	(Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage;	a	process
		p	1	image	image
	m	(IIII)V	a	doNotchTransparencyHack
		p	1	x0	x0
		p	2	y0	y0
		p	3	x1	x1
		p	4	y1	y1
	m	(IIII)V	b	setNoAlpha
		p	1	x0	x0
		p	2	y0	y0
		p	3	x1	x1
		p	4	y1	y1
c	daw	com/mojang/realmsclient/util/TextRenderingUtils
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	insertLinks
		p	0	lines	lines
		p	1	links	links
	m	(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;	a	decompose
		p	0	text	text
		p	1	links	links
	m	(Ljava/lang/String;[Ldaw$b;)Ljava/util/List;	a	decompose
		p	0	text	text
		p	1	links	links
	m	(Ljava/lang/String;)Ljava/util/List;	a	lineBreak
		p	0	text	text
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;	a	split
		p	0	line	line
		p	1	delimiter	delimiter
c	daw$a	com/mojang/realmsclient/util/TextRenderingUtils$Line
	f	Ljava/util/List;	a	segments
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	segments	segments
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	daw$b	com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	f	Ljava/lang/String;	a	fullText
	f	Ljava/lang/String;	b	linkTitle
	f	Ljava/lang/String;	c	linkUrl
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	fullText	fullText
		p	2	linkTitle	linkTitle
		p	3	linkUrl	linkUrl
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	fullText	fullText
	m	()Ljava/lang/String;	a	renderedText
	m	(Ljava/lang/String;Ljava/lang/String;)Ldaw$b;	a	link
		p	0	linkTitle	linkTitle
		p	1	linkUrl	linkUrl
	m	(Ljava/lang/String;)Ldaw$b;	a	text
		p	0	fullText	fullText
	m	()Z	b	isLink
	m	()Ljava/lang/String;	c	getLinkUrl
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dax	com/mojang/realmsclient/util/UploadTokenCache
	f	Ljava/util/Map;	a	tokenCache
	m	(JLjava/lang/String;)V	a	put
		p	0	wid	wid
		p	2	token	token
	m	(J)Ljava/lang/String;	a	get
		p	0	worldId	worldId
	m	(J)V	b	invalidate
		p	0	world	world
c	day	net/minecraft/client/options/AoOption
	f	[Lday;	d	OPTIONS
	f	I	e	value
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	value	value
		p	4	translationKey	translationKey
	m	()I	a	getValue
	m	(I)Lday;	a	getOption
	m	()Ljava/lang/String;	b	getTranslationKey
c	daz	net/minecraft/client/options/AttackIndicator
	f	[Ldaz;	d	VALUES
	f	I	e	id
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	translationKey	translationKey
	m	()I	a	getId
	m	(I)Ldaz;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	b	getTranslationKey
c	db	net/minecraft/command/arguments/ItemEnchantmentArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_ENCHANTMENT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	()Ldb;	a	itemEnchantment
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbhx;	a	getEnchantment
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lbhx;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dba	net/minecraft/client/options/BooleanOption
	f	Ljava/util/function/Predicate;	S	getter
	f	Ljava/util/function/BiConsumer;	T	setter
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1	key	key
		p	2	getter	getter
		p	3	setter	setter
	m	(Ldbr;Ljava/lang/String;)V	a	set
		p	1	options	options
		p	2	value	value
	m	(Ldbr;Z)V	a	set
		p	1	options	options
		p	2	value	value
	m	(Ldbr;)V	a	set
		p	1	options	options
	m	(Ldbr;)Z	b	get
		p	1	options	options
	m	(Ldbr;)Ljava/lang/String;	c	getDisplayString
		p	1	options	options
c	dbb	net/minecraft/client/render/Camera
	f	Z	a	ready
	f	Lbjg;	b	area
	f	Lakq;	c	focusedEntity
	f	Lcvl;	d	pos
	f	Lfk$a;	e	blockPos
	f	Le;	f	horizontalPlane
	f	Le;	g	verticalPlane
	f	Le;	h	diagonalPlane
	f	F	i	pitch
	f	F	j	yaw
	f	Lc;	k	rotation
	f	Z	l	thirdPerson
	f	Z	m	inverseView
	f	F	n	cameraY
	f	F	o	lastCameraY
	m	(Lbjg;Lakq;ZZF)V	a	update
		p	1	area	area
		p	2	focusedEntity	focusedEntity
		p	3	thirdPerson	thirdPerson
		p	4	inverseView	inverseView
		p	5	tickDelta	tickDelta
	m	(Lcvl;)V	a	setPos
		p	1	pos	pos
	m	()V	a	updateEyeHeight
	m	(FF)V	a	setRotation
		p	1	yaw	yaw
		p	2	pitch	pitch
	m	(D)D	a	clipToSpace
		p	1	desiredCameraDistance	desiredCameraDistance
	m	(DDD)V	a	moveBy
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Lcvl;	b	getPos
	m	(DDD)V	b	setPos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()Lfk;	c	getBlockPos
	m	()F	d	getPitch
	m	()F	e	getYaw
	m	()Lc;	f	getRotation
	m	()Lakq;	g	getFocusedEntity
	m	()Z	h	isReady
	m	()Z	i	isThirdPerson
	m	()Lcoj;	k	getSubmergedFluidState
	m	()Le;	l	getHorizontalPlane
	m	()Le;	m	getVerticalPlane
	m	()V	o	reset
c	dbc	net/minecraft/client/recipe/book/ClientRecipeBook
	f	Lbgx;	k	manager
	f	Ljava/util/Map;	l	resultsByGroup
	f	Ljava/util/List;	m	orderedResults
	m	(Lbgx;)V	<init>	<init>
		p	1	manager	manager
	m	(Ldbu;Ldit;)V	a	addGroupResults
		p	1	group	group
		p	2	results	results
	m	(Ldbu;)Ljava/util/List;	a	getResultsForGroup
		p	1	category	category
	m	(Lbbt;)Ljava/util/List;	b	getGroupsForContainer
		p	0	container	container
	m	(Ldbu;)Ldit;	b	addGroup
		p	1	group	group
	m	(Lbgw;)Ldbu;	g	getGroupForRecipe
	m	()V	i	reload
	m	()Ljava/util/List;	j	getOrderedResults
c	dbd	net/minecraft/client/options/CloudRenderMode
	f	[Ldbd;	d	RENDER_MODES
	f	I	e	value
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	value	value
		p	4	translationKey	translationKey
	m	()I	a	getValue
	m	(I)Ldbd;	a	getOption
		p	0	id	id
	m	()Ljava/lang/String;	b	getTranslationKey
c	dbe	net/minecraft/client/options/CyclingOption
	f	Ljava/util/function/BiConsumer;	S	setter
	f	Ljava/util/function/BiFunction;	T	messageProvider
	m	(Ljava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	1	key	key
		p	2	setter	setter
		p	3	messageProvider	messageProvider
	m	(Ldbr;I)V	a	cycle
		p	1	options	options
		p	2	amount	amount
	m	(Ldbr;)Ljava/lang/String;	c	getMessage
		p	1	options	options
c	dbf	net/minecraft/client/network/DataQueryHandler
	f	Ldnp;	a	networkHandler
	f	I	b	expectedTransactionId
	f	Ljava/util/function/Consumer;	c	callback
	m	(ILjt;)Z	a	handleQueryResponse
		p	1	transactionId	transactionId
		p	2	tag	tag
	m	(ILjava/util/function/Consumer;)V	a	queryEntityNbt
		p	1	entityNetworkId	entityNetworkId
		p	2	callback	callback
	m	(Ljava/util/function/Consumer;)I	a	nextQuery
		p	1	callback	callback
	m	(Lfk;Ljava/util/function/Consumer;)V	a	queryBlockNbt
		p	1	pos	pos
		p	2	callback	callback
c	dbg	net/minecraft/client/options/FullScreenOption
c	dbh	net/minecraft/client/MinecraftClientGame
	f	Ldbn;	a	client
	f	Lcom/mojang/bridge/launcher/Launcher;	b	launcher
	f	Lcom/mojang/bridge/launcher/SessionEventListener;	c	listener
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	()V	a	onStartGameSession
	m	()V	b	onLeaveGameSession
	m	(Lcom/mojang/bridge/launcher/SessionEventListener;)V	setSessionEventListener	setSessionEventListener
		p	1	listener	listener
c	dbh$a	net/minecraft/client/MinecraftClientGame$PerformanceMetricsImpl
	f	I	a	minTime
	f	I	b	maxTime
	f	I	c	averageTime
	f	I	d	sampleCount
	m	(IIII)V	<init>	<init>
		p	1	minTime	minTime
		p	2	maxTime	maxTime
		p	3	averageTime	averageTime
		p	4	sampleCount	sampleCount
c	dbi	net/minecraft/client/gui/hud/ChatHudLine
	f	I	a	creationTick
	f	Llf;	b	text
	f	I	c	id
	m	(ILlf;I)V	<init>	<init>
		p	1	creationTick	creationTick
		p	2	text	text
		p	3	id	id
	m	()Llf;	a	getText
	m	()I	b	getCreationTick
	m	()I	c	getId
c	dbj	net/minecraft/client/options/HotbarStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	file
	f	Lcom/mojang/datafixers/DataFixer;	c	dataFixer
	f	[Ldqd;	d	entries
	f	Z	e	loaded
	m	()V	a	save
	m	(I)Ldqd;	a	getSavedHotbar
		p	1	i	i
	m	()V	b	load
c	dbk	net/minecraft/client/options/KeyBinding
	f	Ljava/util/Map;	a	keysById
	f	Ljava/util/Map;	b	keysByCode
	f	Ljava/util/Set;	c	keyCategories
	f	Ljava/util/Map;	d	categoryOrderMap
	f	Ljava/lang/String;	e	id
	f	Lcxm$a;	f	defaultKeyCode
	f	Ljava/lang/String;	g	category
	f	Lcxm$a;	h	keyCode
	f	Z	i	pressed
	f	I	j	timesPressed
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	keyCode	keyCode
		p	3	category	category
	m	(Ljava/lang/String;Lcxm$b;ILjava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	type	type
		p	3	code	code
		p	4	category	category
	m	(Ldbk;)I	a	compareTo
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	a	getLocalizedName
		p	0	id	id
	m	()V	a	updatePressedStates
	m	(II)Z	a	matchesKey
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
	m	(Lcxm$a;)V	a	onKeyPressed
		p	0	keyCode	keyCode
	m	(I)Z	a	matchesMouse
		p	1	code	code
	m	(Lcxm$a;Z)V	a	setKeyPressed
		p	0	key	key
		p	1	pressed	pressed
	m	(Z)V	a	setPressed
		p	1	pressed	pressed
	m	()V	b	unpressAll
	m	(Lcxm$a;)V	b	setKeyCode
	m	(Ldbk;)Z	b	equals
	m	()V	c	updateKeysByCode
	m	()Z	d	isPressed
	m	()Ljava/lang/String;	e	getCategory
	m	()Z	f	wasPressed
	m	()Ljava/lang/String;	g	getId
	m	()Lcxm$a;	h	getDefaultKeyCode
	m	()Z	i	isNotBound
	m	()Ljava/lang/String;	j	getLocalizedName
	m	()Z	k	isDefault
	m	()Ljava/lang/String;	l	getName
	m	()V	m	reset
c	dbl	net/minecraft/client/Keyboard
	f	Ldbn;	a	client
	f	Z	b	repeatEvents
	f	Lcxf;	c	clipboard
	f	J	d	debugCrashStartTime
	f	J	e	debugCrashLastLogTime
	f	J	f	debugCrashElapsedTime
	f	Z	g	switchF3State
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(JIIII)V	a	onKey
		p	1	window	window
		p	3	key	key
		p	4	scancode	scancode
	m	(JII)V	a	onChar
		p	1	window	window
	m	(J)V	a	setup
	m	(Ljava/lang/String;)V	a	setClipboard
	m	(ZZ)V	a	copyLookAt
	m	(Lbyj;Lfk;Ljt;)V	a	copyBlock
	m	()Ljava/lang/String;	a	getClipboard
	m	(Lsm;Lcvl;Ljt;)V	a	copyEntity
	m	(Z)V	a	enableRepeatEvents
		p	1	repeatEvents	repeatEvents
	m	(Ljava/lang/String;[Ljava/lang/Object;)V	a	debugWarn
	m	(I)Z	b	processF3
		p	1	key	key
	m	(Ljava/lang/String;[Ljava/lang/Object;)V	b	debugError
	m	()V	b	pollDebugCrash
c	dbm	net/minecraft/client/options/LogarithmicOption
c	dbn	net/minecraft/client/MinecraftClient
	f	Z	B	debugChunkInfo
	f	Z	C	debugChunkOcculsion
	f	Z	D	chunkCullingEnabled
	f	Ldbn;	E	instance
	f	Lorg/apache/logging/log4j/Logger;	F	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	G	COMPLETED_UNIT_FUTURE
	f	Ljava/io/File;	H	resourcePackDir
	f	Lcom/mojang/authlib/properties/PropertyMap;	I	sessionPropertyMap
	f	Leak;	J	textureManager
	f	Lcom/mojang/datafixers/DataFixer;	K	dataFixer
	f	Ldrh;	L	windowProvider
	f	Lcxx;	M	window
	f	Ldbx;	N	renderTickCounter
	f	Lajs;	O	snooper
	f	Ldqz;	P	bufferBuilders
	f	Ldvf;	Q	entityRenderManager
	f	Ldvz;	R	itemRenderer
	f	Ldqp;	S	heldItemRenderer
	f	Ledh;	T	searchManager
	f	Ldbz;	U	session
	f	Ljava/util/concurrent/atomic/AtomicReference;	V	worldGenProgressTracker
	f	Ldbj;	W	creativeHotbarStorage
	f	Ljava/lang/String;	X	gameVersion
	f	Ljava/lang/String;	Y	versionType
	f	Ljava/net/Proxy;	Z	netProxy
	f	Z	a	IS_SYSTEM_MAC
	f	Lkt;	aA	connection
	f	Z	aB	isIntegratedServerRunning
	f	I	aC	itemUseCooldown
	f	Z	aD	paused
	f	F	aE	pausedTickDelta
	f	J	aF	lastMetricsSampleTime
	f	J	aG	nextDebugInfoUpdateTime
	f	I	aH	fpsCounter
	f	Z	aI	connectedToRealms
	f	Ljava/lang/Thread;	aJ	thread
	f	Z	aK	running
	f	Lh;	aL	crashReport
	f	I	aM	currentFps
	f	Z	aN	windowFocused
	f	Ljava/util/Queue;	aO	renderTaskQueue
	f	Ljava/util/concurrent/CompletableFuture;	aP	resourceReloadFuture
	f	Ljava/lang/String;	aQ	openProfilerSection
	f	Lcrp;	aa	levelStorage
	f	Z	ab	is64Bit
	f	Z	ac	isDemo
	f	Laik;	ad	profiler
	f	Lyz;	ae	resourceManager
	f	Leao;	af	builtinPackProvider
	f	Lyq;	ag	resourcePackManager
	f	Lebf;	ah	languageManager
	f	Ldcb;	ai	blockColorMap
	f	Ldcf;	aj	itemColorMap
	f	Lcxe;	ak	framebuffer
	f	Ledz;	al	soundManager
	f	Ledu;	am	musicTracker
	f	Ldef;	an	fontManager
	f	Leba;	ao	splashTextLoader
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	ap	sessionService
	f	Leaz;	aq	skinProvider
	f	Leca;	ar	bakedModelManager
	f	Ldrk;	as	blockRenderManager
	f	Leay;	at	paintingManager
	f	Leaw;	au	statusEffectSpriteManager
	f	Ldeb;	av	toastManager
	f	Ldbh;	aw	game
	f	Leej;	ax	tutorialManager
	f	Ledm;	ay	server
	f	Ldnu;	az	currentServerEntry
	f	Lsm;	b	DEFAULT_TEXT_RENDERER_ID
	f	Lsm;	c	ALT_TEXT_RENDERER_ID
	f	Ldqr;	d	worldRenderer
	f	Ldpb;	e	particleManager
	f	Ldch;	f	textRenderer
	f	Ldqn;	g	gameRenderer
	f	Ldtt;	h	debugRenderer
	f	Ldci;	i	inGameHud
	f	Ldbr;	j	options
	f	Ldbo;	k	mouse
	f	Ldbl;	l	keyboard
	f	Ljava/io/File;	m	runDirectory
	f	Labj;	n	metricsData
	f	[B	o	memoryReservedForCrash
	f	Ldnr;	p	interactionManager
	f	Ldno;	q	world
	f	Ldqb;	r	player
	f	Lakq;	s	cameraEntity
	f	Lakq;	t	targetedEntity
	f	Lcvi;	u	crosshairTarget
	f	I	v	attackCooldown
	f	Z	w	skipGameRender
	f	Ldgb;	x	currentScreen
	f	Ldfw;	y	overlay
	f	Ljava/lang/String;	z	fpsDebugString
	m	(Ldjy;)V	<init>	<init>
		p	1	args	args
	m	()Z	A	isInSingleplayer
	m	()Z	B	isIntegratedServerRunning
	m	()Ledm;	C	getServer
	m	()Lajs;	D	getSnooper
	m	()Ldbz;	E	getSession
	m	()Lcom/mojang/authlib/properties/PropertyMap;	F	getSessionProperties
	m	()Ljava/net/Proxy;	G	getNetworkProxy
	m	()Leak;	H	getTextureManager
	m	()Lzb;	I	getResourceManager
	m	()Lyq;	J	getResourcePackManager
	m	()Leao;	K	getResourcePackDownloader
	m	()Ljava/io/File;	L	getResourcePackDir
	m	()Lebf;	M	getLanguageManager
	m	()Z	N	is64Bit
	m	()Z	O	isPaused
	m	()Ledz;	P	getSoundManager
	m	()Ledu$a;	Q	getMusicType
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	R	getSessionService
	m	()Leaz;	S	getSkinProvider
	m	()Lakq;	T	getCameraEntity
	m	()Ldrk;	U	getBlockRenderManager
	m	()Ldvf;	V	getEntityRenderManager
	m	()Ldvz;	X	getItemRenderer
	m	()Ldqp;	Y	getHeldItemRenderer
	m	(I)V	a	handleProfilerKeyPress
		p	1	digit	digit
	m	(Ldno;)V	a	joinWorld
	m	(Lsm;)Ljava/util/function/Function;	a	getSpriteAtlas
	m	(IJ)V	a	handleGlErrorByDisableVsync
		p	1	error	error
		p	2	description	description
	m	(Ldgb;)V	a	openScreen
		p	1	screen	screen
	m	(Ljava/lang/Throwable;)V	a	handleResourceReloadExecption
		p	1	throwable	throwable
	m	(Lben;Lbwl;)Lben;	a	addBlockEntityNbt
		p	1	stack	stack
		p	2	blockEntity	blockEntity
	m	(Lebf;Ljava/lang/String;Ldbr;Lh;)V	a	addSystemDetailsToCrashReport
		p	0	languageManager	languageManager
		p	1	version	version
		p	2	options	options
		p	3	report	report
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lye;Lyj;Lyt$a;)Lebc;	a	createResourcePackProfile
	m	(Ledh$a;)Lede;	a	getSearchableContainer
		p	1	key	key
	m	(Lakq;)V	a	setCameraEntity
		p	1	entity	entity
	m	(Lh;)V	a	setCrashReport
	m	(Ldfw;)V	a	setOverlay
		p	1	overlay	overlay
	m	(Ljava/lang/String;Ljava/lang/String;Lbka;)V	a	startIntegratedServer
		p	1	name	name
		p	2	displayName	displayName
	m	(Ldnu;)V	a	setCurrentServerEntry
	m	()V	aA	initializeSearchableContainers
	m	()Z	aB	checkIs64Bit
	m	()V	aC	startTimerHackThread
	m	()V	aD	checkGameData
	m	()I	aE	getFramerateLimit
	m	()V	aF	drawProfilerResults
	m	()V	aG	doAttack
	m	()V	aH	doItemUse
	m	()V	aI	handleInputEvents
	m	()V	aJ	doItemPick
	m	()Ljava/lang/String;	aK	getCurrentAction
	m	()Labj;	aa	getMetricsData
	m	()Z	ab	isConnectedToRealms
	m	()Lcom/mojang/datafixers/DataFixer;	ac	getDataFixer
	m	()F	ad	getTickDelta
	m	()F	ae	getLastFrameDuration
	m	()Ldcb;	af	getBlockColorMap
	m	()Z	ag	hasReducedDebugInfo
	m	()Ldeb;	ah	getToastManager
	m	()Leej;	ai	getTutorialManager
	m	()Z	aj	isWindowFocused
	m	()Ldbj;	ak	getCreativeHotbarStorage
	m	()Leca;	al	getBakedModelManager
	m	()Ldef;	am	getFontManager
	m	()Leay;	an	getPaintingManager
	m	()Leaw;	ao	getStatusEffectSpriteManager
	m	()Laio;	ap	getProfiler
	m	()Ldbh;	aq	getGame
	m	()Leba;	as	getSplashTextLoader
	m	()Ldfw;	at	getOverlay
	m	()Z	au	shouldRenderAsync
	m	()Lcxx;	av	getWindow
	m	()Ldqz;	aw	getBufferBuilders
	m	()Ljava/lang/String;	ax	getWindowTitle
	m	()V	b	updateWindowTitle
	m	(I)V	b	resetMipmapLevels
		p	1	mipmapLevels	mipmapLevels
	m	(Ldno;)V	b	setWorld
	m	(Lh;)V	b	printCrashReport
	m	(Z)V	b	openPauseMenu
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	b	createV3ResoucePackFactory
	m	(Ldgb;)V	b	disconnect
		p	1	screen	screen
	m	(Z)V	c	setConnectedToRealms
		p	1	connectedToRealms	connectedToRealms
	m	()Z	c	isModded
	m	(Lh;)Lh;	c	addDetailsToCrashReport
		p	1	report	report
	m	(Ldgb;)V	c	reset
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	c	createV4ResourcePackFactory
	m	()V	d	run
	m	(Z)V	d	render
		p	1	tick	tick
	m	(Z)V	e	handleBlockBreaking
	m	()Lcxe;	e	getFramebuffer
	m	()Ljava/lang/String;	f	getGameVersion
	m	()Ljava/lang/String;	g	getVersionType
	m	()Z	h	forcesUnicodeFont
	m	()Ljava/util/concurrent/CompletableFuture;	i	reloadResources
	m	()Lcrp;	j	getLevelStorage
	m	()V	k	stop
	m	()V	l	cleanUpAfterCrash
	m	()V	m	scheduleStop
	m	()Z	n	isRunning
	m	()Ledu;	o	getMusicTracker
	m	()V	p	tick
	m	()V	q	disconnect
	m	()Z	r	isDemo
	m	()Ldnp;	s	getNetworkHandler
	m	()Z	t	isHudEnabled
	m	()Z	u	isFancyGraphicsEnabled
	m	()Z	v	isAmbientOcclusionEnabled
	m	()Ldbn;	x	getInstance
	m	()Ljava/util/concurrent/CompletableFuture;	y	reloadResourcesConcurrently
	m	()Ldnu;	z	getCurrentServerEntry
c	dbo	net/minecraft/client/Mouse
	f	Ldbn;	a	client
	f	Z	b	leftButtonClicked
	f	Z	c	middleButtonClicked
	f	Z	d	rightButtonClicked
	f	D	e	x
	f	D	f	y
	f	I	g	controlLeftTicks
	f	I	h	activeButton
	f	Z	i	hasResolutionChanged
	f	D	k	glfwTime
	f	Labv;	l	cursorXSmoother
	f	Labv;	m	cursorYSmoother
	f	D	n	cursorDeltaX
	f	D	o	cursorDeltaY
	f	D	p	eventDeltaWheel
	f	D	q	lastMouseUpdateTime
	f	Z	r	isCursorLocked
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	()V	a	updateMouse
	m	(JIII)V	a	onMouseButton
		p	1	window	window
		p	3	button	button
		p	4	action	action
		p	5	mods	mods
	m	(J)V	a	setup
	m	(JDD)V	a	onMouseScroll
		p	1	window	window
	m	(JDD)V	b	onCursorPos
		p	1	window	window
		p	3	x	x
		p	5	y	y
	m	()Z	b	wasLeftButtonClicked
	m	()Z	d	wasRightButtonClicked
	m	()D	e	getX
	m	()D	f	getY
	m	()V	g	onResolutionChanged
	m	()Z	h	isCursorLocked
	m	()V	i	lockCursor
	m	()V	j	unlockCursor
c	dbp	net/minecraft/client/options/NarratorOption
	f	[Ldbp;	e	VALUES
	f	I	f	id
	f	Ljava/lang/String;	g	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	translationKey	translationKey
	m	(I)Ldbp;	a	byId
		p	0	id	id
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getTranslationKey
c	dbq	net/minecraft/client/options/Option
	f	Ldba;	A	AUTO_SUGGESTIONS
	f	Ldba;	B	CHAT_COLOR
	f	Ldba;	C	CHAT_LINKS
	f	Ldba;	D	CHAT_LINKS_PROMPT
	f	Ldba;	E	DISCRETE_MOUSE_SCROLL
	f	Ldba;	F	VSYNC
	f	Ldba;	G	ENTITY_SHADOWS
	f	Ldba;	H	FORCE_UNICODE_FONT
	f	Ldba;	I	INVERT_MOUSE
	f	Ldba;	J	REALMS_NOTIFICATIONS
	f	Ldba;	K	REDUCED_DEBUG_INFO
	f	Ldba;	L	SUBTITLES
	f	Ldba;	M	SNOOPER
	f	Ldbe;	N	SNEAK_TOGGLED
	f	Ldbe;	O	SPRINT_TOGGLED
	f	Ldba;	P	TOUCHSCREEN
	f	Ldba;	Q	FULLSCREEN
	f	Ldba;	R	VIEW_BOBBING
	f	Ljava/lang/String;	S	key
	f	Ldbt;	a	BIOME_BLEND_RADIUS
	f	Ldbt;	b	CHAT_HEIGHT_FOCUSED
	f	Ldbt;	c	SATURATION
	f	Ldbt;	d	CHAT_OPACITY
	f	Ldbt;	e	CHAT_SCALE
	f	Ldbt;	f	CHAT_WIDTH
	f	Ldbt;	g	FOV
	f	Ldbt;	h	FRAMERATE_LIMIT
	f	Ldbt;	i	GAMMA
	f	Ldbt;	j	MIPMAP_LEVELS
	f	Ldbt;	k	MOUSE_WHEEL_SENSITIVITY
	f	Ldba;	l	RAW_MOUSE_INPUT
	f	Ldbt;	m	RENDER_DISTANCE
	f	Ldbt;	n	SENSITIVITY
	f	Ldbt;	o	TEXT_BACKGROUND_OPACITY
	f	Ldbe;	p	AO
	f	Ldbe;	q	ATTACK_INDICATOR
	f	Ldbe;	r	VISIBILITY
	f	Ldbe;	s	GRAPHICS
	f	Ldbe;	t	GUI_SCALE
	f	Ldbe;	u	MAIN_HAND
	f	Ldbe;	v	NARRATOR
	f	Ldbe;	w	PARTICLES
	f	Ldbe;	x	CLOUDS
	f	Ldbe;	y	TEXT_BACKGROUND
	f	Ldba;	z	AUTO_JUMP
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	()Ljava/lang/String;	a	getDisplayPrefix
	m	(Ldbr;III)Ldct;	a	createButton
		p	1	options	options
		p	2	x	x
		p	3	y	y
		p	4	width	width
c	dbr	net/minecraft/client/options/GameOptions
	f	Leel;	A	tutorialStep
	f	I	B	biomeBlendRadius
	f	D	C	mouseWheelSensitivity
	f	Z	D	rawMouseInput
	f	I	E	glDebugVerbosity
	f	Z	F	autoJump
	f	Z	G	autoSuggestions
	f	Z	H	chatColors
	f	Z	I	chatLinks
	f	Z	J	chatLinksPrompt
	f	Z	K	enableVsync
	f	Z	L	entityShadows
	f	Z	M	forceUnicodeFont
	f	Z	N	invertYMouse
	f	Z	O	discreteMouseScroll
	f	Z	P	realmsNotifications
	f	Z	Q	reducedDebugInfo
	f	Z	R	snooperEnabled
	f	Z	S	showSubtitles
	f	Z	T	backgroundForChatOnly
	f	Z	U	touchscreen
	f	Z	V	fullscreen
	f	Z	W	bobView
	f	Z	X	sneakToggled
	f	Z	Y	sprintToggled
	f	Z	Z	skipMultiplayerWarning
	f	D	a	mouseSensitivity
	f	Ldbn;	aA	client
	f	Laji;	aB	difficulty
	f	Z	aC	hudHidden
	f	I	aD	perspective
	f	Z	aE	debugEnabled
	f	Z	aF	debugProfilerEnabled
	f	Z	aG	debugTpsEnabled
	f	Ljava/lang/String;	aH	lastServer
	f	Z	aI	smoothCameraEnabled
	f	D	aJ	fov
	f	D	aK	gamma
	f	I	aL	guiScale
	f	Ldbs;	aM	particles
	f	Ldbp;	aN	narrator
	f	Ljava/lang/String;	aO	language
	f	Lorg/apache/logging/log4j/Logger;	aP	LOGGER
	f	Lcom/google/gson/Gson;	aQ	GSON
	f	Ljava/lang/reflect/Type;	aR	STRING_LIST_TYPE
	f	Lcom/google/common/base/Splitter;	aS	COLON_SPLITTER
	f	Ljava/util/Set;	aT	enabledPlayerModelParts
	f	Ljava/util/Map;	aU	soundVolumeLevels
	f	Ljava/io/File;	aV	optionsFile
	f	Ldbk;	aa	keyForward
	f	Ldbk;	ab	keyLeft
	f	Ldbk;	ac	keyBack
	f	Ldbk;	ad	keyRight
	f	Ldbk;	ae	keyJump
	f	Ldbk;	af	keySneak
	f	Ldbk;	ag	keySprint
	f	Ldbk;	ah	keyInventory
	f	Ldbk;	ai	keySwapHands
	f	Ldbk;	aj	keyDrop
	f	Ldbk;	ak	keyUse
	f	Ldbk;	al	keyAttack
	f	Ldbk;	am	keyPickItem
	f	Ldbk;	an	keyChat
	f	Ldbk;	ao	keyPlayerList
	f	Ldbk;	ap	keyCommand
	f	Ldbk;	aq	keyScreenshot
	f	Ldbk;	ar	keyTogglePerspective
	f	Ldbk;	as	keySmoothCamera
	f	Ldbk;	at	keyFullscreen
	f	Ldbk;	au	keySpectatorOutlines
	f	Ldbk;	av	keyAdvancements
	f	[Ldbk;	aw	keysHotbar
	f	Ldbk;	ax	keySaveToolbarActivator
	f	Ldbk;	ay	keyLoadToolbarActivator
	f	[Ldbk;	az	keysAll
	f	I	b	viewDistance
	f	I	c	maxFps
	f	Ldbd;	d	cloudRenderMode
	f	Z	e	fancyGraphics
	f	Lday;	f	ao
	f	Ljava/util/List;	g	resourcePacks
	f	Ljava/util/List;	h	incompatibleResourcePacks
	f	Layh;	i	chatVisibility
	f	D	j	chatOpacity
	f	D	k	textBackgroundOpacity
	f	Ljava/lang/String;	l	fullscreenResolution
	f	Z	m	hideServerAddress
	f	Z	n	advancedItemTooltips
	f	Z	o	pauseOnLostFocus
	f	Laky;	p	mainArm
	f	I	q	overrideWidth
	f	I	r	overrideHeight
	f	Z	s	heldItemTooltips
	f	D	t	chatScale
	f	D	u	chatWidth
	f	D	v	chatHeightUnfocused
	f	D	w	chatHeightFocused
	f	I	x	mipmapLevels
	f	Z	y	useNativeTransport
	f	Ldaz;	z	attackIndicator
	m	(Ldbn;Ljava/io/File;)V	<init>	<init>
		p	1	client	client
		p	2	optionsFile	optionsFile
	m	()V	a	load
	m	(Layk;)V	a	togglePlayerModelPart
		p	1	part	part
	m	(I)I	a	getTextBackgroundColor
		p	1	fallbackColor	fallbackColor
	m	(Laaj;F)V	a	setSoundVolume
		p	1	category	category
		p	2	volume	volume
	m	(Ldbk;Lcxm$a;)V	a	setKeyCode
		p	1	key	key
		p	2	code	code
	m	(Ljt;)Ljt;	a	update
		p	1	tag	tag
	m	(Ljava/lang/String;)F	a	parseFloat
	m	(Laaj;)F	a	getSoundVolume
		p	1	category	category
	m	(Lyq;)V	a	addResourcePackProfilesToManager
		p	1	manager	manager
	m	(F)F	a	getTextBackgroundOpacity
		p	1	fallback	fallback
	m	(Layk;Z)V	a	setPlayerModelPart
		p	1	part	part
		p	2	enabled	enabled
	m	(F)I	b	getTextBackgroundColor
		p	1	fallbackOpacity	fallbackOpacity
	m	()V	b	write
	m	()V	c	onPlayerModelPartChange
	m	()Ljava/util/Set;	d	getEnabledPlayerModelParts
	m	()Ldbd;	e	getCloudRenderMode
	m	()Z	f	shouldUseNativeTransport
c	dbs	net/minecraft/client/options/ParticlesOption
	f	[Ldbs;	d	VALUES
	f	I	e	id
	f	Ljava/lang/String;	f	translationKey
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	id	id
		p	4	translationKey	translationKey
	m	(I)Ldbs;	a	byId
		p	0	id	id
	m	()Ljava/lang/String;	a	getTranslationKey
	m	()I	b	getId
c	dbt	net/minecraft/client/options/DoubleOption
	f	F	S	step
	f	D	T	min
	f	D	U	max
	f	Ljava/util/function/Function;	V	getter
	f	Ljava/util/function/BiConsumer;	W	setter
	f	Ljava/util/function/BiFunction;	X	displayStringGetter
	m	(Ljava/lang/String;DDFLjava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	1	key	key
		p	2	min	min
		p	4	max	max
		p	6	step	step
		p	7	getter	getter
		p	8	setter	setter
		p	9	displayStringGetter	displayStringGetter
	m	(Ldbr;D)V	a	set
		p	1	options	options
		p	2	value	value
	m	(F)V	a	setMax
		p	1	max	max
	m	(Ldbr;)D	a	get
		p	1	options	options
	m	(D)D	a	getRatio
		p	1	value	value
	m	()D	b	getMin
	m	(D)D	b	getValue
		p	1	ratio	ratio
	m	()D	c	getMax
	m	(D)D	c	adjust
		p	1	value	value
	m	(Ldbr;)Ljava/lang/String;	c	getDisplayString
		p	1	options	options
c	dbu	net/minecraft/client/recipe/book/RecipeBookGroup
	f	Ljava/util/List;	q	icons
	m	(Ljava/lang/String;I[Lben;)V	<init>	<init>
		p	3	entries	entries
	m	()Ljava/util/List;	a	getIcons
c	dbv	net/minecraft/client/util/ScreenshotUtils
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/text/DateFormat;	b	DATE_FORMAT
	m	(Ljava/io/File;)Ljava/io/File;	a	getScreenshotFilename
		p	0	directory	directory
	m	(Ljava/io/File;Ljava/lang/String;IILcxe;Ljava/util/function/Consumer;)V	a	saveScreenshot
		p	0	gameDirectory	gameDirectory
		p	1	fileName	fileName
		p	2	framebufferWidth	framebufferWidth
		p	3	framebufferHeight	framebufferHeight
		p	4	framebuffer	framebuffer
		p	5	messageReceiver	messageReceiver
	m	(IILcxe;)Lcxr;	a	takeScreenshot
		p	0	width	width
		p	1	height	height
		p	2	framebuffer	framebuffer
	m	(Ljava/io/File;IILcxe;Ljava/util/function/Consumer;)V	a	saveScreenshot
		p	0	gameDirectory	gameDirectory
		p	1	framebufferWidth	framebufferWidth
		p	2	framebufferHeight	framebufferHeight
		p	3	framebuffer	framebuffer
		p	4	messageReceiver	messageReceiver
	m	(Ljava/io/File;Ljava/lang/String;IILcxe;Ljava/util/function/Consumer;)V	b	saveScreenshotInner
		p	0	gameDirectory	gameDirectory
		p	1	fileName	fileName
		p	2	framebufferWidth	framebufferWidth
		p	3	framebufferHeight	framebufferHeight
		p	4	framebuffer	framebuffer
		p	5	messageReceiver	messageReceiver
c	dbw	net/minecraft/client/ClientGameSession
	f	I	a	playerCount
	f	Z	b	remoteServer
	f	Ljava/lang/String;	c	difficulty
	f	Ljava/lang/String;	d	gameMode
	f	Ljava/util/UUID;	e	sessionId
c	dbx	net/minecraft/client/render/RenderTickCounter
	f	I	a	ticksThisFrame
	f	F	b	tickDelta
	f	F	c	lastFrameDuration
	f	J	d	prevTimeMillis
	f	F	e	tickTime
	m	(FJ)V	<init>	<init>
		p	1	tps	tps
		p	2	timeMillis	timeMillis
	m	(J)V	a	beginRenderTick
		p	1	timeMillis	timeMillis
c	dby	net/minecraft/client/options/StickyKeyBinding
	f	Ljava/util/function/BooleanSupplier;	a	toggleGetter
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1	id	id
		p	2	code	code
		p	3	category	category
		p	4	toggleGetter	toggleGetter
c	dbz	net/minecraft/client/util/Session
	f	Ljava/lang/String;	a	username
	f	Ljava/lang/String;	b	uuid
	f	Ljava/lang/String;	c	accessToken
	f	Ldbz$a;	d	accountType
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	username	username
		p	2	uuid	uuid
		p	3	accessToken	accessToken
		p	4	accountType	accountType
	m	()Ljava/lang/String;	a	getSessionId
	m	()Ljava/lang/String;	b	getUuid
	m	()Ljava/lang/String;	c	getUsername
	m	()Ljava/lang/String;	d	getAccessToken
	m	()Lcom/mojang/authlib/GameProfile;	e	getProfile
c	dbz$a	net/minecraft/client/util/Session$AccountType
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Ldbz$a;	a	byName
c	dc	net/minecraft/command/arguments/MessageArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Ldc$a;	a	parse
	m	()Ldc;	a	message
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Llf;	a	getMessage
		p	0	command	command
		p	1	name	name
c	dc$a	net/minecraft/command/arguments/MessageArgumentType$MessageFormat
	f	Ljava/lang/String;	a	contents
	f	[Ldc$b;	b	selectors
	m	(Lcq;Z)Llf;	a	format
	m	(Lcom/mojang/brigadier/StringReader;Z)Ldc$a;	a	parse
c	dc$b	net/minecraft/command/arguments/MessageArgumentType$MessageSelector
	f	I	a	start
	f	I	b	end
	f	Lep;	c	selector
	m	()I	a	getStart
	m	(Lcq;)Llf;	a	format
	m	()I	b	getEnd
c	dca	net/minecraft/client/color/block/BlockColorProvider
	m	(Lbyj;Lbje;Lfk;I)I	getColor	getColor
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
		p	4	tintIndex	tintIndex
c	dcb	net/minecraft/client/color/block/BlockColors
	f	Lft;	a	providers
	f	Ljava/util/Map;	b	properties
	m	(Lbyj;Lbjw;Lfk;)I	a	getColor
		p	1	state	state
		p	2	world	world
		p	3	pos	pos
	m	(Lbyj;Lbje;Lfk;I)I	a	getColor
		p	1	state	state
		p	2	view	view
		p	3	pos	pos
		p	4	tint	tint
	m	(Lbzm;[Lbph;)V	a	registerColorProperty
		p	1	property	property
		p	2	blocks	blocks
	m	(Ljava/util/Set;[Lbph;)V	a	registerColorProperties
		p	1	properties	properties
		p	2	blocks	blocks
	m	(Ldca;[Lbph;)V	a	registerColorProvider
		p	1	provider	provider
		p	2	blocks	blocks
	m	(Lbph;)Ljava/util/Set;	a	getProperties
		p	1	block	block
	m	()Ldcb;	a	create
	m	(Lbyj;Lbje;Lfk;I)I	b	method_1684
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	c	method_1696
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	d	method_1698
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	e	method_1685
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	f	method_1688
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	g	method_1694
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	h	method_1692
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	i	method_1687
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	j	method_1695
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	k	method_1693
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
	m	(Lbyj;Lbje;Lfk;I)I	l	method_1686
		p	0	state	state
		p	1	view	view
		p	2	pos	pos
		p	3	tintIndex	tintIndex
c	dcc	net/minecraft/client/world/BiomeColorCache
	f	Ljava/lang/ThreadLocal;	a	last
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	b	colors
	f	Ljava/util/concurrent/locks/ReentrantReadWriteLock;	c	lock
	m	(Lfk;Ljava/util/function/IntSupplier;)I	a	getBiomeColor
		p	1	pos	pos
		p	2	colorFactory	colorFactory
	m	()V	a	reset
	m	(II)V	a	reset
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(II)[I	b	getColorArray
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
c	dcc$a	net/minecraft/client/world/BiomeColorCache$Last
	f	I	a	x
	f	I	b	z
	f	[I	c	colors
c	dce	net/minecraft/client/color/item/ItemColorProvider
	m	(Lben;I)I	getColor	getColor
		p	1	stack	stack
		p	2	tintIndex	tintIndex
c	dcf	net/minecraft/client/color/item/ItemColors
	f	Lft;	a	providers
	m	(Ldcb;)Ldcf;	a	create
		p	0	blockColors	blockColors
	m	(Lben;I)I	a	getColorMultiplier
		p	1	item	item
		p	2	tintIndex	tintIndex
	m	(Lbfl;Lben;I)I	a	method_1699
		p	1	stack	stack
		p	2	tintIndex	tintIndex
	m	(Ldcb;Lben;I)I	a	method_1702
		p	1	stack	stack
		p	2	tintIndex	tintIndex
	m	(Ldce;[Lbjv;)V	a	register
		p	1	mapper	mapper
		p	2	items	items
	m	(Lben;I)I	b	method_1709
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lben;I)I	c	method_1703
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lben;I)I	d	method_1705
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lben;I)I	e	method_1700
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lben;I)I	f	method_1701
		p	0	stack	stack
		p	1	tintIndex	tintIndex
	m	(Lben;I)I	g	method_1707
		p	0	stack	stack
		p	1	tintIndex	tintIndex
c	dch	net/minecraft/client/font/TextRenderer
	f	I	a	fontHeight
	f	Ljava/util/Random;	b	random
	f	Leak;	c	textureManager
	f	Ldeg;	d	fontStorage
	f	Z	e	rightToLeft
	m	(Leak;Ldeg;)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	fontStorage	fontStorage
	m	(Ljava/lang/String;FFIZLb;Ldqt;ZII)I	a	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumerProvider	vertexConsumerProvider
		p	8	seeThrough	seeThrough
		p	9	backgroundColor	backgroundColor
		p	10	light	light
	m	(Ljava/util/List;)V	a	setFonts
		p	1	fonts	fonts
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	trimToWidth
		p	1	text	text
		p	2	width	width
		p	3	rightToLeft	rightToLeft
	m	(Ldej;ZZFFFLb;Lcyo;FFFFI)V	a	drawGlyph
		p	1	glyphRenderer	glyphRenderer
		p	2	bold	bold
		p	3	italic	italic
		p	4	weight	weight
		p	5	x	x
		p	6	y	y
		p	7	matrix	matrix
		p	8	vertexConsumer	vertexConsumer
		p	9	red	red
		p	10	green	green
		p	11	blue	blue
		p	12	alpha	alpha
		p	13	light	light
	m	(Ljava/lang/String;IIZ)I	a	findWordEdge
		p	1	text	text
		p	2	direction	direction
		p	3	position	position
		p	4	skipWhitespaceToRightOfWord	skipWhitespaceToRightOfWord
	m	(C)F	a	getCharWidth
		p	1	character	character
	m	(Ljava/lang/String;FFI)I	a	drawWithShadow
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
	m	(Ljava/lang/String;FFILb;Z)I	a	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	matrix	matrix
		p	6	shadow	shadow
	m	()Z	a	isRightToLeft
	m	(Ljava/lang/String;IIII)V	a	drawTrimmed
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	maxWidth	maxWidth
		p	5	color	color
	m	(Z)V	a	setRightToLeft
		p	1	rightToLeft	rightToLeft
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mirror
		p	1	text	text
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	trimToWidth
		p	1	text	text
		p	2	width	width
	m	(Ljava/lang/String;FFIZLb;Ldqt;ZII)I	b	drawInternal
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumerProvider	vertexConsumerProvider
		p	8	seeThrough	seeThrough
		p	9	backgroundColor	backgroundColor
		p	10	light	light
	m	(Ljava/lang/String;I)I	b	getStringBoundedHeight
		p	1	text	text
		p	2	maxWidth	maxWidth
	m	(Ljava/lang/String;)I	b	getStringWidth
		p	1	text	text
	m	(Ljava/lang/String;FFI)I	b	draw
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
	m	(Ljava/lang/String;IIII)V	b	drawWrapped
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	maxWidth	maxWidth
		p	5	color	color
	m	(Ljava/lang/String;)Ljava/lang/String;	c	trimEndNewlines
		p	1	text	text
	m	(Ljava/lang/String;FFIZLb;Ldqt;ZII)F	c	drawLayer
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
		p	5	shadow	shadow
		p	6	matrix	matrix
		p	7	vertexConsumerProvider	vertexConsumerProvider
		p	8	seeThrough	seeThrough
		p	9	underlineColor	underlineColor
		p	10	light	light
	m	(Ljava/lang/String;I)Ljava/util/List;	c	wrapStringToWidthAsList
		p	1	text	text
		p	2	width	width
	m	(Ljava/lang/String;I)Ljava/lang/String;	d	wrapStringToWidth
		p	1	text	text
		p	2	width	width
	m	(Ljava/lang/String;I)I	e	getCharacterCountForWidth
		p	1	text	text
		p	2	offset	offset
c	dci	net/minecraft/client/gui/hud/InGameHud
	f	I	A	renderHealthValue
	f	J	B	lastHealthCheckTime
	f	J	C	heartJumpEndTick
	f	I	D	scaledWidth
	f	I	E	scaledHeight
	f	Ljava/util/Map;	F	listeners
	f	F	a	vignetteDarkness
	f	Lsm;	b	VIGNETTE_TEX
	f	Lsm;	c	WIDGETS_TEX
	f	Lsm;	d	PUMPKIN_BLUR
	f	Ljava/util/Random;	e	random
	f	Ldbn;	f	client
	f	Ldvz;	g	itemRenderer
	f	Ldcw;	h	chatHud
	f	I	i	ticks
	f	Ljava/lang/String;	j	overlayMessage
	f	I	k	overlayRemaining
	f	Z	l	overlayTinted
	f	I	m	heldItemTooltipFade
	f	Lben;	n	currentStack
	f	Lddb;	o	debugHud
	f	Lddn;	p	subtitlesHud
	f	Lddv;	q	spectatorHud
	f	Lddj;	r	playerListHud
	f	Ldcu;	s	bossBarHud
	f	I	t	titleTotalTicks
	f	Ljava/lang/String;	u	title
	f	Ljava/lang/String;	v	subtitle
	f	I	w	titleFadeInTicks
	f	I	x	titleRemainTicks
	f	I	y	titleFadeOutTicks
	f	I	z	lastHealthValue
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Lcvi;)Z	a	shouldRenderSpectatorCrosshair
	m	(Ljava/lang/String;)V	a	setRecordPlayingOverlay
	m	(Ldch;II)V	a	drawTextBackground
		p	1	textRenderer	textRenderer
		p	2	y	y
		p	3	width	width
	m	(F)V	a	render
		p	1	tickDelta	tickDelta
	m	(Lakz;)I	a	getHeartCount
		p	1	entity	entity
	m	()V	a	setDefaultTitleFade
	m	(IIFLayj;Lben;)V	a	renderHotbarItem
	m	(Lcwi;)V	a	renderScoreboardSidebar
	m	(Llf;Z)V	a	setOverlayMessage
	m	(Lld;Llf;)V	a	addChatMessage
	m	(I)V	a	renderMountJumpBar
	m	(Lakq;)V	a	updateVignetteDarkness
		p	1	entity	entity
	m	(Ljava/lang/String;Z)V	a	setOverlayMessage
	m	(Ljava/lang/String;Ljava/lang/String;III)V	a	setTitles
	m	(F)V	b	renderHotbar
	m	()V	b	renderStatusEffectOverlay
	m	(I)V	b	renderExperienceBar
	m	(Lakq;)V	b	renderVignetteOverlay
	m	(F)V	c	renderPortalOverlay
	m	(I)I	c	getHeartRows
		p	1	heartCount	heartCount
	m	()V	c	renderHeldItemTooltip
	m	()V	d	renderDemoTimer
	m	()V	e	tick
	m	()Ldcw;	f	getChatHud
	m	()I	g	getTicks
	m	()Ldch;	h	getFontRenderer
	m	()Lddv;	i	getSpectatorHud
	m	()Lddj;	j	getPlayerListWidget
	m	()V	k	clear
	m	()Ldcu;	l	getBossBarHud
	m	()V	m	resetDebugHudChunk
	m	()V	n	renderCrosshair
	m	()Layj;	o	getCameraPlayer
	m	()Lakz;	p	getRiddenEntity
	m	()V	q	renderStatusBars
	m	()V	r	renderMountHealth
	m	()V	s	renderPumpkinOverlay
c	dcj	net/minecraft/client/gui/DrawableHelper
	m	(IIIIILeaj;)V	blit	blit
		p	0	x	x
		p	1	y	y
		p	2	z	z
		p	3	width	width
		p	4	height	height
		p	5	sprite	sprite
	m	(IIIFFIIII)V	blit	blit
		p	0	x	x
		p	1	y	y
		p	2	z	z
		p	3	u	u
		p	4	v	v
		p	5	width	width
		p	6	height	height
		p	7	texHeight	texHeight
		p	8	texWidth	texWidth
	m	(IIIIII)V	blit	blit
		p	1	x	x
		p	2	y	y
		p	3	u	u
		p	4	v	v
		p	5	width	width
		p	6	height	height
	m	(IIIIFFIIII)V	blit	blit
		p	0	x	x
		p	1	y	y
		p	2	width	width
		p	3	height	height
		p	4	u	u
		p	5	v	v
		p	6	uWidth	uWidth
		p	7	vHeight	vHeight
		p	8	texWidth	texWidth
		p	9	texHeight	texHeight
	m	(IIFFIIII)V	blit	blit
		p	0	x	x
		p	1	y	y
		p	2	u	u
		p	3	v	v
		p	4	width	width
		p	5	height	height
		p	6	texWidth	texWidth
		p	7	texHeight	texHeight
	m	(Ldch;Ljava/lang/String;III)V	drawCenteredString	drawCenteredString
		p	1	textRenderer	textRenderer
		p	2	str	str
		p	3	centerX	centerX
		p	4	y	y
		p	5	color	color
	m	(Ldch;Ljava/lang/String;III)V	drawRightAlignedString	drawRightAlignedString
		p	1	textRenderer	textRenderer
		p	2	str	str
		p	3	rightX	rightX
		p	4	y	y
		p	5	color	color
	m	(Ldch;Ljava/lang/String;III)V	drawString	drawString
		p	1	textRenderer	textRenderer
		p	2	str	str
		p	3	x	x
		p	4	y	y
		p	5	color	color
	m	(IIIII)V	fill	fill
		p	0	x1	x1
		p	1	y1	y1
		p	2	x2	x2
		p	3	y2	y2
		p	4	color	color
	m	(Lb;IIIII)V	fill	fill
		p	1	x1	x1
		p	2	y1	y1
		p	3	x2	x2
		p	4	y2	y2
		p	5	color	color
	m	(IIIIII)V	fillGradient	fillGradient
		p	1	top	top
		p	2	left	left
		p	3	right	right
		p	4	bottom	bottom
		p	5	color1	color1
		p	6	color2	color2
	m	(IIIIIIIFFII)V	innerBlit	innerBlit
		p	0	xStart	xStart
		p	1	xEnd	xEnd
		p	2	yStart	yStart
		p	3	yEnd	yEnd
		p	4	z	z
		p	5	width	width
		p	6	height	height
		p	7	u	u
		p	8	v	v
		p	9	texWidth	texWidth
		p	10	texHeight	texHeight
	m	(IIIIIFFFF)V	innerBlit	innerBlit
		p	0	xStart	xStart
		p	1	xEnd	xEnd
		p	2	yStart	yStart
		p	3	yEnd	yEnd
		p	4	z	z
		p	5	uStart	uStart
		p	6	uEnd	uEnd
		p	7	vStart	vStart
		p	8	vEnd	vEnd
c	dck	net/minecraft/client/gui/MapRenderer
	f	Lsm;	a	MAP_ICONS_TEXTURE
	f	Leak;	c	textureManager
	f	Ljava/util/Map;	d	mapTextures
	m	(Ldck$a;)Lcrg;	a	getState
		p	1	texture	texture
	m	()V	a	clearStateTextures
	m	(Lcyl;Ldqt;Lcrg;ZI)V	a	draw
	m	(Ljava/lang/String;)Ldck$a;	a	getTexture
	m	(Lcrg;)V	a	updateTexture
	m	(Lcrg;)Ldck$a;	b	getMapTexture
c	dck$a	net/minecraft/client/gui/MapRenderer$MapTexture
	f	Lcrg;	b	mapState
	f	Ldzy;	c	texture
	m	(Lcyl;Ldqt;ZI)V	a	draw
	m	()V	a	updateTexture
c	dcl	net/minecraft/client/gui/ClientChatListener
	m	(Lld;Llf;)V	a	onChatMessage
		p	1	messageType	messageType
		p	2	message	message
c	dcm	net/minecraft/client/util/NarratorManager
	f	Llf;	a	EMPTY
	f	Ldcm;	b	INSTANCE
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lcom/mojang/text2speech/Narrator;	d	narrator
	m	()Z	a	isActive
	m	(Ldbp;)V	a	addToast
		p	1	option	option
	m	(Ljava/lang/String;)V	a	narrate
		p	1	text	text
	m	(ZLjava/lang/String;)V	a	narrate
		p	1	interrupt	interrupt
		p	2	message	message
	m	()V	b	clear
	m	()V	c	destroy
	m	()Ldbp;	d	getNarratorOption
c	dcn	net/minecraft/client/gui/GameInfoChatListener
	f	Ldbn;	a	client
c	dco	net/minecraft/client/gui/hud/ChatListenerHud
	f	Ldbn;	a	client
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
c	dcq	net/minecraft/client/gui/widget/AbstractPressableButtonWidget
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DD)V	onClick	onClick
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
c	dcr	net/minecraft/client/gui/widget/EntryListWidget
	f	I	x0	left
	f	I	x1	right
	f	I	y0	top
	f	I	y1	bottom
	m	(Ldbn;IIIII)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
		p	4	top	top
		p	5	bottom	bottom
		p	6	itemHeight	itemHeight
	m	(Ldcr$a;)I	addEntry	addEntry
		p	1	entry	entry
	m	(Ldcr$a;)V	centerScrollOn	centerScrollOn
		p	1	entry	entry
	m	(II)V	clickedHeader	clickedHeader
		p	1	x	x
		p	2	y	y
	m	(Ldcr$a;)V	ensureVisible	ensureVisible
		p	1	entry	entry
	m	(I)Ldcr$a;	getEntry	getEntry
		p	1	index	index
	m	(DD)Ldcr$a;	getEntryAtPosition	getEntryAtPosition
		p	1	x	x
		p	3	y	y
	m	()Ldcr$a;	getFocused	getFocused
	m	(I)I	getRowTop	getRowTop
		p	1	index	index
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(I)Z	isSelectedItem	isSelectedItem
		p	1	index	index
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(I)V	moveSelection	moveSelection
		p	1	amount	amount
	m	(I)Ldcr$a;	remove	remove
		p	1	index	index
	m	(Ldcr$a;)Z	removeEntry	removeEntry
		p	1	entry	entry
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(II)V	renderDecorations	renderDecorations
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
	m	(IILcym;)V	renderHeader	renderHeader
		p	1	x	x
		p	2	y	y
		p	3	tessellator	tessellator
	m	(IIII)V	renderHoleBackground	renderHoleBackground
		p	1	top	top
		p	2	bottom	bottom
		p	3	alphaTop	alphaTop
		p	4	alphaBottom	alphaBottom
	m	(IIIIF)V	renderList	renderList
		p	1	x	x
		p	2	y	y
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
		p	5	delta	delta
	m	(Ljava/util/Collection;)V	replaceEntries	replaceEntries
		p	1	newEntries	newEntries
	m	(I)V	scroll	scroll
		p	1	amount	amount
	m	(I)V	setLeftPos	setLeftPos
		p	1	left	left
	m	(ZI)V	setRenderHeader	setRenderHeader
		p	1	renderHeader	renderHeader
		p	2	headerHeight	headerHeight
	m	(Z)V	setRenderSelection	setRenderSelection
		p	1	renderSelection	renderSelection
	m	(D)V	setScrollAmount	setScrollAmount
		p	1	amount	amount
	m	(Ldcr$a;)V	setSelected	setSelected
		p	1	entry	entry
	m	(IIII)V	updateSize	updateSize
		p	1	width	width
		p	2	height	height
		p	3	top	top
		p	4	bottom	bottom
c	dcr$a	net/minecraft/client/gui/widget/EntryListWidget$Entry
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(IIIIIIIZF)V	render	render
		p	1	index	index
		p	2	y	y
		p	3	x	x
		p	4	width	width
		p	5	height	height
		p	6	mouseX	mouseX
		p	7	mouseY	mouseY
		p	8	hovering	hovering
		p	9	delta	delta
c	dcr$b	net/minecraft/client/gui/widget/EntryListWidget$Entries
	f	Ljava/util/List;	b	entries
	m	(I)Ldcr$a;	a	get
	m	(ILdcr$a;)Ldcr$a;	a	set
	m	(ILjava/lang/Object;)V	add	add
		p	1	index	index
		p	2	entry	entry
	m	(ILdcr$a;)V	b	add
	m	(I)Ldcr$a;	b	remove
	m	(I)Ljava/lang/Object;	get	get
		p	1	index	index
	m	(I)Ljava/lang/Object;	remove	remove
		p	1	index	index
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
		p	2	entry	entry
c	dcs	net/minecraft/client/gui/widget/SliderWidget
	m	(Ldbr;IIIID)V	<init>	<init>
		p	1	options	options
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	value	value
	m	(IIIID)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	progress	progress
	m	(Z)I	getYImage	getYImage
		p	1	isHovered	isHovered
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DD)V	onClick	onClick
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DDDD)V	onDrag	onDrag
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	deltaX	deltaX
		p	7	deltaY	deltaY
	m	(DD)V	onRelease	onRelease
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Ldbn;II)V	renderBg	renderBg
		p	1	client	client
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(D)V	setValue	setValue
		p	1	mouseX	mouseX
c	dct	net/minecraft/client/gui/widget/AbstractButtonWidget
	m	(IIIILjava/lang/String;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	message	message
	m	(IILjava/lang/String;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	text	text
	m	(DD)Z	clicked	clicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Z)I	getYImage	getYImage
		p	1	isHovered	isHovered
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DD)V	onClick	onClick
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DDDD)V	onDrag	onDrag
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	deltaX	deltaX
		p	7	deltaY	deltaY
	m	(DD)V	onRelease	onRelease
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Ledz;)V	playDownSound	playDownSound
		p	1	soundManager	soundManager
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	renderBg	renderBg
		p	1	client	client
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(II)V	renderToolTip	renderToolTip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
	m	(F)V	setAlpha	setAlpha
		p	1	value	value
	m	(Z)V	setFocused	setFocused
		p	1	focused	focused
	m	(Ljava/lang/String;)V	setMessage	setMessage
		p	1	value	value
	m	(I)V	setWidth	setWidth
		p	1	value	value
c	dcu	net/minecraft/client/gui/hud/BossBarHud
	f	Lsm;	a	BAR_TEX
	f	Ldbn;	b	client
	f	Ljava/util/Map;	c	bossBars
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(IILajb;)V	a	renderBossBar
		p	1	x	x
		p	2	y	y
		p	3	bossBar	bossBar
	m	(Lmk;)V	a	handlePacket
		p	1	packet	packet
	m	()V	a	render
	m	()V	b	clear
	m	()Z	d	shouldPlayDragonMusic
	m	()Z	e	shouldDarkenSky
	m	()Z	f	shouldThickenFog
c	dcv	net/minecraft/client/gui/widget/ButtonWidget
	m	(IIIILjava/lang/String;Ldcv$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	message	message
		p	6	onPress	onPress
c	dcv$a	net/minecraft/client/gui/widget/ButtonWidget$PressAction
	m	(Ldcv;)V	onPress	onPress
		p	1	button	button
c	dcw	net/minecraft/client/gui/hud/ChatHud
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbn;	b	client
	f	Ljava/util/List;	c	messageHistory
	f	Ljava/util/List;	d	messages
	f	Ljava/util/List;	e	visibleMessages
	f	I	f	scrolledLines
	f	Z	g	hasUnreadNewMessages
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Ljava/lang/String;)V	a	addToMessageHistory
		p	1	message	message
	m	(Z)V	a	clear
		p	1	clearHistory	clearHistory
	m	(DD)Llf;	a	getText
		p	1	x	x
		p	3	y	y
	m	(D)V	a	scroll
		p	1	amount	amount
	m	(Llf;)V	a	addMessage
		p	1	message	message
	m	(Llf;IIZ)V	a	addMessage
		p	1	message	message
		p	2	messageId	messageId
		p	3	timestamp	timestamp
	m	(Llf;I)V	a	addMessage
		p	1	message	message
		p	2	messageId	messageId
	m	(I)V	a	render
		p	1	ticks	ticks
	m	()V	a	reset
	m	(D)I	b	getWidth
		p	0	widthOption	widthOption
	m	()Ljava/util/List;	b	getMessageHistory
	m	(I)V	b	removeMessage
		p	1	messageId	messageId
	m	()V	c	resetScroll
	m	(I)D	c	getMessageOpacityMultiplier
		p	0	age	age
	m	(D)I	c	getHeight
		p	0	heightOption	heightOption
	m	()Z	d	isChatFocused
	m	()I	e	getWidth
	m	()I	f	getHeight
	m	()D	g	getChatScale
	m	()I	h	getVisibleLineCount
c	dcx	net/minecraft/client/gui/widget/CheckboxWidget
	f	Z	a	checked
	f	Lsm;	b	TEXTURE
	m	(IIIILjava/lang/String;Z)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	message	message
		p	6	checked	checked
	m	()Z	a	isChecked
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dcy	net/minecraft/client/gui/screen/CommandSuggestor
	f	Ljava/util/regex/Pattern;	a	BACKSLASH_S_PATTERN
	f	Ldbn;	b	client
	f	Ldgb;	c	owner
	f	Lddc;	d	textField
	f	Ldch;	e	textRenderer
	f	Z	f	slashRequired
	f	Z	g	suggestingWhenEmpty
	f	I	h	inWindowIndexOffset
	f	I	i	maxSuggestionSize
	f	Z	j	chatScreenSized
	f	I	k	color
	f	Ljava/util/List;	l	messages
	f	I	m	x
	f	I	n	width
	f	Lcom/mojang/brigadier/ParseResults;	o	parse
	f	Ljava/util/concurrent/CompletableFuture;	p	pendingSuggestions
	f	Ldcy$a;	q	window
	f	Z	r	windowActive
	f	Z	s	completingSuggestions
	m	(Ldbn;Ldgb;Lddc;Ldch;ZZIIZI)V	<init>	<init>
		p	1	client	client
		p	2	owner	owner
		p	3	textField	textField
		p	4	textRenderer	textRenderer
		p	5	slashRequired	slashRequired
		p	6	suggestingWhenEmpty	suggestingWhenEmpty
		p	7	inWindowIndexOffset	inWindowIndexOffset
		p	8	maxSuggestionSize	maxSuggestionSize
		p	9	chatScreenSized	chatScreenSized
		p	10	color	color
	m	(DDI)Z	a	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	()V	a	refresh
	m	(Z)V	a	setWindowActive
		p	1	windowActive	windowActive
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	provideRenderText
		p	1	original	original
		p	2	firstCharacterIndex	firstCharacterIndex
	m	(III)Z	a	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(Lg;)V	a	showUsages
		p	1	formatting	formatting
	m	(D)Z	a	mouseScrolled
		p	1	amount	amount
	m	(Ljava/lang/String;)I	a	getLastPlayerNameStart
		p	0	input	input
	m	(II)V	a	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Ljava/lang/String;	a	highlight
		p	0	parse	parse
		p	1	original	original
		p	2	firstCharacterIndex	firstCharacterIndex
	m	(Z)V	b	showSuggestions
		p	1	narrateFirstSuggestion	narrateFirstSuggestion
	m	()V	b	show
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	getSuggestionSuffix
		p	0	original	original
		p	1	suggestion	suggestion
c	dcy$a	net/minecraft/client/gui/screen/CommandSuggestor$SuggestionWindow
	f	Ldqy;	b	area
	f	Lcom/mojang/brigadier/suggestion/Suggestions;	c	suggestions
	f	Ljava/lang/String;	d	typedText
	f	I	e	inWindowIndex
	f	I	f	selection
	f	Lcvk;	g	mouse
	f	Z	h	completed
	f	I	i	lastNarrationIndex
	m	(Ldcy;IIILcom/mojang/brigadier/suggestion/Suggestions;Z)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	suggestions	suggestions
		p	6	narrateFirstSuggestion	narrateFirstSuggestion
	m	(I)V	a	scroll
		p	1	offset	offset
	m	()V	a	complete
	m	(D)Z	a	mouseScrolled
		p	1	amount	amount
	m	(III)Z	a	mouseClicked
		p	1	x	x
		p	2	y	y
		p	3	button	button
	m	(II)V	a	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
	m	(III)Z	b	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	()V	b	discard
	m	(I)V	b	select
		p	1	index	index
	m	()Ljava/lang/String;	c	getNarration
c	dcz	net/minecraft/client/util/Texts
	m	(Ljava/lang/String;Z)Ljava/lang/String;	a	getRenderChatMessage
		p	0	string	string
		p	1	forceColor	forceColor
	m	(Llf;ILdch;ZZ)Ljava/util/List;	a	wrapLines
		p	0	text	text
		p	1	width	width
		p	2	textRenderer	textRenderer
		p	4	forceColor	forceColor
c	dd	net/minecraft/command/arguments/MobEffectArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_EFFECT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Laki;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laki;	a	getMobEffect
	m	()Ldd;	a	mobEffect
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dda	net/minecraft/client/gui/widget/ElementListWidget
c	dda$a	net/minecraft/client/gui/widget/ElementListWidget$Entry
	f	Ldds;	a	focused
	f	Z	b	dragging
	m	(Z)V	setDragging	setDragging
		p	1	dragging	dragging
	m	(Ldds;)V	setFocused	setFocused
		p	1	focused	focused
c	ddb	net/minecraft/client/gui/hud/DebugHud
	f	Ljava/util/Map;	a	HEIGHT_MAP_TYPES
	f	Ldbn;	b	client
	f	Ldch;	c	fontRenderer
	f	Lcvi;	d	blockHit
	f	Lcvi;	e	fluidHit
	f	Lbjh;	f	pos
	f	Lcal;	g	chunk
	f	Ljava/util/concurrent/CompletableFuture;	h	chunkFuture
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	propertyToString
		p	1	propEntry	propEntry
	m	(J)J	a	toMiB
		p	0	bytes	bytes
	m	(IIII)I	a	getMetricsLineColor
		p	1	value	value
		p	2	greenValue	greenValue
		p	3	yellowValue	yellowValue
		p	4	redValue	redValue
	m	(Labj;IIZ)V	a	drawMetricsData
	m	()V	a	resetChunk
	m	(IIF)I	a	interpolateColor
		p	1	color1	color1
		p	2	color2	color2
		p	3	dt	dt
	m	()V	b	render
	m	()V	c	renderLeftText
	m	()V	d	renderRightText
	m	()Ljava/util/List;	e	getLeftText
	m	()Ljava/util/List;	f	getRightText
	m	()Ljava/lang/String;	g	getServerWorldDebugString
	m	()Lbjw;	h	getWorld
	m	()Lcal;	i	getChunk
	m	()Lcal;	j	getClientChunk
c	ddc	net/minecraft/client/gui/widget/TextFieldWidget
	f	Ldch;	a	textRenderer
	f	Ljava/lang/String;	b	text
	f	I	c	maxLength
	f	I	d	focusedTicks
	f	Z	e	focused
	f	Z	f	focusUnlocked
	f	Z	g	editable
	f	Z	h	selecting
	f	I	i	firstCharacterIndex
	f	I	j	selectionStart
	f	I	k	selectionEnd
	f	I	l	editableColor
	f	I	m	uneditableColor
	f	Ljava/lang/String;	n	suggestion
	f	Ljava/util/function/Consumer;	o	changedListener
	f	Ljava/util/function/Predicate;	p	textPredicate
	f	Ljava/util/function/BiFunction;	q	renderTextProvider
	m	(Ldch;IIIILjava/lang/String;)V	<init>	<init>
		p	1	textRenderer	textRenderer
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	message	message
	m	(Ldch;IIIILddc;Ljava/lang/String;)V	<init>	<init>
		p	1	textRenderer	textRenderer
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	copyFrom	copyFrom
		p	7	message	message
	m	(Ljava/util/function/BiFunction;)V	a	setRenderTextProvider
		p	1	renderTextProvider	renderTextProvider
	m	(I)V	a	eraseWords
		p	1	wordOffset	wordOffset
	m	(Z)V	a	setSelected
		p	1	selected	selected
	m	(Ljava/util/function/Consumer;)V	a	setChangedListener
		p	1	changedListener	changedListener
	m	(Ljava/lang/String;)V	a	setText
		p	1	text	text
	m	(II)I	a	getWordSkipPosition
		p	1	wordOffset	wordOffset
		p	2	cursorPosition	cursorPosition
	m	()V	a	tick
	m	(IIII)V	a	drawSelectionHighlight
		p	1	x1	x1
		p	2	y1	y1
		p	3	x2	x2
		p	4	y2	y2
	m	(IIZ)I	a	getWordSkipPosition
		p	1	wordOffset	wordOffset
		p	2	cursorPosition	cursorPosition
		p	3	skipOverSpaces	skipOverSpaces
	m	(Ljava/util/function/Predicate;)V	a	setTextPredicate
		p	1	textPredicate	textPredicate
	m	()Ljava/lang/String;	b	getText
	m	(Z)V	b	setHasBorder
		p	1	hasBorder	hasBorder
	m	(I)V	b	eraseCharacters
		p	1	characterOffset	characterOffset
	m	(Ljava/lang/String;)V	b	write
		p	1	text	text
	m	(I)I	c	getWordSkipPosition
		p	1	wordOffset	wordOffset
	m	(Z)V	c	setEditable
		p	1	editable	editable
	m	()Ljava/lang/String;	c	getSelectedText
	m	(Ljava/lang/String;)V	c	setSuggestion
		p	1	suggestion	suggestion
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(I)V	d	moveCursor
		p	1	offset	offset
	m	(Z)V	d	setFocusUnlocked
		p	1	focusUnlocked	focusUnlocked
	m	(Ljava/lang/String;)V	d	onChanged
		p	1	newText	newText
	m	()V	d	setCursorToStart
	m	(Z)V	e	setVisible
		p	1	visible	visible
	m	()V	e	setCursorToEnd
	m	(I)V	e	setCursor
		p	1	cursor	cursor
	m	()Z	f	isActive
	m	(I)V	f	setSelectionStart
		p	1	cursor	cursor
	m	(I)V	g	setMaxLength
		p	1	maximumLength	maximumLength
	m	()I	g	getCursor
	m	(I)V	h	setEditableColor
		p	1	color	color
	m	()I	h	getInnerWidth
	m	()Z	i	isVisible
	m	(I)V	i	setUneditableColor
		p	1	color	color
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	()I	j	getMaxLength
	m	(I)V	j	setSelectionEnd
	m	()Z	k	hasBorder
	m	(I)I	k	getCharacterX
		p	1	index	index
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	()Z	l	isEditable
	m	(I)V	l	setX
		p	1	x	x
	m	(I)V	m	erase
		p	1	offset	offset
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	ddd	net/minecraft/client/gui/widget/TexturedButtonWidget
	f	Lsm;	a	texture
	f	I	b	u
	f	I	c	v
	f	I	d	hoveredVOffset
	f	I	e	textureWidth
	f	I	f	textureHeight
	m	(IIIIIIILsm;IILdcv$a;Ljava/lang/String;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	u	u
		p	6	v	v
		p	7	hoveredVOffset	hoveredVOffset
		p	8	texture	texture
		p	9	textureWidth	textureWidth
		p	10	textureHeight	textureHeight
		p	11	pressAction	pressAction
		p	12	text	text
	m	(IIIIIIILsm;IILdcv$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	u	u
		p	6	v	v
		p	7	hoveredVOffset	hoveredVOffset
		p	8	texture	texture
		p	9	textureWidth	textureWidth
		p	10	textureHeight	textureHeight
		p	11	pressAction	pressAction
	m	(IIIIIIILsm;Ldcv$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	u	u
		p	6	v	v
		p	7	hoveredVOffset	hoveredVOffset
		p	8	texture	texture
		p	9	pressAction	pressAction
	m	(II)V	a	setPos
		p	1	x	x
		p	2	y	y
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dde	net/minecraft/client/gui/hud/ClientBossBar
	f	F	h	healthLatest
	f	J	i	timeHealthSet
	m	(Lmk;)V	<init>	<init>
		p	1	packet	packet
	m	(Lmk;)V	a	handlePacket
		p	1	packet	packet
c	ddf	net/minecraft/client/gui/widget/LockButtonWidget
	f	Z	a	locked
	m	(IILdcv$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	action	action
	m	(Z)V	a	setLocked
		p	1	locked	locked
	m	()Z	a	isLocked
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	ddf$a	net/minecraft/client/gui/widget/LockButtonWidget$IconLocation
	f	I	g	u
	f	I	h	v
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	1	v	v
	m	()I	a	getU
	m	()I	b	getV
c	ddg	net/minecraft/client/gui/widget/AlwaysSelectedEntryListWidget
c	ddg$a	net/minecraft/client/gui/widget/AlwaysSelectedEntryListWidget$Entry
c	ddh	net/minecraft/client/gui/widget/OptionButtonWidget
	f	Ldbq;	a	option
	m	(IIIILdbq;Ljava/lang/String;Ldcv$a;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	option	option
		p	6	text	text
		p	7	pressAction	pressAction
c	ddi	net/minecraft/client/gui/widget/ButtonListWidget
	m	(Ldbn;IIIII)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
		p	4	top	top
		p	5	bottom	bottom
		p	6	itemHeight	itemHeight
	m	([Ldbq;)V	a	addAll
		p	1	options	options
	m	(Ldbq;Ldbq;)V	a	addOptionEntry
		p	1	firstOption	firstOption
		p	2	secondOption	secondOption
	m	(Ldbq;)I	a	addSingleOptionEntry
		p	1	option	option
c	ddi$a	net/minecraft/client/gui/widget/ButtonListWidget$ButtonEntry
	f	Ljava/util/List;	a	buttons
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	buttons	buttons
	m	(Ldbr;ILdbq;Ldbq;)Lddi$a;	a	create
		p	0	options	options
		p	1	width	width
		p	2	firstOption	firstOption
		p	3	secondOption	secondOption
	m	(Ldbr;ILdbq;)Lddi$a;	a	create
		p	0	options	options
		p	1	width	width
		p	2	option	option
	m	(IIIFLdct;)V	a	method_18622
		p	4	button	button
c	ddj	net/minecraft/client/gui/hud/PlayerListHud
	f	Lcom/google/common/collect/Ordering;	a	ENTRY_ORDERING
	f	Ldbn;	b	client
	f	Ldci;	c	inGameHud
	f	Llf;	d	footer
	f	Llf;	e	header
	f	J	f	showTime
	f	Z	g	visible
	m	(Ldbn;Ldci;)V	<init>	<init>
		p	1	client	client
		p	2	inGameHud	inGameHud
	m	(Z)V	a	tick
		p	1	visible	visible
	m	()V	a	clear
	m	(Llf;)V	a	setFooter
		p	1	footer	footer
	m	(ILcwl;Lcwi;)V	a	render
		p	1	width	width
		p	2	scoreboard	scoreboard
		p	3	playerListScoreboardObjective	playerListScoreboardObjective
	m	(Ldns;)Llf;	a	getPlayerName
		p	1	playerEntry	playerEntry
	m	(Lcwi;ILjava/lang/String;IILdns;)V	a	renderScoreboardObjective
	m	(IIILdns;)V	a	renderLatencyIcon
		p	3	y	y
		p	4	playerEntry	playerEntry
	m	(Llf;)V	b	setHeader
		p	1	header	header
c	ddj$a	net/minecraft/client/gui/hud/PlayerListHud$EntryOrderComparator
	m	(Ldns;Ldns;)I	a	compare
c	ddk	net/minecraft/client/gui/widget/ListWidget
	f	I	x0	left
	f	I	x1	right
	f	I	y0	top
	f	I	y1	bottom
	f	D	yo	scroll
	m	(Ldbn;IIIII)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
		p	4	top	top
		p	5	bottom	bottom
		p	6	itemHeight	itemHeight
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(DD)Z	isMouseInList	isMouseInList
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(I)Z	isSelectedItem	isSelectedItem
		p	1	index	index
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(IIIIIIF)V	renderItem	renderItem
		p	1	index	index
		p	2	y	y
	m	(IIIIF)V	renderList	renderList
		p	1	x	x
		p	2	y	y
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(I)V	scroll	scroll
		p	1	amount	amount
	m	(IIDD)Z	selectItem	selectItem
		p	1	index	index
		p	2	button	button
		p	3	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(I)V	setLeftPos	setLeftPos
		p	1	x	x
	m	(IIIF)V	updateItemPosition	updateItemPosition
		p	1	index	index
	m	(IIII)V	updateSize	updateSize
		p	1	width	width
		p	2	height	height
		p	3	y	y
		p	4	bottom	bottom
c	ddl	net/minecraft/client/gui/widget/GameOptionSliderWidget
	f	Ldbt;	a	option
	m	(Ldbr;IIIILdbt;)V	<init>	<init>
		p	1	gameOptions	gameOptions
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	option	option
c	ddm	net/minecraft/client/gui/widget/ToggleButtonWidget
	f	Lsm;	a	texture
	f	Z	b	toggled
	f	I	c	u
	f	I	d	v
	f	I	e	pressedUOffset
	f	I	f	hoverVOffset
	m	(IIIIZ)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	toggled	toggled
	m	()Z	a	isToggled
	m	(Z)V	a	setToggled
		p	1	toggled	toggled
	m	(IIIILsm;)V	a	setTextureUV
		p	1	u	u
		p	2	v	v
		p	3	pressedUOffset	pressedUOffset
		p	4	hoverVOffset	hoverVOffset
		p	5	texture	texture
	m	(II)V	a	setPos
		p	1	x	x
		p	2	y	y
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	ddn	net/minecraft/client/gui/hud/SubtitlesHud
	f	Ldbn;	a	client
	f	Ljava/util/List;	b	entries
	f	Z	c	enabled
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	()V	a	render
c	ddn$a	net/minecraft/client/gui/hud/SubtitlesHud$SubtitleEntry
	f	Ljava/lang/String;	b	text
	f	J	c	time
	f	Lcvl;	d	pos
	m	(Lddn;Ljava/lang/String;Lcvl;)V	<init>	<init>
		p	2	text	text
		p	3	pos	pos
	m	(Lcvl;)V	a	reset
		p	1	pos	pos
	m	()Ljava/lang/String;	a	getText
	m	()J	b	getTime
	m	()Lcvl;	c	getPosition
c	ddo	net/minecraft/client/gui/widget/SoundSliderWidget
	f	Laaj;	a	category
	m	(Ldbn;IILaaj;I)V	<init>	<init>
		p	1	client	client
		p	2	x	x
		p	3	y	y
		p	4	category	category
		p	5	width	width
c	ddp	net/minecraft/client/gui/Drawable
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	ddq	net/minecraft/client/gui/AbstractParentElement
	m	(Z)V	setDragging	setDragging
		p	1	dragging	dragging
	m	(Ldds;)V	setFocused	setFocused
		p	1	focused	focused
c	ddr	net/minecraft/client/gui/ParentElement
	m	(Ldds;)V	a	setInitialFocus
		p	1	element	element
	m	(DD)Ljava/util/Optional;	a	hoveredElement
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Ldds;)V	b	focusOn
		p	1	element	element
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(Z)V	setDragging	setDragging
		p	1	dragging	dragging
	m	(Ldds;)V	setFocused	setFocused
		p	1	focused	focused
c	dds	net/minecraft/client/gui/Element
	m	(III)Z	a	keyReleased
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DD)V	b	mouseMoved
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Z)Z	changeFocus	changeFocus
		p	1	lookForwards	lookForwards
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	amount	amount
c	ddv	net/minecraft/client/gui/hud/SpectatorHud
	f	Lsm;	a	SPECTATOR_TEX
	f	Lsm;	b	WIDGETS_TEX
	f	Ldbn;	c	client
	f	J	d	lastInteractionTime
	f	Ldjp;	e	spectatorMenu
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(I)V	a	selectSlot
		p	1	slot	slot
	m	(FIILdjt;)V	a	renderSpectatorMenu
		p	1	height	height
		p	2	x	x
		p	4	state	state
	m	(F)V	a	render
		p	1	tickDelta	tickDelta
	m	(IIFFLdjr;)V	a	renderSpectatorCommand
		p	1	slot	slot
		p	2	x	x
		p	3	y	y
		p	4	alpha	alpha
		p	5	command	command
	m	()V	a	render
	m	(D)V	a	cycleSlot
		p	1	offset	offset
	m	()Z	b	isOpen
	m	()V	c	useSelectedCommand
	m	()F	d	getSpectatorMenuHeight
c	ddx	net/minecraft/client/toast/AdvancementToast
	f	Lu;	c	advancement
	f	Z	d	soundPlayed
c	ddy	net/minecraft/client/toast/RecipeToast
	f	Ljava/util/List;	c	recipes
	f	J	d	startTime
	f	Z	e	justUpdated
	m	(Lbgw;)V	a	addRecipe
	m	(Ldeb;Lbgw;)V	a	show
c	ddz	net/minecraft/client/toast/SystemToast
	f	Lddz$a;	c	type
	f	Ljava/lang/String;	d	title
	f	Ljava/lang/String;	e	description
	f	J	f	startTime
	f	Z	g	justUpdated
	m	(Lddz$a;Llf;Llf;)V	<init>	<init>
		p	2	title	title
		p	3	description	description
	m	()Lddz$a;	a	getType
	m	(Llf;Llf;)V	a	setContent
		p	1	title	title
		p	2	description	description
	m	(Ldeb;Lddz$a;Llf;Llf;)V	a	show
		p	2	title	title
		p	3	description	description
c	ddz$a	net/minecraft/client/toast/SystemToast$Type
c	de	net/minecraft/command/arguments/NbtPathArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_PATH_NODE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	NOTHING_FOUND_EXCEPTION
	f	Ljava/util/Collection;	c	EXAMPLES
	m	()Lde;	a	nbtPath
	m	(Lcom/mojang/brigadier/StringReader;)Lde$h;	a	parse
	m	(C)Z	a	isNameCharacter
		p	0	c	c
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lde$i;	a	readCompoundChildNode
		p	0	reader	reader
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;Z)Lde$i;	a	parseNode
		p	0	reader	reader
		p	1	root	root
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lde$h;	a	getNbtPath
		p	0	context	context
		p	1	name	name
	m	(Ljt;)Ljava/util/function/Predicate;	b	getPredicate
		p	0	filter	filter
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readName
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
		p	1	reader	reader
c	de$a	net/minecraft/command/arguments/NbtPathArgumentType$AllListElementNode
	f	Lde$a;	a	INSTANCE
c	de$b	net/minecraft/command/arguments/NbtPathArgumentType$NamedNode
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
c	de$c	net/minecraft/command/arguments/NbtPathArgumentType$IndexedListElementNode
	f	I	a	index
	m	(I)V	<init>	<init>
		p	1	index	index
c	de$e	net/minecraft/command/arguments/NbtPathArgumentType$FilteredListElementNode
	f	Ljt;	a	filter
	f	Ljava/util/function/Predicate;	b	predicate
	m	(Ljt;)V	<init>	<init>
		p	1	filter	filter
c	de$f	net/minecraft/command/arguments/NbtPathArgumentType$FilteredNamedNode
	f	Ljava/lang/String;	a	name
	f	Ljt;	b	filter
	f	Ljava/util/function/Predicate;	c	predicate
	m	(Ljava/lang/String;Ljt;)V	<init>	<init>
		p	1	name	name
		p	2	filter	filter
c	de$g	net/minecraft/command/arguments/NbtPathArgumentType$FilteredRootNode
	f	Ljava/util/function/Predicate;	a	matcher
	m	(Ljt;)V	<init>	<init>
		p	1	filter	filter
c	de$h	net/minecraft/command/arguments/NbtPathArgumentType$NbtPath
	f	Ljava/lang/String;	a	string
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	nodeEndIndices
	f	[Lde$i;	c	nodes
	m	(Ljava/lang/String;[Lde$i;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1	string	string
		p	2	nodes	nodes
		p	3	nodeEndIndices	nodeEndIndices
	m	(Lkj;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrInit
		p	1	tag	tag
		p	2	source	source
	m	(Lde$i;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNothingFoundException
		p	1	node	node
	m	(Lkj;)Ljava/util/List;	a	get
		p	1	tag	tag
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	forEach
		p	0	tags	tags
		p	1	operation	operation
	m	(Lkj;Ljava/util/function/Supplier;)I	b	put
		p	1	tag	tag
		p	2	source	source
	m	(Lkj;)I	b	count
		p	1	tag	tag
	m	(Lkj;)I	c	remove
		p	1	tag	tag
	m	(Lkj;)Ljava/util/List;	d	getTerminals
		p	1	start	start
c	de$i	net/minecraft/command/arguments/NbtPathArgumentType$PathNode
	m	(Ljava/util/List;)Ljava/util/List;	a	get
		p	1	tags	tags
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	process
		p	1	tags	tags
		p	2	action	action
	m	(Lkj;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrInit
		p	1	current	current
		p	2	source	source
		p	3	results	results
	m	(Lkj;Ljava/util/List;)V	a	get
		p	1	current	current
		p	2	results	results
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrInit
		p	1	tags	tags
		p	2	supplier	supplier
	m	(Ljava/util/function/Supplier;Lkj;Ljava/util/List;)V	a	method_9379
		p	2	current	current
		p	3	results	results
	m	(Lkj;)I	a	clear
		p	1	current	current
	m	(Lkj;Ljava/util/function/Supplier;)I	a	set
		p	1	current	current
		p	2	source	source
	m	()Lkj;	a	init
c	dea	net/minecraft/client/toast/Toast
	f	Lsm;	a	TOASTS_TEX
	m	(Ldeb;J)Ldea$a;	a	draw
		p	1	manager	manager
		p	2	currentTime	currentTime
	m	()Ljava/lang/Object;	b	getType
c	dea$a	net/minecraft/client/toast/Toast$Visibility
	f	Laah;	c	sound
	m	(Ledz;)V	a	playSound
c	deb	net/minecraft/client/toast/ToastManager
	f	Ldbn;	a	client
	f	[Ldeb$a;	b	visibleEntries
	f	Ljava/util/Deque;	c	toastQueue
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	()V	a	draw
	m	(Ljava/lang/Class;Ljava/lang/Object;)Ldea;	a	getToast
		p	1	toastClass	toastClass
		p	2	type	type
	m	(Ldea;)V	a	add
	m	()V	b	clear
	m	()Ldbn;	c	getGame
c	deb$a	net/minecraft/client/toast/ToastManager$Entry
	f	Ldea;	b	instance
	f	Ldea$a;	e	visibility
	m	(Ldeb;Ldea;)V	<init>	<init>
		p	1	instance	instance
	m	(II)Z	a	draw
		p	1	x	x
		p	2	y	y
	m	(J)F	a	getDissapearProgress
		p	1	time	time
	m	()Ldea;	a	getInstance
c	dec	net/minecraft/client/toast/TutorialToast
	f	Ldec$a;	c	type
	f	Ljava/lang/String;	d	title
	f	Ljava/lang/String;	e	description
	f	Ldea$a;	f	visibility
	f	J	g	lastTime
	f	F	h	lastProgress
	f	F	i	progress
	f	Z	j	hasProgressBar
	m	(Ldec$a;Llf;Llf;Z)V	<init>	<init>
		p	2	title	title
		p	3	description	description
		p	4	hasProgressBar	hasProgressBar
	m	(F)V	a	setProgress
		p	1	progress	progress
	m	()V	a	hide
c	dec$a	net/minecraft/client/toast/TutorialToast$Type
	f	I	f	textureSlotX
	f	I	g	textureSlotY
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3	textureSlotX	textureSlotX
		p	4	textureSlotY	textureSlotY
	m	(Ldcj;II)V	a	drawIcon
		p	2	x	x
		p	3	y	y
c	dee	net/minecraft/client/font/BlankFont
c	def	net/minecraft/client/font/FontManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	textRenderers
	f	Leak;	c	textureManager
	f	Z	d	forceUnicodeFont
	f	Lyw;	e	resourceReloadListener
	m	(Leak;Z)V	<init>	<init>
		p	1	manager	manager
	m	(ZLjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	a	setForceUnicodeFont
		p	1	forceUnicodeFont	forceUnicodeFont
		p	2	prepareExecutor	prepareExecutor
		p	3	applyExecutor	applyExecutor
	m	()Lyw;	a	getResourceReloadListener
	m	(Lsm;)Ldch;	a	getTextRenderer
c	def$1	net/minecraft/client/font/FontManager$1
	m	(Ljava/util/Map;Lzb;Laio;)V	a	apply
	m	(Lzb;Laio;)Ljava/util/Map;	a	prepare
c	deg	net/minecraft/client/font/FontStorage
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldek;	b	EMPTY_GLYPH_RENDERER
	f	Lcwy;	c	SPACE
	f	Ljava/util/Random;	d	RANDOM
	f	Leak;	e	textureManager
	f	Lsm;	f	id
	f	Ldej;	g	blankGlyphRenderer
	f	Ldej;	h	whiteRectangleGlyphRenderer
	f	Ljava/util/List;	i	fonts
	f	Lit/unimi/dsi/fastutil/chars/Char2ObjectMap;	j	glyphRendererCache
	f	Lit/unimi/dsi/fastutil/chars/Char2ObjectMap;	k	glyphCache
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	l	charactersByWidth
	f	Ljava/util/List;	m	glyphAtlases
	m	(Leak;Lsm;)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	id	id
	m	()Ldej;	a	getRectangleRenderer
	m	(C)Lcwy;	a	getGlyph
		p	1	character	character
	m	(Lcwy;)Ldej;	a	getObfuscatedGlyphRenderer
		p	1	glyph	glyph
	m	(Ljava/util/List;)V	a	setFonts
		p	1	fonts	fonts
	m	(Lcxa;)Ldej;	a	getGlyphRenderer
		p	1	c	c
	m	(C)Ldej;	b	getGlyphRenderer
		p	1	character	character
	m	()V	c	closeGlyphAtlases
	m	(C)Lcxa;	c	getRenderableGlyph
		p	1	character	character
c	deh	net/minecraft/client/font/GlyphAtlasTexture
	f	Lsm;	d	id
	f	Z	g	hasColor
	f	Ldeh$a;	h	rootSlot
	m	(Lsm;Z)V	<init>	<init>
		p	1	id	id
		p	2	hasColor	hasColor
	m	()Lsm;	a	getId
	m	(Lcxa;)Ldej;	a	getGlyphRenderer
		p	1	glyph	glyph
c	deh$a	net/minecraft/client/font/GlyphAtlasTexture$Slot
	f	I	a	x
	f	I	b	y
	f	I	c	width
	f	I	d	height
	f	Ldeh$a;	e	subSlot1
	f	Ldeh$a;	f	subSlot2
	f	Z	g	isOccupied
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Lcxa;)Ldeh$a;	a	findSlotFor
		p	1	glyph	glyph
c	dei	net/minecraft/client/util/SelectionManager
	f	Ldbn;	a	client
	f	Ldch;	b	fontRenderer
	f	Ljava/util/function/Supplier;	c	stringGetter
	f	Ljava/util/function/Consumer;	d	stringSetter
	f	I	e	maxLength
	f	I	f	selectionStart
	f	I	g	selectionEnd
	m	(Ldbn;Ljava/util/function/Supplier;Ljava/util/function/Consumer;I)V	<init>	<init>
		p	1	client	client
		p	2	getter	getter
		p	3	setter	setter
		p	4	maxLength	maxLength
	m	(Ljava/lang/String;)V	a	insert
	m	(C)Z	a	insert
	m	(I)Z	a	handleSpecialKey
		p	1	keyCode	keyCode
	m	()V	b	moveCaretToEnd
	m	()I	c	getSelectionStart
	m	()I	d	getSelectionEnd
	m	()Ljava/lang/String;	e	getSelectedText
	m	()V	f	deleteSelectedText
c	dej	net/minecraft/client/font/GlyphRenderer
	f	F	c	uMin
	f	F	d	uMax
	f	F	e	vMin
	f	F	f	vMax
	f	F	g	xMin
	f	F	h	xMax
	f	F	i	yMin
	f	F	j	yMax
	m	(Ldej$a;Lb;Lcyo;I)V	a	drawRectangle
		p	1	rectangle	rectangle
		p	2	matrix	matrix
		p	3	vertexConsumer	vertexConsumer
		p	4	light	light
	m	(ZFFLb;Lcyo;FFFFI)V	a	draw
		p	1	italic	italic
		p	2	x	x
		p	3	y	y
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
		p	9	alpha	alpha
		p	10	light	light
c	dej$a	net/minecraft/client/font/GlyphRenderer$Rectangle
	f	F	a	xMin
	f	F	b	yMin
	f	F	c	xMax
	f	F	d	yMax
	f	F	e	zIndex
	f	F	f	red
	f	F	g	green
	f	F	h	blue
	f	F	i	alpha
	m	(FFFFFFFFF)V	<init>	<init>
		p	1	xMin	xMin
		p	2	yMin	yMin
		p	3	xMax	xMax
		p	4	yMax	yMax
		p	5	zndex	zndex
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
		p	9	alpha	alpha
c	dek	net/minecraft/client/font/EmptyGlyphRenderer
c	del	net/minecraft/client/font/BlankGlyph
	f	Lcxr;	b	IMAGE
c	dem	net/minecraft/client/font/WhiteRectangleGlyph
	f	Lcxr;	b	IMAGE
c	dep	net/minecraft/client/font/TextureFont
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcxr;	b	image
	f	Lit/unimi/dsi/fastutil/chars/Char2ObjectMap;	c	glyphs
	m	(Lcxr;Lit/unimi/dsi/fastutil/chars/Char2ObjectMap;)V	<init>	<init>
		p	1	image	image
		p	2	glyphs	glyphs
c	dep$a	net/minecraft/client/font/TextureFont$Loader
	f	Lsm;	a	filename
	f	Ljava/util/List;	b	chars
	f	I	c	height
	f	I	d	ascent
	m	(Lsm;IILjava/util/List;)V	<init>	<init>
		p	1	id	id
		p	2	height	height
		p	3	ascent	ascent
		p	4	chars	chars
	m	(Lcom/google/gson/JsonObject;)Ldep$a;	a	fromJson
		p	0	json	json
	m	(Lcxr;IIII)I	a	findCharacterStartX
		p	1	image	image
		p	2	characterWidth	characterWidth
		p	3	characterHeight	characterHeight
		p	4	charPosX	charPosX
		p	5	charPosY	charPosY
c	dep$b	net/minecraft/client/font/TextureFont$TextureFontGlyph
	f	F	a	scaleFactor
	f	Lcxr;	b	image
	f	I	c	x
	f	I	d	y
	f	I	e	width
	f	I	f	height
	f	I	g	advance
	f	I	h	ascent
	m	(FLcxr;IIIIII)V	<init>	<init>
		p	1	scaleFactor	scaleFactor
		p	2	image	image
		p	3	x	x
		p	4	y	y
		p	5	width	width
		p	6	height	height
		p	7	advance	advance
		p	8	ascent	ascent
c	deq	net/minecraft/client/font/FontLoader
	m	(Lzb;)Lcwz;	a	load
		p	1	manager	manager
c	der	net/minecraft/client/font/FontType
	f	Ljava/util/Map;	d	REGISTRY
	f	Ljava/lang/String;	e	id
	f	Ljava/util/function/Function;	f	loaderFactory
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	3	id	id
		p	4	factory	factory
	m	(Lcom/google/gson/JsonObject;)Ldeq;	a	createLoader
		p	1	json	json
	m	(Ljava/lang/String;)Lder;	a	byId
		p	0	id	id
c	des	net/minecraft/client/font/UnicodeTextureFont
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lzb;	b	resourceManager
	f	[B	c	sizes
	f	Ljava/lang/String;	d	template
	f	Ljava/util/Map;	e	images
	m	(Lzb;[BLjava/lang/String;)V	<init>	<init>
		p	1	resourceManager	resourceManager
		p	2	sizes	sizes
		p	3	template	template
	m	(B)I	a	getStart
		p	0	size	size
	m	(Lsm;)Lcxr;	a	getGlyphImage
		p	1	glyphId	glyphId
	m	(B)I	b	getEnd
		p	0	size	size
	m	(C)Lsm;	b	getImageId
		p	1	character	character
c	des$a	net/minecraft/client/font/UnicodeTextureFont$Loader
	f	Lsm;	a	sizes
	f	Ljava/lang/String;	b	template
	m	(Lsm;Ljava/lang/String;)V	<init>	<init>
		p	1	sizes	sizes
		p	2	template	template
	m	(Lcom/google/gson/JsonObject;)Ldeq;	a	fromJson
		p	0	json	json
c	des$b	net/minecraft/client/font/UnicodeTextureFont$UnicodeTextureGlyph
	f	I	a	width
	f	I	b	height
	f	I	c	unpackSkipPixels
	f	I	d	unpackSkipRows
	f	Lcxr;	e	image
	m	(IIIILcxr;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
		p	5	image	image
c	det	net/minecraft/client/font/TrueTypeFontLoader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lsm;	b	filename
	f	F	c	size
	f	F	d	oversample
	f	F	e	shiftX
	f	F	f	shiftY
	f	Ljava/lang/String;	g	excludedCharacters
	m	(Lsm;FFFFLjava/lang/String;)V	<init>	<init>
		p	1	filename	filename
		p	2	size	size
		p	3	oversample	oversample
		p	4	shiftX	shiftX
		p	5	shiftY	shiftY
		p	6	excludedCharacters	excludedCharacters
	m	(Lcom/google/gson/JsonObject;)Ldeq;	a	fromJson
		p	0	json	json
c	dew	net/minecraft/client/gui/screen/options/AccessibilityScreen
	f	[Ldbq;	c	OPTIONS
	f	Ldct;	d	narratorButton
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	()V	a	setNarratorMessage
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dex	net/minecraft/client/gui/screen/NoticeScreen
	f	Llf;	a	notice
	f	Ljava/lang/String;	b	buttonString
	f	Ljava/lang/Runnable;	c	actionHandler
	f	Ljava/util/List;	d	noticeLines
	m	(Ljava/lang/Runnable;Llf;Llf;)V	<init>	<init>
		p	1	actionHandler	actionHandler
		p	2	title	title
		p	3	notice	notice
	m	(Ljava/lang/Runnable;Llf;Llf;Ljava/lang/String;)V	<init>	<init>
		p	1	actionHandler	actionHandler
		p	2	title	title
		p	3	notice	notice
		p	4	buttonString	buttonString
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dey	net/minecraft/client/gui/screen/BackupPromptScreen
	f	Ldey$a;	a	callback
	f	Ldgb;	b	parent
	f	Llf;	c	subtitle
	f	Z	d	showEraseCacheCheckbox
	f	Ljava/util/List;	e	wrappedText
	f	Ljava/lang/String;	f	eraseCacheText
	f	Ljava/lang/String;	g	confirmText
	f	Ljava/lang/String;	h	skipText
	f	Ljava/lang/String;	i	cancelText
	f	Ldcx;	j	eraseCacheCheckbox
	m	(Ldgb;Ldey$a;Llf;Llf;Z)V	<init>	<init>
		p	1	parent	parent
		p	2	callback	callback
		p	3	title	title
		p	4	subtitle	subtitle
		p	5	showEraseCacheCheckBox	showEraseCacheCheckBox
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dey$a	net/minecraft/client/gui/screen/BackupPromptScreen$Callback
c	dez	net/minecraft/client/gui/screen/options/ChatOptionsScreen
	f	[Ldbq;	c	OPTIONS
	f	Ldct;	d	narratorOptionButton
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
	m	()V	a	setNarratorMessage
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	df	net/minecraft/command/arguments/NbtTagArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lkj;	a	getTag
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lkj;	a	parse
	m	()Ldf;	a	nbtTag
c	dfa	net/minecraft/client/gui/screen/ChatScreen
	f	Lddc;	a	chatField
	f	I	c	messageHistorySize
	f	Ljava/lang/String;	d	originalChatText
	f	Ldcy;	e	commandSuggestor
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	originalChatText	originalChatText
	m	(I)V	a	setChatFromHistory
	m	(Ljava/lang/String;)V	a	onChatFieldUpdate
		p	1	chatText	chatText
	m	(Ljava/lang/String;)V	b	setText
		p	1	text	text
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dfb	net/minecraft/client/gui/screen/ConfirmChatLinkScreen
	f	Ljava/lang/String;	d	warning
	f	Ljava/lang/String;	e	copy
	f	Ljava/lang/String;	f	link
	f	Z	g	drawWarning
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ljava/lang/String;Z)V	<init>	<init>
		p	1	callback	callback
		p	2	link	link
		p	3	trusted	trusted
	m	()V	a	copyToClipboard
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfc	net/minecraft/client/gui/screen/ConfirmScreen
	f	Ljava/lang/String;	a	yesTranslated
	f	Ljava/lang/String;	b	noTranslated
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	c	callback
	f	Llf;	d	message
	f	Ljava/util/List;	e	messageSplit
	f	I	f	buttonEnableTimer
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Llf;Llf;)V	<init>	<init>
		p	1	callback	callback
		p	2	title	title
		p	3	message	message
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Llf;Llf;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	callback	callback
		p	2	title	title
		p	3	message	message
		p	4	yesTranslated	yesTranslated
		p	5	noTranslated	noTranslated
	m	(I)V	a	disableButtons
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfd	net/minecraft/client/gui/screen/ConnectScreen
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	CONNECTOR_THREADS_COUNT
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lkt;	c	connection
	f	Z	d	connectingCancelled
	f	Ldgb;	e	parent
	f	Llf;	f	status
	f	J	g	narratorTimer
	m	(Ldgb;Ldbn;Ldnu;)V	<init>	<init>
		p	1	parent	parent
		p	2	client	client
		p	3	entry	entry
	m	(Ldgb;Ldbn;Ljava/lang/String;I)V	<init>	<init>
		p	1	parent	parent
		p	2	client	client
		p	3	address	address
		p	4	port	port
	m	(Ljava/lang/String;I)V	a	connect
		p	1	address	address
		p	2	port	port
	m	(Llf;)V	a	setStatus
		p	1	status	status
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfe	net/minecraft/client/gui/screen/CustomizeBuffetLevelScreen
	f	Ljava/util/List;	a	CHUNK_GENERATOR_TYPES
	f	Ldjh;	b	parent
	f	Ljt;	c	generatorOptionsTag
	f	Ldfe$a;	d	biomeSelectionList
	f	I	e	biomeListLength
	f	Ldcv;	f	confirmButton
	m	(Ldjh;Ljt;)V	<init>	<init>
		p	1	parent	parent
		p	2	generatorOptionsTag	generatorOptionsTag
	m	()V	a	refreshConfirmButton
	m	()V	b	initListSelectLogic
	m	()Ljt;	c	getGeneratorTag
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfe$a	net/minecraft/client/gui/screen/CustomizeBuffetLevelScreen$BuffetBiomesListWidget
	m	(Ldfe$a$a;)V	a	setSelected
c	dfe$a$a	net/minecraft/client/gui/screen/CustomizeBuffetLevelScreen$BuffetBiomesListWidget$BuffetBiomeItem
	f	Lsm;	b	biome
	m	(Ldfe$a;Lsm;)V	<init>	<init>
		p	2	biome	biome
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	dff	net/minecraft/client/gui/screen/CustomizeFlatLevelScreen
	f	Ldjh;	a	parent
	f	Lciy;	b	config
	f	Ljava/lang/String;	c	tileText
	f	Ljava/lang/String;	d	heightText
	f	Ldff$a;	e	layers
	f	Ldcv;	f	widgetButtonRemoveLayer
	m	(Ldjh;Ljt;)V	<init>	<init>
		p	1	parent	parent
		p	2	generatorOptions	generatorOptions
	m	(Ljava/lang/String;)V	a	setConfigString
		p	1	config	config
	m	()Ljava/lang/String;	a	getConfigString
	m	(Ljt;)V	a	setConfigTag
		p	1	config	config
	m	()Ljt;	b	getConfigTag
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dff$a	net/minecraft/client/gui/screen/CustomizeFlatLevelScreen$SuperflatLayersListWidget
	m	(Ldff$a$a;)V	a	setSelected
c	dff$a$a	net/minecraft/client/gui/screen/CustomizeFlatLevelScreen$SuperflatLayersListWidget$SuperflatLayerItem
	m	(IILben;)V	a	method_19375
		p	1	x	x
		p	2	y	y
	m	(II)V	a	method_19373
		p	1	x	x
		p	2	y	y
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	dfg	net/minecraft/client/gui/screen/DeathScreen
	f	I	a	ticksSinceDeath
	f	Llf;	b	message
	f	Z	c	isHardcore
	m	(Llf;Z)V	<init>	<init>
		p	1	message	message
		p	2	isHardcore	isHardcore
	m	(I)Llf;	a	getTextComponentUnderMouse
		p	1	mouseX	mouseX
	m	()V	a	quitLevel
	m	(Z)V	a	onConfirmQuit
		p	1	quit	quit
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfh	net/minecraft/client/gui/screen/DemoScreen
	f	Lsm;	a	DEMO_BG
	m	(Ldcv;)V	a	method_19810
		p	1	buttonWidget	buttonWidget
	m	(Ldcv;)V	b	method_19811
		p	0	buttonWidget	buttonWidget
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfi	net/minecraft/client/gui/screen/DirectConnectScreen
	f	Ldcv;	a	selectServerButton
	f	Ldnu;	b	serverEntry
	f	Lddc;	c	addressField
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	d	callback
	f	Ldgb;	e	parent
	m	(Ldgb;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldnu;)V	<init>	<init>
		p	1	parent	parent
		p	2	callback	callback
		p	3	server	server
	m	()V	a	saveAndClose
	m	(Ljava/lang/String;)V	a	method_19376
		p	1	text	text
	m	()V	b	onAddressFieldChanged
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dfj	net/minecraft/client/gui/screen/DisconnectedScreen
	f	Llf;	a	reason
	f	Ljava/util/List;	b	reasonFormatted
	f	Ldgb;	c	parent
	f	I	d	reasonHeight
	m	(Ldgb;Ljava/lang/String;Llf;)V	<init>	<init>
		p	1	parent	parent
		p	2	title	title
		p	3	reason	reason
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfk	net/minecraft/client/gui/screen/AddServerScreen
	f	Ldcv;	a	buttonAdd
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	b	callback
	f	Ldnu;	c	server
	f	Lddc;	d	addressField
	f	Lddc;	e	serverNameField
	f	Ldcv;	f	resourcePackOptionButton
	f	Ldgb;	g	parent
	f	Ljava/util/function/Predicate;	h	addressTextFilter
	m	(Ldgb;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldnu;)V	<init>	<init>
		p	1	parent	parent
		p	2	callback	callback
		p	3	server	server
	m	(Ljava/lang/String;)V	a	onClose
		p	1	text	text
	m	()V	a	addAndClose
	m	()V	b	updateButtonActiveState
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dfl	net/minecraft/client/gui/screen/FatalErrorScreen
	f	Ljava/lang/String;	a	message
	m	(Llf;Ljava/lang/String;)V	<init>	<init>
		p	1	title	title
		p	2	message	message
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfm	net/minecraft/client/gui/screen/SaveLevelScreen
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfn	net/minecraft/client/gui/screen/SleepingChatScreen
	m	()V	a	stopSleeping
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
c	dfo	net/minecraft/client/gui/screen/options/LanguageOptionsScreen
	f	Ldfo$a;	c	languageSelectionList
	f	Lebf;	d	languageManager
	f	Lddh;	e	forceUnicodeButton
	f	Ldcv;	f	doneButton
	m	(Ldgb;Ldbr;Lebf;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
		p	3	languageManager	languageManager
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfo$a	net/minecraft/client/gui/screen/options/LanguageOptionsScreen$LanguageSelectionListWidget
	m	(Ldfo;Ldbn;)V	<init>	<init>
		p	2	client	client
	m	(Ldfo$a$a;)V	a	setSelected
c	dfo$a$a	net/minecraft/client/gui/screen/options/LanguageOptionsScreen$LanguageSelectionListWidget$LanguageEntry
	f	Lebe;	b	languageDefinition
	m	(Ldfo$a;Lebe;)V	<init>	<init>
		p	2	languageDefinition	languageDefinition
	m	()V	a	onPressed
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	dfp	net/minecraft/client/gui/screen/LevelLoadingScreen
	f	Lxq;	a	progressProvider
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	STATUS_TO_COLOR
	m	(Lxq;)V	<init>	<init>
		p	1	progressProvider	progressProvider
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	method_17537
		p	0	map	map
	m	(Lxq;IIII)V	a	drawChunkMap
		p	0	progressProvider	progressProvider
		p	1	centerX	centerX
		p	2	centerY	centerY
		p	3	chunkSize	chunkSize
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfq	net/minecraft/client/gui/screen/SplashScreen
	f	Lsm;	a	LOGO
	f	Ldbn;	b	client
	f	Lyy;	c	reloadMonitor
	f	Ljava/util/function/Consumer;	d	exceptionHandler
	f	Z	e	reloading
	f	F	f	progress
	f	J	g	applyCompleteTime
	f	J	h	prepareCompleteTime
	m	(Ldbn;Lyy;Ljava/util/function/Consumer;Z)V	<init>	<init>
		p	1	client	client
		p	2	monitor	monitor
		p	3	exceptionHandler	exceptionHandler
		p	4	reloading	reloading
	m	(Ldbn;)V	a	init
		p	0	client	client
	m	(IIIIF)V	a	renderProgressBar
		p	1	minX	minX
		p	2	minY	minY
		p	3	maxX	maxX
		p	4	maxY	maxY
		p	5	progress	progress
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfq$a	net/minecraft/client/gui/screen/SplashScreen$LogoTexture
c	dfr	net/minecraft/client/gui/screen/Screens
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	PROVIDERS
	m	(Lbbo;)Ldfr$a;	a	getProvider
		p	0	type	type
	m	(Lbbo;Ldfr$a;)V	a	register
		p	0	type	type
	m	(Lbbo;Ldbn;ILlf;)V	a	open
		p	0	type	type
		p	1	client	client
		p	2	id	id
		p	3	name	name
	m	()Z	a	validateScreens
c	dfr$a	net/minecraft/client/gui/screen/Screens$Provider
	m	(Llf;Lbbo;Ldbn;I)V	a	open
		p	1	name	name
		p	2	type	type
		p	3	client	client
		p	4	id	id
c	dfs	net/minecraft/client/gui/screen/options/MouseOptionsScreen
	f	Lddi;	c	buttonList
	f	[Ldbq;	d	OPTIONS
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dft	net/minecraft/client/gui/screen/SettingsScreen
	f	[Ldbq;	a	OPTIONS
	f	Ldgb;	b	parent
	f	Ldbr;	c	settings
	f	Ldcv;	d	difficultyButton
	f	Lddf;	e	lockDifficultyButton
	f	Laji;	f	difficulty
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	(Laji;)Ljava/lang/String;	a	getDifficultyButtonText
		p	1	difficulty	difficulty
	m	(Z)V	a	lockDifficulty
		p	1	difficultyLocked	difficultyLocked
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfu	net/minecraft/client/gui/screen/options/GameOptionsScreen
	f	Ldgb;	a	parent
	f	Ldbr;	b	gameOptions
	m	(Ldgb;Ldbr;Llf;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
		p	3	title	title
c	dfv	net/minecraft/client/gui/screen/OutOfMemoryScreen
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfw	net/minecraft/client/gui/screen/Overlay
	m	()Z	a	pausesGame
c	dfx	net/minecraft/client/gui/screen/GameMenuScreen
	f	Z	a	showMenu
	m	(Z)V	<init>	<init>
		p	1	showMenu	showMenu
	m	()V	a	initWidgets
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dfy	net/minecraft/client/gui/screen/PresetsScreen
	f	Ljava/util/List;	a	presets
	f	Ldff;	b	parent
	f	Ljava/lang/String;	c	shareText
	f	Ljava/lang/String;	d	listText
	f	Ldfy$b;	e	listWidget
	f	Ldcv;	f	selectPresetButton
	f	Lddc;	g	customPresetField
	m	(Ldff;)V	<init>	<init>
		p	1	parent	parent
	m	(Ljava/lang/String;Lbjv;Lbkt;Ljava/util/List;[Lcix;)V	a	addPreset
		p	0	name	name
		p	1	icon	icon
		p	2	biome	biome
		p	3	structures	structures
		p	4	layers	layers
	m	(Z)V	a	updateSelectButton
		p	1	hasSelected	hasSelected
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dfy$a	net/minecraft/client/gui/screen/PresetsScreen$SuperflatPreset
	f	Lbei;	a	icon
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/String;	c	config
	m	(Lbei;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	icon	icon
		p	2	name	name
		p	3	config	config
c	dfy$b	net/minecraft/client/gui/screen/PresetsScreen$SuperflatPresetsListWidget
	m	(Ldfy$b$a;)V	a	setSelected
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
c	dfy$b$a	net/minecraft/client/gui/screen/PresetsScreen$SuperflatPresetsListWidget$SuperflatPresetEntry
	m	()V	a	setPreset
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	dfz	net/minecraft/client/gui/screen/ProgressScreen
	f	Ljava/lang/String;	a	title
	f	Ljava/lang/String;	b	task
	f	I	c	progress
	f	Z	d	done
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dg	net/minecraft/command/arguments/ObjectiveArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	LONG_NAME_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_OBJECTIVE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	READONLY_OBJECTIVE_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcwi;	a	getObjective
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	()Ldg;	a	objective
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcwi;	b	getWritableObjective
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dga	net/minecraft/client/gui/screen/DownloadingTerrainScreen
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgb	net/minecraft/client/gui/screen/Screen
	m	(Llf;)V	<init>	<init>
		p	1	title	title
	m	(Ldct;)Ldct;	addButton	addButton
		p	1	button	button
	m	(Z)V	confirmLink	confirmLink
		p	1	open	open
	m	(Lben;)Ljava/util/List;	getTooltipFromItem	getTooltipFromItem
		p	1	stack	stack
	m	(Ldbn;II)V	init	init
		p	1	client	client
		p	2	width	width
		p	3	height	height
	m	(Ljava/lang/String;Z)V	insertText	insertText
		p	1	text	text
		p	2	override	override
	m	(I)Z	isCopy	isCopy
		p	0	code	code
	m	(I)Z	isCut	isCut
		p	0	code	code
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(I)Z	isPaste	isPaste
		p	0	code	code
	m	(I)Z	isSelectAll	isSelectAll
		p	0	code	code
	m	(Ljava/lang/String;CI)Z	isValidCharacterForName	isValidCharacterForName
		p	1	name	name
		p	2	character	character
		p	3	cursorPos	cursorPos
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(Ljava/net/URI;)V	openLink	openLink
		p	1	link	link
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(I)V	renderBackground	renderBackground
		p	1	alpha	alpha
	m	(Llf;II)V	renderComponentHoverEffect	renderComponentHoverEffect
		p	1	component	component
		p	2	x	x
		p	3	y	y
	m	(I)V	renderDirtBackground	renderDirtBackground
		p	1	alpha	alpha
	m	(Lben;II)V	renderTooltip	renderTooltip
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
	m	(Ljava/lang/String;II)V	renderTooltip	renderTooltip
		p	1	text	text
		p	2	x	x
		p	3	y	y
	m	(Ljava/util/List;II)V	renderTooltip	renderTooltip
		p	1	text	text
		p	2	x	x
		p	3	y	y
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
	m	(Ljava/lang/String;Z)V	sendMessage	sendMessage
		p	1	message	message
		p	2	toHud	toHud
	m	(Ljava/lang/String;)V	sendMessage	sendMessage
		p	1	message	message
	m	(II)V	setSize	setSize
		p	1	width	width
		p	2	height	height
	m	(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V	wrapScreenError	wrapScreenError
		p	0	task	task
		p	1	errorTitle	errorTitle
		p	2	screenName	screenName
c	dgc	net/minecraft/client/gui/screen/OpenToLanScreen
	f	Ldgb;	a	parent
	f	Ldcv;	b	buttonAllowCommands
	f	Ldcv;	c	buttonGameMode
	f	Ljava/lang/String;	d	gameMode
	f	Z	e	allowCommands
	m	(Ldgb;)V	<init>	<init>
		p	1	parent	parent
	m	()V	a	updateButtonText
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgd	net/minecraft/client/gui/screen/options/SkinOptionsScreen
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	(Layk;)Ljava/lang/String;	a	getPlayerModelPartDisplayString
		p	1	part	part
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dge	net/minecraft/client/gui/screen/options/SoundOptionsScreen
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgf	net/minecraft/client/gui/screen/TitleScreen
	f	Ldqj;	a	PANORAMA_CUBE_MAP
	f	Lsm;	b	PANORAMA_OVERLAY
	f	Lsm;	c	ACCESSIBILITY_ICON_TEXTURE
	f	Z	d	isMinceraft
	f	Ljava/lang/String;	e	splashText
	f	Ldcv;	f	buttonResetDemo
	f	Lsm;	g	MINECRAFT_TITLE_TEXTURE
	f	Lsm;	h	EDITION_TITLE_TEXTURE
	f	Z	i	realmsNotificationsInitialized
	f	Ldgb;	j	realmsNotificationGui
	f	I	k	copyrightTextWidth
	f	I	l	copyrightTextX
	f	Ldqv;	m	backgroundRenderer
	f	Z	n	doBackgroundFade
	f	J	o	backgroundFadeStart
	m	(Z)V	<init>	<init>
		p	1	doBackgroundFade	doBackgroundFade
	m	(Leak;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadTexturesAsync
	m	(II)V	a	initWidgetsNormal
		p	1	y	y
		p	2	spacingY	spacingY
	m	(Z)V	a	onDemoDeletionConfirmed
		p	1	delete	delete
	m	()Z	a	areRealmsNotificationsEnabled
	m	()V	b	switchToRealms
	m	(II)V	b	initWidgetsDemo
		p	1	y	y
		p	2	spacingY	spacingY
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgg	net/minecraft/client/gui/screen/VideoOptionsScreen
	f	Lddi;	c	list
	f	[Ldbq;	d	OPTIONS
	f	I	e	mipmapLevels
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
	m	(Ldcv;)V	a	method_19865
		p	1	button	button
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgh	net/minecraft/client/gui/screen/CreditsScreen
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lsm;	b	MINECRAFT_TITLE_TEXTURE
	f	Lsm;	c	EDITION_TITLE_TEXTURE
	f	Lsm;	d	VIGNETTE_TEXTURE
	f	Z	e	endCredits
	f	Ljava/lang/Runnable;	f	finishAction
	f	F	g	time
	f	Ljava/util/List;	h	credits
	f	I	i	creditsHeight
	f	F	j	speed
	m	(ZLjava/lang/Runnable;)V	<init>	<init>
		p	1	endCredits	endCredits
		p	2	finishAction	finishAction
	m	(IIF)V	a	renderBackground
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	tickDelta	tickDelta
	m	()V	a	close
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgi	net/minecraft/client/gui/screen/StatsScreen
	f	Ldgb;	a	parent
	f	Ldgi$a;	c	generalStats
	f	Ldgi$b;	d	itemStats
	f	Ldgi$c;	e	mobStats
	f	Laas;	f	statHandler
	f	Lddg;	g	selectedList
	f	Z	h	downloadingStats
	m	(Ldgb;Laas;)V	<init>	<init>
		p	1	parent	parent
		p	2	statHandler	statHandler
	m	(IIII)V	a	renderIcon
		p	1	x	x
		p	2	y	y
		p	3	u	u
		p	4	v	v
	m	(I)I	a	getColumnX
		p	1	index	index
	m	()V	a	createLists
	m	(Lddg;)V	a	selectStatList
		p	1	list	list
	m	(IILbei;)V	a	renderStatItem
		p	1	x	x
		p	2	y	y
		p	3	item	item
	m	()V	b	createButtons
	m	()Lddg;	d	getSelectedStatList
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgi$a	net/minecraft/client/gui/screen/StatsScreen$GeneralStatsListWidget
c	dgi$a$a	net/minecraft/client/gui/screen/StatsScreen$GeneralStatsListWidget$Entry
	f	Laao;	b	stat
	m	(Ldgi$a;Laao;)V	<init>	<init>
		p	2	stat	stat
c	dgi$b	net/minecraft/client/gui/screen/StatsScreen$ItemStatsListWidget
	f	Ljava/util/List;	a	blockStatTypes
	f	Ljava/util/List;	b	itemStatTypes
	f	I	c	selectedHeaderColumn
	f	Ljava/util/List;	d	items
	f	Ljava/util/Comparator;	e	comparator
	f	Laaq;	f	selectedStatType
	f	[I	i	HEADER_ICON_SPRITE_INDICES
	m	(Ldgi;Ldbn;)V	<init>	<init>
		p	2	client	client
	m	(Laaq;)V	a	selectStatType
		p	1	statType	statType
	m	(I)Laaq;	a	getStatType
		p	1	headerColumn	headerColumn
	m	(Lbei;)Llf;	a	getText
		p	1	item	item
	m	(Llf;II)V	a	render
		p	1	text	text
		p	2	x	x
		p	3	y	y
	m	(Laaq;)I	b	getHeaderIndex
		p	1	statType	statType
	m	(II)V	renderDecorations	renderDecorations
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
c	dgi$b$a	net/minecraft/client/gui/screen/StatsScreen$ItemStatsListWidget$ItemComparator
	m	(Lbei;Lbei;)I	a	compare
c	dgi$b$b	net/minecraft/client/gui/screen/StatsScreen$ItemStatsListWidget$Entry
	m	(Laao;IIZ)V	a	render
		p	1	stat	stat
		p	2	x	x
		p	3	y	y
		p	4	light	light
c	dgi$c	net/minecraft/client/gui/screen/StatsScreen$EntityStatsListWidget
c	dgi$c$a	net/minecraft/client/gui/screen/StatsScreen$EntityStatsListWidget$Entry
	f	Laku;	b	entityType
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	getKilledString
		p	1	entityName	entityName
		p	2	killCount	killCount
	m	(Ljava/lang/String;I)Ljava/lang/String;	b	getKilledByString
		p	1	entityName	entityName
		p	2	killCount	killCount
c	dgj	net/minecraft/client/gui/screen/StatsListener
	f	[Ljava/lang/String;	b	PROGRESS_BAR_STAGES
	m	()V	c	onStatsReady
c	dgl	net/minecraft/client/gui/screen/advancement/AdvancementTab
	f	Ldbn;	a	client
	f	Ldgp;	b	screen
	f	Ldgm;	c	type
	f	I	d	index
	f	Lu;	e	root
	f	Lad;	f	display
	f	Lben;	g	icon
	f	Ljava/lang/String;	h	title
	f	Ldgn;	i	rootWidget
	f	Ljava/util/Map;	j	widgets
	f	D	k	originX
	f	D	l	originY
	f	I	m	minPanX
	f	I	n	minPanY
	f	I	o	maxPanX
	f	I	p	maxPanY
	f	F	q	alpha
	f	Z	r	initialized
	m	(Ldbn;Ldgp;Ldgm;ILu;Lad;)V	<init>	<init>
		p	1	client	client
		p	2	screen	screen
		p	3	type	type
		p	4	index	index
		p	5	root	root
		p	6	display	display
	m	(IILdvz;)V	a	drawIcon
		p	1	x	x
		p	2	y	y
		p	3	itemRenderer	itemRenderer
	m	(IIDD)Z	a	isClickOnTab
		p	1	screenX	screenX
		p	2	screenY	screenY
		p	3	mouseX	mouseX
		p	5	mouseY	mouseY
	m	(Ldbn;Ldgp;ILu;)Ldgl;	a	create
		p	0	minecraft	minecraft
		p	1	screen	screen
		p	2	index	index
		p	3	root	root
	m	(IIZ)V	a	drawBackground
		p	1	x	x
		p	2	y	y
		p	3	selected	selected
	m	(Lu;)V	a	addAdvancement
		p	1	advancement	advancement
	m	(Ldgn;Lu;)V	a	addWidget
		p	1	widget	widget
		p	2	advancement	advancement
	m	(DD)V	a	move
		p	1	offsetX	offsetX
		p	3	offsetY	offsetY
	m	(IIII)V	a	drawWidgetTooltip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	x	x
		p	4	y	y
	m	(Lu;)Ldgn;	b	getWidget
		p	1	advancement	advancement
	m	()Lu;	c	getRoot
	m	()Ljava/lang/String;	d	getTitle
	m	()V	f	render
	m	()Ldgp;	g	getScreen
c	dgm	net/minecraft/client/gui/screen/advancement/AdvancementTabType
	f	I	e	u
	f	I	f	v
	f	I	g	width
	f	I	h	height
	f	I	i	tabCount
	m	(Ljava/lang/String;IIIIII)V	<init>	<init>
		p	3	u	u
		p	4	v	v
		p	5	width	width
		p	6	height	height
		p	7	tabCount	tabCount
	m	(IIILdvz;Lben;)V	a	drawIcon
		p	1	x	x
		p	2	y	y
		p	3	index	index
		p	4	itemRenderer	itemRenderer
		p	5	icon	icon
	m	()I	a	getTabCount
	m	(Ldcj;IIZI)V	a	drawBackground
		p	1	drawable	drawable
		p	2	x	x
		p	3	y	y
		p	4	selected	selected
		p	5	index	index
	m	(I)I	a	getTabX
		p	1	index	index
	m	(IIIDD)Z	a	isClickOnTab
		p	1	screenX	screenX
		p	2	screenY	screenY
		p	3	index	index
		p	4	mouseX	mouseX
		p	6	mouseY	mouseY
	m	(I)I	b	getTabY
		p	1	index	index
c	dgn	net/minecraft/client/gui/screen/advancement/AdvancementWidget
	f	Lsm;	a	WIDGETS_TEX
	f	Ljava/util/regex/Pattern;	b	BACKSLASH_S_PATTERN
	f	Ldgl;	c	tab
	f	Lu;	d	advancement
	f	Lad;	e	display
	f	Ljava/lang/String;	f	title
	f	I	g	width
	f	Ljava/util/List;	h	description
	f	Ldbn;	i	client
	f	Ldgn;	j	parent
	f	Ljava/util/List;	k	children
	f	Lw;	l	progress
	f	I	m	xPos
	f	I	n	yPos
	m	(Ldgl;Ldbn;Lu;Lad;)V	<init>	<init>
		p	1	tab	tab
		p	2	client	client
		p	3	advancement	advancement
		p	4	display	display
	m	(Lw;)V	a	setProgress
		p	1	progress	progress
	m	(Lu;)Ldgn;	a	getParent
		p	1	advancement	advancement
	m	(Ldgn;)V	a	addChild
		p	1	widget	widget
	m	(II)V	a	renderWidgets
		p	1	x	x
		p	2	y	y
	m	(Ljava/lang/String;I)Ljava/util/List;	a	wrapDescription
		p	1	description	description
		p	2	width	width
	m	(IIZ)V	a	renderLines
		p	1	x	x
		p	2	y	y
		p	3	firstPass	firstPass
	m	(IIFII)V	a	drawTooltip
		p	1	originX	originX
		p	2	originY	originY
		p	3	alpha	alpha
		p	4	x	x
		p	5	y	y
	m	(IIII)Z	a	shouldRender
		p	1	originX	originX
		p	2	originY	originY
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	()V	b	addToTree
	m	()I	c	getY
	m	()I	d	getX
c	dgo	net/minecraft/client/gui/screen/advancement/AdvancementObtainedStatus
	f	I	c	spriteIndex
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	spriteIndex	spriteIndex
	m	()I	a	getSpriteIndex
c	dgp	net/minecraft/client/gui/screen/advancement/AdvancementsScreen
	f	Lsm;	a	WINDOW_TEXTURE
	f	Lsm;	b	TABS_TEXTURE
	f	Ldnl;	c	advancementHandler
	f	Ljava/util/Map;	d	tabs
	f	Ldgl;	e	selectedTab
	f	Z	f	movingTab
	m	(Ldnl;)V	<init>	<init>
		p	1	advancementHandler	advancementHandler
	m	(II)V	a	drawWidgets
		p	1	x	x
		p	2	y	y
	m	(IIII)V	a	drawAdvancementTree
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	x	x
		p	4	y	y
	m	(IIII)V	b	drawWidgetTooltip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	x	x
		p	4	y	y
	m	(Lu;)Ldgn;	f	getAdvancementWidget
		p	1	advancement	advancement
	m	(Lu;)Ldgl;	g	getTab
		p	1	advancement	advancement
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgr	net/minecraft/client/gui/screen/options/ControlsListWidget
	f	Ldgs;	a	gui
	f	I	b	maxKeyNameLength
	m	(Ldgs;Ldbn;)V	<init>	<init>
		p	1	gui	gui
		p	2	client	client
c	dgr$a	net/minecraft/client/gui/screen/options/ControlsListWidget$CategoryEntry
	f	Ljava/lang/String;	b	name
	f	I	c	nameWidth
	m	(Ldgr;Ljava/lang/String;)V	<init>	<init>
		p	2	translationKey	translationKey
c	dgr$b	net/minecraft/client/gui/screen/options/ControlsListWidget$Entry
c	dgr$c	net/minecraft/client/gui/screen/options/ControlsListWidget$KeyBindingEntry
	f	Ldbk;	b	binding
	f	Ljava/lang/String;	c	bindingName
	f	Ldcv;	d	editButton
	f	Ldcv;	e	resetButton
	m	(Ldgr;Ldbk;)V	<init>	<init>
		p	2	binding	binding
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	dgs	net/minecraft/client/gui/screen/options/ControlsOptionsScreen
	f	Ldbk;	c	focusedBinding
	f	J	d	time
	f	Ldgr;	e	keyBindingListWidget
	f	Ldcv;	f	resetButton
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	options	options
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgu	net/minecraft/client/gui/screen/ingame/AbstractCommandBlockScreen
	f	Lddc;	a	consoleCommandTextField
	f	Lddc;	b	previousOutputTextField
	f	Ldcv;	c	doneButton
	f	Ldcv;	d	cancelButton
	f	Ldcv;	e	toggleTrackingOutputButton
	f	Z	f	trackingOutput
	f	Ldcy;	g	commandSuggestor
	m	()Lbjc;	a	getCommandExecutor
	m	(Ljava/lang/String;)V	a	onCommandChanged
		p	1	text	text
	m	(Lbjc;)V	a	syncSettingsToServer
		p	1	commandExecutor	commandExecutor
	m	()I	b	getTrackOutputButtonHeight
	m	()V	c	updateTrackedOutput
	m	()V	d	commitAndClose
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dgv	net/minecraft/client/gui/screen/ingame/ContainerScreen
	f	I	A	lastClickedButton
	f	Z	B	isDoubleClicking
	f	Lben;	C	quickMovingStack
	f	Lsm;	a	BACKGROUND_TEXTURE
	f	I	b	containerWidth
	f	I	c	containerHeight
	f	Lban;	d	container
	f	Layi;	e	playerInventory
	f	I	f	x
	f	I	g	y
	f	Lbca;	h	focusedSlot
	f	Ljava/util/Set;	i	cursorDragSlots
	f	Z	j	isCursorDragging
	f	Lbca;	k	touchDragSlotStart
	f	Z	l	touchIsRightClickDrag
	f	Lben;	m	touchDragStack
	f	I	n	touchDropX
	f	I	o	touchDropY
	f	Lbca;	p	touchDropOriginSlot
	f	J	q	touchDropTime
	f	Lben;	r	touchDropReturningStack
	f	Lbca;	s	touchHoveredSlot
	f	J	t	touchDropTimer
	f	I	u	heldButtonType
	f	I	v	heldButtonCode
	f	Z	w	cancelNextRelease
	f	I	x	draggedStackRemainder
	f	J	y	lastButtonClickTime
	f	Lbca;	z	lastClickedSlot
	m	(Lban;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	playerInventory	playerInventory
		p	3	name	name
	m	(Lben;IILjava/lang/String;)V	a	drawItem
		p	1	stack	stack
		p	2	xPosition	xPosition
		p	3	yPosition	yPosition
		p	4	amountText	amountText
	m	(FII)V	a	drawBackground
		p	1	delta	delta
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DDIII)Z	a	isClickOutsideBounds
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	left	left
		p	6	top	top
		p	7	button	button
	m	(II)V	a	drawMouseoverTooltip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
	m	(Lbca;IILbav;)V	a	onMouseClick
		p	1	slot	slot
		p	2	invSlot	invSlot
		p	3	button	button
	m	(Lbca;DD)Z	a	isPointOverSlot
		p	1	slot	slot
		p	2	pointX	pointX
		p	4	pointY	pointY
	m	(IIIIDD)Z	a	isPointWithinBounds
		p	1	xPosition	xPosition
		p	2	yPosition	yPosition
		p	3	width	width
		p	4	height	height
		p	5	pointX	pointX
		p	7	pointY	pointY
	m	(Lbca;)V	a	drawSlot
		p	1	slot	slot
	m	(II)V	b	drawForeground
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
	m	(II)Z	c	handleHotbarKeyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
	m	(DD)Lbca;	c	getSlotAt
		p	1	xPosition	xPosition
		p	3	yPosition	yPosition
	m	()V	d	calculateOffset
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgw	net/minecraft/client/gui/screen/ingame/AbstractFurnaceScreen
	f	Ldil;	k	recipeBook
	f	Lsm;	l	RECIPE_BUTTON_TEXTURE
	f	Z	m	narrow
	f	Lsm;	n	background
	m	(Lbao;Ldil;Layi;Llf;Lsm;)V	<init>	<init>
		p	1	container	container
		p	2	recipeBook	recipeBook
		p	3	inventory	inventory
		p	4	title	title
		p	5	background	background
	m	(Ldcv;)V	a	method_19877
		p	1	buttonWidget	buttonWidget
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgx	net/minecraft/client/gui/screen/ingame/AnvilScreen
	f	Lsm;	k	BG_TEX
	f	Lddc;	l	nameField
	m	(Lbap;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(Ljava/lang/String;)V	a	onRenamed
		p	1	name	name
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dgy	net/minecraft/client/gui/screen/ingame/BeaconScreen
	f	Lsm;	k	BG_TEX
	f	Ldgy$b;	l	doneButton
	f	Z	m	consumeGem
	f	Laki;	n	primaryEffect
	f	Laki;	o	secondaryEffect
	m	(Lbaq;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgy$a	net/minecraft/client/gui/screen/ingame/BeaconScreen$CancelButtonWidget
	m	(Ldgy;II)V	<init>	<init>
		p	2	x	x
		p	3	y	y
	m	(II)V	renderToolTip	renderToolTip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
c	dgy$b	net/minecraft/client/gui/screen/ingame/BeaconScreen$DoneButtonWidget
	m	(Ldgy;II)V	<init>	<init>
		p	2	x	x
		p	3	y	y
	m	(II)V	renderToolTip	renderToolTip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
c	dgy$c	net/minecraft/client/gui/screen/ingame/BeaconScreen$EffectButtonWidget
	f	Laki;	b	effect
	f	Leaj;	c	sprite
	f	Z	d	primary
	m	(Ldgy;IILaki;Z)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	statusEffect	statusEffect
		p	5	primary	primary
	m	(II)V	renderToolTip	renderToolTip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
c	dgy$d	net/minecraft/client/gui/screen/ingame/BeaconScreen$BaseButtonWidget
	f	Z	a	disabled
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	y	y
	m	(Z)V	a	setDisabled
		p	1	disabled	disabled
	m	()V	a	renderExtra
	m	()Z	b	isDisabled
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dgy$e	net/minecraft/client/gui/screen/ingame/BeaconScreen$IconButtonWidget
	f	I	a	u
	f	I	b	v
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	u	u
		p	4	v	v
c	dgz	net/minecraft/client/gui/screen/ingame/BlastFurnaceScreen
	f	Lsm;	l	BG_TEX
	m	(Lbar;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
c	dh	net/minecraft/command/arguments/ObjectiveCriteriaArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_CRITERIA_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcwo;	a	getCriteria
	m	(Laaq;Ljava/lang/Object;)Ljava/lang/String;	a	getStatName
		p	1	stat	stat
		p	2	value	value
	m	()Ldh;	a	objectiveCriteria
	m	(Lcom/mojang/brigadier/StringReader;)Lcwo;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dha	net/minecraft/client/gui/screen/ingame/BookEditScreen
	f	Layj;	a	player
	f	Lben;	b	itemStack
	f	Z	c	dirty
	f	Z	d	signing
	f	I	e	tickCounter
	f	I	f	currentPage
	f	Ljava/util/List;	g	pages
	f	Ljava/lang/String;	h	title
	f	I	i	cursorIndex
	f	I	j	highlightTo
	f	J	k	lastClickTime
	f	I	l	lastClickIndex
	f	Ldhy;	m	nextPageButton
	f	Ldhy;	n	previousPageButton
	f	Ldcv;	o	doneButton
	f	Ldcv;	p	signButton
	f	Ldcv;	q	finalizeButton
	f	Ldcv;	r	cancelButton
	f	Lajk;	s	hand
	m	(Layj;Lben;Lajk;)V	<init>	<init>
		p	1	playerEntity	playerEntity
		p	2	itemStack	itemStack
		p	3	hand	hand
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripFromatting
		p	1	string	string
	m	(Ljava/lang/String;Ldha$a;)I	a	getCharacterCountInFrontOfCursor
		p	1	content	content
		p	2	cursorPosition	cursorPosition
	m	(Ldha$a;Ldha$a;)V	a	drawHighlightRect
		p	1	position1	position1
		p	2	position2	position2
	m	(Ldha$a;)V	a	localizePosition
		p	1	position	position
	m	(Z)V	a	finalizeBook
		p	1	signBook	signBook
	m	()I	a	countPages
	m	(Ljava/lang/String;I)I	a	getCharWidthInString
		p	1	string	string
		p	2	index	index
	m	(Ljava/lang/String;I)I	b	getCharacterCountForWidth
		p	1	text	text
		p	2	width	width
	m	(III)Z	b	keyPressedEditMode
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	()V	b	openPreviousPage
	m	(Ljava/lang/String;)V	b	applyBackspaceKey
		p	1	content	content
	m	(Ldha$a;)V	b	translateGlPositionToRelativePosition
		p	1	position	position
	m	(III)Z	c	keyPressedSignMode
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(Ljava/lang/String;I)Ldha$a;	c	getCursorPositionForIndex
		p	1	content	content
		p	2	index	index
	m	()V	c	openNextPage
	m	(Ljava/lang/String;)V	c	applyDeleteKey
		p	1	content	content
	m	(Ldha$a;)V	c	translateRelativePositionToGlPosition
		p	1	position	position
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(Ljava/lang/String;)V	d	applyLeftArrowKey
		p	1	content	content
	m	()V	d	updateButtons
	m	(Ljava/lang/String;I)I	d	getCharacterCountForStringWidth
		p	1	string	string
		p	2	width	width
	m	()V	e	removeEmptyPages
	m	(Ljava/lang/String;)V	e	applyRightArrowKey
		p	1	content	content
	m	()V	f	appendNewPage
	m	(Ljava/lang/String;)V	f	applyUpArrowKey
		p	1	content	content
	m	(Ljava/lang/String;)V	g	applyDownArrowKey
		p	1	content	content
	m	()V	g	removeHighlightedText
	m	(Ljava/lang/String;)V	h	moveCursorToTop
		p	1	content	content
	m	()Ljava/lang/String;	h	getCurrentPageContent
	m	(Ljava/lang/String;)V	i	moveCursorToBottom
		p	1	content	content
	m	()Ljava/lang/String;	i	getHighlightedText
	m	(Ljava/lang/String;)V	j	setPageContent
		p	1	newContent	newContent
	m	(Ljava/lang/String;)V	k	writeString
		p	1	string	string
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(Ljava/lang/String;)I	l	getStringWidth
		p	1	text	text
	m	(Ljava/lang/String;)V	m	drawHighlight
		p	1	content	content
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dha$a	net/minecraft/client/gui/screen/ingame/BookEditScreen$Position
	f	I	b	x
	f	I	c	y
	m	(Ldha;II)V	<init>	<init>
		p	2	x	x
		p	3	y	y
c	dhb	net/minecraft/client/gui/screen/ingame/BookScreen
	f	Ldhb$a;	a	EMPTY_PROVIDER
	f	Lsm;	b	BOOK_TEXTURE
	f	Ldhb$a;	c	contents
	f	I	d	pageIndex
	f	Ljava/util/List;	e	cachedPage
	f	I	f	cachedPageIndex
	f	Ldhy;	g	nextPageButton
	f	Ldhy;	h	previousPageButton
	f	Z	i	pageTurnSound
	m	(Ldhb$a;)V	<init>	<init>
		p	1	pageProvider	pageProvider
	m	(Ldhb$a;Z)V	<init>	<init>
		p	1	contents	contents
		p	2	playPageTurnSound	playPageTurnSound
	m	(Ldhb$a;)V	a	setPageProvider
		p	1	pageProvider	pageProvider
	m	(Ljt;)Ljava/util/List;	a	readPages
		p	0	tag	tag
	m	(Ljava/lang/String;)I	a	getStringWidth
		p	1	string	string
	m	()I	a	getPageCount
	m	(I)Z	a	setPage
		p	1	index	index
	m	(I)Z	b	jumpToPage
		p	1	page	page
	m	()V	b	addCloseButton
	m	()V	c	addPageButtons
	m	(DD)Llf;	c	getTextAt
		p	1	x	x
		p	3	y	y
	m	()V	d	goToPreviousPage
	m	()V	e	goToNextPage
	m	()V	f	updatePageButtons
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhb$a	net/minecraft/client/gui/screen/ingame/BookScreen$Contents
	m	()I	a	getPageCount
	m	(I)Llf;	a	getPageUnchecked
		p	1	index	index
	m	(Lben;)Ldhb$a;	a	create
		p	0	stack	stack
	m	(I)Llf;	b	getPage
		p	1	index	index
c	dhb$b	net/minecraft/client/gui/screen/ingame/BookScreen$WritableBookContents
	f	Ljava/util/List;	a	pages
	m	(Lben;)V	<init>	<init>
		p	1	stack	stack
	m	(Lben;)Ljava/util/List;	b	getPages
		p	0	stack	stack
c	dhb$c	net/minecraft/client/gui/screen/ingame/BookScreen$WrittenBookContents
	f	Ljava/util/List;	a	pages
	m	(Lben;)V	<init>	<init>
		p	1	stack	stack
	m	(Lben;)Ljava/util/List;	b	getPages
		p	0	stack	stack
c	dhc	net/minecraft/client/gui/screen/ingame/BrewingStandScreen
	f	Lsm;	k	TEXTURE
	f	[I	l	BUBBLE_PROGRESS
	m	(Lbas;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	playerInventory	playerInventory
		p	3	title	title
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhd	net/minecraft/client/gui/screen/ingame/CartographyTableScreen
	f	Lsm;	k	TEXTURE
	m	(Lbat;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(Lcrg;ZZZZ)V	a	drawMap
		p	1	mapState	mapState
		p	2	isMap	isMap
		p	3	isPaper	isPaper
		p	4	isGlassPane	isGlassPane
	m	(Lcrg;IIF)V	a	drawMap
		p	1	state	state
		p	2	x	x
		p	3	y	y
		p	4	size	size
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhe	net/minecraft/client/gui/screen/ingame/CommandBlockScreen
	f	Lbwq;	g	blockEntity
	f	Ldcv;	h	modeButton
	f	Ldcv;	i	conditionalModeButton
	f	Ldcv;	j	redstoneTriggerButton
	f	Lbwq$a;	k	mode
	f	Z	l	conditional
	f	Z	m	autoActivate
	m	(Lbwq;)V	<init>	<init>
		p	1	blockEntity	blockEntity
	m	()V	e	updateCommandBlock
	m	()V	f	updateMode
	m	()V	g	cycleType
	m	()V	h	updateConditionalMode
	m	()V	i	updateActivationMode
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dhf	net/minecraft/client/gui/screen/ingame/GenericContainerScreen
	f	Lsm;	k	TEXTURE
	f	I	l	rows
	m	(Lbau;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhg	net/minecraft/client/gui/screen/ingame/CraftingTableScreen
	f	Lsm;	k	BG_TEX
	f	Lsm;	l	RECIPE_BUTTON_TEX
	f	Ldip;	m	recipeBookGui
	f	Z	n	isNarrow
	m	(Lbba;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhh	net/minecraft/client/gui/screen/ingame/CreativeInventoryListener
	f	Ldbn;	a	client
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
c	dhi	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen
	f	Lsm;	l	TEXTURE
	f	Lajq;	m	inventory
	f	I	n	selectedTab
	f	F	o	scrollPosition
	f	Z	p	scrolling
	f	Lddc;	q	searchBox
	f	Ljava/util/List;	r	slots
	f	Lbca;	s	deleteItemSlot
	f	Ldhh;	t	listener
	f	Z	u	ignoreTypedCharacter
	f	Z	v	lastClickOutsideBounds
	f	Ljava/util/Map;	w	searchResultTags
	m	(Layj;)V	<init>	<init>
		p	1	player	player
	m	(Lbdd;DD)Z	a	isClickInTab
		p	1	group	group
		p	2	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(Lbdd;)V	a	renderTabIcon
		p	1	group	group
	m	(Ljava/lang/String;)V	a	searchForTags
	m	(Ldbn;IZZ)V	a	onHotbarKeyPress
		p	0	client	client
		p	1	index	index
		p	2	restore	restore
		p	3	save	save
	m	(Lbdd;II)Z	a	renderTabTooltipIfHovered
		p	1	group	group
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Lbca;)Z	a	isCreativeInventorySlot
		p	1	slot	slot
	m	(Lbdd;)V	b	setSelectedTab
		p	1	group	group
	m	()I	c	getSelectedTab
	m	(DD)Z	c	isClickInScrollbar
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	()V	e	search
	m	()Z	f	hasScrollbar
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Lben;II)V	renderTooltip	renderTooltip
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dhi$a	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen$LockableSlot
	m	(Laje;III)V	<init>	<init>
		p	1	invSlot	invSlot
		p	2	xPosition	xPosition
		p	3	yPosition	yPosition
c	dhi$b	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen$CreativeContainer
	f	Lfy;	c	itemList
	m	(F)V	a	scrollItems
		p	1	position	position
	m	()Z	e	shouldShowScrollbar
c	dhi$c	net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen$CreativeSlot
	f	Lbca;	a	slot
	m	(Lbca;III)V	<init>	<init>
		p	1	slot	slot
		p	2	invSlot	invSlot
		p	3	x	x
		p	4	y	y
c	dhj	net/minecraft/client/gui/screen/ingame/Generic3x3ContainerScreen
	f	Lsm;	k	TEXTURE
	m	(Lbbc;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhk	net/minecraft/client/gui/screen/ingame/AbstractInventoryScreen
	f	Z	k	offsetGuiForEffects
	m	(IILjava/lang/Iterable;)V	a	drawStatusEffectBackgrounds
		p	1	x	x
		p	2	yIncrement	yIncrement
		p	3	effects	effects
	m	()V	b	applyStatusEffectOffset
	m	(IILjava/lang/Iterable;)V	b	drawStatusEffectSprites
		p	1	x	x
		p	2	yIncrement	yIncrement
		p	3	effects	effects
	m	(IILjava/lang/Iterable;)V	c	drawStatusEffectDescriptions
		p	1	x	x
		p	2	yIncrement	yIncrement
		p	3	effects	effects
	m	()V	c	drawStatusEffects
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhl	net/minecraft/client/gui/screen/ingame/EnchantingPhrases
	f	Ldhl;	a	INSTANCE
	f	Ljava/util/Random;	b	random
	f	[Ljava/lang/String;	c	phrases
	m	(Ldch;I)Ljava/lang/String;	a	generatePhrase
		p	1	fontRenderer	fontRenderer
		p	2	width	width
	m	()Ldhl;	a	getInstance
	m	(J)V	a	setSeed
		p	1	seed	seed
c	dhm	net/minecraft/client/gui/screen/ingame/EnchantingScreen
	f	I	k	ticks
	f	F	l	nextPageAngle
	f	F	m	pageAngle
	f	F	n	approximatePageAngle
	f	F	o	pageRotationSpeed
	f	F	p	nextPageTurningSpeed
	f	F	q	pageTurningSpeed
	f	Lsm;	r	TEXTURE
	f	Lsm;	s	BOOK_TEXURE
	f	Ldkm;	t	bookModel
	f	Ljava/util/Random;	u	random
	f	Lben;	v	stack
	m	(Lbbd;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	()V	b	doTick
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhn	net/minecraft/client/gui/screen/ingame/FurnaceScreen
	f	Lsm;	l	BG_TEX
	m	(Lbbf;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
c	dho	net/minecraft/client/gui/screen/ingame/GrindstoneScreen
	f	Lsm;	k	TEXTURE
	m	(Lbbh;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhp	net/minecraft/client/gui/screen/ingame/HopperScreen
	f	Lsm;	k	TEXTURE
	m	(Lbbi;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhq	net/minecraft/client/gui/screen/ingame/HorseScreen
	f	Lsm;	k	TEXTURE
	f	Laue;	l	entity
	f	F	m	mouseX
	f	F	n	mouseY
	m	(Lbbj;Layi;Laue;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	entity	entity
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhr	net/minecraft/client/gui/screen/ingame/InventoryScreen
	f	Lsm;	l	RECIPE_BUTTON_TEX
	f	F	m	mouseX
	f	F	n	mouseY
	f	Ldip;	o	recipeBook
	f	Z	p	isOpen
	f	Z	q	isNarrow
	f	Z	r	isMouseDown
	m	(Layj;)V	<init>	<init>
		p	1	player	player
	m	(IIIFFLakz;)V	a	drawEntity
		p	0	x	x
		p	1	y	y
		p	2	size	size
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
		p	5	entity	entity
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhs	net/minecraft/client/gui/screen/ingame/JigsawBlockScreen
	f	Lbxb;	a	jigsaw
	f	Lddc;	b	attachmentTypeField
	f	Lddc;	c	targetPoolField
	f	Lddc;	d	finalStateField
	f	Ldcv;	e	doneButton
	m	(Lbxb;)V	<init>	<init>
		p	1	jigsaw	jigsaw
	m	()V	a	updateDoneButtonState
	m	()V	b	onDone
	m	()V	c	onCancel
	m	()V	d	updateServer
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	dht	net/minecraft/client/gui/screen/ingame/LecternScreen
	f	Lbbl;	c	container
	f	Lbay;	d	listener
	m	(Lbbl;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(I)V	c	sendButtonPressPacket
		p	1	id	id
	m	()Lbbl;	f	getContainer
	m	()V	g	updatePageProvider
	m	()V	h	updatePage
c	dhu	net/minecraft/client/gui/screen/ingame/LoomScreen
	f	Lsm;	k	TEXTURE
	f	I	l	PATTERN_BUTTON_ROW_COUNT
	f	Lben;	o	banner
	f	Lben;	p	dye
	f	Lben;	q	pattern
	f	Z	r	canApplyDyePattern
	f	Z	s	canApplySpecialPattern
	f	Z	t	hasTooManyPatterns
	f	F	u	scrollPosition
	f	Z	v	scrollbarClicked
	f	I	w	firstPatternButtonId
	m	(Lbbm;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	()V	b	onInventoryChanged
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhv	net/minecraft/client/gui/screen/ingame/ContainerProvider
	m	()Lban;	a	getContainer
c	dhw	net/minecraft/client/gui/screen/ingame/MerchantScreen
	f	Lsm;	k	TEXTURE
	f	I	l	selectedIndex
	f	[Ldhw$a;	m	offers
	f	I	n	indexStartOffset
	f	Z	o	scrolling
	m	(Lbbq;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IILbiz;)V	a	drawLevelInfo
	m	(I)Z	a	canScroll
		p	1	listSize	listSize
	m	()V	b	syncRecipeIndex
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhw$a	net/minecraft/client/gui/screen/ingame/MerchantScreen$WidgetButtonPage
	f	I	a	index
	m	()I	a	getIndex
	m	(II)V	renderToolTip	renderToolTip
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
c	dhx	net/minecraft/client/gui/screen/ingame/MinecartCommandBlockScreen
	f	Lbjc;	g	commandExecutor
	m	(Lbjc;)V	<init>	<init>
		p	1	commandExecutor	commandExecutor
c	dhy	net/minecraft/client/gui/widget/PageTurnWidget
	f	Z	a	isNextPageButton
	f	Z	b	playPageTurnSound
	m	(IIZLdcv$a;Z)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	isNextPageButton	isNextPageButton
		p	4	action	action
		p	5	playPageTurnSound	playPageTurnSound
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dhz	net/minecraft/client/gui/screen/ingame/ShulkerBoxScreen
	f	Lsm;	k	TEXTURE
	m	(Lbbx;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	di	net/minecraft/command/arguments/OperationArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	DIVISION_ZERO_EXCEPTION
	m	()Ldi;	a	operation
	m	(Lcom/mojang/brigadier/StringReader;)Ldi$a;	a	parse
	m	(Ljava/lang/String;)Ldi$a;	a	getOperator
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldi$a;	a	getOperation
	m	(Ljava/lang/String;)Ldi$b;	b	getIntOperator
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	di$a	net/minecraft/command/arguments/OperationArgumentType$Operation
c	di$b	net/minecraft/command/arguments/OperationArgumentType$IntOperator
c	dia	net/minecraft/client/gui/screen/ingame/SignEditScreen
	f	Lbxh;	b	sign
	f	I	c	ticksSinceOpened
	f	I	d	currentRow
	f	Ldei;	e	selectionManager
	m	(Lbxh;)V	<init>	<init>
		p	1	sign	sign
	m	()V	a	finishEditing
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dib	net/minecraft/client/gui/screen/ingame/SmokerScreen
	f	Lsm;	l	BG_TEX
	m	(Lbcb;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
c	dic	net/minecraft/client/gui/screen/ingame/StonecutterScreen
	f	Lsm;	k	TEXTURE
	f	F	l	scrollAmount
	f	Z	m	mouseClicked
	f	I	n	scrollOffset
	f	Z	o	canCraft
	m	(Lbcd;Layi;Llf;)V	<init>	<init>
		p	1	container	container
		p	2	inventory	inventory
		p	3	title	title
	m	(IIIII)V	a	renderRecipeBackground
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	x	x
		p	4	y	y
		p	5	scrollOffset	scrollOffset
	m	()I	b	getMaxScroll
	m	(III)V	b	renderRecipeIcons
		p	1	x	x
		p	2	y	y
		p	3	scrollOffset	scrollOffset
	m	()Z	c	shouldScroll
	m	()V	d	onInventoryChange
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	did	net/minecraft/client/gui/screen/ingame/StructureBlockScreen
	f	Ldcv;	A	buttonDetect
	f	Ldcv;	B	buttonEntities
	f	Ldcv;	C	buttonMirror
	f	Ldcv;	D	buttonShowAir
	f	Ldcv;	E	buttonShowBoundingBox
	f	Ljava/text/DecimalFormat;	F	decimalFormat
	f	Lbxl;	a	structureBlock
	f	Lbsu;	b	mirror
	f	Lbtu;	c	rotation
	f	Lbzr;	d	mode
	f	Z	e	ignoreEntities
	f	Z	f	showAir
	f	Z	g	showBoundingBox
	f	Lddc;	h	inputName
	f	Lddc;	i	inputPosX
	f	Lddc;	j	inputPosY
	f	Lddc;	k	inputPosZ
	f	Lddc;	l	inputSizeX
	f	Lddc;	m	inputSizeY
	f	Lddc;	n	inputSizeZ
	f	Lddc;	o	inputIntegrity
	f	Lddc;	p	inputSeed
	f	Lddc;	q	inputMetadata
	f	Ldcv;	r	buttonDone
	f	Ldcv;	s	buttonCancel
	f	Ldcv;	t	buttonSave
	f	Ldcv;	u	buttonLoad
	f	Ldcv;	v	buttonRotate0
	f	Ldcv;	w	buttonRotate90
	f	Ldcv;	x	buttonRotate180
	f	Ldcv;	y	buttonRotate270
	f	Ldcv;	z	buttonMode
	m	(Lbxl;)V	<init>	<init>
		p	1	structureBlock	structureBlock
	m	()V	a	done
	m	(Ljava/lang/String;)J	a	parseLong
	m	(Ljava/lang/String;)F	b	parseFloat
	m	()V	b	cancel
	m	()V	c	updateIgnoreEntitiesButton
	m	(Ljava/lang/String;)I	c	parseInt
	m	()V	d	updateShowAirButton
	m	()V	e	updateShowBoundingBoxButton
	m	()V	f	updateMirrorButton
	m	()V	g	updateRotationButton
	m	()V	h	updateMode
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	did$1	net/minecraft/client/gui/screen/ingame/StructureBlockScreen$1
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
c	dig	net/minecraft/client/gui/screen/multiplayer/MultiplayerScreen
	f	Ldii;	a	serverListWidget
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ldnw;	c	serverListPinger
	f	Ldgb;	d	parent
	f	Ldnv;	e	serverList
	f	Ldcv;	f	buttonEdit
	f	Ldcv;	g	buttonJoin
	f	Ldcv;	h	buttonDelete
	f	Ljava/lang/String;	i	tooltipText
	f	Ldnu;	j	selectedEntry
	f	Ledo$b;	k	lanServers
	f	Ledo$a;	l	lanServerDetector
	f	Z	m	initialized
	m	(Ldgb;)V	<init>	<init>
		p	1	parent	parent
	m	(Ljava/lang/String;)V	a	setTooltip
		p	1	text	text
	m	()V	a	connect
	m	(Ldii$a;)V	a	select
		p	1	entry	entry
	m	(Ldnu;)V	a	connect
		p	1	entry	entry
	m	(Z)V	a	removeEntry
		p	1	confirmedAction	confirmedAction
	m	()V	b	updateButtonActivationStates
	m	(Z)V	b	editEntry
		p	1	confirmedAction	confirmedAction
	m	()Ldnw;	c	getServerListPinger
	m	(Z)V	c	addEntry
		p	1	confirmedAction	confirmedAction
	m	(Z)V	d	directConnect
		p	1	confirmedAction	confirmedAction
	m	()Ldnv;	d	getServerList
	m	()V	e	refresh
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dih	net/minecraft/client/gui/screen/multiplayer/MultiplayerWarningScreen
	f	Ldgb;	a	parent
	f	Llf;	b	header
	f	Llf;	c	message
	f	Llf;	d	checkMessage
	f	Llf;	e	proceedText
	f	Llf;	f	backText
	f	Ldcx;	g	checkbox
	f	Ljava/util/List;	h	lines
	m	(Ldgb;)V	<init>	<init>
		p	1	parent	parent
c	dii	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadPoolExecutor;	b	SERVER_PINGER_THREAD_POOL
	f	Lsm;	c	UNKNOWN_SERVER_TEXTURE
	f	Lsm;	d	SERVER_SELECTION_TEXTURE
	f	Ldig;	e	screen
	f	Ljava/util/List;	f	servers
	f	Ldii$a;	g	scanningEntry
	f	Ljava/util/List;	h	lanServers
	m	(Ldig;Ldbn;IIIII)V	<init>	<init>
		p	1	screen	screen
		p	2	client	client
		p	3	width	width
		p	4	height	height
		p	5	top	top
		p	6	bottom	bottom
		p	7	entryHeight	entryHeight
	m	(Ldii$a;)V	a	setSelected
	m	(Ljava/util/List;)V	a	setLanServers
		p	1	lanServers	lanServers
	m	(Ldnv;)V	a	setServers
		p	1	servers	servers
	m	()V	e	updateEntries
c	dii$a	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$Entry
c	dii$b	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$ScanningEntry
	f	Ldbn;	a	client
c	dii$c	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$LanServerEntry
	f	Ldbn;	a	client
	f	Ledn;	b	server
	f	Ldig;	c	screen
	f	J	d	time
	m	(Ldig;Ledn;)V	<init>	<init>
		p	1	screen	screen
		p	2	server	server
	m	()Ledn;	a	getLanServerEntry
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	dii$d	net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$ServerEntry
	f	Ldig;	b	screen
	f	Ldbn;	c	client
	f	Ldnu;	d	server
	f	Lsm;	e	iconTextureId
	f	Ljava/lang/String;	f	iconUri
	f	Ldzy;	g	icon
	f	J	h	time
	m	(Ldii;Ldig;Ldnu;)V	<init>	<init>
		p	2	screen	screen
		p	3	server	server
	m	()Ldnu;	a	getServer
	m	(II)V	a	swapEntries
		p	1	i	i
		p	2	j	j
	m	(IILsm;)V	a	draw
		p	1	x	x
		p	2	y	y
		p	3	textureId	textureId
	m	()V	c	updateIcon
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	dil	net/minecraft/client/gui/screen/recipebook/AbstractFurnaceRecipeBookScreen
	f	Ljava/util/Iterator;	i	fuelIterator
	f	Ljava/util/Set;	j	fuels
	f	Lbca;	k	outputSlot
	f	Lbei;	l	currentItem
	f	F	m	frameTime
	m	(Z)V	a	setFilteringCraftable
		p	1	filteringCraftable	filteringCraftable
	m	()Z	b	isFilteringCraftable
	m	(Z)V	c	setGuiOpen
		p	1	opened	opened
	m	()Z	d	isGuiOpen
	m	()Ljava/lang/String;	g	getToggleCraftableButtonText
	m	()Ljava/util/Set;	h	getAllowedFuels
	m	()Lbei;	n	getItem
c	dim	net/minecraft/client/gui/screen/recipebook/BlastFurnaceRecipeBookScreen
c	din	net/minecraft/client/gui/screen/recipebook/RecipeBookGhostSlots
	f	Lbgw;	a	recipe
	f	Ljava/util/List;	b	slots
	f	F	c	time
	m	(Lbgt;II)V	a	addSlot
		p	1	ingredient	ingredient
		p	2	x	x
		p	3	y	y
	m	(Lbgw;)V	a	setRecipe
		p	1	recipe	recipe
	m	()V	a	reset
	m	(Ldbn;IIZF)V	a	draw
		p	1	client	client
		p	2	x	x
		p	3	y	y
		p	4	isBig	isBig
		p	5	lastFrameDuration	lastFrameDuration
	m	(I)Ldin$a;	a	getSlot
		p	1	index	index
	m	()I	b	getSlotCount
	m	()Lbgw;	c	getRecipe
c	din$a	net/minecraft/client/gui/screen/recipebook/RecipeBookGhostSlots$GhostInputSlot
	f	Lbgt;	b	ingredient
	f	I	c	x
	f	I	d	y
	m	(Ldin;Lbgt;II)V	<init>	<init>
		p	2	ingredient	ingredient
		p	3	x	x
		p	4	y	y
	m	()I	a	getX
	m	()I	b	getY
	m	()Lben;	c	getCurrentItemStack
c	dio	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget
	f	Lsm;	a	BG_TEX
	f	Ljava/util/List;	b	alternativeButtons
	f	Z	c	visible
	f	I	d	buttonX
	f	I	e	buttonY
	f	Ldbn;	f	client
	f	Ldit;	g	resultCollection
	f	Lbgw;	h	lastClickedRecipe
	f	F	i	time
	f	Z	j	furnace
	m	(Z)V	a	setVisible
		p	1	visible	visible
	m	(Ldbn;Ldit;IIIIF)V	a	showAlternativesForResult
		p	1	client	client
		p	2	results	results
		p	3	buttonX	buttonX
		p	4	buttonY	buttonY
		p	5	areaCenterX	areaCenterX
		p	6	areaCenterY	areaCenterY
		p	7	delta	delta
	m	()Ldit;	a	getResults
	m	(IIIIII)V	a	renderGrid
		p	1	columns	columns
		p	2	rows	rows
		p	3	squareSize	squareSize
		p	4	borderSize	borderSize
		p	5	u	u
		p	6	v	v
	m	()Lbgw;	b	getLastClickedRecipe
	m	()Z	c	isVisible
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dio$a	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget$AlternativeButtonWidget
	f	Ljava/util/List;	a	slots
	f	Lbgw;	c	recipe
	f	Z	d	isCraftable
	m	(Ldio;IILbgw;Z)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	recipe	recipe
		p	5	isCraftable	isCraftable
	m	(Lbgw;)V	a	alignRecipe
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dio$a$a	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget$AlternativeButtonWidget$InputSlot
	f	[Lben;	a	stacks
	f	I	b	y
	f	I	c	x
	m	(Ldio$a;II[Lben;)V	<init>	<init>
		p	2	y	y
		p	3	x	x
		p	4	stacks	stacks
c	dio$b	net/minecraft/client/gui/screen/recipebook/RecipeAlternativesWidget$FurnaceAlternativeButtonWidget
	m	(Ldio;IILbgw;Z)V	<init>	<init>
		p	2	x	x
		p	3	y	y
		p	4	recipe	recipe
		p	5	isCraftable	isCraftable
c	dip	net/minecraft/client/gui/screen/recipebook/RecipeBookWidget
	f	Lsm;	a	TEXTURE
	f	Ldin;	b	ghostSlots
	f	Lddm;	c	toggleCraftableButton
	f	Lbbt;	d	craftingContainer
	f	Ldbn;	e	client
	f	Ldbc;	f	recipeBook
	f	Ldiq;	g	recipesArea
	f	Layl;	h	recipeFinder
	f	I	i	leftOffset
	f	I	j	parentWidth
	f	I	k	parentHeight
	f	Ljava/util/List;	l	tabButtons
	f	Ldir;	m	currentTab
	f	Lddc;	n	searchField
	f	Ljava/lang/String;	o	searchText
	f	I	p	cachedInvChangeCount
	f	Z	q	searching
	m	(Lbgw;Ljava/util/List;)V	a	showGhostRecipe
		p	1	recipe	recipe
		p	2	slots	slots
	m	(DDIIIII)Z	a	isClickOutsideBounds
	m	(ZII)I	a	findLeftEdge
		p	1	narrow	narrow
		p	2	width	width
		p	3	containerWidth	containerWidth
	m	(Lbca;)V	a	slotClicked
		p	1	slot	slot
	m	(Ljava/lang/String;)V	a	triggerPirateSpeakEasterEgg
	m	(IILdbn;ZLbbt;)V	a	initialize
		p	1	parentWidth	parentWidth
		p	2	parentHeight	parentHeight
		p	3	client	client
		p	4	isNarrow	isNarrow
		p	5	craftingContainer	craftingContainer
	m	(Z)V	a	refreshResults
		p	1	resetCurrentPage	resetCurrentPage
	m	(IIZF)V	a	drawGhostSlots
		p	1	left	left
		p	2	top	top
		p	3	isBig	isBig
		p	4	lastFrameDuration	lastFrameDuration
	m	()Z	a	toggleFilteringCraftable
	m	(IIII)V	a	drawTooltip
		p	1	left	left
		p	2	top	top
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(Z)V	b	setOpen
		p	1	opened	opened
	m	()V	b	refreshTabButtons
	m	(IIII)V	b	drawGhostSlotTooltip
	m	()Z	c	isOpen
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(Z)V	d	reset
		p	1	isNarrow	isNarrow
	m	()V	d	refreshInputs
	m	()V	e	setBookButtonTexture
	m	()Ljava/lang/String;	f	getCraftableButtonText
	m	()V	g	refreshSearchResults
	m	()Z	h	isWide
	m	()V	i	close
	m	(DD)Z	isMouseOver	isMouseOver
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	()V	j	toggleOpen
	m	()V	k	update
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	()V	l	refresh
	m	()V	m	sendBookDataPacket
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	diq	net/minecraft/client/gui/screen/recipebook/RecipeBookResults
	f	Ljava/util/List;	a	resultButtons
	f	Ldis;	b	hoveredResultButton
	f	Ldio;	c	alternatesWidget
	f	Ldbn;	d	client
	f	Ljava/util/List;	e	recipeDisplayListeners
	f	Ljava/util/List;	f	resultCollections
	f	Lddm;	g	nextPageButton
	f	Lddm;	h	prevPageButton
	f	I	i	pageCount
	f	I	j	currentPage
	f	Laal;	k	recipeBook
	f	Lbgw;	l	lastClickedRecipe
	f	Ldit;	m	resultCollection
	m	(IIIIF)V	a	draw
		p	1	left	left
		p	2	top	top
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
		p	5	delta	delta
	m	(II)V	a	drawTooltip
	m	(Ljava/util/List;Z)V	a	setResults
		p	2	resetCurrentPage	resetCurrentPage
	m	(Ldip;)V	a	setGui
	m	(DDIIIII)Z	a	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	areaLeft	areaLeft
		p	7	areaTop	areaTop
		p	8	areaWidth	areaWidth
		p	9	areaHeight	areaHeight
	m	(Ldbn;II)V	a	initialize
		p	2	parentLeft	parentLeft
		p	3	parentTop	parentTop
	m	()Lbgw;	a	getLastClickedRecipe
	m	(Ljava/util/List;)V	a	onRecipesDisplayed
	m	()Ldit;	b	getLastClickedResults
	m	()V	c	hideAlternates
	m	()Ldbn;	d	getMinecraftClient
	m	()Laal;	e	getRecipeBook
	m	()V	f	refreshResultButtons
	m	()V	g	hideShowPageButtons
c	dir	net/minecraft/client/gui/screen/recipebook/RecipeGroupButtonWidget
	f	Ldbu;	g	category
	f	F	h	bounce
	m	(Ldbu;)V	<init>	<init>
		p	1	category	category
	m	(Ldbc;)Z	a	hasKnownRecipes
		p	1	recipeBook	recipeBook
	m	(Ldbn;)V	a	checkForNewRecipes
		p	1	client	client
	m	(Ldvz;)V	a	renderIcons
		p	1	itemRenderer	itemRenderer
	m	()Ldbu;	b	getCategory
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dis	net/minecraft/client/gui/screen/recipebook/AnimatedResultButton
	f	Lsm;	a	BG_TEX
	f	Lbbt;	b	craftingContainer
	f	Laal;	c	recipeBook
	f	Ldit;	d	results
	f	F	e	time
	f	F	f	bounce
	f	I	g	currentResultIndex
	m	(Ldit;Ldiq;)V	a	showResultCollection
	m	(Ldgb;)Ljava/util/List;	a	getTooltip
		p	1	screen	screen
	m	()Ldit;	a	getResultCollection
	m	(II)V	a	setPos
		p	1	x	x
		p	2	y	y
	m	()Z	b	hasResults
	m	()Lbgw;	c	currentRecipe
	m	()Ljava/util/List;	d	getResults
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dit	net/minecraft/client/gui/screen/recipebook/RecipeResultCollection
	f	Ljava/util/List;	a	recipes
	f	Ljava/util/Set;	b	craftableRecipes
	f	Ljava/util/Set;	c	fittingRecipes
	f	Ljava/util/Set;	d	unlockedRecipes
	f	Z	e	singleOutput
	m	(Laal;)V	a	initialize
		p	1	recipeBook	recipeBook
	m	(Layl;IILaal;)V	a	computeCraftables
		p	1	recipeFinder	recipeFinder
		p	2	gridWidth	gridWidth
		p	3	gridHeight	gridHeight
		p	4	recipeBook	recipeBook
	m	()Z	a	isInitialized
	m	(Z)Ljava/util/List;	a	getResults
		p	1	craftableOnly	craftableOnly
	m	(Lbgw;)Z	a	isCraftable
		p	1	recipe	recipe
	m	(Lbgw;)V	b	addRecipe
		p	1	recipe	recipe
	m	(Z)Ljava/util/List;	b	getRecipes
		p	1	craftable	craftable
	m	()Z	b	hasCraftableRecipes
	m	()Z	c	hasFittingRecipes
	m	()Ljava/util/List;	d	getAllRecipes
	m	()Z	e	hasSingleOutput
c	diu	net/minecraft/client/gui/screen/recipebook/RecipeDisplayListener
	m	(Ljava/util/List;)V	a	onRecipesDisplayed
		p	1	recipes	recipes
c	div	net/minecraft/client/gui/screen/recipebook/RecipeBookProvider
	m	()V	ae_	refreshRecipeBook
	m	()Ldip;	c	getRecipeBookWidget
c	diw	net/minecraft/client/gui/screen/recipebook/FurnaceRecipeBookScreen
c	dix	net/minecraft/client/gui/screen/recipebook/SmokerRecipeBookScreen
c	diz	net/minecraft/client/gui/screen/resourcepack/ResourcePackOptionsScreen
	f	Ldjb;	c	availablePacks
	f	Ldjd;	d	enabledPacks
	f	Z	e	dirty
	m	(Ldgb;Ldbr;)V	<init>	<init>
		p	1	parent	parent
		p	2	gameOptions	gameOptions
	m	()V	a	markDirty
	m	(Ldjc$a;)V	a	enable
		p	1	resourcePack	resourcePack
	m	(Ldjc$a;)V	b	disable
		p	1	resourcePack	resourcePack
	m	(Ldjc$a;)Z	c	isEnabled
		p	1	resourcePack	resourcePack
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	dj	net/minecraft/command/arguments/ParticleArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_PARTICLE_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	()Ldj;	a	particle
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgt;	a	getParticle
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lgt;	a	parse
		p	1	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;Lgu;)Lgt;	a	readParameters
		p	0	reader	reader
		p	1	type	type
	m	(Lcom/mojang/brigadier/StringReader;)Lgt;	b	readParameters
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	djb	net/minecraft/client/gui/screen/resourcepack/AvailableResourcePackListWidget
	m	(Ldbn;II)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	djc	net/minecraft/client/gui/screen/resourcepack/ResourcePackListWidget
	f	Ldbn;	a	client
	f	Lsm;	b	RESOURCE_PACKS_LOCATION
	f	Llf;	c	INCOMPATIBLE
	f	Llf;	d	INCOMPATIBLE_CONFIRM
	f	Llf;	e	title
	m	(Ldbn;IILlf;)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
		p	4	title	title
	m	(Ldjc$a;)V	a	add
		p	1	entry	entry
c	djc$a	net/minecraft/client/gui/screen/resourcepack/ResourcePackListWidget$ResourcePackEntry
	f	Ldbn;	a	client
	f	Ldiz;	b	screen
	f	Ldjc;	c	resourcePackList
	f	Lebc;	d	pack
	m	(Ldjc;Ldiz;Lebc;)V	<init>	<init>
		p	1	listWidget	listWidget
		p	2	screen	screen
		p	3	pack	pack
	m	(Ldjd;)V	a	enable
		p	1	list	list
	m	()V	a	drawIcon
	m	()Lyp;	b	getCompatibility
	m	()Ljava/lang/String;	c	getDescription
	m	()Ljava/lang/String;	d	getDisplayName
	m	()Lebc;	e	getPack
	m	()Z	f	isMoveable
	m	()Z	g	isSelectable
	m	()Z	h	isRemovable
	m	()Z	i	canMoveUp
	m	()Z	j	canMoveDown
	m	()Ldiz;	k	getScreen
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	djd	net/minecraft/client/gui/screen/resourcepack/SelectedResourcePackListWidget
	m	(Ldbn;II)V	<init>	<init>
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	djh	net/minecraft/client/gui/screen/world/CreateWorldScreen
	f	I	A	generatorType
	f	Ljt;	a	generatorOptionsTag
	f	Ldgb;	b	parent
	f	Lddc;	c	levelNameField
	f	Lddc;	d	seedField
	f	Ljava/lang/String;	e	saveDirectoryName
	f	Ldjh$a;	f	currentMode
	f	Ldjh$a;	g	lastMode
	f	Z	h	structures
	f	Z	i	cheatsEnabled
	f	Z	j	tweakedCheats
	f	Z	k	bonusChest
	f	Z	l	hardcore
	f	Z	m	creatingLevel
	f	Z	n	moreOptionsOpen
	f	Ldcv;	o	createLevelButton
	f	Ldcv;	p	gameModeSwitchButton
	f	Ldcv;	q	moreOptionsButton
	f	Ldcv;	r	generateStructuresButton
	f	Ldcv;	s	generateBonusChestButton
	f	Ldcv;	t	mapTypeSwitchButton
	f	Ldcv;	u	enableCheatsButton
	f	Ldcv;	v	customizeTypeButton
	f	Ljava/lang/String;	w	firstGameModeDescriptionLine
	f	Ljava/lang/String;	x	secondGameModeDescriptionLine
	f	Ljava/lang/String;	y	seed
	f	Ljava/lang/String;	z	levelName
	m	(Ldgb;)V	<init>	<init>
		p	1	parent	parent
	m	(Z)V	a	setMoreOptionsOpen
		p	1	moreOptionsOpen	moreOptionsOpen
	m	()V	a	updateSettingsLabels
	m	(Lcrm;)V	a	recreateLevel
		p	1	levelProperties	levelProperties
	m	(Ldjh$a;)V	a	tweakDefaultsTo
		p	1	mode	mode
	m	()V	b	updateSaveFolderName
	m	()V	c	createLevel
	m	()Z	d	isGeneratorTypeValid
	m	()V	e	toggleMoreOptions
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	djh$a	net/minecraft/client/gui/screen/world/CreateWorldScreen$Mode
	f	Ljava/lang/String;	e	translationSuffix
	f	Lbjt;	f	defaultGameMode
	m	(Ljava/lang/String;ILjava/lang/String;Lbjt;)V	<init>	<init>
		p	3	translationSuffix	translationSuffix
		p	4	defaultGameMode	defaultGameMode
c	dji	net/minecraft/client/gui/screen/world/EditWorldScreen
	f	Ldcv;	a	saveButton
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	b	callback
	f	Lddc;	c	levelNameTextField
	f	Ljava/lang/String;	d	levelName
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ljava/lang/String;)V	<init>	<init>
		p	1	callback	callback
		p	2	levelName	levelName
	m	()V	a	commit
	m	(Lcrp;Ljava/lang/String;)V	a	backupLevel
		p	0	level	level
		p	1	name	name
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ldbn;II)V	resize	resize
		p	1	client	client
		p	2	width	width
		p	3	height	height
c	djj	net/minecraft/client/gui/screen/world/OptimizeWorldScreen
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	DIMENSION_COLORS
	f	Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;	b	callback
	f	Laiz;	c	updater
	m	(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ljava/lang/String;Lcrp;Z)V	<init>	<init>
		p	1	callback	callback
		p	3	levelStorage	levelStorage
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	djk	net/minecraft/client/gui/screen/world/SelectWorldScreen
	f	Ldgb;	a	parent
	f	Lddc;	b	searchBox
	f	Ljava/lang/String;	c	tooltipText
	f	Ldcv;	d	deleteButton
	f	Ldcv;	e	selectButton
	f	Ldcv;	f	editButton
	f	Ldcv;	g	recreateButton
	f	Ldjl;	h	levelList
	m	(Ldgb;)V	<init>	<init>
		p	1	parent	parent
	m	(Ljava/lang/String;)V	a	setTooltip
		p	1	value	value
	m	(Z)V	a	worldSelected
		p	1	active	active
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
c	djl	net/minecraft/client/gui/screen/world/WorldListWidget
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/text/DateFormat;	b	DATE_FORMAT
	f	Lsm;	c	UNKNOWN_SERVER_LOCATION
	f	Lsm;	d	WORLD_SELECTION_LOCATION
	f	Ldjk;	e	parent
	f	Ljava/util/List;	f	levels
	m	(Ldjk;Ldbn;IIIIILjava/util/function/Supplier;Ldjl;)V	<init>	<init>
		p	1	parent	parent
		p	2	client	client
		p	3	width	width
		p	4	height	height
		p	5	top	top
		p	6	bottom	bottom
		p	7	itemHeight	itemHeight
		p	8	searchFilter	searchFilter
		p	9	list	list
	m	(Ljava/util/function/Supplier;Z)V	a	filter
		p	1	filter	filter
		p	2	load	load
	m	(Ldjl$a;)V	a	setSelected
	m	()Ldjk;	b	getParent
c	djl$a	net/minecraft/client/gui/screen/world/WorldListWidget$Entry
	f	Ldbn;	b	client
	f	Ldjk;	c	screen
	f	Lcrq;	d	level
	f	Lsm;	e	iconLocation
	f	Ljava/io/File;	f	iconFile
	f	Ldzy;	g	icon
	f	J	h	time
	m	(Ldjl;Ldjl;Lcrq;Lcrp;)V	<init>	<init>
		p	2	levelList	levelList
		p	3	level	level
		p	4	levelStorage	levelStorage
	m	()V	a	play
	m	()V	b	delete
	m	()V	c	edit
	m	()V	d	recreate
	m	()V	e	start
	m	()Ldzy;	f	getIconTexture
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	djn	net/minecraft/client/gui/hud/spectator/TeleportToSpecificPlayerSpectatorCommand
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
	f	Lsm;	b	skinId
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	gameProfile	gameProfile
c	djo	net/minecraft/client/gui/hud/spectator/RootSpectatorCommandGroup
	f	Ljava/util/List;	a	elements
c	djp	net/minecraft/client/gui/hud/spectator/SpectatorMenu
	f	Ldjr;	a	BLANK_COMMAND
	f	Ldjr;	b	CLOSE_COMMAND
	f	Ldjr;	c	PREVIOUS_PAGE_COMMAND
	f	Ldjr;	d	NEXT_PAGE_COMMAND
	f	Ldjr;	e	DISABLED_NEXT_PAGE_COMMAND
	f	Ldjs;	f	closeCallback
	f	Ljava/util/List;	g	stateStack
	f	Ldjq;	h	currentGroup
	f	I	i	selectedSlot
	f	I	j	page
	m	(Ldjs;)V	<init>	<init>
		p	1	closeCallback	closeCallback
	m	(Ldjq;)V	a	selectElement
		p	1	group	group
	m	(I)Ldjr;	a	getCommand
		p	1	slot	slot
	m	()Ljava/util/List;	a	getCommands
	m	()Ldjr;	b	getSelectedCommand
	m	(I)V	b	useCommand
		p	1	slot	slot
	m	()Ldjq;	c	getCurrentGroup
	m	()V	d	close
	m	()I	e	getSelectedSlot
	m	()Ldjt;	f	getCurrentState
c	djp$a	net/minecraft/client/gui/hud/spectator/SpectatorMenu$CloseSpectatorMenuCommand
c	djp$b	net/minecraft/client/gui/hud/spectator/SpectatorMenu$ChangePageSpectatorMenuCommand
	f	I	a	direction
	f	Z	b	enabled
	m	(IZ)V	<init>	<init>
		p	1	direction	direction
		p	2	enabled	enabled
c	djq	net/minecraft/client/gui/hud/spectator/SpectatorMenuCommandGroup
	m	()Ljava/util/List;	a	getCommands
	m	()Llf;	b	getPrompt
c	djr	net/minecraft/client/gui/hud/spectator/SpectatorMenuCommand
	m	(Ldjp;)V	a	use
		p	1	menu	menu
	m	(FI)V	a	renderIcon
		p	1	brightness	brightness
		p	2	alpha	alpha
	m	()Llf;	af_	getName
	m	()Z	ag_	isEnabled
c	djs	net/minecraft/client/gui/hud/spectator/SpectatorMenuCloseCallback
	m	(Ldjp;)V	a	close
		p	1	menu	menu
c	djt	net/minecraft/client/gui/hud/spectator/SpectatorMenuState
	f	Ldjq;	a	group
	f	Ljava/util/List;	b	commands
	f	I	c	selectedSlot
	m	(Ldjq;Ljava/util/List;I)V	<init>	<init>
		p	1	group	group
		p	2	commands	commands
		p	3	selectedSlot	selectedSlot
	m	(I)Ldjr;	a	getCommand
		p	1	slot	slot
	m	()I	b	getSelectedSlot
c	dju	net/minecraft/client/gui/hud/spectator/TeleportSpectatorMenu
	f	Lcom/google/common/collect/Ordering;	a	ORDERING
	f	Ljava/util/List;	b	elements
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1	entries	entries
c	djv	net/minecraft/client/gui/hud/spectator/TeamTeleportSpectatorMenu
	f	Ljava/util/List;	a	commands
c	djv$a	net/minecraft/client/gui/hud/spectator/TeamTeleportSpectatorMenu$TeleportToSpecificTeamCommand
	f	Lcwj;	b	team
	f	Lsm;	c	skinId
	f	Ljava/util/List;	d	scoreboardEntries
c	djy	net/minecraft/client/RunArgs
	f	Ldjy$d;	a	network
	f	Lcxh;	b	windowSettings
	f	Ldjy$a;	c	directories
	f	Ldjy$b;	d	game
	f	Ldjy$c;	e	autoConnect
	m	(Ldjy$d;Lcxh;Ldjy$a;Ldjy$b;Ldjy$c;)V	<init>	<init>
		p	1	network	network
		p	2	windowSettings	windowSettings
		p	3	dirs	dirs
		p	4	game	game
		p	5	autoConnect	autoConnect
c	djy$a	net/minecraft/client/RunArgs$Directories
	f	Ljava/io/File;	a	runDir
	f	Ljava/io/File;	b	resourcePackDir
	f	Ljava/io/File;	c	assetDir
	f	Ljava/lang/String;	d	assetIndex
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V	<init>	<init>
		p	1	runDir	runDir
		p	2	resPackDir	resPackDir
		p	3	assetDir	assetDir
		p	4	assetIndex	assetIndex
	m	()Lean;	a	getResourceIndex
c	djy$b	net/minecraft/client/RunArgs$Game
	f	Z	a	demo
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	versionType
	m	(ZLjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	demo	demo
		p	2	version	version
		p	3	versionType	versionType
c	djy$c	net/minecraft/client/RunArgs$AutoConnect
	f	Ljava/lang/String;	a	serverAddress
	f	I	b	serverPort
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	serverAddress	serverAddress
		p	2	serverPort	serverPort
c	djy$d	net/minecraft/client/RunArgs$Network
	f	Ldbz;	a	session
	f	Lcom/mojang/authlib/properties/PropertyMap;	c	profileProperties
	f	Ljava/net/Proxy;	d	netProxy
	m	(Ldbz;Lcom/mojang/authlib/properties/PropertyMap;Lcom/mojang/authlib/properties/PropertyMap;Ljava/net/Proxy;)V	<init>	<init>
		p	1	session	session
		p	3	profileProperties	profileProperties
		p	4	proxy	proxy
c	djz	net/minecraft/client/util/GlException
c	dk	net/minecraft/command/arguments/NumberRangeArgumentType
	m	()Ldk$b;	a	numberRange
c	dk$a	net/minecraft/command/arguments/NumberRangeArgumentType$FloatRangeArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lbr$c;	a	parse
c	dk$a$a	net/minecraft/command/arguments/NumberRangeArgumentType$FloatRangeArgumentType$Serializer
	m	(Lkv;)Ldk$a;	a	fromPacket
c	dk$b	net/minecraft/command/arguments/NumberRangeArgumentType$IntRangeArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Lbr$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbr$d;	a	getRangeArgument
c	dk$b$a	net/minecraft/command/arguments/NumberRangeArgumentType$IntRangeArgumentType$Serializer
	m	(Lkv;)Ldk$b;	a	fromPacket
c	dk$c	net/minecraft/command/arguments/NumberRangeArgumentType$NumberSerializer
	m	(Ldk;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Ldk;Lkv;)V	a	toPacket
c	dkd	net/minecraft/client/render/entity/model/AbstractZombieModel
	m	(Laww;)Z	a	isAttacking
	m	(Laww;FFFFF)V	a	setAngles
c	dke	net/minecraft/client/render/entity/model/AnimalModel
	f	Z	a	headScaled
	f	F	b	childHeadYOffset
	f	F	f	childHeadZOffset
	f	F	g	invertedChildHeadScale
	f	F	h	invertedChildBodyScale
	f	F	i	childBodyYOffset
	m	(ZFF)V	<init>	<init>
		p	1	headScaled	headScaled
		p	2	childHeadYOffset	childHeadYOffset
		p	3	childHeadZOffset	childHeadZOffset
	m	(Ljava/util/function/Function;ZFFFFF)V	<init>	<init>
		p	2	headScaled	headScaled
		p	3	childHeadYOffset	childHeadYOffset
		p	4	childHeadZOffset	childHeadZOffset
		p	5	invertedChildHeadScale	invertedChildHeadScale
		p	6	invertedChildBodyScale	invertedChildBodyScale
		p	7	childBodyYOffset	childBodyYOffset
	m	(ZFFFFF)V	<init>	<init>
		p	1	headScaled	headScaled
		p	2	childHeadYOffset	childHeadYOffset
		p	3	childHeadZOffset	childHeadZOffset
		p	4	invertedChildHeadScale	invertedChildHeadScale
		p	5	invertedChildBodyScale	invertedChildBodyScale
		p	6	childBodyYOffset	childBodyYOffset
	m	()Ljava/lang/Iterable;	a	getHeadParts
	m	()Ljava/lang/Iterable;	b	getBodyParts
c	dkf	net/minecraft/client/render/entity/model/ModelWithArms
	m	(Laky;Lcyl;)V	a	setArmAngle
		p	1	arm	arm
c	dkg	net/minecraft/client/render/entity/model/ArmorStandArmorEntityModel
	m	(FII)V	<init>	<init>
		p	1	scale	scale
		p	2	textureWidth	textureWidth
		p	3	textureHeight	textureHeight
	m	(Lavp;FFFFF)V	a	setAngles
c	dkh	net/minecraft/client/render/entity/model/ArmorStandEntityModel
	f	Ldni;	a	rightTorso
	f	Ldni;	b	leftTorso
	f	Ldni;	t	hip
	f	Ldni;	u	plate
	m	(Lavp;FFF)V	a	animateModel
	m	(Lavp;FFFFF)V	setAngles	setAngles
c	dki	net/minecraft/client/render/entity/model/BatEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	body
	f	Ldni;	f	rightWing
	f	Ldni;	g	leftWing
	f	Ldni;	h	rightWingTip
	f	Ldni;	i	leftWingTip
	m	(Lasx;FFFFF)V	a	setAngles
c	dkj	net/minecraft/client/render/entity/model/BeeEntityModel
	f	Ldni;	a	body
	f	Ldni;	b	torso
	f	Ldni;	f	rightWing
	f	Ldni;	g	leftWing
	f	Ldni;	h	frontLegs
	f	Ldni;	i	middleLegs
	f	Ldni;	j	backLegs
	f	Ldni;	k	stinger
	f	Ldni;	l	leftAntenna
	f	Ldni;	m	rightAntenna
	f	F	n	bodyPitch
	m	(Latd;FFF)V	a	animateModel
	m	(Latd;FFFFF)V	a	setAngles
c	dkk	net/minecraft/client/render/entity/model/BlazeEntityModel
	f	[Ldni;	a	rods
	f	Ldni;	b	head
	f	Lcom/google/common/collect/ImmutableList;	f	parts
c	dkl	net/minecraft/client/render/entity/model/BoatEntityModel
	f	[Ldni;	a	paddles
	f	Ldni;	b	bottom
	f	Lcom/google/common/collect/ImmutableList;	f	parts
	m	(Lazz;IF)V	a	setPaddleAngle
		p	1	boat	boat
		p	2	paddle	paddle
		p	3	angle	angle
	m	(Z)Ldni;	a	makePaddle
		p	1	isLeft	isLeft
	m	(Lazz;FFFFF)V	a	setAngles
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
	m	()Ldni;	c	getBottom
c	dkm	net/minecraft/client/render/entity/model/BookModel
	f	Ldni;	a	leftCover
	f	Ldni;	b	rightCover
	f	Ldni;	c	leftBlock
	f	Ldni;	d	rightBlock
	f	Ldni;	e	leftPage
	f	Ldni;	f	rightPage
	f	Ldni;	g	spine
	f	Ljava/util/List;	h	parts
	m	(FFFF)V	a	setPageAngles
c	dkn	net/minecraft/client/render/entity/model/CatEntityModel
	f	F	m	sleepAnimation
	f	F	n	tailCurlAnimation
	f	F	o	headDownAnimation
	m	(Late;FFF)V	a	animateModel
	m	(Late;FFFFF)V	a	setAngles
c	dko	net/minecraft/client/render/entity/model/DonkeyEntityModel
	f	Ldni;	f	leftChest
	f	Ldni;	g	rightChest
	m	(Laud;FFFFF)V	a	setAngles
c	dkp	net/minecraft/client/render/entity/model/ChickenEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	torso
	f	Ldni;	f	rightLeg
	f	Ldni;	g	leftLeg
	f	Ldni;	h	rightWing
	f	Ldni;	i	leftWing
	f	Ldni;	j	beak
	f	Ldni;	k	wattle
c	dkq	net/minecraft/client/render/entity/model/CodEntityModel
	f	Ldni;	a	body
	f	Ldni;	b	topFin
	f	Ldni;	f	head
	f	Ldni;	g	face
	f	Ldni;	h	rightFin
	f	Ldni;	i	leftFin
	f	Ldni;	j	tail
c	dkr	net/minecraft/client/render/entity/model/TintableAnimalModel
	f	F	a	redMultiplier
	f	F	b	greenMultiplier
	f	F	f	blueMultiplier
	m	(FFF)V	a	setColorMultiplier
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
c	dks	net/minecraft/client/render/entity/model/TintableCompositeModel
	f	F	a	redMultiplier
	f	F	b	greenMultiplier
	f	F	f	blueMultiplier
	m	(FFF)V	a	setColorMultiplier
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
c	dkt	net/minecraft/client/render/entity/model/CowEntityModel
	m	()Ldni;	c	getHead
c	dku	net/minecraft/client/render/entity/model/CreeperEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	helmet
	f	Ldni;	f	torso
	f	Ldni;	g	rightBackLeg
	f	Ldni;	h	leftBackLeg
	f	Ldni;	i	rightFrontLeg
	f	Ldni;	j	leftFrontLeg
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dkv	net/minecraft/client/render/entity/model/DolphinEntityModel
	f	Ldni;	a	body
	f	Ldni;	b	tail
	f	Ldni;	f	flukes
c	dkw	net/minecraft/client/render/entity/model/DrownedEntityModel
	m	(FFII)V	<init>	<init>
		p	1	scale	scale
		p	3	textureWidth	textureWidth
	m	(Laxp;FFFFF)V	a	setAngles
	m	(Laxp;FFF)V	a	animateModel
c	dkx	net/minecraft/client/render/entity/model/ElytraEntityModel
	m	(Lakz;FFFFF)V	a	setAngles
c	dky	net/minecraft/client/render/entity/model/EndermanEntityModel
	f	Z	a	carryingBlock
	f	Z	b	angry
	m	(Lakz;FFFFF)V	setAngles	setAngles
c	dkz	net/minecraft/client/render/entity/model/EndermiteEntityModel
c	dl	net/minecraft/command/arguments/IdentifierArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_ADVANCEMENT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_RECIPE_EXCEPTION
	m	()Ldl;	a	identifier
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lu;	a	getAdvancementArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lsm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbgw;	b	getRecipeArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lsm;	d	getIdentifier
		p	0	context	context
		p	1	name	name
c	dla	net/minecraft/client/render/entity/model/EntityModel
	f	F	c	handSwingProgress
	f	Z	d	riding
	f	Z	e	child
	m	(Lakq;FFF)V	a	animateModel
		p	1	entity	entity
		p	2	limbAngle	limbAngle
		p	3	limbDistance	limbDistance
		p	4	tickDelta	tickDelta
	m	(Lakq;FFFFF)V	a	setAngles
		p	1	entity	entity
		p	2	limbAngle	limbAngle
		p	3	limbDistance	limbDistance
		p	4	customAngle	customAngle
		p	5	headYaw	headYaw
		p	6	headPitch	headPitch
	m	(Ldla;)V	a	copyStateTo
		p	1	copy	copy
c	dlb	net/minecraft/client/render/entity/model/EvokerFangsEntityModel
c	dlc	net/minecraft/client/render/entity/model/FoxEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	rightEar
	f	Ldni;	f	leftEar
	f	Ldni;	g	nose
	f	Ldni;	h	torso
	f	Ldni;	i	rightBackLeg
	f	Ldni;	j	leftBackLeg
	f	Ldni;	k	rightFrontLeg
	f	Ldni;	l	leftFrontLeg
	f	Ldni;	m	tail
	m	(Latk;FFF)V	a	animateModel
	m	(Latk;FFFFF)V	a	setAngles
c	dld	net/minecraft/client/render/entity/model/GhastEntityModel
c	dle	net/minecraft/client/render/entity/model/GiantEntityModel
	m	(Lawr;)Z	a	isAttacking
c	dlf	net/minecraft/client/render/entity/model/GuardianEntityModel
	f	Ldni;	j	body
	f	Ldni;	k	eye
	m	(Laws;FFFFF)V	a	setAngles
c	dlg	net/minecraft/client/render/entity/model/ModelWithHead
	m	()Ldni;	c	getHead
c	dlh	net/minecraft/client/render/entity/model/HorseEntityModel
	f	Ldni;	a	torso
	f	Ldni;	b	head
	f	Ldni;	f	leftBackLeg
	f	Ldni;	g	rightBackLeg
	f	Ldni;	h	leftFrontLeg
	f	Ldni;	i	rightFrontLeg
	f	Ldni;	n	tail
	m	(Laue;FFF)V	a	animateModel
	m	(Laue;FFFFF)V	a	setAngles
c	dli	net/minecraft/client/render/entity/model/SkullOverlayEntityModel
c	dlj	net/minecraft/client/render/entity/model/BipedEntityModel
	f	F	a	itemUsedTime
	f	Ldni;	f	head
	f	Ldni;	g	helmet
	f	Ldni;	h	torso
	f	Ldni;	i	rightArm
	f	Ldni;	j	leftArm
	f	Ldni;	k	rightLeg
	f	Ldni;	l	leftLeg
	f	Ldlj$a;	m	leftArmPose
	f	Ldlj$a;	n	rightArmPose
	f	Z	o	isSneaking
	m	(F)V	<init>	<init>
		p	1	scale	scale
	m	(Lakz;FFF)V	a	animateModel
	m	(Ldlj;)V	a	setAttributes
	m	(Lakz;FFFFF)V	a	setAngles
	m	(FFF)F	a	lerpAngle
		p	1	from	from
		p	2	to	to
		p	3	position	position
	m	(Lakz;)Laky;	a	getPreferredArm
		p	1	entity	entity
	m	(Laky;)Ldni;	a	getArm
		p	1	arm	arm
	m	(Z)V	b_	setVisible
		p	1	visible	visible
c	dlj$a	net/minecraft/client/render/entity/model/BipedEntityModel$ArmPose
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	name	name
		p	2	id	id
c	dlk	net/minecraft/client/render/entity/model/IllagerEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	hat
	f	Ldni;	f	torso
	f	Ldni;	g	arms
	f	Ldni;	h	rightLeg
	f	Ldni;	i	leftLeg
	f	Ldni;	j	rightAttackingArm
	f	Ldni;	k	leftAttackingArm
	m	(Lawe;FFF)V	a	animateModel
	m	(Lawe;FFFFF)V	a	setAngles
c	dll	net/minecraft/client/render/entity/model/IronGolemEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	torso
	f	Ldni;	f	rightArm
	f	Ldni;	g	leftArm
	f	Ldni;	h	rightLeg
	f	Ldni;	i	leftLeg
	m	(Latl;FFF)V	a	animateModel
	m	(Latl;FFFFF)V	a	setAngles
	m	()Ldni;	b	getRightArm
c	dlm	net/minecraft/client/render/entity/model/MagmaCubeEntityModel
	f	Ldni;	b	innerCube
	m	(Laxh;FFFFF)V	a	setAngles
	m	(Laxh;FFF)V	a	animateModel
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
c	dln	net/minecraft/client/render/entity/model/LeashEntityModel
c	dlo	net/minecraft/client/render/entity/model/CompositeEntityModel
	m	()Ljava/lang/Iterable;	a	getParts
c	dlp	net/minecraft/client/render/entity/model/LlamaEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	torso
	f	Ldni;	f	rightBackLeg
	f	Ldni;	g	leftBackLeg
	f	Ldni;	h	rightFrontLeg
	f	Ldni;	i	leftFrontLeg
	f	Ldni;	j	rightChest
	f	Ldni;	k	leftChest
	m	(Laud;FFFFF)V	a	setAngles
c	dlq	net/minecraft/client/render/entity/model/LlamaSpitEntityModel
c	dlr	net/minecraft/client/render/entity/model/MinecartEntityModel
c	dls	net/minecraft/client/model/Model
	f	Ljava/util/function/Function;	q	layerFactory
	f	I	r	textureWidth
	f	I	s	textureHeight
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	layerFactory	layerFactory
	m	(Lsm;)Ldrb;	a	getLayer
		p	1	texture	texture
	m	(Lcyl;Lcyo;IIFFFF)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumer	vertexConsumer
		p	3	light	light
		p	4	overlay	overlay
		p	5	red	red
		p	6	green	green
		p	7	blue	blue
		p	8	alpha	alpha
	m	(Ldni;)V	b	accept
c	dlt	net/minecraft/client/model/ModelUtil
	m	(FFF)F	a	interpolateAngle
		p	0	angle1	angle1
		p	1	angle2	angle2
		p	2	progress	progress
c	dlu	net/minecraft/client/render/entity/model/OcelotEntityModel
	f	Ldni;	a	leftBackLeg
	f	Ldni;	b	rightBackLeg
	f	Ldni;	f	leftFrontLeg
	f	Ldni;	g	rightFrontLeg
	f	Ldni;	h	upperTail
	f	Ldni;	i	lowerTail
	f	Ldni;	j	head
	f	Ldni;	k	torso
	f	I	l	animationState
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dlv	net/minecraft/client/render/entity/model/PandaEntityModel
	f	F	j	scaredAnimationProgress
	f	F	k	lieOnBackAnimationProgress
	f	F	l	playAnimationProgress
	m	(Lato;FFFFF)V	a	setAngles
	m	(Lato;FFF)V	a	animateModel
c	dlw	net/minecraft/client/render/entity/model/ParrotEntityModel
	f	Ldni;	a	torso
	f	Ldni;	b	tail
	f	Ldni;	f	leftWing
	f	Ldni;	g	rightWing
	f	Ldni;	h	head
	f	Ldni;	i	forehead
	f	Ldni;	j	innerBeak
	f	Ldni;	k	outerBeak
	f	Ldni;	l	headFeathers
	f	Ldni;	m	leftLeg
	f	Ldni;	n	rightLeg
	m	(Latp;FFFFF)V	a	setAngles
	m	(Ldlw$a;IFFFFF)V	a	method_17111
		p	1	pose	pose
		p	2	age	age
		p	3	limbAngle	limbAngle
		p	4	limbDistance	limbDistance
		p	5	age	age
		p	6	headYaw	headYaw
		p	7	headPitch	headPitch
	m	(Latp;)Ldlw$a;	a	getPose
	m	(Latp;FFF)V	a	animateModel
c	dlw$a	net/minecraft/client/render/entity/model/ParrotEntityModel$Pose
c	dlx	net/minecraft/client/render/entity/model/PhantomEntityModel
	f	Ldni;	a	body
	f	Ldni;	b	leftWing
	f	Ldni;	f	leftWingTip
	f	Ldni;	g	rightWing
	f	Ldni;	h	rightWingTip
	f	Ldni;	i	tail
	f	Ldni;	j	lowerTail
c	dly	net/minecraft/client/render/entity/model/PigEntityModel
c	dlz	net/minecraft/client/render/entity/model/PlayerEntityModel
	f	Ldni;	a	leftSleeve
	f	Ldni;	b	rightSleeve
	f	Ldni;	t	leftPantLeg
	f	Ldni;	u	rightPantLeg
	f	Ldni;	v	jacket
	f	Ljava/util/List;	w	parts
	f	Ldni;	x	cape
	f	Ldni;	y	ears
	f	Z	z	thinArms
	m	(FZ)V	<init>	<init>
		p	1	scale	scale
		p	2	thinArms	thinArms
	m	(Ljava/util/Random;)Ldni;	a	getRandomPart
		p	1	random	random
	m	(Lcyl;Lcyo;II)V	a	renderEars
	m	(Ldni;)V	accept	accept
	m	(Lcyl;Lcyo;II)V	b	renderCape
	m	(Lakz;FFFFF)V	setAngles	setAngles
c	dm	net/minecraft/command/arguments/ScoreHolderArgumentType
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	EMPTY_SCORE_HOLDER_EXCEPTION
	f	Z	d	multiple
	m	(Z)V	<init>	<init>
		p	1	multiple	multiple
	m	(Lcom/mojang/brigadier/StringReader;)Ldm$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getScoreHolder
		p	0	context	context
		p	1	name	name
	m	()Ldm;	a	scoreHolder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getScoreHolders
		p	0	context	context
		p	1	name	name
		p	2	players	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getScoreHolders
		p	0	context	context
		p	1	name	name
	m	()Ldm;	b	scoreHolders
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getScoreboardScoreHolders
		p	0	context	context
		p	1	name	name
c	dm$a	net/minecraft/command/arguments/ScoreHolderArgumentType$ScoreHolder
	m	(Lcq;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1	source	source
c	dm$b	net/minecraft/command/arguments/ScoreHolderArgumentType$SelectorScoreHolder
	f	Lep;	a	selector
	m	(Lcq;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1	source	source
c	dm$c	net/minecraft/command/arguments/ScoreHolderArgumentType$Serializer
	m	(Ldm;Lkv;)V	a	toPacket
	m	(Ldm;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lkv;)Ldm;	a	fromPacket
c	dma	net/minecraft/client/render/entity/model/PolarBearEntityModel
	m	(Latr;FFFFF)V	a	setAngles
c	dmb	net/minecraft/client/render/entity/model/LargePufferfishEntityModel
c	dmc	net/minecraft/client/render/entity/model/MediumPufferfishEntityModel
c	dmd	net/minecraft/client/render/entity/model/SmallPufferfishEntityModel
c	dme	net/minecraft/client/render/entity/model/QuadrupedEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	torso
	f	Ldni;	f	backRightLeg
	f	Ldni;	g	backLeftLeg
	f	Ldni;	h	frontRightLeg
	f	Ldni;	i	frontLeftLeg
	m	(IFZFFFFI)V	<init>	<init>
		p	1	legHeight	legHeight
		p	2	scale	scale
		p	3	headScaled	headScaled
		p	4	childHeadYOffset	childHeadYOffset
		p	5	childHeadZOffset	childHeadZOffset
		p	6	invertedChildHeadScale	invertedChildHeadScale
		p	7	invertedChildBodyScale	invertedChildBodyScale
		p	8	childBodyYOffset	childBodyYOffset
c	dmf	net/minecraft/client/render/entity/model/RabbitEntityModel
	f	Ldni;	a	leftFoot
	f	Ldni;	b	rightFoot
	f	Ldni;	f	leftBackLeg
	f	Ldni;	g	rightBackLeg
	f	Ldni;	h	torso
	f	Ldni;	i	leftFrontLeg
	f	Ldni;	j	rightFrontLeg
	f	Ldni;	k	head
	f	Ldni;	l	rightEar
	f	Ldni;	m	leftEar
	f	Ldni;	n	tail
	f	Ldni;	o	nose
	m	(Latt;FFF)V	a	animateModel
	m	(Latt;FFFFF)V	a	setAngles
c	dmg	net/minecraft/client/render/entity/model/RavagerEntityModel
	f	Ldni;	b	jaw
	f	Ldni;	f	torso
	f	Ldni;	g	rightBackLeg
	f	Ldni;	h	leftBackLeg
	f	Ldni;	i	rightFrontLeg
	f	Ldni;	j	leftFrontLeg
	m	(Laxc;FFF)V	a	animateModel
	m	(Laxc;FFFFF)V	a	setAngles
c	dmh	net/minecraft/client/render/entity/model/SalmonEntityModel
	f	Ldni;	a	torso
	f	Ldni;	b	tail
	f	Ldni;	f	head
	f	Ldni;	g	rightFin
	f	Ldni;	h	leftFin
c	dmi	net/minecraft/client/render/entity/model/SheepWoolEntityModel
	m	(Latv;FFFFF)V	a	setAngles
	m	(Latv;FFF)V	a	animateModel
c	dmj	net/minecraft/client/render/entity/model/SheepEntityModel
	m	(Latv;FFFFF)V	a	setAngles
	m	(Latv;FFF)V	a	animateModel
c	dmk	net/minecraft/client/render/entity/model/ShieldEntityModel
c	dml	net/minecraft/client/render/entity/model/ShulkerBulletEntityModel
c	dmm	net/minecraft/client/render/entity/model/ShulkerEntityModel
	f	Ldni;	a	bottomShell
	f	Ldni;	b	topShell
	f	Ldni;	f	head
	m	(Laxe;FFFFF)V	a	setAngles
	m	()Ldni;	b	getBottomShell
	m	()Ldni;	c	getTopShell
	m	()Ldni;	d	getHead
c	dmn	net/minecraft/client/render/entity/model/SilverfishEntityModel
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
c	dmo	net/minecraft/client/render/entity/model/SkeletonEntityModel
	m	(FZ)V	<init>	<init>
		p	1	stretch	stretch
		p	2	isClothing	isClothing
	m	(Lala;FFFFF)V	a	setAngles
	m	(Lala;FFF)V	a	animateModel
c	dmp	net/minecraft/client/render/entity/model/SkullEntityModel
	f	Ldni;	a	skull
	m	(IIII)V	<init>	<init>
		p	1	textureU	textureU
		p	2	textureV	textureV
		p	3	textureWidth	textureWidth
		p	4	textureHeight	textureHeight
	m	(FFF)V	a	render
c	dmq	net/minecraft/client/render/entity/model/SlimeEntityModel
	f	Ldni;	a	innerCube
	f	Ldni;	b	rightEye
	f	Ldni;	f	leftEye
	f	Ldni;	g	mouth
c	dmr	net/minecraft/client/render/entity/model/SnowmanEntityModel
	f	Ldni;	a	middleSnowball
	f	Ldni;	b	bottomSnowball
	f	Ldni;	f	topSnowball
	f	Ldni;	g	leftArm
	f	Ldni;	h	rightArm
c	dms	net/minecraft/client/render/entity/model/SpiderEntityModel
	f	Ldni;	a	head
	f	Ldni;	b	thorax
	f	Ldni;	f	abdomen
	f	Ldni;	g	rightBackLeg
	f	Ldni;	h	leftBackLeg
	f	Ldni;	i	rightBackMiddleLeg
	f	Ldni;	j	leftBackMiddleLeg
	f	Ldni;	k	rightFrontMiddleLeg
	f	Ldni;	l	leftFrontMiddleLeg
	f	Ldni;	m	rightFrontLeg
	f	Ldni;	n	leftFrontLeg
c	dmt	net/minecraft/client/render/entity/model/SquidEntityModel
	f	Ldni;	a	head
c	dmu	net/minecraft/client/render/entity/model/TridentEntityModel
	f	Lsm;	a	TEXTURE
c	dmv	net/minecraft/client/render/entity/model/TropicalFishEntityModelA
c	dmw	net/minecraft/client/render/entity/model/TropicalFishEntityModelB
c	dmx	net/minecraft/client/render/entity/model/TurtleEntityModel
	m	(Laua;FFFFF)V	a	setAngles
c	dmy	net/minecraft/client/render/entity/model/VexEntityModel
	f	Ldni;	a	leftWing
	f	Ldni;	b	rightWing
	m	(Laxl;FFFFF)V	a	setAngles
c	dmz	net/minecraft/client/render/entity/model/ModelWithHat
	m	(Z)V	a	setHatVisible
		p	1	visible	visible
c	dn	net/minecraft/command/arguments/ScoreboardSlotArgumentType
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	INVALID_SLOT_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getScorebordSlot
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	()Ldn;	a	scoreboardSlot
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dna	net/minecraft/client/render/entity/model/VillagerResemblingModel
	f	Ldni;	a	head
	f	Ldni;	g	torso
	f	Ldni;	h	robe
	f	Ldni;	i	arms
	f	Ldni;	j	rightLeg
	f	Ldni;	k	leftLeg
	f	Ldni;	l	nose
	m	(FII)V	<init>	<init>
		p	1	scale	scale
		p	2	textureWidth	textureWidth
		p	3	textureHeight	textureHeight
	m	(F)V	<init>	<init>
		p	1	scale	scale
c	dnb	net/minecraft/client/render/entity/model/WitchEntityModel
	f	Z	m	liftingNose
	f	Ldni;	n	mole
	m	()Ldni;	b	getNose
	m	(Z)V	b	setLiftingNose
c	dnc	net/minecraft/client/render/entity/model/WitherEntityModel
	m	(Lavn;FFF)V	a	animateModel
	m	(Lavn;FFFFF)V	a	setAngles
	m	()Lcom/google/common/collect/ImmutableList;	b	getParts
c	dnd	net/minecraft/client/render/entity/model/WolfEntityModel
	f	Ldni;	a	head
	f	Ldni;	f	torso
	f	Ldni;	g	rightBackLeg
	f	Ldni;	h	leftBackLeg
	f	Ldni;	i	rightFrontLeg
	f	Ldni;	j	leftFrontLeg
	f	Ldni;	k	tail
	f	Ldni;	m	neck
	m	(Lauc;FFFFF)V	a	setAngles
	m	(Lauc;FFF)V	a	animateModel
c	dne	net/minecraft/client/render/entity/model/ZombieEntityModel
	m	(Laxp;)Z	a	isAttacking
c	dnf	net/minecraft/client/render/entity/model/ZombieVillagerEntityModel
	f	Ldni;	a	hat
	m	(Laxp;FFFFF)V	a	setAngles
c	dng	net/minecraft/client/render/entity/model/DragonHeadEntityModel
	f	Ldni;	b	head
	f	Ldni;	c	jaw
c	dni	net/minecraft/client/model/ModelPart
	f	F	a	pivotX
	f	F	b	pivotY
	f	F	c	pivotZ
	f	F	d	pitch
	f	F	e	yaw
	f	F	f	roll
	f	Z	g	mirror
	f	Z	h	visible
	f	F	i	textureWidth
	f	F	j	textureHeight
	f	I	k	textureOffsetU
	f	I	l	textureOffsetV
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	m	cuboids
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	n	children
	m	(Ldls;)V	<init>	<init>
		p	1	model	model
	m	(IIII)V	<init>	<init>
		p	1	textureWidth	textureWidth
		p	2	textureHeight	textureHeight
		p	3	textureOffsetU	textureOffsetU
		p	4	textureOffsetV	textureOffsetV
	m	(Ldls;II)V	<init>	<init>
		p	1	model	model
		p	2	textureOffsetU	textureOffsetU
		p	3	textureOffsetV	textureOffsetV
	m	(Lcyl;Lcyo;II)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumer	vertexConsumer
		p	3	light	light
		p	4	overlay	overlay
	m	(Lcyl;)V	a	rotate
		p	1	matrix	matrix
	m	(FFFFFF)Ldni;	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
	m	(Ljava/lang/String;FFFIIIFII)Ldni;	a	addCuboid
		p	1	name	name
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	sizeX	sizeX
		p	6	sizeY	sizeY
		p	7	sizeZ	sizeZ
		p	8	extra	extra
		p	9	textureOffsetU	textureOffsetU
		p	10	textureOffsetV	textureOffsetV
	m	(FFFFFFFZ)V	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	extra	extra
		p	8	mirror	mirror
	m	(FFF)V	a	setPivot
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(IIFFFFFFFFFZZ)V	a	addCuboid
		p	1	u	u
		p	2	v	v
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	extraX	extraX
		p	10	extraY	extraY
		p	11	extraZ	extraZ
		p	12	mirror	mirror
	m	(FFFFFFF)V	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	extra	extra
	m	(FFFFFFFFF)V	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	extraX	extraX
		p	8	extraY	extraY
		p	9	extraZ	extraZ
	m	(Ldni;)V	a	copyPositionAndRotation
	m	(II)Ldni;	a	setTextureOffset
		p	1	textureOffsetU	textureOffsetU
		p	2	textureOffsetV	textureOffsetV
	m	(FFFFFFZ)Ldni;	a	addCuboid
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	sizeX	sizeX
		p	5	sizeY	sizeY
		p	6	sizeZ	sizeZ
		p	7	mirror	mirror
	m	(Lcyl;Lcyo;IIFFFF)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumer	vertexConsumer
		p	3	light	light
		p	4	overlay	overlay
		p	5	red	red
		p	6	green	green
		p	7	blue	blue
		p	8	alpha	alpha
	m	(Lcyl$a;Lcyo;IIFFFF)V	a	renderCuboids
		p	1	matrices	matrices
		p	2	vertexConsumer	vertexConsumer
		p	3	light	light
		p	4	overlay	overlay
		p	5	red	red
		p	6	green	green
		p	7	blue	blue
		p	8	alpha	alpha
	m	(Ljava/util/Random;)Ldni$a;	a	getRandomCuboid
		p	1	random	random
	m	(Ldni;)V	b	addChild
		p	1	part	part
	m	(II)Ldni;	b	setTextureSize
		p	1	width	width
		p	2	height	height
c	dni$a	net/minecraft/client/model/ModelPart$Cuboid
	f	F	a	minX
	f	F	b	minY
	f	F	c	minZ
	f	F	d	maxX
	f	F	e	maxY
	f	F	f	maxZ
	f	[Ldni$b;	g	sides
	m	(IIFFFFFFFFFZFF)V	<init>	<init>
		p	1	u	u
		p	2	v	v
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	sizeX	sizeX
		p	7	sizeY	sizeY
		p	8	sizeZ	sizeZ
		p	9	extraX	extraX
		p	10	extraY	extraY
		p	11	extraZ	extraZ
		p	12	mirror	mirror
		p	13	textureWidth	textureWidth
		p	14	textureHeight	textureHeight
c	dni$b	net/minecraft/client/model/ModelPart$Quad
	f	[Ldni$c;	a	vertices
	f	Le;	b	direction
	m	([Ldni$c;FFFFFFZLfp;)V	<init>	<init>
		p	1	vertices	vertices
		p	2	u1	u1
		p	3	v1	v1
		p	4	u2	u2
		p	5	v2	v2
		p	6	squishU	squishU
		p	7	squishV	squishV
		p	8	flip	flip
c	dni$c	net/minecraft/client/model/ModelPart$Vertex
	f	Le;	a	pos
	f	F	b	u
	f	F	c	v
	m	(Le;FF)V	<init>	<init>
		p	2	u	u
		p	3	v	v
	m	(FFFFF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	u	u
		p	5	v	v
	m	(FF)Ldni$c;	a	remap
		p	1	u	u
		p	2	v	v
c	dnl	net/minecraft/client/network/ClientAdvancementManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbn;	b	client
	f	Lv;	c	manager
	f	Ljava/util/Map;	d	advancementProgresses
	f	Ldnl$a;	e	listener
	f	Lu;	f	selectedTab
	m	(Lu;Z)V	a	selectTab
		p	1	tab	tab
		p	2	local	local
	m	(Lpe;)V	a	onAdvancements
		p	1	packet	packet
	m	(Ldnl$a;)V	a	setListener
		p	1	listener	listener
	m	()Lv;	a	getManager
c	dnl$a	net/minecraft/client/network/ClientAdvancementManager$Listener
	m	(Lu;Lw;)V	a	setProgress
		p	1	advancement	advancement
		p	2	progress	progress
	m	(Lu;)V	e	selectTab
		p	1	advancement	advancement
c	dnm	net/minecraft/client/world/ClientChunkManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcal;	b	emptyChunk
	f	Lcoa;	c	lightingProvider
	f	Ldnm$a;	d	chunks
	f	Ldno;	e	world
	m	(Ldno;I)V	<init>	<init>
		p	1	world	world
		p	2	loadDistance	loadDistance
	m	(I)V	a	updateLoadDistance
		p	1	loadDistance	loadDistance
	m	(IILbzz;Lkv;Ljt;I)Lcal;	a	loadChunkFromPacket
	m	(Lcal;II)Z	a	positionEquals
		p	0	chunk	chunk
		p	1	x	x
		p	2	y	y
	m	(IILcae;Z)Lcal;	b	getChunk
	m	(I)I	b	getChunkMapRadius
		p	0	loadDistance	loadDistance
	m	(II)V	d	unload
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(II)V	e	setChunkMapCenter
		p	1	x	x
		p	2	z	z
	m	()I	h	getLoadedChunkCount
c	dnm$a	net/minecraft/client/world/ClientChunkManager$ClientChunkMap
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	b	chunks
	f	I	c	radius
	f	I	d	diameter
	f	I	e	centerChunkX
	f	I	f	centerChunkZ
	f	I	g	loadedChunkCount
	m	(Ldnm;I)V	<init>	<init>
		p	2	loadDistance	loadDistance
	m	(II)I	a	getIndex
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
	m	(ILcal;Lcal;)Lcal;	a	compareAndSet
		p	1	index	index
		p	2	expect	expect
		p	3	update	update
	m	(I)Lcal;	a	getChunk
		p	1	index	index
	m	(ILcal;)V	a	set
		p	1	index	index
		p	2	chunk	chunk
	m	(II)Z	b	isInRadius
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
c	dnn	net/minecraft/client/network/ClientLoginNetworkHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbn;	b	client
	f	Ldgb;	c	parentGui
	f	Ljava/util/function/Consumer;	d	statusConsumer
	f	Lkt;	e	connection
	f	Lcom/mojang/authlib/GameProfile;	f	profile
	m	(Lkt;Ldbn;Ldgb;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	connection	connection
		p	2	client	client
		p	3	parentGui	parentGui
		p	4	statusConsumer	statusConsumer
	m	(Ljava/lang/String;)Llf;	a	joinServerSession
		p	1	serverId	serverId
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	b	getSessionService
c	dno	net/minecraft/client/world/ClientWorld
	f	I	A	lightningTicksLeft
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;	B	colorCache
	f	Ljava/util/List;	a	globalEntities
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	regularEntities
	f	Ldnp;	c	netHandler
	f	Ldqr;	u	worldRenderer
	f	Ldbn;	v	client
	f	Ljava/util/List;	w	players
	f	I	x	ticksUntilCaveAmbientSound
	f	Lcwl;	y	scoreboard
	f	Ljava/util/Map;	z	mapStates
	m	(Ldnp;Lbka;Lcbi;ILaio;Ldqr;)V	<init>	<init>
		p	2	levelInfo	levelInfo
		p	4	chunkLoadDistance	chunkLoadDistance
	m	(Lavy;)V	a	addLightning
		p	1	lightning	lightning
	m	(Lcal;)V	a	unloadBlockEntities
		p	1	chunk	chunk
	m	(Lfk;Lbyj;Lgt;Z)V	a	addParticle
		p	1	pos	pos
		p	2	state	state
		p	3	parameters	parameters
	m	(DDDDDLgt;)V	a	addParticle
		p	1	minX	minX
		p	3	maxX	maxX
		p	5	minZ	minZ
		p	7	maxZ	maxZ
		p	9	y	y
		p	11	parameters	parameters
	m	(Lcwl;)V	a	setScoreboard
		p	1	scoreboard	scoreboard
	m	(ILakq;)V	a	addEntity
		p	1	id	id
		p	2	entity	entity
	m	(Lfk;Lgt;Lcwf;D)V	a	addParticle
		p	1	pos	pos
		p	2	parameters	parameters
		p	3	shape	shape
		p	4	y	y
	m	(Lfk;Laah;Laaj;FFZ)V	a	playSound
		p	1	pos	pos
		p	2	sound	sound
		p	3	category	category
		p	4	volume	volume
		p	5	pitch	pitch
		p	6	useDistance	useDistance
	m	(ILdpy;)V	a	addPlayer
		p	1	id	id
		p	2	player	player
	m	(IIIILjava/util/Random;ZLfk$a;)V	a	randomBlockDisplayTick
		p	1	xCenter	xCenter
		p	2	yCenter	yCenter
		p	3	zCenter	zCenter
		p	4	radius	radius
		p	5	random	random
		p	6	spawnBarrierParticles	spawnBarrierParticles
		p	7	pos	pos
	m	(Lakq;Lakq;)V	a	tickPassenger
		p	1	entity	entity
		p	2	passenger	passenger
	m	(Lakq;)V	a	tickEntity
		p	1	entity	entity
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	(Lcal;)V	b	addEntitiesToChunk
		p	1	chunk	chunk
	m	(Lfk;Lbyj;)V	b	setBlockStateWithoutNeighborUpdates
	m	(Lakq;)V	b	checkChunk
		p	1	entity	entity
	m	(Lfk;Lnet/minecraft/world/level/ColorResolver;)I	b	calculateColor
		p	1	pos	pos
		p	2	colorResolver	colorResolver
	m	()Ljava/lang/Iterable;	b	getEntities
	m	(ILakq;)V	b	addEntityPrivate
		p	1	id	id
		p	2	entity	entity
	m	(III)V	c	doRandomBlockDisplayTicks
		p	1	xCenter	xCenter
		p	2	yCenter	yCenter
	m	(III)V	d	scheduleBlockRenders
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)V	d	removeEntity
	m	(Lakq;)V	d	finishRemovingEntity
		p	1	entity	entity
	m	(II)V	e	resetChunkColor
	m	()V	g	tickEntities
	m	()V	h	reloadColor
	m	(F)Lcvl;	h	getCloudsColor
		p	1	tickDelta	tickDelta
	m	(F)Lcvl;	i	getFogColor
		p	1	tickDelta	tickDelta
	m	()I	j	getRegularEntityCount
	m	()V	k	finishRemovingEntities
	m	()Ldnm;	l	getChunkManager
	m	()D	m	getSkyDarknessHeight
	m	()I	n	getLightningTicksLeft
	m	()V	r	tickCaveAmbientSound
c	dnp	net/minecraft/client/network/ClientPlayNetworkHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lkt;	b	connection
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Ldgb;	d	loginScreen
	f	Ldbn;	e	client
	f	Ldno;	f	world
	f	Z	g	positionLookSetup
	f	Ljava/util/Map;	h	playerListEntries
	f	Ldnl;	i	advancementHandler
	f	Ldnq;	j	commandSource
	f	Labb;	k	tagManager
	f	Ldbf;	l	dataQueryHandler
	f	I	m	chunkLoadDistance
	f	Ljava/util/Random;	n	random
	f	Lcom/mojang/brigadier/CommandDispatcher;	o	commandDispatcher
	f	Lbgx;	p	recipeManager
	f	Ljava/util/UUID;	q	sessionId
	m	(Ldbn;Ldgb;Lkt;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	client	client
		p	2	screen	screen
		p	3	connection	connection
		p	4	profile	profile
	m	(Lqo$a;)V	a	sendResourcePackStatus
		p	1	packStatus	packStatus
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	feedbackAfterDownload
		p	1	downloadFuture	downloadFuture
	m	(Ljava/util/UUID;)Ldns;	a	getPlayerListEntry
		p	1	uuid	uuid
	m	(Ljava/lang/String;)Ldns;	a	getPlayerListEntry
		p	1	profileName	profileName
	m	(IILcoa;Lbkf;IILjava/util/Iterator;)V	a	updateLighting
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	provider	provider
		p	4	type	type
		p	5	mask	mask
		p	6	filledMask	filledMask
		p	7	updates	updates
	m	(Llt;)V	a	sendPacket
		p	1	packet	packet
	m	(Layj;)Lben;	a	getActiveTotemOfUndying
		p	0	player	player
	m	(Ljava/lang/String;)Z	b	validateResourcePackUrl
		p	1	url	url
	m	()Ldnq;	b	getCommandSource
	m	()V	c	clearWorld
	m	()Lbgx;	d	getRecipeManager
	m	()Ljava/util/Collection;	e	getPlayerList
	m	()Lcom/mojang/authlib/GameProfile;	f	getProfile
	m	()Ldnl;	g	getAdvancementHandler
	m	()Lcom/mojang/brigadier/CommandDispatcher;	h	getCommandDispatcher
	m	()Ldno;	i	getWorld
	m	()Labb;	j	getTagManager
	m	()Ldbf;	k	getDataQueryHandler
	m	()Ljava/util/UUID;	l	getSessionId
c	dnq	net/minecraft/client/network/ClientCommandSource
	f	Ldnp;	a	networkHandler
	f	Ldbn;	b	client
	f	I	c	completionId
	f	Ljava/util/concurrent/CompletableFuture;	d	pendingCompletion
	m	(Ldnp;Ldbn;)V	<init>	<init>
		p	1	networkHandler	networkHandler
		p	2	client	client
	m	(D)Ljava/lang/String;	a	format
		p	0	d	d
	m	(I)Ljava/lang/String;	a	format
		p	0	i	i
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	a	onCommandSuggestions
		p	1	completionId	completionId
		p	2	suggestions	suggestions
c	dnr	net/minecraft/client/network/ClientPlayerInteractionManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbn;	b	client
	f	Ldnp;	c	networkHandler
	f	Lfk;	d	currentBreakingPos
	f	Lben;	e	selectedStack
	f	F	f	currentBreakingProgress
	f	F	g	blockBreakingSoundCooldown
	f	I	h	blockBreakingCooldown
	f	Z	i	breakingBlock
	f	Lbjt;	j	gameMode
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;	k	unacknowledgedPlayerActions
	f	I	l	lastSelectedSlot
	m	(Lfk;Lfp;)Z	a	attackBlock
		p	1	pos	pos
		p	2	direction	direction
	m	(Lfk;)Z	a	breakBlock
		p	1	pos	pos
	m	(Lbjt;)V	a	setGameMode
		p	1	gameMode	gameMode
	m	(Layj;)V	a	copyAbilities
		p	1	player	player
	m	(Lben;I)V	a	clickCreativeStack
		p	1	stack	stack
		p	2	slotId	slotId
	m	()Z	a	hasStatusBars
	m	(Ldno;Lfk;Lbyj;Lqj$a;Z)V	a	processPlayerActionResponse
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
		p	4	action	action
		p	5	approved	approved
	m	(IIILbav;Layj;)Lben;	a	clickSlot
		p	1	syncId	syncId
		p	2	slotId	slotId
		p	3	mouseButton	mouseButton
		p	4	actionType	actionType
		p	5	player	player
	m	(Layj;Lakq;Lcvh;Lajk;)Lajl;	a	interactEntityAtLocation
		p	1	player	player
		p	3	hitResult	hitResult
	m	(I)V	a	pickFromInventory
		p	1	slot	slot
	m	(Layj;Lbjw;Lajk;)Lajl;	a	interactItem
		p	1	player	player
		p	2	world	world
		p	3	hand	hand
	m	(ILbgw;Z)V	a	clickRecipe
		p	1	syncId	syncId
		p	2	recipe	recipe
		p	3	craftAll	craftAll
	m	(Lben;)V	a	dropCreativeStack
		p	1	stack	stack
	m	(Lqj$a;Lfk;Lfp;)V	a	sendPlayerAction
		p	1	action	action
		p	2	pos	pos
		p	3	direction	direction
	m	(Layj;Lakq;)V	a	attackEntity
		p	1	player	player
		p	2	target	target
	m	(Layj;Lakq;Lajk;)Lajl;	a	interactEntity
		p	1	player	player
		p	2	entity	entity
		p	3	hand	hand
	m	(Ldno;Laas;Ldbc;)Ldqb;	a	createPlayer
		p	1	world	world
		p	2	stateHandler	stateHandler
		p	3	recipeBook	recipeBook
	m	(Ldbn;Ldnr;Lfk;Lfp;)V	a	breakBlockOrFire
		p	0	client	client
		p	1	interactionManager	interactionManager
		p	2	pos	pos
		p	3	direction	direction
	m	(II)V	a	clickButton
		p	1	syncId	syncId
		p	2	buttonId	buttonId
	m	(Ldqb;Ldno;Lajk;Lcvg;)Lajl;	a	interactBlock
		p	1	player	player
		p	2	world	world
		p	3	hand	hand
		p	4	hitResult	hitResult
	m	()V	b	cancelBlockBreaking
	m	(Layj;)V	b	stopUsingItem
		p	1	player	player
	m	(Lfk;Lfp;)Z	b	updateBlockBreakingProgress
		p	1	pos	pos
		p	2	direction	direction
	m	(Lfk;)Z	b	isCurrentlyBreaking
		p	1	pos	pos
	m	()F	c	getReachDistance
	m	()V	d	tick
	m	()Z	e	hasExperienceBar
	m	()Z	f	hasLimitedAttackSpeed
	m	()Z	g	hasCreativeInventory
	m	()Z	h	hasExtendedReach
	m	()Z	i	hasRidingInventory
	m	()Z	j	isFlyingLocked
	m	()Lbjt;	k	getCurrentGameMode
	m	()Z	l	isBreakingBlock
	m	()V	m	syncSelectedSlot
c	dns	net/minecraft/client/network/PlayerListEntry
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Map;	b	textures
	f	Lbjt;	c	gameMode
	f	I	d	latency
	f	Z	e	texturesLoaded
	f	Ljava/lang/String;	f	model
	f	Llf;	g	displayName
	m	(Lnu$b;)V	<init>	<init>
		p	1	playerListPacketEntry	playerListPacketEntry
	m	(Llf;)V	a	setDisplayName
		p	1	displayName	displayName
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	(Lbjt;)V	a	setGameMode
	m	(I)V	a	setLatency
		p	1	latency	latency
	m	()Lbjt;	b	getGameMode
	m	()I	c	getLatency
	m	()Z	e	hasSkinTexture
	m	()Ljava/lang/String;	f	getModel
	m	()Lsm;	g	getSkinTexture
	m	()Lsm;	h	getCapeTexture
	m	()Lsm;	i	getElytraTexture
	m	()Lcwj;	j	getScoreboardTeam
	m	()V	k	loadTextures
	m	()Llf;	l	getDisplayName
c	dnt	net/minecraft/network/ServerAddress
	f	Ljava/lang/String;	a	address
	f	I	b	port
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	address	address
	m	()Ljava/lang/String;	a	getAddress
	m	(Ljava/lang/String;I)I	a	portOrDefault
		p	0	port	port
		p	1	def	def
	m	(Ljava/lang/String;)Ldnt;	a	parse
		p	0	address	address
	m	(Ljava/lang/String;)[Ljava/lang/String;	b	resolveSrv
		p	0	address	address
	m	()I	b	getPort
c	dnu	net/minecraft/client/network/ServerInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	address
	f	Ljava/lang/String;	c	playerCountLabel
	f	Ljava/lang/String;	d	label
	f	J	e	ping
	f	I	f	protocolVersion
	f	Ljava/lang/String;	g	version
	f	Z	h	online
	f	Ljava/lang/String;	i	playerListSummary
	f	Ldnu$a;	j	resourcePackState
	f	Ljava/lang/String;	k	icon
	f	Z	l	local
	m	(Ljava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
		p	1	name	name
		p	2	address	address
		p	3	local	local
	m	(Ljava/lang/String;)V	a	setIcon
	m	(Ljt;)Ldnu;	a	deserialize
		p	0	tag	tag
	m	()Ljt;	a	serialize
	m	(Ldnu$a;)V	a	setResourcePackState
	m	(Ldnu;)V	a	copyFrom
	m	()Ldnu$a;	b	getResourcePack
	m	()Ljava/lang/String;	c	getIcon
	m	()Z	d	isLocal
c	dnu$a	net/minecraft/client/network/ServerInfo$ResourcePackState
	f	Llf;	d	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Llf;	a	getName
c	dnv	net/minecraft/client/options/ServerList
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbn;	b	client
	f	Ljava/util/List;	c	servers
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(II)V	a	swapEntries
		p	1	index1	index1
	m	()V	a	loadFile
	m	(ILdnu;)V	a	set
		p	1	index	index
	m	(Ldnu;)V	a	remove
	m	(I)Ldnu;	a	get
	m	(Ldnu;)V	b	add
	m	()V	b	saveFile
	m	(Ldnu;)V	c	updateServerListEntry
		p	0	e	e
	m	()I	c	size
c	dnw	net/minecraft/client/network/MultiplayerServerListPinger
	f	Lcom/google/common/base/Splitter;	a	ZERO_SPLITTER
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/List;	c	clientConnections
	m	(Ldnu;)V	a	add
		p	1	entry	entry
	m	()V	a	tick
	m	(Ldnu;)V	b	ping
	m	()V	b	cancel
	m	()Lorg/apache/logging/log4j/Logger;	c	getLogger
	m	()Lcom/google/common/base/Splitter;	d	getZeroSplitter
c	dnw$1	net/minecraft/client/network/MultiplayerServerListPinger$1
	f	Z	d	sentQuery
	f	Z	e	received
	f	J	f	startTime
c	dnw$2	net/minecraft/client/network/MultiplayerServerListPinger$2
c	dnw$2$1	net/minecraft/client/network/MultiplayerServerListPinger$2$1
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	channelRead0
c	dnz	net/minecraft/client/particle/SweepAttackParticle
	f	Ldpm;	a	spriteProvider
	m	(Lbjw;DDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dnz$a	net/minecraft/client/particle/SweepAttackParticle$Factory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doa	net/minecraft/client/particle/BarrierParticle
	m	(Lbjw;DDDLbjv;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	doa$a	net/minecraft/client/particle/BarrierParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dob	net/minecraft/client/particle/CrackParticle
	m	(Lbjw;DDDDDDLben;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dob$a	net/minecraft/client/particle/CrackParticle$ItemFactory
	m	(Lgs;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dob$b	net/minecraft/client/particle/CrackParticle$SlimeballFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dob$c	net/minecraft/client/particle/CrackParticle$SnowballFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doc	net/minecraft/client/particle/WaterBubbleParticle
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	doc$a	net/minecraft/client/particle/WaterBubbleParticle$Factory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dod	net/minecraft/client/particle/BubbleColumnUpParticle
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dod$a	net/minecraft/client/particle/BubbleColumnUpParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doe	net/minecraft/client/particle/BubblePopParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	doe$a	net/minecraft/client/particle/BubblePopParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dof	net/minecraft/client/particle/CampfireSmokeParticle
	m	(Lbjw;DDDDDDZ)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dof$a	net/minecraft/client/particle/CampfireSmokeParticle$CosySmokeFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dof$b	net/minecraft/client/particle/CampfireSmokeParticle$SignalSmokeFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dog	net/minecraft/client/particle/DamageParticle
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dog$a	net/minecraft/client/particle/DamageParticle$DefaultFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dog$b	net/minecraft/client/particle/DamageParticle$EnchantedHitFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dog$c	net/minecraft/client/particle/DamageParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doh	net/minecraft/client/particle/DragonBreathParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	doh$a	net/minecraft/client/particle/DragonBreathParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi	net/minecraft/client/particle/BlockLeakParticle
	f	Lcoi;	a	fluid
	m	(Lbjw;DDDLcoi;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
	m	()V	g	updateAge
	m	()V	h	updateVelocity
c	doi$a	net/minecraft/client/particle/BlockLeakParticle$DrippingLava
	m	(Lbjw;DDDLcoi;Lgt;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
		p	9	nextParticle	nextParticle
c	doi$b	net/minecraft/client/particle/BlockLeakParticle$Dripping
	f	Lgt;	a	nextParticle
	m	(Lbjw;DDDLcoi;Lgt;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
		p	9	nextParticle	nextParticle
c	doi$c	net/minecraft/client/particle/BlockLeakParticle$Landing
c	doi$d	net/minecraft/client/particle/BlockLeakParticle$ContinuousFalling
	f	Lgt;	a	nextParticle
	m	(Lbjw;DDDLcoi;Lgt;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	fluid	fluid
		p	9	nextParticle	nextParticle
c	doi$e	net/minecraft/client/particle/BlockLeakParticle$Falling
c	doi$f	net/minecraft/client/particle/BlockLeakParticle$FallingHoney
c	doi$g	net/minecraft/client/particle/BlockLeakParticle$FallingHoneyFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$h	net/minecraft/client/particle/BlockLeakParticle$DrippingHoneyFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$i	net/minecraft/client/particle/BlockLeakParticle$LandingHoneyFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$j	net/minecraft/client/particle/BlockLeakParticle$FallingLavaFactory
	f	Ldpm;	a	spriteProvider
	m	(Ldpm;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$k	net/minecraft/client/particle/BlockLeakParticle$DrippingLavaFactory
	f	Ldpm;	a	spriteProvider
	m	(Ldpm;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$l	net/minecraft/client/particle/BlockLeakParticle$LandingLavaFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$m	net/minecraft/client/particle/BlockLeakParticle$FallingNectarFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$n	net/minecraft/client/particle/BlockLeakParticle$FallingWaterFactory
	f	Ldpm;	a	spriteProvider
	m	(Ldpm;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doi$o	net/minecraft/client/particle/BlockLeakParticle$DrippingWaterFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doj	net/minecraft/client/particle/RedDustParticle
	f	Ldpm;	a	spriteProvider
	m	(Lbjw;DDDDDDLgr;Ldpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	doj$a	net/minecraft/client/particle/RedDustParticle$Factory
	f	Ldpm;	a	spriteProvider
	m	(Lgr;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dok	net/minecraft/client/particle/EnchantGlyphParticle
	f	D	C	startY
	f	D	D	startZ
	f	D	a	startX
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dok$a	net/minecraft/client/particle/EnchantGlyphParticle$NautilusFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dok$b	net/minecraft/client/particle/EnchantGlyphParticle$EnchantFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dol	net/minecraft/client/particle/EndRodParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dol$a	net/minecraft/client/particle/EndRodParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dom	net/minecraft/client/particle/ExplosionSmokeParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dom$a	net/minecraft/client/particle/ExplosionSmokeParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	don	net/minecraft/client/particle/BlockFallingDustParticle
	m	(Lbjw;DDDFFFLdpm;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	colorRed	colorRed
		p	9	colorGreen	colorGreen
		p	10	colorBlue	colorBlue
c	don$a	net/minecraft/client/particle/BlockFallingDustParticle$Factory
	m	(Lgq;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doo	net/minecraft/client/particle/FireworksSparkParticle
c	doo$a	net/minecraft/client/particle/FireworksSparkParticle$FlashFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doo$b	net/minecraft/client/particle/FireworksSparkParticle$Flash
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	x	x
		p	2	y	y
c	doo$c	net/minecraft/client/particle/FireworksSparkParticle$Explosion
	f	Z	C	trail
	f	Z	D	flicker
	f	Ldpb;	E	particleManager
	m	(Lbjw;DDDDDDLdpb;Ldpm;)V	<init>	<init>
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Z)V	a	setTrail
		p	1	trail	trail
	m	(Z)V	b	setFlicker
		p	1	flicker	flicker
c	doo$d	net/minecraft/client/particle/FireworksSparkParticle$ExplosionFactory
	f	Ldpm;	a	spriteProvider
	m	(Ldpm;)V	<init>	<init>
		p	1	spriteProvider	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doo$e	net/minecraft/client/particle/FireworksSparkParticle$FireworkParticle
	f	Ldpb;	A	particleManager
	f	Ljz;	B	explosions
	f	Z	C	flicker
	f	I	a	age
	m	(Lbjw;DDDDDDLdpb;Ljt;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
		p	14	particleManager	particleManager
		p	15	tag	tag
	m	(DDDDDD[I[IZZ)V	a	addExplosionParticle
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	velocityX	velocityX
		p	9	velocityY	velocityY
		p	11	velocityZ	velocityZ
		p	13	colors	colors
		p	14	fadeColors	fadeColors
		p	15	trail	trail
		p	16	flicker	flicker
	m	(D[[D[I[IZZZ)V	a	explodeStar
		p	1	size	size
		p	3	pattern	pattern
		p	4	colors	colors
		p	5	fadeColors	fadeColors
		p	6	trail	trail
		p	7	flicker	flicker
		p	8	keepShape	keepShape
	m	([I[IZZ)V	a	explodeBurst
		p	1	colors	colors
		p	2	fadeColors	fadeColors
		p	3	trail	trail
		p	4	flocker	flocker
	m	(DI[I[IZZ)V	a	explodeBall
		p	1	size	size
		p	3	amount	amount
		p	4	colors	colors
		p	5	fadeColors	fadeColors
		p	6	trail	trail
		p	7	flicker	flicker
	m	()Z	c	isFar
c	dop	net/minecraft/client/particle/FlameParticle
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dop$a	net/minecraft/client/particle/FlameParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doq	net/minecraft/client/particle/EmotionParticle
	m	(Lbjw;DDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	doq$a	net/minecraft/client/particle/EmotionParticle$AngryVillagerFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doq$b	net/minecraft/client/particle/EmotionParticle$HeartFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dor	net/minecraft/client/particle/ExplosionLargeParticle
	m	(Lbjw;DDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dor$a	net/minecraft/client/particle/ExplosionLargeParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dos	net/minecraft/client/particle/ExplosionEmitterParticle
	f	I	A	maxAge_
	f	I	a	age_
	m	(Lbjw;DDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dos$a	net/minecraft/client/particle/ExplosionEmitterParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dot	net/minecraft/client/particle/ItemPickupParticle
c	dou	net/minecraft/client/particle/LargeFireSmokeParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dou$a	net/minecraft/client/particle/LargeFireSmokeParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dov	net/minecraft/client/particle/LavaEmberParticle
	m	(Lbjw;DDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dov$a	net/minecraft/client/particle/LavaEmberParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dow	net/minecraft/client/particle/ElderGuardianAppearanceParticle
	m	(Lbjw;DDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dow$a	net/minecraft/client/particle/ElderGuardianAppearanceParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dox	net/minecraft/client/particle/NoRenderParticle
c	doy	net/minecraft/client/particle/NoteParticle
	m	(Lbjw;DDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	doy$a	net/minecraft/client/particle/NoteParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	doz	net/minecraft/client/particle/Particle
	f	Lcvf;	A	boundingBox
	f	Lcvf;	a	EMPTY_BOUNDING_BOX
	f	Lbjw;	b	world
	f	D	c	prevPosX
	f	D	d	prevPosY
	f	D	e	prevPosZ
	f	D	f	x
	f	D	g	y
	f	D	h	z
	f	D	i	velocityX
	f	D	j	velocityY
	f	D	k	velocityZ
	f	Z	l	onGround
	f	Z	m	collidesWithWorld
	f	Z	n	dead
	f	F	o	spacingXZ
	f	F	p	spacingY
	f	Ljava/util/Random;	q	random
	f	I	r	age
	f	I	s	maxAge
	f	F	t	gravityStrength
	f	F	u	colorRed
	f	F	v	colorGreen
	f	F	w	colorBlue
	f	F	x	colorAlpha
	f	F	y	angle
	f	F	z	prevAngle
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
	m	(F)I	a	getColorMultiplier
		p	1	tint	tint
	m	(FFF)V	a	setColor
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
	m	(DDD)V	a	move
		p	1	dx	dx
		p	3	dy	dy
		p	5	dz	dz
	m	(I)V	a	setMaxAge
		p	1	maxAge	maxAge
	m	(FF)V	a	setBoundingBoxSpacing
		p	1	spacingXZ	spacingXZ
		p	2	spacingY	spacingY
	m	(Lcyo;Ldbb;F)V	a	buildGeometry
		p	1	vertexConsumer	vertexConsumer
		p	2	camera	camera
		p	3	tickDelta	tickDelta
	m	(Lcvf;)V	a	setBoundingBox
	m	()V	a	tick
	m	()Ldpd;	b	getType
	m	(DDD)V	b	setPos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(F)Ldoz;	c	move
		p	1	speed	speed
	m	(F)Ldoz;	d	scale
		p	1	scale	scale
	m	(F)V	e	setColorAlpha
		p	1	alpha	alpha
	m	()I	i	getMaxAge
	m	()V	j	markDead
	m	()V	k	repositionFromBoundingBox
	m	()Z	l	isAlive
	m	()Lcvf;	m	getBoundingBox
c	dp	net/minecraft/command/arguments/ItemSlotArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_SLOT_EXCEPTION
	f	Ljava/util/Map;	c	slotNamesToSlotCommandId
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getItemSlot
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
		p	1	reader	reader
	m	()Ldp;	a	itemSlot
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dpa	net/minecraft/client/particle/ParticleTextureData
	f	Ljava/util/List;	a	textureList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	textureList	textureList
	m	(Lcom/google/gson/JsonObject;)Ldpa;	a	load
	m	()Ljava/util/List;	a	getTextureList
c	dpb	net/minecraft/client/particle/ParticleManager
	f	Lbjw;	a	world
	f	Ljava/util/List;	b	PARTICLE_TEXTURE_SHEETS
	f	Ljava/util/Map;	c	particles
	f	Ljava/util/Queue;	d	newEmitterParticles
	f	Leak;	e	textureManager
	f	Ljava/util/Random;	f	random
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	g	factories
	f	Ljava/util/Queue;	h	newParticles
	f	Ljava/util/Map;	i	spriteAwareFactories
	f	Leai;	j	particleAtlasTexture
	m	(Lbjw;Leak;)V	<init>	<init>
		p	1	world	world
		p	2	textureManager	textureManager
	m	(Lakq;Lgt;I)V	a	addEmitter
		p	1	entity	entity
		p	2	parameters	parameters
		p	3	maxAge	maxAge
	m	(Ljava/util/Collection;)V	a	tickParticles
	m	(Lbjw;)V	a	setWorld
	m	(Lgu;Ldpb$b;)V	a	registerFactory
	m	(Lakq;Lgt;)V	a	addEmitter
		p	1	entity	entity
		p	2	parameters	parameters
	m	(Lcyl;Ldqt$a;Ldqs;Ldbb;F)V	a	renderParticles
	m	(Lzb;Lsm;Ljava/util/Map;)V	a	loadTextureList
		p	1	resourceManager	resourceManager
		p	2	id	id
		p	3	result	result
	m	()V	a	clearAtlas
	m	(Lgt;DDDDDD)Ldoz;	a	addParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lfk;Lfp;)V	a	addBlockBreakingParticles
	m	(Lgu;Ldpc;)V	a	registerFactory
		p	1	type	type
		p	2	factory	factory
	m	(Lfk;Lbyj;)V	a	addBlockBreakParticles
		p	1	pos	pos
		p	2	state	state
	m	(Ldoz;)V	a	addParticle
	m	(Ldoz;)V	b	tickParticle
	m	(Lgt;DDDDDD)Ldoz;	b	createParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	()V	b	tick
	m	()Ljava/lang/String;	c	getDebugString
	m	()V	d	registerDefaultFactories
c	dpb$a	net/minecraft/client/particle/ParticleManager$SimpleSpriteProvider
	f	Ljava/util/List;	b	sprites
	m	(Ljava/util/List;)V	a	setSprites
		p	1	sprites	sprites
c	dpb$b	net/minecraft/client/particle/ParticleManager$SpriteAwareFactory
c	dpc	net/minecraft/client/particle/ParticleFactory
	m	(Lgt;Lbjw;DDDDDD)Ldoz;	a	createParticle
		p	1	parameters	parameters
		p	2	world	world
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
c	dpd	net/minecraft/client/particle/ParticleTextureSheet
	f	Ldpd;	a	TERRAIN_SHEET
	f	Ldpd;	b	PARTICLE_SHEET_OPAQUE
	f	Ldpd;	c	PARTICLE_SHEET_TRANSLUCENT
	f	Ldpd;	d	PARTICLE_SHEET_LIT
	f	Ldpd;	e	CUSTOM
	f	Ldpd;	f	NO_RENDER
	m	(Lcyg;Leak;)V	a	begin
	m	(Lcym;)V	a	draw
c	dpe	net/minecraft/client/particle/CloudParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dpe$a	net/minecraft/client/particle/CloudParticle$CloudFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpe$b	net/minecraft/client/particle/CloudParticle$SneezeFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpf	net/minecraft/client/particle/PortalParticle
	f	D	C	startY
	f	D	D	startZ
	f	D	a	startX
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dpf$a	net/minecraft/client/particle/PortalParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpg	net/minecraft/client/particle/AnimatedParticle
	f	F	C	upwardsAcceleration
	f	F	D	resistance
	f	F	E	targetColorRed
	f	F	F	targetColorGreen
	f	F	G	targetColorBlue
	f	Z	H	changesColor
	f	Ldpm;	a	spriteProvider
	m	(Lbjw;DDDLdpm;F)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	spriteProvider	spriteProvider
		p	9	upwardsAcceleration	upwardsAcceleration
	m	(I)V	b	setColor
		p	1	rgbHex	rgbHex
	m	(I)V	c	setTargetColor
		p	1	rgbHex	rgbHex
	m	(F)V	f	setResistance
		p	1	resistance	resistance
c	dph	net/minecraft/client/particle/BillboardParticle
	f	F	A	scale
	m	(F)F	b	getSize
		p	1	tickDelta	tickDelta
	m	()F	c	getMinU
	m	()F	d	getMaxU
	m	()F	e	getMinV
	m	()F	f	getMaxV
c	dpi	net/minecraft/client/particle/FireSmokeParticle
	m	(Lbjw;DDDDDDFLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dpi$a	net/minecraft/client/particle/FireSmokeParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpj	net/minecraft/client/particle/SpellParticle
	f	Ldpm;	C	spriteProvider
	f	Ljava/util/Random;	a	RANDOM
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dpj$a	net/minecraft/client/particle/SpellParticle$EntityAmbientFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpj$b	net/minecraft/client/particle/SpellParticle$InstantFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpj$c	net/minecraft/client/particle/SpellParticle$EntityFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpj$d	net/minecraft/client/particle/SpellParticle$DefaultFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpj$e	net/minecraft/client/particle/SpellParticle$WitchFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpk	net/minecraft/client/particle/SpitParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dpk$a	net/minecraft/client/particle/SpitParticle$Factory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpl	net/minecraft/client/particle/WaterSplashParticle
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	12	velocityZ	velocityZ
c	dpl$a	net/minecraft/client/particle/WaterSplashParticle$SplashFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpm	net/minecraft/client/particle/SpriteProvider
	m	(Ljava/util/Random;)Leaj;	a	getSprite
	m	(II)Leaj;	a	getSprite
c	dpn	net/minecraft/client/particle/SquidInkParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dpn$a	net/minecraft/client/particle/SquidInkParticle$Factory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpo	net/minecraft/client/particle/WaterSuspendParticle
	m	(Lbjw;DDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dpo$a	net/minecraft/client/particle/WaterSuspendParticle$UnderwaterFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpp	net/minecraft/client/particle/SuspendParticle
	m	(Lbjw;DDDDDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dpp$a	net/minecraft/client/particle/SuspendParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpp$b	net/minecraft/client/particle/SuspendParticle$DolphinFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpp$c	net/minecraft/client/particle/SuspendParticle$HappyVillagerFactory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpp$d	net/minecraft/client/particle/SuspendParticle$MyceliumFactory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpq	net/minecraft/client/particle/BlockDustParticle
	f	Lfk;	C	blockPos
	f	Lbyj;	a	blockState
	m	(Lbjw;DDDDDDLbyj;)V	<init>	<init>
		p	1	world	world
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(Lfk;)Ldpq;	a	setBlockPos
	m	(Lfk;)V	b	updateColor
	m	()Ldpq;	g	setBlockPosFromPosition
c	dpq$a	net/minecraft/client/particle/BlockDustParticle$Factory
	m	(Lgq;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpr	net/minecraft/client/particle/SpriteBillboardParticle
	f	Leaj;	B	sprite
	m	(Ldpm;)V	a	setSprite
		p	1	spriteProvider	spriteProvider
	m	(Leaj;)V	a	setSprite
	m	(Ldpm;)V	b	setSpriteForAge
		p	1	spriteProvider	spriteProvider
c	dps	net/minecraft/client/particle/TotemParticle
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dps$a	net/minecraft/client/particle/TotemParticle$Factory
	f	Ldpm;	a	spriteProvider
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpt	net/minecraft/client/particle/EmitterParticle
	f	I	A	emitterAge
	f	I	B	maxEmitterAge
	f	Lgt;	C	parameters
	f	Lakq;	a	entity
	m	(Lbjw;Lakq;Lgt;ILcvl;)V	<init>	<init>
		p	3	parameters	parameters
		p	4	maxEmitterAge	maxEmitterAge
	m	(Lbjw;Lakq;Lgt;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	parameters	parameters
c	dpu	net/minecraft/client/particle/FishingParticle
	f	Ldpm;	a	spriteProvider
	m	(Lbjw;DDDDDDLdpm;)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
c	dpu$a	net/minecraft/client/particle/FishingParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpv	net/minecraft/client/particle/CurrentDownParticle
	m	(Lbjw;DDD)V	<init>	<init>
		p	2	x	x
		p	4	y	y
		p	6	z	z
c	dpv$a	net/minecraft/client/particle/CurrentDownParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpw	net/minecraft/client/particle/RainSplashParticle
	m	(Lbjw;DDD)V	<init>	<init>
		p	1	world	world
		p	2	x	x
c	dpw$a	net/minecraft/client/particle/RainSplashParticle$Factory
	m	(Lgw;Lbjw;DDDDDD)Ldoz;	a	createParticle
c	dpy	net/minecraft/client/network/AbstractClientPlayerEntity
	f	F	a	elytraPitch
	f	F	b	elytraYaw
	f	F	c	elytraRoll
	f	Ldno;	d	clientWorld
	f	Ldns;	e	cachedScoreboardEntry
	m	(Ldno;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	world	world
		p	2	profile	profile
	m	(Lsm;Ljava/lang/String;)Ldzz;	a	loadSkin
		p	0	id	id
		p	1	playerName	playerName
	m	()Z	c	canRenderCapeTexture
	m	(Ljava/lang/String;)Lsm;	d	getSkinId
		p	0	playerName	playerName
	m	()Ldns;	i	getPlayerListEntry
	m	()Z	l	hasSkinTexture
	m	()Lsm;	m	getSkinTexture
	m	()Lsm;	n	getCapeTexture
	m	()Z	o	canRenderElytraTexture
	m	()Lsm;	p	getElytraTexture
	m	()Ljava/lang/String;	s	getModel
	m	()F	v	getSpeed
c	dpz	net/minecraft/client/input/Input
	f	F	a	movementSideways
	f	F	b	movementForward
	f	Z	c	pressingForward
	f	Z	d	pressingBack
	f	Z	e	pressingLeft
	f	Z	f	pressingRight
	f	Z	g	jumping
	f	Z	h	sneaking
	m	(Z)V	a	tick
	m	()Lcvk;	a	getMovementInput
	m	()Z	b	hasForwardMovement
c	dq	net/minecraft/command/arguments/TeamArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_TEAM_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcwj;	a	getTeam
		p	0	context	context
		p	1	name	name
	m	()Ldq;	a	team
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dqa	net/minecraft/client/input/KeyboardInput
	f	Ldbr;	i	settings
	m	(Ldbr;)V	<init>	<init>
		p	1	settings	settings
c	dqb	net/minecraft/client/network/ClientPlayerEntity
	f	F	bT	renderYaw
	f	F	bU	renderPitch
	f	F	bV	lastRenderYaw
	f	F	bW	lastRenderPitch
	f	F	bX	nextNauseaStrength
	f	F	bY	lastNauseaStrength
	f	Laas;	bZ	statHandler
	f	Ldbc;	ca	recipeBook
	f	Ljava/util/List;	cb	tickables
	f	I	cc	clientPermissionLevel
	f	D	cd	lastX
	f	D	ce	lastBaseY
	f	D	cf	lastZ
	f	F	cg	lastYaw
	f	F	ch	lastPitch
	f	Z	ci	lastOnGround
	f	Z	cj	lastIsHoldingSneakKey
	f	Z	ck	lastSprinting
	f	Ljava/lang/String;	cn	serverBrand
	f	Z	cq	usingItem
	f	Lajk;	cr	activeHand
	f	Z	cs	riding
	f	Z	ct	lastAutoJump
	f	Z	cx	showsDeathScreen
	f	Ldnp;	e	networkHandler
	f	Ldpz;	f	input
	f	Ldbn;	g	client
	m	(Ldbn;Ldno;Ldnp;Laas;Ldbc;)V	<init>	<init>
		p	1	client	client
	m	()Ljava/lang/String;	A	getServerBrand
	m	()Laas;	B	getStatHandler
	m	()Ldbc;	D	getRecipeBook
	m	()Z	F	showsDeathScreen
	m	()Z	G	hasJumpingMount
	m	()Z	I	isHoldingSneakKey
	m	()Z	J	isCamera
	m	()Z	K	isRiding
	m	(I)V	a	setClientPermissionLevel
	m	(Lbgw;)V	a	onRecipeDisplayed
	m	(FII)V	a	setExperience
		p	1	progress	progress
		p	2	total	total
		p	3	level	level
	m	(Z)V	a	setShowsDeathScreen
		p	1	shouldShow	shouldShow
	m	()Z	eC	getLastAutoJump
	m	()V	eE	sendMovementPackets
	m	()V	eF	updateNausea
	m	()Z	eH	hasMovementInput
		c	Returns whether the player has movement input.\n\n@return True if the player has movement input, else false.
	m	(Ljava/lang/String;)V	f	sendChatMessage
	m	(Ljava/lang/String;)V	g	setServerBrand
		p	1	serverBrand	serverBrand
	m	(Lfk;)Z	g	cannotFitAt
		p	1	pos	pos
	m	(F)V	t	updateHealth
	m	()V	w	closeScreen
	m	()V	x	startRidingJump
	m	()V	z	openRidingInventory
c	dqc	net/minecraft/client/network/OtherClientPlayerEntity
c	dqd	net/minecraft/client/options/HotbarStorageEntry
	f	Lfy;	a	delegate
	m	(Ljz;)V	a	fromListTag
	m	()Ljz;	a	toListTag
	m	()Ljava/util/List;	delegate	delegate
c	dqg	net/minecraft/client/color/world/BiomeColors
	f	Lnet/minecraft/world/level/ColorResolver;	a	GRASS_COLOR
	f	Lnet/minecraft/world/level/ColorResolver;	b	FOLIAGE_COLOR
	f	Lnet/minecraft/world/level/ColorResolver;	c	WATER_COLOR
	m	(Lbje;Lfk;)I	a	getGrassColor
		p	0	view	view
		p	1	pos	pos
	m	(Lbje;Lfk;Lnet/minecraft/world/level/ColorResolver;)I	a	getColor
	m	(Lbje;Lfk;)I	b	getFoliageColor
		p	0	view	view
		p	1	pos	pos
	m	(Lbje;Lfk;)I	c	getWaterColor
		p	0	view	view
		p	1	pos	pos
c	dqh	net/minecraft/client/render/item/BuiltinModelItemRenderer
	f	Ldqh;	a	INSTANCE
	f	[Lbxg;	b	RENDER_SHULKER_BOX_DYED
	f	Lbxg;	c	RENDER_SHULKER_BOX
	f	Lbwp;	d	renderChestNormal
	f	Lbwp;	e	renderChestTrapped
	f	Lbwx;	f	renderChestEnder
	f	Lbwc;	g	renderBanner
	f	Lbwh;	h	renderBed
	f	Lbws;	i	renderConduit
	f	Ldmk;	j	modelShield
	f	Ldmu;	k	modelTrident
	m	(Lben;Lcyl;Ldqt;II)V	a	render
		p	1	stack	stack
		p	2	matrix	matrix
		p	4	light	light
		p	5	overlay	overlay
c	dqi	net/minecraft/client/render/chunk/BlockBufferBuilderStorage
	f	Ljava/util/Map;	a	builders
	m	()V	a	clear
	m	(Ldrb;)Lcyg;	a	get
		p	1	layer	layer
	m	()V	b	reset
c	dqj	net/minecraft/client/gui/CubeMapRenderer
	f	[Lsm;	a	faces
	m	(Lsm;)V	<init>	<init>
		p	1	faces	faces
	m	(Leak;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadTexturesAsync
	m	(Ldbn;FFF)V	a	draw
		p	1	client	client
		p	2	x	x
		p	3	y	y
		p	4	alpha	alpha
c	dqk	net/minecraft/client/gl/JsonGlProgram
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcxz;	b	dummyUniform
	f	Ldqk;	c	activeProgram
	f	I	d	activeProgramRef
	f	Ljava/util/Map;	e	samplerBinds
	f	Ljava/util/List;	f	samplerNames
	f	Ljava/util/List;	g	samplerShaderLocs
	f	Ljava/util/List;	h	uniformData
	f	Ljava/util/List;	i	uniformLocs
	f	Ljava/util/Map;	j	uniformByName
	f	I	k	programRef
	f	Ljava/lang/String;	l	name
	f	Z	m	useCullFace
	f	Z	n	uniformStateDirty
	f	Lcya;	o	blendState
	f	Ljava/util/List;	p	attribLocs
	f	Ljava/util/List;	q	attribNames
	f	Lcyc;	r	vertexShader
	f	Lcyc;	s	fragmentShader
	m	(Lzb;Ljava/lang/String;)V	<init>	<init>
		p	1	resource	resource
		p	2	name	name
	m	(Lcom/google/gson/JsonElement;)V	a	addSampler
	m	(Lcom/google/gson/JsonObject;)Lcya;	a	deserializeBlendState
		p	0	json	json
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	bindSampler
		p	1	samplerName	samplerName
	m	(Ljava/lang/String;)Lcye;	a	getUniformByName
		p	1	name	name
	m	(Lzb;Lcyc$a;Ljava/lang/String;)Lcyc;	a	getShader
		p	0	resourceManager	resourceManager
		p	1	type	type
		p	2	name	name
	m	(Lcom/google/gson/JsonElement;)V	b	addUniform
	m	(Ljava/lang/String;)Lcxz;	b	getUniformByNameOrDummy
		p	1	name	name
	m	()V	e	disable
	m	()V	f	enable
	m	()V	h	finalizeUniformsAndSamplers
c	dql	net/minecraft/client/render/model/CubeFace
	f	[Ldql;	g	DIRECTION_LOOKUP
	f	[Ldql$b;	h	corners
	m	(Ljava/lang/String;I[Ldql$b;)V	<init>	<init>
		p	3	corners	corners
	m	(Lfp;)Ldql;	a	getFace
		p	0	direction	direction
	m	(I)Ldql$b;	a	getCorner
		p	1	corner	corner
c	dql$a	net/minecraft/client/render/model/CubeFace$DirectionIds
	f	I	a	SOUTH
	f	I	b	UP
	f	I	c	EAST
	f	I	d	NORTH
	f	I	e	DOWN
	f	I	f	WEST
c	dql$b	net/minecraft/client/render/model/CubeFace$Corner
	f	I	a	xSide
	f	I	b	ySide
	f	I	c	zSide
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
c	dqm	net/minecraft/client/render/BackgroundRenderer
	f	F	a	red
	f	F	b	green
	f	F	c	blue
	f	I	d	waterFogColor
	f	I	e	nextWaterFogColor
	f	J	f	lastWaterFogColorUpdateTime
	m	(Ldbb;FLdno;IF)V	a	render
	m	(Ldbb;Ldqm$a;FZ)V	a	applyFog
		p	0	camera	camera
		p	1	fogType	fogType
		p	2	viewDistance	viewDistance
		p	3	thickFog	thickFog
	m	()V	b	setFogBlack
c	dqm$a	net/minecraft/client/render/BackgroundRenderer$FogType
c	dqn	net/minecraft/client/render/GameRenderer
	f	F	A	floatingItemWidth
	f	F	B	floatingItemHeight
	f	Ldqw;	C	shader
	f	[Lsm;	D	SHADERS_LOCATIONS
	f	I	E	forcedShaderIndex
	f	Z	F	shadersEnabled
	f	Ldbb;	G	camera
	f	Ldqp;	a	firstPersonRenderer
	f	I	b	SHADER_COUNT
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ldbn;	d	client
	f	Lzb;	e	resourceContainer
	f	Ljava/util/Random;	f	random
	f	F	g	viewDistance
	f	Ldck;	h	mapRenderer
	f	Ldqz;	i	buffers
	f	I	j	ticks
	f	F	k	movementFovMultiplier
	f	F	l	lastMovementFovMultiplier
	f	F	m	skyDarkness
	f	F	n	lastSkyDarkness
	f	Z	o	renderHand
	f	Z	p	blockOutlineEnabled
	f	J	q	lastWorldIconUpdate
	f	J	r	lastWindowFocusedTime
	f	Ldqs;	s	lightmapTextureManager
	f	Lead;	t	overlayTexture
	f	Z	u	renderingPanorama
	f	F	v	zoom
	f	F	w	zoomX
	f	F	x	zoomY
	f	Lben;	y	floatingItem
	f	I	z	floatingItemTimeLeft
	m	(Ldbn;Lzb;Ldqz;)V	<init>	<init>
		p	1	client	client
	m	(F)V	a	updateTargetedEntity
		p	1	tickDelta	tickDelta
	m	(IIF)V	a	renderFloatingItem
		p	1	scaledWidth	scaledWidth
		p	2	scaledHeight	scaledHeight
		p	3	tickDelta	tickDelta
	m	(Lben;)V	a	showFloatingItem
		p	1	floatingItem	floatingItem
	m	(Lsm;)V	a	loadShader
	m	(Lakz;F)F	a	getNightVisionStrength
	m	(FJLcyl;)V	a	renderWorld
		p	1	tickDelta	tickDelta
		p	2	limitTime	limitTime
		p	4	matrix	matrix
	m	(II)V	a	onResized
	m	(FJZ)V	a	render
		p	1	tickDelta	tickDelta
		p	2	startTime	startTime
		p	4	tick	tick
	m	()V	a	disableShader
	m	(Lcyl;F)V	a	bobViewWhenHurt
	m	(Lakq;)V	a	onCameraEntitySet
	m	(Lcyl;Ldbb;F)V	a	renderHand
		p	1	matrices	matrices
		p	2	camera	camera
		p	3	tickDelta	tickDelta
	m	(F)F	b	getSkyDarkness
		p	1	tickDelta	tickDelta
	m	()V	b	toggleShadersEnabled
	m	(Ldbb;FZ)D	b	getFov
		p	1	camera	camera
		p	2	tickDelta	tickDelta
		p	3	changingFov	changingFov
	m	(Lcyl;F)V	b	bobView
	m	()V	d	tick
	m	()Ldqw;	e	getShader
	m	()V	f	reset
	m	()Ldck;	g	getMapRenderer
	m	()F	j	getViewDistance
	m	()Ldbb;	k	getCamera
	m	()Ldqs;	l	getLightmapTextureManager
	m	()Lead;	m	getOverlayTexture
	m	()V	n	updateMovementFovMultiplier
	m	()V	o	updateWorldIcon
	m	()Z	p	shouldRenderBlockOutline
c	dqo	net/minecraft/client/render/RenderLayers
	f	Ljava/util/Map;	a	BLOCKS
	f	Ljava/util/Map;	b	FLUIDS
	f	Z	c	fancyGraphics
	m	(Lbyj;)Ldrb;	a	getBlockLayer
		p	0	state	state
	m	(Z)V	a	setFancyGraphics
		p	0	fancyGraphics	fancyGraphics
	m	(Lben;)Ldrb;	a	getItemLayer
		p	0	stack	stack
	m	(Lcoj;)Ldrb;	a	getFluidLayer
		p	0	state	state
	m	(Lbyj;)Ldrb;	b	getEntityBlockLayer
		p	0	state	state
c	dqp	net/minecraft/client/render/item/HeldItemRenderer
	f	Ldrb;	a	MAP_BACKGROUND
	f	Ldrb;	b	MAP_BACKGROUND_CHECKERBOARD
	f	Ldbn;	c	client
	f	Lben;	d	mainHand
	f	Lben;	e	offHand
	f	F	f	equipProgressMainHand
	f	F	g	prevEquipProgressMainHand
	f	F	h	equipProgressOffHand
	f	F	i	prevEquipProgressOffHand
	f	Ldvf;	j	renderManager
	f	Ldvz;	k	itemRenderer
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Lajk;)V	a	resetEquipProgress
		p	1	hand	hand
	m	(Lcyl;FLaky;Lben;)V	a	applyEatOrDrinkTransformation
		p	1	matrices	matrices
		p	2	tickDelta	tickDelta
		p	3	arm	arm
		p	4	stack	stack
	m	(FLcyl;Ldqt$a;Ldqb;I)V	a	renderItem
		p	1	tickDelta	tickDelta
		p	2	matrices	matrices
		p	3	vertexConsumers	vertexConsumers
		p	4	player	player
		p	5	light	light
	m	(Lcyl;Ldqt;ILaky;)V	a	renderArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	arm	arm
	m	(Ldpy;FFLajk;FLben;FLcyl;Ldqt;I)V	a	renderFirstPersonItem
		p	1	player	player
		p	2	tickDelta	tickDelta
		p	3	pitch	pitch
		p	4	hand	hand
		p	5	swingProgress	swingProgress
		p	6	item	item
		p	7	equipProgress	equipProgress
		p	8	matrices	matrices
		p	9	vertexConsumers	vertexConsumers
		p	10	light	light
	m	(Lcyl;Laky;F)V	a	applySwingOffset
		p	1	matrices	matrices
		p	2	arm	arm
		p	3	swingProgress	swingProgress
	m	(Lcyl;Ldqt;IFFLaky;)V	a	renderArmHoldingItem
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	equipProgress	equipProgress
		p	5	swingProgress	swingProgress
		p	6	arm	arm
	m	(Lcyl;Ldqt;IFFF)V	a	renderMapInBothHands
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	pitch	pitch
		p	5	equipProgress	equipProgress
		p	6	swingProgress	swingProgress
	m	(Lakz;Lben;Ldrz$b;ZLcyl;Ldqt;I)V	a	renderItem
		p	1	entity	entity
		p	2	stack	stack
		p	3	renderMode	renderMode
		p	4	leftHanded	leftHanded
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
		p	7	light	light
	m	(Lcyl;Ldqt;ILben;)V	a	renderFirstPersonMap
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	swingProgress	swingProgress
		p	4	stack	stack
	m	(F)F	a	getMapAngle
		p	1	tickDelta	tickDelta
	m	()V	a	updateHeldItems
	m	(Lcyl;Ldqt;IFLaky;FLben;)V	a	renderMapInOneHand
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	equipProgress	equipProgress
		p	5	arm	arm
		p	6	swingProgress	swingProgress
		p	7	stack	stack
	m	(Lcyl;Laky;F)V	b	applyEquipOffset
		p	1	matrices	matrices
		p	2	arm	arm
		p	3	equipProgress	equipProgress
c	dqq	net/minecraft/client/render/item/ItemModels
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	modelIds
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	models
	f	Leca;	c	modelManager
	m	(Leca;)V	<init>	<init>
		p	1	modelManager	modelManager
	m	()Leca;	a	getModelManager
	m	(Lbei;Lecb;)V	a	putModel
		p	1	item	item
		p	2	modelId	modelId
	m	(Lben;)Leaj;	a	getSprite
		p	1	stack	stack
	m	(Lbei;)Lebv;	a	getModel
	m	(Lbjv;)Leaj;	a	getSprite
	m	()V	b	reloadModels
	m	(Lbei;)I	b	getModelId
	m	(Lben;)Lebv;	b	getModel
		p	1	stack	stack
c	dqr	net/minecraft/client/render/WorldRenderer
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	A	blockBreakingInfos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	B	blockBreakingProgressions
	f	Ljava/util/Map;	C	playingSongs
	f	Lcxe;	D	entityOutlinesFramebuffer
	f	Ldqw;	E	entityOutlineShader
	f	D	F	lastCameraChunkUpdateX
	f	D	G	lastCameraChunkUpdateY
	f	D	H	lastCameraChunkUpdateZ
	f	I	I	cameraChunkX
	f	I	J	cameraChunkY
	f	I	K	cameraChunkZ
	f	D	L	lastCameraX
	f	D	M	lastCameraY
	f	D	N	lastCameraZ
	f	D	O	lastCameraPitch
	f	D	P	lastCameraYaw
	f	I	Q	lastCloudsBlockX
	f	I	R	lastCloudsBlockY
	f	I	S	lastCloudsBlockZ
	f	Lcvl;	T	lastCloudsColor
	f	Ldbd;	U	lastCloudsRenderMode
	f	Ldth;	V	chunkBuilder
	f	Lcyp;	W	vertexFormat
	f	I	X	renderDistance
	f	I	Y	regularEntityCount
	f	I	Z	blockEntityCount
	f	[Lfp;	a	DIRECTIONS
	f	Z	aa	shouldCaptureFrustum
	f	Ldtm;	ab	capturedFrustum
	f	[Lf;	ac	capturedFrustrumOrientation
	f	Lcys;	ad	capturedFrustumPosition
	f	D	ae	lastTranslucentSortX
	f	D	af	lastTranslucentSortY
	f	D	ag	lastTranslucentSortZ
	f	Z	ah	needsTerrainUpdate
	f	I	ai	frame
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lsm;	c	MOON_PHASES
	f	Lsm;	d	SUN
	f	Lsm;	e	CLOUDS
	f	Lsm;	f	END_SKY
	f	Lsm;	g	FORCEFIELD
	f	Lsm;	h	RAIN
	f	Lsm;	i	SNOW
	f	Ldbn;	j	client
	f	Leak;	k	textureManager
	f	Ldvf;	l	entityRenderDispatcher
	f	Ldqz;	m	bufferBuilders
	f	Ldno;	n	world
	f	Ljava/util/Set;	o	chunksToRebuild
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	p	visibleChunks
	f	Ljava/util/Set;	q	noCullingBlockEntities
	f	Ldrg;	r	chunks
	f	Lcyp;	s	skyVertexFormat
	f	Lcyn;	t	starsBuffer
	f	Lcyn;	u	lightSkyBuffer
	f	Lcyn;	v	darkSkyBuffer
	f	Z	w	cloudsDirty
	f	Lcyn;	x	cloudsBuffer
	f	Ldrc;	y	chunkUpdateSmoother
	f	I	z	ticks
	m	(Ldbn;Ldqz;)V	<init>	<init>
		p	1	client	client
		p	2	bufferBuilders	bufferBuilders
	m	(ILfk;I)V	a	playGlobalEvent
		p	1	eventId	eventId
		p	2	pos	pos
	m	(III)V	a	scheduleBlockRenders
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbje;Lfk;)I	a	getLightmapCoordinates
		p	0	view	view
		p	1	pos	pos
	m	(Lcyg;)V	a	renderStars
		p	1	buffer	buffer
	m	(Lcyg;FZ)V	a	renderSkyHalf
		p	1	buffer	buffer
		p	2	y	y
		p	3	bottom	bottom
	m	(Lgt;DDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	velocityX	velocityX
		p	10	velocityY	velocityY
		p	12	velocityZ	velocityZ
	m	(IIIIII)V	a	scheduleBlockRenders
		p	1	minX	minX
		p	2	minY	minY
		p	3	minZ	minZ
		p	4	maxX	maxX
		p	5	maxY	maxY
		p	6	maxZ	maxZ
	m	(Lcyl;FJZLdbb;Ldqn;Ldqs;Lb;)V	a	render
		p	1	matrices	matrices
		p	2	tickDelta	tickDelta
		p	3	limitTime	limitTime
		p	5	renderBlockOutline	renderBlockOutline
		p	6	camera	camera
		p	7	gameRenderer	gameRenderer
		p	8	lightmapTextureManager	lightmapTextureManager
	m	(Ldno;)V	a	setWorld
	m	(Ldqs;FDDD)V	a	renderWeather
		p	1	manager	manager
	m	(Lcyl;Lcyo;Lcvf;FFFF)V	a	drawBox
	m	(Layj;ILfk;I)V	a	playLevelEvent
		p	1	source	source
		p	2	type	type
		p	3	pos	pos
		p	4	data	data
	m	(Lfk;Ldth$c;Lfp;)Ldth$c;	a	getAdjacentChunk
		p	1	pos	pos
		p	2	chunk	chunk
		p	3	direction	direction
	m	(Lwn;)V	a	removeBlockBreakingInfo
	m	(II)V	a	onResized
	m	()V	a	loadEntityOutlineShader
	m	(Ldbb;Ldtm;ZIZ)V	a	setupTerrain
		p	1	camera	camera
		p	2	frustum	frustum
		p	3	hasForcedFrustum	hasForcedFrustum
		p	4	frame	frame
		p	5	spectator	spectator
	m	(Lbjw;Lfk;Z)V	a	updateEntitiesForSong
		p	1	world	world
		p	2	pos	pos
		p	3	playing	playing
	m	(Lb;Lb;DDDLdtm;)V	a	captureFrustum
		p	1	modelMatrix	modelMatrix
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	frustum	frustum
	m	(Ldbb;)V	a	method_22713
		p	1	camera	camera
	m	(Lgt;ZDDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	shouldAlwaysSpawn	shouldAlwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	(Lbjg;Lfk;Lbyj;Lbyj;I)V	a	updateBlock
		p	1	view	view
		p	2	pos	pos
		p	3	oldState	oldState
		p	4	newState	newState
		p	5	flags	flags
	m	(Lcyl;)V	a	checkEmpty
		p	1	matrix	matrix
	m	(J)V	a	updateChunks
		p	1	limitTime	limitTime
	m	(Lfk;Z)V	a	scheduleSectionRender
		p	1	pos	pos
		p	2	important	important
	m	(Lfk;Lbyj;Lbyj;)V	a	checkBlockRerender
		p	1	pos	pos
		p	2	old	old
		p	3	updated	updated
	m	(Lcyl;F)V	a	renderSky
	m	(Lbje;Lbyj;Lfk;)I	a	getLightmapCoordinates
		p	0	view	view
		p	1	state	state
		p	2	pos	pos
	m	(Lcyl;Lcyo;DDDDDDFFFF)V	a	drawBox
	m	(Lcyl;FDDD)V	a	renderClouds
		p	1	matrices	matrices
		p	2	tickDelta	tickDelta
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	(IIIZ)V	a	scheduleChunkRender
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	important	important
	m	(Lfk;)Ljava/util/Set;	a	getOpenChunkFaces
		p	1	pos	pos
	m	(Lakq;DDDFLcyl;Ldqt;)V	a	renderEntity
		p	1	entity	entity
		p	2	cameraX	cameraX
		p	4	cameraY	cameraY
		p	6	cameraZ	cameraZ
		p	8	tickDelta	tickDelta
		p	9	matrix	matrix
		p	10	vertexConsumers	vertexConsumers
	m	(Laah;Lfk;)V	a	playSong
		p	1	song	song
		p	2	songPosition	songPosition
	m	(Lcyl;Lcyo;Lakq;DDDLfk;Lbyj;)V	a	drawBlockOutline
	m	(Ldrb;Lcyl;DDD)V	a	renderLayer
	m	(Lcyl;Lcyo;DDDDDDFFFFFFF)V	a	drawBox
		p	0	matrix	matrix
		p	1	vertexConsumer	vertexConsumer
		p	2	x1	x1
		p	4	y1	y1
		p	6	z1	z1
		p	8	x2	x2
		p	10	y2	y2
		p	12	z2	z2
		p	14	red	red
		p	17	alpha	alpha
		p	19	green	green
		p	20	blue	blue
	m	(Lgt;ZZDDDDDD)V	a	addParticle
		p	1	parameters	parameters
		p	2	shouldAlwaysSpawn	shouldAlwaysSpawn
		p	3	isImportant	isImportant
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	velocityX	velocityX
		p	12	velocityY	velocityY
		p	14	velocityY	velocityY
	m	(Lcyg;DDDDDDFFFF)V	a	drawBox
		p	0	buffer	buffer
		p	1	x1	x1
		p	3	y1	y1
		p	5	z1	z1
		p	7	x2	x2
		p	9	y2	y2
		p	11	z2	z2
		p	13	red	red
		p	14	green	green
		p	15	blue	blue
		p	16	alpha	alpha
	m	(Lcyo;DDDDDDFFFF)V	a	drawBox
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	a	updateNoCullingBlockEntities
		p	1	removed	removed
		p	2	added	added
	m	(Lcyg;DDDLcvl;)V	a	renderClouds
		p	1	builder	builder
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	color	color
	m	(Z)Ldbs;	a	getRandomParticleSpawnChance
		p	1	canSpawnOnMinimal	canSpawnOnMinimal
	m	(Lgt;ZZDDDDDD)Ldoz;	b	spawnParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	canSpawnOnMinimal	canSpawnOnMinimal
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	velocityX	velocityX
		p	12	velocityY	velocityY
		p	14	velocityZ	velocityZ
	m	(Lgt;ZDDDDDD)Ldoz;	b	spawnParticle
		p	1	parameters	parameters
		p	2	alwaysSpawn	alwaysSpawn
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	velocityX	velocityX
		p	11	velocityY	velocityY
		p	13	velocityZ	velocityZ
	m	()V	b	drawEntityOutlinesFramebuffer
	m	(ILfk;I)V	b	setBlockBreakingInfo
		p	1	entityId	entityId
		p	2	pos	pos
		p	3	stage	stage
	m	(Lcyl;)V	b	renderEndSky
	m	(III)V	b	scheduleBlockRender
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lcyl;Lcyo;Lcwf;DDDFFFF)V	b	drawShapeOutline
	m	(Ldbb;)V	b	renderChunkDebugInfo
		p	1	camera	camera
	m	()Z	c	canDrawEntityOutlines
	m	(Ldbb;)V	c	renderWorldBorder
		p	1	camera	camera
	m	()V	d	reload
	m	()V	e	clearChunkRenderers
	m	()Ljava/lang/String;	f	getChunksDebugString
	m	()I	g	getCompletedChunkCount
	m	()Ljava/lang/String;	h	getEntitiesDebugString
	m	()V	l	tick
	m	()Z	n	isTerrainRenderComplete
	m	()V	o	scheduleTerrainUpdate
	m	()Lcxe;	p	getEntityOutlinesFramebuffer
	m	()V	q	renderDarkSky
	m	()V	r	renderLightSky
	m	()V	s	renderStars
c	dqr$a	net/minecraft/client/render/WorldRenderer$ChunkInfo
	f	Ldth$c;	b	chunk
	f	Lfp;	c	direction
	f	B	d	cullingState
	f	I	e	propagationLevel
	m	(Ldqr;Ldth$c;Lfp;I)V	<init>	<init>
		p	1	renderer	renderer
		p	2	chunk	chunk
		p	3	direction	direction
		p	4	propagationLevel	propagationLevel
	m	(Lfp;)Z	a	canCull
		p	1	from	from
	m	(BLfp;)V	a	updateCullingState
		p	1	parentCullingState	parentCullingState
		p	2	from	from
c	dqs	net/minecraft/client/render/LightmapTextureManager
	f	Ldzy;	a	texture
	f	Lcxr;	b	image
	f	Lsm;	c	textureIdentifier
	f	Z	d	isDirty
	f	Ldqn;	f	worldRenderer
	f	Ldbn;	g	client
	m	(F)V	a	update
		p	1	delta	delta
	m	(Lbjw;I)F	a	getBrightness
	m	(II)I	a	pack
		p	0	block	block
		p	1	sky	sky
	m	()V	a	tick
	m	(I)I	a	getBlockLightCoordinates
		p	0	light	light
	m	(I)I	b	getSkyLightCoordinates
		p	0	light	light
	m	()V	b	disable
	m	()V	c	enable
c	dqt	net/minecraft/client/render/VertexConsumerProvider
	m	(Ljava/util/Map;Lcyg;)Ldqt$a;	a	immediate
		p	0	layerBuffers	layerBuffers
		p	1	fallbackBuffer	fallbackBuffer
	m	(Lcyg;)Ldqt$a;	a	immediate
		p	0	buffer	buffer
	m	(Ldrb;)Lcyo;	getBuffer	getBuffer
		p	1	layer	layer
c	dqt$a	net/minecraft/client/render/VertexConsumerProvider$Immediate
	f	Lcyg;	a	fallbackBuffer
	f	Ljava/util/Map;	b	layerBuffers
	f	Ljava/util/Optional;	c	currentLayer
	f	Ljava/util/Set;	d	activeConsumers
	m	(Lcyg;Ljava/util/Map;)V	<init>	<init>
		p	1	fallbackBuffer	fallbackBuffer
		p	2	layerBuffers	layerBuffers
	m	(Ldrb;)V	a	draw
		p	1	layer	layer
	m	()V	a	draw
	m	(Ldrb;)Lcyg;	b	getBufferInternal
		p	1	layer	layer
c	dqu	net/minecraft/client/render/OutlineVertexConsumerProvider
	f	Ldqt$a;	a	parent
	f	Ldqt$a;	b	plainDrawer
	f	I	c	red
	f	I	d	green
	f	I	e	blue
	f	I	f	alpha
	m	(IIII)V	a	setColor
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	()V	a	draw
c	dqu$a	net/minecraft/client/render/OutlineVertexConsumerProvider$OutlineVertexConsumer
	f	Lcyo;	g	delegate
	f	D	h	x
	f	D	i	y
	f	D	j	z
	f	F	k	u
	f	F	l	v
	m	(Lcyo;IIII)V	<init>	<init>
		p	1	delegate	delegate
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
c	dqv	net/minecraft/client/gui/RotatingCubeMapRenderer
	f	Ldbn;	a	client
	f	Ldqj;	b	cubeMap
	f	F	c	time
	m	(Ldqj;)V	<init>	<init>
		p	1	cubeMap	cubeMap
	m	(FF)V	a	render
		p	1	delta	delta
		p	2	alpha	alpha
c	dqw	net/minecraft/client/gl/ShaderEffect
	f	Lcxe;	a	mainTarget
	f	Lzb;	b	resourceManager
	f	Ljava/lang/String;	c	name
	f	Ljava/util/List;	d	passes
	f	Ljava/util/Map;	e	targetsByName
	f	Ljava/util/List;	f	defaultSizedTargets
	f	Lb;	g	projectionMatrix
	f	I	h	width
	f	I	i	height
	f	F	j	time
	f	F	k	lastTickDelta
	m	(Leak;Lzb;Lcxe;Lsm;)V	<init>	<init>
		p	3	framebuffer	framebuffer
		p	4	location	location
	m	(Leak;Lsm;)V	a	parseEffect
		p	2	location	location
	m	(Leak;Lcom/google/gson/JsonElement;)V	a	parsePass
		p	2	jsonPass	jsonPass
	m	(Ljava/lang/String;II)V	a	addTarget
		p	1	name	name
		p	2	width	width
		p	3	height	height
	m	(F)V	a	render
		p	1	tickDelta	tickDelta
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcxe;	a	getSecondaryTarget
		p	1	name	name
	m	(II)V	a	setupDimensions
		p	1	targetsWidth	targetsWidth
		p	2	targetsHeight	targetsHeight
	m	(Ljava/lang/String;Lcxe;Lcxe;)Ldqx;	a	addPass
		p	1	programName	programName
		p	2	source	source
		p	3	dest	dest
	m	(Lcom/google/gson/JsonElement;)V	a	parseTarget
		p	1	jsonTarget	jsonTarget
	m	()V	b	setupProjectionMatrix
	m	(Ljava/lang/String;)Lcxe;	b	getTarget
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;)V	b	parseUniform
		p	1	jsonUniform	jsonUniform
c	dqx	net/minecraft/client/gl/PostProcessShader
	f	Lcxe;	a	input
	f	Lcxe;	b	output
	f	Ldqk;	c	program
	f	Ljava/util/List;	d	samplerValues
	f	Ljava/util/List;	e	samplerNames
	f	Ljava/util/List;	f	samplerWidths
	f	Ljava/util/List;	g	samplerHeights
	f	Lb;	h	projectionMatrix
	m	(Lzb;Ljava/lang/String;Lcxe;Lcxe;)V	<init>	<init>
		p	1	resourceManager	resourceManager
		p	2	programName	programName
		p	3	input	input
		p	4	output	output
	m	(F)V	a	render
		p	1	time	time
	m	(Lb;)V	a	setProjectionMatrix
		p	1	projectionMatrix	projectionMatrix
	m	(Ljava/lang/String;Ljava/lang/Object;II)V	a	addAuxTarget
		p	1	name	name
		p	2	target	target
		p	3	width	width
		p	4	height	height
	m	()Ldqk;	b	getProgram
c	dqy	net/minecraft/client/util/Rect2i
	f	I	a	x
	f	I	b	y
	f	I	c	width
	f	I	d	height
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	()I	a	getX
	m	(II)Z	b	contains
		p	1	x	x
		p	2	y	y
	m	()I	b	getY
	m	()I	c	getWidth
	m	()I	d	getHeight
c	dqz	net/minecraft/client/render/BufferBuilderStorage
	f	Ldqi;	a	blockBuilders
	f	Ljava/util/SortedMap;	b	entityBuilders
	f	Ldqt$a;	c	entityVertexConsumers
	f	Ldqt$a;	d	effectVertexConsumers
	f	Ldqu;	e	outlineVertexConsumers
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Ldrb;)V	a	assignBufferBuilder
		p	0	builderStorage	builderStorage
		p	1	layer	layer
	m	()Ldqi;	a	getBlockBufferBuilders
	m	()Ldqt$a;	b	getEntityVertexConsumers
	m	()Ldqt$a;	c	getEffectVertexConsumers
	m	()Ldqu;	d	getOutlineVertexConsumers
c	dr	net/minecraft/command/arguments/TimeArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_UNIT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	INVALID_COUNT_EXCEPTION
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	units
	m	()Ldr;	a	time
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dra	net/minecraft/client/render/RenderPhase
	f	Ldra$c;	A	DISABLE_CULLING
	f	Ldra$d;	B	ALWAYS_DEPTH_TEST
	f	Ldra$d;	C	EQUAL_DEPTH_TEST
	f	Ldra$d;	D	LEQUAL_DEPTH_TEST
	f	Ldra$r;	E	ALL_MASK
	f	Ldra$r;	F	COLOR_MASK
	f	Ldra$r;	G	DEPTH_MASK
	f	Ldra$g;	H	NO_LAYERING
	f	Ldra$g;	I	POLYGON_OFFSET_LAYERING
	f	Ldra$g;	J	PROJECTION_LAYERING
	f	Ldra$f;	K	NO_FOG
	f	Ldra$f;	L	FOG
	f	Ldra$f;	M	BLACK_FOG
	f	Ldra$k;	N	MAIN_TARGET
	f	Ldra$k;	O	OUTLINE_TARGET
	f	Ldra$i;	P	FULL_LINEWIDTH
	f	Ljava/lang/Runnable;	Q	beginAction
	f	Ljava/lang/Runnable;	R	endAction
	f	Ljava/lang/String;	a	name
	f	Ldra$q;	b	NO_TRANSPARENCY
	f	Ldra$q;	c	ADDITIVE_TRANSPARENCY
	f	Ldra$q;	d	LIGHTNING_TRANSPARENCY
	f	Ldra$q;	e	GLINT_TRANSPARENCY
	f	Ldra$q;	f	CRUMBLING_TRANSPARENCY
	f	Ldra$q;	g	TRANSLUCENT_TRANSPARENCY
	f	Ldra$a;	h	ZERO_ALPHA
	f	Ldra$a;	i	ONE_TENTH_ALPHA
	f	Ldra$a;	j	HALF_ALPHA
	f	Ldra$n;	k	SHADE_MODEL
	f	Ldra$n;	l	SMOOTH_SHADE_MODEL
	f	Ldra$o;	m	MIPMAP_BLOCK_ATLAS_TEXTURE
	f	Ldra$o;	n	BLOCK_ATLAS_TEXTURE
	f	Ldra$o;	o	NO_TEXTURE
	f	Ldra$p;	p	DEFAULT_TEXTURING
	f	Ldra$p;	q	OUTLINE_TEXTURING
	f	Ldra$p;	r	GLINT_TEXTURING
	f	Ldra$p;	s	ENTITY_GLINT_TEXTURING
	f	Ldra$h;	t	ENABLE_LIGHTMAP
	f	Ldra$h;	u	DISABLE_LIGHTMAP
	f	Ldra$l;	v	ENABLE_OVERLAY_COLOR
	f	Ldra$l;	w	DISABLE_OVERLAY_COLOR
	f	Ldra$e;	x	ENABLE_DIFFUSE_LIGHTING
	f	Ldra$e;	y	DISABLE_DIFFUSE_LIGHTING
	f	Ldra$c;	z	ENABLE_CULLING
	m	(Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	name	name
		p	2	beginAction	beginAction
		p	3	endAction	endAction
	m	(F)V	a	setupGlintTexturing
		p	0	scale	scale
	m	()V	a	startDrawing
	m	()V	b	endDrawing
c	dra$a	net/minecraft/client/render/RenderPhase$Alpha
	f	F	Q	alpha
	m	(F)V	<init>	<init>
		p	1	alpha	alpha
c	dra$b	net/minecraft/client/render/RenderPhase$Toggleable
	f	Z	Q	enabled
c	dra$c	net/minecraft/client/render/RenderPhase$Cull
	m	(Z)V	<init>	<init>
		p	1	culling	culling
c	dra$d	net/minecraft/client/render/RenderPhase$DepthTest
	f	I	Q	func
	m	(I)V	<init>	<init>
		p	1	func	func
c	dra$e	net/minecraft/client/render/RenderPhase$DiffuseLighting
	m	(Z)V	<init>	<init>
		p	1	guiLighting	guiLighting
c	dra$f	net/minecraft/client/render/RenderPhase$Fog
c	dra$g	net/minecraft/client/render/RenderPhase$Layering
c	dra$h	net/minecraft/client/render/RenderPhase$Lightmap
	m	(Z)V	<init>	<init>
		p	1	lightmap	lightmap
c	dra$i	net/minecraft/client/render/RenderPhase$LineWidth
	f	Ljava/util/OptionalDouble;	Q	width
c	dra$j	net/minecraft/client/render/RenderPhase$OffsetTexturing
	f	F	Q	x
	f	F	R	y
	m	(FF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
c	dra$k	net/minecraft/client/render/RenderPhase$Target
c	dra$l	net/minecraft/client/render/RenderPhase$Overlay
	m	(Z)V	<init>	<init>
		p	1	overlayColor	overlayColor
c	dra$m	net/minecraft/client/render/RenderPhase$PortalTexturing
	f	I	Q	layer
	m	(I)V	<init>	<init>
		p	1	layer	layer
c	dra$n	net/minecraft/client/render/RenderPhase$ShadeModel
	f	Z	Q	smooth
	m	(Z)V	<init>	<init>
		p	1	smooth	smooth
c	dra$o	net/minecraft/client/render/RenderPhase$Texture
	f	Ljava/util/Optional;	Q	id
	f	Z	R	bilinear
	f	Z	S	mipmap
	m	(Lsm;ZZ)V	<init>	<init>
		p	1	id	id
		p	2	bilinear	bilinear
		p	3	mipmap	mipmap
	m	()Ljava/util/Optional;	c	getId
c	dra$p	net/minecraft/client/render/RenderPhase$Texturing
c	dra$q	net/minecraft/client/render/RenderPhase$Transparency
c	dra$r	net/minecraft/client/render/RenderPhase$WriteMaskState
	f	Z	Q	color
	f	Z	R	depth
	m	(ZZ)V	<init>	<init>
		p	1	color	color
		p	2	depth	depth
c	drb	net/minecraft/client/render/RenderLayer
	f	Lcyp;	ab	vertexFormat
	f	I	ac	drawMode
	f	I	ad	expectedBufferSize
	f	Z	ae	hasCrumbling
	f	Z	af	translucent
	f	Ljava/util/Optional;	ag	optionalThis
	m	(Ljava/lang/String;Lcyp;IIZZLjava/lang/Runnable;Ljava/lang/Runnable;)V	<init>	<init>
		p	1	name	name
		p	2	vertexFormat	vertexFormat
		p	3	drawMode	drawMode
		p	4	expectedBufferSize	expectedBufferSize
		p	5	hasCrumbling	hasCrumbling
		p	6	translucent	translucent
		p	7	startAction	startAction
		p	8	endAction	endAction
	m	(Ljava/lang/String;Lcyp;IILdrb$b;)Ldrb$a;	a	of
		p	0	name	name
		p	1	vertexFormat	vertexFormat
		p	2	drawMode	drawMode
		p	3	expectedBufferSize	expectedBufferSize
		p	4	phaseData	phaseData
	m	(Lsm;FF)Ldrb;	a	getEnergySwirl
		p	0	texture	texture
		p	1	x	x
		p	2	y	y
	m	(Lsm;)Ldrb;	a	getEntitySolid
		p	0	texture	texture
	m	(Lsm;Z)Ldrb;	a	getCutoutNoCull
		p	0	texture	texture
		p	1	affectsOutline	affectsOutline
	m	(Lsm;F)Ldrb;	a	getEntityAlpha
		p	0	texture	texture
		p	1	alpha	alpha
	m	(I)Ldrb;	a	getEndPortal
		p	0	layer	layer
	m	(Ljava/lang/String;Lcyp;IIZZLdrb$b;)Ldrb$a;	a	of
		p	0	name	name
		p	1	vertexFormat	vertexFormat
		p	2	drawMode	drawMode
		p	3	expectedBufferSize	expectedBufferSize
		p	4	hasCrumbling	hasCrumbling
		p	5	translucent	translucent
		p	6	phases	phases
	m	(Lcyg;III)V	a	draw
		p	1	buffer	buffer
		p	2	cameraX	cameraX
		p	3	cameraY	cameraY
		p	4	cameraZ	cameraZ
	m	(Lsm;)Ldrb;	b	getEntityCutout
		p	0	texture	texture
	m	(Lsm;Z)Ldrb;	b	getEntityTranslucent
		p	0	texture	texture
		p	1	affectsOutline	affectsOutline
	m	(Lsm;Z)Ldrb;	c	getBeaconBeam
		p	0	texture	texture
		p	1	translucent	translucent
	m	()Ldrb;	c	getSolid
	m	(Lsm;)Ldrb;	c	getEntityCutoutNoCull
		p	0	texture	texture
	m	()Ldrb;	d	getCutoutMipped
	m	(Lsm;)Ldrb;	d	getEntityTranslucentCull
		p	0	texture	texture
	m	()Ldrb;	e	getCutout
	m	(Lsm;)Ldrb;	e	getEntityTranslucent
		p	0	texture	texture
	m	()Ldrb;	f	getTranslucent
	m	(Lsm;)Ldrb;	f	getEntitySmoothCutout
		p	0	texture	texture
	m	(Lsm;)Ldrb;	g	getEntityDecal
		p	0	texture	texture
	m	()Ldrb;	g	getTranslucentNoCrumbling
	m	(Lsm;)Ldrb;	h	getEntityNoOutline
		p	0	texture	texture
	m	()Ldrb;	h	getLeash
	m	(Lsm;)Ldrb;	i	getEyes
		p	0	texture	texture
	m	()Ldrb;	i	getWaterMask
	m	(Lsm;)Ldrb;	j	getOutline
		p	0	texture	texture
	m	()Ldrb;	j	getGlint
	m	()Ldrb;	k	getEntityGlint
	m	(Lsm;)Ldrb;	k	getBlockBreaking
		p	0	texture	texture
	m	(Lsm;)Ldrb;	l	getText
		p	0	texture	texture
	m	()Ldrb;	l	getLightning
	m	()Ldrb;	m	getLines
	m	(Lsm;)Ldrb;	m	getTextSeeThrough
		p	0	texture	texture
	m	()Ljava/util/List;	n	getBlockLayers
	m	()I	o	getExpectedBufferSize
	m	()Lcyp;	p	getVertexFormat
	m	()I	q	getDrawMode
	m	()Ljava/util/Optional;	r	getAffectedOutline
	m	()Z	s	isOutline
	m	()Ljava/util/Optional;	u	asOptional
	m	()Ldrb$b;	v	createTranslucentPhaseData
c	drb$a	net/minecraft/client/render/RenderLayer$MultiPhase
	f	Lit/unimi/dsi/fastutil/objects/ObjectOpenCustomHashSet;	R	CACHE
	f	Ldrb$b;	S	phases
	f	I	T	hash
	f	Ljava/util/Optional;	U	affectedOutline
	f	Z	V	outline
	m	(Ljava/lang/String;Lcyp;IIZZLdrb$b;)V	<init>	<init>
		p	1	name	name
		p	2	vertexFormat	vertexFormat
		p	3	drawMode	drawMode
		p	4	expectedBufferSize	expectedBufferSize
		p	5	hasCrumbling	hasCrumbling
		p	6	translucent	translucent
		p	7	phases	phases
	m	(Ljava/lang/String;Lcyp;IIZZLdrb$b;)Ldrb$a;	c	of
		p	0	name	name
		p	1	vertexFormat	vertexFormat
		p	2	drawMode	drawMode
		p	3	expectedBufferSize	expectedBufferSize
		p	4	hasCrumbling	hasCrumbling
		p	5	translucent	translucent
		p	6	phases	phases
c	drb$a$a	net/minecraft/client/render/RenderLayer$MultiPhase$HashStrategy
	m	(Ldrb$a;Ldrb$a;)Z	a	equals
	m	(Ldrb$a;)I	a	hashCode
c	drb$b	net/minecraft/client/render/RenderLayer$MultiPhaseParameters
	f	Ldra$o;	a	texture
	f	Ldra$q;	b	transparency
	f	Ldra$e;	c	diffuseLighting
	f	Ldra$n;	d	shadeModel
	f	Ldra$a;	e	alpha
	f	Ldra$d;	f	depthTest
	f	Ldra$c;	g	cull
	f	Ldra$h;	h	lightmap
	f	Ldra$l;	i	overlay
	f	Ldra$f;	j	fog
	f	Ldra$g;	k	layering
	f	Ldra$k;	l	target
	f	Ldra$p;	m	texturing
	f	Ldra$r;	n	writeMaskState
	f	Ldra$i;	o	lineWidth
	f	Ldrb$c;	p	outlineMode
	f	Lcom/google/common/collect/ImmutableList;	q	phases
	m	(Ldra$o;Ldra$q;Ldra$e;Ldra$n;Ldra$a;Ldra$d;Ldra$c;Ldra$h;Ldra$l;Ldra$f;Ldra$g;Ldra$k;Ldra$p;Ldra$r;Ldra$i;Ldrb$c;)V	<init>	<init>
		p	1	texture	texture
		p	2	transparency	transparency
		p	3	diffuseLighting	diffuseLighting
		p	4	shadeModel	shadeModel
		p	5	alpha	alpha
		p	6	depthTest	depthTest
		p	7	cull	cull
		p	8	lightmap	lightmap
		p	9	overlay	overlay
		p	10	fog	fog
		p	11	layering	layering
		p	12	target	target
		p	13	texturing	texturing
		p	14	writeMaskState	writeMaskState
		p	15	lineWidth	lineWidth
		p	16	outlineMode	outlineMode
	m	()Ldrb$b$a;	a	builder
c	drb$b$a	net/minecraft/client/render/RenderLayer$MultiPhaseParameters$Builder
	f	Ldra$o;	a	texture
	f	Ldra$q;	b	transparency
	f	Ldra$e;	c	diffuseLighting
	f	Ldra$n;	d	shadeModel
	f	Ldra$a;	e	alpha
	f	Ldra$d;	f	depthTest
	f	Ldra$c;	g	cull
	f	Ldra$h;	h	lightmap
	f	Ldra$l;	i	overlay
	f	Ldra$f;	j	fog
	f	Ldra$g;	k	layering
	f	Ldra$k;	l	target
	f	Ldra$p;	m	texturing
	f	Ldra$r;	n	writeMaskState
	f	Ldra$i;	o	lineWidth
	m	(Ldra$p;)Ldrb$b$a;	a	texturing
		p	1	texturing	texturing
	m	(Ldra$g;)Ldrb$b$a;	a	layering
		p	1	layering	layering
	m	(Ldra$n;)Ldrb$b$a;	a	shadeModel
		p	1	shadeModel	shadeModel
	m	(Ldra$a;)Ldrb$b$a;	a	alpha
		p	1	alpha	alpha
	m	(Ldra$q;)Ldrb$b$a;	a	transparency
		p	1	transparency	transparency
	m	(Ldra$o;)Ldrb$b$a;	a	texture
		p	1	texture	texture
	m	(Ldrb$c;)Ldrb$b;	a	build
		p	1	outlineMode	outlineMode
	m	(Ldra$r;)Ldrb$b$a;	a	writeMaskState
		p	1	writeMaskState	writeMaskState
	m	(Ldra$d;)Ldrb$b$a;	a	depthTest
		p	1	depthTest	depthTest
	m	(Z)Ldrb$b;	a	build
		p	1	affectsOutline	affectsOutline
	m	(Ldra$i;)Ldrb$b$a;	a	lineWidth
		p	1	lineWidth	lineWidth
	m	(Ldra$l;)Ldrb$b$a;	a	overlay
		p	1	overlay	overlay
	m	(Ldra$c;)Ldrb$b$a;	a	cull
		p	1	cull	cull
	m	(Ldra$f;)Ldrb$b$a;	a	fog
		p	1	fog	fog
	m	(Ldra$h;)Ldrb$b$a;	a	lightmap
		p	1	lightmap	lightmap
	m	(Ldra$e;)Ldrb$b$a;	a	diffuseLighting
		p	1	diffuseLighting	diffuseLighting
	m	(Ldra$k;)Ldrb$b$a;	a	target
		p	1	target	target
c	drb$c	net/minecraft/client/render/RenderLayer$OutlineMode
c	drc	net/minecraft/client/render/FpsSmoother
	f	[J	a	times
	f	I	b	size
	f	I	c	index
	m	(I)V	<init>	<init>
		p	1	size	size
	m	(J)J	a	getTargetUsedTime
		p	1	time	time
c	drd	net/minecraft/client/gui/hud/InGameOverlayRenderer
	f	Lsm;	a	UNDERWATER_TEX
	m	(Layj;)Lbyj;	a	getInWallBlockState
	m	(Ldbn;Lcyl;)V	a	renderOverlays
	m	(Ldbn;Leaj;Lcyl;)V	a	renderInWallOverlay
	m	(Ldbn;Lcyl;)V	b	renderUnderwaterOverlay
	m	(Ldbn;Lcyl;)V	c	renderFireOverlay
c	dre	net/minecraft/client/render/TexturedRenderLayers
	f	Ldrb;	A	ENTITY_SOLID
	f	Ldrb;	B	ENTITY_CUTOUT
	f	Ldrb;	C	ENTITY_TRANSLUCENT
	f	Ldrb;	D	ENTITY_TRANSLUCENT_CULL
	f	Lsm;	a	SHULKER_BOXES_ATLAS_TEXTURE
	f	Lsm;	b	BEDS_ATLAS_TEXTURE
	f	Lsm;	c	BANNER_PATTERNS_ATLAS_TEXTURE
	f	Lsm;	d	SHIELD_PATTERNS_ATLAS_TEXTURE
	f	Lsm;	e	SIGNS_ATLAS_TEXTURE
	f	Lsm;	f	CHEST_ATLAS_TEXTURE
	f	Leby;	g	SHULKER_TEXTURE_ID
	f	Ljava/util/List;	h	COLORED_SHULKER_BOXES_TEXTURES
	f	Ljava/util/Map;	i	WOOD_TYPE_TEXTURES
	f	[Leby;	j	BED_TEXTURES
	f	Ldrb;	u	SHULKER_BOXES_RENDER_LAYER
	f	Ldrb;	v	BEDS_RENDER_LAYER
	f	Ldrb;	w	BANNER_PATTERNS_RENDER_LAYER
	f	Ldrb;	x	SHIELD_PATTERNS_RENDER_LAYER
	f	Ldrb;	y	SIGN_RENDER_LAYER
	f	Ldrb;	z	CHEST_RENDER_LAYER
	m	(Ljava/util/function/Consumer;)V	a	addDefaultTextures
		p	0	adder	adder
	m	(Lbwl;Lbzc;Z)Leby;	a	getChestTexture
		p	0	blockEntity	blockEntity
		p	1	type	type
		p	2	christmas	christmas
	m	(Lbzs;)Leby;	a	getSignTextureId
		p	0	type	type
	m	()Ldrb;	a	getBannerPatterns
	m	(Lbzc;Leby;Leby;Leby;)Leby;	a	getChestTexture
		p	0	type	type
		p	1	single	single
		p	2	left	left
		p	3	right	right
	m	(Ljava/lang/String;)Leby;	a	getChestTextureId
		p	0	variant	variant
	m	()Ldrb;	b	getShieldPatterns
	m	()Ldrb;	c	getBeds
	m	()Ldrb;	d	getShulkerBoxes
	m	()Ldrb;	e	getSign
	m	()Ldrb;	f	getChest
	m	()Ldrb;	g	getEntitySolid
	m	()Ldrb;	h	getEntityCutout
	m	()Ldrb;	i	getEntityTranslucent
	m	()Ldrb;	j	getEntityTranslucentCull
c	drf	net/minecraft/client/render/SpriteTexturedVertexConsumer
	f	Lcyo;	a	parent
	f	Leaj;	b	sprite
	m	(Lcyo;Leaj;)V	<init>	<init>
		p	1	parent	parent
		p	2	sprite	sprite
c	drg	net/minecraft/client/render/BuiltChunkStorage
	f	Ldqr;	a	worldRenderer
	f	Lbjw;	b	world
	f	I	c	sizeY
	f	I	d	sizeX
	f	I	e	sizeZ
	f	[Ldth$c;	f	chunks
	m	(Ldth;Lbjw;ILdqr;)V	<init>	<init>
		p	2	world	world
		p	3	viewDistance	viewDistance
		p	4	worldRenderer	worldRenderer
	m	(IIIZ)V	a	scheduleRebuild
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	important	important
	m	()V	a	clear
	m	(III)I	a	getChunkIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ldth;)V	a	createChunks
	m	(I)V	a	setViewDistance
		p	1	viewDistance	viewDistance
	m	(Lfk;)Ldth$c;	a	getRenderedChunk
		p	1	pos	pos
	m	(DD)V	a	updateCameraPosition
		p	1	x	x
		p	3	z	z
c	drh	net/minecraft/client/util/WindowProvider
	f	Ldbn;	a	client
	f	Lcxt;	b	monitorTracker
	m	(Lcxh;Ljava/lang/String;Ljava/lang/String;)Lcxx;	a	createWindow
c	drj	net/minecraft/client/render/block/BlockModels
	f	Ljava/util/Map;	a	models
	f	Leca;	b	modelManager
	m	()Leca;	a	getModelManager
	m	(Lbyj;)Leaj;	a	getSprite
	m	(Lbzm;Ljava/lang/Comparable;)Ljava/lang/String;	a	propertyValueToString
	m	(Ljava/util/Map;)Ljava/lang/String;	a	propertyMapToString
	m	(Lsm;Lbyj;)Lecb;	a	getModelId
	m	(Lbyj;)Lebv;	b	getModel
	m	()V	b	reload
	m	(Lbyj;)Lecb;	c	getModelId
c	drk	net/minecraft/client/render/block/BlockRenderManager
	f	Ldrj;	a	models
	f	Ldrm;	b	blockModelRenderer
	f	Ldrl;	c	fluidRenderer
	f	Ljava/util/Random;	d	random
	f	Ldcb;	e	blockColors
	m	(Lbyj;)Lebv;	a	getModel
		p	1	state	state
	m	()Ldrj;	a	getModels
	m	(Lbyj;Lcyl;Ldqt;II)V	a	renderBlockAsEntity
		p	1	state	state
		p	3	vertexConsumer	vertexConsumer
		p	4	light	light
		p	5	overlay	overlay
	m	(Lfk;Lbje;Lcyo;Lcoj;)Z	a	renderFluid
	m	(Lbyj;Lfk;Lbje;Lcyl;Lcyo;)V	a	renderDamage
		p	1	state	state
		p	2	pos	pos
		p	3	world	world
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
	m	(Lbyj;Lfk;Lbje;Lcyl;Lcyo;ZLjava/util/Random;)Z	a	renderBlock
		p	1	state	state
		p	2	pos	pos
		p	3	world	world
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
		p	6	cull	cull
		p	7	random	random
	m	()Ldrm;	b	getModelRenderer
c	drl	net/minecraft/client/render/block/FluidRenderer
	f	[Leaj;	a	lavaSprites
	f	[Leaj;	b	waterSprites
	f	Leaj;	c	waterOverlaySprite
	m	(Lcyo;DDDFFFFFI)V	a	vertex
		p	1	vertexConsumer	vertexConsumer
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	red	red
		p	9	green	green
		p	10	blue	blue
		p	11	u	u
		p	12	v	v
		p	13	light	light
	m	()V	a	onResourceReload
	m	(Lbjg;Lfk;Lfp;Lcoj;)Z	a	isSameFluid
		p	0	world	world
		p	1	pos	pos
		p	2	side	side
		p	3	state	state
	m	(Lbjg;Lfk;Lfp;F)Z	a	isSideCovered
		p	0	world	world
		p	1	pos	pos
		p	2	direction	direction
		p	3	maxDeviation	maxDeviation
	m	(Lbje;Lfk;)I	a	getLight
		p	1	world	world
		p	2	pos	pos
	m	(Lbje;Lfk;Lcyo;Lcoj;)Z	a	render
		p	1	world	world
		p	2	pos	pos
		p	3	vertexConsumer	vertexConsumer
		p	4	state	state
	m	(Lbjg;Lfk;Lcoi;)F	a	getNorthWestCornerFluidHeight
		p	1	world	world
		p	2	pos	pos
		p	3	fluid	fluid
c	drm	net/minecraft/client/render/block/BlockModelRenderer
	f	Ldcb;	a	colorMap
	f	Ljava/lang/ThreadLocal;	b	brightnessCache
	m	(Lbje;Lbyj;Lfk;IIZLcyl;Lcyo;Ljava/util/List;Ljava/util/BitSet;)V	a	renderQuadsFlat
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	light	light
		p	5	overlay	overlay
		p	6	useWorldLight	useWorldLight
		p	7	matrix	matrix
		p	8	vertexConsumer	vertexConsumer
		p	9	quads	quads
		p	10	flags	flags
	m	(Lbje;Lbyj;Lfk;Lcyl;Lcyo;Ljava/util/List;[FLjava/util/BitSet;Ldrm$b;I)V	a	renderQuadsSmooth
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	matrix	matrix
		p	5	vertexConsumer	vertexConsumer
		p	6	quads	quads
		p	7	box	box
		p	8	flags	flags
		p	9	ambientOcclusionCalculator	ambientOcclusionCalculator
		p	10	overlay	overlay
	m	(Lbje;Lebv;Lbyj;Lfk;Lcyl;Lcyo;ZLjava/util/Random;JI)Z	a	render
		p	1	view	view
		p	2	model	model
		p	3	state	state
		p	4	pos	pos
		p	5	matrix	matrix
		p	6	vertexConsumer	vertexConsumer
		p	7	cull	cull
		p	8	random	random
		p	9	seed	seed
		p	11	overlay	overlay
	m	(Lbje;Lbyj;Lfk;[ILfp;[FLjava/util/BitSet;)V	a	getQuadDimensions
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	vertexData	vertexData
		p	5	face	face
		p	6	box	box
		p	7	flags	flags
	m	(Lcyl$a;Lcyo;FFFLjava/util/List;II)V	a	renderQuad
	m	(Lbje;Lbyj;Lfk;Lcyo;Lcyl$a;Ldrn;FFFFIIIII)V	a	renderQuad
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	vertexConsumer	vertexConsumer
		p	5	matrixEntry	matrixEntry
		p	6	quad	quad
		p	7	brightness0	brightness0
		p	8	brightness1	brightness1
		p	9	brightness2	brightness2
		p	10	brightness3	brightness3
		p	11	light0	light0
		p	12	light1	light1
		p	13	light2	light2
		p	14	light3	light3
		p	15	overlay	overlay
	m	(Lcyl$a;Lcyo;Lbyj;Lebv;FFFII)V	a	render
	m	()V	a	enableBrightnessCache
	m	(Lbje;Lebv;Lbyj;Lfk;Lcyl;Lcyo;ZLjava/util/Random;JI)Z	b	renderSmooth
		p	1	world	world
		p	2	model	model
		p	3	state	state
		p	4	pos	pos
		p	5	buffer	buffer
		p	6	vertexConsumer	vertexConsumer
		p	7	cull	cull
		p	8	random	random
		p	9	seed	seed
		p	11	overlay	overlay
	m	()V	b	disableBrightnessCache
	m	(Lbje;Lebv;Lbyj;Lfk;Lcyl;Lcyo;ZLjava/util/Random;JI)Z	c	renderFlat
		p	1	view	view
		p	2	model	model
		p	3	state	state
		p	4	pos	pos
		p	5	buffer	buffer
		p	6	vertexConsumer	vertexConsumer
		p	7	cull	cull
		p	8	random	random
c	drm$a	net/minecraft/client/render/block/BlockModelRenderer$NeighborData
	f	[Lfp;	g	faces
	f	Z	h	nonCubicWeight
	m	(Lfp;)Ldrm$a;	a	getData
c	drm$b	net/minecraft/client/render/block/BlockModelRenderer$AmbientOcclusionCalculator
	f	[F	b	brightness
	f	[I	c	light
	m	(IIII)I	a	getAmbientOcclusionBrightness
	m	(Lbje;Lbyj;Lfk;Lfp;[FLjava/util/BitSet;)V	a	apply
		p	1	world	world
		p	2	state	state
		p	3	pos	pos
		p	4	direction	direction
		p	5	box	box
		p	6	flags	flags
	m	(IIIIFFFF)I	a	getBrightness
c	drm$c	net/minecraft/client/render/block/BlockModelRenderer$Translation
	f	I	g	firstCorner
	f	I	h	secondCorner
	f	I	i	thirdCorner
	f	I	j	fourthCorner
	f	[Ldrm$c;	k	VALUES
	m	(Lfp;)Ldrm$c;	a	getTranslations
c	drm$d	net/minecraft/client/render/block/BlockModelRenderer$BrightnessCache
	f	Z	a	enabled
	f	Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap;	b	intCache
	f	Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	c	floatCache
	m	(Lbyj;Lbje;Lfk;)I	a	getInt
		p	3	pos	pos
	m	()V	a	enable
	m	(Lbyj;Lbje;Lfk;)F	b	getFloat
		p	1	state	state
		p	2	blockView	blockView
		p	3	pos	pos
	m	()V	b	disable
c	drm$e	net/minecraft/client/render/block/BlockModelRenderer$NeighborOrientation
	f	I	m	shape
c	drn	net/minecraft/client/render/model/BakedQuad
	f	[I	a	vertexData
	f	I	b	colorIndex
	f	Lfp;	c	face
	f	Leaj;	d	sprite
	m	([IILfp;Leaj;)V	<init>	<init>
		p	1	vertexData	vertexData
		p	2	colorIndex	colorIndex
		p	3	face	face
		p	4	sprite	sprite
	m	()[I	b	getVertexData
	m	()Z	c	hasColor
	m	()I	d	getColorIndex
	m	()Lfp;	e	getFace
c	dro	net/minecraft/client/render/model/json/ModelElement
	f	Le;	a	from
	f	Le;	b	to
	f	Ljava/util/Map;	c	faces
	f	Ldrq;	d	rotation
	f	Z	e	shade
	m	(Le;Le;Ljava/util/Map;Ldrq;Z)V	<init>	<init>
		p	1	from	from
		p	2	to	to
		p	3	faces	faces
		p	4	rotation	rotation
		p	5	shade	shade
	m	()V	a	initTextures
	m	(Lfp;)[F	a	getRotatedMatrix
		p	1	direction	direction
c	dro$a	net/minecraft/client/render/model/json/ModelElement$Deserializer
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Le;	a	deserializeVec3f
		p	1	object	object
		p	2	name	name
	m	(Ljava/lang/String;)Lfp;	a	getDirection
		p	1	name	name
	m	(Lcom/google/gson/JsonObject;)Ldrq;	a	deserializeRotation
		p	1	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map;	a	deserializeFacesValidating
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldro;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)F	b	deserializeRotationAngle
		p	1	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map;	b	deserializeFaces
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonObject;)Lfp$a;	c	deserializeAxis
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Le;	d	deserializeTo
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)Le;	e	deserializeFrom
		p	1	object	object
c	drp	net/minecraft/client/render/model/json/ModelElementFace
	f	Lfp;	a	cullFace
	f	I	b	tintIndex
	f	Ljava/lang/String;	c	textureId
	f	Ldrr;	d	textureData
	m	(Lfp;ILjava/lang/String;Ldrr;)V	<init>	<init>
		p	1	cullFace	cullFace
		p	2	tintIndex	tintIndex
		p	3	textureId	textureId
		p	4	textureData	textureData
c	drp$a	net/minecraft/client/render/model/json/ModelElementFace$Deserializer
	m	(Lcom/google/gson/JsonObject;)I	a	deserializeTintIndex
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrp;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	deserializeTexture
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Lfp;	c	deserializeCullFace
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	drq	net/minecraft/client/render/model/json/ModelRotation
	f	Le;	a	origin
	f	Lfp$a;	b	axis
	f	F	c	angle
	f	Z	d	rescale
	m	(Le;Lfp$a;FZ)V	<init>	<init>
		p	1	origin	origin
		p	2	axis	axis
		p	3	angle	angle
		p	4	rescale	rescale
c	drr	net/minecraft/client/render/model/json/ModelElementTexture
	f	[F	a	uvs
	f	I	b	rotation
	m	([FI)V	<init>	<init>
		p	1	uvs	uvs
		p	2	rotation	rotation
	m	([F)V	a	setUvs
		p	1	uvs	uvs
	m	(I)F	a	getU
		p	1	rotation	rotation
	m	(I)F	b	getV
		p	1	rotation	rotation
	m	(I)I	c	getDirectionIndex
		p	1	offset	offset
	m	(I)I	d	getRotatedUVIndex
		p	1	rotation	rotation
c	drr$a	net/minecraft/client/render/model/json/ModelElementTexture$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrr;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)I	a	deserializeRotation
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)[F	b	deserializeUVs
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	drs	net/minecraft/client/render/model/json/JsonUnbakedModel
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/String;	b	id
	f	Ljava/util/Map;	c	textureMap
	f	Ldrs;	d	parent
	f	Lsm;	e	parentId
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	f	Ldru;	g	QUAD_FACTORY
	f	Ljava/util/List;	h	elements
	f	Ldrs$b;	i	guiLight
	f	Z	j	ambientOcclusion
	f	Ldrz;	k	transformations
	f	Ljava/util/List;	l	overrides
	m	(Lsm;Ljava/util/List;Ljava/util/Map;ZLdrs$b;Ldrz;Ljava/util/List;)V	<init>	<init>
		p	1	parentId	parentId
		p	2	elements	elements
		p	3	textureMap	textureMap
		p	4	ambientOcclusion	ambientOcclusion
		p	5	guiLight	guiLight
		p	6	transformations	transformations
		p	7	overrides	overrides
	m	(Ljava/lang/String;)Ldrs;	a	deserialize
		p	0	json	json
	m	(Lebz;Ldrs;Ljava/util/function/Function;Lecc;Lsm;Z)Lebv;	a	bake
		p	1	loader	loader
		p	2	parent	parent
		p	3	textureGetter	textureGetter
		p	4	settings	settings
		p	5	id	id
		p	6	hasDepth	hasDepth
	m	(Ldrz$b;)Ldry;	a	getTransformation
		p	1	renderMode	renderMode
	m	(Lebz;Ldrs;)Ldrx;	a	compileOverrides
		p	1	modelLoader	modelLoader
		p	2	parent	parent
	m	()Ljava/util/List;	a	getElements
	m	(Ldro;Ldrp;Leaj;Lfp;Lecc;Lsm;)Ldrn;	a	createQuad
		p	0	element	element
		p	1	elementFace	elementFace
		p	2	sprite	sprite
		p	3	side	side
		p	4	settings	settings
		p	5	id	id
	m	(Ljava/io/Reader;)Ldrs;	a	deserialize
		p	0	input	input
	m	(Ljava/lang/String;)Z	b	textureExists
		p	1	name	name
	m	()Z	b	useAmbientOcclusion
	m	()Ldrs$b;	c	getGuiLight
	m	(Ljava/lang/String;)Leby;	c	resolveSprite
		p	1	spriteName	spriteName
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Either;	e	resolveTexture
		p	1	name	name
	m	()Ljava/util/List;	e	getOverrides
	m	(Ljava/lang/String;)Z	f	isTextureReference
		p	0	reference	reference
	m	()Ldrs;	g	getRootModel
	m	()Ldrz;	h	getTransformations
c	drs$a	net/minecraft/client/render/model/json/JsonUnbakedModel$Deserializer
	m	(Lcom/google/gson/JsonObject;)Z	a	deserializeAmbientOcclusion
		p	1	json	json
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List;	a	deserializeOverrides
		p	1	context	context
		p	2	object	object
	m	(Lsm;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either;	a	resolveReference
		p	0	id	id
		p	1	name	name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrs;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	b	deserializeTextures
		p	1	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List;	b	deserializeElements
		p	1	context	context
		p	2	json	json
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	c	deserializeParent
		p	1	json	json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	element	element
		p	2	unused	unused
		p	3	ctx	ctx
c	drs$b	net/minecraft/client/render/model/json/JsonUnbakedModel$GuiLight
	f	Ldrs$b;	a	field_21858
		c	The model will be shaded from the front, like a basic item
	f	Ldrs$b;	b	field_21859
		c	The model will be shaded from the side, like a block.
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Z	a	isSide
	m	(Ljava/lang/String;)Ldrs$b;	a	deserialize
		p	0	value	value
c	drt	net/minecraft/client/render/model/json/ModelVariantMap
	f	Ljava/util/Map;	a	variantMap
	f	Ldsf;	b	multipartModel
	m	(Ljava/util/Map;Ldsf;)V	<init>	<init>
		p	1	variantMap	variantMap
		p	2	multipartModel	multipartModel
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	variantMapList	variantMapList
	m	()Ljava/util/Map;	a	getVariantMap
	m	(Ldrt$a;Ljava/io/Reader;)Ldrt;	a	deserialize
		p	0	context	context
		p	1	reader	reader
	m	()Z	c	hasMultipartModel
	m	()Ldsf;	d	getMultipartModel
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	drt$a	net/minecraft/client/render/model/json/ModelVariantMap$DeserializationContext
	f	Lcom/google/gson/Gson;	a	gson
	f	Lbyk;	b	stateFactory
	m	(Lbyk;)V	a	setStateFactory
		p	1	stateFactory	stateFactory
	m	()Lbyk;	a	getStateFactory
c	drt$b	net/minecraft/client/render/model/json/ModelVariantMap$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrt;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map;	a	deserializeVariants
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ldsf;	b	deserializeMultipart
		p	1	context	context
		p	2	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	dru	net/minecraft/client/render/model/BakedQuadFactory
	f	F	a	MIN_SCALE
	f	F	b	MAX_SCALE
	m	(Le;Le;)[F	a	getPositionMatrix
		p	1	from	from
		p	2	to	to
	m	(Le;Ldrq;)V	a	rotateVertex
		p	1	vector	vector
		p	2	rotation	rotation
	m	(Le;Ld;)V	a	transformVertex
		p	1	vertex	vertex
		p	2	transformation	transformation
	m	(Ldrr;Lfp;Ld;Lsm;)Ldrr;	a	uvLock
		p	0	texture	texture
		p	1	orientation	orientation
		p	2	rotation	rotation
		p	3	modelId	modelId
	m	(Le;Le;Ldrp;Leaj;Lfp;Lecc;Ldrq;ZLsm;)Ldrn;	a	bake
		p	1	from	from
		p	2	to	to
		p	3	face	face
		p	4	texture	texture
		p	5	side	side
		p	6	settings	settings
		p	7	rotation	rotation
		p	8	shade	shade
		p	9	modelId	modelId
	m	(Ldrr;Leaj;Lfp;[FLd;Ldrq;Z)[I	a	packVertexData
		p	1	texture	texture
		p	2	sprite	sprite
		p	3	direction	direction
		p	4	positionMatrix	positionMatrix
		p	5	orientation	orientation
		p	6	rotation	rotation
		p	7	shaded	shaded
	m	(Le;Le;Lb;Le;)V	a	transformVertex
		p	1	vertex	vertex
		p	2	origin	origin
		p	3	transformationMatrix	transformationMatrix
		p	4	scale	scale
	m	(Lfp;)I	a	getLightmapCoordinate
		p	1	direction	direction
	m	([IILfp;Ldrr;[FLeaj;Ld;Ldrq;Z)V	a	packVertexData
		p	1	vertices	vertices
		p	2	cornerIndex	cornerIndex
		p	3	direction	direction
		p	4	texture	texture
		p	5	positionMatrix	positionMatrix
		p	6	sprite	sprite
		p	7	orientation	orientation
		p	8	rotation	rotation
		p	9	shaded	shaded
	m	([IILe;ILeaj;Ldrr;)V	a	packVertexData
		p	1	vertices	vertices
		p	2	cornerIndex	cornerIndex
		p	3	position	position
		p	4	brightness	brightness
		p	5	sprite	sprite
		p	6	texture	texture
	m	([I)Lfp;	a	decodeDirection
		p	0	rotationMatrix	rotationMatrix
	m	([ILfp;)V	a	encodeDirection
		p	1	rotationMatrix	rotationMatrix
		p	2	direction	direction
	m	(Lfp;)F	b	getRelativeDirectionalBrightness
		p	1	direction	direction
c	drv	net/minecraft/client/render/model/json/ItemModelGenerator
	f	Ljava/util/List;	a	LAYERS
	m	(Ljava/util/function/Function;Ldrs;)Ldrs;	a	create
		p	1	textureGetter	textureGetter
		p	2	blockModel	blockModel
	m	(Leaj;)Ljava/util/List;	a	getFrames
		p	1	sprite	sprite
	m	(Leaj;IIIII)Z	a	isPixelTransparent
		p	1	sprite	sprite
		p	2	frame	frame
		p	3	x	x
		p	4	y	y
	m	(Ldrv$b;Ljava/util/List;Leaj;IIIIIZ)V	a	buildCube
		p	2	cubes	cubes
		p	3	sprite	sprite
		p	4	frame	frame
		p	5	x	x
		p	6	y	y
	m	(Leaj;Ljava/lang/String;I)Ljava/util/List;	a	addSubComponents
		p	1	sprite	sprite
		p	2	key	key
		p	3	layer	layer
	m	(Ljava/util/List;Ldrv$b;II)V	a	buildCube
		p	1	cubes	cubes
		p	3	x	x
		p	4	y	y
	m	(ILjava/lang/String;Leaj;)Ljava/util/List;	a	addLayerElements
		p	1	layer	layer
		p	2	key	key
		p	3	sprite	sprite
c	drv$a	net/minecraft/client/render/model/json/ItemModelGenerator$Frame
	f	Ldrv$b;	a	side
	f	I	b	min
	f	I	c	max
	f	I	d	level
	m	(Ldrv$b;II)V	<init>	<init>
		p	2	width	width
		p	3	depth	depth
	m	()Ldrv$b;	a	getSide
	m	(I)V	a	expand
		p	1	newValue	newValue
	m	()I	b	getMin
	m	()I	c	getMax
	m	()I	d	getLevel
c	drv$b	net/minecraft/client/render/model/json/ItemModelGenerator$Side
	f	Lfp;	e	direction
	f	I	f	offsetX
	f	I	g	offsetY
	m	(Ljava/lang/String;ILfp;II)V	<init>	<init>
		p	3	direction	direction
		p	4	offsetX	offsetX
		p	5	offsetY	offsetY
	m	()Lfp;	a	getDirection
	m	()I	b	getOffsetX
	m	()I	c	getOffsetY
	m	()Z	d	isVertical
c	drw	net/minecraft/client/render/model/json/ModelItemOverride
	f	Lsm;	a	modelId
	f	Ljava/util/Map;	b	minPropertyValues
	m	(Lsm;Ljava/util/Map;)V	<init>	<init>
		p	1	modelId	modelId
		p	2	minPropertyValues	minPropertyValues
	m	(Lben;Lbjw;Lakz;)Z	a	matches
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
	m	()Lsm;	a	getModelId
c	drw$a	net/minecraft/client/render/model/json/ModelItemOverride$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrw;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	a	deserializeMinPropertyValues
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	drx	net/minecraft/client/render/model/json/ModelItemPropertyOverrideList
	f	Ldrx;	a	EMPTY
	f	Ljava/util/List;	b	overrides
	f	Ljava/util/List;	c	models
	m	(Lebz;Ldrs;Ljava/util/function/Function;Ljava/util/List;)V	<init>	<init>
		p	1	modelLoader	modelLoader
		p	2	unbakedModel	unbakedModel
		p	3	unbakedModelGetter	unbakedModelGetter
		p	4	overrides	overrides
	m	(Lebv;Lben;Lbjw;Lakz;)Lebv;	a	apply
		p	1	model	model
		p	2	stack	stack
		p	3	world	world
		p	4	entity	entity
c	dry	net/minecraft/client/render/model/json/Transformation
	f	Ldry;	a	IDENTITY
	f	Le;	b	rotation
	f	Le;	c	translation
	f	Le;	d	scale
	m	(Le;Le;Le;)V	<init>	<init>
		p	1	rotation	rotation
		p	2	translation	translation
		p	3	scale	scale
	m	(ZLcyl;)V	a	apply
		p	1	leftHanded	leftHanded
		p	2	matrices	matrices
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dry$a	net/minecraft/client/render/model/json/Transformation$Deserializer
	f	Le;	a	DEFAULT_ROATATION
	f	Le;	b	DEFAULT_TRANSLATION
	f	Le;	c	DEFAULT_SCALE
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Le;)Le;	a	parseVector3f
		p	1	json	json
		p	2	key	key
		p	3	fallback	fallback
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldry;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	drz	net/minecraft/client/render/model/json/ModelTransformation
	f	Ldrz;	a	NONE
	f	Ldry;	b	thirdPersonLeftHand
	f	Ldry;	c	thirdPersonRightHand
	f	Ldry;	d	firstPersonLeftHand
	f	Ldry;	e	firstPersonRightHand
	f	Ldry;	f	head
	f	Ldry;	g	gui
	f	Ldry;	h	ground
	f	Ldry;	i	fixed
	m	(Ldry;Ldry;Ldry;Ldry;Ldry;Ldry;Ldry;Ldry;)V	<init>	<init>
		p	1	thirdPersonLeftHand	thirdPersonLeftHand
		p	2	thirdPersonRightHand	thirdPersonRightHand
		p	3	firstPersonLeftHand	firstPersonLeftHand
		p	4	firstPersonRightHand	firstPersonRightHand
		p	5	head	head
		p	6	gui	gui
		p	7	ground	ground
		p	8	fixed	fixed
	m	(Ldrz;)V	<init>	<init>
		p	1	other	other
	m	(Ldrz$b;)Ldry;	a	getTransformation
		p	1	renderMode	renderMode
	m	(Ldrz$b;)Z	b	isTransformationDefined
		p	1	renderMode	renderMode
c	drz$a	net/minecraft/client/render/model/json/ModelTransformation$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrz;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ldry;	a	parseModelTransformation
		p	1	ctx	ctx
		p	2	json	json
		p	3	key	key
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	drz$b	net/minecraft/client/render/model/json/ModelTransformation$Mode
c	ds	net/minecraft/command/arguments/BlockStateArgument
	f	Lbyj;	a	state
	f	Ljava/util/Set;	b	properties
	f	Ljt;	c	data
	m	(Lbyj;Ljava/util/Set;Ljt;)V	<init>	<init>
		p	1	state	state
		p	2	properties	properties
		p	3	data	data
	m	()Lbyj;	a	getBlockState
	m	(Lbyn;)Z	a	test
	m	(Lxd;Lfk;I)Z	a	setBlockState
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	dsa	net/minecraft/client/render/model/json/WeightedUnbakedModel
	f	Ljava/util/List;	a	variants
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	variants	variants
	m	()Ljava/util/List;	a	getVariants
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dsa$a	net/minecraft/client/render/model/json/WeightedUnbakedModel$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldsa;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	dsb	net/minecraft/client/render/model/json/ModelVariant
	f	Lsm;	a	location
	f	Ld;	b	rotation
	f	Z	c	uvLock
	f	I	d	weight
	m	(Lsm;Ld;ZI)V	<init>	<init>
		p	1	location	location
		p	3	uvLock	uvLock
		p	4	weight	weight
	m	()Lsm;	a	getLocation
	m	()I	d	getWeight
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dsb$a	net/minecraft/client/render/model/json/ModelVariant$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldsb;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Lebw;	a	deserializeRotation
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Lsm;	b	deserializeModel
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)I	c	deserializeWeight
		p	1	object	object
	m	(Lcom/google/gson/JsonObject;)Z	d	deserializeUvLock
		p	1	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	dsc	net/minecraft/client/render/model/json/AndMultipartModelSelector
	f	Ljava/lang/Iterable;	c	selectors
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1	selectors	selectors
	m	(Lbyk;)Ljava/util/function/Predicate;	getPredicate	getPredicate
		p	1	stateFactory	stateFactory
c	dsd	net/minecraft/client/render/model/json/MultipartModelSelector
	f	Ldsd;	a	TRUE
	f	Ldsd;	b	FALSE
	m	(Lbyk;)Ljava/util/function/Predicate;	getPredicate	getPredicate
		p	1	stateFactory	stateFactory
c	dse	net/minecraft/client/render/model/json/SimpleMultipartModelSelector
	f	Lcom/google/common/base/Splitter;	c	VALUE_SPLITTER
	f	Ljava/lang/String;	d	key
	f	Ljava/lang/String;	e	valueString
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
		p	2	valueString	valueString
	m	(Lbyk;Lbzm;Ljava/lang/String;)Ljava/util/function/Predicate;	a	createPredicate
		p	1	stateFactory	stateFactory
		p	2	property	property
		p	3	valueString	valueString
	m	(Lbyk;)Ljava/util/function/Predicate;	getPredicate	getPredicate
		p	1	stateFactory	stateFactory
c	dsf	net/minecraft/client/render/model/MultipartUnbakedModel
	f	Lbyk;	a	stateFactory
	f	Ljava/util/List;	b	components
	m	(Lbyk;Ljava/util/List;)V	<init>	<init>
		p	1	stateFactory	stateFactory
		p	2	components	components
	m	()Ljava/util/List;	a	getComponents
	m	()Ljava/util/Set;	b	getModels
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dsf$a	net/minecraft/client/render/model/MultipartUnbakedModel$Deserializer
	f	Ldrt$a;	a	context
	m	(Ldrt$a;)V	<init>	<init>
		p	1	context	context
	m	(Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List;	a	deserializeComponents
		p	1	context	context
		p	2	array	array
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldsf;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
c	dsg	net/minecraft/client/render/model/json/OrMultipartModelSelector
	f	Ljava/lang/Iterable;	c	selectors
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1	selectors	selectors
	m	(Lbyk;)Ljava/util/function/Predicate;	getPredicate	getPredicate
		p	1	stateFactory	stateFactory
c	dsh	net/minecraft/client/render/model/json/MultipartModelComponent
	f	Ldsd;	a	selector
	f	Ldsa;	b	model
	m	(Ldsd;Ldsa;)V	<init>	<init>
		p	1	selector	selector
		p	2	model	model
	m	()Ldsa;	a	getModel
	m	(Lbyk;)Ljava/util/function/Predicate;	a	getPredicate
		p	1	stateFactory	stateFactory
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	dsh$a	net/minecraft/client/render/model/json/MultipartModelComponent$Deserializer
	m	(Ljava/util/Map$Entry;)Ldsd;	a	createStatePropertySelector
		p	0	entry	entry
	m	(Lcom/google/gson/JsonObject;)Ldsd;	a	deserializeSelector
		p	0	object	object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldsh;	a	deserialize
		p	1	element	element
		p	2	type	type
		p	3	context	context
	m	(Lcom/google/gson/JsonObject;)Ldsd;	b	deserializeSelectorOrDefault
		p	1	object	object
c	dsm	net/minecraft/client/render/block/entity/BannerBlockEntityRenderer
	f	Ldni;	a	field
	f	Ldni;	c	verticalBar
	f	Ldni;	d	topBar
	m	(Ldsq;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lbwc;FLcyl;Ldqt;II)V	a	render
	m	()Ldni;	a	createField
c	dsn	net/minecraft/client/render/block/entity/BeaconBlockEntityRenderer
	f	Lsm;	a	BEAM_TEX
	m	(Lbwg;FLcyl;Ldqt;II)V	a	render
	m	(Lcyl;Ldqt;Lsm;FFJII[FFF)V	a	renderLightBeam
	m	(Lbwg;)Z	a	rendersOutsideBoundingBox
	m	(Lcyl;Ldqt;FJII[F)V	a	render
c	dso	net/minecraft/client/render/block/entity/BedBlockEntityRenderer
	m	(Lbwh;FLcyl;Ldqt;II)V	a	render
	m	(Lcyl;Ldqt;ZLfp;Leby;IIZ)V	a	method_3558
		p	1	matrix	matrix
		p	6	light	light
		p	7	overlay	overlay
c	dsp	net/minecraft/client/render/block/entity/BellBlockEntityRenderer
	f	Leby;	a	BELL_BODY_TEXTURE
	m	(Lbwj;FLcyl;Ldqt;II)V	a	render
c	dsq	net/minecraft/client/render/block/entity/BlockEntityRenderDispatcher
	f	Ldsq;	a	INSTANCE
	f	Leak;	b	textureManager
	f	Lbjw;	c	world
	f	Ldbb;	d	camera
	f	Lcvi;	e	crosshairTarget
	f	Ljava/util/Map;	f	renderers
	f	Lcyg;	g	bufferBuilder
	f	Ldch;	h	textRenderer
	m	(Lbjw;)V	a	setWorld
	m	(Lbjw;Leak;Ldch;Ldbb;Lcvi;)V	a	configure
		p	1	world	world
		p	2	textureManager	textureManager
		p	3	textRenderer	textRenderer
		p	4	camera	camera
		p	5	crosshairTarget	crosshairTarget
	m	(Lbwl;Ljava/lang/Runnable;)V	a	runReported
	m	(Ldsr;Lbwl;FLcyl;Ldqt;)V	a	render
		p	0	renderer	renderer
		p	1	blockEntity	blockEntity
		p	2	tickDelta	tickDelta
		p	3	matrices	matrices
		p	4	vertexConsumers	vertexConsumers
	m	(Lbwl;Lcyl;Ldqt;II)Z	a	renderEntity
		p	1	entity	entity
		p	2	matrix	matrix
		p	3	vertexConsumerProvider	vertexConsumerProvider
		p	4	light	light
		p	5	overlay	overlay
	m	(Lbwl;FLcyl;Ldqt;)V	a	render
		p	1	blockEntity	blockEntity
		p	2	tickDelta	tickDelta
		p	3	matrix	matrix
	m	()Ldch;	a	getTextRenderer
	m	(Lbwl;)Ldsr;	a	get
	m	(Lbwm;Ldsr;)V	a	register
c	dsr	net/minecraft/client/render/block/entity/BlockEntityRenderer
	f	Ldsq;	b	dispatcher
	m	(Ldsq;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lbwl;)Z	a	rendersOutsideBoundingBox
		p	1	blockEntity	blockEntity
	m	(Lbwl;FLcyl;Ldqt;II)V	a	render
		p	1	blockEntity	blockEntity
		p	2	tickDelta	tickDelta
		p	3	matrices	matrices
		p	4	vertexConsumers	vertexConsumers
		p	5	light	light
		p	6	overlay	overlay
c	dss	net/minecraft/client/render/block/entity/LightmapCoordinatesRetriever
	m	(Lbwl;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	a	getFrom
	m	()Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	a	getFallback
	m	(Lbwl;Lbwl;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	a	getFromBoth
c	dst	net/minecraft/client/render/block/entity/CampfireBlockEntityRenderer
	m	(Lbwo;FLcyl;Ldqt;II)V	a	render
c	dsu	net/minecraft/client/render/block/entity/ChestBlockEntityRenderer
	f	Z	k	isChristmas
c	dsv	net/minecraft/client/render/block/entity/ConduitBlockEntityRenderer
	f	Leby;	a	BASE_TEX
	f	Leby;	c	CAGE_TEX
	f	Leby;	d	WIND_TEX
	f	Leby;	e	WIND_VERTICAL_TEX
	f	Leby;	f	OPEN_EYE_TEX
	f	Leby;	g	CLOSED_EYE_TEX
	m	(Lbws;FLcyl;Ldqt;II)V	a	render
c	dsw	net/minecraft/client/render/block/entity/EnchantingTableBlockEntityRenderer
	f	Leby;	a	BOOK_TEX
	f	Ldkm;	c	book
	m	(Lbww;FLcyl;Ldqt;II)V	a	render
c	dsx	net/minecraft/client/render/block/entity/LecternBlockEntityRenderer
	f	Ldkm;	a	book
	m	(Lbxd;FLcyl;Ldqt;II)V	a	render
c	dsy	net/minecraft/client/render/block/entity/PistonBlockEntityRenderer
	f	Ldrk;	a	manager
	m	(Lbyf;FLcyl;Ldqt;II)V	a	render
c	dsz	net/minecraft/client/render/block/entity/ShulkerBoxBlockEntityRenderer
	f	Ldmm;	a	model
	m	(Lbxg;FLcyl;Ldqt;II)V	a	render
c	dt	net/minecraft/command/arguments/BlockPredicateArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_TAG_EXCEPTION
	m	(Lcom/mojang/brigadier/StringReader;)Ldt$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
		p	0	context	context
		p	1	name	name
	m	()Ldt;	a	blockPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dt$a	net/minecraft/command/arguments/BlockPredicateArgumentType$StatePredicate
	f	Lbyj;	a	state
	f	Ljava/util/Set;	b	properties
	f	Ljt;	c	nbt
	m	(Lbyj;Ljava/util/Set;Ljt;)V	<init>	<init>
		p	1	state	state
		p	2	properties	properties
		p	3	nbt	nbt
	m	(Lbyn;)Z	a	test
		p	1	pos	pos
c	dt$b	net/minecraft/command/arguments/BlockPredicateArgumentType$BlockPredicate
c	dt$c	net/minecraft/command/arguments/BlockPredicateArgumentType$TagPredicate
	f	Laaz;	a	tag
	f	Ljt;	b	nbt
	f	Ljava/util/Map;	c	properties
	m	(Laaz;Ljava/util/Map;Ljt;)V	<init>	<init>
		p	3	nbt	nbt
	m	(Lbyn;)Z	a	test
c	dta	net/minecraft/client/render/block/entity/SignBlockEntityRenderer
	f	Ldta$a;	a	model
	m	(Lbph;)Leby;	a	getModelTexture
	m	(Lbxh;FLcyl;Ldqt;II)V	a	render
c	dta$a	net/minecraft/client/render/block/entity/SignBlockEntityRenderer$SignModel
	f	Ldni;	a	field
	f	Ldni;	b	foot
c	dtb	net/minecraft/client/render/block/entity/SkullBlockEntityRenderer
	f	Ljava/util/Map;	a	MODELS
	f	Ljava/util/Map;	c	TEXTURES
	m	(Lbxi;FLcyl;Ldqt;II)V	a	render
	m	(Lfp;FLbue$a;Lcom/mojang/authlib/GameProfile;FLcyl;Ldqt;I)V	a	render
c	dtc	net/minecraft/client/render/block/entity/MobSpawnerBlockEntityRenderer
	m	(Lbxk;FLcyl;Ldqt;II)V	a	render
c	dtd	net/minecraft/client/render/block/entity/StructureBlockBlockEntityRenderer
	m	(Lbxl;)Z	a	rendersOutsideBoundingBox
	m	(Lbxl;FLcyl;Ldqt;II)V	a	render
c	dte	net/minecraft/client/render/block/entity/EndGatewayBlockEntityRenderer
	f	Lsm;	d	BEAM_TEXTURE
	m	(Lbxm;FLcyl;Ldqt;II)V	a	render
c	dtf	net/minecraft/client/render/block/entity/EndPortalBlockEntityRenderer
	f	Lsm;	a	SKY_TEX
	f	Lsm;	c	PORTAL_TEX
	f	Ljava/util/Random;	d	RANDOM
	m	(Lbxn;FLcyl;Ldqt;II)V	a	render
c	dth	net/minecraft/client/render/chunk/ChunkBuilder
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/PriorityQueue;	b	rebuildQueue
	f	Ljava/util/Queue;	c	threadBuffers
	f	Ljava/util/Queue;	d	uploadQueue
	f	I	e	queuedTaskCount
	f	I	f	bufferCount
	f	Ldqi;	g	buffers
	f	Laiv;	h	mailbox
	f	Ljava/util/concurrent/Executor;	i	executor
	f	Lbjw;	j	world
	f	Ldqr;	k	worldRenderer
	f	Lcvl;	l	cameraPosition
	m	(Lbjw;Ldqr;Ljava/util/concurrent/Executor;ZLdqi;)V	<init>	<init>
		p	1	world	world
		p	2	worldRenderer	worldRenderer
		p	3	executor	executor
		p	4	is64Bits	is64Bits
		p	5	buffers	buffers
	m	(Lbjw;)V	a	setWorld
		p	1	world	world
	m	(Ldth$c$a;)V	a	send
		p	1	task	task
	m	(Lcvl;)V	a	setCameraPosition
		p	1	cameraPosition	cameraPosition
	m	(Lcyg;Lcyn;)Ljava/util/concurrent/CompletableFuture;	a	scheduleUpload
		p	1	buffer	buffer
		p	2	glBuffer	glBuffer
	m	(Ldth$c;)V	a	rebuild
		p	1	chunk	chunk
	m	(Lcyg;Lcyn;)Ljava/util/concurrent/CompletableFuture;	b	upload
		p	1	buffer	buffer
		p	2	glBuffer	glBuffer
	m	()Ljava/lang/String;	b	getDebugString
	m	()Lcvl;	c	getCameraPosition
	m	()Z	d	upload
	m	()V	e	reset
	m	()Z	f	isEmpty
	m	()V	g	stop
	m	()V	h	scheduleRunTasks
	m	()V	i	clear
c	dth$a	net/minecraft/client/render/chunk/ChunkBuilder$Result
c	dth$b	net/minecraft/client/render/chunk/ChunkBuilder$ChunkData
	f	Ldth$b;	a	EMPTY
	f	Ljava/util/Set;	b	nonEmptyLayers
	f	Ljava/util/Set;	c	initializedLayers
	f	Z	d	empty
	f	Ljava/util/List;	e	blockEntities
	f	Ldtk;	f	occlusionGraph
	f	Lcyg$b;	g	bufferState
	m	(Ldrb;)Z	a	isEmpty
		p	1	layer	layer
	m	()Z	a	isEmpty
	m	(Lfp;Lfp;)Z	a	isVisibleThrough
	m	()Ljava/util/List;	b	getBlockEntities
c	dth$c	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	data
	f	Lcvf;	b	boundingBox
	f	Ldth$c$b;	d	rebuildTask
	f	Ldth$c$c;	e	sortTask
	f	Ljava/util/Set;	f	blockEntities
	f	Ljava/util/Map;	g	buffers
	f	I	h	rebuildFrame
	f	Z	i	needsRebuild
	f	Lfk$a;	j	origin
	f	[Lfk$a;	k	neighborPositions
	f	Z	l	needsImportantRebuild
	m	(I)Z	a	setRebuildFrame
		p	1	frame	frame
	m	(III)V	a	setOrigin
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ldrb;)Lcyn;	a	getBuffer
		p	1	layer	layer
	m	()Z	a	shouldBuild
	m	(Ldth;)V	a	scheduleRebuild
		p	1	chunkRenderer	chunkRenderer
	m	(Lcyg;)V	a	beginBufferBuilding
		p	1	buffer	buffer
	m	(Lfp;)Lfk;	a	getNeighborPosition
		p	1	direction	direction
	m	(Ldrb;Ldth;)Z	a	scheduleSort
		p	1	layer	layer
		p	2	chunkRenderer	chunkRenderer
	m	(Lfk;)Z	a	isChunkNonEmpty
		p	1	pos	pos
	m	(Ljava/util/Set;)V	a	setNoCullingBlockEntities
		p	1	noCullingBlockEntities	noCullingBlockEntities
	m	(Z)V	a	scheduleRebuild
		p	1	important	important
	m	()D	b	getSquaredCameraDistance
	m	()Ldth$b;	c	getData
	m	()V	d	delete
	m	()Lfk;	e	getOrigin
	m	()V	f	cancelRebuild
	m	()Z	g	needsRebuild
	m	()Z	h	needsImportantRebuild
	m	()V	i	cancel
	m	()Ldth$c$a;	j	createRebuildTask
	m	()V	k	rebuild
	m	()V	l	clear
c	dth$c$a	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk$Task
	f	D	a	distance
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	cancelled
	m	(Ldqi;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1	buffers	buffers
	m	(Ldth$c$a;)I	a	compareTo
	m	()V	a	cancel
c	dth$c$b	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk$RebuildTask
	f	Ldti;	d	region
	m	(FFFLdth$b;Ldqi;)Ljava/util/Set;	a	render
		p	1	cameraX	cameraX
		p	2	cameraY	cameraY
		p	3	cameraZ	cameraZ
		p	4	data	data
		p	5	buffers	buffers
	m	(Ldth$b;Ljava/util/Set;Lbwl;)V	a	addBlockEntity
		p	1	data	data
		p	2	blockEntities	blockEntities
		p	3	blockEntity	blockEntity
c	dth$c$c	net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk$SortTask
	f	Ldth$b;	e	data
c	dti	net/minecraft/client/render/chunk/ChunkRendererRegion
	f	I	a	chunkXOffset
	f	I	b	chunkZOffset
	f	Lfk;	c	offset
	f	I	d	xSize
	f	I	e	ySize
	f	I	f	zSize
	f	[[Lcal;	g	chunks
	f	[Lbyj;	h	blockStates
	f	[Lcoj;	i	fluidStates
	f	Lbjw;	j	world
	m	(Lbjw;II[[Lcal;Lfk;Lfk;)V	<init>	<init>
		p	1	world	world
		p	2	chunkX	chunkX
		p	3	chunkZ	chunkZ
		p	4	chunks	chunks
		p	5	startPos	startPos
		p	6	endPos	endPos
	m	(Lfk;Lcal$a;)Lbwl;	a	getBlockEntity
	m	(III)I	a	getIndex
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lbjw;Lfk;Lfk;I)Ldti;	a	create
		p	0	world	world
		p	1	startPos	startPos
		p	2	endPos	endPos
		p	3	chunkRadius	chunkRadius
	m	(Lfk;)I	a	getIndex
		p	1	pos	pos
c	dtj	net/minecraft/client/render/chunk/ChunkOcclusionDataBuilder
	f	I	a	STEP_X
	f	I	b	STEP_Z
	f	I	c	STEP_Y
	f	[Lfp;	d	DIRECTIONS
	f	Ljava/util/BitSet;	e	closed
	f	[I	f	EDGE_POINTS
	f	I	g	openCount
	m	(ILfp;)I	a	offset
		p	1	pos	pos
	m	(I)Ljava/util/Set;	a	getOpenFaces
		p	1	pos	pos
	m	(ILjava/util/Set;)V	a	addEdgeFaces
		p	1	pos	pos
		p	2	openFaces	openFaces
	m	()Ldtk;	a	build
	m	(Lfk;)V	a	markClosed
		p	1	pos	pos
	m	(III)I	a	pack
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lfk;)Ljava/util/Set;	b	getOpenFaces
		p	1	pos	pos
	m	(Lfk;)I	c	pack
		p	0	pos	pos
c	dtk	net/minecraft/client/render/chunk/ChunkOcclusionData
	f	I	a	DIRECTION_COUNT
	f	Ljava/util/BitSet;	b	visibility
	m	(Ljava/util/Set;)V	a	addOpenEdgeFaces
		p	1	faces	faces
	m	(Z)V	a	fill
		p	1	visible	visible
	m	(Lfp;Lfp;Z)V	a	setVisibleThrough
		p	1	from	from
		p	2	to	to
		p	3	visible	visible
	m	(Lfp;Lfp;)Z	a	isVisibleThrough
		p	1	from	from
		p	2	to	to
c	dtm	net/minecraft/client/render/Frustum
	f	[Lf;	a	homogeneousCoordinates
	f	D	b	x
	f	D	c	y
	f	D	d	z
	m	(Lb;Lb;)V	a	init
	m	(FFFFFF)Z	a	isAnyCornerVisible
		p	1	x1	x1
		p	2	y1	y1
		p	3	z1	z1
		p	4	x2	x2
		p	5	y2	y2
		p	6	z2	z2
	m	(Lcvf;)Z	a	isVisible
		p	1	box	box
	m	(DDDDDD)Z	a	isVisible
		p	1	minX	minX
		p	3	minY	minY
		p	5	minZ	minZ
		p	7	maxX	maxX
		p	9	maxY	maxY
		p	11	maxZ	maxZ
	m	(DDD)V	a	setPosition
		p	1	cameraX	cameraX
		p	3	cameraY	cameraY
		p	5	cameraZ	cameraZ
	m	(Lb;IIII)V	a	transform
		p	1	function	function
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	index	index
c	dto	net/minecraft/client/render/debug/BeeDebugRenderer
	f	Ldbn;	a	client
	f	Ljava/util/Map;	b	hives
	f	Ljava/util/Map;	c	bees
	f	Ljava/util/UUID;	d	targetedEntity
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Lfk;FFFFF)V	a	drawBox
		p	0	pos	pos
		p	1	expand	expand
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
	m	(Ljava/util/Map;Ldto$a;Lfk;)V	a	addToMap
		p	0	map	map
		p	1	arg	arg
		p	2	pos	pos
	m	(Lfk;)V	a	drawHive
		p	0	pos	pos
	m	(Ldto$b;Ljava/util/Collection;)V	a	drawHiveInfo
		p	1	hive	hive
		p	2	blacklistingBees	blacklistingBees
	m	(Ljava/lang/String;Lfk;II)V	a	drawString
		p	0	string	string
		p	1	pos	pos
		p	2	line	line
		p	3	color	color
	m	(Ljava/lang/String;Ldto$b;II)V	a	drawString
		p	0	string	string
		p	1	hive	hive
		p	2	line	line
		p	3	color	color
	m	(Lfk;Ljava/util/List;)V	a	drawHiveBees
		p	1	pos	pos
		p	2	bees	bees
	m	(Lfz;ILjava/lang/String;IF)V	a	drawString
		p	0	pos	pos
		p	1	line	line
		p	2	string	string
		p	3	color	color
		p	4	size	size
	m	(Ldto$b;)V	a	addHive
		p	1	hive	hive
	m	(Ldto$a;)V	a	addBee
		p	1	bee	bee
	m	(Ldto$a;Lfk;)Ljava/lang/String;	a	getPositionString
		p	1	bee	bee
		p	2	pos	pos
	m	(Ljava/util/Collection;)Ljava/lang/String;	a	toString
		p	0	bees	bees
	m	(Ldto$a;)V	b	drawPath
		p	1	bee	bee
	m	(Lfk;)Ljava/util/Collection;	b	getBeesForHive
		p	1	hivePos	hivePos
	m	()V	b	removeInvalidBees
	m	()V	c	removeOutdatedHives
	m	(Ldto$a;)V	c	drawBee
		p	1	bee	bee
	m	(Ldto$a;)Z	d	isTargeted
		p	1	bee	bee
	m	()V	d	render
	m	()Ljava/util/Map;	e	getBlacklistingBees
	m	(Ldto$a;)Z	e	isInRange
		p	1	bee	bee
	m	()V	f	drawFlowers
	m	()Ldbb;	g	getCameraPos
	m	()Ljava/util/Map;	h	getBeesByHive
	m	()V	i	updateTargetedEntity
c	dto$a	net/minecraft/client/render/debug/BeeDebugRenderer$Bee
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Lfz;	c	pos
	f	Lcqq;	d	path
	f	Lfk;	e	hivePos
	f	Lfk;	f	flowerPos
	f	I	g	travellingTicks
	f	Ljava/util/Set;	i	blacklistedHives
	m	(Ljava/util/UUID;ILfz;Lcqq;Lfk;Lfk;I)V	<init>	<init>
		p	1	uuid	uuid
		p	2	id	id
		p	3	pos	pos
		p	4	path	path
		p	5	hivePos	hivePos
		p	6	flowerPos	flowerPos
		p	7	travellingTicks	travellingTicks
	m	()Ljava/util/UUID;	a	getUuid
	m	(Lfk;)Z	a	isHive
		p	1	pos	pos
	m	()Ljava/lang/String;	b	getName
	m	()Z	c	hasFlower
c	dto$b	net/minecraft/client/render/debug/BeeDebugRenderer$Hive
	f	Lfk;	a	pos
	f	I	c	beeCount
	f	I	d	honeyLevel
	f	Z	e	sedated
	f	J	f	time
	m	(Lfk;Ljava/lang/String;IIZJ)V	<init>	<init>
		p	1	pos	pos
		p	3	beeCount	beeCount
		p	4	honeyLevel	honeyLevel
		p	5	sedated	sedated
		p	6	time	time
c	dtp	net/minecraft/client/render/debug/CaveDebugRenderer
c	dtq	net/minecraft/client/render/debug/ChunkBorderDebugRenderer
	f	Ldbn;	a	client
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
c	dtr	net/minecraft/client/render/debug/ChunkLoadingDebugRenderer
	f	Ldbn;	a	client
	f	D	b	lastUpdateTime
	f	Ldtr$a;	d	loadingData
c	dtr$a	net/minecraft/client/render/debug/ChunkLoadingDebugRenderer$ChunkLoadingStatus
	f	Ljava/util/Map;	b	clientStates
	f	Ljava/util/concurrent/CompletableFuture;	c	serverStates
c	dts	net/minecraft/client/render/debug/CollisionDebugRenderer
	f	Ldbn;	a	client
	f	D	b	lastUpdateTime
	f	Ljava/util/List;	c	collisions
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
c	dtt	net/minecraft/client/render/debug/DebugRenderer
	f	Ldtz;	a	pathfindingDebugRenderer
	f	Ldtt$a;	b	waterDebugRenderer
	f	Ldtt$a;	c	chunkBorderDebugRenderer
	f	Ldtt$a;	d	heightmapDebugRenderer
	f	Ldtt$a;	e	collisionDebugRenderer
	f	Ldtt$a;	f	neighborUpdateDebugRenderer
	f	Ldtp;	g	caveDebugRenderer
	f	Lduc;	h	structureDebugRenderer
	f	Ldtt$a;	i	skyLightDebugRenderer
	f	Ldtt$a;	j	worldGenAttemptDebugRenderer
	f	Ldtt$a;	k	blockOutlineDebugRenderer
	f	Ldtt$a;	l	chunkLoadingDebugRenderer
	f	Ldud;	m	villageDebugRenderer
	f	Ldto;	n	beeDebugRenderer
	f	Ldua;	o	raidCenterDebugRenderer
	f	Ldtv;	p	goalSelectorDebugRenderer
	f	Ldtu;	q	gameTestDebugRenderer
	f	Z	r	showChunkBorder
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Lcyl;Ldqt$a;DDD)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	(Ljava/lang/String;DDDIFZFZ)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	color	color
		p	8	size	size
		p	9	center	center
		p	10	offset	offset
		p	11	visibleThroughObjects	visibleThroughObjects
	m	(Ljava/lang/String;IIII)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	color	color
	m	(Lfk;FFFFF)V	a	drawBox
		p	0	pos	pos
		p	1	expand	expand
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
	m	(Lcvf;FFFF)V	a	drawBox
		p	0	box	box
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	alpha	alpha
	m	(DDDDDDFFFF)V	a	drawBox
		p	0	minX	minX
		p	2	minY	minY
		p	4	minZ	minZ
		p	6	maxX	maxX
		p	8	maxY	maxY
		p	10	maxZ	maxZ
		p	12	red	red
		p	13	green	green
		p	14	blue	blue
		p	15	alpha	alpha
	m	(Lfk;Lfk;FFFF)V	a	drawBox
		p	0	pos1	pos1
		p	1	pos2	pos2
		p	2	red	red
		p	3	green	green
		p	4	blue	blue
		p	5	alpha	alpha
	m	(Ljava/lang/String;DDDI)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	color	color
	m	(Ljava/lang/String;DDDIF)V	a	drawString
		p	0	string	string
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	color	color
		p	8	size	size
	m	()V	a	reset
	m	(Lakq;I)Ljava/util/Optional;	a	getTargetedEntity
		p	0	entity	entity
		p	1	maxDistance	maxDistance
	m	()Z	b	toggleShowChunkBorder
c	dtt$a	net/minecraft/client/render/debug/DebugRenderer$Renderer
	m	(Lcyl;Ldqt;DDD)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	()V	a	clear
c	dtu	net/minecraft/client/render/debug/GameTestDebugRenderer
	f	Ljava/util/Map;	a	markers
	m	(Lfk;ILjava/lang/String;I)V	a	addMarker
		p	1	pos	pos
		p	2	color	color
		p	3	message	message
		p	4	duration	duration
c	dtu$a	net/minecraft/client/render/debug/GameTestDebugRenderer$Marker
	f	I	a	color
	f	Ljava/lang/String;	b	message
	f	J	c	removalTime
	m	(ILjava/lang/String;J)V	<init>	<init>
		p	1	color	color
		p	2	message	message
		p	3	removalTime	removalTime
c	dtv	net/minecraft/client/render/debug/GoalSelectorDebugRenderer
	f	Ldbn;	a	client
	f	Ljava/util/Map;	b	goalSelectors
	m	(ILjava/util/List;)V	a	setGoalSelectorList
c	dtv$a	net/minecraft/client/render/debug/GoalSelectorDebugRenderer$GoalSelector
	f	Lfk;	a	pos
	f	Ljava/lang/String;	c	name
c	dtw	net/minecraft/client/render/debug/HeightmapDebugRenderer
	f	Ldbn;	a	client
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
c	dtx	net/minecraft/client/render/debug/SkyLightDebugRenderer
	f	Ldbn;	a	client
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
c	dty	net/minecraft/client/render/debug/NeighborUpdateDebugRenderer
	f	Ldbn;	a	client
	f	Ljava/util/Map;	b	neighborUpdates
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(JLfk;)V	a	addNeighborUpdate
		p	1	time	time
		p	3	pos	pos
c	dtz	net/minecraft/client/render/debug/PathfindingDebugRenderer
	f	Ljava/util/Map;	a	paths
	f	Ljava/util/Map;	c	pathTimes
	m	(Lcqq;DDD)V	a	drawPathLines
		p	0	path	path
		p	1	cameraX	cameraX
		p	3	cameraY	cameraY
		p	5	cameraZ	cameraZ
	m	(ILcqq;F)V	a	addPath
		p	1	id	id
		p	2	path	path
	m	(Lcqq;FZZDDD)V	a	drawPath
		p	0	path	path
		p	1	nodeSize	nodeSize
		p	3	drawLabels	drawLabels
		p	4	cameraX	cameraX
		p	6	cameraY	cameraY
		p	8	cameraZ	cameraZ
	m	(Lfk;DDD)F	a	getManhattanDistance
		p	0	pos	pos
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcqq;FZZDDD)V	b	drawPathInternal
		p	0	path	path
		p	1	nodeSize	nodeSize
		p	3	drawLabels	drawLabels
		p	4	cameraX	cameraX
		p	6	cameraY	cameraY
		p	8	cameraZ	cameraZ
c	du	net/minecraft/command/arguments/BlockStateArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lds;	a	getBlockState
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lds;	a	parse
		p	1	reader	reader
	m	()Ldu;	a	blockState
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dua	net/minecraft/client/render/debug/RaidCenterDebugRenderer
	f	Ldbn;	a	client
	f	Ljava/util/Collection;	b	raidCenters
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Ljava/util/Collection;)V	a	setRaidCenters
		p	1	centers	centers
c	dub	net/minecraft/client/render/debug/BlockOutlineDebugRenderer
	f	Ldbn;	a	client
c	duc	net/minecraft/client/render/debug/StructureDebugRenderer
c	dud	net/minecraft/client/render/debug/VillageDebugRenderer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbn;	b	client
	f	Ljava/util/Map;	c	pointsOfInterest
	f	Ljava/util/Set;	d	sections
	f	Ljava/util/Map;	e	brains
	f	Ljava/util/UUID;	f	targetedEntity
	m	(Lfk;)V	a	removePointOfInterest
	m	(Ldud$a;)V	a	addBrain
		p	1	brain	brain
	m	(Ldud$a;DDD)V	a	drawPath
		p	1	brain	brain
		p	2	cameraX	cameraX
		p	4	cameraY	cameraY
		p	6	cameraZ	cameraZ
	m	(Lfz;ILjava/lang/String;IF)V	a	drawString
		p	0	pos	pos
		p	1	offsetY	offsetY
		p	2	string	string
		p	3	color	color
		p	4	size	size
	m	(Ldud$b;)V	a	addPointOfInterest
	m	(Lfk;I)V	a	setFreeTicketCount
		p	1	pos	pos
		p	2	freeTicketCount	freeTicketCount
	m	(Lgd;)V	a	addSection
		p	1	pos	pos
	m	(Lfk;Ljava/util/List;)V	a	drawGhostPointOfInterest
		p	1	pos	pos
		p	2	brains	brains
	m	(Ljava/lang/String;Ldud$b;II)V	a	drawString
		p	0	string	string
		p	1	pointOfInterest	pointOfInterest
		p	2	offsetY	offsetY
		p	3	color	color
	m	(Ljava/lang/String;Lfk;II)V	a	drawString
		p	0	string	string
		p	1	pos	pos
		p	2	offsetY	offsetY
		p	3	color	color
	m	(Ldud$a;)Z	b	isTargeted
		p	1	brain	brain
	m	(Lfk;)V	b	drawPointOfInterest
		p	0	pos	pos
	m	()Ljava/util/Map;	b	getGhostPointsOfInterest
	m	(Lgd;)V	b	removeSection
		p	1	pos	pos
	m	(Ldud$a;DDD)V	b	drawBrain
		p	1	brain	brain
		p	2	cameraX	cameraX
		p	4	cameraY	cameraY
		p	6	cameraZ	cameraZ
	m	(Ldud$b;)V	b	drawPointOfInterestInfo
		p	1	pointOfInterest	pointOfInterest
	m	(Lfk;)Ljava/util/Collection;	c	getBrains
		p	1	pointOfInterest	pointOfInterest
	m	(Lgd;)V	c	drawSection
		p	0	pos	pos
	m	(Ldud$b;)Ljava/util/Set;	c	getVillagerNames
		p	1	pointOfInterest	pointOfInterest
	m	()V	c	updateTargetedEntity
	m	(Ldud$a;)Z	c	isClose
		p	1	brain	brain
c	dud$a	net/minecraft/client/render/debug/VillageDebugRenderer$Brain
	f	Ljava/util/UUID;	a	uuid
	f	Ljava/lang/String;	d	profession
	f	I	e	xp
	f	Lfz;	f	pos
	f	Lcqq;	h	path
	f	Z	i	wantsGolem
	f	Ljava/util/Set;	n	pointsOfInterest
	m	(Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;ILfz;Ljava/lang/String;Lcqq;Z)V	<init>	<init>
		p	1	uuid	uuid
		p	4	profession	profession
		p	5	xp	xp
		p	6	pos	pos
		p	8	path	path
		p	9	wantsGolem	wantsGolem
	m	(Lfk;)Z	a	isPointOfInterest
	m	()Ljava/util/UUID;	a	getUuid
c	dud$b	net/minecraft/client/render/debug/VillageDebugRenderer$PointOfInterest
	f	Lfk;	a	pos
	f	I	c	freeTicketCount
c	due	net/minecraft/client/render/debug/WaterDebugRenderer
	f	Ldbn;	a	client
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
c	duf	net/minecraft/client/render/debug/WorldGenAttemptDebugRenderer
c	duh	net/minecraft/client/render/entity/HorseBaseEntityRenderer
	f	F	a	scale
	m	(Laue;Lcyl;F)V	a	scale
c	dui	net/minecraft/client/render/entity/ZombieBaseEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxp;)Lsm;	a	getTexture
	m	(Laxp;Lcyl;FFF)V	a	setupTransforms
c	duj	net/minecraft/client/render/entity/AreaEffectCloudEntityRenderer
	m	(Lakp;)Lsm;	a	getTexture
c	duk	net/minecraft/client/render/entity/ArmorStandEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lavp;ZZ)Ldrb;	a	getRenderLayer
	m	(Lavp;)Lsm;	a	getTexture
	m	(Lavp;Lcyl;FFF)V	a	setupTransforms
	m	(Lavp;)Z	b	hasLabel
c	dul	net/minecraft/client/render/entity/ProjectileEntityRenderer
	m	(Layn;FFLcyl;Ldqt;I)V	a	render
c	dum	net/minecraft/client/render/entity/BatEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lasx;Lcyl;F)V	a	scale
	m	(Lasx;Lcyl;FFF)V	a	setupTransforms
	m	(Lasx;)Lsm;	a	getTexture
c	dun	net/minecraft/client/render/entity/BeeEntityRenderer
	f	Lsm;	a	ANGRY_SKIN
	f	Lsm;	g	ANGRY_NECTAR_SKIN
	f	Lsm;	h	PASSIVE_SKIN
	f	Lsm;	i	NECTAR_SKIN
	m	(Latd;)Lsm;	a	getTexture
c	duo	net/minecraft/client/render/entity/BlazeEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawg;)Lsm;	a	getTexture
	m	(Lawg;F)I	a	getBlockLight
c	dup	net/minecraft/client/render/entity/BoatEntityRenderer
	f	Ldkl;	a	model
	f	[Lsm;	e	SKIN
	m	(Lazz;FFLcyl;Ldqt;I)V	a	render
	m	(Lazz;)Lsm;	a	getTexture
c	duq	net/minecraft/client/render/entity/CatEntityRenderer
	m	(Late;Lcyl;F)V	a	scale
	m	(Late;Lcyl;FFF)V	a	setupTransforms
	m	(Late;)Lsm;	a	getTexture
c	dur	net/minecraft/client/render/entity/CaveSpiderEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawh;)Lsm;	a	getTexture
	m	(Lawh;Lcyl;F)V	a	scale
c	dus	net/minecraft/client/render/entity/DonkeyEntityRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Laud;)Lsm;	a	getTexture
c	dut	net/minecraft/client/render/entity/ChickenEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latf;F)F	a	getAnimationProgress
	m	(Latf;)Lsm;	a	getTexture
c	duu	net/minecraft/client/render/entity/CodEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latg;Lcyl;FFF)V	a	setupTransforms
	m	(Latg;)Lsm;	a	getTexture
c	duv	net/minecraft/client/render/entity/CowEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lath;)Lsm;	a	getTexture
c	duw	net/minecraft/client/render/entity/CreeperEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawi;F)F	a	getWhiteOverlayProgress
	m	(Lawi;Lcyl;F)V	a	scale
	m	(Lawi;)Lsm;	a	getTexture
c	dux	net/minecraft/client/render/entity/DolphinEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lati;)Lsm;	a	getTexture
c	duy	net/minecraft/client/render/entity/DragonFireballEntityRenderer
	f	Lsm;	a	SKIN
	m	(Layq;FFLcyl;Ldqt;I)V	a	render
	m	(Layq;)Lsm;	a	getTexture
	m	(Layq;F)I	a	getBlockLight
c	duz	net/minecraft/client/render/entity/DrownedEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawk;Lcyl;FFF)V	a	setupTransforms
c	dv	net/minecraft/command/arguments/BlockArgumentParser
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	DISALLOWED_TAG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	INVALID_BLOCK_ID_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	UNKNOWN_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	DUPLICATE_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	INVALID_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	EMPTY_PROPERTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	UNCLOSED_PROPERTIES_EXCEPTION
	f	Ljava/util/function/Function;	h	SUGGEST_DEFAULT
	f	Lcom/mojang/brigadier/StringReader;	i	reader
	f	Z	j	allowTag
	f	Ljava/util/Map;	k	blockProperties
	f	Ljava/util/Map;	l	tagProperties
	f	Lsm;	m	blockId
	f	Lbyk;	n	stateFactory
	f	Lbyj;	o	blockState
	f	Ljt;	p	data
	f	Lsm;	q	tagId
	f	I	r	cursorPos
	f	Ljava/util/function/Function;	s	suggestions
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1	reader	reader
		p	2	allowTag	allowTag
	m	(Lbyj;)Ljava/lang/String;	a	stringifyBlockState
	m	(Z)Ldv;	a	parse
		p	1	allowNbt	allowNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestTagPropertyValues
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lbzm;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	suggestPropertyValues
	m	()Ljava/util/Map;	a	getBlockProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	getSuggestions
	m	(Ljava/lang/StringBuilder;Lbzm;Ljava/lang/Comparable;)V	a	stringifyProperty
	m	(Lbzm;Ljava/lang/String;I)V	a	parsePropertyValue
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestBlockPropertiesOrEnd
	m	()Lbyj;	b	getBlockState
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestTagPropertiesOrEnd
	m	()Ljt;	c	getNbtData
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestBlockProperties
	m	()Lsm;	d	getTagId
	m	()V	e	parseBlockId
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestTagProperties
	m	()V	f	parseTagId
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestSnbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	g	suggestEqualsCharacter
	m	()V	g	parseBlockProperties
	m	()V	h	parseTagProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	h	suggestCommaOrEnd
	m	()V	i	parseSnbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	i	suggestSnbtOrTagProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	j	suggestSnbtOrBlockProperties
	m	()Ljava/util/Map;	j	getProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	k	suggestIdentifiers
	m	()Z	k	hasBlockEntity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockOrTagId
c	dva	net/minecraft/client/render/entity/ElderGuardianEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laws;Lcyl;F)V	a	scale
	m	(Laws;)Lsm;	getTexture	getTexture
c	dvb	net/minecraft/client/render/entity/EnderCrystalEntityRenderer
	f	Lsm;	a	SKIN
	f	Ldni;	i	bottom
	m	(Laur;)Lsm;	a	getTexture
	m	(Laur;FFLcyl;Ldqt;I)V	a	render
	m	(Laur;Ldtm;DDD)Z	a	shouldRender
c	dvc	net/minecraft/client/render/entity/EnderDragonEntityRenderer
	f	Lsm;	a	CRYSTAL_BEAM_TEX
	f	Lsm;	e	EXPLOSION_TEX
	f	Lsm;	f	SKIN
	f	Lsm;	g	EYES_TEX
	m	(Laus;FFLcyl;Ldqt;I)V	a	render
	m	(FFFFILcyl;Ldqt;I)V	a	renderCrystalBeam
	m	(Laus;)Lsm;	a	getTexture
c	dvc$a	net/minecraft/client/render/entity/EnderDragonEntityRenderer$DragonEntityModel
	f	Laus;	A	dragon
	f	Ldni;	a	head
	f	Ldni;	b	neck
	f	Ldni;	f	jaw
	f	Ldni;	g	body
	f	Ldni;	h	wing
	f	Ldni;	t	wingTip
	f	Ldni;	u	frontLeg
	f	Ldni;	v	frontLegTip
	f	Ldni;	w	frontFoot
	f	Ldni;	x	rearLeg
	f	Ldni;	y	rearLegTip
	f	Ldni;	z	rearFoot
	m	(Laus;FFF)V	a	animateModel
	m	(Laus;FFFFF)V	a	setAngles
c	dvd	net/minecraft/client/render/entity/EndermanEntityRenderer
	f	Lsm;	a	SKIN
	f	Ljava/util/Random;	g	random
	m	(Lawm;F)Lcvl;	a	getPositionOffset
	m	(Lawm;FFLcyl;Ldqt;I)V	a	render
	m	(Lawm;)Lsm;	a	getTexture
c	dve	net/minecraft/client/render/entity/EndermiteEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawn;)F	a	getLyingAngle
	m	(Lawn;)Lsm;	b	getTexture
c	dvf	net/minecraft/client/render/entity/EntityRenderDispatcher
	f	Leak;	a	textureManager
	f	Ldbb;	b	camera
	f	Lakq;	c	targetedEntity
	f	Ldbr;	d	gameOptions
	f	Ldrb;	e	SHADOW_LAYER
	f	Ljava/util/Map;	f	renderers
	f	Ljava/util/Map;	g	modelRenderers
	f	Ldzt;	h	playerRenderer
	f	Ldch;	i	textRenderer
	f	Lbjw;	j	world
	f	Lc;	k	rotation
	f	Z	l	renderShadows
	f	Z	m	renderHitboxes
	m	(Leak;Ldvz;Lyz;Ldch;Ldbr;)V	<init>	<init>
		p	1	textureManager	textureManager
	m	(Laku;Ldvg;)V	a	register
	m	(Lakq;DDDFFLcyl;Ldqt;I)V	a	render
		p	1	entity	entity
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	yaw	yaw
		p	9	tickDelta	tickDelta
		p	10	matrices	matrices
		p	11	vertexConsumers	vertexConsumers
		p	12	light	light
	m	(Lcyl;Lcyo;Lakq;F)V	a	renderHitbox
	m	(Lbjw;)V	a	setWorld
		p	1	world	world
	m	(DDD)D	a	getSquaredDistanceToCamera
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Z)V	a	setRenderShadows
		p	1	value	value
	m	(Lcyl;Ldqt;Lakq;FFLbjz;F)V	a	renderShadow
		p	0	matrices	matrices
		p	1	vertexConsumers	vertexConsumers
		p	2	entity	entity
		p	3	darkness	darkness
		p	4	tickDelta	tickDelta
		p	5	world	world
		p	6	size	size
	m	(Lcyl$a;Lcyo;Lbjz;Lfk;DDDFF)V	a	renderShadowPart
		p	0	matrix	matrix
		p	1	vertexConsumer	vertexConsumer
		p	2	world	world
		p	3	pos	pos
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	size	size
		p	11	darkness	darkness
	m	(Lakq;Ldtm;DDD)Z	a	shouldRender
		p	1	entity	entity
		p	2	frustum	frustum
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	(Lakq;F)I	a	getLight
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Lcyl$a;Lcyo;FFFFFF)V	a	shadowVertex
		p	0	matrix	matrix
		p	1	vertexConsumer	vertexConsumer
		p	2	alpha	alpha
		p	3	x	x
		p	4	y	y
		p	5	z	z
		p	6	u	u
		p	7	v	v
	m	(Lc;)V	a	setRotation
		p	1	rotation	rotation
	m	(Lcyl;Ldqt;Lakq;)V	a	renderFire
		p	1	matrix	matrix
	m	(Lcyl$a;Lcyo;FFFFF)V	a	fireVertex
		p	0	matrix	matrix
		p	1	vertexConsumer	vertexConsumer
		p	2	x	x
		p	3	y	y
		p	4	z	z
		p	5	u	u
		p	6	v	v
	m	(Lakq;)Ldvg;	a	getRenderer
		p	1	entity	entity
	m	(Ldvz;Lyz;)V	a	registerRenderers
	m	(Lbjw;Ldbb;Lakq;)V	a	configure
		p	1	world	world
		p	2	camera	camera
		p	3	targetedEntity	targetedEntity
	m	()Z	a	shouldRenderHitboxes
	m	()Lc;	b	getRotation
	m	(Lakq;)D	b	getSquaredDistanceToCamera
	m	(Z)V	b	setRenderHitboxes
		p	1	value	value
	m	()Ldch;	c	getTextRenderer
c	dvg	net/minecraft/client/render/entity/EntityRenderer
	f	Ldvf;	b	renderManager
	f	F	c	shadowSize
	f	F	d	shadowDarkness
	m	(Ldvf;)V	<init>	<init>
		p	1	dispatcher	dispatcher
	m	(Lakq;FFLcyl;Ldqt;I)V	a	render
		p	1	entity	entity
		p	2	yaw	yaw
		p	3	tickDelta	tickDelta
		p	4	matrices	matrices
		p	5	vertexConsumers	vertexConsumers
		p	6	light	light
	m	(Lakq;Ljava/lang/String;Lcyl;Ldqt;I)V	a	renderLabelIfPresent
		p	1	entity	entity
		p	3	matrices	matrices
	m	(Lakq;)Lsm;	a	getTexture
		p	1	entity	entity
	m	()Ldch;	a	getFontRenderer
	m	(Lakq;Ldtm;DDD)Z	a	shouldRender
		p	1	entity	entity
		p	2	visibleRegion	visibleRegion
		p	3	cameraX	cameraX
		p	5	cameraY	cameraY
		p	7	cameraZ	cameraZ
	m	(Lakq;F)I	a	getBlockLight
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Lakq;F)Lcvl;	b	getPositionOffset
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	()Ldvf;	b	getRenderManager
	m	(Lakq;)Z	b	hasLabel
		c	Determines whether the passed entity should render with a nameplate above its head.\n\n<p>Checks for a custom nametag on living entities, and for teams/team visibilities for players.</p>
		p	1	entity	entity
	m	(Lakq;F)I	c	getLight
		p	1	entity	entity
		p	2	tickDelta	tickDelta
c	dvh	net/minecraft/client/render/entity/EvokerFangsEntityRenderer
	f	Lsm;	a	SKIN
	f	Ldlb;	e	model
	m	(Layr;FFLcyl;Ldqt;I)V	a	render
		p	1	model	model
	m	(Layr;)Lsm;	a	getTexture
c	dvi	net/minecraft/client/render/entity/EvokerIllagerEntityRenderer
	f	Lsm;	a	EVOKER_TEXTURE
	m	(Laxi;)Lsm;	a	getTexture
c	dvi$1	net/minecraft/client/render/entity/EvokerIllagerEntityRenderer$1
	m	(Lcyl;Ldqt;ILaxi;FFFFFF)V	a	render
c	dvj	net/minecraft/client/render/entity/ExperienceOrbEntityRenderer
	f	Lsm;	a	SKIN
	f	Ldrb;	e	TEXTURE_LAYER
	m	(Lakw;)Lsm;	a	getTexture
	m	(Lakw;FFLcyl;Ldqt;I)V	a	render
	m	(Lakw;F)I	a	getBlockLight
c	dvk	net/minecraft/client/render/entity/FallingBlockEntityRenderer
	m	(Lawa;FFLcyl;Ldqt;I)V	a	render
	m	(Lawa;)Lsm;	a	getTexture
c	dvl	net/minecraft/client/render/entity/FireworkEntityRenderer
	f	Ldvz;	a	itemRenderer
	m	(Layu;FFLcyl;Ldqt;I)V	a	render
	m	(Layu;)Lsm;	a	getTexture
c	dvm	net/minecraft/client/render/entity/FishingBobberEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lavw;)Lsm;	a	getTexture
	m	(Lavw;FFLcyl;Ldqt;I)V	a	render
c	dvn	net/minecraft/client/render/entity/FoxEntityRenderer
	f	Lsm;	a	SKIN
	f	Lsm;	g	SLEEPING_SKIN
	f	Lsm;	h	SNOW_SKIN
	f	Lsm;	i	SLEEPING_SNOW_SKIN
	m	(Latk;)Lsm;	a	getTexture
	m	(Latk;Lcyl;FFF)V	a	setupTransforms
c	dvo	net/minecraft/client/render/entity/GhastEntityRenderer
	f	Lsm;	a	SKIN
	f	Lsm;	g	ANGRY_SKIN
	m	(Lawq;)Lsm;	a	getTexture
	m	(Lawq;Lcyl;F)V	a	scale
c	dvp	net/minecraft/client/render/entity/GiantEntityRenderer
	f	Lsm;	a	SKIN
	f	F	g	scale
	m	(Lawr;Lcyl;F)V	a	scale
	m	(Lawr;)Lsm;	a	getTexture
c	dvq	net/minecraft/client/render/entity/GuardianEntityRenderer
	f	Lsm;	a	SKIN
	f	Lsm;	g	EXPLOSION_BEAM_TEX
	m	(Laws;Ldtm;DDD)Z	a	shouldRender
	m	(Laws;FFLcyl;Ldqt;I)V	a	render
	m	(Lakz;DF)Lcvl;	a	fromLerpedPosition
		p	1	entity	entity
		p	2	yOffset	yOffset
		p	4	delta	delta
	m	(Laws;)Lsm;	a	getTexture
c	dvr	net/minecraft/client/render/entity/HorseEntityRenderer
	f	Ljava/util/Map;	a	SKINS
	m	(Laug;)Lsm;	a	getTexture
c	dvs	net/minecraft/client/render/entity/BipedEntityRenderer
	f	Lsm;	a	SKIN
	m	(Ldvf;Ldlj;F)V	<init>	<init>
		p	1	renderManager	renderManager
		p	2	model	model
	m	(Lala;)Lsm;	a	getTexture
c	dvt	net/minecraft/client/render/entity/HuskEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxp;Lcyl;F)V	a	scale
	m	(Laxp;)Lsm;	getTexture	getTexture
c	dvu	net/minecraft/client/render/entity/IllagerEntityRenderer
	m	(Lawe;Lcyl;F)V	a	scale
c	dvv	net/minecraft/client/render/entity/IllusionerEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawu;FFLcyl;Ldqt;I)V	a	render
	m	(Lawu;)Lsm;	a	getTexture
	m	(Lawu;)Z	b	isFullyVisible
c	dvv$1	net/minecraft/client/render/entity/IllusionerEntityRenderer$1
	m	(Lcyl;Ldqt;ILawu;FFFFFF)V	a	render
c	dvw	net/minecraft/client/render/entity/IronGolemEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latl;Lcyl;FFF)V	a	setupTransforms
	m	(Latl;)Lsm;	a	getTexture
c	dvx	net/minecraft/client/render/entity/ItemEntityRenderer
	f	Ldvz;	a	itemRenderer
	f	Ljava/util/Random;	e	random
	m	(Ldvf;Ldvz;)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	renderer	renderer
	m	(Lawb;)Lsm;	a	getTexture
	m	(Lben;)I	a	getRenderedAmount
		p	1	stack	stack
	m	(Lawb;FFLcyl;Ldqt;I)V	a	render
c	dvy	net/minecraft/client/render/entity/ItemFrameEntityRenderer
	f	Lecb;	a	NORMAL_FRAME
	f	Lecb;	e	MAP_FRAME
	f	Ldbn;	f	client
	f	Ldvz;	g	itemRenderer
	m	(Ldvf;Ldvz;)V	<init>	<init>
		p	1	renderManager	renderManager
	m	(Lavr;Ljava/lang/String;Lcyl;Ldqt;I)V	a	renderLabelIfPresent
	m	(Lavr;)Lsm;	a	getTexture
	m	(Lavr;FFLcyl;Ldqt;I)V	a	render
	m	(Lavr;F)Lcvl;	a	getPositionOffset
	m	(Lavr;)Z	b	hasLabel
c	dvz	net/minecraft/client/render/item/ItemRenderer
	f	Lsm;	a	ENCHANTED_ITEM_GLINT
	f	F	b	zOffset
	f	Ljava/util/Set;	c	WITHOUT_MODELS
	f	Ldqq;	d	models
	f	Leak;	e	textureManager
	f	Ldcf;	f	colorMap
	m	(Leak;Leca;Ldcf;)V	<init>	<init>
		p	1	manager	manager
		p	2	bakery	bakery
		p	3	colorMap	colorMap
	m	()Ldqq;	a	getModels
	m	(Ldch;Lben;IILjava/lang/String;)V	a	renderGuiItemOverlay
		p	1	fontRenderer	fontRenderer
		p	2	stack	stack
		p	3	x	x
		p	4	y	y
		p	5	amountText	amountText
	m	(Ldqt;Ldrb;ZZ)Lcyo;	a	getArmorVertexConsumer
		p	0	vertexConsumers	vertexConsumers
		p	1	layer	layer
		p	2	solid	solid
		p	3	glint	glint
	m	(Ldch;Lben;II)V	a	renderGuiItemOverlay
		p	1	fontRenderer	fontRenderer
		p	2	stack	stack
		p	3	x	x
		p	4	y	y
	m	(Lcyl;Lcyo;Ljava/util/List;Lben;II)V	a	renderBakedItemQuads
		p	1	matrices	matrices
		p	2	vertices	vertices
		p	3	quads	quads
		p	4	stack	stack
		p	5	light	light
		p	6	overlay	overlay
	m	(Lcyg;IIIIIIII)V	a	renderGuiQuad
		p	1	buffer	buffer
		p	2	x	x
		p	3	y	y
		p	4	width	width
		p	5	height	height
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
		p	9	alpha	alpha
	m	(Lben;II)V	a	renderGuiItemIcon
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
	m	(Lebv;Lben;Lbjw;Lakz;)Lebv;	a	getOverriddenModel
		p	1	model	model
		p	2	stack	stack
		p	3	world	world
		p	4	entity	entity
	m	(Lben;Lbjw;Lakz;)Lebv;	a	getHeldItemModel
		p	1	stack	stack
		p	2	world	world
		p	3	entity	entity
	m	(Lben;Ldrz$b;ZLcyl;Ldqt;IILebv;)V	a	renderItem
		p	1	stack	stack
		p	2	renderMode	renderMode
		p	3	leftHanded	leftHanded
		p	4	matrices	matrices
		p	5	vertexConsumers	vertexConsumers
		p	6	light	light
		p	7	overlay	overlay
		p	8	model	model
	m	(Lakz;Lben;II)V	a	renderGuiItem
		p	1	entity	entity
		p	2	itemStack	itemStack
		p	3	x	x
		p	4	y	y
	m	(Lebv;Lben;IILcyl;Lcyo;)V	a	renderBakedItemModel
		p	1	model	model
		p	2	stack	stack
		p	3	light	light
		p	4	overlay	overlay
		p	5	matrices	matrices
		p	6	vertices	vertices
	m	(Lben;IILebv;)V	a	renderGuiItemModel
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
		p	4	model	model
	m	(Lben;Ldrz$b;IILcyl;Ldqt;)V	a	renderItem
		p	1	stack	stack
		p	2	transformationType	transformationType
		p	3	light	light
		p	4	overlay	overlay
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
	m	(Lakz;Lben;Ldrz$b;ZLcyl;Ldqt;Lbjw;II)V	a	renderItem
		p	1	entity	entity
		p	2	item	item
		p	3	renderMode	renderMode
		p	4	leftHanded	leftHanded
		p	5	matrices	matrices
		p	6	vertexConsumers	vertexConsumers
		p	7	world	world
		p	8	light	light
		p	9	overlay	overlay
	m	(Lben;II)V	b	renderGuiItem
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
c	dwa	net/minecraft/client/render/entity/LeashKnotEntityRenderer
	f	Lsm;	a	SKIN
	f	Ldln;	e	model
	m	(Lavs;FFLcyl;Ldqt;I)V	a	render
	m	(Lavs;)Lsm;	a	getTexture
c	dwb	net/minecraft/client/render/entity/LightningEntityRenderer
	m	(Lavy;)Lsm;	a	getTexture
	m	(Lavy;FFLcyl;Ldqt;I)V	a	render
c	dwc	net/minecraft/client/render/entity/LivingEntityRenderer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldla;	e	model
	f	Ljava/util/List;	f	features
	m	(Ldvf;Ldla;F)V	<init>	<init>
		p	1	dispatcher	dispatcher
		p	2	model	model
		p	3	shadowSize	shadowSize
	m	(Lakz;Lcyl;FFF)V	a	setupTransforms
		p	1	entity	entity
		p	2	matrices	matrices
		p	3	animationProgress	animationProgress
		p	4	bodyYaw	bodyYaw
		p	5	tickDelta	tickDelta
	m	(Lakz;F)F	a	getAnimationProgress
		c	This value is passed to other methods when calculating angles for animation.\nIt's typically just the sum of the entity's age (in ticks) and the passed in tickDelta.
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Ldzd;)Z	a	addFeature
		p	1	feature	feature
	m	(Lakz;)Z	a	hasLabel
	m	(Lakz;ZZ)Ldrb;	a	getRenderLayer
		c	Gets the render layer appropriate for rendering the passed entity. Returns null if the entity should not be rendered.
		p	1	entity	entity
		p	2	showBody	showBody
		p	3	translucent	translucent
	m	(Lakz;FFLcyl;Ldqt;I)V	a	render
	m	(Lakz;Lcyl;F)V	a	scale
		p	1	entity	entity
		p	2	matrices	matrices
		p	3	tickDelta	tickDelta
	m	(Lfp;)F	a	getYaw
		p	0	direction	direction
	m	(Lakz;)F	b	getLyingAngle
		p	1	entity	entity
	m	(Lakz;F)F	b	getWhiteOverlayProgress
		p	1	entity	entity
		p	2	tickDelta	tickDelta
	m	(Lakz;)Z	c	isFullyVisible
		p	1	entity	entity
	m	(Lakz;F)I	c	getOverlay
		c	Returns the packed overlay color for an entity, determined by its death progress and whether it is flashing.
		p	0	entity	entity
		p	1	whiteOverlayProgress	whiteOverlayProgress
	m	(Lakz;F)F	d	getHandSwingProgress
		p	1	entity	entity
		p	2	tickDelta	tickDelta
c	dwd	net/minecraft/client/render/entity/LlamaEntityRenderer
	f	[Lsm;	a	TEXTURES
	m	(Lauh;)Lsm;	a	getTexture
c	dwe	net/minecraft/client/render/entity/LlamaSpitEntityRenderer
	f	Lsm;	a	SKIN
	f	Ldlq;	e	model
	m	(Layx;)Lsm;	a	getTexture
	m	(Layx;FFLcyl;Ldqt;I)V	a	render
c	dwf	net/minecraft/client/render/entity/MagmaCubeEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawv;F)I	a	getBlockLight
	m	(Lawv;Lcyl;F)V	a	scale
	m	(Lawv;)Lsm;	a	getTexture
c	dwg	net/minecraft/client/render/entity/MinecartEntityRenderer
	f	Ldla;	a	model
	f	Lsm;	e	SKIN
	m	(Lazx;FFLcyl;Ldqt;I)V	a	render
	m	(Lazx;FLbyj;Lcyl;Ldqt;I)V	a	renderBlock
		p	2	delta	delta
		p	3	state	state
	m	(Lazx;)Lsm;	a	getTexture
c	dwh	net/minecraft/client/render/entity/MobEntityRenderer
	m	(Ldvf;Ldla;F)V	<init>	<init>
		p	1	renderManager	renderManager
		p	2	model	model
	m	(Lala;Ldtm;DDD)Z	a	shouldRender
	m	(Lala;FFLcyl;Ldqt;I)V	a	render
	m	(Lala;)Z	b	hasLabel
c	dwi	net/minecraft/client/render/entity/MooshroomEntityRenderer
	f	Ljava/util/Map;	a	SKIN
	m	(Latm;)Lsm;	a	getTexture
c	dwj	net/minecraft/client/render/entity/OcelotEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latn;)Lsm;	a	getTexture
c	dwk	net/minecraft/client/render/entity/PaintingEntityRenderer
	m	(Lavu;)Lsm;	a	getTexture
	m	(Lavu;FFLcyl;Ldqt;I)V	a	render
c	dwl	net/minecraft/client/render/entity/PandaEntityRenderer
	f	Ljava/util/Map;	a	SKIN_MAP
	m	(Lato;)Lsm;	a	getTexture
	m	(Lato;Lcyl;FFF)V	a	setupTransforms
c	dwm	net/minecraft/client/render/entity/ParrotEntityRenderer
	f	[Lsm;	a	SKINS
	m	(Latp;F)F	a	getAnimationProgress
	m	(Latp;)Lsm;	a	getTexture
c	dwn	net/minecraft/client/render/entity/PhantomEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawy;)Lsm;	a	getTexture
	m	(Lawy;Lcyl;FFF)V	a	setupTransforms
	m	(Lawy;Lcyl;F)V	a	scale
c	dwo	net/minecraft/client/render/entity/PigEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latq;)Lsm;	a	getTexture
c	dwp	net/minecraft/client/render/entity/ZombiePigmanEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawz;)Lsm;	a	getTexture
c	dwq	net/minecraft/client/render/entity/PillagerEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxa;)Lsm;	a	getTexture
c	dwr	net/minecraft/client/render/entity/PolarBearEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latr;Lcyl;F)V	a	scale
	m	(Latr;)Lsm;	a	getTexture
c	dws	net/minecraft/client/render/entity/PufferfishEntityRenderer
	f	Lsm;	a	SKIN
	f	I	g	modelSize
	f	Ldmd;	h	smallModel
	f	Ldmc;	i	mediumModel
	f	Ldmb;	j	largeModel
	m	(Lats;Lcyl;FFF)V	a	setupTransforms
	m	(Lats;FFLcyl;Ldqt;I)V	a	render
	m	(Lats;)Lsm;	a	getTexture
c	dwt	net/minecraft/client/render/entity/RabbitEntityRenderer
	f	Lsm;	a	BROWN_SKIN
	f	Lsm;	g	WHITE_SKIN
	f	Lsm;	h	BLACK_SKIN
	f	Lsm;	i	GOLD_SKIN
	f	Lsm;	j	SALT_SKIN
	f	Lsm;	k	WHITE_SPOTTED_SKIN
	f	Lsm;	l	TOAST_SKIN
	f	Lsm;	m	CAERBANNOG_SKIN
	m	(Latt;)Lsm;	a	getTexture
c	dwu	net/minecraft/client/render/entity/RavagerEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxc;)Lsm;	a	getTexture
c	dwv	net/minecraft/client/render/entity/feature/FeatureRendererContext
	m	(Lakq;)Lsm;	a	getTexture
	m	()Ldla;	c	getModel
c	dww	net/minecraft/client/render/entity/SalmonEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latu;)Lsm;	a	getTexture
	m	(Latu;Lcyl;FFF)V	a	setupTransforms
c	dwx	net/minecraft/client/render/entity/SheepEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latv;)Lsm;	a	getTexture
c	dwy	net/minecraft/client/render/entity/ShulkerBulletEntityRenderer
	f	Lsm;	a	SKIN
	f	Ldml;	f	model
	m	(Laza;)Lsm;	a	getTexture
	m	(Laza;FFLcyl;Ldqt;I)V	a	render
	m	(Laza;F)I	a	getBlockLight
c	dwz	net/minecraft/client/render/entity/ShulkerEntityRenderer
	f	Lsm;	a	SKIN
	f	[Lsm;	g	SKIN_COLOR
	m	(Laxe;Lcyl;F)V	a	scale
	m	(Laxe;Ldtm;DDD)Z	a	shouldRender
	m	(Laxe;F)Lcvl;	a	getPositionOffset
	m	(Laxe;)Lsm;	a	getTexture
	m	(Laxe;Lcyl;FFF)V	a	setupTransforms
c	dx	net/minecraft/command/arguments/BlockPosArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	UNLOADED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	OUT_OF_WORLD_EXCEPTION
	f	Ljava/util/Collection;	c	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfk;	a	getLoadedBlockPos
		p	0	context	context
		p	1	name	name
	m	()Ldx;	a	blockPos
	m	(Lcom/mojang/brigadier/StringReader;)Ldz;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfk;	b	getBlockPos
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dxa	net/minecraft/client/render/entity/SilverfishEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxf;)F	a	getLyingAngle
	m	(Laxf;)Lsm;	b	getTexture
c	dxb	net/minecraft/client/render/entity/SkeletonEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawf;)Lsm;	a	getTexture
c	dxc	net/minecraft/client/render/entity/SlimeEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxh;Lcyl;F)V	a	scale
	m	(Laxh;FFLcyl;Ldqt;I)V	a	render
	m	(Laxh;)Lsm;	a	getTexture
c	dxd	net/minecraft/client/render/entity/SnowGolemEntityRenderer
	f	Lsm;	a	SKIN
	m	(Latx;)Lsm;	a	getTexture
c	dxe	net/minecraft/client/render/entity/SpectralArrowEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lazd;)Lsm;	a	getTexture
c	dxf	net/minecraft/client/render/entity/SpiderEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxj;)Lsm;	a	getTexture
	m	(Laxj;)F	b	getLyingAngle
c	dxg	net/minecraft/client/render/entity/SquidEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laty;Lcyl;FFF)V	a	setupTransforms
	m	(Laty;)Lsm;	a	getTexture
	m	(Laty;F)F	a	getAnimationProgress
c	dxh	net/minecraft/client/render/entity/StrayEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawf;)Lsm;	getTexture	getTexture
c	dxi	net/minecraft/client/render/entity/FlyingItemEntityRenderer
	f	Ldvz;	a	item
	f	F	e	scale
	m	(Ldvf;Ldvz;FZ)V	<init>	<init>
		p	1	renderManager	renderManager
		p	3	scale	scale
c	dxj	net/minecraft/client/render/entity/TridentEntityRenderer
	f	Lsm;	a	SKIN
	f	Ldmu;	e	model
	m	(Lazk;)Lsm;	a	getTexture
	m	(Lazk;FFLcyl;Ldqt;I)V	a	render
c	dxk	net/minecraft/client/render/entity/ArrowEntityRenderer
	f	Lsm;	a	SKIN
	f	Lsm;	e	TIPPED_SKIN
	m	(Layp;)Lsm;	a	getTexture
c	dxl	net/minecraft/client/render/entity/TntMinecartEntityRenderer
	m	(Lbag;FLbyj;Lcyl;Ldqt;I)V	a	renderBlock
c	dxm	net/minecraft/client/render/entity/TntEntityRenderer
	m	(Lawc;)Lsm;	a	getTexture
	m	(Lawc;FFLcyl;Ldqt;I)V	a	render
c	dxn	net/minecraft/client/render/entity/TropicalFishEntityRenderer
	m	(Latz;Lcyl;FFF)V	a	setupTransforms
	m	(Latz;)Lsm;	a	getTexture
	m	(Latz;FFLcyl;Ldqt;I)V	a	render
c	dxo	net/minecraft/client/render/entity/TurtleEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laua;FFLcyl;Ldqt;I)V	a	render
	m	(Laua;)Lsm;	a	getTexture
c	dxp	net/minecraft/client/render/entity/ZombieHorseEntityRenderer
	f	Ljava/util/Map;	a	TEXTURES
	m	(Laue;)Lsm;	a	getTexture
c	dxq	net/minecraft/client/render/entity/VexEntityRenderer
	f	Lsm;	a	TEXTURE
	f	Lsm;	g	CHARGING_TEXTURE
	m	(Laxl;)Lsm;	a	getTexture
	m	(Laxl;F)I	a	getBlockLight
	m	(Laxl;Lcyl;F)V	a	scale
c	dxr	net/minecraft/client/render/entity/VillagerEntityRenderer
	f	Lsm;	a	VILLAGER_SKIN
	m	(Laxw;Lcyl;F)V	a	scale
	m	(Laxw;)Lsm;	a	getTexture
c	dxs	net/minecraft/client/render/entity/VindicatorEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxm;)Lsm;	a	getTexture
c	dxs$1	net/minecraft/client/render/entity/VindicatorEntityRenderer$1
	m	(Lcyl;Ldqt;ILaxm;FFFFFF)V	a	render
c	dxt	net/minecraft/client/render/entity/WanderingTraderEntityRenderer
	f	Lsm;	a	TEXTURE
	m	(Layc;)Lsm;	a	getTexture
	m	(Layc;Lcyl;F)V	a	scale
c	dxu	net/minecraft/client/render/entity/WitchEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxn;Lcyl;F)V	a	scale
	m	(Laxn;FFLcyl;Ldqt;I)V	a	render
	m	(Laxn;)Lsm;	a	getTexture
c	dxv	net/minecraft/client/render/entity/WitherEntityRenderer
	f	Lsm;	a	INVINCIBLE_SKIN
	f	Lsm;	g	SKIN
	m	(Lavn;F)I	a	getBlockLight
	m	(Lavn;)Lsm;	a	getTexture
	m	(Lavn;Lcyl;F)V	a	scale
c	dxw	net/minecraft/client/render/entity/WitherSkeletonEntityRenderer
	f	Lsm;	a	SKIN
	m	(Lawf;Lcyl;F)V	a	scale
	m	(Lawf;)Lsm;	getTexture	getTexture
c	dxx	net/minecraft/client/render/entity/WitherSkullEntityRenderer
	f	Lsm;	a	INVINCIBLE_SKIN
	f	Lsm;	e	SKIN
	f	Ldmp;	f	model
	m	(Lazl;)Lsm;	a	getTexture
	m	(Lazl;F)I	a	getBlockLight
	m	(Lazl;FFLcyl;Ldqt;I)V	a	render
c	dxy	net/minecraft/client/render/entity/WolfEntityRenderer
	f	Lsm;	a	WILD_SKIN
	f	Lsm;	g	TAMED_SKIN
	f	Lsm;	h	ANGRY_SKIN
	m	(Lauc;)Lsm;	a	getTexture
	m	(Lauc;FFLcyl;Ldqt;I)V	a	render
	m	(Lauc;F)F	a	getAnimationProgress
c	dxz	net/minecraft/client/render/entity/ZombieEntityRenderer
c	dy	net/minecraft/command/arguments/ColumnPosArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	()Ldy;	a	columnPos
	m	(Lcom/mojang/brigadier/StringReader;)Ldz;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lwt;	a	getColumnPos
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	dya	net/minecraft/client/render/entity/ZombieVillagerEntityRenderer
	f	Lsm;	a	SKIN
	m	(Laxq;)Lsm;	a	getTexture
	m	(Laxq;Lcyl;FFF)V	a	setupTransforms
c	dyb	net/minecraft/client/render/entity/feature/ArmorFeatureRenderer
	f	Ldlj;	a	modelLeggings
	f	Ldlj;	b	modelBody
	f	Ljava/util/Map;	c	ARMOR_TEXTURE_CACHE
	m	(Lakv;)Ldlj;	a	getArmor
	m	(Lcyl;Ldqt;ILbcg;ZLdlj;ZFFFLjava/lang/String;)V	a	renderArmorParts
		p	5	renderGlint	renderGlint
		p	7	lowerParts	lowerParts
		p	8	r	r
		p	9	g	g
		p	10	b	b
		p	11	textureSuffix	textureSuffix
	m	(Lbcg;ZLjava/lang/String;)Lsm;	a	getArmorTexture
		p	2	lowerParts	lowerParts
		p	3	suffix	suffix
	m	(Lcyl;Ldqt;Lakz;FFFFFFLakv;I)V	a	renderArmor
	m	(Ldlj;Lakv;)V	a	setVisible
		p	1	bipedModel	bipedModel
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
	m	(Ldlj;)V	a	setInvisible
	m	(Lakv;)Z	b	isLegs
c	dyc	net/minecraft/client/render/entity/feature/StuckArrowsFeatureRenderer
c	dyd	net/minecraft/client/render/entity/feature/StuckStingersFeatureRenderer
c	dye	net/minecraft/client/render/entity/feature/CapeFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILdpy;FFFFFF)V	a	render
c	dyf	net/minecraft/client/render/entity/feature/EndermanBlockFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILawm;FFFFFF)V	a	render
c	dyg	net/minecraft/client/render/entity/feature/CatCollarFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldkn;	b	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILate;FFFFFF)V	a	render
c	dyh	net/minecraft/client/render/entity/feature/CreeperChargeFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldku;	b	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
c	dyi	net/minecraft/client/render/entity/feature/VillagerHeldItemFeatureRenderer
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dyj	net/minecraft/client/render/entity/feature/HeadFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dyk	net/minecraft/client/render/entity/feature/Deadmau5FeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILdpy;FFFFFF)V	a	render
c	dyl	net/minecraft/client/render/entity/feature/DolphinHeldItemFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILati;FFFFFF)V	a	render
c	dym	net/minecraft/client/render/entity/feature/DrownedOverlayFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldkw;	b	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILaxp;FFFFFF)V	a	render
c	dyn	net/minecraft/client/render/entity/feature/ElytraFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldkx;	b	elytra
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dyo	net/minecraft/client/render/entity/feature/EndermanEyesFeatureRenderer
	f	Ldrb;	a	SKIN
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
c	dyp	net/minecraft/client/render/entity/feature/EnergySwirlOverlayFeatureRenderer
	m	(F)F	a	getEnergySwirlX
		p	1	partialAge	partialAge
	m	()Lsm;	a	getEnergySwirlTexture
	m	()Ldla;	b	getEnergySwirlModel
c	dyq	net/minecraft/client/render/entity/feature/EyesFeatureRenderer
	m	()Ldrb;	a	getEyesTexture
c	dyr	net/minecraft/client/render/entity/feature/FoxHeldItemFeatureRenderer
	m	(Lcyl;Ldqt;ILatk;FFFFFF)V	a	render
c	dys	net/minecraft/client/render/entity/feature/HorseArmorFeatureRenderer
	f	Ldlh;	a	model
	m	(Lcyl;Ldqt;ILaug;FFFFFF)V	a	render
c	dyt	net/minecraft/client/render/entity/feature/ArmorBipedFeatureRenderer
c	dyu	net/minecraft/client/render/entity/feature/IronGolemCrackFeatureRenderer
	f	Ljava/util/Map;	a	DAMAGE_TO_TEXTURE
	m	(Lcyl;Ldqt;ILatl;FFFFFF)V	a	render
c	dyv	net/minecraft/client/render/entity/feature/IronGolemFlowerFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILatl;FFFFFF)V	a	render
c	dyw	net/minecraft/client/render/entity/feature/HeldItemFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lakz;Lben;Ldrz$b;Laky;Lcyl;Ldqt;I)V	a	renderItem
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dyx	net/minecraft/client/render/entity/feature/LlamaDecorFeatureRenderer
	f	[Lsm;	a	LLAMA_DECOR
	f	Lsm;	b	TRADER_LLAMA_DECOR
	f	Ldlp;	c	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILauh;FFFFFF)V	a	render
c	dyy	net/minecraft/client/render/entity/feature/MooshroomMushroomFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILatm;FFFFFF)V	a	render
c	dyz	net/minecraft/client/render/entity/feature/PandaHeldItemFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILato;FFFFFF)V	a	render
c	dz	net/minecraft/command/arguments/PosArgument
	m	()Z	a	isXRelative
	m	(Lcq;)Lcvl;	a	toAbsolutePos
		p	1	source	source
	m	()Z	b	isYRelative
	m	(Lcq;)Lcvk;	b	toAbsoluteRotation
		p	1	source	source
	m	(Lcq;)Lfk;	c	toAbsoluteBlockPos
		p	1	source	source
	m	()Z	c	isZRelative
c	dza	net/minecraft/client/render/entity/feature/ShoulderParrotFeatureRenderer
	f	Ldlw;	a	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILayj;FFFFZ)V	a	renderShoulderParrot
	m	(Lcyl;Ldqt;ILayj;FFFFFF)V	a	render
c	dzb	net/minecraft/client/render/entity/feature/PhantomEyesFeatureRenderer
	f	Ldrb;	a	SKIN
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
c	dzc	net/minecraft/client/render/entity/feature/PigSaddleFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldly;	b	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILatq;FFFFFF)V	a	render
c	dzd	net/minecraft/client/render/entity/feature/FeatureRenderer
	f	Ldwv;	a	context
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Ldla;Lsm;Lcyl;Ldqt;ILakz;FFF)V	a	renderModel
		p	0	model	model
		p	1	texture	texture
		p	2	matrices	matrices
		p	3	vertexConsumers	vertexConsumers
		p	4	light	light
		p	5	entity	entity
		p	6	red	red
		p	7	green	green
		p	8	blue	blue
	m	(Lakq;)Lsm;	a	getTexture
		p	1	entity	entity
	m	(Lcyl;Ldqt;ILakq;FFFFFF)V	a	render
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	entity	entity
		p	5	limbAngle	limbAngle
		p	6	limbDistance	limbDistance
		p	7	tickDelta	tickDelta
		p	8	customAngle	customAngle
		p	9	headYaw	headYaw
		p	10	headPitch	headPitch
	m	(Ldla;Ldla;Lsm;Lcyl;Ldqt;ILakz;FFFFFFFFF)V	a	render
		p	0	contextModel	contextModel
		p	1	model	model
		p	2	texture	texture
		p	3	matrices	matrices
		p	4	vertexConsumers	vertexConsumers
		p	5	light	light
		p	6	entity	entity
		p	7	limbAngle	limbAngle
		p	8	limbDistance	limbDistance
		p	9	age	age
		p	10	headYaw	headYaw
		p	11	headPitch	headPitch
		p	13	red	red
		p	14	green	green
		p	15	blue	blue
	m	()Ldla;	c	getContextModel
c	dze	net/minecraft/client/render/entity/feature/SheepWoolFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldmi;	b	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILatv;FFFFFF)V	a	render
c	dzf	net/minecraft/client/render/entity/feature/ShulkerHeadFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILaxe;FFFFFF)V	a	render
c	dzg	net/minecraft/client/render/entity/feature/SlimeOverlayFeatureRenderer
	f	Ldla;	a	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dzh	net/minecraft/client/render/entity/feature/SnowmanPumpkinFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILatx;FFFFFF)V	a	render
c	dzi	net/minecraft/client/render/entity/feature/SpiderEyesFeatureRenderer
	f	Ldrb;	a	SKIN
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
c	dzj	net/minecraft/client/render/entity/feature/TridentRiptideFeatureRenderer
	f	Lsm;	a	TEXTURE
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dzk	net/minecraft/client/render/entity/feature/StrayOverlayFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldmo;	b	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILala;FFFFFF)V	a	render
c	dzl	net/minecraft/client/render/entity/feature/StuckObjectsFeatureRenderer
	m	(Ldwc;)V	<init>	<init>
		p	1	entityRenderer	entityRenderer
	m	(Lakz;)I	a	getObjectCount
		p	1	entity	entity
	m	(Lcyl;Ldqt;ILakq;FFFF)V	a	renderObject
		p	1	matrix	matrix
		p	2	vertexConsumers	vertexConsumers
		p	5	tickDelta	tickDelta
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dzm	net/minecraft/client/render/entity/feature/TropicalFishSomethingFeatureRenderer
	f	Ldmv;	a	modelA
	f	Ldmw;	b	modelB
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILatz;FFFFFF)V	a	render
c	dzn	net/minecraft/client/render/entity/feature/VillagerClothingFeatureRenderer
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	LEVEL_TO_ID
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	b	villagerTypeToHat
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	c	professionToHat
	f	Lyz;	d	resourceManager
	f	Ljava/lang/String;	e	entityType
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lfo;Ljava/lang/Object;)Lebl$a;	a	getHatType
		p	1	hatLookUp	hatLookUp
		p	2	keyType	keyType
		p	3	registry	registry
		p	4	key	key
	m	(Ljava/lang/String;Lsm;)Lsm;	a	findTexture
		p	1	keyType	keyType
		p	2	keyId	keyId
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	a	render
c	dzo	net/minecraft/client/render/entity/feature/WitchHeldItemFeatureRenderer
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILakz;FFFFFF)V	render	render
c	dzp	net/minecraft/client/render/entity/feature/WitherArmorFeatureRenderer
	f	Lsm;	a	SKIN
	f	Ldnc;	b	model
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
c	dzq	net/minecraft/client/render/entity/feature/WolfCollarFeatureRenderer
	f	Lsm;	a	SKIN
	m	(Ldwv;)V	<init>	<init>
		p	1	context	context
	m	(Lcyl;Ldqt;ILauc;FFFFFF)V	a	render
c	dzt	net/minecraft/client/render/entity/PlayerEntityRenderer
	m	(Lcyl;Ldqt;ILdpy;Ldni;Ldni;)V	a	renderArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	player	player
		p	5	arm	arm
		p	6	sleeve	sleeve
	m	(Ldpy;Ljava/lang/String;Lcyl;Ldqt;I)V	a	renderLabelIfPresent
	m	(Ldpy;FFLcyl;Ldqt;I)V	a	render
	m	(Ldpy;)Lsm;	a	getTexture
	m	(Lcyl;Ldqt;ILdpy;)V	a	renderRightArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	player	player
	m	(Ldpy;Lcyl;FFF)V	a	setupTransforms
	m	(Ldpy;F)Lcvl;	a	getPositionOffset
	m	(Ldpy;Lcyl;F)V	a	scale
	m	(Ldpy;Lben;Lben;Lajk;)Ldlj$a;	a	getArmPose
	m	(Ldpy;)V	b	setModelPose
	m	(Lcyl;Ldqt;ILdpy;)V	b	renderLeftArm
		p	1	matrices	matrices
		p	2	vertexConsumers	vertexConsumers
		p	3	light	light
		p	4	player	player
c	dzw	net/minecraft/client/texture/AbstractTexture
	f	I	a	glId
	f	Z	b	bilinear
	f	Z	c	mipmap
	m	(Lzb;)V	a	load
		p	1	manager	manager
	m	(ZZ)V	a	setFilter
		p	1	bilinear	bilinear
		p	2	mipmap	mipmap
	m	(Leak;Lzb;Lsm;Ljava/util/concurrent/Executor;)V	a	registerTexture
	m	()I	b	getGlId
	m	()V	c	clearGlId
	m	()V	d	bindTexture
c	dzx	net/minecraft/client/render/model/SpriteAtlasManager
	f	Ljava/util/Map;	a	atlases
	m	(Leby;)Leaj;	a	getSprite
		p	1	id	id
	m	(Lsm;)Leai;	a	getAtlas
		p	1	id	id
c	dzy	net/minecraft/client/texture/NativeImageBackedTexture
	f	Lcxr;	d	image
	m	(IIZ)V	<init>	<init>
		p	1	width	width
		p	2	height	height
		p	3	useStb	useStb
	m	(Lcxr;)V	<init>	<init>
		p	1	image	image
	m	(Lcxr;)V	a	setImage
		p	1	image	image
	m	()V	a	upload
	m	()Lcxr;	e	getImage
c	dzz	net/minecraft/client/texture/PlayerSkinTexture
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	f	Ljava/io/File;	f	cacheFile
	f	Ljava/lang/String;	g	url
	f	Z	h	convertLegacy
	f	Ljava/lang/Runnable;	i	loadedCallback
	f	Ljava/util/concurrent/CompletableFuture;	j	loader
	f	Z	k	loaded
	m	(Ljava/io/File;Ljava/lang/String;Lsm;ZLjava/lang/Runnable;)V	<init>	<init>
		p	1	cacheFile	cacheFile
		p	2	url	url
		p	3	fallbackSkin	fallbackSkin
		p	4	convertLegacy	convertLegacy
		p	5	callback	callback
	m	(Lcxr;)V	a	onTextureLoaded
		p	1	image	image
	m	(Lcxr;IIII)V	a	stripColor
		p	0	image	image
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Ljava/io/InputStream;)Lcxr;	a	loadTexture
		p	1	stream	stream
	m	(Lcxr;IIII)V	b	stripAlpha
		p	0	image	image
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Lcxr;)V	b	uploadTexture
		p	1	image	image
	m	(Lcxr;)Lcxr;	c	remapTexture
		p	0	image	image
c	e	net/minecraft/client/util/math/Vector3f
	f	Le;	a	NEGATIVE_X
	f	Le;	b	POSITIVE_X
	f	Le;	c	NEGATIVE_Y
	f	Le;	d	POSITIVE_Y
	f	Le;	e	NEGATIVE_Z
	f	Le;	f	POSITIVE_Z
	f	F	g	x
	f	F	h	y
	f	F	i	z
	m	(Lcvl;)V	<init>	<init>
		p	1	other	other
	m	(FFF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()F	a	getX
	m	(FF)V	a	clamp
		p	1	min	min
		p	2	max	max
	m	(FFF)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Le;F)V	a	lerp
		p	1	vector	vector
		p	2	delta	delta
	m	(La;)V	a	transform
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V	a	modify
		p	1	function	function
	m	(Le;)V	a	add
		p	1	vector	vector
	m	(Lc;)V	a	rotate
		p	1	rotation	rotation
	m	(F)Lc;	a	getDegreesQuaternion
		p	1	angle	angle
	m	()F	b	getY
	m	(FFF)V	b	multiplyComponentwise
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(F)V	b	scale
		p	1	scale	scale
	m	(Le;)V	b	subtract
		p	1	other	other
	m	(FFF)V	c	add
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	()F	c	getZ
	m	(Le;)F	c	dot
		p	1	other	other
	m	(F)Lc;	c	getRadialQuaternion
		p	1	angle	angle
	m	(Le;)V	d	cross
		p	1	vector	vector
	m	()Z	d	normalize
	m	()Le;	e	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ea	net/minecraft/command/arguments/LookingPosArgument
	f	D	a	x
	f	D	b	y
	f	D	c	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcom/mojang/brigadier/StringReader;)Lea;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readCoordinate
		p	0	reader	reader
		p	1	startingCursorPos	startingCursorPos
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	eaa	net/minecraft/client/texture/LayeredTexture
	f	Ljava/util/List;	d	locations
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1	locations	locations
c	eab	net/minecraft/client/texture/MipmapHelper
	f	[F	a	COLOR_FRACTIONS
	m	(IIIII)I	a	getColorComponent
		p	0	one	one
		p	1	two	two
		p	2	three	three
		p	3	four	four
		p	4	bits	bits
	m	(I)F	a	getColorFraction
		p	0	value	value
	m	(IIIIZ)I	a	blend
		p	0	one	one
		p	1	two	two
		p	2	three	three
		p	3	four	four
		p	4	checkAlpha	checkAlpha
	m	(Lcxr;I)[Lcxr;	a	getMipmapLevelsImages
		p	0	image	image
		p	1	mipmap	mipmap
c	eac	net/minecraft/client/texture/MissingSprite
	f	Lsm;	b	MISSINGNO
	f	Ldzy;	c	texture
	f	Labn;	d	IMAGE
	f	Leaj$a;	e	INFO
	m	(Leai;IIIII)Leac;	a	getMissingSprite
	m	()Lsm;	a	getMissingSpriteId
	m	()Leaj$a;	b	getMissingInfo
	m	()Ldzy;	c	getMissingSpriteTexture
c	ead	net/minecraft/client/render/OverlayTexture
	f	I	a	DEFAULT_UV
	f	Ldzy;	b	texture
	m	(Z)I	a	getV
		p	0	hurt	hurt
	m	(FZ)I	a	getUv
		p	1	hurt	hurt
	m	(II)I	a	packUv
		p	0	u	u
		p	1	v	v
	m	()V	a	setupOverlayColor
	m	(F)I	a	getU
		p	0	whiteOverlayProgress	whiteOverlayProgress
	m	()V	b	teardownOverlayColor
c	eae	net/minecraft/client/texture/AsyncTexture
	f	Ljava/util/concurrent/CompletableFuture;	e	future
	m	()Ljava/util/concurrent/CompletableFuture;	a	getLoadCompleteFuture
c	eaf	net/minecraft/client/texture/ResourceTexture
	f	Lsm;	d	location
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	m	(Lsm;)V	<init>	<init>
		p	1	location	location
	m	(Lzb;)Leaf$a;	b	loadTextureData
		p	1	resourceManager	resourceManager
c	eaf$a	net/minecraft/client/texture/ResourceTexture$TextureData
	f	Lebs;	a	metadata
	f	Lcxr;	b	image
	f	Ljava/io/IOException;	c	exception
	m	(Lebs;Lcxr;)V	<init>	<init>
		p	1	metadata	metadata
		p	2	image	image
	m	(Ljava/io/IOException;)V	<init>	<init>
		p	1	exception	exception
	m	()Lebs;	a	getMetadata
	m	(Lzb;Lsm;)Leaf$a;	a	load
	m	()Lcxr;	b	getImage
	m	()V	c	checkException
c	eag	net/minecraft/client/texture/TextureStitcher
	f	Ljava/util/Comparator;	a	comparator
	f	I	b	mipLevel
	f	Ljava/util/Set;	c	holders
	f	Ljava/util/List;	d	slots
	f	I	e	width
	f	I	f	height
	f	I	g	maxWidth
	f	I	h	maxHeight
	m	(III)V	<init>	<init>
		p	1	maxWidth	maxWidth
		p	2	maxHeight	maxHeight
		p	3	mipLevel	mipLevel
	m	()I	a	getWidth
	m	(Leag$c;)V	a	getStitchedSprites
	m	(Leaj$a;)V	a	add
		p	1	info	info
	m	(Leag$a;)Z	a	fit
	m	()I	b	getHeight
	m	(II)I	b	applyMipLevel
		p	0	size	size
		p	1	mipLevel	mipLevel
	m	(Leag$a;)Z	b	growAndFit
	m	()V	c	stitch
c	eag$a	net/minecraft/client/texture/TextureStitcher$Holder
	f	Leaj$a;	a	sprite
	f	I	b	width
	f	I	c	height
	m	(Leaj$a;I)V	<init>	<init>
		p	1	sprite	sprite
		p	2	mipLevel	mipLevel
c	eag$b	net/minecraft/client/texture/TextureStitcher$Slot
	f	I	a	x
	f	I	b	y
	f	I	c	width
	f	I	d	height
	f	Ljava/util/List;	e	subSlots
	f	Leag$a;	f	texture
	m	(IIII)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	width	width
		p	4	height	height
	m	(Ljava/util/function/Consumer;)V	a	addAllFilledSlots
	m	(Leag$a;)Z	a	fit
	m	()Leag$a;	a	getTexture
	m	()I	b	getX
	m	()I	c	getY
c	eag$c	net/minecraft/client/texture/TextureStitcher$SpriteConsumer
c	eah	net/minecraft/client/texture/TextureStitcherCannotFitException
	f	Ljava/util/Collection;	a	sprites
	m	(Leaj$a;Ljava/util/Collection;)V	<init>	<init>
		p	1	sprite	sprite
		p	2	sprites	sprites
	m	()Ljava/util/Collection;	a	getSprites
c	eai	net/minecraft/client/texture/SpriteAtlasTexture
	f	Lsm;	d	BLOCK_ATLAS_TEX
	f	Lsm;	e	PARTICLE_ATLAS_TEX
	f	Lorg/apache/logging/log4j/Logger;	f	LOGGER
	f	Ljava/util/List;	g	animatedSprites
	f	Ljava/util/Set;	h	spritesToLoad
	f	Ljava/util/Map;	i	sprites
	f	Lsm;	j	id
	f	I	k	maxTextureSize
	m	(Leai$a;)V	a	upload
	m	(Lsm;)Leaj;	a	getSprite
		p	1	id	id
	m	(Lzb;Leaj$a;IIIII)Leaj;	a	loadSprite
		p	1	container	container
	m	(Lzb;Ljava/util/stream/Stream;Laio;I)Leai$a;	a	stitch
		p	1	resourceManager	resourceManager
		p	2	idStream	idStream
		p	3	profiler	profiler
		p	4	mipmapLevel	mipmapLevel
	m	(Lzb;Ljava/util/Set;)Ljava/util/Collection;	a	loadSprites
		p	1	resourceManager	resourceManager
		p	2	ids	ids
	m	()V	a	tickAnimatedSprites
	m	(Lsm;)Lsm;	b	getTexturePath
	m	()V	f	clear
	m	()Lsm;	g	getId
c	eai$a	net/minecraft/client/texture/SpriteAtlasTexture$Data
	f	Ljava/util/Set;	a	spriteIds
	f	I	b	width
	f	I	c	height
	f	Ljava/util/List;	e	sprites
	m	(Ljava/util/Set;IIILjava/util/List;)V	<init>	<init>
		p	1	spriteIds	spriteIds
		p	2	width	width
		p	3	height	height
c	eaj	net/minecraft/client/texture/Sprite
	f	[Lcxr;	a	images
	f	Leai;	b	atlas
	f	Leaj$a;	c	info
	f	Lebj;	d	animationMetadata
	f	[I	e	frameXs
	f	[I	f	frameYs
	f	Leaj$b;	g	interpolation
	f	I	h	x
	f	I	i	y
	f	F	j	uMin
	f	F	k	uMax
	f	F	l	vMin
	f	F	m	vMax
	f	I	n	frameIndex
	f	I	o	frameTicks
	m	(I)V	a	upload
		p	1	frame	frame
	m	(D)F	a	getFrameU
		p	1	frame	frame
	m	(III)Z	a	isPixelTransparent
		p	1	frame	frame
		p	2	x	x
		p	3	y	y
	m	(II[Lcxr;)V	a	upload
		p	1	frameX	frameX
		p	2	frameY	frameY
		p	3	output	output
	m	(Lcyo;)Lcyo;	a	getTextureSpecificVertexConsumer
	m	()F	a	getFrameDeltaFactor
	m	(D)F	b	getFrameV
		p	1	frame	frame
	m	()I	f	getWidth
	m	()I	g	getHeight
	m	()F	h	getMinU
	m	()F	i	getMaxU
	m	()F	j	getMinV
	m	()F	k	getMaxV
	m	()Lsm;	l	getId
	m	()Leai;	m	getAtlas
	m	()I	n	getFrameCount
	m	()V	o	upload
	m	()F	p	getAnimationFrameDelta
	m	()V	q	tickAnimation
	m	()Z	r	isAnimated
c	eaj$a	net/minecraft/client/texture/Sprite$Info
	f	Lsm;	a	id
	f	I	b	width
	f	I	c	height
	f	Lebj;	d	animationData
	m	(Lsm;IILebj;)V	<init>	<init>
		p	1	id	id
		p	2	width	width
		p	3	height	height
		p	4	animationData	animationData
	m	()Lsm;	a	getId
	m	()I	b	getWidth
	m	()I	c	getHeight
c	eaj$b	net/minecraft/client/texture/Sprite$Interpolation
	f	[Lcxr;	b	images
	m	(Leaj;Leaj$a;I)V	<init>	<init>
		p	3	mipmap	mipmap
c	eak	net/minecraft/client/texture/TextureManager
	f	Lsm;	a	MISSING_IDENTIFIER
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	textures
	f	Ljava/util/Set;	d	tickListeners
	f	Ljava/util/Map;	e	dynamicIdCounters
	f	Lzb;	f	resourceContainer
	m	(Lzb;)V	<init>	<init>
		p	1	resourceManager	resourceManager
	m	(Lsm;Ldzw;)V	a	registerTexture
	m	(Lsm;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadTextureAsync
		p	1	id	id
		p	2	executor	executor
	m	(Ljava/lang/String;Ldzy;)Lsm;	a	registerDynamicTexture
		p	1	prefix	prefix
		p	2	texture	texture
	m	(Ljava/lang/Runnable;)V	a	runOnRenderThread
		p	0	runnable	runnable
	m	(Lsm;)V	a	bindTexture
		p	1	id	id
	m	(Lsm;)Ldzw;	b	getTexture
		p	1	id	id
	m	(Lsm;)V	c	destroyTexture
		p	1	id	id
	m	(Lsm;)V	d	bindTextureInner
		p	1	id	id
c	eal	net/minecraft/client/texture/TextureTickListener
	m	()V	e	tick
c	ean	net/minecraft/client/resource/ResourceIndex
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	index
	m	(Ljava/io/File;Ljava/lang/String;)V	<init>	<init>
		p	1	directory	directory
		p	2	indexName	indexName
	m	(Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	getFilesRecursively
	m	(Ljava/lang/String;)Ljava/io/File;	a	findFile
		p	1	path	path
	m	(Lsm;)Ljava/io/File;	a	getResource
		p	1	identifier	identifier
c	eao	net/minecraft/client/resource/ClientBuiltinResourcePackProvider
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/regex/Pattern;	b	ALPHANUMERAL
	f	Lyh;	c	pack
	f	Ljava/io/File;	d	serverPacksRoot
	f	Ljava/util/concurrent/locks/ReentrantLock;	e	lock
	f	Lean;	f	index
	f	Ljava/util/concurrent/CompletableFuture;	g	downloadTask
	f	Lebc;	h	serverContainer
	m	(Ljava/io/File;Lean;)V	<init>	<init>
		p	1	serverPacksRoot	serverPacksRoot
		p	2	index	index
	m	(Ljava/io/File;)Ljava/util/concurrent/CompletableFuture;	a	loadServerPack
		p	1	packZip	packZip
	m	(Ljava/lang/String;Ljava/io/File;)Z	a	verifyFile
		p	1	expectedSha1	expectedSha1
		p	2	rfile	rfile
	m	()Lyh;	a	getPack
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	download
	m	()Ljava/util/Map;	b	getDownloadHeaders
	m	(Ljava/io/File;)V	b	delete
		p	0	file	file
	m	()V	c	clear
	m	()V	d	deleteOldServerPack
c	eap	net/minecraft/client/resource/DefaultClientResourcePack
	f	Lean;	d	index
c	eaq	net/minecraft/client/util/DefaultSkinHelper
	f	Lsm;	a	STEVE_SKIN
	f	Lsm;	b	ALEX_SKIN
	m	()Lsm;	a	getTexture
	m	(Ljava/util/UUID;)Lsm;	a	getTexture
		p	0	uuid	uuid
	m	(Ljava/util/UUID;)Ljava/lang/String;	b	getModel
		p	0	uuid	uuid
	m	(Ljava/util/UUID;)Z	c	shouldUseSlimModel
		p	0	uuid	uuid
c	ear	net/minecraft/client/resource/DirectResourceIndex
	f	Ljava/io/File;	b	assetDir
	m	(Ljava/io/File;)V	<init>	<init>
		p	1	assetDir	assetDir
c	eas	net/minecraft/client/resource/FoliageColormapResourceSupplier
	f	Lsm;	a	FOLIAGE_COLORMAP
	m	(Lzb;Laio;)[I	a	reload
		p	1	resourceManager	resourceManager
	m	([ILzb;Laio;)V	a	apply
c	eat	net/minecraft/client/resource/GrassColormapResourceSupplier
	f	Lsm;	a	GRASS_COLORMAP_LOC
	m	([ILzb;Laio;)V	a	apply
c	eau	net/minecraft/client/resource/Format3ResourcePack
	f	Ljava/util/Map;	a	NEW_TO_OLD_MAP
	f	Lye;	b	parent
	f	Ljava/util/Map;	c	idMap
	m	(Lsm;)Lsm;	a	getMetadataLocation
	m	(Lsm;)Lsm;	b	getRedirectedId
c	eav	net/minecraft/client/util/RawTextureDataLoader
	m	(Lzb;Lsm;)[I	a	loadRawTextureData
c	eaw	net/minecraft/client/texture/StatusEffectSpriteManager
	m	(Leak;)V	<init>	<init>
		p	1	textureManager	textureManager
	m	(Laki;)Leaj;	a	getSprite
		p	1	effect	effect
c	eax	net/minecraft/client/resource/Format4ResourcePack
	f	Lsm;	a	OLD_SHIELD_BASE_TEXTURE
	f	Lsm;	b	OLD_BANNER_BASE_TEXTURE
	f	Lsm;	c	IRON_GOLEM_TEXTURE
	f	Ljava/util/Map;	d	NEW_TO_OLD_CHEST_TEXTURES
	f	Ljava/util/List;	e	BANNER_PATTERN_TYPES
	f	Ljava/util/Set;	f	SHIELD_PATTERN_TEXTURES
	f	Ljava/util/Set;	g	BANNER_PATTERN_TEXTURES
	f	Lye;	h	parent
	m	(Lye;)V	<init>	<init>
		p	1	parent	parent
	m	(Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream;	a	openCroppedStream
	m	(Lcxr;Lcxr;IIIIIIIZZ)V	a	loadBytes
		p	0	source	source
		p	1	target	target
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	cropLeftChestTexture
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	cropRightChestTexture
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	cropSingleChestTexture
c	eay	net/minecraft/client/texture/PaintingManager
	f	Lsm;	a	PAINTING_BACK_ID
	m	(Lavt;)Leaj;	a	getPaintingSprite
		p	1	motive	motive
	m	()Leaj;	b	getBackSprite
c	eaz	net/minecraft/client/texture/PlayerSkinProvider
	f	Leak;	a	textureManager
	f	Ljava/io/File;	b	skinCacheDir
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	f	Lcom/google/common/cache/LoadingCache;	d	skinCache
	m	(Leak;Ljava/io/File;Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	skinCacheDir	skinCacheDir
		p	3	sessionService	sessionService
	m	(Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lsm;	a	loadSkin
		p	1	profileTexture	profileTexture
		p	2	type	type
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/Map;	a	getTextures
		p	1	profile	profile
	m	(Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Leaz$a;)Lsm;	a	loadSkin
		p	1	profileTexture	profileTexture
		p	2	type	type
		p	3	callback	callback
	m	(Lcom/mojang/authlib/GameProfile;Leaz$a;Z)V	a	loadSkin
		p	1	profile	profile
		p	2	callback	callback
		p	3	requireSecure	requireSecure
c	eaz$1	net/minecraft/client/texture/PlayerSkinProvider$1
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/Map;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
		p	1	profile	profile
c	eaz$a	net/minecraft/client/texture/PlayerSkinProvider$SkinTextureAvailableCallback
	m	(Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lsm;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V	onSkinTextureAvailable	onSkinTextureAvailable
		p	3	texture	texture
c	eb	net/minecraft/command/arguments/RotationArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_ROTATION_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldz;	a	getRotation
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ldz;	a	parse
	m	()Leb;	a	rotation
c	eba	net/minecraft/client/resource/SplashTextResourceSupplier
	f	Lsm;	a	RESOURCE_ID
	f	Ljava/util/Random;	b	RANDOM
	f	Ljava/util/List;	c	splashTexts
	m	()Ljava/lang/String;	a	get
	m	(Lzb;Laio;)Ljava/util/List;	a	prepare
	m	(Ljava/util/List;Lzb;Laio;)V	a	apply
c	ebb	net/minecraft/client/texture/SpriteAtlasHolder
	f	Leai;	a	atlas
	f	Ljava/lang/String;	b	pathPrefix
	m	(Leak;Lsm;Ljava/lang/String;)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	atlasId	atlasId
		p	3	pathPrefix	pathPrefix
	m	(Lsm;)Leaj;	a	getSprite
		p	1	objectId	objectId
	m	(Leai$a;Lzb;Laio;)V	a	apply
	m	(Lzb;Laio;)Leai$a;	a	prepare
	m	()Ljava/util/stream/Stream;	a	getSprites
	m	(Lsm;)Lsm;	b	toSpriteId
		p	1	objectId	objectId
c	ebc	net/minecraft/client/resource/ClientResourcePackProfile
	f	Lcxr;	a	icon
	f	Lsm;	b	iconId
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lye;Lyj;Lyt$a;)V	<init>	<init>
		p	1	name	name
		p	2	notSorting	notSorting
		p	3	packCreator	packCreator
		p	4	pack	pack
		p	5	metadata	metadata
		p	6	direction	direction
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Llf;Llf;Lyp;Lyt$a;ZLcxr;)V	<init>	<init>
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	displayName	displayName
		p	5	description	description
		p	6	compatibility	compatibility
		p	8	pinned	pinned
		p	9	icon	icon
	m	(Leak;)V	a	drawIcon
		p	1	manager	manager
c	ebd	net/minecraft/client/resource/language/I18n
	f	Lebg;	a	storage
	m	(Lebg;)V	a	setLanguage
		p	0	storage	storage
	m	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;	a	translate
		p	0	key	key
		p	1	args	args
	m	(Ljava/lang/String;)Z	a	hasTranslation
		p	0	key	key
c	ebe	net/minecraft/client/resource/language/LanguageDefinition
	f	Ljava/lang/String;	a	code
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/String;	c	region
	f	Z	d	rightToLeft
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
		p	1	code	code
		p	2	name	name
		p	3	region	region
	m	()Z	a	isRightToLeft
	m	(Lebe;)I	a	compareTo
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ebf	net/minecraft/client/resource/language/LanguageManager
	f	Lebg;	a	STORAGE
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	currentLanguageCode
	f	Ljava/util/Map;	d	languageDefs
	m	(Ljava/util/List;)V	a	reloadResources
	m	(Lebe;)V	a	setLanguage
	m	()Z	a	isRightToLeft
	m	(Ljava/lang/String;)Lebe;	a	getLanguage
		p	1	code	code
	m	()Lebe;	b	getLanguage
	m	()Ljava/util/SortedSet;	c	getAllLanguages
c	ebg	net/minecraft/client/resource/language/TranslationStorage
	f	Ljava/util/Map;	a	translations
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/util/regex/Pattern;	d	PARAM_PATTERN
	m	(Ljava/util/List;)V	a	load
	m	(Lzb;Ljava/util/List;)V	a	load
		p	1	container	container
	m	(Ljava/lang/String;)Z	a	containsKey
	m	(Ljava/io/InputStream;)V	a	load
	m	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;	a	translate
		p	1	key	key
	m	(Ljava/lang/String;)Ljava/lang/String;	b	get
c	ebi	net/minecraft/client/resource/metadata/AnimationFrameResourceMetadata
	f	I	a	index
	f	I	b	time
	m	(II)V	<init>	<init>
		p	1	index	index
		p	2	time	time
	m	(I)V	<init>	<init>
		p	1	index	index
	m	()Z	a	usesDefaultFrameTime
	m	()I	b	getTime
	m	()I	c	getIndex
c	ebj	net/minecraft/client/resource/metadata/AnimationResourceMetadata
	f	Lebk;	a	READER
	f	Lebj;	b	EMPTY
	f	Ljava/util/List;	c	frames
	f	I	d	width
	f	I	e	height
	f	I	f	defaultFrameTime
	f	Z	g	interpolate
	m	(Ljava/util/List;IIIZ)V	<init>	<init>
		p	1	frames	frames
		p	2	width	width
		p	3	height	height
		p	4	defaultFrameTime	defaultFrameTime
		p	5	interpolate	interpolate
	m	()I	a	getFrameCount
	m	(I)I	a	getHeight
	m	(I)I	b	getWidth
	m	()I	b	getDefaultFrameTime
	m	(I)I	c	getFrameTime
		p	1	frameIndex	frameIndex
	m	()Z	c	shouldInterpolate
	m	()Ljava/util/Set;	d	getFrameIndexSet
	m	(I)I	e	getFrameIndex
		p	1	frameIndex	frameIndex
	m	(I)Lebi;	f	getFrame
		p	1	frameIndex	frameIndex
c	ebk	net/minecraft/client/resource/metadata/AnimationResourceMetadataReader
	m	(ILcom/google/gson/JsonElement;)Lebi;	a	readFrameMetadata
		p	1	frame	frame
		p	2	json	json
	m	(Lcom/google/gson/JsonObject;)Lebj;	b	fromJson
c	ebl	net/minecraft/client/render/entity/feature/VillagerResourceMetadata
	f	Lebm;	a	READER
	f	Lebl$a;	b	hatType
	m	()Lebl$a;	a	getHatType
c	ebl$a	net/minecraft/client/render/entity/feature/VillagerResourceMetadata$HatType
	f	Ljava/util/Map;	d	byName
	f	Ljava/lang/String;	e	name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lebl$a;	a	from
c	ebm	net/minecraft/client/render/entity/feature/VillagerResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Lebl;	b	fromJson
c	ebo	net/minecraft/client/resource/metadata/LanguageResourceMetadata
	f	Lebp;	a	READER
	f	Ljava/util/Collection;	b	definitions
	m	()Ljava/util/Collection;	a	getLanguageDefinitions
c	ebp	net/minecraft/client/resource/metadata/LanguageResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Lebo;	b	fromJson
c	ebs	net/minecraft/client/resource/metadata/TextureResourceMetadata
	f	Lebt;	a	READER
	f	Z	b	blur
	f	Z	c	clamp
	m	(ZZ)V	<init>	<init>
		p	1	blur	blur
	m	()Z	a	shouldBlur
	m	()Z	b	shouldClamp
c	ebt	net/minecraft/client/resource/metadata/TextureResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Lebs;	b	fromJson
c	ebv	net/minecraft/client/render/model/BakedModel
	m	(Lbyj;Lfp;Ljava/util/Random;)Ljava/util/List;	a	getQuads
		p	1	state	state
		p	2	face	face
		p	3	random	random
	m	()Z	a	useAmbientOcclusion
	m	()Z	b	hasDepth
	m	()Z	c	isSideLit
		c	Allows control of the lighting when rendering a model in a GUI.\n<p>\nTrue, the model will be lit from the side, like a block.\n<p>\nFalse, the model will be lit from the front, like an item.
	m	()Z	d	isBuiltin
	m	()Leaj;	e	getSprite
	m	()Ldrz;	f	getTransformation
	m	()Ldrx;	g	getItemPropertyOverrides
c	ebw	net/minecraft/client/render/model/ModelRotation
	f	Ljava/util/Map;	q	BY_INDEX
	f	I	r	index
	f	Lc;	s	quaternion
	f	I	t	xRotations
	f	I	u	yRotations
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3	x	x
		p	4	y	y
	m	(II)Lebw;	a	get
		p	0	x	x
		p	1	y	y
	m	(II)I	b	getIndex
		p	0	x	x
		p	1	y	y
c	ebx	net/minecraft/client/render/model/BuiltinBakedModel
	f	Ldrz;	a	transformation
	f	Ldrx;	b	itemPropertyOverrides
	f	Leaj;	c	sprite
	m	(Ldrz;Ldrx;Leaj;Z)V	<init>	<init>
		p	1	transformation	transformation
		p	2	itemPropertyOverrides	itemPropertyOverrides
		p	3	sprite	sprite
c	eby	net/minecraft/client/util/SpriteIdentifier
	f	Lsm;	a	atlas
	f	Lsm;	b	texture
	f	Ldrb;	c	layer
	m	(Lsm;Lsm;)V	<init>	<init>
		p	1	atlas	atlas
		p	2	texture	texture
	m	(Ldqt;Ljava/util/function/Function;)Lcyo;	a	getVertexConsumer
		p	1	vertexConsumers	vertexConsumers
		p	2	layerFactory	layerFactory
	m	(Ljava/util/function/Function;)Ldrb;	a	getRenderLayer
		p	1	layerFactory	layerFactory
	m	()Lsm;	a	getAtlasId
	m	()Lsm;	b	getTextureId
	m	()Leaj;	c	getSprite
c	ebz	net/minecraft/client/render/model/ModelLoader
	f	Ldcb;	A	colorationManager
	f	Ljava/util/Set;	B	modelsToLoad
	f	Ldrt$a;	C	variantMapDeserializationContext
	f	Ljava/util/Map;	D	unbakedModels
	f	Ljava/util/Map;	E	bakedModelCache
	f	Ljava/util/Map;	F	modelsToBake
	f	Ljava/util/Map;	G	bakedModels
	f	Ljava/util/Map;	H	spriteAtlasData
	f	I	I	nextStateId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	J	stateLookup
	f	Leby;	a	FIRE_0
	f	Leby;	b	FIRE_1
	f	Leby;	c	LAVA_FLOW
	f	Leby;	d	WATER_FLOW
	f	Leby;	e	WATER_OVERLAY
	f	Leby;	f	BANNER_BASE
	f	Leby;	g	SHIELD_BASE
	f	Leby;	h	SHIELD_BASE_NO_PATTERN
	f	Ljava/util/List;	i	BLOCK_DESTRUCTION_STAGES
	f	Ljava/util/List;	j	BLOCK_DESTRUCTION_STAGE_TEXTURES
	f	Ljava/util/List;	k	BLOCK_DESTRUCTION_RENDER_LAYERS
	f	Lecb;	l	MISSING
	f	Ljava/lang/String;	m	MISSING_DEFINITION
	f	Ldrs;	n	GENERATION_MARKER
	f	Ldrs;	o	BLOCK_ENTITY_MARKER
	f	Ljava/util/Set;	p	DEFAULT_TEXTURES
	f	Lorg/apache/logging/log4j/Logger;	q	LOGGER
	f	Ljava/util/Map;	s	BUILTIN_MODEL_DEFINITIONS
	f	Lcom/google/common/base/Splitter;	t	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	u	KEY_VALUE_SPLITTER
	f	Lbyk;	v	ITEM_FRAME_STATE_FACTORY
	f	Ldrv;	w	ITEM_MODEL_GENERATOR
	f	Ljava/util/Map;	x	STATIC_DEFINITIONS
	f	Lzb;	y	resourceManager
	f	Ldzx;	z	spriteAtlasManager
	m	(Lzb;Ldcb;Laio;I)V	<init>	<init>
		p	1	resourceManager	resourceManager
	m	(Ljava/lang/Iterable;)V	a	addStates
		p	1	states	states
	m	(Leak;Laio;)Ldzx;	a	upload
	m	(Lecb;)V	a	addModel
		p	1	modelId	modelId
	m	(Lsm;Lecf;)V	a	putModel
		p	1	id	id
		p	2	unbakedModel	unbakedModel
	m	(Lbzm;Ljava/lang/String;)Ljava/lang/Comparable;	a	getPropertyValue
		p	0	property	property
		p	1	string	string
	m	(Lbyk;Ljava/lang/String;)Ljava/util/function/Predicate;	a	stateKeyToPredicate
		p	0	stateFactory	stateFactory
		p	1	key	key
	m	(Lsm;)Lecf;	a	getOrLoadModel
		p	1	id	id
	m	()Ljava/util/Map;	a	getBakedModelMap
	m	(Lsm;Lecc;)Lebv;	a	bake
		p	2	settings	settings
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getStateLookup
	m	(Lsm;)V	b	loadModel
		p	1	id	id
	m	(Lsm;)Ldrs;	c	loadModelFromJson
		p	1	id	id
c	ebz$a	net/minecraft/client/render/model/ModelLoader$ModelLoaderException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	message	message
c	ebz$b	net/minecraft/client/render/model/ModelLoader$ModelDefinition
	f	Ljava/util/List;	a	components
	f	Ljava/util/List;	b	values
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1	components	components
		p	2	values	values
	m	(Lbyj;Ldsf;Ljava/util/Collection;)Lebz$b;	a	create
		p	0	state	state
		p	1	rawModel	rawModel
		p	2	properties	properties
	m	(Lbyj;Ljava/util/Collection;)Ljava/util/List;	a	getStateValues
		p	0	state	state
		p	1	properties	properties
	m	(Lbyj;Lecf;Ljava/util/Collection;)Lebz$b;	a	create
		p	0	state	state
		p	1	rawModel	rawModel
		p	2	properties	properties
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ec	net/minecraft/command/arguments/SwizzleArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_SWIZZLE_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	()Lec;	a	swizzle
c	eca	net/minecraft/client/render/model/BakedModelManager
	f	Ljava/util/Map;	a	models
	f	Ldzx;	b	atlasManager
	f	Ldrj;	c	blockModelCache
	f	Leak;	d	textureManager
	f	Ldcb;	e	colorMap
	f	I	f	mipmap
	f	Lebv;	g	missingModel
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	h	stateLookup
	m	(Leak;Ldcb;I)V	<init>	<init>
		p	1	textureManager	textureManager
		p	2	colorMap	colorMap
		p	3	mipmap	mipmap
	m	(I)V	a	resetMipmapLevels
	m	(Lbyj;Lbyj;)Z	a	shouldRerender
		p	1	from	from
		p	2	to	to
	m	(Lzb;Laio;)Lebz;	a	prepare
	m	(Lecb;)Lebv;	a	getModel
		p	1	id	id
	m	(Lebz;Lzb;Laio;)V	a	apply
	m	()Lebv;	a	getMissingModel
	m	()Ldrj;	b	getBlockModels
c	ecb	net/minecraft/client/util/ModelIdentifier
	f	Ljava/lang/String;	c	variant
	m	(Lsm;Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	variant	variant
	m	()Ljava/lang/String;	c	getVariant
	m	(Ljava/lang/String;)[Ljava/lang/String;	c	split
		p	0	id	id
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ecc	net/minecraft/client/render/model/ModelBakeSettings
	m	()Ld;	b	getRotation
	m	()Z	c	isShaded
c	ecd	net/minecraft/client/render/model/MultipartBakedModel
	f	Z	a	ambientOcclusion
	f	Z	b	depthGui
	f	Leaj;	d	sprite
	f	Ldrz;	e	transformations
	f	Ldrx;	f	itemPropertyOverrides
	f	Ljava/util/List;	g	components
	f	Ljava/util/Map;	h	stateCache
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	components	components
c	ecd$a	net/minecraft/client/render/model/MultipartBakedModel$Builder
	f	Ljava/util/List;	a	components
	m	(Ljava/util/function/Predicate;Lebv;)V	a	addComponent
		p	1	predicate	predicate
		p	2	model	model
	m	()Lebv;	a	build
c	ece	net/minecraft/client/render/model/BasicBakedModel
	f	Ljava/util/List;	a	quads
	f	Ljava/util/Map;	b	faceQuads
	f	Z	c	usesAo
	f	Z	d	hasDepth
	f	Z	e	isSideLit
	f	Leaj;	f	sprite
	f	Ldrz;	g	transformation
	f	Ldrx;	h	itemPropertyOverrides
	m	(Ljava/util/List;Ljava/util/Map;ZZZLeaj;Ldrz;Ldrx;)V	<init>	<init>
		p	1	quads	quads
		p	2	faceQuads	faceQuads
		p	3	usesAo	usesAo
		p	4	isSideLit	isSideLit
		p	5	hasDepth	hasDepth
c	ece$a	net/minecraft/client/render/model/BasicBakedModel$Builder
	f	Ljava/util/List;	a	quads
	f	Ljava/util/Map;	b	faceQuads
	f	Ldrx;	c	itemPropertyOverrides
	f	Z	d	usesAo
	f	Leaj;	e	particleTexture
	f	Z	f	isSideLit
	f	Z	g	hasDepth
	f	Ldrz;	h	transformation
	m	(Ldrs;Ldrx;Z)V	<init>	<init>
		p	1	unbakedModel	unbakedModel
		p	2	itemPropertyOverrides	itemPropertyOverrides
		p	3	hasDepth	hasDepth
	m	(ZZZLdrz;Ldrx;)V	<init>	<init>
		p	1	usesAo	usesAo
		p	2	isSideLit	isSideLit
		p	3	hasDepth	hasDepth
	m	(Leaj;)Lece$a;	a	setParticle
		p	1	sprite	sprite
	m	(Ldrn;)Lece$a;	a	addQuad
		p	1	quad	quad
	m	(Lfp;Ldrn;)Lece$a;	a	addQuad
		p	1	side	side
		p	2	quad	quad
	m	()Lebv;	b	build
c	ecf	net/minecraft/client/render/model/UnbakedModel
	m	(Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection;	a	getTextureDependencies
		p	1	unbakedModelGetter	unbakedModelGetter
		p	2	unresolvedTextureReferences	unresolvedTextureReferences
	m	(Lebz;Ljava/util/function/Function;Lecc;Lsm;)Lebv;	a	bake
		p	1	loader	loader
		p	2	textureGetter	textureGetter
		p	3	rotationContainer	rotationContainer
		p	4	modelId	modelId
	m	()Ljava/util/Collection;	f	getModelDependencies
c	ecg	net/minecraft/client/render/model/WeightedBakedModel
	f	I	a	totalWeight
	f	Ljava/util/List;	b	models
	f	Lebv;	c	defaultModel
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	models	models
c	ecg$a	net/minecraft/client/render/model/WeightedBakedModel$Builder
	f	Ljava/util/List;	a	models
	m	(Lebv;I)Lecg$a;	a	add
		p	1	model	model
		p	2	weight	weight
	m	()Lebv;	a	getFirst
c	ecg$b	net/minecraft/client/render/model/WeightedBakedModel$Entry
	f	Lebv;	b	model
	m	(Lebv;I)V	<init>	<init>
		p	1	model	model
		p	2	weight	weight
c	ecj	net/minecraft/client/sound/AbstractSoundInstance
	f	Lecw;	a	sound
	f	Laaj;	b	category
	f	Lsm;	c	id
	f	F	d	volume
	f	F	e	pitch
	f	F	f	x
	f	F	g	y
	f	F	h	z
	f	Z	i	repeat
	f	I	j	repeatDelay
	f	Lecz$a;	k	attenuationType
	f	Z	m	looping
	f	Leea;	n	soundSet
	m	(Lsm;Laaj;)V	<init>	<init>
		p	1	soundId	soundId
		p	2	category	category
	m	(Laah;Laaj;)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
c	eck	net/minecraft/client/sound/MovingSoundInstance
	f	Z	n	done
	m	(Laah;Laaj;)V	<init>	<init>
		p	1	sound	sound
c	ecl	net/minecraft/client/util/ClientPlayerTickable
	m	()V	a	tick
c	ecm	net/minecraft/client/sound/AggressiveBeeSoundInstance
c	ecn	net/minecraft/client/sound/PassiveBeeSoundInstance
c	eco	net/minecraft/client/sound/AbstractBeeSoundInstance
	f	Latd;	o	bee
	f	Z	p	replaced
	m	()Leck;	o	getReplacement
	m	()Z	p	shouldReplace
	m	()F	s	getMinPitch
	m	()F	t	getMaxPitch
c	ecp	net/minecraft/client/sound/BubbleColumnSoundPlayer
	f	Ldqb;	a	player
	f	Z	b	hasPlayedForCurrentColumn
	f	Z	c	firstTick
	m	(Ldqb;)V	<init>	<init>
		p	1	player	player
c	ecq	net/minecraft/client/sound/ElytraSoundInstance
	f	Ldqb;	o	player
	f	I	p	tickCount
	m	(Ldqb;)V	<init>	<init>
		p	1	player	player
c	ecr	net/minecraft/client/sound/EntityTrackingSoundInstance
	f	Lakq;	o	entity
	m	(Laah;Laaj;Lakq;)V	<init>	<init>
		p	1	sound	sound
	m	(Laah;Laaj;FFLakq;)V	<init>	<init>
		p	1	sound	sound
		p	3	volume	volume
		p	4	pitch	pitch
c	ecs	net/minecraft/client/sound/GuardianAttackSoundInstance
	f	Laws;	o	guardian
	m	(Laws;)V	<init>	<init>
		p	1	guardian	guardian
c	ect	net/minecraft/client/sound/RidingMinecartSoundInstance
	f	Lazx;	o	minecart
	f	F	p	distance
	m	(Lazx;)V	<init>	<init>
		p	1	minecart	minecart
c	ecu	net/minecraft/client/sound/MinecartSoundInstance
	f	Layj;	o	player
	f	Lazx;	p	minecart
	m	(Layj;Lazx;)V	<init>	<init>
		p	1	player	player
		p	2	minecart	minecart
c	ecv	net/minecraft/client/sound/PositionedSoundInstance
	m	(Laah;Laaj;FFFFF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
		p	5	x	x
		p	6	y	y
		p	7	z	z
	m	(Laah;Laaj;FFZILecz$a;FFF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
		p	5	repeat	repeat
		p	6	repeatDelay	repeatDelay
		p	7	attenuationType	attenuationType
		p	8	x	x
		p	9	y	y
		p	10	z	z
	m	(Laah;Laaj;FFLfk;)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
	m	(Lsm;Laaj;FFZILecz$a;FFFZ)V	<init>	<init>
		p	1	id	id
		p	2	category	category
		p	3	volume	volume
		p	4	pitch	pitch
		p	5	repeat	repeat
		p	6	repeatDelay	repeatDelay
		p	7	attenuationType	attenuationType
		p	8	x	x
		p	9	y	y
		p	10	z	z
		p	11	looping	looping
	m	(Laah;F)Lecv;	a	master
		p	0	sound	sound
		p	1	volume	volume
	m	(Laah;)Lecv;	a	music
		p	0	sound	sound
	m	(Laah;FFF)Lecv;	a	record
		p	0	sound	sound
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Laah;FF)Lecv;	a	master
		p	0	sound	sound
		p	1	volume	volume
		p	2	pitch	pitch
c	ecw	net/minecraft/client/sound/Sound
	f	Lsm;	a	id
	f	F	b	volume
	f	F	c	pitch
	f	I	d	weight
	f	Lecw$a;	e	registrationType
	f	Z	f	stream
	f	Z	g	preload
	f	I	h	attenuation
	m	(Ljava/lang/String;FFILecw$a;ZZI)V	<init>	<init>
		p	1	id	id
		p	2	volume	volume
		p	3	pitch	pitch
		p	4	weight	weight
		p	5	registrationType	registrationType
		p	6	stream	stream
		p	7	preload	preload
		p	8	attenuation	attenuation
	m	()Lsm;	a	getIdentifier
	m	()Lsm;	b	getLocation
	m	()F	c	getVolume
	m	()F	d	getPitch
	m	()Lecw;	f	getSound
	m	()Lecw$a;	g	getRegistrationType
	m	()Z	h	isStreamed
	m	()Z	i	isPreloaded
	m	()I	j	getAttenuation
c	ecw$a	net/minecraft/client/sound/Sound$RegistrationType
	f	Lecw$a;	b	SOUND_EVENT
	f	Ljava/lang/String;	c	name
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	(Ljava/lang/String;)Lecw$a;	a	getByName
c	ecx	net/minecraft/client/sound/SoundEntry
	f	Ljava/util/List;	a	sounds
	f	Z	b	replace
	f	Ljava/lang/String;	c	subtitle
	m	(Ljava/util/List;ZLjava/lang/String;)V	<init>	<init>
		p	1	sounds	sounds
		p	2	replace	replace
		p	3	subtitle	subtitle
	m	()Ljava/util/List;	a	getSounds
	m	()Z	b	canReplace
	m	()Ljava/lang/String;	c	getSubtitle
c	ecy	net/minecraft/client/sound/SoundEntryDeserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lecx;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lecw$a;)Lecw$a;	a	deserializeType
		p	1	json	json
		p	2	fallback	fallback
	m	(Lcom/google/gson/JsonObject;)Ljava/util/List;	a	deserializeSounds
		p	1	json	json
	m	(Lcom/google/gson/JsonObject;)Lecw;	b	deserializeSound
		p	1	json	json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	ecz	net/minecraft/client/sound/SoundInstance
	m	(Ledz;)Leea;	a	getSoundSet
		p	1	soundManager	soundManager
	m	()Lsm;	a	getId
	m	()Lecw;	b	getSound
	m	()Laaj;	c	getCategory
	m	()Z	d	isRepeatable
	m	()I	e	getRepeatDelay
	m	()F	f	getVolume
	m	()F	g	getPitch
	m	()F	h	getX
	m	()F	i	getY
	m	()F	j	getZ
	m	()Lecz$a;	k	getAttenuationType
	m	()Z	m	isLooping
	m	()Z	r	shouldAlwaysPlay
c	ecz$a	net/minecraft/client/sound/SoundInstance$AttenuationType
c	ed	net/minecraft/command/arguments/Vec2ArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_EXCEPTION
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Z	c	centerIntegers
	m	(Z)V	<init>	<init>
		p	1	centerIntegers	centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcvk;	a	getVec2
		p	0	context	context
		p	1	name	name
	m	()Led;	a	vec2
	m	(Lcom/mojang/brigadier/StringReader;)Ldz;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eda	net/minecraft/client/sound/TickableSoundInstance
	m	()Z	n	isDone
	m	()V	q	tick
c	edb	net/minecraft/client/sound/AmbientSoundPlayer
	f	Ldqb;	a	player
	f	Ledz;	b	soundManager
	f	I	c	ticksUntilPlay
	m	(Ldqb;Ledz;)V	<init>	<init>
		p	1	player	player
c	edc	net/minecraft/client/sound/AmbientSoundLoops
c	edc$a	net/minecraft/client/sound/AmbientSoundLoops$MusicLoop
	f	Ldqb;	o	player
	m	(Ldqb;Laah;)V	<init>	<init>
		p	1	player	player
		p	2	soundEvent	soundEvent
c	edc$b	net/minecraft/client/sound/AmbientSoundLoops$Underwater
	f	Ldqb;	o	player
	f	I	p	transitionTimer
c	ede	net/minecraft/client/search/SearchableContainer
	m	()V	a	clear
	m	(Ljava/lang/Object;)V	a	add
	m	()V	b	reload
c	edf	net/minecraft/client/search/IdentifierSearchableContainer
	f	Ledj;	a	byNamespace
	f	Ledj;	b	byPath
	f	Ljava/util/function/Function;	c	identifierFinder
	f	Ljava/util/List;	d	entries
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	entryIds
	m	(Ljava/lang/Object;Ljava/lang/Object;)I	a	compare
		p	1	object1	object1
		p	2	object2	object2
	m	(Ljava/lang/Object;)V	b	index
c	edf$a	net/minecraft/client/search/IdentifierSearchableContainer$Iterator
c	edg	net/minecraft/client/search/TextSearchableContainer
	f	Ledj;	c	byText
	f	Ljava/util/function/Function;	d	textFinder
c	edg$a	net/minecraft/client/search/TextSearchableContainer$Iterator
c	edh	net/minecraft/client/search/SearchManager
	f	Ledh$a;	a	ITEM_TOOLTIP
	f	Ledh$a;	b	ITEM_TAG
	f	Ledh$a;	c	RECIPE_OUTPUT
	f	Ljava/util/Map;	d	instances
	m	(Ledh$a;)Lede;	a	get
		p	1	key	key
	m	(Ledh$a;Lede;)V	a	put
		p	1	key	key
		p	2	value	value
c	edh$a	net/minecraft/client/search/SearchManager$Key
c	edi	net/minecraft/client/search/Searchable
	m	(Ljava/lang/String;)Ljava/util/List;	a	findAll
		p	1	text	text
c	edj	net/minecraft/client/search/SuffixArray
	f	Ljava/util/List;	a	objects
	f	Z	b	PRINT_COMPARISONS
	f	Z	c	PRINT_ARRAY
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/IntList;	e	characters
	f	Lit/unimi/dsi/fastutil/ints/IntList;	f	suffixStarts
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	suffixIndexToObjectIndex
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	suffixSplits
	f	I	i	maxTextLength
	m	(I)Ljava/lang/String;	a	getDebugString
		p	1	suffixIndex	suffixIndex
	m	()V	a	sort
	m	(Ljava/lang/String;)Ljava/util/List;	a	findAll
		p	1	text	text
	m	(Ljava/lang/Object;Ljava/lang/String;)V	a	add
		p	1	object	object
		p	2	text	text
	m	(Ljava/lang/String;I)I	a	compare
		p	1	string	string
		p	2	suffixIndex	suffixIndex
	m	()V	b	printArray
c	edj$1	net/minecraft/client/search/SuffixArray$1
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)I	compare	compare
c	edl	net/minecraft/server/integrated/IntegratedPlayerManager
	f	Ljt;	a	userData
	m	()Ledm;	b	getServer
c	edm	net/minecraft/server/integrated/IntegratedServer
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ldbn;	h	client
	f	Lbka;	i	levelInfo
	f	Z	j	paused
	f	I	k	lanPort
	f	Ledp;	l	lanPinger
	f	Ljava/util/UUID;	m	localPlayerUuid
	m	(Ldbn;Ljava/lang/String;Ljava/lang/String;Lbka;Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Lzk;Lxn;)V	<init>	<init>
		p	1	client	client
		p	2	levelName	levelName
		p	3	displayName	displayName
		p	4	levelInfo	levelInfo
		p	5	authService	authService
		p	6	sessionService	sessionService
		p	7	profileRepo	profileRepo
	m	(Ljava/util/UUID;)V	b	setLocalPlayerUuid
		p	1	localPlayerUuid	localPlayerUuid
c	edn	net/minecraft/client/network/LanServerInfo
	f	Ljava/lang/String;	a	motd
	f	Ljava/lang/String;	b	addressPort
	f	J	c	lastTimeMillis
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	motd	motd
		p	2	addressPort	addressPort
	m	()Ljava/lang/String;	a	getMotd
	m	()Ljava/lang/String;	b	getAddressPort
	m	()V	c	updateLastTime
c	edo	net/minecraft/client/network/LanServerQueryManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	THREAD_ID
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
c	edo$a	net/minecraft/client/network/LanServerQueryManager$LanServerDetector
	f	Ledo$b;	a	entryList
	f	Ljava/net/InetAddress;	b	multicastAddress
	f	Ljava/net/MulticastSocket;	c	socket
c	edo$b	net/minecraft/client/network/LanServerQueryManager$LanServerEntryList
	f	Ljava/util/List;	a	serverEntries
	f	Z	b	dirty
	m	()Z	a	needsUpdate
	m	(Ljava/lang/String;Ljava/net/InetAddress;)V	a	addServer
	m	()V	b	markClean
	m	()Ljava/util/List;	c	getServers
c	edp	net/minecraft/server/LanServerPinger
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	THREAD_ID
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	motd
	f	Ljava/net/DatagramSocket;	d	socket
	f	Z	e	isRunning
	f	Ljava/lang/String;	f	addressPort
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	motd	motd
		p	2	addressPort	addressPort
	m	(Ljava/lang/String;)Ljava/lang/String;	a	parseAnnouncementMotd
		p	0	announcement	announcement
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	createAnnouncement
		p	0	motd	motd
		p	1	addressPort	addressPort
	m	(Ljava/lang/String;)Ljava/lang/String;	b	parseAnnouncementAddressPort
		p	0	announcement	announcement
c	eds	net/minecraft/client/sound/AudioStream
	m	()Ljavax/sound/sampled/AudioFormat;	a	getFormat
	m	()Ljava/nio/ByteBuffer;	b	getBuffer
c	edt	net/minecraft/client/sound/Channel
	f	Ljava/util/Set;	a	sources
	f	Lcwt;	b	soundEngine
	f	Ljava/util/concurrent/Executor;	c	executor
	m	(Lcwt;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	soundEngine	soundEngine
		p	2	executor	executor
	m	(Lcwt$c;)Ledt$a;	a	createSource
		p	1	mode	mode
	m	()V	a	tick
	m	(Ljava/util/function/Consumer;)V	a	execute
	m	()V	b	close
c	edt$a	net/minecraft/client/sound/Channel$SourceManager
	f	Lcws;	b	source
	f	Z	c	stopped
	m	()Z	a	isStopped
	m	(Ljava/util/function/Consumer;)V	a	run
		p	1	action	action
	m	()V	b	close
c	edu	net/minecraft/client/sound/MusicTracker
	f	Ljava/util/Random;	a	random
	f	Ldbn;	b	client
	f	Lecz;	c	current
	f	I	d	timeUntilNextSong
	m	(Ldbn;)V	<init>	<init>
		p	1	client	client
	m	(Ledu$a;)V	a	play
	m	()V	a	tick
	m	(Ledu$a;)Z	b	isPlayingType
	m	()V	b	stop
c	edu$a	net/minecraft/client/sound/MusicTracker$MusicType
	f	Laah;	i	sound
	f	I	j	minDelay
	f	I	k	maxDelay
	m	(Ljava/lang/String;ILaah;II)V	<init>	<init>
		p	3	soundEvent	soundEvent
		p	4	minDelay	minDelay
		p	5	maxDelay	maxDelay
	m	()Laah;	a	getSound
	m	()I	b	getMinDelay
	m	()I	c	getMaxDelay
c	edv	net/minecraft/client/sound/SoundLoader
	f	Lzb;	a	resourceManager
	f	Ljava/util/Map;	b	loadedSounds
	m	(Lzb;)V	<init>	<init>
		p	1	resourceManager	resourceManager
	m	(Lsm;)Ljava/util/concurrent/CompletableFuture;	a	loadStatic
		p	1	id	id
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	loadStatic
		p	1	sounds	sounds
	m	()V	a	close
	m	(Lsm;)Ljava/util/concurrent/CompletableFuture;	b	loadStreamed
		p	1	id	id
c	edw	net/minecraft/client/sound/SoundSystem
	f	Lorg/apache/logging/log4j/Marker;	a	MARKER
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	unknownSounds
	f	Ledz;	d	loader
	f	Ldbr;	e	settings
	f	Z	f	started
	f	Lcwt;	g	soundEngine
	f	Lcwu;	h	listener
	f	Ledv;	i	soundLoader
	f	Ledx;	j	taskQueue
	f	Ledt;	k	channel
	f	I	l	ticks
	f	Ljava/util/Map;	m	sources
	f	Lcom/google/common/collect/Multimap;	n	sounds
	f	Ljava/util/List;	o	tickingSounds
	f	Ljava/util/Map;	p	startTicks
	f	Ljava/util/Map;	q	soundEndTicks
	f	Ljava/util/List;	r	listeners
	f	Ljava/util/List;	s	soundsToPlayNextTick
	f	Ljava/util/List;	t	preloadedSounds
	m	(Ledz;Ldbr;Lzb;)V	<init>	<init>
		p	1	loader	loader
		p	2	settings	settings
	m	(Z)V	a	tick
	m	(Lsm;Laaj;)V	a	stopSounds
	m	(Lecz;)V	a	stop
	m	(Lecz;I)V	a	play
		p	1	sound	sound
		p	2	delay	delay
	m	()V	a	reloadSounds
	m	(Laaj;F)V	a	updateSoundVolume
		p	2	volume	volume
	m	(Lecw;)V	a	addPreloadedSound
		p	1	sound	sound
	m	(Laaj;)F	a	getSoundVolume
	m	(Ldbb;)V	a	updateListenerPosition
	m	(Ledy;)V	a	registerListener
	m	(Leda;)V	a	playNextTick
		p	1	sound	sound
	m	(Ledy;)V	b	unregisterListener
	m	(Lecz;)Z	b	isPlaying
	m	()V	b	stop
	m	(Lecz;)V	c	play
	m	()V	c	stopAll
	m	(Lecz;)F	d	getAdjustedPitch
	m	()V	d	pauseAll
	m	(Lecz;)F	e	getAdjustedVolume
	m	()V	e	resumeAll
	m	()Ljava/lang/String;	f	getDebugString
	m	()V	g	start
	m	()V	h	tick
c	edx	net/minecraft/client/sound/SoundExecutor
	f	Ljava/lang/Thread;	a	thread
	f	Z	b	stopped
	m	()V	a	restart
	m	()Ljava/lang/Thread;	b	createThread
	m	()V	c	waitForStop
c	edy	net/minecraft/client/sound/ListenerSoundInstance
	m	(Lecz;Leea;)V	a	onSoundPlayed
		p	1	sound	sound
		p	2	soundSet	soundSet
c	edz	net/minecraft/client/sound/SoundManager
	f	Lecw;	a	MISSING_SOUND
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/lang/reflect/ParameterizedType;	d	TYPE
	f	Ljava/util/Map;	e	sounds
	f	Ledw;	f	soundSystem
	m	(Z)V	a	tick
	m	(Lsm;Laaj;)V	a	stopSounds
	m	(Lzb;Laio;)Ledz$a;	a	prepare
	m	(Lecz;)V	a	play
		p	1	sound	sound
	m	(Lecz;I)V	a	play
		p	1	sound	sound
		p	2	delay	delay
	m	(Laaj;F)V	a	updateSoundVolume
		p	1	category	category
		p	2	volume	volume
	m	(Ledz$a;Lzb;Laio;)V	a	apply
	m	(Ldbb;)V	a	updateListenerPosition
	m	(Lsm;)Leea;	a	get
	m	(Ledy;)V	a	registerListener
	m	()Ljava/util/Collection;	a	getKeys
	m	(Leda;)V	a	playNextTick
		p	1	sound	sound
	m	(Ljava/io/InputStream;)Ljava/util/Map;	a	readSounds
	m	(Lecz;)V	b	stop
	m	(Ledy;)V	b	unregisterListener
	m	()V	b	pauseAll
	m	(Lecw;Lsm;Lzb;)Z	b	isSoundResourcePresent
	m	(Lecz;)Z	c	isPlaying
	m	()V	c	stopAll
	m	()V	d	close
	m	()V	e	resumeAll
	m	()Ljava/lang/String;	f	getDebugString
c	edz$a	net/minecraft/client/sound/SoundManager$SoundList
	f	Ljava/util/Map;	a	loadedSounds
	m	(Ljava/util/Map;Ledw;)V	a	addTo
	m	(Lsm;Lecx;Lzb;)V	a	register
		p	1	id	id
		p	2	entry	entry
		p	3	resourceManager	resourceManager
c	edz$a$1	net/minecraft/client/sound/SoundManager$SoundList$1
	m	()Lecw;	a	getSound
c	ee	net/minecraft/command/arguments/Vec3ArgumentType
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INCOMPLETE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	MIXED_COORDINATE_EXCEPTION
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Z	d	centerIntegers
	m	(Z)V	<init>	<init>
		p	1	centerIntegers	centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcvl;	a	getVec3
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ldz;	a	parse
	m	(Z)Lee;	a	vec3
		p	0	centerIntegers	centerIntegers
	m	()Lee;	a	vec3
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldz;	b	getPosArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	eea	net/minecraft/client/sound/WeightedSoundSet
	f	Ljava/util/List;	a	sounds
	f	Ljava/util/Random;	b	random
	f	Lsm;	c	id
	f	Llf;	d	subtitle
	m	(Lsm;Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	subtitle	subtitle
	m	()Lecw;	a	getSound
	m	(Leeb;)V	a	add
	m	()Llf;	c	getSubtitle
c	eeb	net/minecraft/client/sound/SoundContainer
	m	(Ledw;)V	a	preload
		p	1	soundSystem	soundSystem
	m	()I	e	getWeight
	m	()Ljava/lang/Object;	k	getSound
c	eed	net/minecraft/client/tutorial/NoneTutorialStepHandler
	f	Leej;	a	manager
c	eee	net/minecraft/client/tutorial/CraftPlanksTutorialStepHandler
	f	Llf;	a	TITLE
	f	Llf;	b	DESCRIPTION
	f	Leej;	c	manager
	f	Ldec;	d	toast
	f	I	e	ticks
	m	(Ldqb;Laaz;)Z	a	hasCrafted
		p	0	player	player
		p	1	tag	tag
c	eef	net/minecraft/client/tutorial/FindTreeTutorialStepHandler
	f	Ljava/util/Set;	a	TREE_BLOCKS
	f	Llf;	b	TITLE
	f	Llf;	c	DESCRIPTION
	f	Leej;	d	tutorialManager
	f	Ldec;	e	toast
	f	I	f	ticks
	m	(Leej;)V	<init>	<init>
		p	1	tutorialManager	tutorialManager
	m	(Ldqb;)Z	a	hasBrokenTreeBlocks
		p	0	player	player
c	eeg	net/minecraft/client/tutorial/MovementTutorialStepHandler
	f	Llf;	a	MOVE_TITLE
	f	Llf;	b	MOVE_DESCRIPTION
	f	Llf;	c	LOOK_TITLE
	f	Llf;	d	LOOK_DESCRIPTION
	f	Leej;	e	manager
	f	Ldec;	f	moveToast
	f	Ldec;	g	lookAroundToast
	f	I	h	ticks
	f	I	i	movedTicks
	f	I	j	lookedAroundTicks
	f	Z	k	movedLastTick
	f	Z	l	lookedAroundLastTick
	f	I	m	moveAroundCompletionTicks
	f	I	n	lookAroundCompletionTicks
c	eeh	net/minecraft/client/tutorial/OpenInventoryTutorialStepHandler
	f	Llf;	a	TITLE
	f	Llf;	b	DESCRIPTION
	f	Leej;	c	manager
	f	I	e	ticks
c	eei	net/minecraft/client/tutorial/PunchTreeTutorialStepHandler
	f	Llf;	a	TITLE
	f	Llf;	b	DESCRIPTION
	f	Leej;	c	manager
	f	I	e	ticks
c	eej	net/minecraft/client/tutorial/TutorialManager
	f	Ldbn;	a	client
	f	Leek;	b	currentHandler
	m	(Leel;)V	a	setStep
	m	(Lben;)V	a	onSlotUpdate
	m	(Ljava/lang/String;)Llf;	a	getKeybindName
	m	(DD)V	a	onUpdateMouse
		p	1	deltaX	deltaX
		p	3	deltaY	deltaY
	m	(Ldpz;)V	a	onMovement
		p	1	input	input
	m	(Ldno;Lfk;Lbyj;F)V	a	onBlockAttacked
		p	1	world	world
		p	2	pos	pos
		p	3	state	state
	m	(Ldno;Lcvi;)V	a	tick
		p	1	world	world
		p	2	hitResult	hitResult
	m	()V	a	onInventoryOpened
	m	()V	b	destroyHandler
	m	()V	c	createHandler
	m	()V	d	tick
	m	()Ldbn;	e	getClient
	m	()Lbjt;	f	getGameMode
c	eek	net/minecraft/client/tutorial/TutorialStepHandler
	m	(Ldno;Lcvi;)V	a	onTarget
		p	1	world	world
		p	2	hitResult	hitResult
	m	(Lben;)V	a	onSlotUpdate
		p	1	stack	stack
	m	(Ldpz;)V	a	onMovement
		p	1	input	input
	m	(DD)V	a	onMouseUpdate
		p	1	deltaX	deltaX
		p	3	deltaY	deltaY
	m	(Ldno;Lfk;Lbyj;F)V	a	onBlockAttacked
		p	1	client	client
		p	2	pos	pos
		p	3	state	state
	m	()V	a	tick
	m	()V	b	destroy
	m	()V	c	onInventoryOpened
c	eel	net/minecraft/client/tutorial/TutorialStep
	f	Ljava/lang/String;	g	name
	f	Ljava/util/function/Function;	h	handlerFactory
	m	(Leej;)Leek;	a	createHandler
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Leel;	a	byName
		p	0	name	name
c	ef	net/minecraft/command/arguments/CoordinateArgument
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	MISSING_COORDINATE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	MISSING_BLOCK_POSITION
	f	Z	c	relative
	f	D	d	value
	m	(ZD)V	<init>	<init>
		p	1	relative	relative
		p	2	value	value
	m	(D)D	a	toAbsoluteCoordinate
		p	1	offset	offset
	m	()Z	a	isRelative
	m	(Lcom/mojang/brigadier/StringReader;Z)Lef;	a	parse
		p	0	reader	reader
		p	1	centerIntegers	centerIntegers
	m	(Lcom/mojang/brigadier/StringReader;)Lef;	a	parse
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
		p	0	reader	reader
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	eg	net/minecraft/command/arguments/DefaultPosArgument
	f	Lef;	a	x
	f	Lef;	b	y
	f	Lef;	c	z
	m	(Lef;Lef;Lef;)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lcom/mojang/brigadier/StringReader;Z)Leg;	a	parse
		p	0	reader	reader
		p	1	centerIntegers	centerIntegers
	m	(Lcom/mojang/brigadier/StringReader;)Leg;	a	parse
		p	0	reader	reader
	m	()Leg;	d	zero
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ei	net/minecraft/command/arguments/FunctionArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_FUNCTION_TAG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_FUNCTION_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
		p	0	context	context
		p	1	name	name
	m	()Lei;	a	function
	m	(Lcom/mojang/brigadier/StringReader;)Lei$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either;	b	getFunctionOrTag
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/context/CommandContext;Lsm;)Lcn;	c	getFunction
		p	0	context	context
		p	1	id	id
	m	(Lcom/mojang/brigadier/context/CommandContext;Lsm;)Laaz;	d	getFunctionTag
		p	0	context	context
		p	1	id	id
c	ei$a	net/minecraft/command/arguments/FunctionArgumentType$FunctionArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	getFunctions
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either;	b	getFunctionOrTag
c	ej	net/minecraft/command/arguments/ItemStackArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()Lej;	a	itemStack
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lek;	a	getItemStackArgument
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lek;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	ek	net/minecraft/command/arguments/ItemStackArgument
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	OVERSTACKED_EXCEPTION
	f	Lbei;	b	item
	f	Ljt;	c	tag
	m	(Lbei;Ljt;)V	<init>	<init>
		p	2	tag	tag
	m	(Lben;)Z	a	test
	m	(IZ)Lben;	a	createStack
		p	1	amount	amount
		p	2	checkOverstack	checkOverstack
	m	()Lbei;	a	getItem
	m	()Ljava/lang/String;	c	asString
c	el	net/minecraft/command/arguments/ItemStringReader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	TAG_DISALLOWED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ID_INVALID_EXCEPTION
	f	Ljava/util/function/Function;	c	NBT_SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/StringReader;	d	reader
	f	Z	e	allowTag
	f	Lbei;	g	item
	f	Ljt;	h	tag
	f	Lsm;	i	id
	f	I	j	cursor
	f	Ljava/util/function/Function;	k	suggestions
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1	reader	reader
		p	2	allowTag	allowTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	getSuggestions
		p	1	builder	builder
	m	()Lbei;	b	getItem
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestItem
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestTag
		p	1	suggestionsBuilder	suggestionsBuilder
	m	()Ljt;	c	getTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestAny
	m	()Lsm;	d	getId
	m	()V	e	readItem
	m	()V	f	readTag
	m	()V	g	readNbt
	m	()Lel;	h	consume
c	em	net/minecraft/command/arguments/ItemPredicateArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_TAG_EXCEPTION
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getItemPredicate
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Lem$b;	a	parse
	m	()Lem;	a	itemPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
		p	1	context	context
		p	2	builder	builder
c	em$a	net/minecraft/command/arguments/ItemPredicateArgumentType$ItemPredicate
	f	Lbei;	a	item
	f	Ljt;	b	compound
	m	(Lben;)Z	a	test
c	em$b	net/minecraft/command/arguments/ItemPredicateArgumentType$ItemPredicateArgument
c	em$c	net/minecraft/command/arguments/ItemPredicateArgumentType$TagPredicate
	f	Laaz;	a	tag
	f	Ljt;	b	compound
	m	(Lben;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	ep	net/minecraft/command/EntitySelector
	f	I	a	limit
	f	Z	b	includesNonPlayers
	f	Z	c	localWorldOnly
	f	Ljava/util/function/Predicate;	d	basePredicate
	f	Lbr$c;	e	distance
	f	Ljava/util/function/Function;	f	positionOffset
	f	Lcvf;	g	box
	f	Ljava/util/function/BiConsumer;	h	sorter
	f	Z	i	senderOnly
	f	Ljava/lang/String;	j	playerName
	f	Ljava/util/UUID;	k	uuid
	f	Laku;	l	type
	f	Z	m	usesAt
	m	(IZZLjava/util/function/Predicate;Lbr$c;Ljava/util/function/Function;Lcvf;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Laku;Z)V	<init>	<init>
		p	1	count	count
		p	2	includesNonPlayers	includesNonPlayers
		p	3	localWorldOnly	localWorldOnly
		p	4	basePredicate	basePredicate
		p	5	distance	distance
		p	6	positionOffset	positionOffset
		p	7	box	box
		p	8	sorter	sorter
		p	9	senderOnly	senderOnly
		p	10	playerName	playerName
		p	11	uuid	uuid
		p	12	type	type
		p	13	usesAt	usesAt
	m	()I	a	getLimit
	m	(Lcq;)Lakq;	a	getEntity
	m	(Ljava/util/List;Lxd;Lcvl;Ljava/util/function/Predicate;)V	a	appendEntitiesFromWorld
	m	(Lcvl;Ljava/util/List;)Ljava/util/List;	a	getEntities
	m	(Ljava/util/List;)Llf;	a	getNames
	m	(Lcvl;)Ljava/util/function/Predicate;	a	getPositionPredicate
	m	()Z	b	includesNonPlayers
	m	(Lcq;)Ljava/util/List;	b	getEntities
	m	()Z	c	isSenderOnly
	m	(Lcq;)Lxe;	c	getPlayer
	m	()Z	d	isLocalWorldOnly
	m	(Lcq;)Ljava/util/List;	d	getPlayers
	m	(Lcq;)V	e	checkSourcePermission
c	eq	net/minecraft/command/EntitySelectorReader
	f	Ljava/util/function/Predicate;	A	predicate
	f	Ljava/util/function/BiConsumer;	B	sorter
	f	Z	C	senderOnly
	f	Ljava/lang/String;	D	playerName
	f	I	E	startCursor
	f	Ljava/util/UUID;	F	uuid
	f	Ljava/util/function/BiFunction;	G	suggestionProvider
	f	Z	H	selectsName
	f	Z	I	excludesName
	f	Z	J	hasLimit
	f	Z	K	hasSorter
	f	Z	L	selectsGameMode
	f	Z	M	excludesGameMode
	f	Z	N	selectsTeam
	f	Z	O	excludesTeam
	f	Laku;	P	entityType
	f	Z	Q	excludesEntityType
	f	Z	R	selectsScores
	f	Z	S	selectsAdvancements
	f	Z	T	usesAt
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_ENTITY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	UNKNOWN_SELECTOR_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	NOT_ALLOWED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	MISSING_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	UNTERMINATED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	VALUELESS_EXCEPTION
	f	Ljava/util/function/BiConsumer;	g	ARBITRARY
	f	Ljava/util/function/BiConsumer;	h	NEAREST
	f	Ljava/util/function/BiConsumer;	i	FURTHEST
	f	Ljava/util/function/BiConsumer;	j	RANDOM
	f	Ljava/util/function/BiFunction;	k	DEFAULT_SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/StringReader;	l	reader
	f	Z	m	atAllowed
	f	I	n	limit
	f	Z	o	includesNonPlayers
	f	Z	p	localWorldOnly
	f	Lbr$c;	q	distance
	f	Lbr$d;	r	levelRange
	f	Ljava/lang/Double;	s	x
	f	Ljava/lang/Double;	t	y
	f	Ljava/lang/Double;	u	z
	f	Ljava/lang/Double;	v	dx
	f	Ljava/lang/Double;	w	dy
	f	Ljava/lang/Double;	x	dz
	f	Lcj;	y	pitchRange
	f	Lcj;	z	yawRange
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1	reader	reader
		p	2	atAllowed	atAllowed
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1	reader	reader
	m	()Z	A	excludesGameMode
	m	()Z	B	selectsTeam
	m	()V	D	setExcludesEntityType
	m	()Z	E	selectsEntityType
	m	()Z	F	excludesEntityType
	m	()Z	G	selectsScores
	m	()Z	H	selectsAdvancements
	m	()V	I	buildPredicate
	m	(I)V	a	setLimit
		p	1	limit	limit
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestionProvider
	m	(Lbr$d;)V	a	setLevelRange
		p	1	experienceRange	experienceRange
	m	(DDD)Lcvf;	a	createBox
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	listSuggestions
		p	1	builder	builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestSelector
		p	0	builder	builder
	m	(Laku;)V	a	setEntityType
		p	1	entityType	entityType
	m	(Lcj;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	rotationPredicate
	m	(Lcj;)V	a	setPitchRange
	m	(Lbr$c;)V	a	setDistance
		p	1	distance	distance
	m	(Ljava/util/function/BiConsumer;)V	a	setSorter
		p	1	sorter	sorter
	m	(D)V	a	setX
		p	1	x	x
	m	(Ljava/util/function/Predicate;)V	a	setPredicate
	m	(Z)V	a	setIncludesNonPlayers
		p	1	includesNonPlayers	includesNonPlayers
	m	()Lep;	a	build
	m	()V	b	readAtVariable
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestSelector
		p	1	builder	builder
	m	(D)V	b	setY
		p	1	y	y
	m	(Lcj;)V	b	setYawRange
	m	()V	c	readRegular
	m	(Z)V	c	setSelectsName
		p	1	selectsName	selectsName
	m	(D)V	c	setZ
		p	1	z	z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestNormal
		p	1	builder	builder
	m	(Z)V	d	setExcludesName
	m	()V	d	readArguments
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelectorRest
		p	1	builder	builder
	m	(D)V	d	setDx
		p	1	dx	dx
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpen
		p	1	builder	builder
	m	(Z)V	e	setHasLimit
		p	1	hasLimit	hasLimit
	m	(D)V	e	setDy
		p	1	dy	dy
	m	()Z	e	readNegationCharacter
	m	(Z)V	f	setHasSorter
		p	1	hasSorter	hasSorter
	m	(D)V	f	setDz
		p	1	dz	dz
	m	()Z	f	readTagCharacter
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionOrEnd
		p	1	builder	builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOption
		p	1	builder	builder
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Z)V	g	setSelectsGameMode
		p	1	selectsGameMode	selectsGameMode
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestEndNext
		p	1	builder	builder
	m	(Z)V	h	setHasNegatedGameMode
		p	1	hasNegatedGameMode	hasNegatedGameMode
	m	()V	h	setLocalWorldOnly
	m	()Lbr$c;	i	getDistance
	m	(Z)V	i	setSelectsTeam
		p	1	selectsTeam	selectsTeam
	m	(Z)V	j	setExcludesTeam
		p	1	excludesTeam	excludesTeam
	m	()Lbr$d;	j	getLevelRange
	m	()Lcj;	k	getPitchRange
	m	(Z)V	k	setSelectsScores
		p	1	selectsScores	selectsScores
	m	()Lcj;	l	getYawRange
	m	(Z)V	l	setSelectsAdvancements
		p	1	selectsAdvancements	selectsAdvancements
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	()Ljava/lang/Double;	p	getDx
	m	()Ljava/lang/Double;	q	getDy
	m	()Ljava/lang/Double;	r	getDz
	m	()Lep;	t	read
	m	()Z	u	isSenderOnly
	m	()Z	v	selectsName
	m	()Z	w	excludesName
	m	()Z	x	hasLimit
	m	()Z	y	hasSorter
	m	()Z	z	selectsGameMode
c	er	net/minecraft/command/EntitySelectorOptions
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_OPTION_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	INAPPLICABLE_OPTION_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	NEGATIVE_DISTANCE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NEGATIVE_LEVEL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	TOO_SMALL_LEVEL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	IRREVERSIBLE_SORT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	INVALID_MODE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	INVALID_TYPE_EXCEPTION
	f	Ljava/util/Map;	i	options
	m	(Ljava/lang/String;Ler$a;Ljava/util/function/Predicate;Llf;)V	a	putOption
		p	0	id	id
		p	1	handler	handler
		p	2	condition	condition
		p	3	description	description
	m	(Leq;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestOptions
		p	0	reader	reader
		p	1	suggestionBuilder	suggestionBuilder
	m	()V	a	register
	m	(Leq;Ljava/lang/String;I)Ler$a;	a	getHandler
		p	0	reader	reader
		p	1	option	option
		p	2	restoreCursor	restoreCursor
c	er$a	net/minecraft/command/EntitySelectorOptions$SelectorHandler
	m	(Leq;)V	handle	handle
		p	1	reader	reader
c	er$b	net/minecraft/command/EntitySelectorOptions$SelectorOption
	f	Ler$a;	a	handler
	f	Ljava/util/function/Predicate;	b	condition
	f	Llf;	c	description
	m	(Ler$a;Ljava/util/function/Predicate;Llf;)V	<init>	<init>
		p	1	handler	handler
		p	2	condition	condition
		p	3	description	description
c	ew	net/minecraft/command/arguments/serialize/ArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;Lkv;)V	a	toPacket
	m	(Lkv;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	fromPacket
c	ex	net/minecraft/command/arguments/ArgumentTypes
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	classMap
	f	Ljava/util/Map;	c	idMap
	m	(Lkv;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	toPacket
	m	(Lkv;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	toJson
	m	()V	a	register
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	toJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lex$a;	a	byClass
	m	(Lsm;)Lex$a;	a	byId
	m	(Ljava/lang/String;Ljava/lang/Class;Lew;)V	a	register
c	ex$a	net/minecraft/command/arguments/ArgumentTypes$Entry
	f	Ljava/lang/Class;	a	argClass
	f	Lew;	b	serializer
	f	Lsm;	c	id
c	ey	net/minecraft/command/arguments/serialize/ConstantArgumentSerializer
	f	Ljava/util/function/Supplier;	a	supplier
c	ez	net/minecraft/command/suggestion/SuggestionProviders
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	ALL_RECIPES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SUMMONABLE_ENTITIES
	f	Ljava/util/Map;	e	REGISTRY
	f	Lsm;	f	ASK_SERVER_NAME
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lsm;	a	computeName
		p	0	provider	provider
	m	(Lsm;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	byId
		p	0	name	name
	m	(Lsm;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
		p	0	name	name
		p	1	provider	provider
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	getLocalProvider
		p	0	provider	provider
c	ez$a	net/minecraft/command/suggestion/SuggestionProviders$LocalProvider
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	provider
	f	Lsm;	b	name
	m	(Lsm;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V	<init>	<init>
		p	1	name	name
c	f	net/minecraft/client/util/math/Vector4f
	f	F	a	x
	f	F	b	y
	f	F	c	z
	f	F	d	w
	m	(FFFF)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	w	w
	m	(Le;)V	<init>	<init>
		p	1	vector	vector
	m	()F	a	getX
	m	(Lf;)F	a	dotProduct
		p	1	other	other
	m	(Lc;)V	a	rotate
		p	1	rotation	rotation
	m	(FFFF)V	a	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	w	w
	m	(Le;)V	a	multiplyComponentwise
		p	1	vector	vector
	m	(Lb;)V	a	transform
		p	1	matrix	matrix
	m	()F	b	getY
	m	()F	c	getZ
	m	()F	d	getW
	m	()Z	e	normalize
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()V	f	normalizeProjectiveCoordinates
c	fa	net/minecraft/command/arguments/BrigadierArgumentTypes
	m	()V	a	register
	m	(ZZ)B	a	createFlag
		p	0	hasMin	hasMin
		p	1	hasMax	hasMax
	m	(B)Z	a	hasMin
		p	0	rangeFlag	rangeFlag
	m	(B)Z	b	hasMax
		p	0	rangeFlag	rangeFlag
c	fb	net/minecraft/command/arguments/serialize/DoubleArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lkv;)V	a	toPacket
	m	(Lkv;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	fromPacket
c	fc	net/minecraft/command/arguments/serialize/FloatArgumentSerializer
	m	(Lkv;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;Lkv;)V	a	toPacket
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
c	fd	net/minecraft/command/arguments/serialize/IntegerArgumentSerializer
	m	(Lkv;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lkv;)V	a	toPacket
c	fe	net/minecraft/command/arguments/serialize/LongArgumentSerializer
	m	(Lkv;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;Lkv;)V	a	toPacket
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
c	ff	net/minecraft/command/arguments/serialize/StringArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;Lkv;)V	a	toPacket
	m	(Lkv;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	fromPacket
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V	a	toJson
c	fi	net/minecraft/util/math/AxisCycleDirection
	f	[Lfp$a;	d	AXES
	f	[Lfi;	e	VALUES
	m	()Lfi;	a	opposite
	m	(Lfp$a;)Lfp$a;	a	cycle
		p	1	axis	axis
	m	(Lfp$a;Lfp$a;)Lfi;	a	between
		p	0	from	from
		p	1	to	to
	m	(IIILfp$a;)I	a	choose
		p	1	x	x
		p	2	y	y
		p	3	z	z
		p	4	axis	axis
c	fj	net/minecraft/client/util/math/Rotation3Helper
	f	Ljava/util/EnumMap;	a	DIRECTION_ROTATIONS
	f	Ljava/util/EnumMap;	b	INVERSED_DIRECTION_ROTATIONS
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	m	(Ld;)Ld;	a	setupUvLock
	m	(Ld;Lfp;Ljava/util/function/Supplier;)Ld;	a	uvLock
c	fk	net/minecraft/util/math/BlockPos
	f	Lfk;	a	ORIGIN
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	I	c	SIZE_BITS_X
	f	I	d	SIZE_BITS_Z
	f	I	f	SIZE_BITS_Y
	f	J	g	BITS_X
	f	J	h	BITS_Y
	f	J	i	BITS_Z
	f	I	j	BIT_SHIFT_Z
	f	I	k	BIT_SHIFT_X
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
	m	(Lgg;)V	<init>	<init>
		p	1	pos	pos
	m	(Lakq;)V	<init>	<init>
		p	1	entity	entity
	m	(DDD)V	<init>	<init>
		p	1	x	x
	m	(Lcvl;)V	<init>	<init>
		p	1	pos	pos
	m	(Lfz;)V	<init>	<init>
		p	1	pos	pos
	m	(IIIIII)Ljava/util/stream/Stream;	a	stream
		p	0	minX	minX
		p	1	minY	minY
		p	2	minZ	minZ
		p	3	maxX	maxX
		p	4	maxY	maxY
		p	5	maxZ	maxZ
	m	(III)J	a	asLong
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lgg;)Lfk;	a	add
		p	1	pos	pos
	m	(DDD)Lfk;	a	add
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	()J	a	asLong
	m	(Lcom/mojang/datafixers/Dynamic;)Lfk;	a	deserialize
		p	0	dynamic	dynamic
	m	(Lfp;I)Lfk;	a	offset
	m	(JLfp;)J	a	offset
		p	0	value	value
		p	2	direction	direction
	m	(Lfk;Lfk;)Ljava/lang/Iterable;	a	iterate
		p	0	pos1	pos1
		p	1	pos2	pos2
	m	(JIII)J	a	add
		p	0	value	value
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lfp;)Lfk;	a	offset
		p	1	direction	direction
	m	(Lbtu;)Lfk;	a	rotate
		p	1	rotation	rotation
	m	(J)I	b	unpackLongX
		p	0	x	x
	m	(Lfk;Lfk;)Ljava/util/stream/Stream;	b	stream
		p	0	pos1	pos1
		p	1	pos2	pos2
	m	()Lfk;	b	up
	m	(Lgg;)Lfk;	b	subtract
		p	1	pos	pos
	m	(IIIIII)Ljava/lang/Iterable;	b	iterate
		p	0	minX	minX
		p	1	maxX	maxX
		p	2	minY	minY
		p	3	maxY	maxY
		p	4	minZ	minZ
		p	5	maxZ	maxZ
	m	(III)Lfk;	b	add
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)Lfk;	b	up
		p	1	distance	distance
	m	(J)I	c	unpackLongY
		p	0	y	y
	m	()Lfk;	c	down
	m	(Lgg;)Lfk;	c	crossProduct
		p	1	pos	pos
	m	(I)Lfk;	c	down
		p	1	distance	distance
	m	(I)Lfk;	d	north
		p	1	distance	distance
	m	(J)I	d	unpackLongZ
		p	0	z	z
	m	()Lfk;	d	north
	m	(J)Lfk;	e	fromLong
		p	0	value	value
	m	()Lfk;	e	south
	m	(I)Lfk;	e	south
		p	1	distance	distance
	m	(J)J	f	removeChunkSectionLocalY
		p	0	y	y
	m	(I)Lfk;	f	west
		p	1	distance	distance
	m	()Lfk;	f	west
	m	()Lfk;	g	east
	m	(I)Lfk;	g	east
		p	1	distance	distance
	m	()Lfk;	h	toImmutable
c	fk$1	net/minecraft/util/math/BlockPos$1
	f	Lfn;	a	connector
	f	Lfk$a;	b	position
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
		p	1	consumer	consumer
c	fk$2	net/minecraft/util/math/BlockPos$2
	f	Lfn;	a	iterator
	f	Lfk$a;	b	pos
	f	I	c	minX
	f	I	d	minY
	f	I	e	minZ
	f	I	f	maxX
	f	I	g	maxY
	f	I	h	maxZ
	m	()Lfk;	a	computeNext
c	fk$a	net/minecraft/util/math/BlockPos$Mutable
	f	I	b	x
	f	I	c	y
	f	I	d	z
	m	(III)V	<init>	<init>
		p	1	y	y
		p	2	z	z
	m	(Lfk;)V	<init>	<init>
		p	1	pos	pos
	m	(Lakq;)Lfk$a;	a	set
		p	1	entity	entity
	m	(Lfi;III)Lfk$a;	a	set
		p	1	axis	axis
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lfp;)Lfk$a;	c	setOffset
		p	1	direction	direction
	m	(DDD)Lfk$a;	c	set
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfp;I)Lfk$a;	c	setOffset
		p	1	direction	direction
		p	2	distance	distance
	m	(III)Lfk$a;	d	set
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(III)Lfk$a;	e	setOffset
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(J)Lfk$a;	g	set
		p	1	pos	pos
	m	(Lgg;)Lfk$a;	g	set
		p	1	pos	pos
	m	(I)V	o	setX
		p	1	x	x
	m	(Lfp;I)Lfk;	offset	offset
	m	(I)V	p	setY
		p	1	y	y
	m	(I)V	q	setZ
		p	1	z	z
c	fk$b	net/minecraft/util/math/BlockPos$PooledMutable
	f	Z	f	free
	f	Ljava/util/List;	g	POOL
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lakq;)Lfk$b;	b	getEntityPos
		p	0	entity	entity
	m	(Lakq;)Lfk$b;	c	set
	m	(DDD)Lfk$b;	d	get
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(Lfp;)Lfk$b;	d	setOffset
	m	(Lfp;I)Lfk$b;	d	setOffset
	m	(DDD)Lfk$b;	e	set
	m	(III)Lfk$b;	f	get
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(III)Lfk$b;	g	set
	m	(III)Lfk$b;	h	setOffset
	m	(Lgg;)Lfk$b;	j	set
	m	()Lfk$b;	r	get
c	fl	net/minecraft/util/math/BlockPointer
	m	()Lfk;	d	getBlockPos
	m	()Lbyj;	e	getBlockState
	m	()Lbwl;	g	getBlockEntity
c	fm	net/minecraft/util/math/BlockPointerImpl
	f	Lbjw;	a	world
	f	Lfk;	b	pos
	m	(Lbjw;Lfk;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
c	fn	net/minecraft/util/CuboidBlockIterator
	f	I	a	startX
	f	I	b	startY
	f	I	c	startZ
	f	I	d	endX
	f	I	e	endY
	f	I	f	endZ
	f	I	g	x
	f	I	h	y
	f	I	i	z
	f	Z	j	complete
	m	(IIIIII)V	<init>	<init>
		p	1	startX	startX
		p	2	startY	startY
		p	3	startZ	startZ
		p	4	endX	endX
		p	5	endY	endY
		p	6	endZ	endZ
	m	()Z	a	step
	m	()I	b	getX
	m	()I	c	getY
	m	()I	d	getZ
	m	()I	e	getEdgeCoordinatesCount
c	fo	net/minecraft/util/registry/DefaultedRegistry
	f	Lsm;	V	defaultId
	f	Ljava/lang/Object;	W	defaultValue
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	defaultId	defaultId
	m	()Lsm;	a	getDefaultId
c	fp	net/minecraft/util/math/Direction
	f	I	g	id
	f	I	h	idOpposite
	f	I	i	idHorizontal
	f	Ljava/lang/String;	j	name
	f	Lfp$a;	k	axis
	f	Lfp$b;	l	direction
	f	Lgg;	m	vector
	f	[Lfp;	n	ALL
	f	Ljava/util/Map;	o	NAME_MAP
	f	[Lfp;	p	VALUES
	f	[Lfp;	q	HORIZONTAL
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	r	VECTOR_TO_DIRECTION
	m	(Ljava/lang/String;IIIILjava/lang/String;Lfp$b;Lfp$a;Lgg;)V	<init>	<init>
		p	3	id	id
		p	4	idOpposite	idOpposite
		p	5	idHorizontal	idHorizontal
		p	6	name	name
		p	7	direction	direction
		p	8	axis	axis
		p	9	vector	vector
	m	(Lakq;)[Lfp;	a	getEntityFacingOrder
		p	0	entity	entity
	m	()Lc;	a	getRotationQuaternion
	m	(DDD)Lfp;	a	getFacing
		p	0	x	x
	m	(FFF)Lfp;	a	getFacing
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lb;Lfp;)Lfp;	a	transform
	m	(Ljava/lang/String;)Lfp;	a	byName
		p	0	name	name
	m	(I)Lfp;	a	byId
		p	0	id	id
	m	(III)Lfp;	a	fromVector
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Lfp$b;Lfp$a;)Lfp;	a	get
		p	0	direction	direction
		p	1	axis	axis
	m	(D)Lfp;	a	fromRotation
		p	0	rotation	rotation
	m	(Ljava/util/Random;)Lfp;	a	random
		p	0	random	random
	m	(Lfp$a;Lfp$b;)Lfp;	a	from
		p	0	axis	axis
		p	1	direction	direction
	m	()I	b	getId
	m	(I)Lfp;	b	fromHorizontal
		p	0	value	value
	m	()I	c	getHorizontal
	m	()Lfp$b;	d	getDirection
	m	()Lfp;	e	getOpposite
	m	()Lfp;	f	rotateYClockwise
	m	()Lfp;	g	rotateYCounterclockwise
	m	()I	h	getOffsetX
	m	()I	i	getOffsetY
	m	()I	j	getOffsetZ
	m	()Le;	k	getUnitVector
	m	()Ljava/lang/String;	l	getName
	m	()Lfp$a;	m	getAxis
	m	()F	n	asRotation
	m	()Lgg;	p	getVector
c	fp$a	net/minecraft/util/math/Direction$Axis
	f	Ljava/util/Map;	d	BY_NAME
	f	Ljava/lang/String;	e	name
	m	(DDD)D	a	choose
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(Lfp;)Z	a	test
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/util/Random;)Lfp$a;	a	pickRandomAxis
		p	0	random	random
	m	(III)I	a	choose
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Ljava/lang/String;)Lfp$a;	a	fromName
		p	0	name	name
	m	()Z	b	isVertical
	m	()Z	c	isHorizontal
	m	()Lfp$c;	d	getType
c	fp$a$1	net/minecraft/util/math/Direction$Axis$1
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	fp$a$2	net/minecraft/util/math/Direction$Axis$2
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	fp$a$3	net/minecraft/util/math/Direction$Axis$3
	m	(Ljava/lang/Object;)Z	test	test
		p	1	context	context
c	fp$b	net/minecraft/util/math/Direction$AxisDirection
	f	I	c	offset
	f	Ljava/lang/String;	d	desc
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3	offset	offset
		p	4	description	description
	m	()I	a	offset
c	fp$c	net/minecraft/util/math/Direction$Type
	f	[Lfp;	c	facingArray
	f	[Lfp$a;	d	axisArray
	m	(Ljava/lang/String;I[Lfp;[Lfp$a;)V	<init>	<init>
		p	3	directions	directions
	m	(Lfp;)Z	a	test
	m	(Ljava/util/Random;)Lfp;	a	random
		p	1	random	random
	m	(Ljava/lang/Object;)Z	test	test
		p	1	direction	direction
c	fq	net/minecraft/util/EightWayDirection
	f	I	i	NORTHWEST_BIT
	f	I	j	WEST_BIT
	f	I	k	SOUTHWEST_BIT
	f	I	l	SOUTH_BIT
	f	I	m	SOUTHEAST_BIT
	f	I	n	EAST_BIT
	f	I	o	NORTHEAST_BIT
	f	I	p	NORTH_BIT
	f	Ljava/util/Set;	q	directions
	m	()Ljava/util/Set;	a	getDirections
c	fr	net/minecraft/util/GlobalPos
	f	Lcbi;	a	dimension
	f	Lfk;	b	pos
	m	(Lcom/mojang/datafixers/Dynamic;)Lfr;	a	deserialize
		p	0	dynamic	dynamic
	m	()Lcbi;	a	getDimension
	m	(Lcbi;Lfk;)Lfr;	a	create
	m	()Lfk;	b	getPos
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	fs	net/minecraft/util/IndexedIterable
	m	(I)Ljava/lang/Object;	a	get
		p	1	index	index
c	ft	net/minecraft/util/IdList
	f	I	a	nextId
	f	Ljava/util/IdentityHashMap;	b	idMap
	f	Ljava/util/List;	c	list
	m	(Ljava/lang/Object;I)V	a	set
		p	1	value	value
	m	(Ljava/lang/Object;)I	a	getId
	m	()I	a	size
	m	(Ljava/lang/Object;)V	b	add
c	fu	net/minecraft/util/math/WorldPositionPointer
c	fv	net/minecraft/util/math/WorldPosition
	m	()Lbjw;	h	getWorld
c	fw	net/minecraft/util/MapUtil
	m	(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;	a	createMap
		p	0	keys	keys
		p	1	values	values
		p	2	result	result
	m	(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Map;	b	createMap
		p	0	keys	keys
		p	1	values	values
c	fx	net/minecraft/util/registry/SimpleRegistry
	f	I	V	nextId
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Labf;	b	indexedEntries
	f	Lcom/google/common/collect/BiMap;	c	entries
	f	[Ljava/lang/Object;	d	randomEntries
c	fy	net/minecraft/util/DefaultedList
	f	Ljava/util/List;	a	delegate
	f	Ljava/lang/Object;	b	initialElement
	m	(Ljava/util/List;Ljava/lang/Object;)V	<init>	<init>
		p	1	delegate	delegate
		p	2	initialElement	initialElement
	m	()Lfy;	a	of
	m	(ILjava/lang/Object;)Lfy;	a	ofSize
		p	0	size	size
		p	1	defaultValue	defaultValue
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Lfy;	a	copyOf
		p	0	defaultValue	defaultValue
		p	1	values	values
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
		p	2	element	element
	m	(I)Ljava/lang/Object;	get	get
		p	1	index	index
	m	(I)Ljava/lang/Object;	remove	remove
		p	1	index	index
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
		p	2	element	element
c	fz	net/minecraft/util/math/Position
	m	()D	a	getX
	m	()D	b	getY
	m	()D	c	getZ
c	g	net/minecraft/util/Formatting
	f	Z	A	modifier
	f	Ljava/lang/String;	B	stringValue
	f	I	C	colorIndex
	f	Ljava/lang/Integer;	D	colorValue
	f	Ljava/util/Map;	w	BY_NAME
	f	Ljava/util/regex/Pattern;	x	FORMATTING_CODE_PATTERN
	f	Ljava/lang/String;	y	name
	f	C	z	code
	m	(Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V	<init>	<init>
		p	3	name	name
		p	4	code	code
		p	5	colorIndex	colorIndex
		p	6	colorValue	colorValue
	m	(Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V	<init>	<init>
		p	3	name	name
		p	4	code	code
		p	5	modifier	modifier
		p	6	colorIndex	colorIndex
		p	7	colorValue	colorValue
	m	(Ljava/lang/String;ILjava/lang/String;CZ)V	<init>	<init>
		p	3	name	name
		p	4	code	code
		p	5	modifier	modifier
	m	(ZZ)Ljava/util/Collection;	a	getNames
		p	0	colors	colors
		p	1	modifiers	modifiers
	m	(Lg;)Lg;	a	method_541
		p	0	f	f
	m	(C)Lg;	a	byCode
		p	0	code	code
	m	(I)Lg;	a	byColorIndex
		p	0	colorIndex	colorIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFormatAtEnd
		p	0	string	string
	m	()I	b	getColorIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	b	strip
		p	0	string	string
	m	(Lg;)Ljava/lang/String;	b	method_531
		p	0	f	f
	m	(Ljava/lang/String;)Lg;	c	byName
		p	0	name	name
	m	()Z	c	isModifier
	m	(Ljava/lang/String;)Ljava/lang/String;	d	sanitize
		p	0	name	name
	m	()Z	d	isColor
	m	()Ljava/lang/Integer;	e	getColorValue
	m	()Z	f	affectsGlyphWidth
	m	()Ljava/lang/String;	g	getName
c	ga	net/minecraft/util/math/PositionImpl
	f	D	a	x
	f	D	b	y
	f	D	c	z
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
c	gb	net/minecraft/util/registry/Registry
	f	Lfo;	C	PAINTING_MOTIVE
		c	The painting motive (theme, motif) registry
	f	Lgb;	K	CONTAINER
	f	Ljava/util/Map;	a	DEFAULT_ENTRIES
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	f	Lgh;	f	REGISTRIES
	f	Lgb;	i	STATUS_EFFECT
	m	(Lgb;Lsm;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0	registry	registry
		p	1	id	id
		p	2	entry	entry
	m	(Lsm;)Ljava/lang/Object;	a	get
		p	1	id	id
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lgb;	a	create
		p	0	id	id
	m	(Lgb;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0	registry	registry
		p	1	id	id
		p	2	entry	entry
	m	(Ljava/lang/String;Lgh;Ljava/util/function/Supplier;)Lgh;	a	putDefaultEntry
		p	0	id	id
	m	(Ljava/util/Random;)Ljava/lang/Object;	a	getRandom
		p	1	random	random
	m	(Ljava/lang/Object;)I	a	getRawId
		p	1	entry	entry
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)Lfo;	a	create
		p	2	defaultEntry	defaultEntry
	m	(Lgb;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0	registry	registry
		p	1	rawId	rawId
		p	2	id	id
		p	3	entry	entry
	m	(Ljava/lang/Object;)Lsm;	b	getId
		p	1	entry	entry
	m	(Lsm;)Ljava/util/Optional;	b	getOrEmpty
		p	1	id	id
	m	()Ljava/util/Set;	b	getIds
	m	(Lsm;)Z	c	containsId
		p	1	id	id
	m	()Ljava/util/stream/Stream;	d	stream
c	gc	net/minecraft/util/math/EulerAngle
	f	F	a	pitch
	f	F	b	yaw
	f	F	c	roll
	m	(FFF)V	<init>	<init>
		p	1	pitch	pitch
		p	2	yaw	yaw
		p	3	roll	roll
	m	(Ljz;)V	<init>	<init>
		p	1	serialized	serialized
	m	()Ljz;	a	serialize
	m	()F	b	getPitch
	m	()F	c	getYaw
	m	()F	d	getRoll
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	gd	net/minecraft/util/math/ChunkSectionPos
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(IIIIII)Ljava/util/stream/Stream;	a	stream
		p	0	minX	minX
		p	1	minY	minY
		p	2	minZ	minZ
		p	3	maxX	maxX
		p	4	maxY	maxY
		p	5	maxZ	maxZ
	m	(Lbjh;I)Lgd;	a	from
		p	0	chunkPos	chunkPos
		p	1	y	y
	m	(Lfk;)Lgd;	a	from
		p	0	pos	pos
	m	(I)I	a	getSectionCoord
		p	0	coord	coord
	m	(J)Lgd;	a	from
		p	0	packed	packed
	m	(Lakq;)Lgd;	a	from
		p	0	entity	entity
	m	(III)Lgd;	a	from
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(JLfp;)J	a	offset
		p	0	packed	packed
		p	2	direction	direction
	m	()I	a	getSectionX
	m	(Lgd;I)Ljava/util/stream/Stream;	a	stream
		p	0	center	center
		p	1	radius	radius
	m	(JIII)J	a	offset
		p	0	packed	packed
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(III)J	b	asLong
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	()I	b	getSectionY
	m	(Lbjh;I)Ljava/util/stream/Stream;	b	stream
		p	0	center	center
		p	1	radius	radius
	m	(Lfk;)S	b	getPackedLocalPos
		p	0	pos	pos
	m	(I)I	b	getLocalCoord
		p	0	coord	coord
	m	(J)I	b	getX
		p	0	packed	packed
	m	(I)I	c	getWorldCoord
		p	0	chunkCoord	chunkCoord
	m	()I	c	getSectionZ
	m	(J)I	c	getY
		p	0	packed	packed
	m	(J)I	d	getZ
		p	0	packed	packed
	m	()I	d	getMinX
	m	()I	e	getMinY
	m	(J)J	e	fromGlobalPos
		p	0	globalLong	globalLong
	m	()I	f	getMinZ
	m	(J)J	f	withZeroZ
		p	0	pos	pos
	m	()I	g	getMaxX
	m	()I	h	getMaxY
	m	()I	r	getMaxZ
	m	()Lfk;	s	getMinPos
	m	()Lfk;	t	getCenterPos
	m	()Lbjh;	u	toChunkPos
	m	()J	v	asLong
	m	()Ljava/util/stream/Stream;	w	streamBlocks
c	gd$1	net/minecraft/util/math/ChunkSectionPos$1
	f	Lfn;	a	iterator
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
		p	1	consumer	consumer
c	ge	net/minecraft/util/Timestamp
	f	J	a	time
	m	(J)V	<init>	<init>
		p	1	time	time
	m	(J)Lge;	a	of
		p	0	time	time
	m	(Lcom/mojang/datafixers/Dynamic;)Lge;	a	of
		p	0	dynamic	dynamic
	m	()J	a	getTime
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	gg	net/minecraft/util/math/Vec3i
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	Lgg;	e	ZERO
	m	(DDD)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
	m	(III)V	<init>	<init>
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(Lfz;Z)D	a	getSquaredDistance
		p	1	pos	pos
		p	2	treatAsBlockPos	treatAsBlockPos
	m	(Lgg;D)Z	a	isWithinDistance
		p	1	vec	vec
		p	2	distance	distance
	m	(DDDZ)D	a	getSquaredDistance
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	treatAsBlockPos	treatAsBlockPos
	m	(Lfz;D)Z	a	isWithinDistance
		p	1	pos	pos
		p	2	distance	distance
	m	(Lfp;I)Lgg;	b	offset
	m	(Lgg;)Lgg;	d	crossProduct
		p	1	vec	vec
	m	(Lgg;)I	l	compareTo
	m	(I)Lgg;	l	down
	m	()Lgg;	m	down
	m	(Lgg;)D	m	getSquaredDistance
		p	1	vec	vec
	m	(Lgg;)I	n	getManhattanDistance
		p	1	vec	vec
	m	()I	o	getX
	m	()I	p	getY
	m	()I	q	getZ
	m	()Ljava/lang/String;	x	toShortString
c	gh	net/minecraft/util/registry/MutableRegistry
	m	(Lsm;Ljava/lang/Object;)Ljava/lang/Object;	a	add
		p	1	id	id
		p	2	entry	entry
	m	(ILsm;Ljava/lang/Object;)Ljava/lang/Object;	a	set
		p	1	rawId	rawId
		p	2	id	id
		p	3	entry	entry
	m	()Z	c	isEmpty
c	gi	net/minecraft/block/dispenser/ProjectileDispenserBehavior
	m	()F	a	getVariation
	m	(Lbjw;Lfz;Lben;)Layy;	a	createProjectile
		p	1	position	position
		p	2	stack	stack
	m	()F	b	getForce
c	gj	net/minecraft/block/dispenser/BoatDispenserBehavior
	f	Lgk;	b	itemDispenser
	f	Lazz$b;	c	boatType
c	gk	net/minecraft/block/dispenser/ItemDispenserBehavior
	m	(Lfl;Lfp;)V	a	spawnParticles
		p	1	pointer	pointer
		p	2	side	side
	m	(Lfl;Lben;)Lben;	a	dispenseSilently
		p	1	pointer	pointer
		p	2	stack	stack
	m	(Lfl;)V	a	playSound
		p	1	pointer	pointer
	m	(Lbjw;Lben;ILfp;Lfz;)V	a	spawnItem
		p	0	world	world
		p	1	stack	stack
		p	2	offset	offset
		p	3	side	side
		p	4	pos	pos
	m	(Lfl;Lben;)Lben;	dispense	dispense
		p	1	location	location
		p	2	stack	stack
c	gl	net/minecraft/block/dispenser/DispenserBehavior
	f	Lgl;	a	NOOP
	m	(Lfl;Lben;)Lben;	a	doDispense
	m	()V	c	registerDefaults
	m	(Lfl;Lben;)Lben;	dispense	dispense
		p	1	pointer	pointer
		p	2	stack	stack
c	gl$14	net/minecraft/block/dispenser/DispenserBehavior$14
	m	(Lfl;Lben;Lben;)Lben;	a	method_22141
		p	2	emptyBottleStack	emptyBottleStack
		p	3	filledBottleStack	filledBottleStack
c	gl$20	net/minecraft/block/dispenser/DispenserBehavior$20
	m	(Lfl;Lben;)Lben;	dispense	dispense
		p	1	location	location
		p	2	stack	stack
c	gl$21	net/minecraft/block/dispenser/DispenserBehavior$21
	m	(Lfl;Lben;)Lben;	dispense	dispense
		p	1	location	location
		p	2	stack	stack
c	gm	net/minecraft/block/dispenser/FallibleItemDispenserBehavior
	f	Z	b	success
c	gn	net/minecraft/block/dispenser/BlockPlacementDispenserBehavior
c	gq	net/minecraft/particle/BlockStateParticleEffect
	f	Lgt$a;	a	PARAMETERS_FACTORY
	f	Lgu;	b	type
	f	Lbyj;	c	blockState
	m	(Lgu;Lbyj;)V	<init>	<init>
		p	1	type	type
		p	2	blockState	blockState
	m	()Lbyj;	c	getBlockState
c	gq$1	net/minecraft/particle/BlockStateParticleEffect$1
	m	(Lgu;Lcom/mojang/brigadier/StringReader;)Lgq;	a	read
	m	(Lgu;Lkv;)Lgq;	a	read
c	gr	net/minecraft/particle/DustParticleEffect
	f	Lgr;	a	RED
	f	Lgt$a;	b	PARAMETERS_FACTORY
	f	F	c	red
	f	F	d	green
	f	F	e	blue
	f	F	f	scale
	m	(FFFF)V	<init>	<init>
		p	1	red	red
		p	2	green	green
		p	3	blue	blue
		p	4	scale	scale
	m	()F	c	getRed
	m	()F	d	getGreen
	m	()F	e	getBlue
	m	()F	f	getScale
c	gr$1	net/minecraft/particle/DustParticleEffect$1
	m	(Lgu;Lcom/mojang/brigadier/StringReader;)Lgr;	a	read
	m	(Lgu;Lkv;)Lgr;	a	read
c	gs	net/minecraft/particle/ItemStackParticleEffect
	f	Lgt$a;	a	PARAMETERS_FACTORY
	f	Lgu;	b	type
	f	Lben;	c	stack
	m	(Lgu;Lben;)V	<init>	<init>
		p	1	type	type
		p	2	stack	stack
	m	()Lben;	c	getItemStack
c	gs$1	net/minecraft/particle/ItemStackParticleEffect$1
	m	(Lgu;Lkv;)Lgs;	a	read
	m	(Lgu;Lcom/mojang/brigadier/StringReader;)Lgs;	a	read
c	gt	net/minecraft/particle/ParticleEffect
	m	(Lkv;)V	a	write
		p	1	buf	buf
	m	()Ljava/lang/String;	a	asString
	m	()Lgu;	b	getType
c	gt$a	net/minecraft/particle/ParticleEffect$Factory
	m	(Lgu;Lcom/mojang/brigadier/StringReader;)Lgt;	b	read
		p	1	type	type
		p	2	reader	reader
	m	(Lgu;Lkv;)Lgt;	b	read
		p	1	type	type
		p	2	buf	buf
c	gu	net/minecraft/particle/ParticleType
	f	Z	a	shouldAlwaysSpawn
	f	Lgt$a;	b	parametersFactory
	m	(ZLgt$a;)V	<init>	<init>
		p	1	shouldAlwaysShow	shouldAlwaysShow
		p	2	parametersFactory	parametersFactory
	m	()Z	c	shouldAlwaysSpawn
	m	()Lgt$a;	d	getParametersFactory
c	gv	net/minecraft/particle/ParticleTypes
	m	(Ljava/lang/String;Z)Lgw;	a	register
		p	0	name	name
		p	1	alwaysShow	alwaysShow
	m	(Ljava/lang/String;Lgt$a;)Lgu;	a	register
		p	0	name	name
		p	1	factory	factory
c	gw	net/minecraft/particle/DefaultParticleType
	f	Lgt$a;	a	PARAMETER_FACTORY
c	gw$1	net/minecraft/particle/DefaultParticleType$1
	m	(Lgu;Lcom/mojang/brigadier/StringReader;)Lgw;	a	read
	m	(Lgu;Lkv;)Lgw;	a	read
c	gy	net/minecraft/data/DataGenerator
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Collection;	b	inputs
	f	Ljava/nio/file/Path;	c	output
	f	Ljava/util/List;	d	providers
	m	(Ljava/nio/file/Path;Ljava/util/Collection;)V	<init>	<init>
		p	1	output	output
	m	(Lgz;)V	a	install
	m	()Ljava/util/Collection;	a	getInputs
	m	()Ljava/nio/file/Path;	b	getOutput
	m	()V	c	run
c	gz	net/minecraft/data/DataProvider
	f	Lcom/google/common/hash/HashFunction;	a	SHA1
	m	(Lha;)V	a	run
	m	(Lcom/google/gson/Gson;Lha;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V	a	writeToPath
		p	0	gson	gson
		p	1	cache	cache
		p	2	output	output
	m	()Ljava/lang/String;	a	getName
c	h	net/minecraft/util/crash/CrashReport
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	message
	f	Ljava/lang/Throwable;	c	cause
	f	Li;	d	systemDetailsSection
	f	Ljava/util/List;	e	otherSections
	f	Ljava/io/File;	f	file
	f	Z	g	hasStackTrace
	f	[Ljava/lang/StackTraceElement;	h	stackTrace
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	message	message
	m	()Ljava/lang/String;	a	getMessage
	m	(Ljava/io/File;)Z	a	writeToFile
	m	(Ljava/lang/StringBuilder;)V	a	addStackTrace
	m	(Ljava/lang/String;)Li;	a	addElement
		p	1	name	name
	m	(Ljava/lang/String;I)Li;	a	addElement
		p	1	name	name
		p	2	ignoredStackTraceCallCount	ignoredStackTraceCallCount
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lh;	a	create
		p	0	cause	cause
		p	1	title	title
	m	()Ljava/lang/Throwable;	b	getCause
	m	()Ljava/lang/String;	d	getCauseAsString
	m	()Ljava/lang/String;	e	asString
	m	()Ljava/io/File;	f	getFile
	m	()Li;	g	getSystemDetailsSection
	m	()V	i	fillSystemDetails
	m	()Ljava/lang/String;	j	generateWittyComment
c	ha	net/minecraft/data/DataCache
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	root
	f	Ljava/nio/file/Path;	c	recordFile
	f	I	d	unchanged
	f	Ljava/util/Map;	e	oldSha1
	f	Ljava/util/Map;	f	newSha1
	f	Ljava/util/Set;	g	ignores
	m	()V	a	write
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	getOldSha1
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	updateSha1
	m	()V	b	deleteAll
	m	(Ljava/nio/file/Path;)Z	b	contains
	m	()Ljava/util/stream/Stream;	c	files
	m	(Ljava/nio/file/Path;)V	c	ignore
c	hb	net/minecraft/data/server/AdvancementsProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lgy;	d	root
	f	Ljava/util/List;	e	tabGenerators
	m	(Ljava/nio/file/Path;Lu;)Ljava/nio/file/Path;	a	getOutput
		p	0	rootOutput	rootOutput
		p	1	advancement	advancement
c	hc	net/minecraft/data/server/AdventureTabAdvancementGenerator
	f	[Lbkt;	a	BIOMES
	f	[Laku;	b	MONSTERS
	m	(Ljava/util/function/Consumer;)V	a	accept
	m	(Lu$a;)Lu$a;	a	requireListedMobsKilled
	m	(Lu$a;)Lu$a;	b	requireListedBiomesVisited
c	hd	net/minecraft/data/server/HusbandryTabAdvancementGenerator
	f	[Laku;	a	BREEDABLE_ANIMALS
	f	[Lbei;	b	FISH_ITEMS
	f	[Lbei;	c	FISH_BUCKET_ITEMS
	f	[Lbei;	d	FOOD_ITEMS
	m	(Ljava/util/function/Consumer;)V	a	accept
	m	(Lu$a;)Lu$a;	a	requireFoodItemsEaten
	m	(Lu$a;)Lu$a;	b	requireListedAnimalsBred
	m	(Lu$a;)Lu$a;	c	requireListedFishBucketsFilled
	m	(Lu$a;)Lu$a;	d	requireListedFishCaught
	m	(Lu$a;)Lu$a;	e	requireAllCatsTamed
c	he	net/minecraft/data/server/NetherTabAdvancementGenerator
	m	(Ljava/util/function/Consumer;)V	a	accept
c	hf	net/minecraft/data/server/StoryTabAdvancementGenerator
	m	(Ljava/util/function/Consumer;)V	a	accept
c	hg	net/minecraft/data/server/EndTabAdvancementGenerator
	m	(Ljava/util/function/Consumer;)V	a	accept
c	hi	net/minecraft/data/report/BlockListProvider
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lgy;	c	root
c	hj	net/minecraft/data/report/CommandSyntaxProvider
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lgy;	c	root
c	hk	net/minecraft/data/report/ItemListProvider
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lgy;	c	root
	m	(Lgh;)Lcom/google/gson/JsonElement;	a	toJson
c	hm	net/minecraft/data/server/BlockLootTableGenerator
	f	Lcum$a;	a	NEEDS_SILK_TOUCH
	f	Lcum$a;	b	DOESNT_NEED_SILK_TOUCH
	f	Lcum$a;	c	NEEDS_SHEARS
	f	Lcum$a;	d	NEEDS_SILK_TOUCH_SHEARS
	f	Lcum$a;	e	DOESNT_NEED_SILK_TOUCH_SHEARS
	f	Ljava/util/Set;	f	ALWAYS_DROPPED_FROM_EXPLOSION
	f	[F	g	SAPLING_DROP_CHANCES_FROM_LEAVES
	f	[F	h	JUNGLE_SAPLING_DROP_CHANCES_FROM_LEAVES
	f	Ljava/util/Map;	i	lootTables
	m	(Lbjv;Lcsd;)Lcsa$a;	a	create
		p	1	count	count
	m	(Lbph;Lbzm;Ljava/lang/Comparable;)Lcsa$a;	a	createForMultiblock
	m	(Lbph;Lcsq$a;)Lcsa$a;	a	createForNeedingSilkTouch
		p	1	child	child
	m	(Lbph;Lbei;)Lcsa$a;	a	createForOreWithSingleItemDrop
	m	(Lbph;Lcum$a;Lcsq$a;)Lcsa$a;	a	create
		p	1	conditionBuilder	conditionBuilder
		p	2	child	child
	m	(Lbph;Lbph;)V	a	registerForNeedingSilkTouch
		p	1	block	block
		p	2	droppedBlock	droppedBlock
	m	()Lcsa$a;	a	createEmpty
	m	(Lbjv;)Lcsa$a;	a	create
	m	(Lbph;Ljava/util/function/Function;)V	a	registerWithFunction
	m	(Lbph;)V	a	registerForPottedPlant
	m	(Lbph;Lbjv;)V	a	register
		p	2	loot	loot
	m	(Lbph;Lcsa$a;)V	a	register
	m	(Lbph;Lbei;Lbei;Lcum$a;)Lcsa$a;	a	createForCrops
		p	1	food	food
		p	2	seeds	seeds
		p	3	condition	condition
	m	(Lbph;Lbjv;Lcsd;)Lcsa$a;	a	createForBlockWithItemDrops
		p	1	lootWithoutSilkTouch	lootWithoutSilkTouch
		p	2	count	count
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	m	(Lbjv;Lcuf;)Ljava/lang/Object;	a	addSurvivesExplosionLootCondition
	m	(Lbph;Lbph;[F)Lcsa$a;	a	createForLeaves
		p	0	leafBlock	leafBlock
		p	1	sapling	sapling
		p	2	saplingDropChances	saplingDropChances
	m	(Lbjv;Lctf;)Ljava/lang/Object;	a	addExplosionDecayLootFunction
	m	(Lbph;Lbph;[F)Lcsa$a;	b	createForOakLeaves
	m	(Lbph;)V	b	registerForNeedingSilkTouch
	m	(Lbjv;)Lcsa$a;	b	createForNeedingSilkTouch
	m	(Lbph;Lbjv;)Lcsa$a;	b	createForBlockWithItemDrops
		p	1	lootWithoutSilkTouch	lootWithoutSilkTouch
	m	(Lbph;Lbei;)Lcsa$a;	b	createForCropStem
		p	1	seeds	seeds
	m	(Lbph;Lcsq$a;)Lcsa$a;	b	createForNeedingShears
		p	1	child	child
	m	(Lbph;Lcsq$a;)Lcsa$a;	c	createForNeedingSilkTouchShears
		p	1	child	child
	m	(Lbjv;)Lcsa$a;	c	createForPottedPlant
	m	(Lbph;)V	c	registerForSelfDrop
	m	(Lbph;Lbjv;)Lcsa$a;	c	createForLargeMushroomBlock
		p	1	loot	loot
	m	(Lbph;Lbei;)Lcsa$a;	c	createForAttachedCropStem
		p	1	seeds	seeds
	m	(Lbph;)Lcsa$a;	d	createForSlabs
	m	(Lbjv;)Lcsa$a;	d	createForBlockNeedingShears
	m	(Lbph;)Lcsa$a;	e	createForNameableContainer
	m	(Lbph;)Lcsa$a;	f	createForShulkerBox
	m	(Lbph;)Lcsa$a;	g	createForBanner
	m	(Lbph;)Lcsa$a;	h	createForBeeNest
	m	(Lbph;)Lcsa$a;	i	createForBeehive
	m	(Lbph;)Lcsa$a;	j	createForTallGrass
c	hn	net/minecraft/data/server/ChestLootTableGenerator
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	ho	net/minecraft/data/server/EntityLootTableGenerator
	f	Lbb$a;	a	NEEDS_ENTITY_ON_FIRE
	f	Ljava/util/Set;	b	ENTITY_TYPES_IN_MISC_CATEGORY_TO_CHECK
	f	Ljava/util/Map;	c	lootTables
	m	(Laku;Lcsa$a;)V	a	register
	m	(Lsm;Lcsa$a;)V	a	register
	m	(Lbjv;)Lcsa$a;	a	createForSheep
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	hp	net/minecraft/data/server/FishingLootTableGenerator
	f	Lcum$a;	a	NEEDS_JUNGLE_BIOME
	f	Lcum$a;	b	NEEDS_JUNGLE_HILLS_BIOME
	f	Lcum$a;	c	NEEDS_JUNGLE_EDGE_BIOME
	f	Lcum$a;	d	NEEDS_BAMBOO_JUNGLE_BIOME
	f	Lcum$a;	e	NEEDS_MODIFIED_JUNGLE_BIOME
	f	Lcum$a;	f	NEEDS_MODIFIED_JUNGLE_EDGE_BIOME
	f	Lcum$a;	g	NEEDS_BAMBOO_JUNGLE_HILLS_BIOME
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	hq	net/minecraft/data/server/GiftLootTableGenerator
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	hr	net/minecraft/data/server/LootTablesProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lgy;	d	root
	f	Ljava/util/List;	e	lootTypeGenerators
	m	(Ljava/nio/file/Path;Lsm;)Ljava/nio/file/Path;	a	getOutput
		p	0	rootOutput	rootOutput
		p	1	lootTableId	lootTableId
c	hu	net/minecraft/data/server/recipe/RecipeJsonProvider
	m	()Lcom/google/gson/JsonObject;	a	toJson
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1	json	json
	m	()Lsm;	b	getRecipeId
	m	()Lbgy;	c	getSerializer
	m	()Lcom/google/gson/JsonObject;	d	toAdvancementJson
	m	()Lsm;	e	getAdvancementId
c	hv	net/minecraft/data/server/RecipesProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lgy;	d	root
	m	([Lbj;)Lbh$a;	a	conditionsFromItemPredicates
		p	1	items	items
	m	(Laaz;)Lbh$a;	a	conditionsFromTag
	m	(Lha;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	a	saveRecipe
	m	(Lbph;)Lax$a;	a	requireEnteringFluid
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lbhf;I)V	a	generateCookingRecipes
		p	2	recipeType	recipeType
		p	4	cookTime	cookTime
	m	(Ljava/util/function/Consumer;)V	a	generate
	m	(Lbjv;)Lbh$a;	a	conditionsFromItem
	m	(Lha;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	b	saveRecipeAdvancement
c	hw	net/minecraft/data/server/recipe/ShapedRecipeJsonFactory
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbei;	b	output
	f	I	c	outputCount
	f	Ljava/util/List;	d	pattern
	f	Ljava/util/Map;	e	inputs
	f	Lu$a;	f	builder
	f	Ljava/lang/String;	g	group
	m	(Lbjv;I)V	<init>	<init>
		p	1	output	output
		p	2	outputCount	outputCount
	m	(Lbjv;I)Lhw;	a	create
		p	0	output	output
		p	1	outputCount	outputCount
	m	(Ljava/lang/String;Lac;)Lhw;	a	criterion
		p	1	criterionName	criterionName
		p	2	conditions	conditions
	m	(Ljava/lang/Character;Laaz;)Lhw;	a	input
		p	1	c	c
		p	2	tag	tag
	m	(Ljava/util/function/Consumer;)V	a	offerTo
		p	1	exporter	exporter
	m	(Lbjv;)Lhw;	a	create
		p	0	output	output
	m	(Ljava/lang/Character;Lbjv;)Lhw;	a	input
		p	1	c	c
		p	2	itemProvider	itemProvider
	m	(Lsm;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Lsm;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Ljava/lang/Character;Lbgt;)Lhw;	a	input
		p	1	c	c
		p	2	ingredient	ingredient
	m	(Ljava/lang/String;)Lhw;	a	pattern
		p	1	patternStr	patternStr
	m	(Ljava/lang/String;)Lhw;	b	group
		p	1	group	group
c	hw$a	net/minecraft/data/server/recipe/ShapedRecipeJsonFactory$ShapedRecipeJsonProvider
	f	Lsm;	b	recipeId
	f	Lbei;	c	output
	f	I	d	resultCount
	f	Ljava/lang/String;	e	group
	f	Ljava/util/List;	f	pattern
	f	Ljava/util/Map;	g	inputs
	f	Lu$a;	h	builder
	f	Lsm;	i	advancementId
	m	(Lhw;Lsm;Lbei;ILjava/lang/String;Ljava/util/List;Ljava/util/Map;Lu$a;Lsm;)V	<init>	<init>
		p	2	recipeId	recipeId
		p	3	output	output
		p	4	outputCount	outputCount
		p	5	group	group
		p	6	pattern	pattern
		p	7	inputs	inputs
		p	8	builder	builder
		p	9	advancementId	advancementId
c	hx	net/minecraft/data/server/recipe/ShapelessRecipeJsonFactory
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lbei;	b	output
	f	I	c	outputCount
	f	Ljava/util/List;	d	inputs
	f	Lu$a;	e	builder
	f	Ljava/lang/String;	f	group
	m	(Lbjv;I)V	<init>	<init>
		p	1	itemProvider	itemProvider
		p	2	outputCount	outputCount
	m	(Lbjv;I)Lhx;	a	create
		p	0	output	output
		p	1	outputCount	outputCount
	m	(Laaz;)Lhx;	a	input
		p	1	tag	tag
	m	(Ljava/lang/String;Lac;)Lhx;	a	criterion
		p	1	criterionName	criterionName
		p	2	conditions	conditions
	m	(Lbjv;)Lhx;	a	create
		p	0	output	output
	m	(Ljava/util/function/Consumer;)V	a	offerTo
		p	1	exporter	exporter
	m	(Lbgt;)Lhx;	a	input
		p	1	ingredient	ingredient
	m	(Ljava/lang/String;)Lhx;	a	group
		p	1	group	group
	m	(Lbgt;I)Lhx;	a	input
		p	1	ingredient	ingredient
		p	2	size	size
	m	(Lsm;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Lsm;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Lbjv;I)Lhx;	b	input
		p	1	itemProvider	itemProvider
		p	2	size	size
	m	(Lbjv;)Lhx;	b	input
		p	1	itemProvider	itemProvider
c	hx$a	net/minecraft/data/server/recipe/ShapelessRecipeJsonFactory$ShapelessRecipeJsonProvider
	f	Lsm;	a	recipeId
	f	Lbei;	b	output
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	inputs
	f	Lu$a;	f	builder
	f	Lsm;	g	advancementId
	m	(Lsm;Lbei;ILjava/lang/String;Ljava/util/List;Lu$a;Lsm;)V	<init>	<init>
		p	1	recipeId	recipeId
		p	2	output	output
		p	3	outputCount	outputCount
		p	4	group	group
		p	5	inputs	inputs
		p	6	builder	builder
		p	7	advancementId	advancementId
c	hy	net/minecraft/data/server/recipe/CookingRecipeJsonFactory
	f	Lbei;	a	output
	f	Lbgt;	b	input
	f	F	c	exp
	f	I	d	time
	f	Lu$a;	e	builder
	f	Ljava/lang/String;	f	group
	f	Lbhf;	g	serializer
	m	(Lbjv;Lbgt;FILbhf;)V	<init>	<init>
		p	1	ouptut	ouptut
		p	2	input	input
		p	3	exp	exp
		p	4	time	time
		p	5	serializer	serializer
	m	(Ljava/util/function/Consumer;)V	a	offerTo
		p	1	exporter	exporter
	m	(Lsm;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Lsm;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/lang/String;Lac;)Lhy;	a	criterion
		p	1	criterionName	criterionName
		p	2	conditions	conditions
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Lbgt;Lbjv;FILbhf;)Lhy;	a	create
		p	0	input	input
		p	1	output	output
		p	2	exp	exp
		p	3	time	time
		p	4	serializer	serializer
	m	(Lbgt;Lbjv;FI)Lhy;	b	createBlasting
		p	0	input	input
		p	1	output	output
		p	2	exp	exp
		p	3	time	time
	m	(Lbgt;Lbjv;FI)Lhy;	c	createSmelting
		p	0	input	input
		p	1	output	output
		p	2	exp	exp
		p	3	time	time
c	hy$a	net/minecraft/data/server/recipe/CookingRecipeJsonFactory$CookingRecipeJsonProvider
	f	Lsm;	a	recipeId
	f	Ljava/lang/String;	b	group
	f	Lbgt;	c	ingredient
	f	Lbei;	d	result
	f	F	e	experience
	f	I	f	cookingTime
	f	Lu$a;	g	builder
	f	Lsm;	h	advancementId
	f	Lbgy;	i	cookingRecipeSerializer
	m	(Lsm;Ljava/lang/String;Lbgt;Lbei;FILu$a;Lsm;Lbgy;)V	<init>	<init>
		p	1	recipeId	recipeId
		p	2	group	group
		p	3	input	input
		p	4	output	output
		p	5	exp	exp
		p	6	time	time
		p	7	builder	builder
		p	8	advancementId	advancementId
		p	9	serializer	serializer
c	hz	net/minecraft/data/server/recipe/SingleItemRecipeJsonFactory
	f	Lbei;	a	output
	f	Lbgt;	b	input
	f	I	c	count
	f	Lu$a;	d	builder
	f	Ljava/lang/String;	e	group
	f	Lbgy;	f	serializer
	m	(Lbgy;Lbgt;Lbjv;I)V	<init>	<init>
		p	1	serializer	serializer
		p	2	input	input
		p	3	output	output
		p	4	outputCount	outputCount
	m	(Lsm;)V	a	validate
		p	1	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Lsm;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeIdStr	recipeIdStr
	m	(Lbgt;Lbjv;I)Lhz;	a	create
		p	0	input	input
		p	1	output	output
		p	2	outputCount	outputCount
	m	(Lbgt;Lbjv;)Lhz;	a	create
		p	0	input	input
		p	1	output	output
	m	(Ljava/lang/String;Lac;)Lhz;	a	create
		p	1	criterionName	criterionName
		p	2	conditions	conditions
c	hz$a	net/minecraft/data/server/recipe/SingleItemRecipeJsonFactory$SingleItemRecipeJsonProvider
	f	Lsm;	a	recipeId
	f	Ljava/lang/String;	b	group
	f	Lbgt;	c	input
	f	Lbei;	d	output
	f	I	e	count
	f	Lu$a;	f	builder
	f	Lsm;	g	advancementId
	f	Lbgy;	h	serializer
	m	(Lsm;Lbgy;Ljava/lang/String;Lbgt;Lbei;ILu$a;Lsm;)V	<init>	<init>
		p	1	recipeId	recipeId
		p	2	serializer	serializer
		p	3	group	group
		p	4	input	input
		p	5	output	output
		p	6	outputCount	outputCount
		p	7	builder	builder
		p	8	advancementId	advancementId
c	i	net/minecraft/util/crash/CrashReportSection
	f	Lh;	a	report
	f	Ljava/lang/String;	b	title
	f	Ljava/util/List;	c	elements
	f	[Ljava/lang/StackTraceElement;	d	stackTrace
	m	(Lh;Ljava/lang/String;)V	<init>	<init>
		p	1	report	report
	m	(Li;Lfk;Lbyj;)V	a	addBlockInfo
		p	0	element	element
		p	1	pos	pos
		p	2	state	state
	m	(DDD)Ljava/lang/String;	a	createPositionString
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	add
		p	1	name	name
	m	(Ljava/lang/String;Lj;)Li;	a	add
	m	(Lfk;)Ljava/lang/String;	a	createPositionString
		p	0	pos	pos
	m	(Ljava/lang/StringBuilder;)V	a	addStackTrace
	m	(I)I	a	initStackTrace
		p	1	ignoredCallCount	ignoredCallCount
	m	()[Ljava/lang/StackTraceElement;	a	getStackTrace
	m	(III)Ljava/lang/String;	a	createPositionString
		p	0	x	x
		p	1	y	y
		p	2	z	z
	m	(Ljava/lang/String;Ljava/lang/Object;)Li;	a	add
		p	1	name	name
	m	(I)V	b	trimStackTraceEnd
		p	1	callCount	callCount
c	i$a	net/minecraft/util/crash/CrashReportSection$Element
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	detail
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getDetail
c	ia	net/minecraft/data/server/recipe/ComplexRecipeJsonFactory
	f	Lbhg;	a	serializer
	m	(Lbhg;)V	<init>	<init>
		p	1	serializer	serializer
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	offerTo
		p	1	exporter	exporter
		p	2	recipeId	recipeId
	m	(Lbhg;)Lia;	a	create
		p	0	serializer	serializer
c	ic	net/minecraft/data/dev/NbtProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lgy;	c	root
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getLocation
		p	1	targetPath	targetPath
		p	2	rootPath	rootPath
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertNbtToSnbt
		p	0	inputPath	inputPath
		p	1	location	location
		p	2	outputPath	outputPath
c	id	net/minecraft/data/SnbtProvider
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lgy;	c	root
	f	Ljava/util/List;	d	write
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lid$b;	a	toCompressedNbt
		p	2	name	name
	m	(Lha;Lid$b;Ljava/nio/file/Path;)V	a	write
	m	(Lid$a;)Lid;	a	addWriter
	m	(Ljava/lang/String;Ljt;)Ljt;	a	write
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getFileName
		p	1	root	root
		p	2	file	file
c	id$a	net/minecraft/data/SnbtProvider$Tweaker
	m	(Ljava/lang/String;Ljt;)Ljt;	a	write
		p	1	name	name
		p	2	nbt	nbt
c	id$b	net/minecraft/data/SnbtProvider$CompressedData
	f	Ljava/lang/String;	a	name
	f	[B	b	bytes
	f	Ljava/lang/String;	c	sha1
	m	(Ljava/lang/String;[BLjava/lang/String;)V	<init>	<init>
		p	1	name	name
		p	2	bytes	bytes
		p	3	sha1	sha1
c	ie	net/minecraft/data/validate/StructureValidatorProvider
	m	(Ljt;)Ljt;	a	addDataVersion
		p	0	nbt	nbt
	m	(Ljt;)Ljt;	b	update
		p	0	nbt	nbt
c	ih	net/minecraft/data/server/BlockTagsProvider
c	ii	net/minecraft/data/server/EntityTypeTagsProvider
c	ij	net/minecraft/data/server/FluidTagsProvider
c	ik	net/minecraft/data/server/ItemTagsProvider
	f	Lorg/apache/logging/log4j/Logger;	e	LOG
	m	(Laaz;Laaz;)V	a	copy
	m	(Laaz$b;)Laaz$b;	a	convert
c	il	net/minecraft/data/server/AbstractTagProvider
	f	Lgy;	b	root
	f	Lgb;	c	registry
	f	Ljava/util/Map;	d	tagBuilders
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	f	Lcom/google/gson/Gson;	f	GSON
	m	(Lgy;Lgb;)V	<init>	<init>
		p	1	root	root
	m	(Laaz;)Laaz$a;	a	getOrCreateTagBuilder
	m	(Lsm;)Ljava/nio/file/Path;	a	getOutput
	m	(Laba;)V	a	setContainer
	m	()V	b	configure
c	ip	net/minecraft/test/TimeMismatchException
c	iq	net/minecraft/test/PositionedException
	f	Lfk;	a	pos
	f	Lfk;	b	relativePos
	m	()Ljava/lang/String;	a	getDebugMessage
	m	()Lfk;	c	getPos
c	ir	net/minecraft/test/GameTestBatch
	f	Ljava/lang/String;	a	id
	f	Ljava/util/Collection;	b	testFunctions
	f	Ljava/util/function/Consumer;	c	worldSetter
	m	(Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1	id	id
		p	2	testFunctions	testFunctions
	m	(Lxd;)V	a	setWorld
		p	1	world	world
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/util/Collection;	b	getTestFunctions
c	is	net/minecraft/test/TestRunner
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lfk;	b	pos
	f	Lxd;	c	world
	f	Ljc;	d	testManager
	f	Ljava/util/List;	e	tests
	f	Ljava/util/List;	f	batches
	f	Ljf;	g	currentBatchTests
	f	I	h	currentBatchIndex
	f	Lfk$a;	i	reusablePos
	f	I	j	sizeZ
	m	(Ljava/util/Collection;Lfk;Lxd;Ljc;)V	<init>	<init>
		p	1	batches	batches
		p	2	pos	pos
		p	3	world	world
		p	4	testManager	testManager
	m	()Ljava/util/List;	a	getTests
	m	(Liw;)V	a	onTestCompleted
		p	1	test	test
	m	(I)V	a	runBatch
		p	1	index	index
	m	()V	b	run
c	it	net/minecraft/test/TimedTask
	f	Ljava/lang/Long;	a	duration
	f	Ljava/lang/Runnable;	b	task
c	iv	net/minecraft/test/StartupParameter
	f	Liw;	a	test
	m	(Liw;)V	<init>	<init>
		p	1	test	test
c	iw	net/minecraft/test/GameTest
	f	Ljk;	a	testFunction
	f	Lfk;	b	pos
	f	Lxd;	c	world
	f	Ljava/util/Collection;	d	listeners
	f	I	e	ticksLeft
	f	J	h	expectedStopTime
	f	Z	j	started
	f	Lcom/google/common/base/Stopwatch;	k	stopwatch
	f	Z	l	completed
	f	Ljava/lang/Throwable;	m	throwable
	m	(Ljk;Lfk;Lxd;)V	<init>	<init>
		p	1	testFunction	testFunction
		p	2	pos	pos
		p	3	world	world
	m	(Lix;)V	a	addListener
		p	1	listener	listener
	m	(Ljava/lang/Throwable;)V	a	fail
		p	1	throwable	throwable
	m	()V	a	startCountdown
	m	(Lfk;)V	a	setPos
	m	(I)V	a	init
	m	()V	b	tick
	m	()Ljava/lang/String;	c	getStructurePath
	m	()Lfk;	d	getPos
	m	()Lfk;	e	getSize
	m	()Lxd;	g	getWorld
	m	()Z	h	isPassed
	m	()Z	i	isFailed
	m	()Z	j	isStarted
	m	()Z	k	isCompleted
	m	()Ljava/lang/Throwable;	n	getThrowable
	m	()Z	q	isRequired
	m	()Z	r	isOptional
	m	()Ljava/lang/String;	s	getStructureName
	m	()V	t	start
	m	()Lbxl;	u	getBlockEntity
	m	()V	v	complete
c	ix	net/minecraft/test/TestListener
	m	(Liw;)V	a	onStarted
		p	1	test	test
	m	(Liw;)V	c	onFailed
		p	1	test	test
c	iy	net/minecraft/test/TestFunctions
	f	Ljava/util/Collection;	a	TEST_FUNCTIONS
	f	Ljava/util/Set;	b	testClasses
	f	Ljava/util/Map;	c	WORLD_SETTERS
	m	(Ljk;Ljava/lang/String;)Z	a	isInClass
		p	0	testFunction	testFunction
		p	1	testClass	testClass
	m	(Ljava/lang/String;)Ljava/util/Collection;	a	getTestFunctions
		p	0	testClass	testClass
	m	()Ljava/util/Collection;	a	getTestFunctions
	m	(Ljava/lang/String;)Z	b	testClassExists
		p	0	testClass	testClass
	m	()Ljava/util/Collection;	b	getTestClasses
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	c	getWorldSetter
		p	0	batchId	batchId
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	getTestFunction
		p	0	structurePath	structurePath
	m	(Ljava/lang/String;)Ljk;	e	getTestFunctionOrThrow
		p	0	structurePath	structurePath
c	iz	net/minecraft/test/TestUtil
	m	(Lxd;Lg;Ljava/lang/String;)V	a	sendMessage
		p	0	world	world
		p	1	formatting	formatting
		p	2	message	message
	m	(Lxd;Lfk;Ljc;I)V	a	clearTests
		p	0	world	world
		p	1	pos	pos
		p	2	testManager	testManager
		p	3	radius	radius
	m	(Ljava/util/Collection;Lfk;Lxd;Ljc;)Ljava/util/Collection;	a	runTestBatches
		p	0	batches	batches
		p	1	pos	pos
		p	2	world	world
		p	3	testManager	testManager
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	createBatches
		p	0	testFunctions	testFunctions
	m	(Ljava/lang/String;ZLjava/lang/String;)Lben;	a	createBook
		p	0	structureName	structureName
		p	1	required	required
		p	2	message	message
	m	(Lxd;Lfk;Ljava/lang/String;)V	a	addDebugMarker
		p	0	world	world
		p	1	pos	pos
		p	2	message	message
	m	(Liw;Ljc;)V	a	startTest
	m	(Lxd;)V	a	clearDebugMarkers
		p	0	world	world
	m	(Ljava/util/Collection;Lfk;Lxd;Ljc;)Ljava/util/Collection;	b	runTestFunctions
		p	0	testFunctions	testFunctions
		p	1	pos	pos
		p	2	world	world
		p	3	testManager	testManager
	m	(Liw;Ljava/lang/String;)V	b	createLectern
		p	0	test	test
		p	1	message	message
	m	(Liw;Lbph;)V	b	createBeacon
		p	0	test	test
		p	1	glass	glass
	m	(Liw;)V	c	handleTestFail
		p	0	test	test
c	j	net/minecraft/util/crash/CrashCallable
c	ja	net/minecraft/test/TimedTaskRunner
	f	Liw;	a	test
	f	Ljava/util/List;	b	tasks
	f	J	c	tick
	m	(J)V	a	runSilently
		p	1	tick	tick
	m	(J)V	b	runReported
		p	1	tick	tick
	m	(J)V	c	runTasks
		p	1	tick	tick
c	jc	net/minecraft/test/TestManager
	f	Ljc;	a	INSTANCE
	f	Ljava/util/Collection;	b	tests
	m	(Liw;)V	a	start
		p	1	test	test
	m	()V	a	clear
	m	()V	b	tick
c	jd	net/minecraft/test/TickLimitExceededException
c	je	net/minecraft/test/FailureLoggingTestCompletionListener
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
c	jf	net/minecraft/test/TestSet
	f	Ljava/util/Collection;	a	tests
	f	Lix;	b	listener
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1	tests	tests
	m	(Lix;)V	a	addListener
		p	1	listener	listener
	m	()I	a	getFailedRequiredTestCount
	m	(Liw;)V	a	add
		p	1	test	test
	m	()I	b	getFailedOptionalTestCount
	m	()I	c	getCompletedTestCount
	m	()Z	d	failed
	m	()Z	e	hasFailedOptionalTests
	m	()I	h	getTestCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getResultString
c	jg	net/minecraft/test/StructureTestUtil
	f	Ljava/lang/String;	a	testStructuresDirectoryName
	m	(Ljava/lang/String;Lfk;Lfk;ILxd;)V	a	createTestArea
		p	0	structure	structure
		p	1	pos	pos
		p	2	size	size
		p	3	margin	margin
		p	4	world	world
	m	(Lfk;ILxd;)Ljava/util/Optional;	a	findContainingStructureBlock
		p	0	pos	pos
		p	1	radius	radius
		p	2	world	world
	m	(Lclb;ILxd;)V	a	clearArea
	m	(Lfk;Lfk;Lxd;)Z	a	isInStructureBounds
		p	0	structureBlockPos	structureBlockPos
		p	1	pos	pos
		p	2	world	world
	m	(Ljava/lang/String;Lfk;Lxd;Z)Lbxl;	a	placeStructure
		p	0	name	name
		p	1	pos	pos
		p	2	world	world
		p	3	resizeDisabled	resizeDisabled
	m	(Lfk;Lxd;)V	a	placeStartButton
		p	0	pos	pos
		p	1	world	world
	m	(Ljava/nio/file/Path;)Ljt;	a	loadSnbt
		p	0	path	path
	m	(Lbxl;)Lcvf;	a	getStructureBoundingBox
		p	0	structureBlockEntity	structureBlockEntity
	m	(Lfk;ILxd;)Lfk;	b	findNearestStructureBlock
		p	0	pos	pos
		p	1	radius	radius
		p	2	world	world
	m	(Lfk;Lxd;)V	b	forceLoadNearbyChunks
		p	0	pos	pos
		p	1	world	world
	m	(Lfk;ILxd;)Ljava/util/Collection;	c	findStructureBlocks
		p	0	pos	pos
		p	1	radius	radius
		p	2	world	world
c	ji	net/minecraft/command/arguments/TestClassArgumentType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getTestClass
		p	0	context	context
		p	1	name	name
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
c	jj	net/minecraft/server/command/TestCommand
	m	(Lcq;Ljava/lang/String;III)I	a	executeCreate
		p	0	source	source
		p	1	structure	structure
		p	2	x	x
		p	3	y	y
		p	4	z	z
	m	(Lcq;I)I	a	executeClearAll
		p	0	source	source
		p	1	radius	radius
	m	(Lxd;Ljava/lang/String;Lg;)V	a	sendMessage
		p	0	world	world
		p	1	message	message
		p	2	formatting	formatting
	m	(Lcq;)I	a	executeRunThis
		p	0	source	source
	m	(Lcq;Ljava/lang/String;)I	a	executePos
		p	0	source	source
		p	1	variableName	variableName
	m	(Lcq;Ljava/util/Collection;)V	a	run
		p	0	source	source
		p	1	testFunctions	testFunctions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lxd;Lfk;Ljf;)V	a	run
		p	0	world	world
		p	1	pos	pos
		p	2	tests	tests
	m	(Ljk;Lxd;)V	a	setWorld
		p	0	testFunction	testFunction
		p	1	world	world
	m	(Lcq;Ljk;)I	a	executeRun
		p	0	source	source
		p	1	testFunction	testFunction
	m	(Lcq;Ljava/lang/String;)I	b	executeRunAll
		p	0	source	source
		p	1	testClass	testClass
	m	(Lcq;)I	b	executeRunThese
		p	0	source	source
	m	(Lxd;Ljf;)V	b	onCompletion
		p	0	world	world
		p	1	tests	tests
	m	(Lcq;Ljava/lang/String;)V	c	sendMessage
		p	0	source	source
		p	1	message	message
	m	(Lcq;)I	c	executeRunAll
		p	0	source	source
	m	(Lcq;Ljava/lang/String;)I	d	executeExport
		p	0	source	source
		p	1	structure	structure
	m	(Lcq;Ljava/lang/String;)I	e	executeImport
		p	0	source	source
		p	1	structure	structure
c	jj$a	net/minecraft/server/command/TestCommand$Listener
	f	Lxd;	a	world
	f	Ljf;	b	tests
	m	(Lxd;Ljf;)V	<init>	<init>
		p	1	world	world
		p	2	tests	tests
c	jk	net/minecraft/test/TestFunction
	f	Ljava/lang/String;	a	batchId
	f	Ljava/lang/String;	b	structurePath
	f	Ljava/lang/String;	c	structureName
	f	Z	d	required
	f	Ljava/util/function/Consumer;	e	starter
	f	I	f	tickLimit
	f	J	g	duration
	m	()Ljava/lang/String;	a	getStructurePath
	m	(Liv;)V	a	start
	m	()Ljava/lang/String;	b	getStructureName
	m	()I	c	getTickLimit
	m	()Z	d	isRequired
	m	()Ljava/lang/String;	e	getBatchId
	m	()J	f	getDuration
c	jl	net/minecraft/command/arguments/TestFunctionArgumentType
	f	Ljava/util/Collection;	a	EXAMPLES
	m	(Lcom/mojang/brigadier/StringReader;)Ljk;	a	parse
		p	1	reader	reader
	m	()Ljl;	a	testFunction
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljk;	a	getFunction
		p	0	context	context
		p	1	name	name
c	jm	net/minecraft/test/TestCompletionListener
	m	(Liw;)V	a	onTestFailed
c	jo	net/minecraft/util/Language
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljo;	c	INSTANCE
	f	Ljava/util/Map;	d	translations
	f	J	e	timeLoaded
	m	(Ljava/lang/String;)Ljava/lang/String;	a	translate
	m	()Ljo;	a	getInstance
	m	(Ljava/util/Map;)V	a	load
		p	0	map	map
	m	()J	b	getTimeLoaded
	m	(Ljava/lang/String;)Z	b	hasTranslation
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getTranslation
c	jq	net/minecraft/nbt/ByteArrayTag
	f	Lkl;	a	READER
	f	[B	b	value
	m	([B)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)[B	a	toArray
		p	0	list	list
	m	(I)Ljr;	a	get
	m	(ILjr;)Ljr;	a	method_10606
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
	m	(ILjr;)V	b	add
	m	(I)Ljr;	b	remove
	m	()[B	d	getByteArray
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
c	jq$1	net/minecraft/nbt/ByteArrayTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljq;	a	read
c	jr	net/minecraft/nbt/ByteTag
	f	Lkl;	a	READER
	f	Ljr;	b	ZERO
	f	Ljr;	c	ONE
	f	B	h	value
	m	(B)V	<init>	<init>
		p	1	value	value
	m	(B)Ljr;	a	of
		p	0	value	value
	m	(Z)Ljr;	a	of
		p	0	value	value
	m	()Ljr;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	jr$1	net/minecraft/nbt/ByteTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljr;	a	read
c	jr$a	net/minecraft/nbt/ByteTag$Cache
	f	[Ljr;	a	VALUES
c	js	net/minecraft/nbt/AbstractListTag
	m	(ILkj;)Z	a	setTag
		p	1	index	index
		p	2	tag	tag
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
	m	(ILkj;)Z	b	addTag
		p	1	index	index
		p	2	tag	tag
	m	(ILkj;)V	c	add
	m	(I)Lkj;	c	remove
	m	(ILkj;)Lkj;	d	set
	m	(I)Ljava/lang/Object;	remove	remove
		p	1	index	index
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
c	jt	net/minecraft/nbt/CompoundTag
	f	Lkl;	a	READER
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/util/regex/Pattern;	c	PATTERN
	f	Ljava/util/Map;	h	tags
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1	tags	tags
	m	(Ljava/lang/String;Lkj;)Lkj;	a	put
		p	1	key	key
		p	2	tag	tag
	m	(Ljava/lang/String;Lkl;Ljava/lang/ClassCastException;)Lh;	a	createCrashReport
		p	1	key	key
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;D)V	a	putDouble
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;[J)V	a	putLongArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Ljava/util/UUID;)V	a	putUuid
		p	1	key	key
		p	2	uuid	uuid
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
		p	1	key	key
	m	(Ljava/lang/String;F)V	a	putFloat
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;[I)V	a	putIntArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Lkj;Ljava/io/DataOutput;)V	a	write
		p	0	key	key
		p	1	tag	tag
		p	2	output	output
	m	(Ljava/lang/String;S)V	a	putShort
		p	1	key	key
		p	2	value	value
	m	(Ljt;)Ljt;	a	copyFrom
		p	1	source	source
	m	(Ljava/lang/String;J)V	a	putLong
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;B)V	a	putByte
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Z)V	a	putBoolean
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;[B)V	a	putByteArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;I)V	b	putInt
		p	1	key	key
		p	2	value	value
	m	(Ljava/lang/String;Ljava/util/List;)V	b	putIntArray
		p	1	key	key
		p	2	value	value
	m	(Lkl;Ljava/lang/String;Ljava/io/DataInput;ILkc;)Lkj;	b	read
		p	0	reader	reader
		p	1	key	key
		p	2	input	input
		p	3	depth	depth
		p	4	tracker	tracker
	m	(Ljava/lang/String;)Z	b	containsUuid
		p	1	key	key
	m	(Ljava/lang/String;)V	c	removeUuid
		p	1	key	key
	m	(Ljava/lang/String;Ljava/util/List;)V	c	putLongArray
		p	1	key	key
		p	2	value	value
	m	(Ljava/io/DataInput;Lkc;)B	c	readByte
		p	0	input	input
		p	1	tracker	tracker
	m	(Ljava/lang/String;I)Z	c	contains
		p	1	key	key
		p	2	type	type
	m	(Ljava/lang/String;I)Ljz;	d	getList
		p	1	key	key
		p	2	type	type
	m	()Ljava/util/Set;	d	getKeys
	m	(Ljava/io/DataInput;Lkc;)Ljava/lang/String;	d	readString
		p	0	input	input
		p	1	tracker	tracker
	m	(Ljava/lang/String;)Lkj;	d	get
		p	1	key	key
	m	(Ljava/lang/String;)B	e	getType
		p	1	key	key
	m	()I	e	getSize
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	(Ljava/lang/String;)Z	f	contains
		p	1	key	key
	m	()Ljt;	g	copy
	m	(Ljava/lang/String;)B	g	getByte
		p	1	key	key
	m	(Ljava/lang/String;)S	h	getShort
		p	1	key	key
	m	(Ljava/lang/String;)I	i	getInt
		p	1	key	key
	m	(Ljava/lang/String;)J	j	getLong
		p	1	key	key
	m	(Ljava/lang/String;)F	k	getFloat
		p	1	key	key
	m	(Ljava/lang/String;)D	l	getDouble
		p	1	key	key
	m	(Ljava/lang/String;)Ljava/lang/String;	m	getString
		p	1	key	key
	m	(Ljava/lang/String;)[B	n	getByteArray
		p	1	key	key
	m	(Ljava/lang/String;)[I	o	getIntArray
		p	1	key	key
	m	(Ljava/lang/String;)[J	p	getLongArray
		p	1	key	key
	m	(Ljava/lang/String;)Ljt;	q	getCompound
		p	1	key	key
	m	(Ljava/lang/String;)Z	r	getBoolean
		p	1	key	key
	m	(Ljava/lang/String;)V	s	remove
		p	1	key	key
	m	(Ljava/lang/String;)Ljava/lang/String;	t	escapeTagKey
		p	0	key	key
	m	(Ljava/lang/String;)Llf;	u	prettyPrintTagKey
		p	0	key	key
c	jt$1	net/minecraft/nbt/CompoundTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljt;	a	read
c	ju	net/minecraft/nbt/DoubleTag
	f	Lju;	a	ZERO
	f	Lkl;	b	READER
	f	D	c	value
	m	(D)V	<init>	<init>
		p	1	value	value
	m	(D)Lju;	a	of
		p	0	value	value
	m	()Lju;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ju$1	net/minecraft/nbt/DoubleTag$1
	m	(Ljava/io/DataInput;ILkc;)Lju;	a	read
c	jv	net/minecraft/nbt/EndTag
	f	Lkl;	a	READER
	f	Ljv;	b	INSTANCE
	m	()Ljv;	d	copy
c	jv$1	net/minecraft/nbt/EndTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljv;	a	read
c	jw	net/minecraft/nbt/FloatTag
	f	Ljw;	a	ZERO
	f	Lkl;	b	READER
	f	F	c	value
	m	(F)V	<init>	<init>
		p	1	value	value
	m	(F)Ljw;	a	of
		p	0	value	value
	m	()Ljw;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	jw$1	net/minecraft/nbt/FloatTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljw;	a	read
c	jx	net/minecraft/nbt/IntArrayTag
	f	Lkl;	a	READER
	f	[I	b	value
	m	([I)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	value	value
	m	(ILjy;)Ljy;	a	set
	m	(I)Ljy;	a	get
	m	(Ljava/util/List;)[I	a	toArray
		p	0	list	list
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
	m	(ILjy;)V	b	method_10531
	m	(I)Ljy;	b	method_10536
	m	()Ljx;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()[I	g	getIntArray
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
c	jx$1	net/minecraft/nbt/IntArrayTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljx;	a	read
c	jy	net/minecraft/nbt/IntTag
	f	Lkl;	a	READER
	f	I	b	value
	m	(I)V	<init>	<init>
		p	1	value	value
	m	(I)Ljy;	a	of
		p	0	value	value
	m	()Ljy;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	jy$1	net/minecraft/nbt/IntTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljy;	a	read
c	jy$a	net/minecraft/nbt/IntTag$Cache
	f	[Ljy;	a	VALUES
c	jz	net/minecraft/nbt/ListTag
	f	Lkl;	a	READER
	f	Lit/unimi/dsi/fastutil/bytes/ByteSet;	b	NBT_NUMBER_TYPES
	f	Ljava/util/List;	c	value
	f	B	h	type
	m	(Ljava/util/List;B)V	<init>	<init>
		p	1	list	list
		p	2	type	type
	m	(Lkj;)Z	a	canAdd
		p	1	tag	tag
	m	(I)Ljt;	a	getCompound
		p	1	index	index
	m	()I	a_	getElementType
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
	m	(ILkj;)V	add	add
	m	(I)Ljz;	b	getList
		p	1	index	index
	m	()Ljz;	d	copy
	m	(I)S	d	getShort
		p	1	index	index
	m	(I)I	e	getInt
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	(I)[I	f	getIntArray
		p	1	index	index
	m	()V	g	forgetTypeIfEmpty
	m	(I)D	h	getDouble
		p	1	index	index
	m	(I)F	i	getFloat
		p	1	index	index
	m	(I)Ljava/lang/String;	j	getString
		p	1	index	index
	m	(I)Lkj;	k	get
	m	(I)Lkj;	remove	remove
	m	(ILkj;)Lkj;	set	set
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
c	jz$1	net/minecraft/nbt/ListTag$1
	m	(Ljava/io/DataInput;ILkc;)Ljz;	a	read
c	k	net/minecraft/util/UncaughtExceptionLogger
	f	Lorg/apache/logging/log4j/Logger;	a	logger
c	ka	net/minecraft/nbt/LongArrayTag
	f	Lkl;	a	READER
	f	[J	b	value
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1	value	value
	m	([J)V	<init>	<init>
		p	1	value	value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1	value	value
	m	(ILkb;)Lkb;	a	set
	m	(Ljava/util/List;)[J	a	toArray
		p	0	list	list
	m	(I)Lkb;	a	get
	m	(ILjava/lang/Object;)V	add	add
		p	1	value	value
	m	(ILkb;)V	b	method_10531
	m	(I)Lkb;	b	method_10536
	m	()Lka;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()[J	g	getLongArray
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
		p	1	index	index
c	ka$1	net/minecraft/nbt/LongArrayTag$1
	m	(Ljava/io/DataInput;ILkc;)Lka;	a	read
c	kb	net/minecraft/nbt/LongTag
	f	Lkl;	a	READER
	f	J	b	value
	m	(J)V	<init>	<init>
		p	1	value	value
	m	(J)Lkb;	a	of
		p	0	value	value
	m	()Lkb;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	kb$1	net/minecraft/nbt/LongTag$1
	m	(Ljava/io/DataInput;ILkc;)Lkb;	a	read
c	kb$a	net/minecraft/nbt/LongTag$Cache
	f	[Lkb;	a	VALUES
c	kc	net/minecraft/nbt/PositionTracker
	f	Lkc;	a	DEFAULT
	f	J	b	max
	f	J	c	pos
	m	(J)V	<init>	<init>
		p	1	max	max
	m	(J)V	a	add
		p	1	bits	bits
c	kd	net/minecraft/nbt/NbtIo
	m	(Ljt;Ljava/io/DataOutput;)V	a	write
		p	0	tag	tag
		p	1	output	output
	m	(Ljt;Ljava/io/File;)V	a	safeWrite
		p	0	tag	tag
		p	1	file	file
	m	(Lkj;Ljava/io/DataOutput;)V	a	write
		p	0	tag	tag
		p	1	output	output
	m	(Ljava/io/File;)Ljt;	a	read
		p	0	file	file
	m	(Ljava/io/InputStream;)Ljt;	a	readCompressed
		p	0	stream	stream
	m	(Ljava/io/DataInput;Lkc;)Ljt;	a	read
		p	0	input	input
		p	1	trakcer	trakcer
	m	(Ljava/io/DataInputStream;)Ljt;	a	read
		p	0	stream	stream
	m	(Ljt;Ljava/io/OutputStream;)V	a	writeCompressed
		p	0	tag	tag
		p	1	stream	stream
	m	(Ljava/io/DataInput;ILkc;)Lkj;	a	read
		p	0	input	input
		p	1	depth	depth
		p	2	tracker	tracker
	m	(Ljt;Ljava/io/File;)V	b	write
		p	0	tag	tag
		p	1	file	file
c	ke	net/minecraft/datafixer/NbtOps
	f	Lke;	a	INSTANCE
	m	(Ljava/util/Map;)Lkj;	a	createMap
	m	(Ljava/nio/ByteBuffer;)Lkj;	a	createByteList
	m	(D)Lkj;	a	createDouble
	m	(Z)Lkj;	a	createBoolean
	m	(I)Lkj;	a	createInt
	m	(J)Lkj;	a	createLong
	m	(Lkj;Lkj;)Lkj;	a	mergeInto
	m	(Ljava/util/stream/IntStream;)Lkj;	a	createIntList
	m	(Lkj;Lkj;Lkj;)Lkj;	a	mergeInto
	m	(F)Lkj;	a	createFloat
	m	(Ljava/lang/String;)Lkj;	a	createString
	m	(Ljava/lang/Number;)Lkj;	a	createNumeric
	m	(Ljava/util/stream/LongStream;)Lkj;	a	createLongList
	m	(Ljava/util/stream/Stream;)Lkj;	a	createList
	m	(S)Lkj;	a	createShort
	m	(Lkj;Ljava/lang/String;)Lkj;	a	remove
	m	(Lkj;)Lcom/mojang/datafixers/types/Type;	a	getType
	m	()Lkj;	a	empty
	m	(B)Lkj;	a	createByte
	m	(Lkj;Lkj;)Lkj;	b	merge
	m	(Lkj;)Ljava/util/Optional;	b	getNumberValue
	m	(Lkj;)Ljava/util/Optional;	c	getStringValue
	m	(Lkj;)Ljava/util/Optional;	d	getMapValues
	m	(Lkj;)Ljava/util/Optional;	e	getStream
	m	(Lkj;)Ljava/util/Optional;	f	getByteBuffer
	m	(Lkj;)Ljava/util/Optional;	g	getIntStream
	m	(Lkj;)Ljava/util/Optional;	h	getLongStream
c	kf	net/minecraft/nbt/NbtHelper
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Lfk;)Ljt;	a	fromBlockPos
		p	0	pos	pos
	m	(Lbyl;Lbzm;Ljava/lang/String;Ljt;Ljt;)Lbyl;	a	withProperty
		p	0	state	state
		p	1	property	property
		p	2	key	key
		p	3	propertiesTag	propertiesTag
		p	4	mainTag	mainTag
	m	(Lbzm;Ljava/lang/Comparable;)Ljava/lang/String;	a	nameValue
		p	0	property	property
		p	1	value	value
	m	(Ljt;)Lcom/mojang/authlib/GameProfile;	a	toGameProfile
		p	0	tag	tag
	m	(Ljava/util/UUID;)Ljt;	a	fromUuid
		p	0	uuid	uuid
	m	(Lcom/mojang/datafixers/DataFixer;Lacd;Ljt;I)Ljt;	a	update
		p	0	fixer	fixer
		p	1	fixTypes	fixTypes
		p	2	tag	tag
		p	3	oldVersion	oldVersion
	m	(Lbyj;)Ljt;	a	fromBlockState
		p	0	state	state
	m	(Lcom/mojang/datafixers/DataFixer;Lacd;Ljt;II)Ljt;	a	update
		p	0	fixer	fixer
		p	1	fixTypes	fixTypes
		p	2	tag	tag
		p	3	oldVersion	oldVersion
		p	4	currentVersion	currentVersion
	m	(Lkj;Lkj;Z)Z	a	matches
		p	0	standard	standard
		p	1	subject	subject
		p	2	equalValue	equalValue
	m	(Ljt;Lcom/mojang/authlib/GameProfile;)Ljt;	a	fromGameProfile
		p	0	tag	tag
		p	1	profile	profile
	m	(Ljt;)Ljava/util/UUID;	b	toUuid
		p	0	tag	tag
	m	(Ljt;)Lfk;	c	toBlockPos
		p	0	tag	tag
	m	(Ljt;)Lbyj;	d	toBlockState
		p	0	tag	tag
c	kg	net/minecraft/nbt/AbstractNumberTag
	m	()J	e	getLong
	m	()I	f	getInt
	m	()S	g	getShort
	m	()B	h	getByte
	m	()D	i	getDouble
	m	()F	j	getFloat
	m	()Ljava/lang/Number;	k	getNumber
c	kh	net/minecraft/nbt/ShortTag
	f	Lkl;	a	READER
	f	S	b	value
	m	(S)V	<init>	<init>
		p	1	value	value
	m	(S)Lkh;	a	of
		p	0	value	value
	m	()Lkh;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	kh$1	net/minecraft/nbt/ShortTag$1
	m	(Ljava/io/DataInput;ILkc;)Lkh;	a	read
c	kh$a	net/minecraft/nbt/ShortTag$Cache
	f	[Lkh;	a	VALUES
c	ki	net/minecraft/nbt/StringTag
	f	Lkl;	a	READER
	f	Lki;	b	EMPTY
	f	Ljava/lang/String;	c	value
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	value	value
	m	(Ljava/lang/String;)Lki;	a	of
		p	0	value	value
	m	(Ljava/lang/String;)Ljava/lang/String;	b	escape
		p	0	value	value
	m	()Lki;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	ki$1	net/minecraft/nbt/StringTag$1
	m	(Ljava/io/DataInput;ILkc;)Lki;	a	read
c	kj	net/minecraft/nbt/Tag
	f	Lg;	d	AQUA
	f	Lg;	e	GREEN
	f	Lg;	f	GOLD
	f	Lg;	g	RED
	m	()B	a	getType
	m	(Ljava/lang/String;I)Llf;	a	toText
		p	1	indent	indent
		p	2	depth	depth
	m	(Ljava/io/DataOutput;)V	a	write
		p	1	output	output
	m	()Lkl;	b	getReader
	m	()Lkj;	c	copy
	m	()Ljava/lang/String;	c_	asString
	m	()Llf;	l	toText
c	kk	net/minecraft/nbt/StringNbtReader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	TRAILING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	EXPECTED_KEY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	LIST_MIXED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ARRAY_MIXED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ARRAY_INVALID
	f	Ljava/util/regex/Pattern;	g	DOUBLE_PATTERN_IMPLICIT
	f	Ljava/util/regex/Pattern;	h	DOUBLE_PATTERN
	f	Ljava/util/regex/Pattern;	i	FLOAT_PATTERN
	f	Ljava/util/regex/Pattern;	j	BYTE_PATTERN
	f	Ljava/util/regex/Pattern;	k	LONG_PATTERN
	f	Ljava/util/regex/Pattern;	l	SHORT_PATTERN
	f	Ljava/util/regex/Pattern;	m	INT_PATTERN
	f	Lcom/mojang/brigadier/StringReader;	n	reader
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1	reader	reader
	m	()Ljt;	a	readCompoundTag
	m	(C)V	a	expect
	m	(Ljava/lang/String;)Ljt;	a	parse
		p	0	string	string
	m	(Lkl;Lkl;)Ljava/util/List;	a	readArray
		p	1	arrayTypeReader	arrayTypeReader
		p	2	typeReader	typeReader
	m	(Ljava/lang/String;)Lkj;	b	parsePrimitive
		p	1	input	input
	m	()Ljava/lang/String;	b	readString
	m	()Lkj;	c	parseTagPrimitive
	m	()Lkj;	d	parseTag
	m	()Lkj;	e	parseTagArray
	m	()Ljt;	f	parseCompoundTag
	m	()Lkj;	g	parseListTag
	m	()Lkj;	h	parseTagPrimitiveArray
	m	()Z	i	readComma
c	kl	net/minecraft/nbt/TagReader
	m	()Ljava/lang/String;	a	getCrashReportName
	m	(I)Lkl;	a	createInvalid
		p	0	type	type
	m	()Ljava/lang/String;	b	getCommandFeedbackName
	m	(Ljava/io/DataInput;ILkc;)Lkj;	b	read
		p	1	input	input
		p	2	depth	depth
		p	3	tracker	tracker
	m	()Z	c	isImmutable
c	kl$1	net/minecraft/nbt/TagReader$1
	m	(Ljava/io/DataInput;ILkc;)Ljv;	a	read
c	km	net/minecraft/nbt/TagReaders
	f	[Lkl;	a	VALUES
	m	(I)Lkl;	a	of
		p	0	type	type
c	ko	net/minecraft/network/encryption/PacketEncryptionManager
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	conversionBuffer
	f	[B	c	encryptionBuffer
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decrypt
		p	1	context	context
	m	(Lio/netty/buffer/ByteBuf;)[B	a	toByteArray
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encrypt
		p	1	buffer	buffer
c	kp	net/minecraft/network/encryption/PacketDecryptor
	f	Lko;	a	manager
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
c	kq	net/minecraft/network/encryption/PacketEncryptor
	f	Lko;	a	manager
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
c	kr	net/minecraft/network/PacketInflater
	f	Ljava/util/zip/Inflater;	a	inflater
	f	I	b	compressionThreshold
	m	(I)V	a	setCompressionThreshold
		p	1	compressionThreshold	compressionThreshold
c	ks	net/minecraft/network/PacketDeflater
	f	[B	a	deflateBuffer
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	compressionThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	m	(I)V	a	setCompressionThreshold
		p	1	compressionThreshold	compressionThreshold
c	kt	net/minecraft/network/ClientConnection
	f	Lorg/apache/logging/log4j/Marker;	a	MARKER_NETWORK
	f	Lorg/apache/logging/log4j/Marker;	b	MARKER_NETWORK_PACKETS
	f	Lio/netty/util/AttributeKey;	c	ATTR_KEY_PROTOCOL
	f	Labn;	d	CLIENT_IO_GROUP
	f	Labn;	e	CLIENT_IO_GROUP_EPOLL
	f	Labn;	f	CLIENT_IO_GROUP_LOCAL
	f	Lorg/apache/logging/log4j/Logger;	g	LOGGER
	f	Llu;	h	side
	f	Ljava/util/Queue;	i	packetQueue
	f	Lio/netty/channel/Channel;	j	channel
	f	Ljava/net/SocketAddress;	k	address
	f	Lky;	l	packetListener
	f	Llf;	m	disconnectReason
	f	Z	n	encrypted
	f	Z	o	disconnected
	f	I	p	packetsReceivedCounter
	f	I	q	packetsSentCounter
	f	F	r	avgPacketsReceived
	f	F	s	avgPacketsSent
	f	I	t	ticks
	f	Z	u	errored
	m	(Llt;Lio/netty/util/concurrent/GenericFutureListener;)V	a	send
		p	1	packet	packet
		p	2	callback	callback
	m	(Llt;)V	a	send
		p	1	packet	packet
	m	(I)V	a	setCompressionThreshold
		p	1	compressionThreshold	compressionThreshold
	m	(Ljava/net/InetAddress;IZ)Lkt;	a	connect
		p	0	address	address
		p	1	port	port
		p	2	shouldUseNativeTransport	shouldUseNativeTransport
	m	(Llf;)V	a	disconnect
		p	1	disconnectReason	disconnectReason
	m	()V	a	tick
	m	(Lku;)V	a	setState
		p	1	state	state
	m	(Lio/netty/channel/ChannelHandlerContext;Llt;)V	a	channelRead0
	m	(Ljava/net/SocketAddress;)Lkt;	a	connectLocal
		p	0	address	address
	m	(Lky;)V	a	setPacketListener
		p	1	listener	listener
	m	(Llt;Lky;)V	a	handlePacket
		p	0	packet	packet
		p	1	listener	listener
	m	(Ljavax/crypto/SecretKey;)V	a	setupEncryption
	m	()Ljava/net/SocketAddress;	b	getAddress
	m	(Llt;Lio/netty/util/concurrent/GenericFutureListener;)V	b	sendImmediately
		p	1	packet	packet
		p	2	callback	callback
	m	()Z	c	isLocal
	m	()Z	f	isEncrypted
	m	()Z	g	isOpen
	m	()Z	h	hasChannel
	m	()Lky;	i	getPacketListener
	m	()Llf;	j	getDisconnectReason
	m	()V	k	disableAutoRead
	m	()V	l	handleDisconnection
	m	()F	m	getAveragePacketsReceived
	m	()F	n	getAveragePacketsSent
	m	()V	o	sendQueuedPackets
c	kt$a	net/minecraft/network/ClientConnection$PacketWrapper
	f	Llt;	a	packet
	f	Lio/netty/util/concurrent/GenericFutureListener;	b	listener
c	ku	net/minecraft/network/NetworkState
	f	[Lku;	e	STATES
	f	Ljava/util/Map;	f	HANDLER_STATE_MAP
	f	I	g	stateId
	f	Ljava/util/Map;	h	packetHandlers
	m	(Llt;)Lku;	a	getPacketHandlerState
		p	0	handler	handler
	m	()I	a	getId
	m	(I)Lku;	a	byId
		p	0	id	id
	m	(Llu;I)Llt;	a	getPacketHandler
		p	1	side	side
		p	2	packetId	packetId
	m	(Llu;Llt;)Ljava/lang/Integer;	a	getPacketId
		p	1	side	side
		p	2	packet	packet
	m	()Lku$b;	b	createPacketHandlerInitializer
c	ku$a	net/minecraft/network/NetworkState$PacketHandler
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	packetIds
	f	Ljava/util/List;	b	packetFactories
	m	(Ljava/lang/Class;)Ljava/lang/Integer;	a	getId
		p	1	packet	packet
	m	(I)Llt;	a	createPacket
		p	1	id	id
	m	(Ljava/lang/Class;Ljava/util/function/Supplier;)Lku$a;	a	register
		p	1	type	type
		p	2	factory	factory
	m	()Ljava/lang/Iterable;	a	getPacketTypes
c	ku$b	net/minecraft/network/NetworkState$PacketHandlerInitializer
	f	Ljava/util/Map;	a	packetHandlers
	m	(Llu;Lku$a;)Lku$b;	a	setup
		p	1	side	side
c	kv	net/minecraft/util/PacketByteBuf
	f	Lio/netty/buffer/ByteBuf;	a	parent
	m	(Lcvg;)V	a	writeBlockHitResult
	m	([JI)[J	a	readLongArray
		p	1	toArray	toArray
	m	(Lben;)Lkv;	a	writeItemStack
	m	(Ljava/util/UUID;)Lkv;	a	writeUuid
	m	(Lsm;)Lkv;	a	writeIdentifier
	m	([B)Lkv;	a	writeByteArray
	m	(Ljava/lang/String;)Lkv;	a	writeString
	m	(Ljava/lang/String;I)Lkv;	a	writeString
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	a	readEnumConstant
	m	(I)I	a	getVarIntSizeBytes
	m	([J)Lkv;	a	writeLongArray
	m	(Ljava/lang/Enum;)Lkv;	a	writeEnumConstant
	m	(Ljava/util/Date;)Lkv;	a	writeDate
	m	([I)Lkv;	a	writeIntArray
	m	(Llf;)Lkv;	a	writeText
		p	1	text	text
	m	()[B	a	readByteArray
	m	(Ljt;)Lkv;	a	writeCompoundTag
	m	(Lfk;)Lkv;	a	writeBlockPos
	m	([J)[J	b	readLongArray
	m	()[I	b	readIntArray
	m	(J)Lkv;	b	writeVarLong
	m	(I)[B	b	readByteArray
	m	(I)[I	c	readIntArray
	m	(Lio/netty/buffer/ByteBuf;)I	compareTo	compareTo
	m	(I)Lkv;	d	writeVarInt
	m	(I)Ljava/lang/String;	e	readString
	m	()Lfk;	e	readBlockPos
	m	()Lgd;	g	readChunkSectionPos
	m	()Llf;	h	readText
	m	()I	i	readVarInt
	m	()J	j	readVarLong
	m	()Ljava/util/UUID;	k	readUuid
	m	()Ljt;	l	readCompoundTag
	m	()Lben;	m	readItemStack
	m	()Ljava/lang/String;	n	readString
	m	()Lsm;	o	readIdentifier
	m	()Ljava/util/Date;	p	readDate
	m	()Lcvg;	q	readBlockHitResult
	m	(I)Lio/netty/buffer/ByteBuf;	retain	retain
	m	()Lio/netty/buffer/ByteBuf;	retain	retain
	m	()Lio/netty/buffer/ByteBuf;	touch	touch
	m	(Ljava/lang/Object;)Lio/netty/buffer/ByteBuf;	touch	touch
c	kw	net/minecraft/network/DecoderHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lorg/apache/logging/log4j/Marker;	b	MARKER
	f	Llu;	c	side
c	kx	net/minecraft/network/PacketEncoder
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lorg/apache/logging/log4j/Marker;	b	MARKER
	f	Llu;	c	side
	m	(Lio/netty/channel/ChannelHandlerContext;Llt;Lio/netty/buffer/ByteBuf;)V	a	encode
c	ky	net/minecraft/network/listener/PacketListener
	m	()Lkt;	a	getConnection
	m	(Llf;)V	a	onDisconnected
		p	1	reason	reason
c	kz	net/minecraft/network/PacketEncoderException
c	l	net/minecraft/util/UncaughtExceptionHandler
	f	Lorg/apache/logging/log4j/Logger;	a	logger
c	la	net/minecraft/network/SplitterHandler
c	lb	net/minecraft/network/SizePrepender
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
c	lc	net/minecraft/text/BaseText
	f	Ljava/util/List;	a	siblings
	f	Lln;	b	style
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	ld	net/minecraft/network/MessageType
	f	B	d	id
	f	Z	e	interruptsNarration
	m	(Ljava/lang/String;IBZ)V	<init>	<init>
		p	3	id	id
		p	4	interruptsNarration	interruptsNarration
	m	(B)Lld;	a	byId
		p	0	id	id
	m	()B	a	getId
	m	()Z	b	interruptsNarration
c	le	net/minecraft/text/ClickEvent
	f	Lle$a;	a	action
	f	Ljava/lang/String;	b	value
	m	(Lle$a;Ljava/lang/String;)V	<init>	<init>
		p	1	action	action
		p	2	value	value
	m	()Lle$a;	a	getAction
	m	()Ljava/lang/String;	b	getValue
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	le$a	net/minecraft/text/ClickEvent$Action
	f	Ljava/util/Map;	g	BY_NAME
	f	Z	h	userDefinable
	f	Ljava/lang/String;	i	name
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3	name	name
		p	4	userDefinable	userDefinable
	m	(Lle$a;)Lle$a;	a	method_10849
		p	0	a	a
	m	(Ljava/lang/String;)Lle$a;	a	byName
		p	0	name	name
	m	()Z	a	isUserDefinable
	m	()Ljava/lang/String;	b	getName
c	lf	net/minecraft/text/Text
	m	(Ljava/lang/String;)Llf;	a	append
		p	1	text	text
	m	(Lg;)Llf;	a	formatted
		p	1	formatting	formatting
	m	(Ljava/lang/StringBuilder;Llf;)V	a	method_10861
		p	1	text	text
	m	([Lg;)Llf;	a	formatted
		p	1	formatting	formatting
	m	(Lln;)Llf;	a	setStyle
		p	1	style	style
	m	(Llf;)Llf;	a	append
		p	1	text	text
	m	()Ljava/util/List;	a	getSiblings
	m	(I)Ljava/lang/String;	a	asTruncatedString
		p	1	length	length
	m	(Ljava/util/function/Consumer;)Llf;	a	styled
		p	1	transformer	transformer
	m	()Lln;	b	getStyle
	m	(Llf;)Llf;	b	copyWithoutChildren
		p	0	text	text
	m	()Ljava/util/stream/Stream;	c	stream
	m	()Ljava/lang/String;	d	asString
	m	()Ljava/lang/String;	e	asFormattedString
	m	()Ljava/util/stream/Stream;	f	streamCopied
	m	()Llf;	g	copy
	m	()Llf;	h	deepCopy
c	lf$a	net/minecraft/text/Text$Serializer
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/reflect/Field;	b	JSON_READER_POS
	f	Ljava/lang/reflect/Field;	c	JSON_READER_LINE_START
	m	(Lcom/google/gson/stream/JsonReader;)I	a	getPosition
		p	0	reader	reader
	m	(Lcom/mojang/brigadier/StringReader;)Llf;	a	fromJson
		p	0	reader	reader
	m	(Llf;)Ljava/lang/String;	a	toJson
		p	0	text	text
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Llf;	a	deserialize
	m	(Lln;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	addStyle
		p	1	style	style
		p	2	json	json
		p	3	context	context
	m	(Llf;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Llf;	a	fromJson
		p	0	json	json
	m	(Ljava/lang/String;)Llf;	a	fromJson
		p	0	json	json
	m	(Llf;)Lcom/google/gson/JsonElement;	b	toJsonTree
		p	0	text	text
	m	(Ljava/lang/String;)Llf;	b	fromLenientJson
		p	0	json	json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	text	text
		p	2	type	type
		p	3	context	context
c	lg	net/minecraft/text/Texts
	m	(Lcom/mojang/authlib/GameProfile;)Llf;	a	toText
		p	0	profile	profile
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Llf;	a	joinOrdered
		p	0	elements	elements
		p	1	transformer	transformer
	m	(Llf;)Llf;	a	bracketed
		p	0	text	text
	m	(Llf;Lln;)Llf;	a	setStyleIfAbsent
		p	0	text	text
		p	1	style	style
	m	(Ljava/util/Collection;)Llf;	a	joinOrdered
		p	0	strings	strings
	m	(Lcq;Llf;Lakq;I)Llf;	a	parse
		p	0	source	source
		p	1	text	text
		p	2	sender	sender
		p	3	depth	depth
	m	(Ljava/lang/String;)Llf;	a	method_10886
		p	0	string	string
	m	(Lcom/mojang/brigadier/Message;)Llf;	a	toText
		p	0	message	message
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Llf;	b	join
		p	0	elements	elements
		p	1	transformer	transformer
c	lh	net/minecraft/text/ParsableText
	m	(Lcq;Lakq;I)Llf;	a	parse
		p	1	source	source
		p	2	sender	sender
		p	3	depth	depth
c	li	net/minecraft/text/HoverEvent
	f	Lli$a;	a	action
	f	Llf;	b	value
	m	(Lli$a;Llf;)V	<init>	<init>
		p	1	action	action
		p	2	value	value
	m	()Lli$a;	a	getAction
	m	()Llf;	b	getValue
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	li$a	net/minecraft/text/HoverEvent$Action
	f	Ljava/util/Map;	d	BY_NAME
	f	Z	e	userDefinable
	f	Ljava/lang/String;	f	name
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3	name	name
		p	4	userDefinable	userDefinable
	m	(Ljava/lang/String;)Lli$a;	a	byName
		p	0	name	name
	m	(Lli$a;)Lli$a;	a	method_10894
		p	0	a	a
	m	()Z	a	isUserDefinable
	m	()Ljava/lang/String;	b	getName
c	lj	net/minecraft/text/KeybindText
	f	Ljava/util/function/Function;	b	i18n
	f	Ljava/lang/String;	c	key
	f	Ljava/util/function/Supplier;	d	name
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	key	key
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	b	method_10904
		p	0	key	key
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Llj;	i	copy
	m	()Ljava/lang/String;	j	getKey
c	lk	net/minecraft/text/NbtText
	f	Z	b	interpret
	f	Ljava/lang/String;	c	rawPath
	f	Lde$h;	d	path
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	m	(Ljava/lang/String;Lde$h;Z)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	path	path
		p	3	interpret	interpret
	m	(Ljava/lang/String;Z)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	interpret	interpret
	m	(Ljt;)Ljava/util/stream/Stream;	a	method_10918
		p	1	nbt	nbt
	m	(Llf;Llf;)Llf;	a	method_15880
		p	0	a	a
		p	1	b	b
	m	(Lcq;)Ljava/util/stream/Stream;	a	toNbt
		p	1	source	source
	m	(Lcq;Lakq;ILjava/lang/String;)Ljava/util/stream/Stream;	a	method_10917
		p	3	text	text
	m	(Ljava/lang/String;)Lde$h;	b	parsePath
		p	0	rawPath	rawPath
	m	()Ljava/lang/String;	i	getPath
	m	()Z	j	shouldInterpret
c	lk$a	net/minecraft/text/NbtText$BlockNbtText
	f	Ljava/lang/String;	e	rawPos
	f	Ldz;	f	pos
	m	(Ljava/lang/String;Lde$h;ZLjava/lang/String;Ldz;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	path	path
		p	3	interpret	interpret
		p	4	rawPos	rawPos
		p	5	pos	pos
	m	(Ljava/lang/String;ZLjava/lang/String;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	rawJson	rawJson
		p	3	rawPos	rawPos
	m	(Ljava/lang/String;)Ldz;	b	parsePos
		p	1	rawPos	rawPos
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/lang/String;	k	getPos
c	lk$b	net/minecraft/text/NbtText$EntityNbtText
	f	Ljava/lang/String;	e	rawSelector
	f	Lep;	f	selector
	m	(Ljava/lang/String;Lde$h;ZLjava/lang/String;Lep;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	path	path
		p	3	interpret	interpret
		p	4	rawSelector	rawSelector
		p	5	selector	selector
	m	(Ljava/lang/String;ZLjava/lang/String;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	interpret	interpret
		p	3	rawSelector	rawSelector
	m	(Ljava/lang/String;)Lep;	b	parseSelector
		p	0	rawSelector	rawSelector
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/lang/String;	k	getSelector
c	lk$c	net/minecraft/text/NbtText$StorageNbtText
	f	Lsm;	e	id
	m	(Ljava/lang/String;Lde$h;ZLsm;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	3	interpret	interpret
		p	4	id	id
	m	(Ljava/lang/String;ZLsm;)V	<init>	<init>
		p	1	rawPath	rawPath
		p	2	interpret	interpret
		p	3	id	id
c	ll	net/minecraft/text/ScoreText
	f	Ljava/lang/String;	b	name
	f	Lep;	c	selector
	f	Ljava/lang/String;	d	objective
	f	Ljava/lang/String;	e	score
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	name	name
		p	2	objective	objective
	m	(Ljava/lang/String;)V	b	setScore
		p	1	score	score
	m	(Lcq;)V	b	parse
		p	1	source	source
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/lang/String;	i	getName
	m	()Ljava/lang/String;	k	getObjective
	m	()Lll;	l	copy
c	lm	net/minecraft/text/SelectorText
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	pattern
	f	Lep;	d	selector
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	pattern	pattern
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/lang/String;	i	getPattern
	m	()Llm;	k	copy
c	ln	net/minecraft/text/Style
	f	Lln;	a	parent
	f	Lg;	b	color
	f	Ljava/lang/Boolean;	c	bold
	f	Ljava/lang/Boolean;	d	italic
	f	Ljava/lang/Boolean;	e	underline
	f	Ljava/lang/Boolean;	f	strikethrough
	f	Ljava/lang/Boolean;	g	obfuscated
	f	Lle;	h	clickEvent
	f	Lli;	i	hoverEvent
	f	Ljava/lang/String;	j	insertion
	f	Lln;	k	ROOT
	m	(Lg;)Lln;	a	setColor
		p	1	color	color
	m	(Lln;)Lln;	a	setParent
		p	1	parent	parent
	m	(Lli;)Lln;	a	setHoverEvent
		p	1	clickEvent	clickEvent
	m	(Ljava/lang/Boolean;)Lln;	a	setBold
		p	1	bold	bold
	m	(Ljava/lang/String;)Lln;	a	setInsertion
		p	1	insertion	insertion
	m	()Lg;	a	getColor
	m	(Lle;)Lln;	a	setClickEvent
		p	1	clickEvent	clickEvent
	m	(Ljava/lang/Boolean;)Lln;	b	setItalic
		p	1	italic	italic
	m	()Z	b	isBold
	m	(Ljava/lang/Boolean;)Lln;	c	setStrikethrough
		p	1	strikethrough	strikethrough
	m	()Z	c	isItalic
	m	()Z	d	isStrikethrough
	m	(Ljava/lang/Boolean;)Lln;	d	setUnderline
		p	1	underline	underline
	m	()Z	e	isUnderlined
	m	(Ljava/lang/Boolean;)Lln;	e	setObfuscated
		p	1	obfuscated	obfuscated
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
	m	()Z	f	isObfuscated
	m	()Z	g	isEmpty
	m	()Lle;	h	getClickEvent
	m	()Lli;	i	getHoverEvent
	m	()Ljava/lang/String;	j	getInsertion
	m	()Ljava/lang/String;	k	asString
	m	()Lln;	m	deepCopy
	m	()Lln;	n	copy
	m	()Lln;	o	getParent
c	ln$a	net/minecraft/text/Style$Serializer
	m	(Lln;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lln;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	json	json
		p	2	type	type
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	style	style
		p	2	type	type
		p	3	context	context
c	lo	net/minecraft/text/LiteralText
	f	Ljava/lang/String;	b	string
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	string	string
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/lang/String;	i	getRawString
	m	()Llo;	j	copy
c	lp	net/minecraft/text/TranslatableText
	f	Ljava/util/List;	b	translations
	f	Ljava/util/regex/Pattern;	c	ARG_FORMAT
	f	Ljo;	d	EMPTY_LANGUAGE
	f	Ljo;	e	LANGUAGE
	f	Ljava/lang/String;	f	key
	f	[Ljava/lang/Object;	g	args
	f	Ljava/lang/Object;	h	lock
	f	J	i	languageReloadTimestamp
	m	(Ljava/lang/String;[Ljava/lang/Object;)V	<init>	<init>
		p	1	key	key
		p	2	args	args
	m	(I)Llf;	b	getArg
		p	1	index	index
	m	(Ljava/lang/String;)V	b	setTranslation
		p	1	translation	translation
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()V	i	updateTranslations
	m	()Llp;	j	copy
	m	()Ljava/lang/String;	k	getKey
	m	()[Ljava/lang/Object;	l	getArgs
c	lq	net/minecraft/text/TranslationException
	m	(Llp;Ljava/lang/String;)V	<init>	<init>
		p	1	text	text
		p	2	message	message
	m	(Llp;I)V	<init>	<init>
		p	1	text	text
		p	2	index	index
	m	(Llp;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	text	text
		p	2	cause	cause
c	lt	net/minecraft/network/Packet
	m	()Z	a	isWritingErrorSkippable
		c	Returns whether a throwable in writing of this packet allows the\nconnection to simply skip the packet's sending than disconnecting.
	m	(Lkv;)V	a	read
		p	1	buf	buf
	m	(Lky;)V	a	apply
		p	1	listener	listener
	m	(Lkv;)V	b	write
		p	1	buf	buf
c	lu	net/minecraft/network/NetworkSide
c	lv	net/minecraft/network/NetworkThreadUtils
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Llt;Lky;Lxd;)V	a	forceMainThread
		p	0	packet	packet
		p	1	listener	listener
		p	2	world	world
	m	(Llt;Lky;Lais;)V	a	forceMainThread
		p	0	packet	packet
		p	1	listener	listener
		p	2	engine	engine
c	lw	net/minecraft/network/listener/ClientPlayPacketListener
	m	(Lma;)V	a	onMobSpawn
		p	1	packet	packet
	m	(Lmv;)V	a	onCooldownUpdate
		p	1	packet	packet
	m	(Lmm;)V	a	onChatMessage
		p	1	packet	packet
	m	(Loz;)V	a	onStopSound
		p	1	packet	packet
	m	(Lou;)V	a	onPlayerSpawnPosition
		p	1	packet	packet
	m	(Lny;)V	a	onEntitiesDestroy
		p	1	packet	packet
	m	(Los;)V	a	onTeam
		p	1	packet	packet
	m	(Lnf;)V	a	onChunkData
		p	1	packet	packet
	m	(Loo;)V	a	onExperienceBarUpdate
		p	1	packet	packet
	m	(Lng;)V	a	onWorldEvent
		p	1	packet	packet
	m	(Lpi;)V	a	onSynchronizeTags
		p	1	packet	packet
	m	(Lmu;)V	a	onContainerSlotUpdate
		p	1	packet	packet
	m	(Lms;)V	a	onInventory
		p	1	packet	packet
	m	(Lop;)V	a	onHealthUpdate
		p	1	packet	packet
	m	(Lme;)V	a	onStatistics
		p	1	packet	packet
	m	(Lpa;)V	a	onPlayerListHeader
		p	1	packet	packet
	m	(Lnj;)V	a	onGameJoin
		p	1	packet	packet
	m	(Lml;)V	a	onDifficulty
		p	1	packet	packet
	m	(Lov;)V	a	onWorldTimeUpdate
		p	1	packet	packet
	m	(Llx;)V	a	onEntitySpawn
		p	1	packet	packet
	m	(Loc;)V	a	onEntitySetHeadYaw
		p	1	packet	packet
	m	(Loa;)V	a	onResourcePackSend
		p	1	packet	packet
	m	(Lmf;)V	a	onPlayerActionResponse
		p	1	packet	packet
	m	(Lnv;)V	a	onLookAt
		p	1	packet	packet
	m	(Lom;)V	a	onVelocityUpdate
		p	1	packet	packet
	m	(Lnh;)V	a	onParticle
		p	1	packet	packet
	m	(Lor;)V	a	onEntityPassengersSet
		p	1	packet	packet
	m	(Llz;)V	a	onEntitySpawnGlobal
		p	1	packet	packet
	m	(Loq;)V	a	onScoreboardObjectiveUpdate
		p	1	packet	packet
	m	(Lph;)V	a	onSynchronizeRecipes
		p	1	packet	packet
	m	(Lmb;)V	a	onPaintingSpawn
		p	1	packet	packet
	m	(Lly;)V	a	onExperienceOrbSpawn
		p	1	packet	packet
	m	(Lnr;)V	a	onCraftFailedResponse
		p	1	packet	packet
	m	(Loy;)V	a	onPlaySound
		p	1	packet	packet
	m	(Low;)V	a	onTitle
		p	1	packet	packet
	m	(Lot;)V	a	onScoreboardPlayerUpdate
		p	1	packet	packet
	m	(Lmi;)V	a	onBlockAction
		p	1	packet	packet
	m	(Lnd;)V	a	onOpenHorseContainer
		p	1	packet	packet
	m	(Lmo;)V	a	onCommandSuggestions
		p	1	packet	packet
	m	(Loj;)V	a	onScoreboardDisplay
		p	1	packet	packet
	m	(Lmq;)V	a	onGuiActionConfirm
		p	1	packet	packet
	m	(Lmt;)V	a	onContainerPropertyUpdate
		p	1	packet	packet
	m	(Lnn;)V	a	onVehicleMove
		p	1	packet	packet
	m	(Lmn;)V	a	onChunkDeltaUpdate
		p	1	packet	packet
	m	(Lmh;)V	a	onBlockEntityUpdate
		p	1	packet	packet
	m	(Lnl;)V	a	onSetTradeOffers
		p	1	packet	packet
	m	(Lnc;)V	a	onGameStateChange
		p	1	packet	packet
	m	(Lpg;)V	a	onEntityPotionEffect
		p	1	packet	packet
	m	(Lmz;)V	a	onEntityStatus
		p	1	packet	packet
	m	(Lob;)V	a	onPlayerRespawn
		p	1	packet	packet
	m	(Lnt;)V	a	onCombatEvent
		p	1	packet	packet
	m	(Lpc;)V	a	onItemPickupAnimation
		p	1	packet	packet
	m	(Lne;)V	a	onKeepAlive
		p	1	packet	packet
	m	(Lns;)V	a	onPlayerAbilities
		p	1	packet	packet
	m	(Lmg;)V	a	onBlockDestroyProgress
		p	1	packet	packet
	m	(Lox;)V	a	onPlaySoundFromEntity
		p	1	packet	packet
	m	(Loh;)V	a	onChunkRenderDistanceCenter
		p	1	packet	packet
	m	(Lod;)V	a	onSelectAdvancementTab
		p	1	packet	packet
	m	(Lni;)V	a	onLightUpdate
		p	1	packet	packet
	m	(Lmy;)V	a	onDisconnect
		p	1	packet	packet
	m	(Lmj;)V	a	onBlockUpdate
		p	1	packet	packet
	m	(Lpe;)V	a	onAdvancements
		p	1	packet	packet
	m	(Lof;)V	a	onSetCameraEntity
		p	1	packet	packet
	m	(Lnw;)V	a	onPlayerPositionLook
		p	1	packet	packet
	m	(Loi;)V	a	onChunkLoadDistance
		p	1	packet	packet
	m	(Lnz;)V	a	onRemoveEntityEffect
		p	1	packet	packet
	m	(Lmr;)V	a	onCloseContainer
		p	1	packet	packet
	m	(Lna;)V	a	onExplosion
		p	1	packet	packet
	m	(Loe;)V	a	onWorldBorder
		p	1	packet	packet
	m	(Lmd;)V	a	onEntityAnimation
		p	1	packet	packet
	m	(Lol;)V	a	onEntityAttach
		p	1	packet	packet
	m	(Lmx;)V	a	onPlaySoundId
		p	1	packet	packet
	m	(Lnp;)V	a	onOpenContainer
		p	1	packet	packet
	m	(Lmk;)V	a	onBossBar
		p	1	packet	packet
	m	(Lnx;)V	a	onUnlockRecipes
		p	1	packet	packet
	m	(Lpb;)V	a	onTagQuery
		p	1	packet	packet
	m	(Lon;)V	a	onEquipmentUpdate
		p	1	packet	packet
	m	(Lmp;)V	a	onCommandTree
		p	1	packet	packet
	m	(Lok;)V	a	onEntityTrackerUpdate
		p	1	packet	packet
	m	(Lnb;)V	a	onUnloadChunk
		p	1	packet	packet
	m	(Lnq;)V	a	onSignEditorOpen
		p	1	packet	packet
	m	(Lpf;)V	a	onEntityAttributes
		p	1	packet	packet
	m	(Lnm;)V	a	onEntityUpdate
		p	1	packet	packet
	m	(Log;)V	a	onHeldItemChange
		p	1	packet	packet
	m	(Lpd;)V	a	onEntityPosition
		p	1	packet	packet
	m	(Lmc;)V	a	onPlayerSpawn
		p	1	packet	packet
	m	(Lnk;)V	a	onMapUpdate
		p	1	packet	packet
	m	(Lnu;)V	a	onPlayerList
		p	1	packet	packet
	m	(Lno;)V	a	onOpenWrittenBook
		p	1	packet	packet
	m	(Lmw;)V	a	onCustomPayload
		p	1	packet	packet
c	lx	net/minecraft/network/packet/s2c/play/EntitySpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	I	f	velocityX
	f	I	g	velocityY
	f	I	h	velocityZ
	f	I	i	pitch
	f	I	j	yaw
	f	Laku;	k	entityTypeId
	f	I	l	entityData
	m	(Lakq;Laku;ILfk;)V	<init>	<init>
		p	1	entity	entity
		p	3	data	data
		p	4	pos	pos
	m	(Lakq;I)V	<init>	<init>
		p	1	entity	entity
		p	2	entityData	entityData
	m	(ILjava/util/UUID;DDDFFLaku;ILcvl;)V	<init>	<init>
		p	1	id	id
		p	2	uuid	uuid
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	pitch	pitch
		p	10	yaw	yaw
		p	11	entityTypeId	entityTypeId
		p	12	entityData	entityData
		p	13	velocity	velocity
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUuid
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()D	g	getVelocityX
	m	()D	h	getVelocityY
	m	()D	i	getVelocityz
	m	()I	j	getPitch
	m	()I	k	getYaw
	m	()Laku;	l	getEntityTypeId
	m	()I	m	getEntityData
c	ly	net/minecraft/network/packet/s2c/play/ExperienceOrbSpawnS2CPacket
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	experience
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()I	f	getExperience
c	lz	net/minecraft/network/packet/s2c/play/EntitySpawnGlobalS2CPacket
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	entityTypeId
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()I	f	getEntityTypeId
c	m	net/minecraft/MinecraftVersion
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	id
	f	Ljava/lang/String;	c	name
	f	Z	d	stable
	f	I	e	worldVersion
	f	I	f	protocolVersion
	f	I	g	packVersion
	f	Ljava/util/Date;	h	buildTime
	f	Ljava/lang/String;	i	releaseTarget
	m	()Lcom/mojang/bridge/game/GameVersion;	a	create
c	ma	net/minecraft/network/packet/s2c/play/MobSpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	I	c	entityTypeId
	f	D	d	x
	f	D	e	y
	f	D	f	z
	f	I	g	velocityX
	f	I	h	velocityY
	f	I	i	velocityZ
	f	B	j	yaw
	f	B	k	pitch
	f	B	l	headYaw
	m	(Lakz;)V	<init>	<init>
		p	1	entity	entity
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUuid
	m	()I	d	getEntityTypeId
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()I	h	getVelocityX
	m	()I	i	getVelocityY
	m	()I	j	getVelocityZ
	m	()B	k	getYaw
	m	()B	l	getPitch
	m	()B	m	getHeadYaw
c	mb	net/minecraft/network/packet/s2c/play/PaintingSpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	Lfk;	c	pos
	f	Lfp;	d	facing
	f	I	e	motiveId
	m	(Lavu;)V	<init>	<init>
		p	1	entity	entity
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getPaintingUuid
	m	()Lfk;	d	getPos
	m	()Lfp;	e	getFacing
	m	()Lavt;	f	getMotive
c	mc	net/minecraft/network/packet/s2c/play/PlayerSpawnS2CPacket
	f	I	a	id
	f	Ljava/util/UUID;	b	uuid
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	B	f	yaw
	f	B	g	pitch
	m	(Layj;)V	<init>	<init>
		p	1	player	player
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getPlayerUuid
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()B	g	getYaw
	m	()B	h	getPitch
c	md	net/minecraft/network/packet/s2c/play/EntityAnimationS2CPacket
	f	I	a	id
	f	I	b	animationId
	m	(Lakq;I)V	<init>	<init>
		p	1	entity	entity
		p	2	animationId	animationId
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()I	c	getAnimationId
c	me	net/minecraft/network/packet/s2c/play/StatisticsS2CPacket
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1	stats	stats
	m	(Laao;)I	a	getStatId
		p	1	stat	stat
	m	(Llw;)V	a	apply
	m	(Laaq;Lkv;)V	a	readStat
		p	1	type	type
	m	()Ljava/util/Map;	b	getStatMap
c	mf	net/minecraft/network/packet/s2c/play/PlayerActionResponseS2CPacket
	f	Lqj$a;	a	action
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lfk;	c	pos
	f	Lbyj;	d	state
	f	Z	e	approved
	m	(Lfk;Lbyj;Lqj$a;ZLjava/lang/String;)V	<init>	<init>
		p	1	pos	pos
		p	2	state	state
		p	4	approved	approved
		p	5	reason	reason
	m	(Llw;)V	a	apply
	m	()Lbyj;	b	getBlockState
	m	()Lfk;	c	getBlockPos
	m	()Z	d	isApproved
	m	()Lqj$a;	e	getAction
c	mg	net/minecraft/network/packet/s2c/play/BlockBreakingProgressS2CPacket
	f	I	a	entityId
	f	Lfk;	b	pos
	f	I	c	progress
	m	(ILfk;I)V	<init>	<init>
		p	1	entityId	entityId
		p	2	pos	pos
		p	3	progress	progress
	m	(Llw;)V	a	apply
	m	()I	b	getEntityId
	m	()Lfk;	c	getPos
	m	()I	d	getProgress
c	mh	net/minecraft/network/packet/s2c/play/BlockEntityUpdateS2CPacket
	f	Lfk;	a	pos
	f	I	b	blockEntityType
	f	Ljt;	c	tag
	m	(Lfk;ILjt;)V	<init>	<init>
		p	1	pos	pos
		p	2	blockEntityType	blockEntityType
		p	3	tag	tag
	m	(Llw;)V	a	apply
	m	()Lfk;	b	getPos
	m	()I	c	getBlockEntityType
	m	()Ljt;	d	getCompoundTag
c	mi	net/minecraft/network/packet/s2c/play/BlockActionS2CPacket
	f	Lfk;	a	pos
	f	I	b	type
	f	I	c	data
	f	Lbph;	d	block
	m	(Lfk;Lbph;II)V	<init>	<init>
		p	1	pos	pos
		p	2	block	block
		p	3	type	type
		p	4	data	data
	m	(Llw;)V	a	apply
	m	()Lfk;	b	getPos
	m	()I	c	getType
	m	()I	d	getData
	m	()Lbph;	e	getBlock
c	mj	net/minecraft/network/packet/s2c/play/BlockUpdateS2CPacket
	f	Lfk;	a	pos
	f	Lbyj;	b	state
	m	(Lbjg;Lfk;)V	<init>	<init>
		p	1	world	world
		p	2	pos	pos
	m	(Llw;)V	a	apply
	m	()Lbyj;	b	getState
	m	()Lfk;	c	getPos
c	mk	net/minecraft/network/packet/s2c/play/BossBarS2CPacket
	f	Ljava/util/UUID;	a	uuid
	f	Lmk$a;	b	type
	f	Llf;	c	name
	f	F	d	percent
	f	Lajb$a;	e	color
	f	Lajb$b;	f	overlay
	f	Z	g	darkenSky
	f	Z	h	dragonMusic
	f	Z	i	thickenFog
	m	(Lmk$a;Lajb;)V	<init>	<init>
		p	1	action	action
	m	(I)V	a	setFlagBitfield
	m	(Llw;)V	a	apply
	m	()Ljava/util/UUID;	b	getUuid
	m	()Lmk$a;	c	getType
	m	()Llf;	d	getName
	m	()F	e	getPercent
	m	()Lajb$a;	f	getColor
	m	()Lajb$b;	g	getOverlay
	m	()Z	h	shouldDarkenSky
	m	()Z	i	hasDragonMusic
	m	()Z	j	shouldThickenFog
	m	()I	k	getFlagBitfield
c	mk$a	net/minecraft/network/packet/s2c/play/BossBarS2CPacket$Type
c	ml	net/minecraft/network/packet/s2c/play/DifficultyS2CPacket
	f	Laji;	a	difficulty
	f	Z	b	difficultyLocked
	m	(Laji;Z)V	<init>	<init>
		p	1	difficulty	difficulty
		p	2	difficultyLocked	difficultyLocked
	m	(Llw;)V	a	apply
	m	()Z	b	isDifficultyLocked
	m	()Laji;	c	getDifficulty
c	mm	net/minecraft/network/packet/s2c/play/ChatMessageS2CPacket
	f	Llf;	a	message
	f	Lld;	b	location
	m	(Llf;)V	<init>	<init>
		p	1	message	message
	m	(Llf;Lld;)V	<init>	<init>
		p	1	message	message
		p	2	location	location
	m	(Llw;)V	a	apply
	m	()Llf;	b	getMessage
	m	()Z	c	isNonChat
	m	()Lld;	d	getLocation
c	mn	net/minecraft/network/packet/s2c/play/ChunkDeltaUpdateS2CPacket
	f	Lbjh;	a	chunkPos
	f	[Lmn$a;	b	records
	m	(Llw;)V	a	apply
	m	()[Lmn$a;	b	getRecords
c	mn$a	net/minecraft/network/packet/s2c/play/ChunkDeltaUpdateS2CPacket$ChunkDeltaRecord
	f	S	b	pos
	f	Lbyj;	c	state
	m	(Lmn;SLcal;)V	<init>	<init>
		p	2	pos	pos
	m	(Lmn;SLbyj;)V	<init>	<init>
		p	2	pos	pos
		p	3	state	state
	m	()Lfk;	a	getBlockPos
	m	()S	b	getPosShort
	m	()Lbyj;	c	getState
c	mo	net/minecraft/network/packet/s2c/play/CommandSuggestionsS2CPacket
	f	I	a	completionId
	f	Lcom/mojang/brigadier/suggestion/Suggestions;	b	suggestions
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	<init>	<init>
		p	1	completionId	completionId
		p	2	suggestions	suggestions
	m	(Llw;)V	a	apply
	m	()I	b	getCompletionId
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	c	getSuggestions
c	mp	net/minecraft/network/packet/s2c/play/CommandTreeS2CPacket
	f	Lcom/mojang/brigadier/tree/RootCommandNode;	a	commandTree
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)V	<init>	<init>
		p	1	commandTree	commandTree
	m	(Lkv;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V	a	writeNode
		p	1	buf	buf
		p	2	node	node
	m	(Llw;)V	a	apply
	m	(Lkv;B)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	readArgumentBuilder
		p	1	buf	buf
	m	()Lcom/mojang/brigadier/tree/RootCommandNode;	b	getCommandTree
	m	(Lkv;)Lmp$a;	c	readCommandNode
		p	1	buf	buf
c	mp$a	net/minecraft/network/packet/s2c/play/CommandTreeS2CPacket$CommandNodeData
	f	Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	argumentBuilder
	f	B	b	flags
	f	I	c	redirectNodeIndex
	f	[I	d	childNodeIndices
	f	Lcom/mojang/brigadier/tree/CommandNode;	e	node
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;BI[I)V	<init>	<init>
		p	1	argumentBuilder	argumentBuilder
		p	2	flags	flags
		p	3	redirectNodeIndex	redirectNodeIndex
		p	4	childNodeIndices	childNodeIndices
	m	([Lmp$a;)Z	a	build
		p	1	previousNodes	previousNodes
c	mq	net/minecraft/network/packet/s2c/play/ConfirmGuiActionS2CPacket
	f	I	a	id
	f	S	b	actionId
	f	Z	c	accepted
	m	(ISZ)V	<init>	<init>
		p	1	id	id
		p	2	actionId	actionId
		p	3	accepted	accepted
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()S	c	getActionId
	m	()Z	d	wasAccepted
c	mr	net/minecraft/network/packet/s2c/play/CloseContainerS2CPacket
	f	I	a	syncId
	m	(I)V	<init>	<init>
		p	1	syncId	syncId
	m	(Llw;)V	a	apply
c	ms	net/minecraft/network/packet/s2c/play/InventoryS2CPacket
	f	I	a	guiId
	f	Ljava/util/List;	b	slotStackList
	m	(ILfy;)V	<init>	<init>
		p	1	guiId	guiId
		p	2	slotStackList	slotStackList
	m	(Llw;)V	a	apply
	m	()I	b	getGuiId
	m	()Ljava/util/List;	c	getSlotStacks
c	mt	net/minecraft/network/packet/s2c/play/ContainerPropertyUpdateS2CPacket
	f	I	a	syncId
	f	I	b	propertyId
	f	I	c	value
	m	(III)V	<init>	<init>
		p	1	syncId	syncId
		p	2	propertyId	propertyId
		p	3	value	value
	m	(Llw;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getPropertyId
	m	()I	d	getValue
c	mu	net/minecraft/network/packet/s2c/play/ContainerSlotUpdateS2CPacket
	f	I	a	syncId
	f	I	b	slot
	f	Lben;	c	stack
	m	(IILben;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	slot	slot
		p	3	stack	stack
	m	(Llw;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getSlot
	m	()Lben;	d	getItemStack
c	mv	net/minecraft/network/packet/s2c/play/CooldownUpdateS2CPacket
	f	Lbei;	a	item
	f	I	b	cooldown
	m	(Lbei;I)V	<init>	<init>
		p	1	item	item
		p	2	cooldown	cooldown
	m	(Llw;)V	a	apply
	m	()Lbei;	b	getItem
	m	()I	c	getCooldown
c	mw	net/minecraft/network/packet/s2c/play/CustomPayloadS2CPacket
	f	Lsm;	a	BRAND
	f	Lsm;	b	DEBUG_PATH
	f	Lsm;	c	DEBUG_NEIGHBORS_UPDATE
	f	Lsm;	d	DEBUG_CAVES
	f	Lsm;	e	DEBUG_STRUCTURES
	f	Lsm;	f	DEBUG_WORLDGEN_ATTEMPT
	f	Lsm;	g	DEBUG_POI_TICKET_COUNT
	f	Lsm;	h	DEBUG_POI_ADDED
	f	Lsm;	i	DEBUG_POI_REMOVED
	f	Lsm;	j	DEBUG_VILLAGE_SECTIONS
	f	Lsm;	k	DEBUG_GOAL_SELECTOR
	f	Lsm;	l	DEBUG_BRAIN
	f	Lsm;	m	DEBUG_BEE
	f	Lsm;	n	DEBUG_HIVE
	f	Lsm;	o	DEBUG_GAME_TEST_ADD_MARKER
	f	Lsm;	p	DEBUG_GAME_TEST_CLEAR
	f	Lsm;	q	DEBUG_RAIDS
	f	Lsm;	r	channel
	f	Lkv;	s	data
	m	(Lsm;Lkv;)V	<init>	<init>
		p	1	channel	channel
		p	2	data	data
	m	(Llw;)V	a	apply
	m	()Lsm;	b	getChannel
	m	()Lkv;	c	getData
c	mx	net/minecraft/network/packet/s2c/play/PlaySoundIdS2CPacket
	f	Lsm;	a	id
	f	Laaj;	b	category
	f	I	c	fixedX
	f	I	d	fixedY
	f	I	e	fixedZ
	f	F	f	volume
	f	F	g	pitch
	m	(Lsm;Laaj;Lcvl;FF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	pos	pos
		p	4	volume	volume
		p	5	pitch	pitch
	m	(Llw;)V	a	apply
	m	()Lsm;	b	getSoundId
	m	()Laaj;	c	getCategory
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
c	my	net/minecraft/network/packet/s2c/play/DisconnectS2CPacket
	f	Llf;	a	reason
	m	(Llf;)V	<init>	<init>
		p	1	reason	reason
	m	(Llw;)V	a	apply
	m	()Llf;	b	getReason
c	mz	net/minecraft/network/packet/s2c/play/EntityStatusS2CPacket
	f	I	a	id
	f	B	b	status
	m	(Lakq;B)V	<init>	<init>
		p	1	entity	entity
		p	2	status	status
	m	(Lbjw;)Lakq;	a	getEntity
	m	(Llw;)V	a	apply
	m	()B	b	getStatus
c	na	net/minecraft/network/packet/s2c/play/ExplosionS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	radius
	f	Ljava/util/List;	e	affectedBlocks
	f	F	f	playerVelocityX
	f	F	g	playerVelocityY
	f	F	h	playerVelocityZ
	m	(DDDFLjava/util/List;Lcvl;)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	radius	radius
		p	8	affectedBlocks	affectedBlocks
		p	9	playerVelocity	playerVelocity
	m	(Llw;)V	a	apply
	m	()F	b	getPlayerVelocityX
	m	()F	c	getPlayerVelocityY
	m	()F	d	getPlayerVelocityZ
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()F	h	getRadius
	m	()Ljava/util/List;	i	getAffectedBlocks
c	nb	net/minecraft/network/packet/s2c/play/UnloadChunkS2CPacket
	f	I	a	x
	f	I	b	z
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
	m	(Llw;)V	a	apply
	m	()I	b	getX
	m	()I	c	getZ
c	nc	net/minecraft/network/packet/s2c/play/GameStateChangeS2CPacket
	f	[Ljava/lang/String;	a	REASON_MESSAGES
	f	I	b	reason
	f	F	c	value
	m	(IF)V	<init>	<init>
		p	1	reason	reason
		p	2	value	value
	m	(Llw;)V	a	apply
	m	()I	b	getReason
	m	()F	c	getValue
c	nd	net/minecraft/network/packet/s2c/play/OpenHorseContainerS2CPacket
	f	I	a	syncId
	f	I	b	slotCount
	f	I	c	horseId
	m	(III)V	<init>	<init>
		p	1	syncId	syncId
		p	2	slotCount	slotCount
		p	3	horseId	horseId
	m	(Llw;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getSlotCount
	m	()I	d	getHorseId
c	ne	net/minecraft/network/packet/s2c/play/KeepAliveS2CPacket
	f	J	a	id
	m	(J)V	<init>	<init>
		p	1	id	id
	m	(Llw;)V	a	apply
	m	()J	b	getId
c	net/minecraft/client/main/Main	net/minecraft/client/main/Main
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object;	a	getOption
		p	0	optionSet	optionSet
		p	1	optionSpec	optionSpec
	m	(Ljava/lang/Integer;)Ljava/util/OptionalInt;	a	toOptional
		p	0	i	i
	m	(Ljava/lang/String;)Z	a	isNotNullOrEmpty
		p	0	s	s
	m	([Ljava/lang/String;)V	main	main
		p	0	args	args
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	(Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lgy;	a	create
		p	0	output	output
		p	1	inputs	inputs
		p	2	includeClient	includeClient
		p	3	includeServer	includeServer
		p	4	includeDev	includeDev
		p	5	includeReports	includeReports
		p	6	validate	validate
c	net/minecraft/realms/RealmListEntry	net/minecraft/realms/RealmListEntry
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
c	net/minecraft/realms/RealmsAbstractButtonProxy	net/minecraft/realms/RealmsAbstractButtonProxy
	m	(Z)V	active	active
		p	1	enabled	enabled
	m	(Z)V	setVisible	setVisible
		p	1	visible	visible
c	net/minecraft/realms/RealmsButton	net/minecraft/realms/RealmsButton
	m	()Lnet/minecraft/realms/RealmsButtonProxy;	getProxy	getProxy
c	net/minecraft/realms/RealmsButtonProxy	net/minecraft/realms/RealmsButtonProxy
	m	(Lnet/minecraft/realms/RealmsButton;IILjava/lang/String;IILdcv$a;)V	<init>	<init>
		p	1	button	button
		p	2	x	x
		p	3	y	y
		p	4	text	text
		p	5	width	width
		p	6	height	height
	m	(Z)V	active	active
		p	1	enabled	enabled
	m	()Lnet/minecraft/realms/RealmsButton;	getButton	getButton
	m	(Z)I	getYImage	getYImage
		p	1	isHovered	isHovered
	m	(DD)V	onClick	onClick
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DD)V	onRelease	onRelease
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Ldbn;II)V	renderBg	renderBg
		p	1	client	client
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(IIF)V	renderButton	renderButton
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(Ljava/lang/String;)V	setMessage	setMessage
		p	1	value	value
	m	(Z)V	setVisible	setVisible
		p	1	visible	visible
c	net/minecraft/realms/RealmsClickableScrolledSelectionListProxy	net/minecraft/realms/RealmsClickableScrolledSelectionListProxy
	m	(I)Z	isSelectedItem	isSelectedItem
		p	1	index	index
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIIIIIF)V	renderItem	renderItem
		p	1	index	index
		p	2	y	y
	m	(IIIIF)V	renderList	renderList
		p	1	x	x
		p	2	y	y
		p	3	mouseX	mouseX
		p	4	mouseY	mouseY
	m	(IIDD)Z	selectItem	selectItem
		p	1	index	index
		p	2	button	button
		p	3	mouseX	mouseX
		p	5	mouseY	mouseY
c	net/minecraft/realms/RealmsLevelSummary	net/minecraft/realms/RealmsLevelSummary
	m	(Lnet/minecraft/realms/RealmsLevelSummary;)I	compareTo	compareTo
c	net/minecraft/realms/RealmsObjectSelectionListProxy	net/minecraft/realms/RealmsObjectSelectionListProxy
	m	(Lddg$a;)I	addEntry	addEntry
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(I)Lddg$a;	remove	remove
	m	(Lddg$a;)Z	removeEntry	removeEntry
	m	(Lddg$a;)V	setSelected	setSelected
c	net/minecraft/realms/RealmsScreen	net/minecraft/realms/RealmsScreen
	m	()Lnet/minecraft/realms/RealmsScreenProxy;	getProxy	getProxy
c	net/minecraft/realms/RealmsScreenProxy	net/minecraft/realms/RealmsScreenProxy
	m	(CI)Z	charTyped	charTyped
		p	1	chr	chr
		p	2	keyCode	keyCode
	m	(Ljava/lang/String;III)V	drawCenteredString	drawCenteredString
		p	1	text	text
		p	2	x	x
		p	3	y	y
	m	(Ljava/lang/String;IIIZ)V	drawString	drawString
		p	1	text	text
		p	2	x	x
		p	3	y	y
		p	4	color	color
	m	(Ljava/lang/String;III)V	fontDrawShadow	fontDrawShadow
		p	1	text	text
		p	2	x	x
		p	3	y	y
	m	(Ldbn;II)V	init	init
		p	1	client	client
		p	2	width	width
		p	3	height	height
	m	(III)Z	keyPressed	keyPressed
		p	1	keyCode	keyCode
		p	2	scanCode	scanCode
		p	3	modifiers	modifiers
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(I)V	renderBackground	renderBackground
		p	1	alpha	alpha
	m	(Ljava/lang/String;II)V	renderTooltip	renderTooltip
		p	1	text	text
		p	2	x	x
		p	3	y	y
	m	(Lben;II)V	renderTooltip	renderTooltip
		p	1	stack	stack
		p	2	x	x
		p	3	y	y
	m	(Ljava/util/List;II)V	renderTooltip	renderTooltip
		p	1	text	text
		p	2	x	x
		p	3	y	y
c	net/minecraft/realms/RealmsScrolledSelectionListProxy	net/minecraft/realms/RealmsScrolledSelectionListProxy
	m	(I)Z	isSelectedItem	isSelectedItem
		p	1	index	index
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIIIIIF)V	renderItem	renderItem
		p	1	index	index
		p	2	y	y
	m	(IIDD)Z	selectItem	selectItem
		p	1	index	index
		p	2	button	button
		p	3	mouseX	mouseX
		p	5	mouseY	mouseY
c	net/minecraft/realms/RealmsSimpleScrolledSelectionListProxy	net/minecraft/realms/RealmsSimpleScrolledSelectionListProxy
	m	(I)Z	isSelectedItem	isSelectedItem
		p	1	index	index
	m	(DDI)Z	mouseClicked	mouseClicked
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDIDD)Z	mouseDragged	mouseDragged
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
		p	6	deltaX	deltaX
		p	8	deltaY	deltaY
	m	(DDI)Z	mouseReleased	mouseReleased
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
		p	5	button	button
	m	(DDD)Z	mouseScrolled	mouseScrolled
		p	5	amount	amount
	m	(IIF)V	render	render
		p	1	mouseX	mouseX
		p	2	mouseY	mouseY
		p	3	delta	delta
	m	(IIIIIIF)V	renderItem	renderItem
		p	1	index	index
		p	2	y	y
	m	(IIDD)Z	selectItem	selectItem
		p	1	index	index
		p	2	button	button
		p	3	mouseX	mouseX
		p	5	mouseY	mouseY
c	net/minecraft/realms/RealmsSliderButton	net/minecraft/realms/RealmsSliderButton
	m	()Lnet/minecraft/realms/RealmsSliderButtonProxy;	getProxy	getProxy
c	net/minecraft/realms/RealmsSliderButtonProxy	net/minecraft/realms/RealmsSliderButtonProxy
	m	(Z)V	active	active
		p	1	enabled	enabled
	m	()Lnet/minecraft/realms/RealmsSliderButton;	getButton	getButton
	m	(Z)I	getYImage	getYImage
		p	1	isHovered	isHovered
	m	(DD)V	onClick	onClick
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(DD)V	onRelease	onRelease
		p	1	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Ldbn;II)V	renderBg	renderBg
		p	1	client	client
		p	2	mouseX	mouseX
		p	3	mouseY	mouseY
	m	(Ljava/lang/String;)V	setMessage	setMessage
		p	1	value	value
	m	(Z)V	setVisible	setVisible
		p	1	visible	visible
c	net/minecraft/realms/RealmsVertexFormat	net/minecraft/realms/RealmsVertexFormat
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	net/minecraft/realms/RealmsVertexFormatElement	net/minecraft/realms/RealmsVertexFormatElement
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	net/minecraft/realms/RepeatedNarrator	net/minecraft/realms/RepeatedNarrator
c	net/minecraft/realms/RepeatedNarrator$a	net/minecraft/realms/RepeatedNarrator$Parameters
	f	Ljava/lang/String;	a	message
	f	Lcom/google/common/util/concurrent/RateLimiter;	b	rateLimiter
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	f	Z	A	preventProxyConnections
	f	Z	B	spawnAnimals
	f	Z	C	spawnNpcs
	f	Z	D	pvpEnabled
	f	Z	E	flightEnabled
	f	Ljava/lang/String;	F	motd
	f	I	G	worldHeight
	f	I	H	playerIdleTimeout
	f	Ljava/security/KeyPair;	I	keyPair
	f	Ljava/lang/String;	J	userName
	f	Ljava/lang/String;	K	levelName
	f	Ljava/lang/String;	L	displayName
	f	Z	M	demo
	f	Z	N	bonusChest
	f	Ljava/lang/String;	O	resourcePackUrl
	f	Ljava/lang/String;	P	resourcePackHash
	f	Z	Q	loading
	f	Llf;	S	loadingStage
	f	Z	T	profilerStartQueued
	f	Z	U	forceGameMode
	f	Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;	V	authService
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	W	sessionService
	f	Lcom/mojang/authlib/GameProfileRepository;	X	gameProfileRepo
	f	Lzk;	Y	userCache
	f	J	Z	lastPlayerSampleUpdate
	f	J	aa	timeReference
	f	Z	ad	iconFilePresent
	f	Lyz;	ae	dataManager
	f	Lyq;	af	dataPackManager
	f	Lyo;	ag	fileDataPackProvider
	f	Lcr;	ah	commandManager
	f	Lbgx;	ai	recipeManager
	f	Labb;	aj	tagManager
	f	Lta;	ak	scoreboard
	f	Lcrj;	al	dataCommandStorage
	f	Ltd;	am	bossBarManager
	f	Lcsc;	an	predicateManager
	f	Lcsb;	ao	lootManager
	f	Lsx;	ap	advancementLoader
	f	Lsy;	aq	commandFunctionManager
	f	Labj;	ar	metricsData
	f	Z	as	enforceWhitelist
	f	Z	at	forceWorldUpgrade
	f	Z	au	eraseCache
	f	F	av	tickTime
	f	Ljava/util/concurrent/Executor;	aw	workerExecutor
	f	Ljava/lang/String;	ax	serverId
	f	Ljava/io/File;	b	USER_CACHE_FILE
	f	Lbka;	c	DEMO_LEVEL_INFO
	f	Lxn;	d	worldGenerationProgressListenerFactory
	f	Ljava/net/Proxy;	e	proxy
	f	[J	f	lastTickLengths
	f	Ljava/lang/Thread;	g	serverThread
	f	Lorg/apache/logging/log4j/Logger;	h	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	i	COMPLETED_UNIT_FUTURE
	f	Lcrp;	j	levelStorage
	f	Lajs;	k	snooper
	f	Ljava/io/File;	l	gameDir
	f	Ljava/util/List;	m	serverGuiTickables
	f	Laik;	n	profiler
	f	Lxu;	o	networkIo
	f	Lrw;	p	metadata
	f	Ljava/util/Random;	q	random
	f	Lcom/mojang/datafixers/DataFixer;	r	dataFixer
	f	Ljava/lang/String;	s	serverIp
	f	I	t	serverPort
	f	Ljava/util/Map;	u	worlds
	f	Lzo;	v	playerManager
	f	Z	w	running
	f	Z	x	stopped
	f	I	y	ticks
	f	Z	z	onlineMode
	m	(Ljava/io/File;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Lcr;Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Lzk;Lxn;Ljava/lang/String;)V	<init>	<init>
		p	1	gameDir	gameDir
		p	5	authService	authService
		p	6	sessionService	sessionService
		p	10	levelName	levelName
	m	()Z	A	isNetherAllowed
	m	()V	B	start
	m	()Z	C	isStopping
	m	()Ljava/lang/Iterable;	D	getWorlds
	m	()Ljava/lang/String;	E	getVersion
	m	()I	F	getCurrentPlayerCount
	m	()I	G	getMaxPlayerCount
	m	()[Ljava/lang/String;	H	getPlayerNames
	m	()Z	J	isDebuggingEnabled
	m	()Z	K	hasGameDir
	m	()Ljava/security/KeyPair;	L	getKeyPair
	m	()I	M	getServerPort
	m	()Ljava/lang/String;	N	getUserName
	m	()Z	O	isSinglePlayer
	m	()Ljava/lang/String;	P	getLevelName
	m	()Ljava/lang/String;	Q	getServerName
	m	()Z	R	isMonsterSpawningEnabled
	m	()Z	S	isDemo
	m	()Lcrp;	T	getLevelStorage
	m	()Ljava/lang/String;	U	getResourcePackUrl
	m	()Ljava/lang/String;	V	getResourcePackHash
	m	()Z	X	isOnlineMode
	m	()Z	Y	shouldPreventProxyConnections
	m	()Z	Z	shouldSpawnAnimals
	m	(Ljava/nio/file/Path;)V	a	dump
		p	1	path	path
	m	(Lrw;)V	a	setFavicon
		p	1	metadata	metadata
	m	(Z)V	a	stop
	m	(Ljava/security/KeyPair;)V	a	setKeyPair
	m	(Ljava/lang/String;Lcrn;)V	a	loadWorldResourcePack
		p	1	worldName	worldName
		p	2	worldSaveHandler	worldSaveHandler
	m	(Lxd;)I	a	getSpawnRadius
		p	1	world	world
	m	(Lzo;)V	a	setPlayerManager
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Laji;Z)V	a	setDifficulty
	m	(Ltb;)Z	a	canExecute
	m	(Ljava/lang/String;)V	a	upgradeWorld
	m	(ZZZ)Z	a	save
	m	(Lcbi;)Lxd;	a	getWorld
	m	(Ljava/lang/String;Ljava/lang/String;JLbkd;Lcom/google/gson/JsonElement;)V	a	loadWorld
		p	1	name	name
		p	2	serverName	serverName
		p	3	seed	seed
		p	5	generatorType	generatorType
		p	6	generatorSettings	generatorSettings
	m	(Ljava/lang/Runnable;)Ltb;	a	createTask
	m	(Lbjt;)V	a	setDefaultGameMode
	m	(Lxe;)V	a	sendDifficulty
		p	1	player	player
	m	(Lcrn;Lcrm;Lbka;Lxm;)V	a	createWorlds
		p	2	properties	properties
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isOwner
		p	1	profile	profile
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setResourcePack
		p	1	url	url
		p	2	hash	hash
	m	(Lcrm;)V	a	setToDebugWorldProperties
		p	1	properties	properties
	m	(I)V	a	setServerPort
		p	1	serverPort	serverPort
	m	(Ljava/io/File;Lcrm;)V	a	loadWorldDataPacks
		p	1	worldDir	worldDir
	m	(Lcrl;)V	a	initScoreboard
		p	1	persistentStateManager	persistentStateManager
	m	(Lh;)V	a	setCrashReport
	m	(Lbjw;Lfk;Layj;)Z	a	isSpawnProtected
	m	(Lcq;)V	a	kickNonWhitelistedPlayers
		p	1	source	source
	m	(Lbjt;ZI)Z	a	openToLan
		p	2	cheatsAllowed	cheatsAllowed
		p	3	port	port
	m	(Lxm;)V	a	prepareStartRegion
	m	()I	aA	getNetworkCompressionThreshold
	m	()J	aB	getServerStartTime
	m	()Lcom/mojang/datafixers/DataFixer;	aC	getDataFixer
	m	()Lsx;	aD	getAdvancementLoader
	m	()Lsy;	aE	getCommandFunctionManager
	m	()V	aF	reload
	m	()Lyz;	aG	getDataManager
	m	()Lyq;	aH	getDataPackManager
	m	()Lcr;	aJ	getCommandManager
	m	()Lcq;	aK	getCommandSource
	m	()Lbgx;	aL	getRecipeManager
	m	()Labb;	aM	getTagManager
	m	()Lta;	aN	getScoreboard
	m	()Lcrj;	aO	getDataCommandStorage
	m	()Lcsb;	aP	getLootManager
	m	()Lcsc;	aQ	getPredicateManager
	m	()Lbjs;	aR	getGameRules
	m	()Ltd;	aS	getBossBarManager
	m	()Z	aT	isEnforceWhitelist
	m	()F	aU	getTickTime
	m	()Labj;	aV	getMetricsData
	m	()Laik;	aW	getProfiler
	m	()Ljava/util/concurrent/Executor;	aX	getWorkerExecutor
	m	()Z	aZ	shouldKeepTicking
	m	()Z	aa	shouldSpawnNpcs
	m	()Z	ab	isPvpEnabled
	m	()Z	ac	isFlightEnabled
	m	()Ljava/lang/String;	ad	getServerMotd
	m	()I	ae	getWorldHeight
	m	()Z	af	isStopped
	m	()Lzo;	ag	getPlayerManager
	m	()Lxu;	ah	getNetworkIo
	m	()Z	ai	isLoading
	m	()Z	aj	hasGui
	m	()I	ak	getTicks
	m	()V	al	enableProfiler
	m	()Lajs;	am	getSnooper
	m	()I	ao	getSpawnProtectionRadius
	m	()Z	ap	shouldForceGameMode
	m	()I	ar	getPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	as	getSessionService
	m	()Lcom/mojang/authlib/GameProfileRepository;	at	getGameProfileRepo
	m	()Lzk;	au	getUserCache
	m	()Lrw;	av	getServerMetadata
	m	()V	aw	forcePlayerSampleUpdate
	m	()I	ax	getMaxWorldBorderRadius
	m	(Ltb;)V	b	executeTask
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickWorlds
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Ljava/nio/file/Path;)V	b	dumpStats
	m	(Z)V	b	setForceWorldUpgrade
	m	(Lcom/mojang/authlib/GameProfile;)I	b	getPermissionLevel
		p	1	profile	profile
	m	(Lcrm;)V	b	reloadDataPacks
	m	(Ljava/lang/String;)V	b	setServerIp
		p	1	serverIp	serverIp
	m	(Llf;)V	b	setLoadingStage
		p	1	loadingStage	loadingStage
	m	(I)V	b	setWorldHeight
		p	1	worldHeight	worldHeight
	m	(Ljava/lang/Runnable;)V	b	addServerGuiTickable
		p	1	tickable	tickable
	m	(Lh;)Lh;	b	populateCrashReport
	m	()Z	bf	isMainThread
	m	(I)V	c	setPlayerIdleTimeout
		p	1	playerIdleTimeout	playerIdleTimeout
	m	(Ljava/nio/file/Path;)V	c	dumpExampleCrash
	m	(Z)V	c	setEraseCache
		p	1	eraseCache	eraseCache
	m	(Ljava/lang/String;)V	c	setServerId
		p	1	serverId	serverId
	m	(Z)V	d	setDifficultyLocked
		p	1	locked	locked
	m	(Ljava/nio/file/Path;)V	d	dumpGamerules
	m	(Ljava/lang/String;)Ljava/io/File;	d	getFile
	m	()Z	d	setupServer
	m	()V	e	exit
	m	(Ljava/lang/String;)V	e	info
	m	(Z)V	e	setDemo
		p	1	demo	demo
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
	m	(Z)V	f	setBonusChest
		p	1	bonusChest	bonusChest
	m	(Ljava/lang/String;)V	f	warn
	m	()Z	f	shouldGenerateStructures
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
	m	(Z)V	g	setOnlineMode
		p	1	onlineMode	onlineMode
	m	(Ljava/lang/String;)V	g	logError
	m	()Lbjt;	g	getDefaultGameMode
	m	()Laji;	h	getDefaultDifficulty
	m	(Z)V	h	setPreventProxyConnections
		p	1	preventProxyConnections	preventProxyConnections
	m	(Ljava/lang/String;)V	h	log
	m	()Z	h_	isRunning
	m	(Z)V	i	setSpawnAnimals
		p	1	spawnAnimals	spawnAnimals
	m	(Ljava/lang/String;)V	i	setUserName
		p	1	userName	userName
	m	()Z	i	isHardcore
	m	(Ljava/lang/String;)V	j	setServerName
		p	1	serverName	serverName
	m	()I	j	getOpPermissionLevel
	m	(Z)V	j	setSpawnNpcs
		p	1	spawnNpcs	spawnNpcs
	m	(Z)V	k	setPvpEnabled
		p	1	pvpEnabled	pvpEnabled
	m	(Ljava/lang/String;)V	k	setMotd
		p	1	motd	motd
	m	()I	k	getFunctionPermissionLevel
	m	(Z)V	l	setFlightEnabled
		p	1	flightEnabled	flightEnabled
	m	()Z	l	shouldBroadcastRconToOps
	m	()Z	m	isDedicated
	m	(Z)V	m	setForceGameMode
		p	1	forceGameMode	forceGameMode
	m	([Ljava/lang/String;)V	main	main
		p	0	args	args
	m	()Z	n	isUsingNativeTransport
	m	(Z)V	n	setEnforceWhitelist
		p	1	whitelistEnabled	whitelistEnabled
	m	()Z	o	areCommandBlocksEnabled
	m	()Z	p	isRemote
	m	()V	s	shutdown
	m	()Ljava/lang/String;	t	getServerIp
	m	()Z	x	hasIconFile
	m	()Ljava/io/File;	y	getIconFile
	m	()Ljava/io/File;	z	getRunDirectory
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	f	J	b	lastProgressUpdate
c	nf	net/minecraft/network/packet/s2c/play/ChunkDataS2CPacket
	f	I	a	chunkX
	f	I	b	chunkZ
	f	I	c	verticalStripBitmask
	f	Ljt;	d	heightmaps
	f	Lbzz;	e	biomeArray
	f	[B	f	data
	f	Ljava/util/List;	g	blockEntities
	f	Z	h	isFullChunk
	m	(Lcal;I)V	<init>	<init>
		p	1	chunk	chunk
		p	2	includedSectionsMask	includedSectionsMask
	m	(Lkv;Lcal;I)I	a	writeData
		p	2	chunk	chunk
		p	3	includedSectionsMask	includedSectionsMask
	m	(Llw;)V	a	apply
	m	(Lcal;I)I	a	getDataSize
		p	1	chunk	chunk
		p	2	includedSectionsMark	includedSectionsMark
	m	()Lkv;	b	getReadBuffer
	m	()I	c	getX
	m	()I	d	getZ
	m	()I	e	getVerticalStripBitmask
	m	()Z	f	isFullChunk
	m	()Ljt;	g	getHeightmaps
	m	()Ljava/util/List;	h	getBlockEntityTagList
	m	()Lbzz;	i	getBiomeArray
	m	()Lio/netty/buffer/ByteBuf;	j	getWriteBuffer
c	ng	net/minecraft/network/packet/s2c/play/WorldEventS2CPacket
	f	I	a	eventId
	f	Lfk;	b	pos
	f	I	c	data
	f	Z	d	global
	m	(ILfk;IZ)V	<init>	<init>
		p	1	eventId	eventId
		p	2	pos	pos
		p	3	data	data
		p	4	global	global
	m	(Llw;)V	a	apply
	m	()Z	b	isGlobal
	m	()I	c	getEventId
	m	()I	d	getEffectData
	m	()Lfk;	e	getPos
c	nh	net/minecraft/network/packet/s2c/play/ParticleS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	offsetX
	f	F	e	offsetY
	f	F	f	offsetZ
	f	F	g	speed
	f	I	h	count
	f	Z	i	longDistance
	f	Lgt;	j	parameters
	m	(Lgt;ZDDDFFFFI)V	<init>	<init>
		p	1	parameters	parameters
		p	2	longDistance	longDistance
	m	(Lkv;Lgu;)Lgt;	a	readParticleParameters
		p	1	buf	buf
		p	2	type	type
	m	(Llw;)V	a	apply
	m	()Z	b	isLongDistance
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getOffsetX
	m	()F	g	getOffsetY
	m	()F	h	getOffsetZ
	m	()F	i	getSpeed
	m	()I	j	getCount
	m	()Lgt;	k	getParameters
c	ni	net/minecraft/network/packet/s2c/play/LightUpdateS2CPacket
	f	I	a	chunkX
	f	I	b	chunkZ
	f	I	c	skyLightMask
	f	I	d	blockLightMask
	f	I	e	filledSkyLightMask
	f	I	f	filledBlockLightMask
	f	Ljava/util/List;	g	skyLightUpdates
	f	Ljava/util/List;	h	blockLightUpdates
	m	(Lbjh;Lcoa;II)V	<init>	<init>
		p	1	pos	pos
		p	2	lightProvider	lightProvider
		p	3	skyLightMask	skyLightMask
		p	4	blockLightMask	blockLightMask
	m	(Llw;)V	a	apply
	m	()I	b	getChunkX
	m	()I	c	getChunkZ
	m	()I	d	getSkyLightMask
	m	()I	e	getFilledSkyLightMask
	m	()Ljava/util/List;	f	getSkyLightUpdates
	m	()I	g	getBlockLightMask
	m	()I	h	getFilledBlockLightMask
	m	()Ljava/util/List;	i	getBlockLightUpdates
c	nj	net/minecraft/network/packet/s2c/play/GameJoinS2CPacket
	f	I	a	playerEntityId
	f	J	b	seed
	f	Z	c	hardcore
	f	Lbjt;	d	gameMode
	f	Lcbi;	e	dimension
	f	I	f	maxPlayers
	f	Lbkd;	g	generatorType
	f	I	h	chunkLoadDistance
	f	Z	i	reducedDebugInfo
	f	Z	j	showsDeathScreen
	m	(ILbjt;JZLcbi;ILbkd;IZZ)V	<init>	<init>
		p	1	playerEntityId	playerEntityId
		p	2	gameMode	gameMode
		p	3	seed	seed
		p	5	hardcore	hardcore
		p	6	dimensionType	dimensionType
		p	7	maxPlayers	maxPlayers
		p	8	levelGeneratorType	levelGeneratorType
		p	9	chunkLoadDistance	chunkLoadDistance
		p	10	reducedDebugInfo	reducedDebugInfo
		p	11	showsDeathScreen	showsDeathScreen
	m	(Llw;)V	a	apply
	m	()I	b	getEntityId
	m	()J	c	getSeed
	m	()Z	d	isHardcore
	m	()Lbjt;	e	getGameMode
	m	()Lcbi;	f	getDimension
	m	()Lbkd;	h	getGeneratorType
	m	()I	i	getChunkLoadDistance
	m	()Z	j	hasReducedDebugInfo
	m	()Z	k	showsDeathScreen
c	nk	net/minecraft/network/packet/s2c/play/MapUpdateS2CPacket
	f	I	a	id
	f	B	b	scale
	f	Z	c	showIcons
	f	Z	d	locked
	f	[Lcrd;	e	icons
	f	I	f	startX
	f	I	g	startZ
	f	I	h	width
	f	I	i	height
	f	[B	j	colors
	m	(IBZZLjava/util/Collection;[BIIII)V	<init>	<init>
		p	1	id	id
		p	2	scale	scale
		p	3	showIcons	showIcons
		p	4	locked	locked
		p	5	icons	icons
		p	6	mapColors	mapColors
		p	7	startX	startX
		p	8	startZ	startZ
		p	9	width	width
		p	10	height	height
	m	(Llw;)V	a	apply
	m	(Lcrg;)V	a	apply
	m	()I	b	getId
c	nl	net/minecraft/network/packet/s2c/play/SetTradeOffersS2CPacket
	f	I	a	syncId
	f	Lbja;	b	recipes
	f	I	c	levelProgress
	f	I	d	experience
	f	Z	e	leveled
	f	Z	f	refreshable
	m	(ILbja;IIZZ)V	<init>	<init>
		p	1	syncId	syncId
		p	2	recipes	recipes
		p	3	levelProgress	levelProgress
		p	4	experience	experience
		p	5	leveled	leveled
		p	6	refreshable	refreshable
	m	(Llw;)V	a	apply
	m	()I	b	getSyncId
	m	()Lbja;	c	getOffers
	m	()I	d	getLevelProgress
	m	()I	e	getExperience
	m	()Z	f	isLeveled
	m	()Z	g	isRefreshable
c	nm	net/minecraft/network/packet/s2c/play/EntityS2CPacket
	f	I	a	id
	f	S	b	deltaX
	f	S	c	deltaY
	f	S	d	deltaZ
	f	B	e	yaw
	f	B	f	pitch
	f	Z	g	onGround
	f	Z	h	rotate
	m	(I)V	<init>	<init>
		p	1	entityId	entityId
	m	(D)J	a	encodePacketCoordinate
		p	0	coord	coord
	m	(JJJ)Lcvl;	a	decodePacketCoordinates
		p	0	x	x
		p	2	y	y
		p	4	z	z
	m	(Lbjw;)Lakq;	a	getEntity
	m	(Llw;)V	a	apply
		p	1	listener	listener
	m	()S	b	getDeltaXShort
	m	()S	c	getDeltaYShort
	m	()S	d	getDeltaZShort
	m	()B	e	getYaw
	m	()B	f	getPitch
	m	()Z	g	hasRotation
	m	()Z	i	isOnGround
c	nm$a	net/minecraft/network/packet/s2c/play/EntityS2CPacket$MoveRelative
c	nm$b	net/minecraft/network/packet/s2c/play/EntityS2CPacket$RotateAndMoveRelative
c	nm$c	net/minecraft/network/packet/s2c/play/EntityS2CPacket$Rotate
c	nn	net/minecraft/network/packet/s2c/play/VehicleMoveS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	m	(Llw;)V	a	apply
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYaw
	m	()F	f	getPitch
c	no	net/minecraft/network/packet/s2c/play/OpenWrittenBookS2CPacket
	f	Lajk;	a	hand
	m	(Llw;)V	a	apply
	m	()Lajk;	b	getHand
c	np	net/minecraft/network/packet/s2c/play/OpenContainerS2CPacket
	f	I	a	syncId
	f	I	b	containerId
	f	Llf;	c	name
	m	(ILbbo;Llf;)V	<init>	<init>
		p	1	syncId	syncId
		p	2	type	type
		p	3	name	name
	m	(Llw;)V	a	apply
	m	()I	b	getSyncId
	m	()Lbbo;	c	getContainerType
	m	()Llf;	d	getName
c	nq	net/minecraft/network/packet/s2c/play/SignEditorOpenS2CPacket
	f	Lfk;	a	pos
	m	(Lfk;)V	<init>	<init>
		p	1	pos	pos
	m	(Llw;)V	a	apply
	m	()Lfk;	b	getPos
c	nr	net/minecraft/network/packet/s2c/play/CraftFailedResponseS2CPacket
	f	I	a	syncId
	f	Lsm;	b	recipeId
	m	(ILbgw;)V	<init>	<init>
		p	1	syncId	syncId
	m	(Llw;)V	a	apply
	m	()Lsm;	b	getRecipeId
	m	()I	c	getSyncId
c	ns	net/minecraft/network/packet/s2c/play/PlayerAbilitiesS2CPacket
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	allowFlying
	f	Z	d	creativeMode
	f	F	e	flySpeed
	f	F	f	fovModifier
	m	(F)V	a	setFlySpeed
	m	(Z)V	a	setInvulnerable
	m	(Llw;)V	a	apply
	m	(Z)V	b	setFlying
	m	(F)V	b	setFovModifier
	m	()Z	b	isInvulnerable
	m	(Z)V	c	setAllowFlying
	m	()Z	c	isFlying
	m	()Z	d	allowFlying
	m	(Z)V	d	setCreativeMode
	m	()Z	e	isCreativeMode
	m	()F	f	getFlySpeed
	m	()F	g	getFovModifier
c	nt	net/minecraft/network/packet/s2c/play/CombatEventS2CPacket
	f	Lnt$a;	a	type
	f	I	b	entityId
	f	I	c	attackerEntityId
	f	I	d	timeSinceLastAttack
	f	Llf;	e	deathMessage
	m	(Lajy;Lnt$a;Llf;)V	<init>	<init>
		p	3	deathMessage	deathMessage
	m	(Llw;)V	a	apply
c	nt$a	net/minecraft/network/packet/s2c/play/CombatEventS2CPacket$Type
c	nu	net/minecraft/network/packet/s2c/play/PlayerListS2CPacket
	f	Lnu$a;	a	action
	f	Ljava/util/List;	b	entries
	m	(Lnu$a;Ljava/lang/Iterable;)V	<init>	<init>
		p	1	action	action
	m	(Lnu$a;[Lxe;)V	<init>	<init>
		p	1	action	action
		p	2	players	players
	m	(Llw;)V	a	apply
	m	()Ljava/util/List;	b	getEntries
	m	()Lnu$a;	c	getAction
c	nu$a	net/minecraft/network/packet/s2c/play/PlayerListS2CPacket$Action
c	nu$b	net/minecraft/network/packet/s2c/play/PlayerListS2CPacket$Entry
	f	I	b	latency
	f	Lbjt;	c	gameMode
	f	Lcom/mojang/authlib/GameProfile;	d	profile
	f	Llf;	e	displayName
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	()I	b	getLatency
	m	()Lbjt;	c	getGameMode
	m	()Llf;	d	getDisplayName
c	nv	net/minecraft/network/packet/s2c/play/LookAtS2CPacket
	f	D	a	targetX
	f	D	b	targetY
	f	D	c	targetZ
	f	I	d	entityId
	f	Lcx$a;	e	selfAnchor
	f	Lcx$a;	f	targetAnchor
	f	Z	g	lookAtEntity
	m	(Lcx$a;DDD)V	<init>	<init>
		p	2	targetX	targetX
		p	4	targetY	targetY
		p	6	targetZ	targetZ
	m	(Lcx$a;Lakq;Lcx$a;)V	<init>	<init>
		p	1	selfAnchor	selfAnchor
		p	2	entity	entity
		p	3	targetAnchor	targetAnchor
	m	(Lbjw;)Lcvl;	a	getTargetPosition
		p	1	world	world
	m	(Llw;)V	a	apply
	m	()Lcx$a;	b	getSelfAnchor
c	nw	net/minecraft/network/packet/s2c/play/PlayerPositionLookS2CPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	f	Ljava/util/Set;	f	flags
	f	I	g	teleportId
	m	(DDDFFLjava/util/Set;I)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
		p	9	flags	flags
		p	10	teleportId	teleportId
	m	(Llw;)V	a	apply
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYaw
	m	()F	f	getPitch
	m	()I	g	getTeleportId
	m	()Ljava/util/Set;	h	getFlags
c	nw$a	net/minecraft/network/packet/s2c/play/PlayerPositionLookS2CPacket$Flag
	f	I	f	shift
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3	shift	shift
	m	(I)Ljava/util/Set;	a	getFlags
	m	()I	a	getMask
	m	(Ljava/util/Set;)I	a	getBitfield
	m	(I)Z	b	isSet
c	nx	net/minecraft/network/packet/s2c/play/UnlockRecipesS2CPacket
	f	Lnx$a;	a	action
	f	Ljava/util/List;	b	recipeIdsToChange
	f	Ljava/util/List;	c	recipeIdsToInit
	f	Z	d	guiOpen
	f	Z	e	filteringCraftable
	f	Z	f	furnaceGuiOpen
	f	Z	g	furnaceFilteringCraftable
	m	(Lnx$a;Ljava/util/Collection;Ljava/util/Collection;ZZZZ)V	<init>	<init>
		p	2	recipeIdsToChange	recipeIdsToChange
		p	3	recipeIdsToInit	recipeIdsToInit
		p	4	guiOpen	guiOpen
		p	5	filteringCraftable	filteringCraftable
		p	6	furnaceGuiOpen	furnaceGuiOpen
		p	7	furnaceFilteringCraftable	furnaceFilteringCraftable
	m	(Llw;)V	a	apply
	m	()Ljava/util/List;	b	getRecipeIdsToChange
	m	()Ljava/util/List;	c	getRecipeIdsToInit
	m	()Z	d	isGuiOpen
	m	()Z	e	isFilteringCraftable
	m	()Z	f	isFurnaceGuiOpen
	m	()Z	g	isFurnaceFilteringCraftable
	m	()Lnx$a;	h	getAction
c	nx$a	net/minecraft/network/packet/s2c/play/UnlockRecipesS2CPacket$Action
c	ny	net/minecraft/network/packet/s2c/play/EntitiesDestroyS2CPacket
	f	[I	a	entityIds
	m	([I)V	<init>	<init>
		p	1	entityIds	entityIds
	m	(Llw;)V	a	apply
	m	()[I	b	getEntityIds
c	nz	net/minecraft/network/packet/s2c/play/RemoveEntityStatusEffectS2CPacket
	f	I	a	entityId
	f	Laki;	b	effectType
	m	(ILaki;)V	<init>	<init>
		p	1	entityId	entityId
		p	2	effectType	effectType
	m	(Lbjw;)Lakq;	a	getEntity
	m	(Llw;)V	a	apply
	m	()Laki;	b	getEffectType
c	o	net/minecraft/util/FileNameUtil
	f	Ljava/util/regex/Pattern;	a	FILE_NAME_WITH_COUNT
	f	Ljava/util/regex/Pattern;	b	RESERVED_WINDOWS_NAMES
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getNextUniqueName
		p	0	path	path
		p	1	name	name
		p	2	extension	extension
	m	(Ljava/nio/file/Path;)Z	a	isNormal
		p	0	path	path
	m	(Ljava/nio/file/Path;)Z	b	isAllowedName
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	getResourcePath
		p	0	path	path
		p	1	resourceName	resourceName
		p	2	extension	extension
c	oa	net/minecraft/network/packet/s2c/play/ResourcePackSendS2CPacket
	f	Ljava/lang/String;	a	url
	f	Ljava/lang/String;	b	hash
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	url	url
		p	2	hash	hash
	m	(Llw;)V	a	apply
	m	()Ljava/lang/String;	b	getURL
	m	()Ljava/lang/String;	c	getSHA1
c	ob	net/minecraft/network/packet/s2c/play/PlayerRespawnS2CPacket
	f	Lcbi;	a	dimension
	f	J	b	sha256Seed
	f	Lbjt;	c	gameMode
	f	Lbkd;	d	generatorType
	m	(Lcbi;JLbkd;Lbjt;)V	<init>	<init>
		p	1	dimension	dimension
		p	2	sha256Seed	sha256Seed
		p	4	generatorType	generatorType
		p	5	gameMode	gameMode
	m	(Llw;)V	a	apply
	m	()Lcbi;	b	getDimension
	m	()J	c	getSha256Seed
	m	()Lbjt;	d	getGameMode
	m	()Lbkd;	e	getGeneratorType
c	oc	net/minecraft/network/packet/s2c/play/EntitySetHeadYawS2CPacket
	f	I	a	entity
	f	B	b	headYaw
	m	(Lakq;B)V	<init>	<init>
		p	1	entity	entity
		p	2	headYaw	headYaw
	m	(Lbjw;)Lakq;	a	getEntity
	m	(Llw;)V	a	apply
	m	()B	b	getHeadYaw
c	od	net/minecraft/network/packet/s2c/play/SelectAdvancementTabS2CPacket
	f	Lsm;	a	tabId
	m	(Lsm;)V	<init>	<init>
		p	1	tabId	tabId
	m	(Llw;)V	a	apply
	m	()Lsm;	b	getTabId
c	oe	net/minecraft/network/packet/s2c/play/WorldBorderS2CPacket
	f	Loe$a;	a	type
	f	I	b	portalTeleportPosLimit
	f	D	c	centerX
	f	D	d	centerZ
	f	D	e	size
	f	D	f	oldSize
	f	J	g	interpolationDuration
	f	I	h	warningTime
	f	I	i	warningBlocks
	m	(Lbzw;Loe$a;)V	<init>	<init>
		p	1	border	border
	m	(Lbzw;)V	a	apply
	m	(Llw;)V	a	apply
c	oe$a	net/minecraft/network/packet/s2c/play/WorldBorderS2CPacket$Type
c	of	net/minecraft/network/packet/s2c/play/SetCameraEntityS2CPacket
	f	I	a	id
	m	(Lbjw;)Lakq;	a	getEntity
	m	(Llw;)V	a	apply
c	og	net/minecraft/network/packet/s2c/play/HeldItemChangeS2CPacket
	f	I	a	slot
	m	(I)V	<init>	<init>
		p	1	slot	slot
	m	(Llw;)V	a	apply
	m	()I	b	getSlot
c	oh	net/minecraft/network/packet/s2c/play/ChunkRenderDistanceCenterS2CPacket
	f	I	a	chunkX
	f	I	b	chunkZ
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
	m	(Llw;)V	a	apply
	m	()I	b	getChunkX
	m	()I	c	getChunkZ
c	oi	net/minecraft/network/packet/s2c/play/ChunkLoadDistanceS2CPacket
	f	I	a	distance
	m	(I)V	<init>	<init>
		p	1	distance	distance
	m	(Llw;)V	a	apply
	m	()I	b	getDistance
c	oj	net/minecraft/network/packet/s2c/play/ScoreboardDisplayS2CPacket
	f	I	a	slot
	f	Ljava/lang/String;	b	name
	m	(ILcwi;)V	<init>	<init>
		p	1	slot	slot
	m	(Llw;)V	a	apply
	m	()I	b	getSlot
	m	()Ljava/lang/String;	c	getName
c	ok	net/minecraft/network/packet/s2c/play/EntityTrackerUpdateS2CPacket
	f	I	a	id
	f	Ljava/util/List;	b	trackedValues
	m	(ILse;Z)V	<init>	<init>
		p	1	id	id
		p	2	tracker	tracker
	m	(Llw;)V	a	apply
	m	()Ljava/util/List;	b	getTrackedValues
	m	()I	c	id
c	ol	net/minecraft/network/packet/s2c/play/EntityAttachS2CPacket
	f	I	a	attachedId
	f	I	b	holdingId
	m	(Lakq;Lakq;)V	<init>	<init>
		p	1	attachedEntity	attachedEntity
		p	2	holdingEntity	holdingEntity
	m	(Llw;)V	a	apply
	m	()I	b	getAttachedEntityId
	m	()I	c	getHoldingEntityId
c	om	net/minecraft/network/packet/s2c/play/EntityVelocityUpdateS2CPacket
	f	I	a	id
	f	I	b	velocityX
	f	I	c	velocityY
	f	I	d	velocityZ
	m	(ILcvl;)V	<init>	<init>
		p	1	id	id
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()I	c	getVelocityX
	m	()I	d	getVelocityY
	m	()I	e	getVelocityZ
c	on	net/minecraft/network/packet/s2c/play/EntityEquipmentUpdateS2CPacket
	f	I	a	id
	f	Lakv;	b	slot
	f	Lben;	c	stack
	m	(ILakv;Lben;)V	<init>	<init>
		p	1	id	id
		p	2	slot	slot
		p	3	stack	stack
	m	(Llw;)V	a	apply
	m	()Lben;	b	getStack
	m	()I	c	getId
	m	()Lakv;	d	getSlot
c	oo	net/minecraft/network/packet/s2c/play/ExperienceBarUpdateS2CPacket
	f	F	a	barProgress
	f	I	b	experienceLevel
	f	I	c	experience
	m	(FII)V	<init>	<init>
		p	1	barProgress	barProgress
		p	2	experienceLevel	experienceLevel
		p	3	experience	experience
	m	(Llw;)V	a	apply
	m	()F	b	getBarProgress
	m	()I	c	getExperienceLevel
	m	()I	d	getExperience
c	op	net/minecraft/network/packet/s2c/play/HealthUpdateS2CPacket
	f	F	a	health
	f	I	b	food
	f	F	c	saturation
	m	(FIF)V	<init>	<init>
		p	1	health	health
		p	2	food	food
		p	3	saturation	saturation
	m	(Llw;)V	a	apply
	m	()F	b	getHealth
	m	()I	c	getFood
	m	()F	d	getSaturation
c	oq	net/minecraft/network/packet/s2c/play/ScoreboardObjectiveUpdateS2CPacket
	f	Ljava/lang/String;	a	name
	f	Llf;	b	displayName
	f	Lcwo$a;	c	type
	f	I	d	mode
	m	(Lcwi;I)V	<init>	<init>
		p	2	mode	mode
	m	(Llw;)V	a	apply
	m	()Ljava/lang/String;	b	getName
	m	()Llf;	c	getDisplayName
	m	()I	d	getMode
	m	()Lcwo$a;	e	getType
c	or	net/minecraft/network/packet/s2c/play/EntityPassengersSetS2CPacket
	f	I	a	id
	f	[I	b	passengerIds
	m	(Llw;)V	a	apply
	m	()[I	b	getPassengerIds
	m	()I	c	getId
c	os	net/minecraft/network/packet/s2c/play/TeamS2CPacket
	f	Ljava/lang/String;	a	teamName
	f	Llf;	b	displayName
	f	Llf;	c	prefix
	f	Llf;	d	suffix
	f	Ljava/lang/String;	e	nameTagVisibilityRule
	f	Ljava/lang/String;	f	collisionRule
	f	Lg;	g	color
	f	Ljava/util/Collection;	h	playerList
	f	I	i	mode
	f	I	j	flags
	m	(Lcwj;Ljava/util/Collection;I)V	<init>	<init>
		p	1	team	team
		p	2	playerList	playerList
	m	(Lcwj;I)V	<init>	<init>
		p	1	team	team
		p	2	mode	mode
	m	(Llw;)V	a	apply
	m	()Ljava/lang/String;	b	getTeamName
	m	()Llf;	c	getDisplayName
	m	()Ljava/util/Collection;	d	getPlayerList
	m	()I	e	getMode
	m	()I	f	getFlags
	m	()Lg;	g	getPlayerPrefix
	m	()Ljava/lang/String;	h	getNameTagVisibilityRule
	m	()Ljava/lang/String;	i	getCollisionRule
	m	()Llf;	j	getPrefix
	m	()Llf;	k	getSuffix
c	ot	net/minecraft/network/packet/s2c/play/ScoreboardPlayerUpdateS2CPacket
	f	Ljava/lang/String;	a	playerName
	f	Ljava/lang/String;	b	objectiveName
	f	I	c	score
	f	Lta$a;	d	mode
	m	(Lta$a;Ljava/lang/String;Ljava/lang/String;I)V	<init>	<init>
		p	2	objectiveName	objectiveName
		p	3	playerName	playerName
		p	4	score	score
	m	(Llw;)V	a	apply
	m	()Ljava/lang/String;	b	getPlayerName
	m	()Ljava/lang/String;	c	getObjectiveName
	m	()I	d	getScore
	m	()Lta$a;	e	getUpdateMode
c	ou	net/minecraft/network/packet/s2c/play/PlayerSpawnPositionS2CPacket
	f	Lfk;	a	pos
	m	(Lfk;)V	<init>	<init>
		p	1	pos	pos
	m	(Llw;)V	a	apply
	m	()Lfk;	b	getPos
c	ov	net/minecraft/network/packet/s2c/play/WorldTimeUpdateS2CPacket
	f	J	a	time
	f	J	b	timeOfDay
	m	(JJZ)V	<init>	<init>
		p	1	time	time
		p	3	timeOfDay	timeOfDay
	m	(Llw;)V	a	apply
	m	()J	b	getTime
	m	()J	c	getTimeOfDay
c	ow	net/minecraft/network/packet/s2c/play/TitleS2CPacket
	f	Low$a;	a	action
	f	Llf;	b	text
	f	I	c	fadeInTicks
	f	I	d	stayTicks
	f	I	e	fadeOutTicks
	m	(III)V	<init>	<init>
		p	1	fadeInTicks	fadeInTicks
		p	2	stayTicks	stayTicks
		p	3	fadeOutTicks	fadeOutTicks
	m	(Low$a;Llf;III)V	<init>	<init>
		p	1	action	action
		p	2	text	text
		p	3	fadeInTicks	fadeInTicks
		p	4	stayTicks	stayTicks
		p	5	fadeOutTicks	fadeOutTicks
	m	(Low$a;Llf;)V	<init>	<init>
		p	1	action	action
	m	(Llw;)V	a	apply
	m	()Low$a;	b	getAction
	m	()Llf;	c	getText
	m	()I	d	getFadeInTicks
	m	()I	e	getStayTicks
	m	()I	f	getFadeOutTicks
c	ow$a	net/minecraft/network/packet/s2c/play/TitleS2CPacket$Action
c	ox	net/minecraft/network/packet/s2c/play/PlaySoundFromEntityS2CPacket
	f	Laah;	a	sound
	f	Laaj;	b	category
	f	I	c	entityId
	f	F	d	volume
	f	F	e	pitch
	m	(Laah;Laaj;Lakq;FF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	entity	entity
		p	4	volume	volume
		p	5	pitch	pitch
	m	(Llw;)V	a	apply
	m	()Laah;	b	getSound
	m	()Laaj;	c	getCategory
	m	()I	d	getEntityId
	m	()F	e	getVolume
	m	()F	f	getPitch
c	oy	net/minecraft/network/packet/s2c/play/PlaySoundS2CPacket
	f	Laah;	a	sound
	f	Laaj;	b	category
	f	I	c	fixedX
	f	I	d	fixedY
	f	I	e	fixedZ
	f	F	f	volume
	f	F	g	pitch
	m	(Laah;Laaj;DDDFF)V	<init>	<init>
		p	1	sound	sound
		p	2	category	category
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	volume	volume
		p	10	pitch	pitch
	m	(Llw;)V	a	apply
	m	()Laah;	b	getSound
	m	()Laaj;	c	getCategory
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
c	oz	net/minecraft/network/packet/s2c/play/StopSoundS2CPacket
	f	Lsm;	a	soundId
	f	Laaj;	b	category
	m	(Lsm;Laaj;)V	<init>	<init>
		p	1	soundId	soundId
		p	2	category	category
	m	(Llw;)V	a	apply
	m	()Lsm;	b	getSoundId
	m	()Laaj;	c	getCategory
c	pa	net/minecraft/network/packet/s2c/play/PlayerListHeaderS2CPacket
	f	Llf;	a	header
	f	Llf;	b	footer
	m	(Llw;)V	a	apply
	m	()Llf;	b	getHeader
	m	()Llf;	c	getFooter
c	pb	net/minecraft/network/packet/s2c/play/TagQueryResponseS2CPacket
	f	I	a	transactionId
	f	Ljt;	b	tag
	m	(ILjt;)V	<init>	<init>
		p	1	transactionId	transactionId
		p	2	tag	tag
	m	(Llw;)V	a	apply
	m	()I	b	getTransactionId
	m	()Ljt;	c	getTag
c	pc	net/minecraft/network/packet/s2c/play/ItemPickupAnimationS2CPacket
	f	I	a	entityId
	f	I	b	collectorEntityId
	f	I	c	stackAmount
	m	(III)V	<init>	<init>
		p	1	entityId	entityId
		p	2	collectorId	collectorId
		p	3	stackAmount	stackAmount
	m	(Llw;)V	a	apply
	m	()I	b	getEntityId
	m	()I	c	getCollectorEntityId
	m	()I	d	getStackAmount
c	pd	net/minecraft/network/packet/s2c/play/EntityPositionS2CPacket
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	B	e	yaw
	f	B	f	pitch
	f	Z	g	onGround
	m	(Llw;)V	a	apply
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()B	f	getYaw
	m	()B	g	getPitch
	m	()Z	h	isOnGround
c	pe	net/minecraft/network/packet/s2c/play/AdvancementUpdateS2CPacket
	f	Z	a	clearCurrent
	f	Ljava/util/Map;	b	toEarn
	f	Ljava/util/Set;	c	toRemove
	f	Ljava/util/Map;	d	toSetProgress
	m	(ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V	<init>	<init>
		p	1	clearCurrent	clearCurrent
		p	2	toEarn	toEarn
		p	3	toRemove	toRemove
		p	4	toSetProgress	toSetProgress
	m	(Llw;)V	a	apply
	m	()Ljava/util/Map;	b	getAdvancementsToEarn
	m	()Ljava/util/Set;	c	getAdvancementIdsToRemove
	m	()Ljava/util/Map;	d	getAdvancementsToProgress
	m	()Z	e	shouldClearCurrent
c	pf	net/minecraft/network/packet/s2c/play/EntityAttributesS2CPacket
	f	I	a	entityId
	f	Ljava/util/List;	b	entries
	m	(ILjava/util/Collection;)V	<init>	<init>
		p	1	entityId	entityId
		p	2	attributes	attributes
	m	(Llw;)V	a	apply
	m	()I	b	getEntityId
	m	()Ljava/util/List;	c	getEntries
c	pf$a	net/minecraft/network/packet/s2c/play/EntityAttributesS2CPacket$Entry
	f	Ljava/lang/String;	b	id
	f	D	c	baseValue
	f	Ljava/util/Collection;	d	modifiers
	m	(Lpf;Ljava/lang/String;DLjava/util/Collection;)V	<init>	<init>
		p	1	id	id
		p	2	baseValue	baseValue
	m	()Ljava/lang/String;	a	getId
	m	()D	b	getBaseValue
	m	()Ljava/util/Collection;	c	getModifiers
c	pg	net/minecraft/network/packet/s2c/play/EntityStatusEffectS2CPacket
	f	I	a	entityId
	f	B	b	effectId
	f	B	c	amplifier
	f	I	d	duration
	f	B	e	flags
	m	(ILakk;)V	<init>	<init>
		p	1	entityId	entityId
		p	2	effect	effect
	m	(Llw;)V	a	apply
	m	()Z	b	isPermanent
	m	()I	c	getEntityId
	m	()B	d	getEffectId
	m	()B	e	getAmplifier
	m	()I	f	getDuration
	m	()Z	g	shouldShowParticles
	m	()Z	h	isAmbient
	m	()Z	i	shouldShowIcon
c	ph	net/minecraft/network/packet/s2c/play/SynchronizeRecipesS2CPacket
	f	Ljava/util/List;	a	recipes
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1	recipes	recipes
	m	(Lbgw;Lkv;)V	a	writeRecipe
		p	0	recipe	recipe
		p	1	buf	buf
	m	(Llw;)V	a	apply
	m	()Ljava/util/List;	b	getRecipes
	m	(Lkv;)Lbgw;	c	readRecipe
		p	0	buf	buf
c	pi	net/minecraft/network/packet/s2c/play/SynchronizeTagsS2CPacket
	f	Labb;	a	tagManager
	m	(Labb;)V	<init>	<init>
		p	1	tagManager	tagManager
	m	(Llw;)V	a	apply
	m	()Labb;	b	getTagManager
c	pj	net/minecraft/client/render/debug/NameGenerator
	f	[Ljava/lang/String;	a	PREFIX
	f	[Ljava/lang/String;	b	SUFFIX
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	name
		p	0	uuid	uuid
	m	(Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String;	a	getRandom
		p	0	random	random
		p	1	options	options
	m	(Ljava/util/UUID;)Ljava/util/Random;	b	randomFromUuid
		p	0	uuid	uuid
c	pk	net/minecraft/server/network/DebugInfoSender
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	(Latd;)V	a	sendBeeDebugData
		p	0	bee	bee
	m	(Lbwi;)V	a	sendBeehiveDebugData
		p	0	beehive	beehive
	m	(Lbjw;Lala;Lcqq;F)V	a	sendPathfindingData
		p	0	world	world
		p	1	mob	mob
		p	2	path	path
		p	3	nodeReachProximity	nodeReachProximity
	m	(Lxd;Lfk;Ljava/lang/String;II)V	a	addGameTestMarker
		p	0	world	world
		p	1	pos	pos
		p	2	message	message
		p	3	color	color
		p	4	duration	duration
	m	(Lxd;)V	a	clearGameTestMarkers
		p	0	world	world
	m	(Lxd;Lfk;)V	a	sendPoiAddition
		p	0	world	world
		p	1	pos	pos
	m	(Lakz;)V	a	sendVillagerAiDebugData
		p	0	living	living
	m	(Lbjw;Lala;Laph;)V	a	sendGoalSelector
		p	0	world	world
		p	1	mob	mob
		p	2	goalSelector	goalSelector
	m	(Lbjw;Lfk;)V	a	sendNeighborUpdate
		p	0	world	world
		p	1	pos	pos
	m	(Lxd;Lkv;Lsm;)V	a	sendToAll
		p	0	world	world
		p	1	buf	buf
		p	2	channel	channel
	m	(Lxd;Ljava/util/Collection;)V	a	sendRaids
		p	0	server	server
		p	1	raids	raids
	m	(Lxd;Lbjh;)V	a	sendChunkWatchingChange
		p	0	world	world
		p	1	pos	pos
	m	(Lbjx;Lclv;)V	a	sendStructureStart
		p	0	world	world
		p	1	structureStart	structureStart
	m	(Lxd;Lfk;)V	b	sendPoiRemoval
		p	0	world	world
		p	1	pos	pos
	m	(Lxd;Lfk;)V	c	sendPointOfInterest
		p	0	world	world
		p	1	pos	pos
c	pl	net/minecraft/network/listener/ServerPlayPacketListener
	m	(Lqo;)V	a	onResourcePackStatus
		p	1	packet	packet
	m	(Lqc;)V	a	onUpdateDifficultyLock
		p	1	packet	packet
	m	(Lqu;)V	a	onUpdateCommandBlockMinecart
		p	1	packet	packet
	m	(Lqg;)V	a	onPickFromInventory
		p	1	packet	packet
	m	(Lqe;)V	a	onVehicleMove
		p	1	packet	packet
	m	(Lpt;)V	a	onConfirmTransaction
		p	1	packet	packet
	m	(Lpz;)V	a	onQueryEntityNbt
		p	1	packet	packet
	m	(Lqr;)V	a	onUpdateBeacon
		p	1	packet	packet
	m	(Lpp;)V	a	onChatMessage
		p	1	packet	packet
	m	(Lqy;)V	a	onSignUpdate
		p	1	packet	packet
	m	(Lpv;)V	a	onClickWindow
		p	1	packet	packet
	m	(Lqw;)V	a	onJigsawUpdate
		p	1	packet	packet
	m	(Lra;)V	a	onSpectatorTeleport
		p	1	packet	packet
	m	(Lqa;)V	a	onPlayerInteractEntity
		p	1	rpacket	rpacket
	m	(Lqb;)V	a	onKeepAlive
		p	1	packet	packet
	m	(Lqx;)V	a	onStructureBlockUpdate
		p	1	packet	packet
	m	(Lqi;)V	a	onPlayerAbilities
		p	1	packet	packet
	m	(Lrb;)V	a	onPlayerInteractBlock
		p	1	packet	packet
	m	(Lpm;)V	a	onTeleportConfirm
		p	1	packet	packet
	m	(Lqj;)V	a	onPlayerAction
		p	1	packet	packet
	m	(Lpu;)V	a	onButtonClick
		p	1	packet	packet
	m	(Lqz;)V	a	onHandSwing
		p	1	packet	packet
	m	(Lqt;)V	a	onUpdateCommandBlock
		p	1	packet	packet
	m	(Lqf;)V	a	onBoatPaddleState
		p	1	packet	packet
	m	(Lqd;)V	a	onPlayerMove
		p	1	packet	packet
	m	(Lql;)V	a	onPlayerInput
		p	1	packet	packet
	m	(Lqn;)V	a	onRenameItem
		p	1	packet	packet
	m	(Lqh;)V	a	onCraftRequest
		p	1	packet	packet
	m	(Lpq;)V	a	onClientStatus
		p	1	packet	packet
	m	(Lqp;)V	a	onAdvancementTab
		p	1	packet	packet
	m	(Lrc;)V	a	onPlayerInteractItem
		p	1	packet	packet
	m	(Lqk;)V	a	onClientCommand
		p	1	packet	packet
	m	(Lpx;)V	a	onCustomPayload
		p	1	packet	packet
	m	(Lpr;)V	a	onClientSettings
		p	1	packet	packet
	m	(Lqv;)V	a	onCreativeInventoryAction
		p	1	packet	packet
	m	(Lps;)V	a	onRequestCommandCompletions
		p	1	packet	packet
	m	(Lqs;)V	a	onUpdateSelectedSlot
		p	1	packet	packet
	m	(Lpn;)V	a	onQueryBlockNbt
		p	1	packet	packet
	m	(Lpw;)V	a	onGuiClose
		p	1	packet	packet
	m	(Lqq;)V	a	onVillagerTradeSelect
		p	1	packet	packet
	m	(Lpy;)V	a	onBookUpdate
		p	1	packet	packet
	m	(Lpo;)V	a	onUpdateDifficulty
		p	1	packet	packet
	m	(Lqm;)V	a	onRecipeBookData
		p	1	packet	packet
c	pm	net/minecraft/network/packet/c2s/play/TeleportConfirmC2SPacket
	f	I	a	teleportId
	m	(I)V	<init>	<init>
		p	1	teleportId	teleportId
	m	(Lpl;)V	a	apply
	m	()I	b	getTeleportId
c	pn	net/minecraft/network/packet/c2s/play/QueryBlockNbtC2SPacket
	f	I	a	transactionId
	f	Lfk;	b	pos
	m	(Lpl;)V	a	apply
	m	()I	b	getTransactionId
	m	()Lfk;	c	getPos
c	po	net/minecraft/network/packet/c2s/play/UpdateDifficultyC2SPacket
	f	Laji;	a	difficulty
	m	(Lpl;)V	a	apply
	m	()Laji;	b	getDifficulty
c	pp	net/minecraft/network/packet/c2s/play/ChatMessageC2SPacket
	f	Ljava/lang/String;	a	chatMessage
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	chatMessage	chatMessage
	m	(Lpl;)V	a	apply
	m	()Ljava/lang/String;	b	getChatMessage
c	pq	net/minecraft/network/packet/c2s/play/ClientStatusC2SPacket
	f	Lpq$a;	a	mode
	m	(Lpq$a;)V	<init>	<init>
		p	1	mode	mode
	m	(Lpl;)V	a	apply
	m	()Lpq$a;	b	getMode
c	pq$a	net/minecraft/network/packet/c2s/play/ClientStatusC2SPacket$Mode
c	pr	net/minecraft/network/packet/c2s/play/ClientSettingsC2SPacket
	f	Ljava/lang/String;	a	language
	f	I	b	viewDistance
	f	Layh;	c	chatVisibility
	f	Z	d	chatColors
	f	I	e	playerModelBitMask
	f	Laky;	f	mainArm
	m	(Ljava/lang/String;ILayh;ZILaky;)V	<init>	<init>
		p	1	language	language
		p	2	viewDistance	viewDistance
		p	3	chatVisibility	chatVisibility
		p	4	chatColors	chatColors
		p	5	modelBitMask	modelBitMask
		p	6	mainArm	mainArm
	m	(Lpl;)V	a	apply
	m	()Ljava/lang/String;	b	getLanguage
	m	()Layh;	d	getChatVisibility
	m	()Z	e	hasChatColors
	m	()I	f	getPlayerModelBitMask
	m	()Laky;	g	getMainArm
c	ps	net/minecraft/network/packet/c2s/play/RequestCommandCompletionsC2SPacket
	f	I	a	completionId
	f	Ljava/lang/String;	b	partialCommand
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1	completionId	completionId
		p	2	partialCommand	partialCommand
	m	(Lpl;)V	a	apply
	m	()I	b	getCompletionId
	m	()Ljava/lang/String;	c	getPartialCommand
c	pt	net/minecraft/network/packet/c2s/play/ConfirmGuiActionC2SPacket
	f	I	a	windowId
	f	S	b	actionId
	f	Z	c	accepted
	m	(ISZ)V	<init>	<init>
		p	1	windowId	windowId
		p	2	actionId	actionId
		p	3	accepted	accepted
	m	(Lpl;)V	a	apply
	m	()I	b	getWindowId
	m	()S	c	getSyncId
c	pu	net/minecraft/network/packet/c2s/play/ButtonClickC2SPacket
	f	I	a	syncId
	f	I	b	buttonId
	m	(II)V	<init>	<init>
		p	1	syncId	syncId
		p	2	buttonId	buttonId
	m	(Lpl;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getButtonId
c	pv	net/minecraft/network/packet/c2s/play/ClickWindowC2SPacket
	f	I	a	syncId
	f	I	b	slot
	f	I	c	button
	f	S	d	transactionId
	f	Lben;	e	stack
	f	Lbav;	f	actionType
	m	(IIILbav;Lben;S)V	<init>	<init>
		p	5	stack	stack
	m	(Lpl;)V	a	apply
	m	()I	b	getSyncId
	m	()I	c	getSlot
	m	()I	d	getButton
	m	()S	e	getTransactionId
	m	()Lben;	f	getStack
	m	()Lbav;	g	getActionType
c	pw	net/minecraft/network/packet/c2s/play/GuiCloseC2SPacket
	f	I	a	id
	m	(Lpl;)V	a	apply
c	px	net/minecraft/network/packet/c2s/play/CustomPayloadC2SPacket
	f	Lsm;	a	BRAND
	f	Lsm;	b	channel
	f	Lkv;	c	data
	m	(Lsm;Lkv;)V	<init>	<init>
		p	1	channel	channel
	m	(Lpl;)V	a	apply
c	py	net/minecraft/network/packet/c2s/play/BookUpdateC2SPacket
	f	Lben;	a	book
	f	Z	b	signed
	f	Lajk;	c	hand
	m	(Lben;ZLajk;)V	<init>	<init>
		p	1	book	book
		p	2	signed	signed
		p	3	hand	hand
	m	(Lpl;)V	a	apply
	m	()Lben;	b	getBook
	m	()Z	c	wasSigned
	m	()Lajk;	d	getHand
c	pz	net/minecraft/network/packet/c2s/play/QueryEntityNbtC2SPacket
	f	I	a	transactionId
	f	I	b	entityId
	m	(Lpl;)V	a	apply
	m	()I	b	getTransactionId
	m	()I	c	getEntityId
c	q	net/minecraft/util/crash/CrashException
	f	Lh;	a	report
	m	()Lh;	a	getReport
c	qa	net/minecraft/network/packet/c2s/play/PlayerInteractEntityC2SPacket
	f	I	a	entityId
	f	Lqa$a;	b	type
	f	Lcvl;	c	hitPos
	f	Lajk;	d	hand
	m	(Lpl;)V	a	apply
	m	(Lbjw;)Lakq;	a	getEntity
	m	()Lqa$a;	b	getType
	m	()Lajk;	c	getHand
	m	()Lcvl;	d	getHitPosition
c	qa$a	net/minecraft/network/packet/c2s/play/PlayerInteractEntityC2SPacket$InteractionType
c	qb	net/minecraft/network/packet/c2s/play/KeepAliveC2SPacket
	f	J	a	id
	m	(J)V	<init>	<init>
		p	1	id	id
	m	(Lpl;)V	a	apply
	m	()J	b	getId
c	qc	net/minecraft/network/packet/c2s/play/UpdateDifficultyLockC2SPacket
	f	Z	a	difficultyLocked
	m	(Lpl;)V	a	apply
	m	()Z	b	isDifficultyLocked
c	qd	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	f	Z	f	onGround
	f	Z	g	changePosition
	f	Z	h	changeLook
	m	(Z)V	<init>	<init>
		p	1	onGround	onGround
	m	(F)F	a	getYaw
		p	1	currentYaw	currentYaw
	m	(D)D	a	getX
		p	1	currentX	currentX
	m	(Lpl;)V	a	apply
	m	(D)D	b	getY
		p	1	currentY	currentY
	m	()Z	b	isOnGround
	m	(F)F	b	getPitch
		p	1	currentPitch	currentPitch
	m	(D)D	c	getZ
		p	1	currentZ	currentZ
c	qd$a	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket$PositionOnly
	m	(DDDZ)V	<init>	<init>
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	onGround	onGround
c	qd$b	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket$Both
c	qd$c	net/minecraft/network/packet/c2s/play/PlayerMoveC2SPacket$LookOnly
c	qe	net/minecraft/network/packet/c2s/play/VehicleMoveC2SPacket
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yaw
	f	F	e	pitch
	m	(Lakq;)V	<init>	<init>
		p	1	entity	entity
	m	(Lpl;)V	a	apply
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYaw
	m	()F	f	getPitch
c	qf	net/minecraft/network/packet/c2s/play/BoatPaddleStateC2SPacket
	f	Z	a	leftPaddling
	f	Z	b	rightPaddling
	m	(ZZ)V	<init>	<init>
		p	1	leftPaddling	leftPaddling
		p	2	rightPaddling	rightPaddling
	m	(Lpl;)V	a	apply
	m	()Z	b	isLeftPaddling
	m	()Z	c	isRightPaddling
c	qg	net/minecraft/network/packet/c2s/play/PickFromInventoryC2SPacket
	f	I	a	slot
	m	(I)V	<init>	<init>
		p	1	slot	slot
	m	(Lpl;)V	a	apply
	m	()I	b	getSlot
c	qh	net/minecraft/network/packet/c2s/play/CraftRequestC2SPacket
	f	I	a	syncId
	f	Lsm;	b	recipe
	f	Z	c	craftAll
	m	(ILbgw;Z)V	<init>	<init>
		p	1	syncId	syncId
		p	2	recipe	recipe
	m	(Lpl;)V	a	apply
	m	()I	b	getSyncId
	m	()Lsm;	c	getRecipe
	m	()Z	d	shouldCraftAll
c	qi	net/minecraft/network/packet/c2s/play/UpdatePlayerAbilitiesC2SPacket
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	allowFlying
	f	Z	d	creativeMode
	f	F	e	flySpeed
	f	F	f	walkSpeed
	m	(Layg;)V	<init>	<init>
		p	1	abilities	abilities
	m	(Lpl;)V	a	apply
	m	(Z)V	a	setInvulnerable
	m	(F)V	a	setFlySpeed
	m	(F)V	b	setWalkSpeed
	m	(Z)V	b	setFlying
	m	()Z	b	isInvulnerable
	m	(Z)V	c	setAllowFlying
	m	()Z	c	isFlying
	m	()Z	d	isFlyingAllowed
	m	(Z)V	d	setCreativeMode
	m	()Z	e	isCreativeMode
c	qj	net/minecraft/network/packet/c2s/play/PlayerActionC2SPacket
	f	Lfk;	a	pos
	f	Lfp;	b	direction
	f	Lqj$a;	c	action
	m	(Lpl;)V	a	apply
	m	()Lfk;	b	getPos
	m	()Lfp;	c	getDirection
	m	()Lqj$a;	d	getAction
c	qj$a	net/minecraft/network/packet/c2s/play/PlayerActionC2SPacket$Action
c	qk	net/minecraft/network/packet/c2s/play/ClientCommandC2SPacket
	f	I	a	entityId
	f	Lqk$a;	b	mode
	f	I	c	mountJumpHeight
	m	(Lpl;)V	a	apply
	m	()Lqk$a;	c	getMode
	m	()I	d	getMountJumpHeight
c	qk$a	net/minecraft/network/packet/c2s/play/ClientCommandC2SPacket$Mode
c	ql	net/minecraft/network/packet/c2s/play/PlayerInputC2SPacket
	f	F	a	sideways
	f	F	b	forward
	f	Z	c	jumping
	f	Z	d	sneaking
	m	(FFZZ)V	<init>	<init>
		p	1	sideways	sideways
		p	2	forward	forward
		p	3	jumping	jumping
		p	4	sneaking	sneaking
	m	(Lpl;)V	a	apply
	m	()F	b	getSideways
	m	()F	c	getForward
	m	()Z	d	isJumping
	m	()Z	e	isSneaking
c	qm	net/minecraft/network/packet/c2s/play/RecipeBookDataC2SPacket
	f	Lqm$a;	a	mode
	f	Lsm;	b	recipeId
	f	Z	c	guiOpen
	f	Z	d	filteringCraftable
	f	Z	e	furnaceGuiOpen
	f	Z	f	furnaceFilteringCraftable
	f	Z	g	blastFurnaceGuiOpen
	f	Z	h	blastFurnaceFilteringCraftable
	f	Z	i	smokerGuiOpen
	f	Z	j	smokerGuiFilteringCraftable
	m	(Lbgw;)V	<init>	<init>
		p	1	recipe	recipe
	m	(Lpl;)V	a	apply
	m	()Lqm$a;	b	getMode
	m	()Lsm;	c	getRecipeId
	m	()Z	d	isGuiOpen
	m	()Z	e	isFilteringCraftable
	m	()Z	f	isFurnaceGuiOpen
	m	()Z	g	isFurnaceFilteringCraftable
	m	()Z	h	isBlastFurnaceGuiOpen
	m	()Z	i	isBlastFurnaceFilteringCraftable
	m	()Z	j	isSmokerGuiOpen
	m	()Z	k	isSmokerGuiFilteringCraftable
c	qm$a	net/minecraft/network/packet/c2s/play/RecipeBookDataC2SPacket$Mode
c	qn	net/minecraft/network/packet/c2s/play/RenameItemC2SPacket
	f	Ljava/lang/String;	a	itemName
	m	(Lpl;)V	a	apply
	m	()Ljava/lang/String;	b	getItemName
c	qo	net/minecraft/network/packet/c2s/play/ResourcePackStatusC2SPacket
	f	Lqo$a;	a	status
	m	(Lpl;)V	a	apply
c	qo$a	net/minecraft/network/packet/c2s/play/ResourcePackStatusC2SPacket$Status
c	qp	net/minecraft/network/packet/c2s/play/AdvancementTabC2SPacket
	f	Lqp$a;	a	action
	f	Lsm;	b	tabToOpen
	m	(Lqp$a;Lsm;)V	<init>	<init>
		p	1	action	action
		p	2	tab	tab
	m	(Lpl;)V	a	apply
	m	(Lu;)Lqp;	a	open
	m	()Lqp;	b	close
	m	()Lqp$a;	c	getAction
	m	()Lsm;	d	getTabToOpen
c	qp$a	net/minecraft/network/packet/c2s/play/AdvancementTabC2SPacket$Action
c	qq	net/minecraft/network/packet/c2s/play/SelectVillagerTradeC2SPacket
	f	I	a	tradeId
	m	(Lpl;)V	a	apply
c	qr	net/minecraft/network/packet/c2s/play/UpdateBeaconC2SPacket
	f	I	a	primaryEffectId
	f	I	b	secondaryEffectId
	m	(Lpl;)V	a	apply
	m	()I	b	getPrimaryEffectId
	m	()I	c	getSecondaryEffectId
c	qs	net/minecraft/network/packet/c2s/play/UpdateSelectedSlotC2SPacket
	f	I	a	selectedSlot
	m	(Lpl;)V	a	apply
	m	()I	b	getSelectedSlot
c	qt	net/minecraft/network/packet/c2s/play/UpdateCommandBlockC2SPacket
	f	Lfk;	a	pos
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
	f	Z	d	conditional
	f	Z	e	alwaysActive
	f	Lbwq$a;	f	type
	m	(Lpl;)V	a	apply
	m	()Lfk;	b	getBlockPos
	m	()Ljava/lang/String;	c	getCommand
	m	()Z	d	shouldTrackOutput
	m	()Z	e	isConditional
	m	()Z	f	isAlwaysActive
	m	()Lbwq$a;	g	getType
c	qu	net/minecraft/network/packet/c2s/play/UpdateCommandBlockMinecartC2SPacket
	f	I	a	entityId
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
	m	(Lpl;)V	a	apply
	m	(Lbjw;)Lbjc;	a	getMinecartCommandExecutor
	m	()Ljava/lang/String;	b	getCommand
	m	()Z	c	shouldTrackOutput
c	qv	net/minecraft/network/packet/c2s/play/CreativeInventoryActionC2SPacket
	f	I	a	slot
	f	Lben;	b	stack
	m	(Lpl;)V	a	apply
	m	()I	b	getSlot
	m	()Lben;	c	getItemStack
c	qw	net/minecraft/network/packet/c2s/play/UpdateJigsawC2SPacket
	f	Lfk;	a	pos
	f	Lsm;	b	attachmentType
	f	Lsm;	c	targetPool
	f	Ljava/lang/String;	d	finalState
	m	(Lfk;Lsm;Lsm;Ljava/lang/String;)V	<init>	<init>
		p	1	pos	pos
		p	2	attachmentType	attachmentType
		p	3	targetPool	targetPool
		p	4	finalState	finalState
	m	(Lpl;)V	a	apply
	m	()Lfk;	b	getPos
	m	()Lsm;	c	getTargetPool
	m	()Lsm;	d	getAttachmentType
	m	()Ljava/lang/String;	e	getFinalState
c	qx	net/minecraft/network/packet/c2s/play/UpdateStructureBlockC2SPacket
	f	Lfk;	a	pos
	f	Lbxl$a;	b	action
	f	Lbzr;	c	mode
	f	Ljava/lang/String;	d	structureName
	f	Lfk;	e	offset
	f	Lfk;	f	size
	f	Lbsu;	g	mirror
	f	Lbtu;	h	rotation
	f	Ljava/lang/String;	i	metadata
	f	Z	j	ignoreEntities
	f	Z	k	showAir
	f	Z	l	showBoundingBox
	f	F	m	integrity
	f	J	n	seed
	m	(Lfk;Lbxl$a;Lbzr;Ljava/lang/String;Lfk;Lfk;Lbsu;Lbtu;Ljava/lang/String;ZZZFJ)V	<init>	<init>
		p	1	pos	pos
		p	2	action	action
		p	3	mode	mode
		p	4	structureName	structureName
		p	5	offset	offset
		p	6	size	size
		p	7	mirror	mirror
		p	8	rotation	rotation
		p	9	metadata	metadata
		p	10	ignoreEntities	ignoreEntities
		p	11	showAir	showAir
		p	12	showBoundingBox	showBoundingBox
		p	13	integrity	integrity
		p	14	seed	seed
	m	(Lpl;)V	a	apply
	m	()Lfk;	b	getPos
	m	()Lbxl$a;	c	getAction
	m	()Lbzr;	d	getMode
	m	()Ljava/lang/String;	e	getStructureName
	m	()Lfk;	f	getOffset
	m	()Lfk;	g	getSize
	m	()Lbsu;	h	getMirror
	m	()Lbtu;	i	getRotation
	m	()Ljava/lang/String;	j	getMetadata
	m	()Z	k	getIgnoreEntities
	m	()Z	l	shouldShowAir
	m	()Z	m	shouldShowBoundingBox
	m	()F	n	getIntegrity
	m	()J	o	getSeed
c	qy	net/minecraft/network/packet/c2s/play/UpdateSignC2SPacket
	f	Lfk;	a	pos
	f	[Ljava/lang/String;	b	text
	m	(Lpl;)V	a	apply
	m	()Lfk;	b	getPos
	m	()[Ljava/lang/String;	c	getText
c	qz	net/minecraft/network/packet/c2s/play/HandSwingC2SPacket
	f	Lajk;	a	hand
	m	(Lajk;)V	<init>	<init>
		p	1	hand	hand
	m	(Lpl;)V	a	apply
	m	()Lajk;	b	getHand
c	r	net/minecraft/util/InvalidIdentifierException
c	ra	net/minecraft/network/packet/c2s/play/SpectatorTeleportC2SPacket
	f	Ljava/util/UUID;	a	targetUuid
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1	targetUuid	targetUuid
	m	(Lxd;)Lakq;	a	getTarget
		p	1	world	world
	m	(Lpl;)V	a	apply
c	rb	net/minecraft/network/packet/c2s/play/PlayerInteractBlockC2SPacket
	f	Lajk;	b	hand
	m	(Lpl;)V	a	apply
	m	()Lajk;	b	getHand
	m	()Lcvg;	c	getHitY
c	rc	net/minecraft/network/packet/c2s/play/PlayerInteractItemC2SPacket
	f	Lajk;	a	hand
	m	(Lpl;)V	a	apply
	m	()Lajk;	b	getHand
c	re	net/minecraft/network/packet/c2s/handshake/HandshakeC2SPacket
	f	I	a	protocolVersion
	f	Ljava/lang/String;	b	address
	f	I	c	port
	f	Lku;	d	intendedState
	m	(Ljava/lang/String;ILku;)V	<init>	<init>
		p	1	address	address
		p	2	port	port
		p	3	intendedState	intendedState
	m	(Lrf;)V	a	apply
	m	()Lku;	b	getIntendedState
	m	()I	c	getProtocolVersion
c	rf	net/minecraft/network/listener/ServerHandshakePacketListener
	m	(Lre;)V	a	onHandshake
		p	1	packet	packet
c	rh	net/minecraft/network/listener/ClientLoginPacketListener
	m	(Lrj;)V	a	onLoginSuccess
		p	1	packet	packet
	m	(Lrk;)V	a	onHello
		p	1	packet	packet
	m	(Lri;)V	a	onQueryRequest
		p	1	packet	packet
	m	(Lrl;)V	a	onCompression
		p	1	packet	packet
	m	(Lrm;)V	a	onDisconnect
		p	1	packet	packet
c	ri	net/minecraft/network/packet/s2c/login/LoginQueryRequestS2CPacket
	f	I	a	queryId
	f	Lsm;	b	channel
	f	Lkv;	c	payload
	m	(Lrh;)V	a	apply
	m	()I	b	getQueryId
c	rj	net/minecraft/network/packet/s2c/login/LoginSuccessS2CPacket
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	profile	profile
	m	(Lrh;)V	a	apply
	m	()Lcom/mojang/authlib/GameProfile;	b	getProfile
c	rk	net/minecraft/network/packet/s2c/login/LoginHelloS2CPacket
	f	Ljava/lang/String;	a	serverId
	f	Ljava/security/PublicKey;	b	publicKey
	f	[B	c	nonce
	m	(Ljava/lang/String;Ljava/security/PublicKey;[B)V	<init>	<init>
		p	1	serverId	serverId
		p	2	publicKey	publicKey
		p	3	nonce	nonce
	m	(Lrh;)V	a	apply
	m	()Ljava/lang/String;	b	getServerId
	m	()Ljava/security/PublicKey;	c	getPublicKey
	m	()[B	d	getNonce
c	rl	net/minecraft/network/packet/s2c/login/LoginCompressionS2CPacket
	f	I	a	compressionThreshold
	m	(I)V	<init>	<init>
		p	1	compressionThreshold	compressionThreshold
	m	(Lrh;)V	a	apply
	m	()I	b	getCompressionThreshold
c	rm	net/minecraft/network/packet/s2c/login/LoginDisconnectS2CPacket
	f	Llf;	a	reason
	m	(Llf;)V	<init>	<init>
		p	1	reason	reason
	m	(Lrh;)V	a	apply
	m	()Llf;	b	getReason
c	rn	net/minecraft/network/listener/ServerLoginPacketListener
	m	(Lro;)V	a	onQueryResponse
		p	1	packet	packet
	m	(Lrp;)V	a	onHello
		p	1	packet	packet
	m	(Lrq;)V	a	onKey
		p	1	packet	packet
c	ro	net/minecraft/network/packet/c2s/login/LoginQueryResponseC2SPacket
	f	I	a	queryId
	f	Lkv;	b	response
	m	(Lrn;)V	a	apply
c	rp	net/minecraft/network/packet/c2s/login/LoginHelloC2SPacket
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	m	(Lrn;)V	a	apply
	m	()Lcom/mojang/authlib/GameProfile;	b	getProfile
c	rq	net/minecraft/network/packet/c2s/login/LoginKeyC2SPacket
	f	[B	a	encryptedSecretKey
	f	[B	b	encryptedNonce
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	decryptSecretKey
		p	1	privateKey	privateKey
	m	(Lrn;)V	a	apply
	m	(Ljava/security/PrivateKey;)[B	b	decryptNonce
		p	1	privateKey	privateKey
c	rt	net/minecraft/network/listener/ClientQueryPacketListener
	m	(Lrv;)V	a	onResponse
		p	1	packet	packet
	m	(Lru;)V	a	onPong
		p	1	packet	packet
c	ru	net/minecraft/network/packet/s2c/query/QueryPongS2CPacket
	f	J	a	startTime
	m	(J)V	<init>	<init>
		p	1	startTime	startTime
	m	(Lrt;)V	a	apply
c	rv	net/minecraft/network/packet/s2c/query/QueryResponseS2CPacket
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lrw;	b	metadata
	m	(Lrw;)V	<init>	<init>
		p	1	metadata	metadata
	m	(Lrt;)V	a	apply
	m	()Lrw;	b	getServerMetadata
c	rw	net/minecraft/server/ServerMetadata
	f	Llf;	a	description
	f	Lrw$a;	b	players
	f	Lrw$c;	c	version
	f	Ljava/lang/String;	d	favicon
	m	(Lrw$a;)V	a	setPlayers
	m	(Lrw$c;)V	a	setVersion
	m	(Llf;)V	a	setDescription
	m	()Llf;	a	getDescription
	m	(Ljava/lang/String;)V	a	setFavicon
		p	1	favicon	favicon
	m	()Lrw$a;	b	getPlayers
	m	()Lrw$c;	c	getVersion
	m	()Ljava/lang/String;	d	getFavicon
c	rw$a	net/minecraft/server/ServerMetadata$Players
	f	I	a	max
	f	I	b	online
	f	[Lcom/mojang/authlib/GameProfile;	c	sample
	m	(II)V	<init>	<init>
		p	1	max	max
		p	2	online	online
	m	()I	a	getPlayerLimit
	m	([Lcom/mojang/authlib/GameProfile;)V	a	setSample
		p	1	sample	sample
	m	()I	b	getOnlinePlayerCount
	m	()[Lcom/mojang/authlib/GameProfile;	c	getSample
c	rw$a$a	net/minecraft/server/ServerMetadata$Players$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lrw$a;	a	deserialize
	m	(Lrw$a;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	rw$b	net/minecraft/server/ServerMetadata$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lrw;	a	deserialize
	m	(Lrw;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	rw$c	net/minecraft/server/ServerMetadata$Version
	f	Ljava/lang/String;	a	gameVersion
	f	I	b	protocolVersion
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	gameVersion	gameVersion
		p	2	protocolVersion	protocolVersion
	m	()Ljava/lang/String;	a	getGameVersion
	m	()I	b	getProtocolVersion
c	rw$c$a	net/minecraft/server/ServerMetadata$Version$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lrw$c;	a	deserialize
	m	(Lrw$c;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	rx	net/minecraft/network/listener/ServerQueryPacketListener
	m	(Lrz;)V	a	onRequest
		p	1	packet	packet
	m	(Lry;)V	a	onPing
		p	1	packet	packet
c	ry	net/minecraft/network/packet/c2s/query/QueryPingC2SPacket
	f	J	a	startTime
	m	(Lrx;)V	a	apply
	m	()J	b	getStartTime
c	rz	net/minecraft/network/packet/c2s/query/QueryRequestC2SPacket
	m	(Lrx;)V	a	apply
c	s	net/minecraft/SharedConstants
	f	Lio/netty/util/ResourceLeakDetector$Level;	a	RESOURCE_LEAK_DETECTOR_DISABLED
	f	Z	b	isDevelopment
	f	[C	c	INVALID_CHARS_LEVEL_NAME
	f	Lcom/mojang/bridge/game/GameVersion;	d	gameVersion
	m	(C)Z	a	isValidChar
		p	0	chr	chr
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripInvalidChars
		p	0	s	s
	m	()Lcom/mojang/bridge/game/GameVersion;	a	getGameVersion
	m	(Ljava/lang/String;)Ljava/lang/String;	b	stripSupplementaryChars
		p	0	s	s
c	sb	net/minecraft/entity/data/TrackedData
	f	I	a	id
	f	Lsc;	b	dataType
	m	(ILsc;)V	<init>	<init>
		p	1	id	id
	m	()I	a	getId
	m	()Lsc;	b	getType
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	sc	net/minecraft/entity/data/TrackedDataHandler
	m	(I)Lsb;	a	create
	m	(Lkv;Ljava/lang/Object;)V	a	write
		p	1	data	data
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
	m	(Lkv;)Ljava/lang/Object;	a	read
c	sd	net/minecraft/entity/data/TrackedDataHandlerRegistry
	f	Lsc;	a	BYTE
	f	Lsc;	b	INTEGER
	f	Lsc;	c	FLOAT
	f	Lsc;	d	STRING
	f	Lsc;	e	TEXT_COMPONENT
	f	Lsc;	f	OPTIONAL_TEXT_COMPONENT
	f	Lsc;	g	ITEM_STACK
	f	Lsc;	h	OPTIONAL_BLOCK_STATE
	f	Lsc;	i	BOOLEAN
	f	Lsc;	j	PARTICLE
	f	Lsc;	k	ROTATION
	f	Lsc;	l	BLOCK_POS
	f	Lsc;	m	OPTIONA_BLOCK_POS
	f	Lsc;	n	FACING
	f	Lsc;	o	OPTIONAL_UUID
	f	Lsc;	p	TAG_COMPOUND
	f	Lsc;	q	VILLAGER_DATA
	f	Lsc;	s	ENTITY_POSE
	m	(Lsc;)V	a	register
		p	0	handler	handler
	m	(I)Lsc;	a	get
		p	0	id	id
	m	(Lsc;)I	b	getId
		p	0	handler	handler
c	sd$1	net/minecraft/entity/data/TrackedDataHandlerRegistry$1
	m	(Ljava/lang/Byte;)Ljava/lang/Byte;	a	copy
	m	(Lkv;Ljava/lang/Byte;)V	a	write
	m	(Lkv;)Ljava/lang/Byte;	b	read
c	sd$10	net/minecraft/entity/data/TrackedDataHandlerRegistry$10
	m	(Lkv;Ljava/util/OptionalInt;)V	a	write
	m	(Ljava/util/OptionalInt;)Ljava/util/OptionalInt;	a	copy
	m	(Lkv;)Ljava/util/OptionalInt;	b	read
c	sd$11	net/minecraft/entity/data/TrackedDataHandlerRegistry$11
	m	(Lkv;Lalj;)V	a	write
	m	(Lalj;)Lalj;	a	copy
	m	(Lkv;)Lalj;	b	read
c	sd$12	net/minecraft/entity/data/TrackedDataHandlerRegistry$12
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	copy
	m	(Lkv;Ljava/lang/Integer;)V	a	write
	m	(Lkv;)Ljava/lang/Integer;	b	read
c	sd$13	net/minecraft/entity/data/TrackedDataHandlerRegistry$13
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	copy
	m	(Lkv;Ljava/lang/Float;)V	a	write
	m	(Lkv;)Ljava/lang/Float;	b	read
c	sd$14	net/minecraft/entity/data/TrackedDataHandlerRegistry$14
	m	(Ljava/lang/String;)Ljava/lang/String;	a	copy
	m	(Lkv;Ljava/lang/String;)V	a	write
	m	(Lkv;)Ljava/lang/String;	b	read
c	sd$15	net/minecraft/entity/data/TrackedDataHandlerRegistry$15
	m	(Llf;)Llf;	a	copy
	m	(Lkv;Llf;)V	a	write
	m	(Lkv;)Llf;	b	read
c	sd$16	net/minecraft/entity/data/TrackedDataHandlerRegistry$16
	m	(Lkv;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lkv;)Ljava/util/Optional;	b	read
c	sd$17	net/minecraft/entity/data/TrackedDataHandlerRegistry$17
	m	(Lben;)Lben;	a	copy
	m	(Lkv;Lben;)V	a	write
	m	(Lkv;)Lben;	b	read
c	sd$18	net/minecraft/entity/data/TrackedDataHandlerRegistry$18
	m	(Lkv;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lkv;)Ljava/util/Optional;	b	read
c	sd$19	net/minecraft/entity/data/TrackedDataHandlerRegistry$19
	m	(Lkv;Ljava/lang/Boolean;)V	a	write
	m	(Ljava/lang/Boolean;)Ljava/lang/Boolean;	a	copy
	m	(Lkv;)Ljava/lang/Boolean;	b	read
c	sd$2	net/minecraft/entity/data/TrackedDataHandlerRegistry$2
	m	(Lgt;)Lgt;	a	copy
	m	(Lkv;Lgt;)V	a	write
	m	(Lkv;)Lgt;	b	read
c	sd$3	net/minecraft/entity/data/TrackedDataHandlerRegistry$3
	m	(Lgc;)Lgc;	a	copy
	m	(Lkv;Lgc;)V	a	write
	m	(Lkv;)Lgc;	b	read
c	sd$4	net/minecraft/entity/data/TrackedDataHandlerRegistry$4
	m	(Lfk;)Lfk;	a	copy
	m	(Lkv;Lfk;)V	a	write
	m	(Lkv;)Lfk;	b	read
c	sd$5	net/minecraft/entity/data/TrackedDataHandlerRegistry$5
	m	(Lkv;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lkv;)Ljava/util/Optional;	b	read
c	sd$6	net/minecraft/entity/data/TrackedDataHandlerRegistry$6
	m	(Lfp;)Lfp;	a	copy
	m	(Lkv;Lfp;)V	a	write
	m	(Lkv;)Lfp;	b	read
c	sd$7	net/minecraft/entity/data/TrackedDataHandlerRegistry$7
	m	(Lkv;Ljava/util/Optional;)V	a	write
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	copy
	m	(Lkv;)Ljava/util/Optional;	b	read
c	sd$8	net/minecraft/entity/data/TrackedDataHandlerRegistry$8
	m	(Lkv;Ljt;)V	a	write
	m	(Ljt;)Ljt;	a	copy
	m	(Lkv;)Ljt;	b	read
c	sd$9	net/minecraft/entity/data/TrackedDataHandlerRegistry$9
	m	(Lkv;Laxx;)V	a	write
	m	(Laxx;)Laxx;	a	copy
	m	(Lkv;)Laxx;	b	read
c	se	net/minecraft/entity/data/DataTracker
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	trackedEntities
	f	Lakq;	c	trackedEntity
	f	Ljava/util/Map;	d	entries
	f	Ljava/util/concurrent/locks/ReadWriteLock;	e	lock
	f	Z	f	empty
	f	Z	g	dirty
	m	(Lkv;Lse$a;)V	a	writeEntryToPacket
	m	(Lsb;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/Class;Lsc;)Lsb;	a	registerData
		p	0	entityClass	entityClass
		p	1	dataHandler	dataHandler
	m	(Lkv;)Ljava/util/List;	a	deserializePacket
	m	(Lsb;Ljava/lang/Object;)V	a	startTracking
		p	1	key	key
		p	2	initialValue	initialValue
	m	(Ljava/util/List;Lkv;)V	a	entriesToPacket
	m	(Lse$a;Lse$a;)V	a	copyToFrom
	m	(Ljava/util/List;)V	a	writeUpdatedEntries
	m	()Z	a	isDirty
	m	(Lkv;ILsc;)Lse$a;	a	entryFromPacket
	m	(Lsb;Ljava/lang/Object;)V	b	set
		p	1	key	key
	m	(Lsb;)Lse$a;	b	getEntry
	m	()Ljava/util/List;	b	getDirtyEntries
	m	(Lsb;Ljava/lang/Object;)V	c	addTrackedData
	m	()Ljava/util/List;	c	getAllEntries
	m	()Z	d	isEmpty
	m	()V	e	clearDirty
c	se$a	net/minecraft/entity/data/DataTracker$Entry
	f	Lsb;	a	data
	f	Ljava/lang/Object;	b	value
	f	Z	c	dirty
	m	(Lsb;Ljava/lang/Object;)V	<init>	<init>
		p	1	data	data
		p	2	value	value
	m	(Ljava/lang/Object;)V	a	set
		p	1	value	value
	m	(Z)V	a	setDirty
		p	1	dirty	dirty
	m	()Lsb;	a	getData
	m	()Ljava/lang/Object;	b	get
	m	()Z	c	isDirty
	m	()Lse$a;	d	copy
c	si	net/minecraft/recipe/RecipeGridAligner
	m	(IIILbgw;Ljava/util/Iterator;I)V	a	alignRecipeToGrid
		p	1	gridWidth	gridWidth
		p	2	gridHeight	gridHeight
		p	3	gridOutputSlot	gridOutputSlot
		p	4	recipe	recipe
		p	5	inputs	inputs
		p	6	amount	amount
	m	(Ljava/util/Iterator;IIII)V	a	acceptAlignedInput
		p	1	inputs	inputs
		p	2	slot	slot
		p	3	amount	amount
		p	4	gridX	gridX
		p	5	gridY	gridY
c	sj	net/minecraft/recipe/InputSlotFiller
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Layl;	b	recipeFinder
	f	Layi;	c	inventory
	f	Lbbt;	d	craftingContainer
	m	()V	a	returnInputs
	m	(Lbgw;Z)V	a	fillInputSlots
		p	2	craftAll	craftAll
	m	(ZIZ)I	a	getAmountToFill
		p	1	craftAll	craftAll
		p	2	limit	limit
		p	3	recipeInCraftingSlots	recipeInCraftingSlots
	m	(I)V	a	returnSlot
	m	(Lbca;Lben;)V	a	fillInputSlot
	m	(Lxe;Lbgw;Z)V	a	fillInputSlots
		p	1	entity	entity
		p	2	recipe	recipe
		p	3	craftAll	craftAll
	m	()Z	b	canReturnInputs
	m	()I	c	getFreeInventorySlots
c	sk	net/minecraft/recipe/FurnaceInputSlotFiller
	f	Z	e	slotMatchesRecipe
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)V	a	fillInputSlot
		p	1	limit	limit
		p	2	inputs	inputs
c	sm	net/minecraft/util/Identifier
	c	The namespace and path must contain only lowercase letters ([a-z]), digits ([0-9]), or the characters '_', '.', and '-'. The path can also contain the standard path separator '/'.
	f	Ljava/lang/String;	a	namespace
	f	Ljava/lang/String;	b	path
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	COMMAND_EXCEPTION
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1	namespace	namespace
		p	2	path	path
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
			c	A string of the form <namespace>:<path>, for example minecraft:iron_ingot.\nThe string will be split (on the :) into an identifier with the specified path and namespace.\nPrefer using the constructor {@link net.minecraft.util.Identifier
	m	(Ljava/lang/String;)Lsm;	a	tryParse
		p	0	id	id
	m	(C)Z	a	isCharValid
		p	0	c	c
	m	()Ljava/lang/String;	a	getPath
	m	(I)Z	a	method_12837
		p	0	c	c
	m	(Ljava/lang/String;C)Lsm;	a	splitOn
		p	0	id	id
		p	1	delimiter	delimiter
	m	(Lcom/mojang/brigadier/StringReader;)Lsm;	a	fromCommandInput
		p	0	reader	reader
	m	(Lsm;)I	a	compareTo
	m	(I)Z	b	method_12834
		p	0	c	c
	m	()Ljava/lang/String;	b	getNamespace
	m	(Ljava/lang/String;C)[Ljava/lang/String;	b	split
		p	0	id	id
		p	1	delimiter	delimiter
	m	(Ljava/lang/String;)Z	b	isValid
		p	0	id	id
	m	(Ljava/lang/String;)Z	c	isPathValid
		p	0	path	path
	m	(Ljava/lang/String;)Z	d	isNamespaceValid
		p	0	namespace	namespace
c	sm$a	net/minecraft/util/Identifier$Serializer
	m	(Lsm;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lsm;	a	deserialize
c	so	net/minecraft/Bootstrap
	f	Ljava/io/PrintStream;	a	SYSOUT
	f	Z	b	initialized
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	m	(Lgb;Ljava/util/function/Function;Ljava/util/Set;)V	a	collectMissingTranslations
		p	0	registry	registry
		p	1	keyExtractor	keyExtractor
		p	2	translationKeys	translationKeys
	m	()V	a	initialize
	m	(Ljava/lang/String;)V	a	println
		p	0	str	str
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	()V	c	logMissingTranslations
	m	()V	d	setOutputStreams
c	sp	net/minecraft/client/gl/ShaderParseException
	f	Ljava/util/List;	a	traces
	f	Ljava/lang/String;	b	message
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	message	message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	message	message
		p	2	cause	cause
	m	(Ljava/lang/Exception;)Lsp;	a	wrap
		p	0	cause	cause
	m	(Ljava/lang/String;)V	a	addFaultyElement
		p	1	jsonKey	jsonKey
	m	(Ljava/lang/String;)V	b	addFaultyFile
		p	1	path	path
c	sp$a	net/minecraft/client/gl/ShaderParseException$JsonStackTrace
	f	Ljava/lang/String;	a	fileName
	f	Ljava/util/List;	b	faultyElements
	m	(Ljava/lang/String;)V	a	add
		p	1	element	element
	m	()Ljava/lang/String;	b	joinStackTrace
c	sq	net/minecraft/server/dedicated/PendingServerCommand
	f	Ljava/lang/String;	a	command
	f	Lcq;	b	source
	m	(Ljava/lang/String;Lcq;)V	<init>	<init>
		p	1	command	command
		p	2	commandSource	commandSource
c	ss	net/minecraft/util/DebugPrintStreamLogger
c	st	net/minecraft/server/dedicated/EulaReader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	eulaFile
	f	Z	c	eulaAgreedTo
	m	()Z	a	isEulaAgreedTo
	m	()Z	b	checkEulaAgreement
	m	()V	c	createEulaFile
c	su	net/minecraft/util/PrintStreamLogger
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1	name	name
		p	2	outputStream	outputStream
	m	(Ljava/lang/String;)V	a	log
c	sv	net/minecraft/advancement/PlayerAdvancementTracker
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lcom/google/gson/reflect/TypeToken;	c	JSON_TYPE
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Ljava/io/File;	e	advancementFile
	f	Ljava/util/Map;	f	advancementToProgress
	f	Ljava/util/Set;	g	visibleAdvancements
	f	Ljava/util/Set;	h	visibilityUpdates
	f	Ljava/util/Set;	i	progressUpdates
	f	Lxe;	j	owner
	f	Lu;	k	currentDisplayTab
	f	Z	l	dirty
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;Lxe;)V	<init>	<init>
		p	1	server	server
		p	2	advancementFile	advancementFile
		p	3	owner	owner
	m	(Lu;)V	a	setDisplayTab
	m	()V	a	clearCriterions
	m	(Lu;Ljava/lang/String;)Z	a	grantCriterion
		p	2	criterion	criterion
	m	(Lxe;)V	a	setOwner
		p	1	owner	owner
	m	(Lu;Lw;)V	a	initProgress
	m	(Lu;)Lw;	b	getProgress
	m	(Lu;Ljava/lang/String;)Z	b	revokeCriterion
		p	2	criterion	criterion
	m	()V	b	reload
	m	(Lxe;)V	b	sendUpdate
	m	()V	c	save
	m	(Lu;)V	c	beginTracking
	m	(Lu;)V	d	endTrackingCompleted
	m	()V	d	beginTrackingAllAdvancements
	m	(Lu;)V	e	updateDisplay
	m	()V	e	updateCompleted
	m	()V	f	rewardEmptyAdvancements
	m	(Lu;)Z	f	canSee
	m	()V	g	load
	m	(Lu;)Z	g	hasChildrenDone
c	sw	net/minecraft/network/OffThreadException
	f	Lsw;	a	INSTANCE
c	sx	net/minecraft/server/ServerAdvancementLoader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lv;	c	manager
	m	(Ljava/util/Map;Lzb;Laio;)V	a	apply
	m	(Lsm;)Lu;	a	get
	m	()Ljava/util/Collection;	a	getAdvancements
c	sy	net/minecraft/server/function/CommandFunctionManager
	f	I	a	PATH_PREFIX_LENGTH
	f	I	b	EXTENSION_LENGTH
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lsm;	d	TICK_FUNCTION
	f	Lsm;	e	LOAD_FUNCTION
	f	Lnet/minecraft/server/MinecraftServer;	f	server
	f	Ljava/util/Map;	g	idMap
	f	Z	h	executing
	f	Ljava/util/ArrayDeque;	i	chain
	f	Ljava/util/List;	j	pending
	f	Laba;	k	tags
	f	Ljava/util/List;	l	tickFunctions
	f	Z	m	needToRunLoadFunctions
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	(Lcn;Ljava/lang/Throwable;Lsm;)Lcn;	a	load
		p	1	function	function
		p	2	exception	exception
		p	3	id	id
	m	(Lcn;Lcq;)I	a	execute
		p	1	function	function
		p	2	source	source
	m	(Lsm;)Ljava/util/Optional;	a	getFunction
		p	1	id	id
	m	(Lzb;Lsm;)Ljava/util/List;	a	readLines
		p	0	resourceManager	resourceManager
		p	1	id	id
	m	()Lnet/minecraft/server/MinecraftServer;	a	getServer
	m	()I	b	getMaxCommandChainLength
	m	()Ljava/util/Map;	c	getFunctions
	m	()Lcom/mojang/brigadier/CommandDispatcher;	d	getDispatcher
	m	()V	e	tick
	m	()Lcq;	f	getTaggedFunctionSource
	m	()Lcq;	g	getCommandFunctionSource
	m	()Laba;	h	getTags
c	sy$a	net/minecraft/server/function/CommandFunctionManager$Entry
	f	Lsy;	a	manager
	f	Lcq;	b	source
	f	Lcn$c;	c	element
	m	(Lsy;Lcq;Lcn$c;)V	<init>	<init>
		p	1	manger	manger
		p	2	source	source
		p	3	element	element
	m	(Ljava/util/ArrayDeque;I)V	a	execute
		p	1	stack	stack
		p	2	maxChainLength	maxChainLength
c	sz	net/minecraft/server/dedicated/DedicatedServer
	m	()Ljava/lang/String;	E	getVersion
	m	()I	F	getCurrentPlayerCount
	m	()I	G	getMaxPlayerCount
	m	()[Ljava/lang/String;	H	getPlayerNames
	m	()Z	J	isDebuggingEnabled
	m	()Ljava/lang/String;	P	getLevelName
	m	(Ljava/lang/String;)Ljava/lang/String;	a_	executeRconCommand
	m	()Lwe;	d_	getProperties
	m	(Ljava/lang/String;)V	e	info
	m	()Ljava/lang/String;	e_	getHostname
	m	(Ljava/lang/String;)V	f	warn
	m	()Ljava/lang/String;	f_	getMotd
	m	(Ljava/lang/String;)V	g	logError
	m	(Ljava/lang/String;)V	h	log
	m	()I	r	getPort
	m	()Ljava/lang/String;	u	getPlugins
c	t	net/minecraft/util/Util
	f	Ljava/util/function/LongSupplier;	a	nanoTimeSupplier
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	NEXT_SERVER_WORKER_ID
	f	Ljava/util/concurrent/ExecutorService;	c	SERVER_WORKER_EXECUTOR
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	next
	m	(Ljava/util/List;)Ljava/lang/Object;	a	getLast
		p	0	list	list
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
		p	0	factory	factory
	m	(Ljava/lang/String;Lsm;)Ljava/lang/String;	a	createTranslationKey
		p	0	type	type
		p	1	id	id
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional;	a	readUuid
		p	0	name	name
		p	1	dynamic	dynamic
	m	(Lbzm;Ljava/lang/Object;)Ljava/lang/String;	a	getValueAsString
	m	(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;	a	completeExceptionally
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifPresentOrElse
	m	()Ljava/util/stream/Collector;	a	toMap
	m	(Ljava/util/Optional;)Ljava/util/stream/Stream;	a	stream
	m	(Ljava/lang/String;Ljava/util/UUID;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic;	a	writeUuid
		p	0	name	name
		p	1	uuid	uuid
		p	2	dynamic	dynamic
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	debugRunnable
		p	0	runnable	runnable
		p	1	messageSupplier	messageSupplier
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
		p	0	object	object
		p	1	initializer	initializer
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	b	combine
		p	0	futures	futures
	m	()J	b	getMeasuringTimeMs
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	previous
	m	(Ljava/lang/Throwable;)V	b	throwUnchecked
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	c	throwOrPause
		p	0	t	t
	m	()J	c	getMeasuringTimeNano
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	d	getInnermostMessage
		p	0	t	t
	m	()J	d	getEpochTimeMs
	m	()Ljava/util/concurrent/Executor;	e	getServerWorkerExecutor
	m	()V	f	shutdownServerWorkerExecutor
	m	()Lt$b;	g	getOperatingSystem
	m	()Ljava/util/stream/Stream;	h	getJVMFlags
	m	()Lit/unimi/dsi/fastutil/Hash$Strategy;	i	identityHashStrategy
	m	()Lorg/apache/logging/log4j/Logger;	j	getLogger
	m	()Ljava/util/concurrent/ExecutorService;	k	createServerWorkerExecutor
c	t$a	net/minecraft/util/Util$IdentityHashStrategy
c	t$b	net/minecraft/util/Util$OperatingSystem
	m	(Ljava/net/URL;)V	a	open
		p	1	url	url
	m	(Ljava/io/File;)V	a	open
	m	(Ljava/lang/String;)V	a	open
	m	(Ljava/net/URI;)V	a	open
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getURLOpenCommand
		p	1	url	url
c	ta	net/minecraft/scoreboard/ServerScoreboard
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Ljava/util/Set;	b	objectives
	f	[Ljava/lang/Runnable;	c	updateListeners
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	(Ljava/lang/Runnable;)V	a	addUpdateListener
		p	1	listener	listener
	m	()V	b	runUpdateListeners
	m	(Lcwi;)Ljava/util/List;	d	createChangePackets
		p	1	objective	objective
	m	(Lcwi;)V	e	addScoreboardObjective
		p	1	objective	objective
	m	(Lcwi;)Ljava/util/List;	f	createRemovePackets
		p	1	objective	objective
	m	(Lcwi;)V	g	removeScoreboardObjective
		p	1	objective	objective
	m	(Lcwi;)I	h	getSlot
		p	1	objective	objective
c	ta$a	net/minecraft/scoreboard/ServerScoreboard$UpdateMode
c	tb	net/minecraft/server/ServerTask
	f	I	a	creationTicks
	f	Ljava/lang/Runnable;	b	runnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1	creationTicks	creationTicks
		p	2	runnable	runnable
	m	()I	a	getCreationTicks
c	tc	net/minecraft/entity/boss/CommandBossBar
	f	Lsm;	h	id
	f	Ljava/util/Set;	i	playerUuids
	f	I	j	value
	f	I	k	maxValue
	m	(Lsm;Llf;)V	<init>	<init>
		p	1	id	id
		p	2	displayName	displayName
	m	(Ljava/util/Collection;)Z	a	addPlayers
		p	1	players	players
	m	()Lsm;	a	getId
	m	(I)V	a	setValue
		p	1	value	value
	m	(Lln;)V	a	method_12958
		p	1	style	style
	m	(Ljt;Lsm;)Ltc;	a	fromTag
		p	0	tag	tag
		p	1	id	id
	m	(Ljava/util/UUID;)V	a	addPlayer
		p	1	uuid	uuid
	m	(I)V	b	setMaxValue
		p	1	maxValue	maxValue
	m	()I	c	getValue
	m	(Lxe;)V	c	onPlayerConnect
		p	1	player	player
	m	()I	d	getMaxValue
	m	(Lxe;)V	d	onPlayerDisconnect
		p	1	player	player
	m	()Llf;	e	toHoverableText
	m	()Ljt;	f	toTag
c	td	net/minecraft/entity/boss/BossBarManager
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Ljava/util/Map;	b	commandBossBars
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	(Ljt;)V	a	fromTag
		p	1	tag	tag
	m	()Ljava/util/Collection;	a	getIds
	m	(Ltc;)V	a	remove
		p	1	bossBar	bossBar
	m	(Lsm;)Ltc;	a	get
		p	1	id	id
	m	(Lsm;Llf;)Ltc;	a	add
		p	1	id	id
		p	2	displayName	displayName
	m	(Lxe;)V	a	onPlayerConnect
		p	1	player	player
	m	(Lxe;)V	b	onPlayerDisconnenct
		p	1	player	player
	m	()Ljava/util/Collection;	b	getAll
	m	()Ljt;	c	toTag
c	tf	net/minecraft/server/command/AdvancementCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	m	(Lu;Ljava/util/List;)V	a	addChildrenRecursivelyToList
		p	0	parent	parent
		p	1	childList	childList
	m	(Lcq;Ljava/util/Collection;Ltf$a;Lu;Ljava/lang/String;)I	a	executeCriterion
		p	0	source	source
		p	1	targets	targets
		p	2	operation	operation
		p	3	advancement	advancement
		p	4	criterion	criterion
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ljava/util/Collection;Ltf$a;Ljava/util/Collection;)I	a	executeAdvancement
		p	0	source	source
		p	1	targets	targets
		p	2	operation	operation
		p	3	selection	selection
	m	(Lu;Ltf$b;)Ljava/util/List;	a	select
		p	0	advancement	advancement
		p	1	selection	selection
c	tf$a	net/minecraft/server/command/AdvancementCommand$Operation
	f	Ljava/lang/String;	c	commandPrefix
	m	(Lxe;Lu;)Z	a	processEach
	m	(Lxe;Ljava/lang/Iterable;)I	a	processAll
	m	()Ljava/lang/String;	a	getCommandPrefix
	m	(Lxe;Lu;Ljava/lang/String;)Z	a	processEachCriterion
		p	3	criterion	criterion
c	tf$b	net/minecraft/server/command/AdvancementCommand$Selection
	f	Z	f	before
	f	Z	g	after
c	tg	net/minecraft/server/dedicated/command/BanIpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_IP_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ALREADY_BANNED_EXCEPTION
	m	(Lcq;Ljava/lang/String;Llf;)I	a	checkIp
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcq;Ljava/lang/String;Llf;)I	b	banIp
c	th	net/minecraft/server/dedicated/command/BanListCommand
	m	(Lcq;Ljava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	ti	net/minecraft/server/dedicated/command/BanCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_BANNED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;Llf;)I	a	ban
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	tj	net/minecraft/server/command/BossBarCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	suggestionProvider
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	CREATE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	UNKNOWN_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	SET_PLAYERS_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	SET_NAME_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	SET_COLOR_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	SET_STYLE_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	SET_VALUE_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	SETMAX_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION
	m	(Lcq;Ltc;)I	a	getValue
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcq;Ltc;Ljava/util/Collection;)I	a	setPlayers
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	players	players
	m	(Lcq;Ltc;Z)I	a	setVisible
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	visible	visible
	m	(Lcq;Ltc;Lajb$b;)I	a	setStyle
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	style	style
	m	(Lcq;Lsm;Llf;)I	a	addBossBar
		p	0	source	source
		p	1	name	name
		p	2	displayName	displayName
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltc;	a	createBossBar
		p	0	context	context
	m	(Lcq;)I	a	listBossBars
		p	0	source	source
	m	(Lcq;Ltc;Lajb$a;)I	a	setColor
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	color	color
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ltc;Llf;)I	a	setName
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	name	name
	m	(Lcq;Ltc;I)I	a	setValue
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	value	value
	m	(Lcq;Ltc;)I	b	getMaxValue
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcq;Ltc;I)I	b	setMaxValue
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	value	value
	m	(Lcq;Ltc;)I	c	isVisible
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcq;Ltc;)I	d	getPlayers
		p	0	source	source
		p	1	bossBar	bossBar
	m	(Lcq;Ltc;)I	e	removeBossBar
		p	0	source	source
		p	1	bossBar	bossBar
c	tk	net/minecraft/server/command/ClearCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	FAILED_SINGLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	FAILED_MULTIPLE_EXCEPTION
	m	(Lcq;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	item	item
		p	3	maxCount	maxCount
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	tl	net/minecraft/server/command/CloneCommand
	f	Ljava/util/function/Predicate;	a	IS_AIR_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	OVERLAP_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	TOOBIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	FAILED_EXCEPTION
	m	(Lcq;Lfk;Lfk;Lfk;Ljava/util/function/Predicate;Ltl$b;)I	a	execute
		p	0	source	source
		p	1	begin	begin
		p	2	end	end
		p	3	destination	destination
		p	4	filter	filter
		p	5	mode	mode
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	tl$a	net/minecraft/server/command/CloneCommand$BlockInfo
	f	Lfk;	a	pos
	f	Lbyj;	b	state
	f	Ljt;	c	blockEntityTag
	m	(Lfk;Lbyj;Ljt;)V	<init>	<init>
		p	1	pos	pos
		p	2	state	state
		p	3	blockEntityTag	blockEntityTag
c	tl$b	net/minecraft/server/command/CloneCommand$Mode
	f	Z	d	allowsOverlap
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3	allowsOverlap	allowsOverlap
	m	()Z	a	allowsOverlap
c	tm	net/minecraft/server/command/DatapackCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	UNKNOWN_DATAPACK_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ALREADY_ENABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ALREADY_DISABLED_EXCEPTION
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	ENABLED_CONTAINERS_SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	DISABLED_CONTAINERS_SUGGESTION_PROVIDER
	m	(Lcq;Lyt;)I	a	executeDisable
		p	0	source	source
		p	1	container	container
	m	(Lcq;Lyt;Ltm$a;)I	a	executeEnable
		p	0	source	source
		p	1	container	container
		p	2	packAdder	packAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lyt;	a	getPackContainer
		p	0	context	context
		p	1	name	name
		p	2	enable	enable
	m	(Lcq;)I	a	executeList
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;)I	b	executeListAvailable
		p	0	source	source
	m	(Lcq;)I	c	executeListEnabled
		p	0	source	source
c	tm$a	net/minecraft/server/command/DatapackCommand$PackAdder
c	tn	net/minecraft/server/dedicated/command/DeOpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_DEOPPED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;)I	a	deop
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	to	net/minecraft/server/command/DebugCommand
	f	Lorg/apache/logging/log4j/Logger;	a	logger
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	NORUNNING_EXCPETION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ALREADYRUNNING_EXCEPTION
	m	(Lcq;)I	a	executeStart
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;)I	b	executeStop
		p	0	source	source
	m	(Lcq;)I	c	createDebugReport
		p	0	source	source
c	tq	net/minecraft/server/command/DefaultGameModeCommand
	m	(Lcq;Lbjt;)I	a	execute
		p	0	source	source
		p	1	defaultGameMode	defaultGameMode
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	tr	net/minecraft/server/command/DifficultyCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	FAILURE_EXCEPTION
	m	(Lcq;Laji;)I	a	execute
		p	0	source	source
		p	1	difficulty	difficulty
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ts	net/minecraft/server/command/EffectCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	GIVE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	CLEAR_EVERYTHING_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	CLEAR_SPECIFIC_FAILED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;)I	a	executeClear
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ljava/util/Collection;Laki;Ljava/lang/Integer;IZ)I	a	executeGive
		p	0	source	source
		p	1	targets	targets
		p	2	effect	effect
		p	3	seconds	seconds
		p	4	amplifier	amplifier
		p	5	showParticles	showParticles
	m	(Lcq;Ljava/util/Collection;Laki;)I	a	executeClear
		p	0	source	source
		p	1	targets	targets
		p	2	effect	effect
c	tt	net/minecraft/server/command/MeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	tu	net/minecraft/server/command/EnchantCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	FAILED_ENTITY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	FAILED_ITEMLESS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	FAILED_INCOMPATIBLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FAILED_LEVEL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	FAILED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;Lbhx;I)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	enchantment	enchantment
		p	3	level	level
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	tv	net/minecraft/server/command/ExecuteCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	BLOCKS_TOOBIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	CONDITIONAL_FAIL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	CONDITIONAL_FAIL_COUNT_EXCEPTION
	f	Ljava/util/function/BinaryOperator;	d	BINARY_RESULT_CONSUMER
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addBlocksConditionLogic
		p	0	root	root
		p	1	builder	builder
		p	2	positive	positive
		p	3	masked	masked
	m	(Lxd;Lfk;Lfk;Lfk;Z)Ljava/util/OptionalInt;	a	testBlocksCondition
		p	0	world	world
		p	1	start	start
		p	2	end	end
		p	3	destination	destination
		p	4	masked	masked
	m	(Lvw;Lde$h;)I	a	countPathMatches
		p	0	object	object
		p	1	path	path
	m	(Lcq;Ltc;ZZ)Lcq;	a	executeStoreBossbar
		p	0	source	source
		p	1	bossBar	bossBar
		p	2	storeInValue	storeInValue
		p	3	requestResult	requestResult
	m	(Lcq;Lcum;)Z	a	testLootCondition
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionArguments
		p	0	root	root
		p	1	argumentBuilder	argumentBuilder
		p	2	positive	positive
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLtv$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionLogic
		p	0	root	root
		p	1	builder	builder
		p	2	positive	positive
		p	3	condition	condition
	m	(Lcq;Lvw;Lde$h;Ljava/util/function/IntFunction;Z)Lcq;	a	executeStoreData
		p	0	source	source
		p	1	object	object
		p	2	path	path
		p	3	tagSetter	tagSetter
		p	4	requestResult	requestResult
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbr$d;)Z	a	testScoreMatch
		p	0	context	context
		p	1	range	range
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	executePositiveBlockCondition
		p	0	context	context
		p	1	masked	masked
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z	a	testScoreCondition
		p	0	context	context
		p	1	condition	condition
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	getSourceOrEmptyForConditionFork
		p	0	context	context
		p	1	positive	positive
		p	2	value	value
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addStoreArguments
		p	0	node	node
		p	1	builder	builder
		p	2	requestResult	requestResult
	m	(Lcq;Ljava/util/Collection;Lcwi;Z)Lcq;	a	executeStoreScore
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	requestResult	requestResult
	m	(ZLtv$a;)Lcom/mojang/brigadier/Command;	a	getExistsConditionExecute
		p	0	positive	positive
		p	1	condition	condition
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	executeNegativeBlockCondition
		p	0	context	context
		p	1	masked	masked
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	testBlocksCondition
		p	0	context	context
		p	1	masked	masked
c	tv$a	net/minecraft/server/command/ExecuteCommand$ExistsCondition
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	test	test
		p	1	context	context
c	tv$b	net/minecraft/server/command/ExecuteCommand$Condition
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	test	test
		p	1	context	context
c	tw	net/minecraft/server/command/ExperienceCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	SET_POINT_INVALID_EXCEPTION
	m	(Lcq;Ljava/util/Collection;ILtw$a;)I	a	executeAdd
		p	0	source	source
		p	1	targets	targets
		p	2	amount	amount
		p	3	component	component
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lxe;Ltw$a;)I	a	executeQuery
		p	0	source	source
		p	1	player	player
		p	2	component	component
	m	(Lcq;Ljava/util/Collection;ILtw$a;)I	b	executeSet
		p	0	source	source
		p	1	targets	targets
		p	2	amount	amount
		p	3	component	component
c	tw$a	net/minecraft/server/command/ExperienceCommand$Component
	f	Ljava/util/function/BiConsumer;	c	adder
	f	Ljava/util/function/BiPredicate;	d	setter
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	getter
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V	<init>	<init>
		p	3	name	name
		p	4	adder	adder
		p	5	setter	setter
		p	6	getter	getter
c	tx	net/minecraft/server/command/FillCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	TOOBIG_EXCEPTION
	f	Lds;	b	AIR_BLOCK_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	FAILED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lclb;Lds;Ltx$a;Ljava/util/function/Predicate;)I	a	execute
		p	0	source	source
		p	1	range	range
		p	2	block	block
		p	3	mode	mode
		p	4	filter	filter
c	tx$a	net/minecraft/server/command/FillCommand$Mode
	f	Lvb$a;	e	filter
c	ty	net/minecraft/server/command/ForceLoadCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	TOOBIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	QUERY_FAILURE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ADDED_FAILURE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	REMOVED_FAILURE_EXCEPTION
	m	(Lcq;Lwt;)I	a	executeQuery
		p	0	source	source
		p	1	pos	pos
	m	(Lcq;)I	a	executeQuery
		p	0	source	source
	m	(Lcq;Lwt;Lwt;Z)I	a	executeChange
		p	0	source	source
		p	1	from	from
		p	2	to	to
		p	3	forceLoaded	forceLoaded
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;)I	b	executeRemoveAll
		p	0	source	source
c	tz	net/minecraft/server/command/FunctionCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	m	(Lcq;Ljava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	functions	functions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	u	net/minecraft/advancement/Advancement
	f	Lu;	a	parent
	f	Lad;	b	display
	f	Lx;	c	rewards
	f	Lsm;	d	id
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Ljava/util/Set;	g	children
	f	Llf;	h	text
	m	(Lsm;Lu;Lad;Lx;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1	id	id
		p	2	parent	parent
		p	3	display	display
		p	4	rewards	rewards
		p	5	criteria	criteria
		p	6	requirements	requirements
	m	(Lu;)V	a	addChild
		p	1	child	child
	m	()Lu$a;	a	createTask
	m	()Lu;	b	getParent
	m	()Lad;	c	getDisplay
	m	()Lx;	d	getRewards
	m	()Ljava/lang/Iterable;	e	getChildren
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Ljava/util/Map;	f	getCriteria
	m	()I	g	getRequirementCount
	m	()Lsm;	h	getId
	m	()[[Ljava/lang/String;	i	getRequirements
	m	()Llf;	j	toHoverableText
c	u$a	net/minecraft/advancement/Advancement$Task
	f	Lsm;	a	parentId
	f	Lu;	b	parentObj
	f	Lad;	c	display
	f	Lx;	d	rewards
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Laf;	g	merger
	m	(Lsm;Lad;Lx;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1	parentId	parentId
		p	2	display	display
		p	3	rewards	rewards
		p	4	criteria	criteria
		p	5	requirements	requirements
	m	(Lkv;)V	a	toPacket
	m	(Lx;)Lu$a;	a	rewards
		p	1	rewards	rewards
	m	(Ljava/util/function/Function;)Z	a	findParent
	m	(Ljava/lang/String;Lz;)Lu$a;	a	criterion
		p	1	criterion	criterion
	m	(Lsm;)Lu$a;	a	parent
		p	1	parentId	parentId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Lu;	a	build
	m	(Lx$a;)Lu$a;	a	rewards
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lu$a;	a	fromJson
		p	0	obj	obj
		p	1	context	context
	m	()Lu$a;	a	create
	m	(Lu;)Lu$a;	a	parent
		p	1	parent	parent
	m	(Ljava/lang/String;Lac;)Lu$a;	a	criterion
		p	1	conditions	conditions
	m	(Lbjv;Llf;Llf;Lsm;Lae;ZZZ)Lu$a;	a	display
		p	1	icon	icon
		p	2	title	title
		p	3	description	description
		p	4	background	background
		p	5	frame	frame
		p	6	showToast	showToast
		p	7	announceToChat	announceToChat
		p	8	hidden	hidden
	m	(Lad;)Lu$a;	a	display
		p	1	display	display
	m	(Lben;Llf;Llf;Lsm;Lae;ZZZ)Lu$a;	a	display
		p	1	icon	icon
		p	2	title	title
		p	3	description	description
		p	4	background	background
		p	5	frame	frame
		p	6	showToast	showToast
		p	7	announceToChat	announceToChat
		p	8	hidden	hidden
	m	(Laf;)Lu$a;	a	criteriaMerger
		p	1	merger	merger
	m	()Lcom/google/gson/JsonObject;	b	toJson
	m	(Lkv;)Lu$a;	b	fromPacket
		p	0	buf	buf
	m	(Lsm;)Lu;	b	build
	m	()Ljava/util/Map;	c	getCriteria
c	ua	net/minecraft/server/command/GameModeCommand
	m	(Lcq;Lxe;Lbjt;)V	a	setGameMode
		p	0	source	source
		p	1	player	player
		p	2	gameMode	gameMode
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lbjt;)I	a	execute
		p	0	context	context
		p	1	targets	targets
		p	2	gameMode	gameMode
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ub	net/minecraft/server/command/GameRuleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;)Z	a	method_13393
		p	0	source	source
	m	(Lcq;Lbjs$d;)I	b	executeQuery
		p	0	source	source
		p	1	key	key
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbjs$d;)I	b	executeSet
		p	0	context	context
		p	1	key	key
c	ub$1	net/minecraft/server/command/GameRuleCommand$1
	m	(Lbjs$d;Lcom/mojang/brigadier/context/CommandContext;)I	a	method_20797
		p	1	context	context
	m	(Lbjs$d;Lcom/mojang/brigadier/context/CommandContext;)I	b	method_20798
		p	1	context	context
c	uc	net/minecraft/server/command/GiveCommand
	m	(Lcq;Lek;Ljava/util/Collection;I)I	a	execute
		p	0	source	source
		p	1	item	item
		p	2	targets	targets
		p	3	count	count
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ud	net/minecraft/server/command/HelpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ue	net/minecraft/server/command/KickCommand
	m	(Lcq;Ljava/util/Collection;Llf;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	reason	reason
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	uf	net/minecraft/server/command/KillCommand
	m	(Lcq;Ljava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	targets	targets
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ug	net/minecraft/server/command/ListCommand
	m	(Lcq;)I	a	executeNames
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ljava/util/function/Function;)I	a	execute
		p	0	source	source
		p	1	nameProvider	nameProvider
	m	(Lcq;)I	b	executeUuids
c	uh	net/minecraft/server/command/LocateCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcq;Ljava/lang/String;)I	a	execute
		p	0	source	source
		p	1	structure	structure
	m	(IIII)F	a	getDistance
		p	0	x1	x1
		p	1	y1	y1
		p	2	x2	x2
		p	3	y2	y2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ui	net/minecraft/server/command/LootCommand
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGESTION_PROVIDER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	NO_HELD_ITEMS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	NO_LOOT_TABLE_EXCEPTION
	m	(Laje;Lben;)Z	a	insert
		p	0	inventory	inventory
		p	1	stack	stack
	m	(Lakq;Ljava/util/List;IILjava/util/List;)V	a	replace
		p	0	entity	entity
		p	1	stacks	stacks
		p	2	slot	slot
		p	3	stackCount	stackCount
		p	4	addedStacks	addedStacks
	m	(Lcom/mojang/brigadier/context/CommandContext;Lfk;Lben;Lui$b;)I	a	executeMine
		p	0	context	context
		p	1	pos	pos
		p	2	stack	stack
		p	3	constructor	constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lsm;Lfk;Lben;Lui$b;)I	a	executeFish
		p	0	context	context
		p	1	lootTable	lootTable
		p	2	pos	pos
		p	3	stack	stack
		p	4	constructor	constructor
	m	(Ljava/util/Collection;Ljava/util/List;Lui$a;)I	a	executeGive
		p	0	players	players
		p	1	stacks	stacks
		p	2	messageSender	messageSender
	m	(Lcq;Lcvl;Ljava/util/List;Lui$a;)I	a	executeSpawn
		p	0	source	source
		p	1	pos	pos
		p	2	stacks	stacks
		p	3	messageSender	messageSender
	m	(Lcq;Lfk;Ljava/util/List;Lui$a;)I	a	executeInsert
		p	0	source	source
		p	1	targetPos	targetPos
		p	2	stacks	stacks
		p	3	messageSender	messageSender
	m	(Lcom/mojang/brigadier/context/CommandContext;Lakq;Lui$b;)I	a	executeKill
		p	0	context	context
		p	1	entity	entity
		p	2	constructor	constructor
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lui$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargetArguments
		p	0	rootArgument	rootArgument
		p	1	sourceConstructor	sourceConstructor
	m	(Lcq;Lakv;)Lben;	a	getHeldItem
		p	0	source	source
		p	1	slot	slot
	m	(Ljava/util/Collection;IILjava/util/List;Lui$a;)I	a	executeReplace
		p	0	targets	targets
		p	1	slot	slot
		p	2	stackCount	stackCount
		p	3	stacks	stacks
		p	4	messageSender	messageSender
	m	(Lcq;Ljava/util/List;)V	a	sendDroppedFeedback
		p	0	source	source
		p	1	stacks	stacks
	m	(Lcq;Lfk;IILjava/util/List;Lui$a;)I	a	executeBlock
		p	0	source	source
		p	1	targetPos	targetPos
		p	2	slot	slot
		p	3	stackCount	stackCount
		p	4	stacks	stacks
		p	5	messageSender	messageSender
	m	(Lben;Lben;)Z	a	itemsMatch
		p	0	first	first
		p	1	second	second
	m	(Lcq;Ljava/util/List;Lsm;)V	a	sendDroppedFeedback
		p	0	source	source
		p	1	stacks	stacks
		p	2	lootTable	lootTable
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Lsm;Lcrx;Lui$b;)I	a	getFeedbackMessageSingle
		p	0	context	context
		p	1	lootTable	lootTable
		p	2	lootContext	lootContext
		p	3	constructor	constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lsm;Lui$b;)I	a	executeLoot
		p	0	context	context
		p	1	lootTable	lootTable
		p	2	constructor	constructor
	m	(Lcq;Lfk;)Laje;	a	getBlockInventory
		p	0	source	source
		p	1	pos	pos
c	ui$a	net/minecraft/server/command/LootCommand$FeedbackMessage
	m	(Ljava/util/List;)V	accept	accept
		p	1	items	items
c	ui$b	net/minecraft/server/command/LootCommand$Target
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lui$a;)I	accept	accept
		p	1	context	context
		p	2	items	items
		p	3	messageSender	messageSender
c	ui$c	net/minecraft/server/command/LootCommand$SourceConstructor
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lui$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	construct	construct
		p	1	builder	builder
		p	2	target	target
c	uj	net/minecraft/server/command/MessageCommand
	m	(Lcq;Ljava/util/Collection;Llf;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	message	message
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	uk	net/minecraft/server/dedicated/command/OpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_OPPED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;)I	a	op
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	ul	net/minecraft/server/dedicated/command/PardonCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_UNBANNED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;)I	a	pardon
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	um	net/minecraft/server/dedicated/command/PardonIpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_IP_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ALREADY_UNBANNED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcq;Ljava/lang/String;)I	a	pardonIp
c	un	net/minecraft/server/command/ParticleCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCPETION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lgt;Lcvl;Lcvl;FIZLjava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	parameters	parameters
		p	2	pos	pos
		p	3	delta	delta
		p	4	speed	speed
		p	5	count	count
		p	6	force	force
		p	7	viewers	viewers
c	uo	net/minecraft/server/command/PlaySoundCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;Lsm;Laaj;Lcvl;FFF)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	sound	sound
		p	3	category	category
		p	4	pos	pos
		p	5	volume	volume
		p	6	pitch	pitch
		p	7	minVolume	minVolume
	m	(Laaj;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	makeArgumentsForCategory
		p	0	category	category
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	up	net/minecraft/server/command/PublishCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ALREADY_PUBLISHED_EXCEPTION
	m	(Lcq;I)I	a	execute
		p	0	source	source
		p	1	port	port
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ur	net/minecraft/server/command/RecipeCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	GIVE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	TAKE_FAILED_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ljava/util/Collection;Ljava/util/Collection;)I	a	executeGive
		p	0	source	source
		p	1	targets	targets
		p	2	recipes	recipes
	m	(Lcq;Ljava/util/Collection;Ljava/util/Collection;)I	b	executeTake
		p	0	source	source
		p	1	targets	targets
		p	2	recipes	recipes
c	us	net/minecraft/server/command/ReloadCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ut	net/minecraft/server/command/ReplaceItemCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	BLOCK_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	SLOT_INAPPLICABLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ENTITY_FAILED_EXCEPTION
	m	(Lcq;Lfk;ILben;)I	a	executeBlock
		p	0	source	source
		p	1	pos	pos
		p	2	slot	slot
		p	3	item	item
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ljava/util/Collection;ILben;)I	a	executeEntity
		p	0	source	source
		p	1	targets	targets
		p	2	slot	slot
		p	3	item	item
c	uu	net/minecraft/server/dedicated/command/SaveAllCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	SAVE_FAILED_EXCEPTION
	m	(Lcq;Z)I	a	saveAll
		p	0	source	source
		p	1	flush	flush
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	uv	net/minecraft/server/dedicated/command/SaveOffCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_OFF_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	uw	net/minecraft/server/dedicated/command/SaveOnCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_ON_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	ux	net/minecraft/server/command/SayCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	uy	net/minecraft/server/command/ScheduleCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	SAME_TICK_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lcom/mojang/datafixers/util/Either;IZ)I	a	execute
		p	2	time	time
c	uz	net/minecraft/server/command/ScoreboardCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	OBJECTIVES_ADD_DUPLICATE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	OBJECTIVES_DISPLAY_ALREADYEMPTY_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	OBJECTIVES_DISPLAY_ALREADYSET_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	PLAYERS_ENABLE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	PLAYERS_ENABLE_INVALID_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	PLAYERS_GET_NULL_EXCEPTION
	m	(Lcq;Ljava/lang/String;Lcwi;)I	a	executeGet
		p	0	source	source
		p	1	target	target
		p	2	objective	objective
	m	(Lcq;Lcwi;Llf;)I	a	executeModifyObjective
		p	0	source	source
		p	1	objective	objective
		p	2	displayName	displayName
	m	(Lcq;Ljava/lang/String;)I	a	executeListScores
		p	0	source	source
		p	1	target	target
	m	(Lcq;Lcwi;Lcwo$a;)I	a	executeModifyRenderType
		p	0	source	source
		p	1	objective	objective
		p	2	type	type
	m	(Lcq;I)I	a	executeClearDisplay
		p	0	source	source
		p	1	slot	slot
	m	(Lcq;Ljava/util/Collection;Lcwi;)I	a	executeEnable
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	makeRenderTypeArguments
	m	(Lcq;)I	a	executeListPlayers
		p	0	source	source
	m	(Lcq;Ljava/util/Collection;Lcwi;Ldi$a;Ljava/util/Collection;Lcwi;)I	a	executeOperation
		p	0	source	source
		p	1	targets	targets
		p	2	targetObjective	targetObjective
		p	3	operation	operation
		p	4	sources	sources
		p	5	sourceObjectives	sourceObjectives
	m	(Lcq;ILcwi;)I	a	executeSetDisplay
		p	0	source	source
		p	1	slot	slot
		p	2	objective	objective
	m	(Lcq;Ljava/util/Collection;Lcwi;I)I	a	executeSet
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	score	score
	m	(Lcq;Ljava/util/Collection;)I	a	executeReset
		p	0	source	source
		p	1	targets	targets
	m	(Lcq;Ljava/lang/String;Lcwo;Llf;)I	a	executeAddObjective
		p	0	source	source
		p	1	objective	objective
		p	2	criteria	criteria
		p	3	displayName	displayName
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lcwi;)I	a	executeRemoveObjective
		p	0	source	source
		p	1	objective	objective
	m	(Lcq;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestDisabled
		p	0	source	source
		p	1	targets	targets
		p	2	suggestionsBuilder	suggestionsBuilder
	m	(Lcq;Ljava/util/Collection;Lcwi;)I	b	executeReset
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
	m	(Lcq;)I	b	executeListObjectives
		p	0	source	source
	m	(Lcq;Ljava/util/Collection;Lcwi;I)I	b	executeAdd
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	score	score
	m	(Lcq;Ljava/util/Collection;Lcwi;I)I	c	executeRemove
		p	0	source	source
		p	1	targets	targets
		p	2	objective	objective
		p	3	score	score
c	v	net/minecraft/advancement/AdvancementManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	advancements
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	dependents
	f	Lv$a;	e	listener
	m	()V	a	clear
	m	(Lu;)V	a	remove
	m	(Lsm;)Lu;	a	get
	m	(Ljava/util/Map;)V	a	load
	m	(Ljava/util/Set;)V	a	removeAll
	m	(Lv$a;)V	a	setListener
	m	()Ljava/lang/Iterable;	b	getRoots
	m	()Ljava/util/Collection;	c	getAdvancements
c	v$a	net/minecraft/advancement/AdvancementManager$Listener
	m	()V	a	onClear
	m	(Lu;)V	a	onRootAdded
		p	1	root	root
	m	(Lu;)V	b	onRootRemoved
		p	1	root	root
	m	(Lu;)V	c	onDependentAdded
		p	1	dependent	dependent
	m	(Lu;)V	d	onDependentRemoved
		p	1	dependent	dependent
c	va	net/minecraft/server/command/SeedCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vb	net/minecraft/server/command/SetBlockCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcq;Lfk;Lds;Lvb$b;Ljava/util/function/Predicate;)I	a	execute
		p	0	source	source
		p	1	pos	pos
		p	2	block	block
		p	3	mode	mode
		p	4	condition	condition
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vb$a	net/minecraft/server/command/SetBlockCommand$Filter
	m	(Lclb;Lfk;Lds;Lxd;)Lds;	filter	filter
		p	1	box	box
		p	2	pos	pos
		p	3	block	block
		p	4	world	world
c	vb$b	net/minecraft/server/command/SetBlockCommand$Mode
c	vc	net/minecraft/server/dedicated/command/SetIdleTimeoutCommand
	m	(Lcq;I)I	a	execute
		p	0	source	source
		p	1	minutes	minutes
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	vd	net/minecraft/server/command/SpawnPointCommand
	m	(Lcq;Ljava/util/Collection;Lfk;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	pos	pos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	ve	net/minecraft/server/command/SetWorldSpawnCommand
	m	(Lcq;Lfk;)I	a	execute
		p	0	source	source
		p	1	pos	pos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vf	net/minecraft/server/command/SpectateCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	SPECTATE_SELF_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	NOT_SPECTATOR_EXCEPTION
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lakq;Lxe;)I	a	execute
		p	0	source	source
		p	2	player	player
c	vg	net/minecraft/server/command/SpreadPlayersCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	a	FAILED_TEAMS_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	FAILED_ENTITIES_EXCEPTION
	m	(Lcq;Lcvk;FFZLjava/util/Collection;)I	a	execute
		p	0	source	source
		p	1	center	center
		p	2	spreadDistance	spreadDistance
		p	3	maxRange	maxRange
		p	4	respectTeams	respectTeams
		p	5	targets	targets
	m	(Ljava/util/Collection;)I	a	getPileCountRespectingTeams
		p	0	entities	entities
	m	(Lcvk;DLxd;Ljava/util/Random;DDDD[Lvg$a;Z)V	a	spread
		p	0	center	center
		p	1	spreadDistance	spreadDistance
		p	3	world	world
		p	4	random	random
		p	5	minX	minX
		p	7	minZ	minZ
		p	9	maxX	maxX
		p	11	maxZ	maxZ
		p	13	piles	piles
		p	14	respectTeams	respectTeams
	m	(Ljava/util/Collection;Lxd;[Lvg$a;Z)D	a	getMinimumDistance
		p	0	entities	entities
		p	1	world	world
		p	2	piles	piles
		p	3	betweenTeams	betweenTeams
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Ljava/util/Random;IDDDD)[Lvg$a;	a	makePiles
		p	0	random	random
		p	1	count	count
		p	2	minX	minX
		p	4	minZ	minZ
		p	6	maxX	maxX
		p	8	maxZ	maxZ
c	vg$a	net/minecraft/server/command/SpreadPlayersCommand$Pile
	f	D	a	x
	f	D	b	z
	m	()V	a	normalize
	m	(DDDD)Z	a	clamp
		p	1	minX	minX
		p	3	minZ	minZ
		p	5	maxX	maxX
		p	7	maxZ	maxZ
	m	(Lvg$a;)D	a	getDistance
		p	1	other	other
	m	(Ljava/util/Random;DDDD)V	a	setPileLocation
		p	1	random	random
		p	2	minX	minX
		p	4	minZ	minZ
		p	6	maxX	maxX
		p	8	maxZ	maxZ
	m	(Lbjg;)I	a	getY
		p	1	blockView	blockView
	m	()F	b	absolute
	m	(Lvg$a;)V	b	subtract
		p	1	other	other
	m	(Lbjg;)Z	b	isSafe
		p	1	world	world
c	vh	net/minecraft/server/dedicated/command/StopCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	vi	net/minecraft/server/command/StopSoundCommand
	m	(Lcq;Ljava/util/Collection;Laaj;Lsm;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	category	category
		p	3	sound	sound
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vj	net/minecraft/server/command/SummonCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_EXCEPTION
	m	(Lcq;Lsm;Lcvl;Ljt;Z)I	a	execute
		p	0	source	source
		p	1	entity	entity
		p	2	pos	pos
		p	3	nbt	nbt
		p	4	initialize	initialize
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vk	net/minecraft/server/command/TagCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ADD_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	REMOVE_FAILED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;)I	a	executeList
		p	0	source	source
		p	1	targets	targets
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
		p	0	entities	entities
	m	(Lcq;Ljava/util/Collection;Ljava/lang/String;)I	a	executeAdd
		p	0	source	source
		p	1	targets	targets
		p	2	tag	tag
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ljava/util/Collection;Ljava/lang/String;)I	b	executeRemove
		p	0	source	source
		p	1	targets	targets
		p	2	tag	tag
c	vl	net/minecraft/server/command/TeamCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ADD_DUPLICATE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ADD_LONGNAME_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	EMPTY_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	OPTION_NAME_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	OPTION_COLOR_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	OPTION_FRIENDLYFIRE_ALREADYENABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	OPTION_FRIENDLYFIRE_ALREADYDISABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	OPTION_SEEFRIENDLYINVISIBLES_ALREADYENABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	SEEFRIENDLYINVISIBLES_ALREADYDSISABLED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	OPTION_NAMETAGEVISIBILITY_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	OPTION_DEATHMESSAGEVISIBILITY_UNCHANGED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	l	OPTION_COLLISIONRULE_UNCHANGED_EXCEPTION
	m	(Lcq;Lcwj;Llf;)I	a	executeModifyDisplayName
		p	0	source	source
		p	1	team	team
		p	2	displayName	displayName
	m	(Lcq;Ljava/lang/String;)I	a	executeAdd
		p	0	source	source
		p	1	team	team
	m	(Lcq;)I	a	executeListTeams
		p	0	source	source
	m	(Lcq;Lcwj;Lcwn$a;)I	a	executeModifyCollisionRule
		p	0	source	source
		p	1	team	team
		p	2	collisionRule	collisionRule
	m	(Lcq;Ljava/lang/String;Llf;)I	a	executeAdd
		p	0	source	source
		p	1	team	team
		p	2	displayName	displayName
	m	(Lcq;Lcwj;Ljava/util/Collection;)I	a	executeJoin
		p	0	source	source
		p	1	team	team
		p	2	members	members
	m	(Lcq;Ljava/util/Collection;)I	a	executeLeave
		p	0	source	source
		p	1	members	members
	m	(Lcq;Lcwj;)I	a	executeEmpty
		p	0	source	source
		p	1	team	team
	m	(Lcq;Lcwj;Lg;)I	a	executeModifyColor
		p	0	source	source
		p	1	team	team
		p	2	color	color
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lcwj;Lcwn$b;)I	a	executeModifyNametagVisibility
		p	0	source	source
		p	1	team	team
		p	2	visibility	visibility
	m	(Lcq;Lcwj;Z)I	a	executeModifySeeFriendlyInvisibles
		p	0	source	source
		p	1	team	team
		p	2	allowed	allowed
	m	(Lcq;Lcwj;)I	b	executeRemove
		p	0	source	source
		p	1	team	team
	m	(Lcq;Lcwj;Llf;)I	b	executeModifyPrefix
		p	0	source	source
		p	1	team	team
		p	2	prefix	prefix
	m	(Lcq;Lcwj;Lcwn$b;)I	b	executeModifyDeathMessageVisibility
		p	0	source	source
		p	1	team	team
		p	2	visibility	visibility
	m	(Lcq;Lcwj;Z)I	b	executeModifyFriendlyFire
		p	0	source	source
		p	1	team	team
		p	2	allowed	allowed
	m	(Lcq;Lcwj;Llf;)I	c	executeModifySuffix
		p	0	source	source
		p	1	team	team
		p	2	suffix	suffix
	m	(Lcq;Lcwj;)I	c	executeListMembers
		p	0	source	source
		p	1	team	team
c	vm	net/minecraft/server/command/TeammsgCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	NO_TEAM_EXCEPTION
	m	(Lcq;Llf;)I	a	execute
		p	0	source	source
		p	1	message	message
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vn	net/minecraft/server/command/TeleportCommand
	m	(Lcq;Ljava/util/Collection;Lxd;Ldz;Ldz;Lvn$a;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	world	world
		p	3	location	location
		p	4	rotation	rotation
		p	5	facingLocation	facingLocation
	m	(Lcq;Ljava/util/Collection;Lakq;)I	a	execute
		p	0	source	source
		p	1	targets	targets
		p	2	destination	destination
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lakq;Lxd;DDDLjava/util/Set;FFLvn$a;)V	a	teleport
		p	0	source	source
		p	1	target	target
		p	2	world	world
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	movementFlags	movementFlags
		p	10	yaw	yaw
		p	11	pitch	pitch
		p	12	facingLocation	facingLocation
c	vn$a	net/minecraft/server/command/TeleportCommand$LookTarget
	f	Lcvl;	a	targetPos
	f	Lakq;	b	targetEntity
	f	Lcx$a;	c	targetEntityAnchor
	m	(Lcq;Lakq;)V	a	look
		p	1	source	source
		p	2	entity	entity
c	vo	net/minecraft/server/command/TellRawCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
c	vp	net/minecraft/server/command/TimeCommand
	m	(Lcq;I)I	a	executeSet
		p	0	source	source
		p	1	time	time
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lxd;)I	a	getDayTime
		p	0	world	world
	m	(Lcq;I)I	b	executeAdd
		p	0	source	source
		p	1	time	time
	m	(Lcq;I)I	c	executeQuery
		p	0	source	source
		p	1	time	time
c	vq	net/minecraft/server/command/TitleCommand
	m	(Lcq;Ljava/util/Collection;III)I	a	executeTimes
		p	0	source	source
		p	1	targets	targets
		p	2	fadeIn	fadeIn
		p	3	stay	stay
		p	4	fadeOut	fadeOut
	m	(Lcq;Ljava/util/Collection;Llf;Low$a;)I	a	executeTitle
		p	0	source	source
		p	1	targets	targets
		p	2	title	title
		p	3	type	type
	m	(Lcq;Ljava/util/Collection;)I	a	executeClear
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Ljava/util/Collection;)I	b	executeReset
		p	0	source	source
		p	1	targets	targets
c	vr	net/minecraft/server/command/TriggerCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	FAILED_UMPRIMED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	FAILED_INVALID_EXCEPTION
	m	(Lcq;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
		p	0	source	source
		p	1	suggestionsBuilder	suggestionsBuilder
	m	(Lcq;Lcwk;)I	a	executeSimple
		p	0	source	source
		p	1	score	score
	m	(Lcq;Lcwk;I)I	a	executeAdd
		p	0	source	source
		p	1	score	score
		p	2	value	value
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lxe;Lcwi;)Lcwk;	a	getScore
	m	(Lcq;Lcwk;I)I	b	executeSet
		p	2	value	value
c	vs	net/minecraft/server/command/WeatherCommand
	m	(Lcq;I)I	a	executeClear
		p	0	source	source
		p	1	duration	duration
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;I)I	b	executeRain
		p	0	source	source
		p	1	duration	duration
	m	(Lcq;I)I	c	executeThunder
		p	0	source	source
		p	1	duration	duration
c	vt	net/minecraft/server/dedicated/command/WhitelistCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ALREADY_ON_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ALREADY_OFF_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ADD_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	REMOVE_FAILED_EXCEPTION
	m	(Lcq;Ljava/util/Collection;)I	a	executeAdd
		p	0	source	source
		p	1	targets	targets
	m	(Lcq;)I	a	executeReload
		p	0	source	source
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcq;)I	b	executeOn
		p	0	source	source
	m	(Lcq;Ljava/util/Collection;)I	b	executeRemove
		p	0	source	source
		p	1	targets	targets
	m	(Lcq;)I	c	executeOff
		p	0	source	source
	m	(Lcq;)I	d	executeList
		p	0	source	source
c	vu	net/minecraft/server/command/WorldBorderCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	CENTER_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	SET_FAILED_NOCHANGE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	SET_FAILED_SMALL_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	SET_FAILED_BIG_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	WARNING_TIME_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	WARNING_DISTANCE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	DAMAGE_BUFFER_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	DAMAGE_AMOUNT_FAILED_EXCEPTION
	m	(Lcq;)I	a	executeGet
		p	0	source	source
	m	(Lcq;F)I	a	executeBuffer
		p	0	source	source
		p	1	distance	distance
	m	(Lcq;I)I	a	executeWarningTime
		p	0	source	source
		p	1	time	time
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;DJ)I	a	executeSet
		p	0	source	source
		p	1	distance	distance
		p	3	time	time
	m	(Lcq;Lcvk;)I	a	executeCenter
		p	0	source	source
		p	1	pos	pos
	m	(Lcq;F)I	b	executeDamage
		p	0	source	source
		p	1	damagePerBlock	damagePerBlock
	m	(Lcq;I)I	b	executeWarningDistance
		p	0	source	source
		p	1	distance	distance
c	vv	net/minecraft/command/BlockDataObject
	f	Ljava/util/function/Function;	a	TYPE_FACTORY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_BLOCK_EXCEPTION
	f	Lbwl;	c	blockEntity
	f	Lfk;	d	pos
	m	(Lbwl;Lfk;)V	<init>	<init>
		p	1	blockEntity	blockEntity
		p	2	pos	pos
c	vw	net/minecraft/command/DataCommandObject
	m	(Ljt;)V	a	setTag
		p	1	tag	tag
	m	(Lde$h;DI)Llf;	a	feedbackGet
		p	2	scale	scale
		p	4	result	result
	m	(Lkj;)Llf;	a	feedbackQuery
		p	1	tag	tag
	m	()Ljt;	a	getTag
	m	()Llf;	b	feedbackModify
c	vx	net/minecraft/server/command/DataCommand
	f	Ljava/util/List;	a	OBJECT_TYPE_FACTORIES
	f	Ljava/util/List;	b	TARGET_OBJECT_TYPES
	f	Ljava/util/List;	c	SOURCE_OBJECT_TYPES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	MERGE_FAILED_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	GET_INVALID_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	GET_UNKNOWN_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	GET_MULTIPLE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	MODIFY_EXPECTED_LIST_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	MODIFY_EXPECTED_OBJECT_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	MODIFY_INVALID_INDEX_EXCEPTION
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addModifyArgument
		p	0	subArgumentAdder	subArgumentAdder
	m	(Lcq;Lvw;Lde$h;)I	a	executeRemove
		p	0	source	source
		p	1	object	object
		p	2	path	path
	m	(Lcom/mojang/brigadier/context/CommandContext;Lvx$c;Lvx$a;Ljava/util/List;)I	a	executeModify
		p	0	context	context
		p	1	objectType	objectType
		p	2	modifier	modifier
		p	3	tags	tags
	m	(Lcq;Lvw;)I	a	executeGet
		p	0	source	source
		p	1	object	object
	m	(Lcq;Lvw;Lde$h;D)I	a	executeGet
		p	0	source	source
		p	1	object	object
		p	2	path	path
		p	3	scale	scale
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0	dispatcher	dispatcher
	m	(Lcq;Lvw;Ljt;)I	a	executeMerge
		p	0	source	source
		p	1	object	object
		p	2	tag	tag
	m	(Lde$h;Lvw;)Lkj;	a	getTag
		p	0	path	path
		p	1	object	object
	m	(ILjt;Lde$h;Ljava/util/List;)I	a	executeInsert
		p	0	integer	integer
		p	1	sourceTag	sourceTag
		p	2	path	path
		p	3	tags	tags
	m	(Lcq;Lvw;Lde$h;)I	b	executeGet
		p	0	source	source
		p	1	object	object
		p	2	path	path
c	vx$a	net/minecraft/server/command/DataCommand$ModifyOperation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljt;Lde$h;Ljava/util/List;)I	modify	modify
		p	1	context	context
		p	2	sourceTag	sourceTag
		p	3	path	path
		p	4	tags	tags
c	vx$b	net/minecraft/server/command/DataCommand$ModifyArgumentCreator
	m	(Lvx$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	create	create
		p	1	modifier	modifier
c	vx$c	net/minecraft/server/command/DataCommand$ObjectType
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lvw;	a	getObject
		p	1	context	context
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addArgumentsToBuilder
		p	1	argument	argument
		p	2	argumentAdder	argumentAdder
c	vy	net/minecraft/command/EntityDataObject
	f	Ljava/util/function/Function;	a	TYPE_FACTORY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	INVALID_ENTITY_EXCEPTION
	f	Lakq;	c	entity
	m	(Lakq;)V	<init>	<init>
		p	1	entity	entity
c	vz	net/minecraft/command/StorageDataObject
	f	Ljava/util/function/Function;	a	TYPE_FACTORY
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGESTION_PROVIDER
	f	Lcrj;	c	storage
	f	Lsm;	d	id
	m	(Lcrj;Lsm;)V	<init>	<init>
		p	1	storage	storage
		p	2	id	id
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcrj;	b	of
c	w	net/minecraft/advancement/AdvancementProgress
	f	Ljava/util/Map;	a	criteriaProgresses
	f	[[Ljava/lang/String;	b	requirements
	m	(Lkv;)V	a	toPacket
	m	(Ljava/util/Map;[[Ljava/lang/String;)V	a	init
		p	1	criteria	criteria
		p	2	requirements	requirements
	m	(Lw;)I	a	compareTo
	m	()Z	a	isDone
	m	(Ljava/lang/String;)Z	a	obtain
	m	(Lkv;)Lw;	b	fromPacket
		p	0	buf	buf
	m	()Z	b	isAnyObtained
	m	(Ljava/lang/String;)Z	b	reset
	m	(Ljava/lang/String;)Laa;	c	getCriterionProgress
	m	()F	c	getProgressBarPercentage
	m	()Ljava/lang/String;	d	getProgressBarFraction
	m	()Ljava/lang/Iterable;	e	getUnobtainedCriteria
	m	()Ljava/lang/Iterable;	f	getObtainedCriteria
	m	()Ljava/util/Date;	g	getEarliestProgressObtainDate
	m	()I	h	countObtainedRequirements
c	w$a	net/minecraft/advancement/AdvancementProgress$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lw;	a	deserialize
	m	(Lw;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	wc	net/minecraft/server/dedicated/DedicatedPlayerManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	m	()V	A	loadOpList
	m	()V	B	saveOpList
	m	()V	C	loadWhitelist
	m	()V	D	saveWhitelist
	m	()Lwd;	b	getServer
	m	()V	w	saveIpBanList
	m	()V	x	saveUserBanList
	m	()V	y	loadIpBanList
	m	()V	z	loadUserBanList
c	wd	net/minecraft/server/dedicated/MinecraftDedicatedServer
	f	Lorg/apache/logging/log4j/Logger;	h	LOGGER
	f	Ljava/util/regex/Pattern;	i	SHA1_PATTERN
	f	Ljava/util/List;	j	commandQueue
	f	Laad;	k	queryResponseHandler
	f	Laaa;	l	rconCommandOutput
	f	Laaf;	m	rconServer
	f	Lwf;	n	propertiesLoader
	f	Lbjt;	o	defaultGameMode
	f	Lwj;	p	gui
	m	(Ljava/lang/String;Lcq;)V	a	enqueueCommand
	m	()Ljava/lang/String;	aZ	createResourcePackHash
	m	()V	ba	executeQueuedCommands
	m	()Lwc;	bb	getPlayerManager
	m	()V	bc	createGui
	m	()Z	bd	convertData
	m	()J	be	getMaxTickTime
	m	()V	bn	sleepFiveSeconds
	m	(Z)V	o	setUseWhitelist
c	we	net/minecraft/server/dedicated/ServerPropertiesHandler
	f	Ljava/lang/String;	A	resourcePackHash
	f	Ljava/lang/String;	B	resourcePackSha1
	f	Z	C	hardcore
	f	Z	D	allowNether
	f	Z	E	spawnMonsters
	f	Z	F	snooperEnabled
	f	Z	G	useNativeTransport
	f	Z	H	enableCommandBlock
	f	I	I	spawnProtection
	f	I	J	opPermissionLevel
	f	I	K	functionPermissionLevel
	f	J	L	maxTickTime
	f	I	M	viewDistance
	f	I	N	maxPlayers
	f	I	O	networkCompressionThreshold
	f	Z	P	broadcastRconToOps
	f	Z	Q	broadcastConsoleToOps
	f	I	R	maxWorldSize
	f	Lwh$a;	S	playerIdleTimeout
	f	Lwh$a;	T	whiteList
	f	Z	a	onlineMode
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	spawnAnimals
	f	Z	e	spawnNpcs
	f	Z	f	pvp
	f	Z	g	allowFlight
	f	Ljava/lang/String;	h	resourcePack
	f	Ljava/lang/String;	i	motd
	f	Z	j	forceGameMode
	f	Z	k	enforceWhitelist
	f	Z	l	generateStructures
	f	Laji;	m	difficulty
	f	Lbjt;	n	gameMode
	f	Ljava/lang/String;	o	levelName
	f	Ljava/lang/String;	p	levelSeed
	f	Lbkd;	q	levelType
	f	Ljava/lang/String;	r	generatorSettings
	f	I	s	serverPort
	f	I	t	maxBuildHeight
	f	Ljava/lang/Boolean;	u	announcePlayerAchievements
	f	Z	v	enableQuery
	f	I	w	queryPort
	f	Z	x	enableRcon
	f	I	y	rconPort
	f	Ljava/lang/String;	z	rconPassword
	m	(Ljava/nio/file/Path;)Lwe;	a	load
	m	(Ljava/util/Properties;)Lwe;	a	create
c	wf	net/minecraft/server/dedicated/ServerPropertiesLoader
	f	Ljava/nio/file/Path;	a	path
	f	Lwe;	b	propertiesHandler
	m	(Ljava/util/function/UnaryOperator;)Lwf;	a	apply
	m	()Lwe;	a	getPropertiesHandler
	m	()V	b	store
c	wg	net/minecraft/server/dedicated/DedicatedServerWatchdog
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lwd;	b	server
	f	J	c	maxTickTime
	m	()V	a	shutdown
c	wh	net/minecraft/server/dedicated/AbstractPropertiesHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Properties;	b	properties
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getDeprecated
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getDeprecatedString
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	getWithOperation
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapIntParsingFunction
	m	(Ljava/lang/String;I)I	a	getInt
	m	()Ljava/util/Properties;	a	getProperties
	m	(Ljava/lang/String;Z)Z	a	parseBoolean
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberParsingFunction
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	parseIntWithOperation
	m	(Ljava/lang/String;J)J	a	parseLong
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	getString
	m	(Ljava/lang/String;Z)Lwh$a;	b	booleanAccessor
	m	(Ljava/lang/String;I)Lwh$a;	b	intAccessor
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lwh$a;	b	accessor
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lwh$a;	b	accessor
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getDeprecatedBoolean
	m	(Ljava/util/Properties;)Lwh;	b	create
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	load
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringValue
	m	(Ljava/nio/file/Path;)V	c	store
c	wh$a	net/minecraft/server/dedicated/AbstractPropertiesHandler$PropertyAccessor
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	stringify
	m	(Ljava/lang/Object;)Lwh;	a	set
c	wj	net/minecraft/server/dedicated/gui/DedicatedServerGui
	f	Ljava/awt/Font;	a	FONT_MONOSPACE
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lwd;	c	server
	f	Ljava/lang/Thread;	d	consoleUpdateThread
	f	Ljava/util/Collection;	e	stopTasks
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	f	stopped
	m	(Lwd;)V	<init>	<init>
		p	1	server	server
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	appendToConsole
		p	1	textArea	textArea
		p	2	scrollPane	scrollPane
	m	(Ljava/lang/Runnable;)V	a	addStopTask
		p	1	task	task
	m	()V	a	start
	m	(Lwd;)Lwj;	a	create
	m	()V	b	stop
	m	()Ljavax/swing/JComponent;	c	createStatsPanel
	m	()Ljavax/swing/JComponent;	d	createPlaysPanel
	m	()Ljavax/swing/JComponent;	e	createLogPanel
	m	()V	f	runStopTasks
c	wk	net/minecraft/server/dedicated/gui/PlayerListGui
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tick
	m	()V	a	tick
c	wl	net/minecraft/server/dedicated/gui/PlayerStatsGui
	f	Ljava/text/DecimalFormat;	a	AVG_TICK_FORMAT
	f	[I	b	memoryUsePercentage
	f	I	c	memoryusePctPos
	f	[Ljava/lang/String;	d	lines
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
	m	([J)D	a	average
	m	()V	a	stop
	m	()V	b	update
c	wn	net/minecraft/client/render/BlockBreakingInfo
	f	I	a	actorNetworkId
	f	Lfk;	b	pos
	f	I	c	stage
	f	I	d	lastUpdateTick
	m	(ILfk;)V	<init>	<init>
		p	1	breakingEntityId	breakingEntityId
		p	2	pos	pos
	m	(I)V	a	setStage
		p	1	stage	stage
	m	(Lwn;)I	a	compareTo
	m	()Lfk;	b	getPos
	m	(I)V	b	setLastUpdateTick
		p	1	lastUpdateTick	lastUpdateTick
	m	()I	c	getStage
	m	()I	d	getLastUpdateTick
c	wo	net/minecraft/server/world/ChunkHolder
	f	Lcom/mojang/datafixers/util/Either;	a	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	b	UNLOADED_CHUNK_FUTURE
	f	Lcom/mojang/datafixers/util/Either;	c	UNLOADED_WORLD_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	d	UNLOADED_WORLD_CHUNK_FUTURE
	f	Ljava/util/List;	e	CHUNK_STATUSES
	f	[Lwo$b;	f	LEVEL_TYPES
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	g	futuresByStatus
	f	Ljava/util/concurrent/CompletableFuture;	h	borderFuture
	f	Ljava/util/concurrent/CompletableFuture;	i	tickingFuture
	f	Ljava/util/concurrent/CompletableFuture;	j	entityTickingFuture
	f	Ljava/util/concurrent/CompletableFuture;	k	future
	f	I	l	lastTickLevel
	f	I	m	level
	f	I	n	completedLevel
	f	Lbjh;	o	pos
	f	[S	p	blockUpdatePositions
	f	I	q	blockUpdateCount
	f	I	r	sectionsNeedingUpdateMask
	f	I	s	lightSentWithBlocksBits
	f	I	t	blockLightUpdateBits
	f	I	u	skyLightUpdateBits
	f	Lcoa;	v	lightingProvider
	f	Lwo$c;	w	levelUpdateListener
	f	Lwo$d;	x	playersWatchingChunkProvider
	m	(Lbjh;ILcoa;Lwo$c;Lwo$d;)V	<init>	<init>
		p	1	pos	pos
		p	2	level	level
		p	5	playersWatchingChunkProvider	playersWatchingChunkProvider
	m	(I)V	a	setLevel
		p	1	level	level
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	updateFuture
		p	1	newChunkFuture	newChunkFuture
	m	(Lcae;Lwp;)Ljava/util/concurrent/CompletableFuture;	a	createFuture
		p	1	targetStatus	targetStatus
		p	2	chunkStorage	chunkStorage
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingFuture
	m	(Lwp;)V	a	tick
		p	1	chunkStorage	chunkStorage
	m	(Lcal;)V	a	flushUpdates
	m	(Lbjw;Lfk;)V	a	sendBlockEntityUpdatePacket
		p	1	world	world
		p	2	pos	pos
	m	(Lcae;)Ljava/util/concurrent/CompletableFuture;	a	getFuture
		p	1	leastStatus	leastStatus
	m	(Llt;Z)V	a	sendPacketToPlayersWatching
		p	2	onlyOnWatchDistanceEdge	onlyOnWatchDistanceEdge
	m	(Lbkf;I)V	a	markForLightUpdate
		p	1	type	type
		p	2	y	y
	m	(III)V	a	markForBlockUpdate
		p	1	x	x
		p	2	y	y
		p	3	z	z
	m	(I)Lcae;	b	getTargetGenerationStatus
		p	0	level	level
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingFuture
	m	(I)Lwo$b;	c	getLevelType
		p	0	distance	distance
	m	()Lcal;	d	getWorldChunk
	m	(I)V	d	setCompletedLevel
		p	1	level	level
	m	()Lbzy;	f	getCompletedChunk
	m	()Ljava/util/concurrent/CompletableFuture;	g	getFuture
	m	()Lbjh;	i	getPos
	m	()I	j	getLevel
	m	()I	k	getCompletedLevel
c	wo$a	net/minecraft/server/world/ChunkHolder$Unloaded
	f	Lwo$a;	b	INSTANCE
c	wo$b	net/minecraft/server/world/ChunkHolder$LevelType
	m	(Lwo$b;)Z	a	isAfter
		p	1	levelType	levelType
c	wo$c	net/minecraft/server/world/ChunkHolder$LevelUpdateListener
	m	(Lbjh;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	a	updateLevel
		p	1	pos	pos
		p	2	levelGetter	levelGetter
		p	3	targetLevel	targetLevel
		p	4	levelSetter	levelSetter
c	wo$d	net/minecraft/server/world/ChunkHolder$PlayersWatchingChunkProvider
	m	(Lbjh;Z)Ljava/util/stream/Stream;	a	getPlayersWatchingChunk
		p	1	chunkPos	chunkPos
		p	2	onlyOnWatchDistanceEdge	onlyOnWatchDistanceEdge
c	wp	net/minecraft/server/world/ThreadedAnvilChunkStorage
	f	I	A	watchDistance
	f	I	a	MAX_LEVEL
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	d	currentChunkHolders
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	e	chunkHolders
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	loadedChunks
	f	Lxd;	h	world
	f	Lxg;	i	serverLightingProvider
	f	Lais;	j	mainThreadExecutor
	f	Lcaa;	k	chunkGenerator
	f	Ljava/util/function/Supplier;	l	persistentStateManagerFactory
	f	Lasr;	m	pointOfInterestStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	n	unloadedChunks
	f	Z	o	chunkHolderListDirty
	f	Lwr;	p	chunkTaskPrioritySystem
	f	Laiu;	q	worldgenExecutor
	f	Laiu;	r	mainExecutor
	f	Lxm;	s	worldGenerationProgressListener
	f	Lwp$a;	t	ticketManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	u	totalChunksLoadedCount
	f	Lcmo;	v	structureManager
	f	Ljava/io/File;	w	saveDir
	f	Lwy;	x	playerChunkWatchingManager
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	y	entityTrackers
	m	(Lxd;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;Lcmo;Ljava/util/concurrent/Executor;Lais;Lcan;Lcaa;Lxm;Ljava/util/function/Supplier;I)V	<init>	<init>
		p	1	world	world
		p	3	dataFixer	dataFixer
		p	5	workerExecutor	workerExecutor
		p	6	mainThreadExecutor	mainThreadExecutor
		p	7	chunkProvider	chunkProvider
		p	8	chunkGenerator	chunkGenerator
		p	9	worldGenerationProgressListener	worldGenerationProgressListener
	m	(Lbjh;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	createChunkRegionFuture
		p	1	centerChunk	centerChunk
		p	2	margin	margin
		p	3	distanceToStatus	distanceToStatus
	m	()Lxg;	a	getLightProvider
	m	(Lxe;Z)V	a	handlePlayerAddedOrRemoved
		p	1	player	player
		p	2	added	added
	m	(Lcae;I)Lcae;	a	getRequiredStatusForGeneration
		p	1	centerChunkTargetStatus	centerChunkTargetStatus
		p	2	distance	distance
	m	(Lbjh;Lakq;)D	a	getSquaredDistance
		p	0	pos	pos
		p	1	entity	entity
	m	(Lwo;Lcae;)Ljava/util/concurrent/CompletableFuture;	a	createChunkFuture
	m	(Lbjh;II)I	a	getChebyshevDistance
		p	0	pos	pos
		p	1	x	x
		p	2	z	z
	m	(Lwo;)Ljava/util/concurrent/CompletableFuture;	a	createTickingFuture
	m	(Z)V	a	save
		p	1	flush	flush
	m	(Lxe;)V	a	updateCameraPosition
		p	1	player	player
	m	(Lxe;[Llt;Lcal;)V	a	sendChunkDataPackets
		p	1	player	player
		p	2	packets	packets
		p	3	chunk	chunk
	m	(Lakq;)V	a	loadEntity
	m	(Lbzy;)Z	a	save
	m	(Lakq;Llt;)V	a	sendToOtherNearbyPlayers
		p	1	entity	entity
		p	2	packet	packet
	m	(J)Lwo;	a	getCurrentChunkHolder
		p	1	pos	pos
	m	(I)V	a	setViewDistance
		p	1	watchDistance	watchDistance
	m	(JILwo;I)Lwo;	a	setLevel
		p	1	pos	pos
		p	3	level	level
		p	4	holder	holder
	m	(Lxe;Lbjh;[Llt;ZZ)V	a	sendWatchPackets
		p	1	player	player
		p	2	pos	pos
		p	3	packets	packets
		p	4	withinMaxWatchDistance	withinMaxWatchDistance
		p	5	withinViewDistance	withinViewDistance
	m	(Ljava/io/Writer;)V	a	exportChunks
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lbjh;Lxe;Z)I	b	getChebyshevDistance
		p	0	pos	pos
		p	1	player	player
		p	2	useCameraPosition	useCameraPosition
	m	(Lwo;)Ljava/util/concurrent/CompletableFuture;	b	createBorderFuture
	m	(Lakq;)V	b	unloadEntity
	m	(Lbjh;)Ljava/util/concurrent/CompletableFuture;	b	createEntityTickingChunkFuture
		p	1	pos	pos
	m	(J)Lwo;	b	getChunkHolder
		p	1	pos	pos
	m	()Z	b	updateHolderMap
	m	(Lxe;)Z	b	doesNotGenerateChunks
		p	1	player	player
	m	(Lakq;Llt;)V	b	sendToNearbyPlayers
		p	1	entity	entity
		p	2	packet	packet
	m	(Lwo;)Ljava/util/concurrent/CompletableFuture;	c	convertToFullChunk
	m	(Lbjh;)V	c	releaseLightTicket
		p	1	pos	pos
	m	()I	c	getTotalChunksLoadedCount
	m	(J)Ljava/util/function/IntSupplier;	c	getCompletedLevelSupplier
		p	1	pos	pos
	m	()I	d	getLoadedChunkCount
	m	(Lbjh;)Z	d	isTooFarFromPlayersToSpawnMobs
	m	()Lwp$a;	e	getTicketManager
	m	()Ljava/lang/Iterable;	f	entryIterator
	m	(Lbjh;)Ljt;	g	getUpdatedChunkTag
		p	1	pos	pos
	m	()V	g	tickPlayerMovement
	m	()Lasr;	h	getPointOfInterestStorage
c	wp$a	net/minecraft/server/world/ThreadedAnvilChunkStorage$TicketManager
	m	(Lwp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	workerExecutor	workerExecutor
		p	2	mainThreadExecutor	mainThreadExecutor
c	wp$b	net/minecraft/server/world/ThreadedAnvilChunkStorage$EntityTracker
	f	Lxc;	b	entry
	f	Lakq;	c	entity
	f	I	d	maxDistance
	f	Lgd;	e	lastCameraPosition
	f	Ljava/util/Set;	f	playersTracking
	m	(Lwp;Lakq;IIZ)V	<init>	<init>
		p	2	maxDistance	maxDistance
		p	3	tickInterval	tickInterval
	m	()V	a	stopTracking
	m	(Ljava/util/List;)V	a	updateCameraPosition
		p	1	players	players
	m	(Llt;)V	a	sendToOtherNearbyPlayers
		p	1	packet	packet
	m	(Lxe;)V	a	stopTracking
	m	(Llt;)V	b	sendToNearbyPlayers
		p	1	packet	packet
	m	()I	b	getMaxTrackDistance
	m	(Lxe;)V	b	updateCameraPosition
		p	1	player	player
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	wq	net/minecraft/server/world/LevelPrioritizedQueue
	f	I	a	LEVEL_COUNT
	f	Ljava/util/List;	b	levelToPosToElements
	f	I	c	firstNonEmptyLevel
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	chunkPositions
	f	I	f	maxSize
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1	name	name
		p	2	maxSize	maxSize
	m	(Ljava/util/Optional;JI)V	a	add
		p	1	element	element
		p	2	pos	pos
		p	4	level	level
	m	(ILbjh;I)V	a	updateLevel
		p	1	fromLevel	fromLevel
		p	2	pos	pos
		p	3	toLevel	toLevel
	m	(JZ)V	a	clearPosition
		p	1	pos	pos
		p	3	includePresent	includePresent
	m	(J)Ljava/lang/Runnable;	a	createPositionAdder
		p	1	pos	pos
	m	()Ljava/util/stream/Stream;	a	poll
c	wr	net/minecraft/server/world/ChunkTaskPrioritySystem
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	queues
	f	Ljava/util/Set;	c	actors
	f	Laiv;	d	sorter
	m	(Ljava/util/List;Ljava/util/concurrent/Executor;I)V	<init>	<init>
		p	1	actors	actors
		p	2	executor	executor
		p	3	maxQueues	maxQueues
	m	(Lwo;Ljava/lang/Runnable;)Lwr$a;	a	createMessage
		p	0	holder	holder
		p	1	runnable	runnable
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lwr$a;	a	createMessage
		p	0	runnable	runnable
		p	1	pos	pos
		p	3	lastLevelUpdatedToProvider	lastLevelUpdatedToProvider
	m	(Lwq;Laiu;)V	a	method_17630
		p	2	actor	actor
	m	(Laiu;JLjava/lang/Runnable;Z)V	a	sort
	m	(Laiu;)Laiu;	a	createSorterExecutor
		p	1	executor	executor
	m	(Ljava/lang/Runnable;JZ)Lwr$b;	a	createSorterMessage
		p	0	runnable	runnable
		p	1	pos	pos
	m	(Laiu;Z)Laiu;	a	createExecutor
		p	1	executor	executor
	m	(Laiu;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V	a	execute
		p	1	actor	actor
		p	5	lastLevelUpdatedToProvider	lastLevelUpdatedToProvider
	m	(Laiu;)Lwq;	b	getQueue
		p	1	actor	actor
c	wr$a	net/minecraft/server/world/ChunkTaskPrioritySystem$Task
	f	Ljava/util/function/Function;	a	function
	f	J	b	pos
	f	Ljava/util/function/IntSupplier;	c	lastLevelUpdatedToProvider
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V	<init>	<init>
		p	1	function	function
		p	2	pos	pos
		p	4	lastLevelUpdatedToProvider	lastLevelUpdatedToProvider
c	wr$b	net/minecraft/server/world/ChunkTaskPrioritySystem$SorterMessage
	f	Ljava/lang/Runnable;	a	runnable
	f	J	b	pos
	m	(Ljava/lang/Runnable;JZ)V	<init>	<init>
		p	1	runnable	runnable
		p	2	pos	pos
c	ws	net/minecraft/util/ChunkPosDistanceLevelPropagator
	m	(III)V	<init>	<init>
		p	1	levelCount	levelCount
		p	2	initLevelCapacity	initLevelCapacity
		p	3	initTotalCapacity	initTotalCapacity
	m	(J)I	b	getInitialLevel
		p	1	id	id
	m	(JIZ)V	b	updateLevel
		p	1	chunkPos	chunkPos
		p	3	distance	distance
		p	4	decrease	decrease
c	wt	net/minecraft/util/math/ColumnPos
	f	I	a	x
	f	I	b	z
	m	(Lfk;)V	<init>	<init>
		p	1	pos	pos
	m	(II)V	<init>	<init>
		p	1	x	x
		p	2	z	z
c	wu	net/minecraft/server/network/DemoServerPlayerInteractionManager
	f	Z	c	sentHelp
	f	Z	d	demoEnded
	f	I	e	reminderTicks
	f	I	f	tick
	m	()V	e	sendDemoReminder
c	wv	net/minecraft/server/world/SecondaryServerWorld
	m	(Lxd;Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Lcrn;Lcbi;Laio;Lxm;)V	<init>	<init>
		p	1	world	world
		p	2	server	server
		p	3	workerExecutor	workerExecutor
		p	4	worldSaveHandler	worldSaveHandler
		p	5	dimensionType	dimensionType
		p	6	profiler	profiler
		p	7	worldGenerationProgressListener	worldGenerationProgressListener
c	ww	net/minecraft/server/world/ChunkTicketManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	NEARBY_PLAYER_TICKET_LEVEL
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	playersByChunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	d	ticketsByPosition
	f	Lww$a;	e	distanceFromTicketTracker
	f	Lww$b;	f	distanceFromNearestPlayerTracker
	f	Lww$c;	g	nearbyChunkTicketUpdater
	f	Ljava/util/Set;	h	chunkHolders
	f	Lwr;	i	levelUpdateListener
	f	Laiu;	j	playerTicketThrottler
	f	Laiu;	k	playerTicketThrottlerSorter
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	l	chunkPositions
	f	Ljava/util/concurrent/Executor;	m	mainThreadExecutor
	f	J	n	age
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	workerExecutor	workerExecutor
		p	2	mainThreadExecutor	mainThreadExecutor
	m	(Lbjh;Z)V	a	setChunkForced
		p	1	pos	pos
		p	2	forced	forced
	m	(Labw;)I	a	getLevel
	m	(JLxh;)V	a	addTicket
		p	1	position	position
	m	(Lgd;Lxe;)V	a	handleChunkEnter
		p	1	pos	pos
	m	(Lxi;Lbjh;ILjava/lang/Object;)V	a	addTicketWithLevel
		p	1	type	type
		p	2	pos	pos
		p	3	level	level
		p	4	argument	argument
	m	(J)Z	a	isUnloaded
		p	1	pos	pos
	m	(I)V	a	setWatchDistance
		p	1	viewDistance	viewDistance
	m	(JILwo;I)Lwo;	a	setLevel
		p	1	pos	pos
		p	3	level	level
		p	4	holder	holder
	m	(Lwp;)Z	a	tick
		p	1	chunkStorage	chunkStorage
	m	()V	a	purge
	m	(Lgd;Lxe;)V	b	handleChunkLeave
		p	1	pos	pos
		p	2	player	player
	m	()I	b	getLevelCount
	m	(Lxi;Lbjh;ILjava/lang/Object;)V	b	removeTicketWithLevel
		p	1	type	type
		p	2	pos	pos
		p	3	level	level
		p	4	argument	argument
	m	(JLxh;)V	b	removeTicket
		p	1	pos	pos
		p	3	ticket	ticket
	m	(J)Lwo;	b	getChunkHolder
		p	1	pos	pos
	m	(Lxi;Lbjh;ILjava/lang/Object;)V	c	addTicket
		p	1	type	type
		p	2	pos	pos
		p	3	radius	radius
		p	4	argument	argument
	m	(Lxi;Lbjh;ILjava/lang/Object;)V	d	removeTicket
		p	1	type	type
		p	2	pos	pos
		p	3	radius	radius
		p	4	argument	argument
	m	(J)Labw;	e	getTicketSet
		p	1	position	position
c	ww$a	net/minecraft/server/world/ChunkTicketManager$TicketDistanceLevelPropagator
	m	(I)I	a	update
		p	1	distance	distance
c	ww$b	net/minecraft/server/world/ChunkTicketManager$DistanceFromNearestPlayerTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	distanceFromNearestPlayer
	f	I	b	maxDistance
	m	(Lww;I)V	<init>	<init>
		p	1	maxDistance	maxDistance
	m	()V	a	updateLevels
	m	(JII)V	a	onDistanceChange
		p	1	pos	pos
		p	3	oldDistance	oldDistance
		p	4	distance	distance
	m	(J)Z	d	isPlayerInChunk
		p	1	chunkPos	chunkPos
c	ww$c	net/minecraft/server/world/ChunkTicketManager$NearbyChunkTicketUpdater
	f	I	e	watchDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	f	distances
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	positionsAffected
	m	(Lww;I)V	<init>	<init>
		p	1	maxDistance	maxDistance
	m	(I)V	a	setWatchDistance
		p	1	watchDistance	watchDistance
	m	(JIZZ)V	a	updateTicket
		p	1	pos	pos
		p	3	distance	distance
		p	4	oldWithinViewDistance	oldWithinViewDistance
		p	5	withinViewDistance	withinViewDistance
	m	(I)Z	c	isWithinViewDistance
		p	1	distance	distance
c	wy	net/minecraft/server/world/PlayerChunkWatchingManager
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	watchingPlayers
	m	(JJLxe;)V	a	movePlayer
		p	1	prevPos	prevPos
		p	3	currentPos	currentPos
	m	(JLxe;)V	a	remove
	m	(JLxe;Z)V	a	add
		p	4	watchDisabled	watchDisabled
	m	(Lxe;)V	a	disableWatch
	m	(J)Ljava/util/stream/Stream;	a	getPlayersWatchingChunk
	m	(Lxe;)V	b	enableWatch
	m	(Lxe;)Z	d	isWatchDisabled
c	wz	net/minecraft/util/SectionDistanceLevelPropagator
	m	(III)V	<init>	<init>
		p	1	levelCount	levelCount
		p	2	initialLevelCapacity	initialLevelCapacity
		p	3	initialTotalCapacity	initialTotalCapacity
	m	(J)I	b	getInitialLevel
		p	1	id	id
	m	(JIZ)V	b	update
		p	1	id	id
		p	3	level	level
		p	4	decrease	decrease
c	x	net/minecraft/advancement/AdvancementRewards
	f	Lx;	a	NONE
	f	I	b	experience
	f	[Lsm;	c	loot
	f	[Lsm;	d	recipes
	f	Lcn$a;	e	function
	m	(I[Lsm;[Lsm;Lcn$a;)V	<init>	<init>
		p	1	experience	experience
		p	2	loot	loot
		p	3	recipes	recipes
	m	(Lxe;)V	a	apply
	m	()Lcom/google/gson/JsonElement;	b	toJson
c	x$a	net/minecraft/advancement/AdvancementRewards$Builder
	f	I	a	experience
	f	Ljava/util/List;	b	loot
	f	Ljava/util/List;	c	recipes
	f	Lsm;	d	function
	m	()Lx;	a	build
	m	(I)Lx$a;	a	experience
		p	0	experience	experience
	m	(I)Lx$a;	b	setExperience
		p	1	experience	experience
	m	(Lsm;)Lx$a;	c	recipe
		p	0	recipe	recipe
	m	(Lsm;)Lx$a;	d	addRecipe
		p	1	recipe	recipe
c	x$b	net/minecraft/advancement/AdvancementRewards$Deserializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lx;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
c	xa	net/minecraft/entity/boss/ServerBossBar
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
	m	(Llf;Lajb$a;Lajb$b;)V	<init>	<init>
		p	1	displayName	displayName
		p	2	color	color
		p	3	style	style
	m	(Lmk$a;)V	a	sendPacket
		p	1	type	type
	m	(Lxe;)V	a	addPlayer
		p	1	player	player
	m	(Lxe;)V	b	removePlayer
		p	1	player	player
	m	()V	b	clearPlayers
	m	(Z)V	d	setVisible
		p	1	visible	visible
	m	()Z	g	isVisible
	m	()Ljava/util/Collection;	h	getPlayers
c	xb	net/minecraft/server/world/ServerChunkManager
	f	Lwp;	a	threadedAnvilChunkStorage
	f	I	b	CHUNKS_ELIGIBLE_FOR_SPAWNING
	f	Ljava/util/List;	c	CHUNK_STATUSES
	f	Lww;	d	ticketManager
	f	Lcaa;	e	chunkGenerator
	f	Lxd;	f	world
	f	Ljava/lang/Thread;	g	serverThread
	f	Lxg;	h	lightProvider
	f	Lxb$a;	i	mainThreadExecutor
	f	Lcrl;	j	persistentStateManager
	f	J	k	lastMobSpawningTime
	f	Z	l	spawnMonsters
	f	Z	m	spawnAnimals
	f	[J	n	chunkPosCache
	f	[Lcae;	o	chunkStatusCache
	f	[Lbzy;	p	chunkCache
	m	(Lxd;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;Lcmo;Ljava/util/concurrent/Executor;Lcaa;ILxm;Ljava/util/function/Supplier;)V	<init>	<init>
		p	5	workerExecutor	workerExecutor
	m	(J)Lwo;	a	getChunkHolder
		p	1	pos	pos
	m	(Lxe;)V	a	updateCameraPosition
		p	1	player	player
	m	(Z)V	a	save
		p	1	flush	flush
	m	(JLjava/util/function/Function;)Z	a	method_20585
		p	1	pos	pos
	m	(Lakq;Llt;)V	a	sendToNearbyPlayers
		p	1	entity	entity
		p	2	packet	packet
	m	(Lwo;I)Z	a	isMissingForLevel
		p	1	holder	holder
		p	2	maxLevel	maxLevel
	m	(I)V	a	applyViewDistance
		p	1	watchDistance	watchDistance
	m	()Lxg;	a	getLightingProvider
	m	(Lxi;Lbjh;ILjava/lang/Object;)V	a	addTicket
	m	(IILcae;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFutureSyncOnMainThread
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	(Lakq;Llt;)V	b	sendToOtherNearbyPlayers
	m	(Lfk;)V	b	markForUpdate
		p	1	pos	pos
	m	()I	b	getTotalChunksLoadedCount
	m	(Lxi;Lbjh;ILjava/lang/Object;)V	b	removeTicket
	m	(Lakq;)V	c	unloadEntity
	m	()Lbjw;	c	getWorld
	m	(IILcae;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFuture
		p	1	chunkX	chunkX
		p	2	chunkZ	chunkZ
		p	3	leastStatus	leastStatus
		p	4	create	create
	m	(Lakq;)V	d	loadEntity
	m	()Z	d	executeQueuedTasks
	m	()Lcaa;	g	getChunkGenerator
	m	()I	h	getLoadedChunkCount
	m	()Lcrl;	i	getPersistentStateManager
	m	()Lasr;	j	getPointOfInterestStorage
	m	()V	m	initChunkCaches
	m	()Z	n	tick
	m	()V	o	tickChunks
c	xb$a	net/minecraft/server/world/ServerChunkManager$MainThreadExecutor
c	xc	net/minecraft/server/network/EntityTrackerEntry
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lxd;	b	world
	f	Lakq;	c	entity
	f	I	d	tickInterval
	f	Z	e	alwaysUpdateVelocity
	f	Ljava/util/function/Consumer;	f	receiver
	f	J	g	lastX
	f	J	h	lastY
	f	J	i	lastZ
	f	I	j	lastYaw
	f	I	k	lastPitch
	f	I	l	lastHeadPitch
	f	Lcvl;	m	velocity
	f	I	n	trackingTick
	f	I	o	updatesWithoutVehicle
	f	Ljava/util/List;	p	lastPassengers
	f	Z	q	hadVehicle
	f	Z	r	lastOnGround
	m	(Lxd;Lakq;IZLjava/util/function/Consumer;)V	<init>	<init>
		p	1	world	world
		p	2	entity	entity
		p	3	tickInterval	tickInterval
		p	4	alwaysUpdateVelocity	alwaysUpdateVelocity
		p	5	receiver	receiver
	m	(Llt;)V	a	sendSyncPacket
		c	Sends a packet for synchronization with watcher and tracked player (if applicable)
	m	(Lxe;)V	a	stopTracking
		p	1	player	player
	m	()V	a	tick
	m	(Ljava/util/function/Consumer;)V	a	sendPackets
		p	1	sender	sender
	m	(Lxe;)V	b	startTracking
		p	1	player	player
	m	()Lcvl;	b	getLastPos
		c	Decodes lastX/Y/Z into a position vector
	m	()V	c	syncEntityData
		c	Synchronizes tracked data and attributes
	m	()V	d	storeEncodedCoordinates
		c	Stores the tracked entity's current coordinates encoded as lastX/Y/Z
c	xd	net/minecraft/server/world/ServerWorld
	f	Lnet/minecraft/server/MinecraftServer;	A	server
	f	Lcrn;	B	worldSaveHandler
	f	Z	C	allPlayersSleeping
	f	I	D	idleTimeout
	f	Lbki;	E	portalForcer
	f	Lbkj;	F	blockTickScheduler
	f	Lbkj;	G	fluidTickScheduler
	f	Ljava/util/Set;	H	entityNavigations
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	I	pendingBlockActions
	f	Z	J	insideTick
	f	Layd;	K	wanderingTraderManager
	f	Z	a	ticking
	f	Z	b	savingDisabled
	f	Lazp;	c	raidManager
	f	Lorg/apache/logging/log4j/Logger;	u	LOGGER
	f	Ljava/util/List;	v	globalEntities
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	w	entitiesById
	f	Ljava/util/Map;	x	entitiesByUuid
	f	Ljava/util/Queue;	y	entitiesToLoad
	f	Ljava/util/List;	z	players
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Lcrn;Lcrm;Lcbi;Laio;Lxm;)V	<init>	<init>
		p	1	server	server
		p	2	workerExecutor	workerExecutor
		p	3	worldSaveHandler	worldSaveHandler
		p	4	properties	properties
		p	5	dimensionType	dimensionType
		p	6	profiler	profiler
		p	7	worldGenerationProgressListener	worldGenerationProgressListener
	m	()Lasr;	B	getPointOfInterestStorage
	m	()Lazp;	C	getRaidManager
	m	(Lcal;)V	a	unloadEntities
		p	1	chunk	chunk
	m	(Lavy;)V	a	addLightning
	m	(Lbkm;)V	a	tickFluid
		p	1	tick	tick
	m	(Ljava/lang/String;Lfk;IZ)Lfk;	a	locateStructure
	m	(Lgd;)Z	a	isNearOccupiedPointOfInterest
	m	(Lcal;I)V	a	tickChunk
		p	1	chunk	chunk
		p	2	randomTickSpeed	randomTickSpeed
	m	(Lakq;)V	a	tickEntity
	m	(Lxe;ZDDDLlt;)Z	a	sendToPlayerIfNearby
		p	1	player	player
		p	2	force	force
		p	3	x	x
		p	5	y	y
		p	7	z	z
		p	9	packet	packet
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1	shouldKeepTicking	shouldKeepTicking
	m	(Lgt;DDDIDDDD)I	a	spawnParticles
		p	1	particle	particle
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	count	count
		p	9	deltaX	deltaX
		p	11	deltaY	deltaY
		p	13	deltaZ	deltaZ
		p	15	speed	speed
	m	(Lfk;)Lfk;	a	method_18210
		p	1	pos	pos
	m	(Ljava/util/UUID;)Lakq;	a	getEntity
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1	predicate	predicate
	m	(Labs;ZZ)V	a	save
		p	1	progressListener	progressListener
		p	2	flush	flush
	m	(Ljava/io/Writer;)V	a	exportBlockEntities
	m	(Lfk;I)Z	a	isNearOccupiedPointOfInterest
		p	1	pos	pos
		p	2	maxDistance	maxDistance
	m	(Laku;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(IIZ)Z	a	setChunkForced
		p	1	x	x
		p	2	z	z
		p	3	forced	forced
	m	(Laso;Lakq;Lall;)V	a	handleInteraction
		p	1	interaction	interaction
		p	3	observer	observer
	m	(Lxe;)V	a	onPlayerTeleport
		p	1	player	player
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	exportEntities
	m	(Lxe;Lgt;ZDDDIDDDD)Z	a	spawnParticles
		p	1	viewer	viewer
		p	2	particle	particle
		p	3	force	force
		p	4	x	x
		p	6	y	y
		p	8	z	z
		p	10	count	count
		p	11	deltaX	deltaX
		p	13	deltaY	deltaY
		p	15	deltaZ	deltaZ
		p	17	speed	speed
	m	(Lbka;)V	a	init
		p	1	levelInfo	levelInfo
	m	()V	ac	resetWeather
	m	()V	ad	sendBlockActions
	m	()Z	b	isInsideTick
	m	(Lgd;)I	b	getOccupiedPointOfInterestDistance
		p	1	pos	pos
	m	(Lxe;)V	b	onPlayerChangeDimension
		p	1	player	player
	m	(Lbkm;)V	b	tickBlock
		p	1	tick	tick
	m	(Lakq;)V	b	checkChunk
	m	(Lfk;)Z	b_	isNearOccupiedPointOfInterest
		p	1	pos	pos
	m	(Lxe;)V	c	onPlayerConnected
		p	1	player	player
	m	(Lfk;)Lazn;	c_	getRaidAt
		p	1	pos	pos
	m	(Lxe;)V	d	onPlayerRespawned
		p	1	player	player
	m	(Lakq;)Z	d	tryLoadEntity
		p	1	entity	entity
	m	(Lfk;)Z	e	hasRaidAt
		p	1	pos	pos
	m	(Lxe;)V	e	removePlayer
		p	1	player	player
	m	(Lakq;)V	e	onDimensionChanged
		p	1	entity	entity
	m	(Lxe;)V	f	addPlayer
		p	1	player	player
	m	(Lakq;)Z	f	loadEntity
		p	1	entity	entity
	m	()V	g	placeBonusChest
	m	(Lakq;)V	g	unloadEntity
		p	1	entity	entity
	m	()Lfk;	h	getForcedSpawnPoint
	m	(Lakq;)V	h	removeEntity
	m	()V	i_	updatePlayersSleeping
	m	()Ljava/util/List;	j	getAliveEnderDragons
	m	()Lta;	j_	getScoreboard
	m	(Lakq;)Z	k	addEntity
		p	1	entity	entity
	m	()Lxe;	k	getRandomAlivePlayer
	m	(Lakq;)Z	l	checkUuid
		p	1	entity	entity
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	l	getMobCountsByCategory
	m	()V	l_	resetIdleTimeout
	m	()Lxb;	m	getChunkManager
	m	(Lakq;)V	m	loadEntityUnchecked
		p	1	entity	entity
	m	()V	m_	saveLevel
	m	()Lbkj;	n	getBlockTickScheduler
	m	(Lakq;)V	n	removeEntityFromChunk
		p	1	entity	entity
	m	()Lbkj;	n_	getFluidTickScheduler
	m	()Lbki;	o_	getPortalForcer
	m	()Lcmo;	r	getStructureManager
	m	()V	v	checkSessionLock
	m	()Lcrn;	w	getSaveHandler
	m	()Lcrl;	x	getPersistentStateManager
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	z	getForcedChunks
c	xe	net/minecraft/server/network/ServerPlayerEntity
	f	Lxv;	b	networkHandler
	f	Lorg/apache/logging/log4j/Logger;	bR	LOGGER
	f	Ljava/lang/String;	bS	clientLanguage
	f	Ljava/util/List;	bT	removedEntities
	f	Lsv;	bU	advancementTracker
	f	Laan;	bV	statHandler
	f	F	bW	lastHealthScore
	f	I	bX	lastFoodScore
	f	I	bY	lastAirScore
	f	I	bZ	lastArmorScore
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	I	ca	lastLevelScore
	f	I	cb	lastExperienceScore
	f	F	cc	syncedHealth
	f	I	cd	syncedFoodLevel
	f	Z	ce	syncedSaturationIsZero
	f	I	cf	syncedExperience
	f	Layh;	ch	clientChatVisibility
	f	J	cj	lastActionTime
	f	Lakq;	ck	cameraEntity
	f	Z	cl	inTeleportationState
	f	Z	cm	seenCredits
	f	Laam;	cn	recipeBook
	f	Lcvl;	co	levitationStartPos
	f	I	cp	levitationStartTick
	f	Lcvl;	cr	enteredNetherPos
	f	Lgd;	cs	cameraPosition
	f	I	ct	containerSyncId
	f	Lxf;	d	interactionManager
	f	I	f	pingMilliseconds
	f	Z	g	notInAnyWorld
	m	(Lnet/minecraft/server/MinecraftServer;Lxd;Lcom/mojang/authlib/GameProfile;Lxf;)V	<init>	<init>
		p	1	server	server
		p	2	world	world
		p	3	profile	profile
		p	4	interactionManager	interactionManager
	m	()Laan;	A	getStatHandler
	m	()Laam;	B	getRecipeBook
	m	()Lakq;	D	getCameraEntity
	m	()J	F	getLastActionTime
	m	()Z	H	isInTeleportationState
	m	()V	I	onTeleportationDone
	m	()Lsv;	J	getAdvancementTracker
	m	()Lgd;	K	getCameraPosition
	m	(I)V	a	setExperiencePoints
	m	(Ljava/lang/String;Ljava/lang/String;[Lcwo;)V	a	updateScoreboardScore
		p	1	playerName	playerName
		p	2	team	team
	m	(Lcwo;I)V	a	updateScores
		p	1	criterion	criterion
		p	2	score	score
	m	(Lban;)V	a	openContainer
		p	1	container	container
	m	(Lxd;DDDFF)V	a	teleport
		p	1	targetWorld	targetWorld
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	8	yaw	yaw
		p	9	pitch	pitch
	m	(Lbwl;)V	a	sendBlockEntityUpdate
	m	(Lbjh;Llt;Llt;)V	a	sendInitialChunkPackets
	m	(Lgd;)V	a	setCameraPosition
		p	1	cameraPosition	cameraPosition
	m	(Lpr;)V	a	setClientSettings
	m	(Llf;Lld;)V	a	sendChatMessage
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	sendResourcePackUrl
		p	1	url	url
		p	2	hash	hash
	m	(Lxe;Z)V	a	copyFrom
		p	1	oldPlayer	oldPlayer
		p	2	alive	alive
	m	(Lbjh;)V	a	sendUnloadChunkPacket
	m	(DZ)V	a	handleFall
		p	1	heightDifference	heightDifference
		p	3	onGround	onGround
	m	(Lxd;)V	a	moveToSpawn
		p	1	world	world
	m	(Lxd;)V	b	dimensionChanged
		p	1	targetWorld	targetWorld
	m	(I)V	b	setExperienceLevel
		p	1	level	level
	m	(Lakq;)V	c	onStoppedTracking
	m	(Lakq;)V	d	onStartedTracking
	m	(Lakq;)V	e	setCameraEntity
		p	1	entity	entity
	m	()Z	eC	isPvpEnabled
	m	()V	eD	incrementContainerSyncId
	m	()V	i	playerTick
	m	()V	m	closeCurrentScreen
	m	()V	p	markHealthDirty
	m	()Lxd;	s	getServerWorld
	m	()Ljava/lang/String;	v	getServerBrand
	m	()Layh;	x	getClientChatVisibility
	m	()V	z	updateLastActionTime
c	xf	net/minecraft/server/network/ServerPlayerInteractionManager
	f	Lxd;	a	world
	f	Lxe;	b	player
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lbjt;	d	gameMode
	f	Z	e	mining
	f	I	f	startMiningTime
	f	Lfk;	g	miningPos
	f	I	h	tickCounter
	f	Z	i	failedToMine
	f	Lfk;	j	failedMiningPos
	f	I	k	failedStartMiningTime
	f	I	l	blockBreakingProgress
	m	(Lxd;)V	<init>	<init>
		p	1	world	world
	m	(Layj;Lbjw;Lben;Lajk;Lcvg;)Lajl;	a	interactBlock
		p	1	player	player
		p	2	world	world
		p	3	stack	stack
		p	4	hand	hand
		p	5	hitResult	hitResult
	m	(Lxd;)V	a	setWorld
		p	1	world	world
	m	(Lbjt;)V	a	setGameMode
	m	(Lbyj;Lfk;I)F	a	continueMining
	m	(Lfk;Lqj$a;Ljava/lang/String;)V	a	finishMining
		p	3	reason	reason
	m	(Layj;Lbjw;Lben;Lajk;)Lajl;	a	interactItem
		p	1	player	player
		p	2	world	world
		p	3	stack	stack
		p	4	hand	hand
	m	()V	a	update
	m	(Lfk;)Z	a	tryBreakBlock
	m	(Lfk;Lqj$a;Lfp;I)V	a	processBlockBreakingAction
		p	1	pos	pos
		p	2	action	action
		p	3	direction	direction
		p	4	worldHeight	worldHeight
	m	(Lbjt;)V	b	setGameModeIfNotPresent
	m	()Lbjt;	b	getGameMode
	m	()Z	c	isSurvivalLike
	m	()Z	d	isCreative
c	xg	net/minecraft/server/world/ServerLightingProvider
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Laiv;	b	processor
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	c	pendingTasks
	f	Lwp;	d	chunkStorage
	f	Laiu;	e	executor
	f	I	f	taskBatchSize
	m	(Lcan;Lwp;ZLaiv;Laiu;)V	<init>	<init>
		p	2	chunkStorage	chunkStorage
		p	4	processor	processor
		p	5	executor	executor
	m	()V	B_	tick
	m	(IILjava/util/function/IntSupplier;Lxg$a;Ljava/lang/Runnable;)V	a	enqueue
		p	1	x	x
		p	2	z	z
		p	3	completedLevelSupplier	completedLevelSupplier
		p	4	stage	stage
		p	5	task	task
	m	(Lbjh;)V	a	updateChunkStatus
		p	1	pos	pos
	m	(I)V	a	setTaskBatchSize
		p	1	taskBatchSize	taskBatchSize
	m	(Lbzy;Z)Ljava/util/concurrent/CompletableFuture;	a	light
		p	1	chunk	chunk
	m	(IILxg$a;Ljava/lang/Runnable;)V	a	enqueue
		p	1	x	x
		p	2	z	z
		p	3	stage	stage
		p	4	task	task
	m	()V	b	runTasks
c	xg$a	net/minecraft/server/world/ServerLightingProvider$Stage
c	xh	net/minecraft/server/world/ChunkTicket
	f	Lxi;	a	type
	f	I	b	level
	f	Ljava/lang/Object;	c	argument
	f	J	d	tickCreated
	m	(Lxi;ILjava/lang/Object;)V	<init>	<init>
		p	1	type	type
		p	2	level	level
		p	3	argument	argument
	m	(Lxh;)I	a	compareTo
	m	(J)V	a	setTickCreated
		p	1	tickCreated	tickCreated
	m	()Lxi;	a	getType
	m	()I	b	getLevel
	m	(J)Z	b	isExpired
		p	1	currentTick	currentTick
	m	(Ljava/lang/Object;)I	compareTo	compareTo
		p	1	that	that
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	obj	obj
c	xi	net/minecraft/server/world/ChunkTicketType
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Comparator;	j	argumentComparator
	f	J	k	expiryTicks
	m	(Ljava/lang/String;Ljava/util/Comparator;J)V	<init>	<init>
		p	1	name	name
		p	3	expiryTicks	expiryTicks
	m	()Ljava/util/Comparator;	a	getArgumentComparator
	m	(Ljava/lang/String;Ljava/util/Comparator;)Lxi;	a	create
		p	0	name	name
	m	(Ljava/lang/String;Ljava/util/Comparator;I)Lxi;	a	create
		p	0	name	name
		p	2	expiryTicks	expiryTicks
	m	()J	b	getExpiryTicks
c	xj	net/minecraft/world/ChunkRegion
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	chunks
	f	I	c	centerChunkX
	f	I	d	centerChunkZ
	f	I	e	width
	f	Lxd;	f	world
	f	J	g	seed
	f	I	h	seaLevel
	f	Lcrm;	i	levelProperties
	f	Ljava/util/Random;	j	random
	f	Lcbh;	k	dimension
	f	Lcbq;	l	generatorSettings
	f	Lbkl;	m	blockTickScheduler
	f	Lbkl;	n	fluidTickScheduler
	f	Lbkv;	o	biomeAccess
	m	(Lxd;Ljava/util/List;)V	<init>	<init>
		p	1	world	world
		p	2	chunks	chunks
	m	()I	a	getCenterChunkX
	m	()I	b	getCenterChunkZ
	m	(Lfk;)V	e	markBlockForPostProcessing
	m	()Lxd;	h	getWorld
c	xk	net/minecraft/world/MultiTickScheduler
	f	Ljava/util/function/Function;	a	mapper
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1	mapper	mapper
c	xm	net/minecraft/server/WorldGenerationProgressListener
	m	(Lbjh;)V	a	start
		p	1	spawnPos	spawnPos
	m	(Lbjh;Lcae;)V	a	setChunkStatus
		p	1	pos	pos
		p	2	status	status
	m	()V	b	stop
c	xn	net/minecraft/server/WorldGenerationProgressListenerFactory
	m	(I)Lxm;	create	create
		p	1	radius	radius
c	xo	net/minecraft/server/WorldGenerationProgressLogger
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	totalCount
	f	I	c	generatedCount
	f	J	d	startTime
	f	J	e	nextMessageTime
	m	(I)V	<init>	<init>
		p	1	radius	radius
	m	()I	c	getProgressPercentage
c	xp	net/minecraft/server/QueueingWorldGenerationProgressListener
	f	Lxm;	a	progressListener
	f	Laiv;	b	queue
	m	(Lxm;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1	progressListener	progressListener
c	xq	net/minecraft/client/gui/WorldGenerationProgressTracker
	f	Lxo;	a	progressLogger
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	chunkStatuses
	f	Lbjh;	c	spawnPos
	f	I	d	centerSize
	f	I	e	radius
	f	I	f	size
	f	Z	g	isRunning
	m	(I)V	<init>	<init>
		p	1	radius	radius
	m	(II)Lcae;	a	getChunkStatus
		p	1	x	x
		p	2	z	z
	m	()V	a	start
	m	()I	c	getCenterSize
	m	()I	d	getSize
	m	()I	e	getProgressPercentage
c	xs	net/minecraft/network/LegacyQueryHandler
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lxu;	b	networkIo
	m	(Lxu;)V	<init>	<init>
		p	1	networkIo	networkIo
	m	(Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	toBuffer
		p	1	s	s
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	reply
		p	1	ctx	ctx
		p	2	buf	buf
c	xt	net/minecraft/server/network/IntegratedServerHandshakeNetworkHandler
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Lkt;	b	connection
c	xu	net/minecraft/server/ServerNetworkIo
	f	Labn;	a	DEFAULT_CHANNEL
	f	Labn;	b	EPOLL_CHANNEL
	f	Z	c	active
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1	server	server
	m	(Ljava/net/InetAddress;I)V	a	bind
		p	1	address	address
		p	2	port	port
	m	()Ljava/net/SocketAddress;	a	bindLocal
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
c	xv	net/minecraft/server/network/ServerPlayNetworkHandler
	f	I	A	teleportRequestTick
	f	Z	B	floating
	f	I	C	floatingTicks
	f	Z	D	ridingEntity
	f	I	E	vehicleFloatingTicks
	f	I	F	movePacketsCount
	f	I	G	lastTickMovePacketsCount
	f	Lkt;	a	connection
	f	Lxe;	b	player
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	I	e	ticks
	f	J	f	lastKeepAliveTime
	f	Z	g	waitingForKeepAlive
	f	J	h	keepAliveId
	f	I	i	messageCooldown
	f	I	j	creativeItemDropThreshold
	f	Lit/unimi/dsi/fastutil/ints/Int2ShortMap;	k	transactions
	f	D	l	lastTickX
	f	D	m	lastTickY
	f	D	n	lastTickZ
	f	D	o	updatedX
	f	D	p	updatedY
	f	D	q	updatedZ
	f	Lakq;	r	topmostRiddenEntity
	f	D	s	lastTickRiddenX
	f	D	t	lastTickRiddenY
	f	D	u	lastTickRiddenZ
	f	D	v	updatedRiddenX
	f	D	w	updatedRiddenY
	f	D	x	updatedRiddenZ
	f	Lcvl;	y	requestedTeleportPos
	f	I	z	requestedTeleportId
	m	(DDDFFLjava/util/Set;)V	a	teleportRequest
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(Llt;)V	a	sendPacket
	m	(DDDFF)V	a	requestTeleport
		p	1	x	x
		p	3	y	y
		p	5	z	z
		p	7	yaw	yaw
		p	8	pitch	pitch
	m	(Llt;Lio/netty/util/concurrent/GenericFutureListener;)V	a	sendPacket
	m	(Lqe;)Z	b	validateVehicleMove
	m	(Lqd;)Z	b	validatePlayerMove
	m	(Llf;)V	b	disconnect
		p	1	reason	reason
	m	()V	b	tick
	m	(Ljava/lang/String;)V	c	executeCommand
	m	()V	c	syncWithPlayerPosition
	m	()Z	d	isServerOwner
c	xw	net/minecraft/server/network/ServerHandshakeNetworkHandler
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Lkt;	b	connection
c	xx	net/minecraft/server/network/ServerLoginNetworkHandler
	f	Lkt;	a	connection
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	authenticatorThreadId
	f	Lorg/apache/logging/log4j/Logger;	c	LOGGER
	f	Ljava/util/Random;	d	RANDOM
	f	[B	e	nonce
	f	Lnet/minecraft/server/MinecraftServer;	f	server
	f	Lxx$a;	g	state
	f	I	h	loginTicks
	f	Lcom/mojang/authlib/GameProfile;	i	profile
	f	Ljavax/crypto/SecretKey;	k	secretKey
	f	Lxe;	l	clientEntity
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile;	a	toOfflineProfile
		p	1	profile	profile
	m	(Llf;)V	b	disconnect
		p	1	reason	reason
	m	()V	b	tick
	m	()V	c	acceptPlayer
	m	()Ljava/lang/String;	d	getConnectionInfo
c	xx$a	net/minecraft/server/network/ServerLoginNetworkHandler$State
c	xy	net/minecraft/server/network/ServerQueryNetworkHandler
	f	Llf;	a	REQUEST_HANDLED
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lkt;	c	connection
	f	Z	d	responseSent
c	y	net/minecraft/advancement/criterion/Criterions
	f	Lau;	A	EFFECTS_CHANGED
	f	Lci;	B	USED_TOTEM
	f	Lbu;	C	NETHER_TRAVEL
	f	Lbe;	D	FISHING_ROD_HOOKED
	f	Lan;	E	CHANNELED_LIGHTNING
	f	Lbz;	F	SHOT_CROSSBOW
	f	Lbl;	G	KILLED_BY_CROSSBOW
	f	Lbq;	H	HERO_OF_THE_VILLAGE
	f	Lbq;	I	VOLUNTARY_EXILE
	f	Lbk;	J	SAFELY_HARVEST_HONEY
	f	Lcb;	K	SLIDE_DOWN_BLOCK
	f	Lai;	L	BEE_NEST_DESTROYED
	f	Ljava/util/Map;	M	VALUES
	f	Lbg;	a	IMPOSSIBLE
	f	Lbm;	b	PLAYER_KILLED_ENTITY
	f	Lbm;	c	ENTITY_KILLED_PLAYER
	f	Lax;	d	ENTER_BLOCK
	f	Lbh;	e	INVENTORY_CHANGED
	f	Lby;	f	RECIPE_UNLOCKED
	f	Lbw;	g	PLAYER_HURT_ENTITY
	f	Lba;	h	ENTITY_HURT_PLAYER
	f	Lav;	i	ENCHANTED_ITEM
	f	Lbd;	j	FILLED_BUCKET
	f	Lal;	k	BREWED_POTION
	f	Lao;	l	CONSTRUCT_BEACON
	f	Lch;	m	USED_ENDER_EYE
	f	Lcd;	n	SUMMONED_ENTITY
	f	Lak;	o	BRED_ANIMALS
	f	Lbq;	p	LOCATION
	f	Lbq;	q	SLEPT_IN_BED
	f	Laq;	r	CURED_ZOMBIE_VILLAGER
	f	Lcg;	s	VILLAGER_TRADE
	f	Lbi;	t	ITEM_DURABILITY_CHANGED
	f	Lbn;	u	LEVITATION
	f	Lam;	v	CHANGED_DIMENSION
	f	Lcf;	w	TICK
	f	Lce;	x	TAME_ANIMAL
	f	Lbv;	y	PLACED_BLOCK
	f	Lap;	z	CONSUME_ITEM
	m	(Lab;)Lab;	a	register
		p	0	object	object
	m	(Lsm;)Lab;	a	getById
		p	0	id	id
	m	()Ljava/lang/Iterable;	a	getAllCriterions
c	yb	net/minecraft/resource/AbstractFileResourcePack
	f	Ljava/io/File;	a	base
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	m	(Ljava/io/File;)V	<init>	<init>
		p	1	base	base
	m	(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;	a	relativize
		p	0	base	base
		p	1	target	target
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	openFile
		p	1	name	name
	m	(Lyi;Ljava/io/InputStream;)Ljava/lang/Object;	a	parseMetadata
		p	0	metaReader	metaReader
		p	1	inputStream	inputStream
	m	(Ljava/lang/String;)Z	c	containsFile
		p	1	name	name
	m	(Lyf;Lsm;)Ljava/lang/String;	c	getFilename
		p	0	type	type
		p	1	id	id
	m	(Ljava/lang/String;)V	d	warnNonLowercaseNamespace
		p	1	namespace	namespace
c	yc	net/minecraft/resource/ZipResourcePack
	f	Lcom/google/common/base/Splitter;	b	TYPE_NAMESPACE_SPLITTER
	f	Ljava/util/zip/ZipFile;	c	file
	m	()Ljava/util/zip/ZipFile;	b	getZipFile
c	yd	net/minecraft/resource/DirectoryResourcePack
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Z	c	IS_WINDOWS
	f	Lcom/google/common/base/CharMatcher;	d	BACKSLASH_MATCHER
	m	(Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	findFiles
		p	1	file	file
		p	2	maxDepth	maxDepth
		p	3	namespace	namespace
		p	4	found	found
		p	5	prefix	prefix
		p	6	pathFilter	pathFilter
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	isValidPath
		p	0	file	file
		p	1	filename	filename
	m	(Ljava/lang/String;)Ljava/io/File;	e	getFile
		p	1	name	name
c	ye	net/minecraft/resource/ResourcePack
	m	(Lyf;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection;	a	findResources
		p	1	type	type
		p	2	namespace	namespace
		p	3	prefix	prefix
		p	4	maxDepth	maxDepth
		p	5	pathFilter	pathFilter
	m	(Lyi;)Ljava/lang/Object;	a	parseMetadata
		p	1	metaReader	metaReader
	m	()Ljava/lang/String;	a	getName
	m	(Lyf;)Ljava/util/Set;	a	getNamespaces
		p	1	type	type
	m	(Lyf;Lsm;)Ljava/io/InputStream;	a	open
		p	1	type	type
		p	2	id	id
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	openRoot
		p	1	fileName	fileName
	m	(Lyf;Lsm;)Z	b	contains
		p	1	type	type
		p	2	id	id
c	yf	net/minecraft/resource/ResourceType
	f	Ljava/lang/String;	c	directory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	name	name
	m	()Ljava/lang/String;	a	getDirectory
c	yg	net/minecraft/resource/ResourceNotFoundException
	m	(Ljava/io/File;Ljava/lang/String;)V	<init>	<init>
		p	1	packSource	packSource
		p	2	resource	resource
c	yh	net/minecraft/resource/DefaultResourcePack
	f	Ljava/nio/file/Path;	a	resourcePath
	f	Ljava/lang/Class;	b	resourceClass
	f	Ljava/util/Set;	c	namespaces
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Ljava/util/Map;	e	typeToFileSystem
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1	namespaces	namespaces
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getInputStream
		p	1	path	path
	m	(Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	getIdentifiers
		p	1	maxDepth	maxDepth
		p	2	namespace	namespace
		p	4	searchLocation	searchLocation
	m	(Ljava/lang/String;Ljava/net/URL;)Z	a	isValidUrl
		p	0	fileName	fileName
		p	1	url	url
	m	(Lyf;Lsm;)Ljava/io/InputStream;	c	findInputStream
		p	1	type	type
		p	2	id	id
	m	(Lyf;Lsm;)Ljava/lang/String;	d	getPath
		p	0	type	type
		p	1	id	id
c	yi	net/minecraft/resource/metadata/ResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1	json	json
	m	()Ljava/lang/String;	a	getKey
c	yj	net/minecraft/resource/metadata/PackResourceMetadata
	f	Lyk;	a	READER
	f	Llf;	b	description
	f	I	c	packFormat
	m	(Llf;I)V	<init>	<init>
		p	1	description	description
		p	2	format	format
	m	()Llf;	a	getDescription
	m	()I	b	getPackFormat
c	yk	net/minecraft/resource/metadata/PackResourceMetadataReader
	m	(Lcom/google/gson/JsonObject;)Lyj;	b	fromJson
c	yo	net/minecraft/resource/FileResourcePackProvider
	f	Ljava/io/FileFilter;	a	POSSIBLE_PACK
	f	Ljava/io/File;	b	packsFolder
	m	(Ljava/io/File;)V	<init>	<init>
		p	1	packsFolder	packsFolder
	m	(Ljava/io/File;)Ljava/util/function/Supplier;	a	createResourcePack
		p	1	file	file
c	yp	net/minecraft/resource/ResourcePackCompatibility
	f	Llf;	d	notification
	f	Llf;	e	confirmMessage
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3	translationSuffix	translationSuffix
	m	(I)Lyp;	a	from
		p	0	packVersion	packVersion
	m	()Z	a	isCompatible
	m	()Llf;	b	getNotification
	m	()Llf;	c	getConfirmMessage
c	yq	net/minecraft/resource/ResourcePackManager
	f	Ljava/util/Set;	a	providers
	f	Ljava/util/Map;	b	profiles
	f	Ljava/util/List;	c	enabled
	f	Lyt$b;	d	profileFactory
	m	(Lyt$b;)V	<init>	<init>
		p	1	factory	factory
	m	()V	a	scanPacks
	m	(Ljava/util/Collection;)V	a	setEnabledProfiles
		p	1	enabled	enabled
	m	(Lyr;)V	a	registerProvider
		p	1	provider	provider
	m	(Ljava/lang/String;)Lyt;	a	getProfile
		p	1	name	name
	m	()Ljava/util/Collection;	b	getProfiles
	m	()Ljava/util/Collection;	c	getDisabledProfiles
	m	()Ljava/util/Collection;	d	getEnabledProfiles
	m	()V	e	sort
c	yr	net/minecraft/resource/ResourcePackProvider
	m	(Ljava/util/Map;Lyt$b;)V	a	register
		p	1	registry	registry
		p	2	factory	factory
c	ys	net/minecraft/resource/VanillaDataPackProvider
	f	Lyh;	a	pack
c	yt	net/minecraft/resource/ResourcePackProfile
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lyj;	b	BROKEN_PACK_META
	f	Ljava/lang/String;	c	name
	f	Ljava/util/function/Supplier;	d	packGetter
	f	Llf;	e	displayName
	f	Llf;	f	description
	f	Lyp;	g	compatibility
	f	Lyt$a;	h	position
	f	Z	i	alwaysEnabled
	f	Z	j	pinned
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lye;Lyj;Lyt$a;)V	<init>	<init>
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	pack	pack
		p	5	metadata	metadata
		p	6	direction	direction
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Llf;Llf;Lyp;Lyt$a;Z)V	<init>	<init>
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	displayName	displayName
		p	5	description	description
		p	6	compatibility	compatibility
		p	7	direction	direction
		p	8	pinned	pinned
	m	(Z)Llf;	a	getInformationText
		p	1	enabled	enabled
	m	()Llf;	a	getDisplayName
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lyt$b;Lyt$a;)Lyt;	a	of
		p	0	name	name
		p	1	alwaysEnabled	alwaysEnabled
		p	2	packFactory	packFactory
		p	3	containerFactory	containerFactory
		p	4	insertionPosition	insertionPosition
	m	()Llf;	b	getDescription
	m	()Lyp;	c	getCompatibility
	m	()Lye;	d	createResourcePack
	m	()Ljava/lang/String;	e	getName
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
	m	()Z	f	isAlwaysEnabled
	m	()Z	g	isPinned
	m	()Lyt$a;	h	getInitialPosition
c	yt$a	net/minecraft/resource/ResourcePackProfile$InsertionPosition
	m	()Lyt$a;	a	inverse
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
		p	1	items	items
		p	2	item	item
		p	3	profileGetter	profileGetter
		p	4	listInversed	listInversed
c	yt$b	net/minecraft/resource/ResourcePackProfile$Factory
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lye;Lyj;Lyt$a;)Lyt;	create	create
		p	1	name	name
		p	2	alwaysEnabled	alwaysEnabled
		p	3	packFactory	packFactory
		p	4	pack	pack
		p	5	meta	meta
		p	6	insertionPosition	insertionPosition
c	yv	net/minecraft/resource/NamespaceResourceManager
	f	Ljava/util/List;	a	packList
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Lyf;	c	type
	f	Ljava/lang/String;	d	namespace
	m	(Lyf;Ljava/lang/String;)V	<init>	<init>
		p	1	type	type
		p	2	namespace	namespace
	m	(Lye;)V	a	addPack
		p	1	pack	pack
	m	(Lsm;Lye;)Ljava/io/InputStream;	a	open
		p	1	id	id
		p	2	pack	pack
	m	(Lsm;)Lsm;	d	getMetadataPath
		p	0	id	id
	m	(Lsm;)V	e	validate
		p	1	id	id
	m	(Lsm;)Z	f	isPathAbsolute
		p	1	id	id
c	yv$a	net/minecraft/resource/NamespaceResourceManager$DebugInputStream
	f	Ljava/lang/String;	a	leakMessage
	f	Z	b	closed
	m	(Ljava/io/InputStream;Lsm;Ljava/lang/String;)V	<init>	<init>
		p	1	parent	parent
		p	2	id	id
		p	3	packName	packName
c	yw	net/minecraft/resource/ResourceReloadListener
	m	(Lyw$a;Lzb;Laio;Laio;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1	synchronizer	synchronizer
		p	2	manager	manager
		p	3	prepareProfiler	prepareProfiler
		p	4	applyProfiler	applyProfiler
		p	5	prepareExecutor	prepareExecutor
		p	6	applyExecutor	applyExecutor
	m	()Ljava/lang/String;	i	getName
c	yw$a	net/minecraft/resource/ResourceReloadListener$Synchronizer
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	whenPrepared
		p	1	preparedObject	preparedObject
c	yx	net/minecraft/resource/ProfilingResourceReloader
	f	Lorg/apache/logging/log4j/Logger;	d	LOGGER
	f	Lcom/google/common/base/Stopwatch;	e	reloadTimer
	m	(Lzb;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1	manager	manager
		p	2	listeners	listeners
		p	3	prepareExecutor	prepareExecutor
		p	4	applyExecutor	applyExecutor
	m	(Ljava/util/concurrent/Executor;Lyw$a;Lzb;Lyw;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	method_18355
		p	4	prepareExecutor	prepareExecutor
		p	5	applyExecutor	applyExecutor
	m	(Ljava/util/List;)V	a	finish
		p	1	summaries	summaries
c	yx$a	net/minecraft/resource/ProfilingResourceReloader$Summary
	f	Ljava/lang/String;	a	name
	f	Lain;	b	prepareProfile
	f	Lain;	c	applyProfile
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	prepareTimeMs
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	applyTimeMs
	m	(Ljava/lang/String;Lain;Lain;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	<init>	<init>
		p	1	name	name
		p	2	prepareProfile	prepareProfile
		p	3	applyProfile	applyProfile
		p	4	prepareTimeMs	prepareTimeMs
		p	5	applyTimeMs	applyTimeMs
c	yy	net/minecraft/resource/ResourceReloadMonitor
	m	()Ljava/util/concurrent/CompletableFuture;	a	whenComplete
	m	()F	b	getProgress
	m	()Z	c	isPrepareStageComplete
	m	()Z	d	isApplyStageComplete
	m	()V	e	throwExceptions
c	yz	net/minecraft/resource/ReloadableResourceManager
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;	a	beginReload
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	packs	packs
		p	4	initialStage	initialStage
	m	(Lyw;)V	a	registerListener
		p	1	listener	listener
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lyy;	a	beginMonitoredReload
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	initialStage	initialStage
		p	4	packs	packs
c	z	net/minecraft/advancement/AdvancementCriterion
	f	Lac;	a	conditions
	m	(Lac;)V	<init>	<init>
		p	1	conditions	conditions
	m	(Lkv;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lz;	a	deserialize
		p	0	obj	obj
		p	1	context	context
	m	()Lac;	a	getConditions
	m	(Ljava/util/Map;Lkv;)V	a	serialize
		p	0	criteria	criteria
		p	1	buf	buf
	m	(Lkv;)Lz;	b	createNew
		p	0	buf	buf
	m	()Lcom/google/gson/JsonElement;	b	toJson
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/util/Map;	b	fromJson
		p	0	obj	obj
		p	1	context	context
	m	(Lkv;)Ljava/util/Map;	c	fromPacket
		p	0	buf	buf
c	za	net/minecraft/resource/Resource
	m	(Lyi;)Ljava/lang/Object;	a	getMetadata
		p	1	metaReader	metaReader
	m	()Lsm;	a	getId
	m	()Ljava/io/InputStream;	b	getInputStream
	m	()Ljava/lang/String;	d	getResourcePackName
c	zb	net/minecraft/resource/ResourceManager
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	findResources
		p	1	resourceType	resourceType
		p	2	pathPredicate	pathPredicate
	m	(Lsm;)Lza;	a	getResource
		p	1	id	id
	m	()Ljava/util/Set;	a	getAllNamespaces
	m	(Lsm;)Z	b	containsResource
		p	1	id	id
	m	(Lsm;)Ljava/util/List;	c	getAllResources
		p	1	id	id
c	zc	net/minecraft/resource/SynchronousResourceReloadListener
	m	(Lzb;)V	a	apply
		p	1	manager	manager
c	zd	net/minecraft/resource/JsonDataLoader
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	I	b	FILE_SUFFIX_LENGTH
	f	Lcom/google/gson/Gson;	c	gson
	f	Ljava/lang/String;	d	dataType
	m	(Lcom/google/gson/Gson;Ljava/lang/String;)V	<init>	<init>
		p	1	gson	gson
		p	2	dataType	dataType
	m	(Lzb;Laio;)Ljava/util/Map;	a	prepare
c	ze	net/minecraft/resource/SinglePreparationResourceReloadListener
	m	(Ljava/lang/Object;Lzb;Laio;)V	a	apply
		p	1	loader	loader
		p	2	manager	manager
		p	3	profiler	profiler
	m	(Lzb;Laio;)Ljava/lang/Object;	b	prepare
		p	1	manager	manager
		p	2	profiler	profiler
c	zf	net/minecraft/resource/ResourceReloader
	f	Lzb;	a	manager
	f	Ljava/util/concurrent/CompletableFuture;	b	prepareStageFuture
	f	Ljava/util/concurrent/CompletableFuture;	c	applyStageFuture
	f	Ljava/util/Set;	d	waitingListeners
	f	I	e	listenerCount
	f	I	f	applyingCount
	f	I	g	appliedCount
	f	Ljava/util/concurrent/atomic/AtomicInteger;	h	preparingCount
	f	Ljava/util/concurrent/atomic/AtomicInteger;	i	preparedCount
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lzb;Ljava/util/List;Lzf$a;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	manager	manager
		p	4	listeners	listeners
		p	5	creator	creator
		p	6	initialStage	initialStage
	m	(Lzb;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lzf;	a	create
		p	0	manager	manager
		p	1	listeners	listeners
		p	2	prepareExecutor	prepareExecutor
		p	3	applyExecutor	applyExecutor
		p	4	initialStage	initialStage
c	zf$a	net/minecraft/resource/ResourceReloader$Factory
	m	(Lyw$a;Lzb;Lyw;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	create	create
		p	1	helper	helper
		p	2	manager	manager
		p	3	listener	listener
		p	4	prepareExecutor	prepareExecutor
		p	5	applyExecutor	applyExecutor
c	zg	net/minecraft/resource/ReloadableResourceManagerImpl
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	namespaceManagers
	f	Ljava/util/List;	c	listeners
	f	Ljava/util/List;	d	initialListeners
	f	Ljava/util/Set;	e	namespaces
	f	Lyf;	f	type
	f	Ljava/lang/Thread;	g	mainThread
	m	(Lyf;Ljava/lang/Thread;)V	<init>	<init>
		p	1	type	type
		p	2	mainThread	mainThread
	m	(Lye;)V	a	addPack
		p	1	pack	pack
	m	()V	b	clear
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Lyy;	b	beginReloadInner
		p	1	prepareExecutor	prepareExecutor
		p	2	applyExecutor	applyExecutor
		p	3	listeners	listeners
		p	4	initialStage	initialStage
c	zg$a	net/minecraft/resource/ReloadableResourceManagerImpl$FailedResourceReloadMonitor
	f	Lzg$b;	a	exception
	f	Ljava/util/concurrent/CompletableFuture;	b	future
	m	(Lzg$b;)V	<init>	<init>
		p	1	exception	exception
c	zg$b	net/minecraft/resource/ReloadableResourceManagerImpl$PackAdditionFailedException
	f	Lye;	a	pack
	m	(Lye;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	pack	pack
		p	2	cause	cause
	m	()Lye;	a	getPack
c	zh	net/minecraft/resource/ResourceImpl
	f	Ljava/util/concurrent/Executor;	a	RESOURCE_IO_EXECUTOR
	f	Lorg/apache/logging/log4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	packName
	f	Lsm;	d	id
	f	Ljava/io/InputStream;	e	inputStream
	f	Ljava/io/InputStream;	f	metaInputStream
	f	Z	g	readMetadata
	f	Lcom/google/gson/JsonObject;	h	metadata
	m	(Ljava/lang/String;Lsm;Ljava/io/InputStream;Ljava/io/InputStream;)V	<init>	<init>
		p	1	packName	packName
		p	2	id	id
		p	3	inputStream	inputStream
		p	4	metaInputStream	metaInputStream
	m	()Z	c	hasMetadata
	m	(Ljava/lang/Object;)Z	equals	equals
		p	1	o	o
c	zj	net/minecraft/server/BanEntry
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/util/Date;	b	creationDate
	f	Ljava/lang/String;	c	source
	f	Ljava/util/Date;	d	expiryDate
	f	Ljava/lang/String;	e	reason
	m	(Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	2	creationDate	creationDate
		p	3	source	source
		p	4	expiryDate	expiryDate
		p	5	reason	reason
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpiryDate
	m	()Ljava/lang/String;	d	getReason
	m	()Llf;	e	toText
c	zk	net/minecraft/util/UserCache
	f	Ljava/text/SimpleDateFormat;	a	EXPIRATION_DATE_FORMAT
	f	Lcom/google/gson/Gson;	b	gson
	f	Z	c	useRemote
	f	Ljava/util/Map;	d	byName
	f	Ljava/util/Map;	e	byUuid
	f	Ljava/util/Deque;	f	byAccessTime
	f	Lcom/mojang/authlib/GameProfileRepository;	g	profileRepository
	f	Ljava/io/File;	h	cacheFile
	f	Ljava/lang/reflect/ParameterizedType;	i	ENTRY_LIST_TYPE
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V	<init>	<init>
		p	1	profileRepository	profileRepository
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	a	add
		p	1	profile	profile
	m	(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	a	findByName
	m	(Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile;	a	getByUuid
	m	(I)Ljava/util/List;	a	getLastAccessedEntries
	m	(Z)V	a	setUseRemote
		p	0	value	value
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	a	findProfileByName
		p	0	repository	repository
		p	1	name	name
	m	()V	b	load
	m	(Ljava/util/UUID;)Lzk$a;	b	getEntry
	m	()V	c	save
	m	()Z	d	shouldUseRemote
c	zk$1	net/minecraft/util/UserCache$1
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	zk$a	net/minecraft/util/UserCache$Entry
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Ljava/util/Date;	c	expirationDate
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	()Ljava/util/Date;	b	getExpirationDate
c	zk$b	net/minecraft/util/UserCache$JsonConverter
	m	(Lzk$a;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lzk$a;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	zl	net/minecraft/server/BannedIpList
	m	(Ljava/lang/String;)Z	a	isBanned
		p	1	ip	ip
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
		p	1	ip	ip
	m	(Ljava/net/SocketAddress;)Lzm;	b	get
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	stringifyAddress
c	zm	net/minecraft/server/BannedIpEntry
	m	(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1	ip	ip
		p	2	created	created
		p	3	source	source
		p	4	expiry	expiry
		p	5	reason	reason
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	ip	ip
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	getIpFromJson
		p	0	json	json
c	zn	net/minecraft/server/ServerConfigHandler
	f	Ljava/io/File;	a	BANNED_IPS_FILE
	f	Ljava/io/File;	b	BANNED_PLAYERS_FILE
	f	Ljava/io/File;	c	OPERATORS_FILE
	f	Ljava/io/File;	d	WHITE_LIST_FILE
	f	Lorg/apache/logging/log4j/Logger;	e	LOGGER
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/lang/String;	a	getPlayerUuidByName
		p	0	minecraftServer	minecraftServer
		p	1	name	name
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	processSimpleListFile
		p	0	file	file
		p	1	valueMap	valueMap
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertBannedPlayers
		p	0	minecraftServer	minecraftServer
	m	(Lwd;)Z	a	convertPlayerFiles
		p	0	minecraftServer	minecraftServer
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupProfile
		p	0	minecraftServer	minecraftServer
		p	1	bannedPlayers	bannedPlayers
		p	2	callback	callback
	m	()Z	b	checkListConversionSuccess
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertBannedIps
		p	0	minecraftServer	minecraftServer
	m	(Ljava/io/File;)V	b	createDirectory
		p	0	directory	directory
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	b	stringToDate
		p	0	string	string
		p	1	fallback	fallback
	m	(Ljava/io/File;)V	c	markFileConverted
		p	0	file	file
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOperators
		p	0	minecraftServer	minecraftServer
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhitelist
		p	0	minecraftServer	minecraftServer
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	checkSuccess
		p	0	minecraftServer	minecraftServer
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	checkPlayerConversionSuccess
		p	0	minecraftServer	minecraftServer
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getLevelPlayersFolder
		p	0	minecraftServer	minecraftServer
c	zn$1	net/minecraft/server/ServerConfigHandler$1
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	zn$2	net/minecraft/server/ServerConfigHandler$2
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	zn$3	net/minecraft/server/ServerConfigHandler$3
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	zn$4	net/minecraft/server/ServerConfigHandler$4
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	zn$5	net/minecraft/server/ServerConfigHandler$5
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	a	getPlayerFileName
		p	1	profile	profile
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	convertPlayerFile
		p	1	playerDataFolder	playerDataFolder
		p	2	fileName	fileName
		p	3	uuid	uuid
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
		p	1	profile	profile
		p	2	exception	exception
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
		p	1	profile	profile
c	zn$a	net/minecraft/server/ServerConfigHandler$ServerConfigException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1	title	title
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1	title	title
		p	2	other	other
c	zo	net/minecraft/server/PlayerManager
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	BANNED_PLAYERS_FILE
	f	Ljava/io/File;	c	BANNED_IPS_FILE
	f	Ljava/io/File;	d	OPERATORS_FILE
	f	Ljava/io/File;	e	WHITELIST_FILE
	f	I	f	maxPlayers
	f	Ljava/text/SimpleDateFormat;	g	DATE_FORMATTER
	f	Lnet/minecraft/server/MinecraftServer;	h	server
	f	Ljava/util/List;	i	players
	f	Ljava/util/Map;	j	playerMap
	f	Lzt;	k	bannedProfiles
	f	Lzl;	l	bannedIps
	f	Lzp;	m	ops
	f	Lzv;	n	whitelist
	f	Ljava/util/Map;	o	statisticsMap
	f	Ljava/util/Map;	p	advancementTrackers
	f	Lcrs;	q	saveHandler
	f	Z	r	whitelistEnabled
	f	I	s	viewDistance
	f	Lbjt;	t	gameMode
	f	Z	u	cheatsAllowed
	f	I	v	latencyUpdateTimer
	m	(Lnet/minecraft/server/MinecraftServer;I)V	<init>	<init>
		p	1	server	server
		p	2	maxPlayers	maxPlayers
	m	(Layj;)Laan;	a	createStatHandler
		p	1	player	player
	m	(Llt;)V	a	sendToAll
	m	(Lbjt;)V	a	setGameMode
	m	(Lxe;Lxe;Lbjx;)V	a	setGameMode
		p	1	player	player
		p	2	oldPlayer	oldPlayer
		p	3	world	world
	m	(Lxe;I)V	a	sendCommandTree
		p	1	player	player
		p	2	permissionLevel	permissionLevel
	m	(Lcom/mojang/authlib/GameProfile;)V	a	addToOperators
	m	(Lxd;)V	a	setMainWorld
		p	1	world	world
	m	(Ljava/util/UUID;)Lxe;	a	getPlayer
		p	1	uuid	uuid
	m	(I)V	a	setViewDistance
		p	1	viewDistance	viewDistance
	m	(Lta;Lxe;)V	a	sendScoreboard
		p	1	scoreboard	scoreboard
		p	2	player	player
	m	(Llf;)V	a	sendToAll
	m	(Ljava/lang/String;)Lxe;	a	getPlayer
	m	(Z)V	a	setWhitelistEnabled
		p	1	whitelistEnabled	whitelistEnabled
	m	(Lxe;Lxd;)V	a	sendWorldInfo
		p	1	player	player
		p	2	world	world
	m	(Llt;Lcbi;)V	a	sendToDimension
		p	1	packet	packet
		p	2	dimension	dimension
	m	(Layj;DDDDLcbi;Llt;)V	a	sendToAround
		p	1	player	player
		p	2	x	x
		p	4	y	y
		p	6	z	z
		p	10	dimension	dimension
	m	(Lkt;Lxe;)V	a	onPlayerConnect
		p	1	connection	connection
		p	2	player	player
	m	(Llf;Z)V	a	broadcastChatMessage
		p	2	system	system
	m	(Lxe;Lcbi;Z)Lxe;	a	respawnPlayer
		p	1	player	player
		p	2	dimension	dimension
		p	3	alive	alive
	m	(Lxe;)Ljt;	a	loadPlayerData
		p	1	player	player
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Llf;	a	checkCanJoin
	m	()V	a	reloadWhitelist
	m	(Layj;Llf;)V	a	sendToTeam
		p	1	source	source
	m	(Lcom/mojang/authlib/GameProfile;)V	b	removeFromOperators
	m	(Lxe;)V	b	savePlayerData
		p	1	player	player
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersByIp
	m	(Layj;Llf;)V	b	sendToOtherTeams
		p	1	source	source
	m	(Z)V	c	setCheatsAllowed
		p	1	cheatsAllowed	cheatsAllowed
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lxe;)V	c	remove
		p	1	player	player
	m	()V	d	updatePlayerLatency
	m	(Lxe;)V	d	sendCommandTree
		p	1	player	player
	m	(Lcom/mojang/authlib/GameProfile;)Z	e	isWhitelisted
	m	()[Ljava/lang/String;	e	getPlayerNames
	m	(Lxe;)V	e	method_14594
		p	1	player	player
	m	(Lcom/mojang/authlib/GameProfile;)Z	f	canBypassPlayerLimit
	m	(Lxe;)Lsv;	f	getAdvancementTracker
		p	1	player	player
	m	(Lcom/mojang/authlib/GameProfile;)Lxe;	g	createPlayer
		p	1	profile	profile
	m	()Lzt;	g	getUserBanList
	m	(Lcom/mojang/authlib/GameProfile;)Z	h	isOperator
	m	()Lzl;	h	getIpBanList
	m	()V	i	saveAllPlayerData
	m	()Lzv;	j	getWhitelist
	m	()[Ljava/lang/String;	k	getWhitelistedNames
	m	()Lzp;	l	getOpList
	m	()[Ljava/lang/String;	m	getOpNames
	m	()I	n	getCurrentPlayerCount
	m	()I	o	getMaxPlayerCount
	m	()Z	p	isWhitelistEnabled
	m	()I	q	getViewDistance
	m	()Ljt;	r	getUserData
	m	()V	s	disconnectAllPlayers
	m	()Ljava/util/List;	t	getPlayerList
	m	()V	u	onDataPacksReloaded
	m	()Z	v	areCheatsAllowed
c	zp	net/minecraft/server/OperatorList
	m	(Lcom/mojang/authlib/GameProfile;)Z	b	isOp
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	c	toString
c	zq	net/minecraft/server/OperatorEntry
	f	I	a	permissionLevel
	f	Z	b	bypassPlayerLimit
	m	(Lcom/mojang/authlib/GameProfile;IZ)V	<init>	<init>
		p	1	profile	profile
		p	2	permissionLevel	permissionLevel
		p	3	bypassPlayerLimit	bypassPlayerLimit
	m	()I	a	getPermissionLevel
	m	()Z	b	canBypassPlayerLimit
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	getProfileFromJson
		p	0	json	json
c	zr	net/minecraft/server/ServerConfigEntry
	f	Ljava/lang/Object;	a	object
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	()Z	f	isInvalid
	m	()Ljava/lang/Object;	g	getKey
c	zs	net/minecraft/server/ServerConfigList
	f	Lorg/apache/logging/log4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
	f	Z	e	enabled
	m	(Z)V	a	setEnabled
		p	1	enabled	enabled
	m	(Lcom/google/gson/JsonObject;)Lzr;	a	fromJson
	m	()[Ljava/lang/String;	a	getNames
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	toString
		p	1	profile	profile
	m	(Lzr;)V	a	add
	m	(Ljava/lang/Object;)Lzr;	b	get
	m	(Lzr;)V	b	removeEntry
	m	()Z	b	isEnabled
	m	()Ljava/io/File;	c	getFile
	m	(Ljava/lang/Object;)V	c	remove
	m	(Ljava/lang/Object;)Z	d	contains
	m	()Z	d	isEmpty
	m	()Ljava/util/Collection;	e	values
	m	()V	f	save
	m	()V	g	load
	m	()V	h	removeInvalidEntries
c	zs$a	net/minecraft/server/ServerConfigList$DeSerializer
	m	(Lzr;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lzr;	a	deserialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	deserialize	deserialize
		p	1	functionJson	functionJson
		p	2	unused	unused
		p	3	context	context
	m	(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	serialize	serialize
		p	1	entry	entry
		p	2	unused	unused
		p	3	context	context
c	zt	net/minecraft/server/BannedPlayerList
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	contains
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	toString
c	zu	net/minecraft/server/BannedPlayerEntry
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1	profile	profile
		p	2	created	created
		p	3	source	source
		p	4	expiry	expiry
		p	5	reason	reason
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1	profile	profile
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	getProfileFromJson
		p	0	json	json
c	zv	net/minecraft/server/Whitelist
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isAllowed
		p	1	profile	profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	toString
c	zw	net/minecraft/server/WhitelistEntry
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	deserializeProfile
		p	0	json	json
c	zy	net/minecraft/server/rcon/DataStreamHelper
	f	Ljava/io/ByteArrayOutputStream;	a	byteArrayOutputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
	m	(S)V	a	writeShort
	m	(I)V	a	write
	m	()[B	a	bytes
	m	(Ljava/lang/String;)V	a	writeBytes
	m	([B)V	a	write
	m	()V	b	reset
c	zz	net/minecraft/server/rcon/BufferHelper
	f	[C	a	HEX_CHARS_LOOKUP
	m	([BII)Ljava/lang/String;	a	getString
		p	0	buf	buf
	m	([BI)I	a	getIntLE
		p	0	buf	buf
		p	1	start	start
	m	(B)Ljava/lang/String;	a	toHex
		p	0	b	b
	m	([BII)I	b	getIntLE
		p	0	buf	buf
		p	1	start	start
		p	2	limit	limit
	m	([BII)I	c	getIntBE
		p	0	buf	buf
		p	1	start	start
		p	2	limit	limit
